Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.ExplicitODESystem", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_inf", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_inf", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_inf_from_corrse", "api/pharmpy.modeling.calculate_inf_from_cov", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_inf", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.copy_model", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_report", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.generate_model_code", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_database", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.ExplicitODESystem.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_inf.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_inf.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_inf_from_corrse.rst", "api/pharmpy.modeling.calculate_inf_from_cov.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_inf.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.copy_model.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_report.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.generate_model_code.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_database.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "ExplicitODESystem", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_inf", "calculate_cov_from_corrse", "calculate_cov_from_inf", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_inf_from_corrse", "calculate_inf_from_cov", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_se_from_cov", "calculate_se_from_inf", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "copy_model", "create_joint_distribution", "create_report", "create_rng", "create_symbol", "deidentify_data", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "generate_model_code", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_lag_times", "get_mdv", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_proportional_error_model", "has_random_effect", "has_zero_order_absorption", "has_zero_order_elimination", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_database", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_results", "fit", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 19, 25, 26, 27, 30, 32, 53, 54, 68, 73, 76, 77, 78, 79, 81, 82, 83, 84, 93, 99, 102, 106, 107, 108, 109, 113, 117, 122, 123, 124, 128, 144, 157, 159, 175, 184, 189, 195, 216, 221, 225, 229, 230, 231, 245, 246, 248, 249, 250, 251, 253, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 280, 281, 282], "section": [0, 250, 253, 264, 276, 280], "i": [0, 1, 2, 3, 6, 8, 19, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 46, 48, 55, 56, 65, 67, 68, 69, 71, 73, 75, 76, 78, 79, 81, 82, 83, 91, 93, 96, 99, 105, 106, 107, 108, 118, 132, 133, 146, 147, 149, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 181, 182, 185, 186, 187, 188, 195, 197, 198, 201, 203, 205, 210, 211, 214, 215, 216, 217, 223, 225, 229, 230, 231, 235, 244, 245, 246, 248, 249, 250, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 279, 280, 282], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 203, 225, 226, 227, 228, 229, 230, 231, 233, 246, 261, 264, 268, 272, 273, 277, 280, 282], "The": [0, 2, 3, 6, 8, 9, 10, 16, 19, 25, 26, 27, 30, 33, 35, 39, 41, 56, 64, 71, 72, 75, 78, 79, 80, 81, 82, 83, 101, 112, 117, 119, 120, 125, 126, 138, 153, 157, 159, 175, 212, 213, 218, 221, 249, 251, 253, 255, 260, 262, 263, 264, 267, 270, 272, 273, 280, 281], "inform": [0, 1, 2, 6, 8, 49, 50, 51, 52, 58, 59, 62, 63, 117, 246, 248, 250, 253, 256, 258, 261, 262, 263, 264, 268, 269, 273, 277, 278, 280, 281], "intend": [0, 264, 280], "non": [0, 26, 67, 71, 80, 185, 246, 255, 256, 259, 264, 266, 273, 280], "hard": [0, 273], "find": [0, 8, 30, 46, 85, 86, 117, 209, 223, 246, 250, 262, 264, 281, 282], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 251, 253, 255, 258, 260, 261, 263, 264, 266, 267, 268, 269, 277], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 246, 250, 252, 253, 254, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 273, 274, 276, 277, 278, 279, 281], "develop": [0, 211, 246, 264, 272, 273, 280, 282], "remov": [0, 2, 9, 27, 30, 76, 106, 107, 108, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 168, 179, 190, 192, 211, 245, 246, 248, 253, 256, 261, 263, 264, 270, 281], "row": [0, 1, 2, 26, 78, 79, 91, 94, 96, 154, 155, 222, 244, 248, 253, 255, 259, 261, 263, 267, 269, 277, 278], "split": [0, 71, 185, 239, 246, 248, 268, 280], "drop": [0, 2, 6, 76, 77, 191, 246, 269, 273, 278], "column": [0, 1, 2, 6, 8, 10, 16, 26, 32, 39, 44, 56, 75, 76, 77, 78, 79, 80, 84, 93, 94, 96, 99, 133, 134, 137, 153, 154, 160, 177, 189, 191, 201, 202, 203, 211, 215, 221, 222, 244, 246, 248, 253, 255, 259, 261, 263, 267, 268, 269, 277, 278, 280], "error": [0, 2, 11, 20, 21, 25, 27, 30, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 115, 119, 120, 125, 136, 144, 157, 159, 174, 175, 177, 180, 196, 205, 220, 223, 228, 244, 246, 253, 258, 261, 262, 263, 266, 269, 270, 277, 278, 280, 281], "handl": [0, 3, 84, 184, 246, 255, 256, 259, 262, 273], "valid": [0, 27, 246, 264, 268], "some": [0, 8, 10, 61, 71, 144, 157, 227, 244, 246, 248, 251, 253, 255, 262, 264, 265, 266, 268, 269, 272, 273, 277, 280, 282], "rule": [0, 65, 264], "These": [0, 251, 256, 259, 264, 265, 268, 272, 273, 280], "were": [0, 27, 30, 220, 244, 245, 246, 255, 258, 259, 264, 269, 280, 282], "test": [0, 2, 121, 212, 213, 215, 217, 218, 246, 248, 252, 253, 258, 260, 261, 263, 267, 269, 273, 277], "7": [0, 1, 2, 35, 49, 51, 52, 57, 59, 62, 79, 91, 96, 108, 110, 203, 244, 245, 253, 255, 259, 261, 263, 264, 265, 266, 267, 269, 274, 276, 277, 278, 279], "4": [0, 1, 2, 6, 49, 51, 52, 57, 59, 62, 78, 79, 80, 81, 82, 83, 91, 94, 96, 97, 108, 188, 203, 218, 223, 244, 245, 253, 254, 255, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 274, 276, 277, 278, 279], "3": [0, 1, 2, 6, 30, 33, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 68, 78, 79, 80, 81, 82, 83, 91, 94, 96, 97, 98, 100, 108, 110, 116, 118, 130, 131, 132, 136, 137, 150, 154, 155, 156, 178, 186, 187, 188, 192, 193, 195, 201, 202, 203, 222, 244, 245, 253, 254, 255, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 274, 276, 277, 278, 279, 280, 282], "delimet": 0, "between": [0, 8, 9, 27, 71, 221, 235, 244, 245, 246, 248, 258, 259, 263, 264, 270, 273, 276, 277, 281, 282], "comma": [0, 248, 280], "space": [0, 64, 211, 217, 246, 248, 280], "tab": [0, 136, 246, 271], "befor": [0, 2, 30, 155, 156, 194, 246, 248, 265, 269], "after": [0, 6, 30, 106, 107, 108, 177, 209, 220, 223, 227, 245, 246, 248, 254, 259, 264, 265, 266, 269, 273, 274, 276, 278, 279, 282], "ar": [0, 2, 3, 4, 6, 8, 26, 27, 30, 36, 37, 39, 42, 56, 71, 75, 94, 105, 130, 146, 147, 151, 159, 162, 163, 174, 185, 189, 195, 205, 212, 214, 216, 217, 225, 227, 244, 246, 248, 249, 250, 251, 253, 255, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 282], "give": [0, 26, 105, 132, 156, 244, 246, 248, 253, 259, 263, 264, 278], "sic": 0, "begin": [0, 259, 266, 268], "end": [0, 36, 46, 259, 264, 266, 268, 280], "insert": [0, 246], "each": [0, 2, 8, 27, 33, 35, 55, 56, 57, 78, 79, 80, 81, 82, 83, 91, 96, 97, 108, 131, 134, 135, 153, 156, 166, 227, 244, 245, 248, 250, 253, 255, 256, 258, 259, 261, 263, 264, 266, 267, 268, 269, 270, 276, 277, 278, 279, 280, 282], "can": [0, 1, 2, 6, 10, 19, 26, 30, 48, 56, 64, 73, 80, 117, 153, 184, 209, 213, 216, 227, 230, 231, 244, 245, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 277, 280, 281, 282], "onli": [0, 2, 3, 8, 10, 14, 27, 35, 53, 54, 65, 68, 76, 78, 79, 81, 82, 83, 102, 109, 113, 131, 153, 184, 194, 216, 223, 235, 246, 248, 249, 253, 263, 264, 268, 269, 272, 280, 282], "numer": [0, 6, 14, 31, 78, 79, 81, 82, 244, 246, 255, 266, 273], "e": [0, 6, 19, 27, 68, 74, 106, 107, 108, 132, 147, 161, 217, 244, 246, 251, 255, 258, 259, 261, 263, 264, 266, 268, 269, 270, 273, 277, 280, 282], "other": [0, 7, 9, 19, 27, 30, 69, 135, 216, 239, 244, 249, 251, 256, 261, 264, 273], "charact": [0, 10, 255], "than": [0, 25, 26, 261, 264, 269], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 27, 35, 205, 211, 225, 226, 229, 230, 238, 246, 253, 264, 269, 273, 280], "except": [0, 11, 12, 20, 21, 22, 37, 56, 153, 246, 264], "ii": [0, 6], "datx": [0, 246], "fortran": 0, "short": [0, 251, 264], "form": [0, 24, 27, 153, 212, 246, 264], "exponenti": [0, 35, 37, 42, 166, 248, 253, 259, 268], "notat": [0, 282], "2": [0, 1, 2, 6, 8, 19, 30, 33, 35, 36, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 78, 79, 80, 81, 82, 83, 91, 94, 96, 97, 100, 102, 108, 109, 110, 111, 116, 118, 130, 131, 132, 136, 137, 150, 154, 155, 156, 157, 159, 164, 167, 169, 170, 173, 175, 176, 178, 181, 185, 187, 188, 192, 193, 195, 203, 210, 221, 244, 245, 248, 251, 253, 254, 255, 258, 259, 261, 263, 265, 266, 267, 268, 269, 270, 274, 276, 277, 278, 279, 280], "1": [0, 1, 2, 6, 7, 8, 18, 19, 23, 26, 27, 30, 33, 35, 36, 41, 43, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 75, 78, 79, 80, 81, 82, 83, 87, 88, 89, 91, 94, 96, 97, 98, 100, 102, 108, 109, 110, 111, 114, 115, 116, 118, 130, 131, 132, 133, 136, 137, 141, 144, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 174, 176, 177, 179, 182, 185, 186, 187, 188, 190, 192, 193, 195, 196, 203, 210, 211, 212, 217, 221, 244, 245, 248, 250, 251, 253, 254, 255, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 278, 279, 280, 282], "mean": [0, 2, 13, 18, 19, 23, 56, 61, 132, 154, 155, 211, 225, 229, 244, 245, 246, 248, 259, 261, 264, 266, 267, 268, 269, 273, 276, 280, 282], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 18, 19, 25, 26, 27, 30, 32, 56, 60, 61, 64, 70, 75, 80, 85, 86, 101, 105, 111, 112, 114, 115, 116, 117, 133, 134, 138, 153, 154, 155, 157, 159, 167, 168, 175, 177, 179, 208, 216, 218, 220, 223, 225, 229, 230, 235, 244, 245, 247, 248, 251, 252, 253, 255, 256, 261, 262, 263, 264, 265, 266, 268, 269, 272, 273, 277, 278, 280], "d": [0, 8, 13, 16, 18, 23, 27, 28, 30, 226, 228, 239, 264, 266], "instead": [0, 65, 80, 105, 225, 245, 246, 248, 255, 256, 258, 259, 264, 268, 273, 282], "lone": 0, "an": [0, 4, 8, 10, 15, 17, 19, 26, 27, 30, 33, 38, 39, 45, 50, 52, 63, 64, 72, 97, 99, 119, 120, 121, 125, 130, 132, 143, 153, 157, 187, 201, 202, 203, 220, 221, 223, 226, 228, 246, 248, 251, 253, 255, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 273, 276, 278, 279, 280, 282], "0": [0, 1, 2, 6, 7, 8, 15, 16, 18, 19, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 78, 79, 80, 81, 82, 83, 87, 88, 89, 91, 94, 96, 97, 98, 110, 111, 115, 116, 118, 130, 131, 132, 136, 141, 142, 145, 150, 154, 155, 156, 159, 161, 162, 163, 166, 167, 168, 174, 175, 177, 179, 185, 186, 187, 190, 193, 195, 203, 210, 211, 212, 218, 222, 223, 244, 245, 248, 251, 253, 255, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 274, 276, 277, 278, 279, 280, 282], "dot": 0, "most": [0, 6, 35, 184, 248, 253, 256, 264, 268, 276], "24": [0, 57, 91, 96, 98, 108, 110, 203, 244, 245, 253, 255, 258, 261, 263, 265, 267, 269, 276, 277, 279], "long": [0, 246, 264, 273], "count": [0, 97, 222, 229, 246, 269], "delimit": 0, "wa": [0, 28, 195, 221, 244, 246, 252, 264, 265, 277, 278], "eaten": 0, "empti": [0, 27, 220, 268], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 17, 19, 27, 28, 30, 40, 46, 65, 71, 76, 87, 88, 89, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 190, 192, 193, 194, 195, 246, 248, 249, 250, 255, 258, 261, 262, 263, 269, 270, 280, 281, 282], "As": [0, 27, 249, 250, 268, 270, 280, 282], "contain": [0, 2, 3, 27, 75, 80, 201, 202, 203, 244, 245, 248, 253, 254, 255, 256, 258, 261, 263, 264, 267, 268, 269, 274, 276, 277, 278, 279, 280], "drope": 0, "input": [0, 7, 8, 9, 10, 27, 30, 35, 37, 39, 62, 63, 70, 73, 77, 121, 126, 136, 141, 155, 166, 211, 221, 232, 246, 248, 253, 255, 258, 261, 263, 266, 268, 269, 270, 273, 277, 282], "ani": [0, 2, 8, 9, 45, 56, 67, 151, 209, 213, 222, 232, 235, 251, 255, 261, 263, 264, 266, 268, 270, 273, 280, 282], "limit": [0, 2, 66, 149, 174, 211, 246, 248, 263, 264, 271], "length": [0, 80, 81, 82, 83, 97, 98, 110, 246, 255], "If": [0, 2, 10, 19, 30, 35, 46, 56, 71, 73, 80, 93, 97, 99, 146, 147, 153, 155, 166, 174, 185, 186, 187, 188, 189, 195, 205, 214, 217, 223, 244, 248, 255, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 280, 282], "ha": [0, 2, 8, 19, 27, 71, 80, 91, 96, 119, 120, 121, 122, 123, 124, 125, 126, 128, 244, 246, 248, 249, 251, 253, 255, 256, 258, 261, 263, 264, 266, 268, 269, 275, 277, 278, 280], "more": [0, 2, 8, 26, 210, 212, 214, 215, 217, 218, 246, 248, 250, 253, 258, 260, 262, 264, 268, 269, 273, 276, 280, 281], "extra": [0, 246], "consid": [0, 2, 214, 215, 217, 246, 253, 256, 258, 261, 263, 264, 269, 277], "start": [0, 2, 8, 36, 45, 97, 133, 145, 153, 214, 246, 248, 251, 253, 255, 258, 259, 263, 264, 268, 269, 277, 278, 280, 282], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 235, 244, 246, 248, 249, 251, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 273, 277, 279, 280, 281, 282], "been": [0, 2, 6, 249, 253, 255, 264, 266, 268, 280], "provid": [0, 27, 155, 174, 248, 249, 252, 253, 255, 261, 263, 264, 268, 269, 282], "default": [0, 1, 2, 6, 7, 19, 25, 27, 32, 33, 35, 36, 37, 42, 46, 48, 55, 71, 73, 76, 101, 105, 112, 118, 126, 140, 146, 147, 149, 153, 154, 155, 157, 159, 162, 163, 166, 174, 175, 177, 185, 186, 187, 188, 197, 198, 200, 205, 210, 214, 215, 217, 223, 238, 243, 246, 248, 250, 253, 261, 263, 266, 268, 269, 270, 271, 277, 282], "where": [0, 2, 33, 41, 209, 244, 245, 246, 249, 250, 253, 255, 258, 259, 263, 264, 268, 269, 270, 273, 280, 282], "rexex": 0, "": [0, 10, 64, 141, 246, 248, 253, 255, 259, 264, 270, 274], "za": 0, "z": [0, 33], "either": [0, 2, 37, 75, 211, 212, 248, 261, 264, 266, 268, 280], "surround": 0, "two": [0, 8, 9, 27, 30, 75, 135, 244, 246, 247, 248, 264, 273, 277, 280, 282], "By": [0, 19, 27, 263, 264, 266], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 30, 46, 64, 72, 133, 143, 154, 214, 215, 216, 217, 229, 244, 245, 246, 248, 253, 258, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 277, 278, 280, 282], "interpret": [0, 246, 264], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 19, 26, 27, 28, 30, 33, 39, 48, 56, 64, 71, 73, 75, 78, 79, 80, 81, 82, 83, 105, 118, 132, 133, 140, 151, 153, 154, 155, 156, 157, 159, 164, 166, 172, 174, 175, 180, 189, 194, 196, 197, 200, 201, 202, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 229, 230, 231, 233, 238, 244, 245, 246, 248, 250, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 276, 277, 278, 280, 281], "chang": [0, 2, 9, 19, 26, 27, 36, 75, 158, 162, 164, 167, 168, 176, 179, 181, 193, 248, 251, 264, 266, 268, 269, 270, 277, 282], "howev": [0, 261, 264, 268, 270, 280, 282], "one": [0, 2, 6, 8, 9, 10, 14, 23, 25, 26, 27, 35, 68, 76, 80, 88, 137, 153, 155, 166, 180, 189, 191, 192, 196, 200, 216, 220, 222, 225, 229, 230, 233, 246, 248, 249, 251, 255, 256, 258, 259, 263, 264, 266, 268, 269, 270, 273, 280, 282], "legal": [0, 264], "ones": [0, 253, 259], "9": [0, 2, 6, 41, 57, 66, 79, 82, 91, 94, 96, 108, 110, 195, 203, 244, 245, 253, 255, 260, 261, 263, 264, 265, 267, 268, 269, 276, 277, 278, 279, 282], "sinc": [0, 6, 256, 259, 261, 268, 269, 270, 273, 282], "number": [0, 2, 6, 8, 14, 23, 25, 39, 46, 56, 61, 67, 73, 74, 75, 106, 107, 108, 110, 133, 153, 154, 155, 156, 157, 166, 173, 178, 212, 216, 218, 221, 222, 244, 246, 248, 253, 255, 264, 276, 277, 278, 280, 282], "valu": [0, 1, 6, 10, 19, 25, 26, 27, 33, 37, 42, 43, 56, 60, 61, 66, 67, 78, 79, 80, 81, 82, 83, 87, 89, 91, 94, 96, 111, 115, 116, 153, 156, 177, 193, 205, 210, 212, 214, 215, 217, 218, 223, 243, 244, 246, 248, 251, 253, 255, 258, 265, 266, 268, 277, 278, 279], "met": [0, 264], "doubl": 0, "big": 0, "warn": [0, 2, 12, 220, 228, 246, 253, 258, 261, 263, 269, 282], "larger": [0, 264], "pad": 0, "filter": [0, 106, 107, 108, 246, 255], "so": [0, 25, 153, 227, 249, 250, 251, 256, 264, 270, 276, 282], "characterscannot": 0, "neither": [0, 264], "perform": [0, 14, 68, 75, 248, 253, 264, 266, 269, 270], "order": [0, 8, 27, 30, 122, 124, 127, 128, 153, 164, 165, 170, 176, 181, 182, 211, 246, 248, 255, 264, 266, 269, 273, 280, 282], "given": [0, 2, 27, 36, 74, 78, 79, 81, 82, 83, 88, 89, 112, 114, 121, 126, 138, 146, 147, 154, 155, 156, 177, 183, 192, 193, 199, 205, 227, 229, 246, 248, 251, 253, 255, 258, 259, 261, 263, 264, 269, 270, 276, 277], "critic": [0, 249], "case": [0, 2, 71, 84, 153, 223, 246, 253, 260, 261, 263, 264, 266, 268, 269, 275, 281], "illeg": 0, "get": [0, 4, 5, 7, 8, 10, 16, 17, 27, 30, 90, 92, 93, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 115, 116, 129, 222, 246, 255, 259, 263, 264, 267, 273, 281, 282], "need": [0, 2, 37, 68, 84, 117, 246, 248, 250, 251, 252, 256, 259, 260, 264, 266, 268, 272, 273, 282], "becaus": [0, 8, 246, 264, 268], "later": [0, 260, 264], "comparison": [0, 269, 273], "It": [0, 19, 225, 249, 251, 255, 256, 260, 261, 262, 264, 266, 267, 268, 271, 276, 280, 282], "possibl": [0, 2, 6, 27, 30, 122, 123, 124, 128, 184, 214, 217, 246, 251, 255, 261, 264, 267, 268, 269, 270, 271, 273, 276, 280, 282], "done": [0, 1, 68, 69, 75, 78, 79, 81, 82, 83, 153, 249, 266, 268, 269, 271, 277], "eq": [0, 16, 268], "ne": [0, 268], "text": [0, 19, 35, 266, 273], "otherwis": [0, 6, 8, 19, 30, 33, 35, 37, 40, 68, 71, 93, 99, 118, 119, 120, 125, 130, 131, 132, 153, 164, 174, 175, 176, 177, 178, 181, 249, 255, 264, 266, 273], "appropri": [0, 19, 249, 264], "letter": [0, 118], "alphanum": 0, "underscor": 0, "real": [0, 255, 256], "special": [0, 6, 189, 255, 256, 264], "digit": [0, 67, 246], "enclos": 0, "ok": [0, 256], "w": [0, 30, 68, 118, 130, 136, 137, 144, 157, 166, 175, 177, 180, 196, 253, 264, 266, 268], "o": [0, 245, 247, 248, 252, 277], "With": [0, 280], "eqn": 0, "ge": 0, "etc": [0, 3, 246, 268, 270, 278, 280], "maximum": [0, 14, 35, 67, 212, 248, 253], "have": [0, 6, 8, 19, 27, 30, 35, 37, 75, 127, 189, 215, 222, 227, 229, 246, 248, 250, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 271, 273, 280, 282], "12": [0, 1, 57, 91, 94, 96, 97, 98, 108, 203, 244, 245, 253, 255, 258, 259, 261, 263, 264, 265, 267, 269, 274, 276, 277, 278, 279], "must": [0, 25, 39, 71, 153, 166, 225, 245, 248, 250, 264, 266, 268], "decreas": [0, 256], "within": [0, 153, 249, 264, 280], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 27, 30, 174, 244, 249, 251, 253, 256, 264, 270, 282], "affect": [0, 105, 246, 264, 270], "even": [0, 25, 74, 77, 91, 96, 250, 264, 270], "still": [0, 264, 270, 282], "cannot": [0, 8, 56, 71, 224, 246, 255, 264, 268, 280], "both": [0, 1, 2, 19, 39, 161, 222, 246, 249, 253, 255, 258, 261, 263, 264, 266, 269, 277, 280, 282], "reenter": 0, "think": 0, "risk": [0, 264], "being": [0, 6, 27, 56, 156, 157, 159, 175, 245, 246, 250, 258, 259, 264, 270, 273, 278, 282], "truncat": 0, "encod": [0, 180, 196, 246, 255, 271], "here": [0, 2, 105, 255, 256, 257, 261, 266, 268, 269, 273, 280, 281, 282], "possibli": [0, 273], "partial": [0, 248, 252, 273], "list": [0, 2, 6, 8, 10, 13, 14, 16, 18, 26, 27, 30, 33, 37, 39, 71, 75, 76, 77, 85, 86, 88, 89, 100, 101, 105, 112, 114, 129, 134, 146, 147, 153, 154, 160, 166, 174, 185, 186, 187, 188, 190, 191, 192, 193, 200, 205, 209, 210, 211, 212, 213, 215, 216, 218, 220, 221, 222, 223, 234, 244, 245, 246, 248, 249, 251, 253, 255, 258, 263, 264, 266, 268, 276, 277, 278, 280], "decid": [0, 2, 126, 261, 263, 264, 269, 277], "whether": [0, 25, 33, 35, 37, 71, 121, 126, 153, 166, 201, 203, 211, 223, 226, 238, 246, 248, 261, 264, 268, 269, 280], "put": [0, 133, 153, 256, 259], "up": [0, 249, 253, 282], "written": [0, 197, 246, 264, 266, 270, 280], "scientif": [0, 256], "14": [0, 57, 79, 91, 96, 108, 203, 244, 245, 253, 255, 261, 263, 264, 265, 267, 276, 278, 279], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 19, 97, 244, 268], "describ": [0, 2, 16, 27, 30, 56, 122, 123, 124, 127, 128, 244, 253, 255, 261, 263, 266], "output": [0, 8, 16, 19, 30, 41, 68, 118, 130, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 222, 246, 248, 251, 264, 266, 268, 280, 282], "alwai": [0, 155, 246, 255, 269], "synonym": [0, 246], "name": [0, 1, 2, 6, 7, 8, 10, 13, 14, 16, 18, 19, 23, 25, 26, 27, 31, 32, 35, 37, 38, 39, 43, 46, 56, 67, 69, 70, 71, 74, 75, 76, 81, 82, 83, 88, 92, 97, 98, 101, 103, 105, 108, 110, 112, 114, 118, 121, 129, 130, 133, 135, 140, 143, 146, 147, 152, 153, 160, 166, 171, 174, 185, 186, 187, 188, 191, 192, 205, 209, 210, 211, 215, 219, 220, 223, 225, 226, 227, 229, 230, 232, 233, 234, 235, 243, 245, 246, 248, 250, 253, 255, 261, 263, 264, 267, 268, 269, 272, 277, 278, 280, 281, 282], "avail": [0, 1, 2, 6, 33, 40, 56, 117, 130, 164, 176, 178, 181, 205, 244, 248, 250, 253, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 273, 277, 279, 280, 282], "carri": [0, 264], "over": [0, 110, 133, 153, 177, 201, 202, 203, 244, 245, 259, 263, 280], "onc": [0, 131, 253, 270], "covari": [0, 6, 10, 18, 27, 34, 35, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 71, 96, 105, 121, 129, 136, 142, 143, 154, 155, 156, 160, 212, 246, 248, 253, 255, 256, 263, 266, 273, 278, 280, 281], "final": [0, 2, 34, 142, 208, 246, 253, 258, 259, 261, 263, 264, 269, 270, 277, 278], "estim": [0, 1, 2, 14, 15, 19, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 57, 61, 66, 67, 71, 80, 87, 88, 89, 135, 136, 141, 142, 145, 150, 154, 155, 156, 157, 159, 162, 163, 164, 167, 169, 170, 174, 175, 176, 178, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 196, 200, 210, 211, 213, 223, 244, 245, 246, 248, 253, 254, 256, 258, 261, 263, 265, 269, 272, 273, 276, 277, 280, 281], "oppos": 0, "ext": [0, 246, 280], "per": [0, 6, 14, 26, 68, 106, 107, 108, 110, 154, 155, 177, 222], "est": [0, 34, 36, 45, 142, 145], "first": [0, 2, 27, 35, 40, 74, 91, 96, 122, 124, 135, 162, 164, 165, 170, 176, 178, 181, 246, 248, 253, 259, 261, 263, 264, 270, 273, 280, 282], "call": [0, 222, 235, 246, 250, 251, 264, 270, 282], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 245, 246, 248, 250, 253, 258, 261, 263, 269, 273, 274, 276, 277, 278, 280, 281], "theta": [0, 1, 30, 33, 35, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 66, 67, 68, 87, 88, 89, 111, 115, 116, 118, 130, 131, 132, 136, 137, 141, 155, 156, 167, 168, 174, 179, 180, 186, 187, 188, 190, 192, 193, 195, 196, 246, 261, 266, 267, 269, 270, 273, 277], "sigma": [0, 1, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 67, 111, 115, 116, 136, 137, 141, 155, 156, 157, 159, 175, 244, 259, 261, 266, 267, 268, 269, 270], "omega": [0, 1, 23, 27, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 71, 111, 115, 116, 136, 137, 141, 155, 156, 185, 195, 246, 248, 259, 261, 266, 267, 268, 269, 270, 276, 277], "fix": [0, 1, 2, 25, 26, 33, 43, 48, 71, 87, 88, 89, 111, 115, 116, 161, 167, 168, 179, 185, 190, 192, 193, 210, 248, 261, 264, 266, 273, 280], "offdiagon": 0, "could": [0, 19, 246, 255, 264, 268, 272, 273, 282], "part": [0, 27, 74, 244, 246, 248, 251, 252, 264, 266, 270, 273, 280], "NO": [0, 264], "probabl": 0, "same": [0, 2, 8, 10, 16, 19, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 67, 68, 71, 76, 77, 84, 87, 88, 89, 97, 118, 127, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 211, 215, 225, 227, 229, 245, 246, 248, 249, 253, 255, 258, 259, 263, 264, 266, 268, 269, 280, 282], "type": [0, 2, 6, 8, 10, 19, 29, 30, 35, 48, 112, 134, 138, 205, 211, 214, 215, 217, 243, 246, 248, 251, 253, 259, 260, 261, 262, 263, 264, 266, 268, 269, 273], "now": [0, 246, 251, 268, 270], "investig": 0, "follow": [0, 2, 35, 132, 185, 244, 246, 248, 249, 251, 253, 255, 256, 258, 260, 261, 263, 264, 266, 268, 269, 270, 272, 280, 282], "like": [0, 19, 27, 264, 268, 270, 273, 280], "One": [0, 27, 133, 134, 232, 273, 282], "last": [0, 30, 163, 223], "left": [0, 4, 56, 266, 268, 272], "justifi": 0, "size": [0, 6, 13, 153, 246, 249, 268, 273], "13": [0, 1, 2, 57, 91, 94, 96, 97, 108, 203, 244, 245, 253, 255, 258, 261, 263, 264, 265, 267, 269, 274, 276, 278, 279], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 233, 243, 244, 245, 246, 247, 249, 251, 253, 258, 259, 260, 262, 263, 264, 265, 267, 272, 273, 276, 278, 279, 281], "n": [0, 6, 18, 23, 27, 41, 71, 75, 150, 155, 156, 173, 178, 185, 187, 216, 244, 245, 246, 248, 259, 261, 266, 268], "flatten": [0, 246], "triangular": 0, "correl": [0, 49, 50, 51, 52, 58, 59, 62, 63, 66, 71, 195, 246, 276], "abov": [0, 33, 35, 37, 66, 244, 245, 253, 259, 264, 266, 282], "off": 0, "diagon": [0, 136, 246, 261, 266, 267, 269], "obj": [0, 19], "right": [0, 4, 8, 16, 264, 266, 268, 282], "also": [0, 2, 27, 77, 153, 246, 250, 251, 253, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 273, 277, 280, 282], "22": [0, 2, 57, 78, 79, 81, 82, 91, 96, 108, 110, 203, 244, 245, 253, 255, 259, 263, 265, 267, 279], "integ": [0, 6, 118, 246, 248, 280], "5": [0, 1, 2, 30, 33, 49, 51, 52, 56, 57, 59, 62, 68, 79, 80, 89, 91, 94, 96, 98, 108, 110, 118, 130, 131, 132, 136, 188, 193, 203, 221, 222, 244, 245, 253, 255, 259, 261, 263, 264, 265, 266, 267, 268, 269, 274, 276, 278, 279, 282], "expon": [0, 1, 33, 210, 248], "regular": [0, 10, 262], "take": [0, 2, 25, 73, 246, 249, 255, 258, 261, 263, 264, 268, 269, 273], "19": [0, 2, 57, 79, 91, 96, 108, 203, 244, 245, 255, 261, 265, 267, 268, 276, 278, 279], "posit": [0, 27, 155, 156, 246, 248, 249, 256], "neg": [0, 280], "For": [0, 2, 8, 35, 37, 106, 107, 108, 132, 189, 210, 212, 214, 215, 217, 218, 244, 245, 248, 250, 251, 253, 258, 259, 260, 264, 266, 268, 269, 270, 273, 280, 282], "20": [0, 57, 82, 91, 96, 108, 203, 244, 245, 253, 255, 264, 265, 267, 274, 276, 277, 278, 279], "In": [0, 71, 84, 249, 251, 253, 261, 263, 264, 266, 268, 273, 280, 282], "observ": [0, 6, 19, 40, 97, 106, 107, 108, 109, 110, 164, 176, 178, 181, 182, 221, 222, 244, 246, 259, 273, 276, 279, 281], "byte": 0, "evid": [0, 99, 246], "toward": [0, 97, 246], "token": [0, 280], "whitespac": 0, "parenthes": [0, 280], "multipl": [0, 4, 27, 30, 220, 246, 253, 256, 266, 277, 278, 280, 281], "open": [0, 249, 251, 262, 264, 271], "keyword": [0, 248], "kept": [0, 84, 246, 248, 261], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 246, 248, 250, 251, 253, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 277, 282], "csv": [0, 2, 28, 141, 197, 224, 246, 248, 253, 255, 258, 261, 263, 268, 269, 277, 280], "wgt": [0, 2, 4, 6, 10, 30, 33, 35, 68, 76, 77, 91, 96, 105, 117, 118, 130, 131, 132, 136, 137, 143, 186, 187, 188, 191, 210, 212, 255, 259, 266, 268, 270, 273, 276, 280], "23": [0, 2, 56, 57, 61, 73, 79, 91, 96, 108, 154, 155, 156, 203, 244, 245, 253, 255, 261, 263, 265, 267, 269, 278, 279], "titl": 0, "crash": [0, 246], "nmtran": [0, 6], "There": [0, 227, 258], "72": [0, 2], "includ": [0, 2, 3, 18, 23, 27, 42, 134, 223, 245, 246, 249, 253, 261, 262, 263, 264, 268, 269, 276, 278, 280], "come": [0, 251, 264], "filenam": [0, 19, 225, 229, 230, 266], "repres": [0, 4, 6, 19, 25, 26, 27, 248, 253, 255, 256, 259, 264, 266, 268], "rel": [0, 14, 246, 259], "path": [0, 1, 2, 10, 19, 28, 46, 72, 95, 138, 139, 197, 198, 199, 206, 207, 209, 211, 224, 225, 226, 227, 229, 230, 231, 233, 238, 246, 248, 250, 253, 255, 258, 261, 263, 266, 268, 269, 277, 278, 280, 282], "work": [0, 246, 249, 251, 258, 264, 266, 273], "directori": [0, 199, 209, 225, 226, 227, 246, 248, 250, 251, 266, 268, 278], "when": [0, 14, 35, 68, 246, 249, 251, 255, 263, 264, 266, 268, 270, 276, 278, 280, 282], "invok": [0, 19], "nmfe": 0, "content": [0, 1, 2, 221, 222, 253, 255, 258, 261, 263, 264, 269, 277], "simpli": [0, 25, 251, 258, 270], "seen": [0, 1, 2, 253, 255, 258, 261, 263, 269, 277], "54": [0, 57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 269, 274, 276, 279], "doe": [0, 2, 8, 46, 74, 95, 149, 225, 226, 227, 230, 231, 246, 256, 258, 261, 263, 264, 269, 270, 276, 282], "pk": [0, 2, 38, 42, 112, 136, 246, 248, 253, 261, 266, 269, 270, 280, 281], "pred": [0, 82, 136, 141, 246, 266, 267, 268, 276, 279], "simpl": [0, 1, 136, 184, 223, 266, 268, 270], "merg": [0, 246, 264], "placement": [0, 250], "place": [0, 2, 250, 264, 268, 282], "seem": 0, "restrict": [0, 227, 264], "automat": [0, 14, 33, 211, 246, 251, 253, 260, 264, 277, 280], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 31, 32, 68, 72, 73, 74, 93, 94, 99, 146, 166, 174, 199, 209, 221, 222, 225, 226, 227, 228, 229, 235, 238, 244, 245, 246, 248, 251, 254, 255, 258, 259, 261, 265, 266, 269, 273, 274, 276, 277, 278, 279, 280, 281], "continu": [0, 2, 6, 35, 246, 248, 249, 251, 253, 259, 264, 273, 280, 282], "factor": [0, 273], "compil": [0, 264], "11138": 0, "445": [0, 261], "though": [0, 264], "outsid": [0, 246, 249, 264], "standard": [0, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 63, 72, 196, 244, 246, 256, 259, 264, 270, 273, 276, 277, 279], "gfortran": 0, "8": [0, 2, 6, 49, 50, 51, 52, 57, 58, 59, 62, 63, 91, 96, 98, 108, 110, 203, 244, 245, 253, 255, 260, 261, 263, 264, 265, 266, 267, 268, 274, 276, 277, 278, 279, 282], "hh": 0, "j": [0, 187, 245, 259], "nep": 0, "h": [0, 248], "second": [0, 135, 248, 253, 270], "f": [0, 30, 68, 118, 130, 136, 137, 144, 157, 159, 166, 174, 175, 177, 196, 244, 246, 248, 252, 264, 266, 268, 270], "respect": [0, 2, 246, 249, 258, 259, 264, 268, 269, 270], "ep": [0, 30, 68, 109, 118, 130, 136, 137, 144, 157, 166, 174, 177, 196, 246, 248, 266, 268, 270], "implicit": [0, 246], "kind": [0, 6, 8, 112, 264], "dpsize": 0, "main": [0, 248, 273, 282], "function": [0, 3, 10, 14, 16, 33, 35, 53, 54, 73, 77, 78, 79, 81, 82, 83, 87, 88, 89, 102, 109, 113, 122, 123, 124, 128, 157, 159, 167, 175, 184, 189, 192, 193, 195, 199, 205, 214, 217, 232, 244, 246, 248, 251, 256, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 276, 277, 278, 280, 282], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 18, 19, 23, 27, 31, 32, 39, 56, 74, 80, 101, 111, 114, 115, 117, 126, 137, 156, 210, 211, 246, 248, 253, 255, 256, 261, 267, 268, 273, 276, 281], "doesn": [0, 30, 229, 246, 261], "t": [0, 6, 8, 16, 30, 33, 169, 170, 182, 188, 223, 229, 232, 234, 245, 246, 248, 259, 261, 266, 274, 276], "declar": [0, 2, 68, 131, 253, 280], "assign": [0, 6, 30, 68, 246, 248], "stop": 0, "entri": [0, 228], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 19, 23, 25, 26, 27, 30, 53, 54, 68, 74, 102, 105, 109, 113, 117, 131, 137, 152, 174, 211, 246, 253, 256, 268, 273], "separ": [0, 10, 71, 84, 132, 153, 185, 227, 246, 248, 251, 253, 255, 256, 259, 264, 268, 273, 280], "thnn": 0, "nn": [0, 259], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 25, 27, 264, 268], "ad": [0, 9, 35, 37, 41, 84, 214, 215, 217, 246, 248, 253, 263, 264, 270, 277, 278, 281], "x": [0, 1, 2, 26, 33, 68, 78, 79, 94, 154, 244, 253, 255, 259, 261, 263, 267, 268, 269, 271, 277, 278], "xxe": 0, "xx": 0, "string": [0, 6, 10, 27, 28, 30, 101, 105, 138, 139, 140, 141, 246, 255, 269], "tool": [1, 2, 3, 14, 45, 144, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 231, 233, 238, 243, 244, 246, 247, 248, 251, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 272, 273, 277, 281], "add": [1, 9, 14, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 84, 174, 175, 246, 248, 255, 261, 264, 269, 270, 271, 280], "allometr": [1, 2, 33, 210, 246, 248, 280], "scale": [1, 2, 6, 33, 55, 60, 64, 210, 246, 248, 259, 268, 271, 280], "pharmr": [1, 2, 3, 246, 251, 253, 256, 258, 260, 261, 262, 263, 269, 277, 281], "command": [1, 246, 251, 253, 258, 260, 261, 262, 263, 264, 268, 269, 277, 281], "line": [1, 68, 246, 253, 258, 260, 261, 262, 263, 264, 268, 269, 277, 281], "To": [1, 2, 248, 251, 253, 258, 260, 261, 263, 264, 268, 269, 271, 277, 280, 282], "initi": [1, 2, 8, 15, 16, 19, 25, 26, 33, 37, 39, 40, 41, 42, 43, 71, 73, 80, 87, 88, 89, 150, 157, 159, 164, 166, 167, 169, 170, 174, 175, 176, 178, 181, 182, 186, 187, 188, 192, 193, 194, 195, 210, 211, 234, 246, 248, 253, 258, 259, 261, 263, 264, 269, 277, 281], "python": [1, 2, 245, 246, 248, 253, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 277, 280, 281], "r": [1, 2, 28, 245, 246, 253, 255, 256, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 277, 280, 281], "read_model": [1, 140, 141, 246, 253, 255, 258, 261, 263, 266, 267, 268, 269, 277, 282], "read_modelfit_result": [1, 246, 253, 258, 261, 263, 269, 277], "run_allometri": [1, 246], "start_model": [1, 221, 253, 258, 261, 263, 269, 277, 280], "start_model_result": [1, 253, 258, 261, 263, 269, 277, 280], "re": [1, 2, 199, 207, 208, 212, 213, 217, 219, 226, 231, 233, 245, 253, 258, 261, 263, 266, 267, 268, 269, 277, 279, 280, 282], "code": [1, 19, 21, 68, 90, 105, 117, 122, 123, 124, 128, 136, 141, 174, 175, 198, 246, 253, 258, 261, 262, 263, 264, 269, 270, 272, 273, 277, 281, 282], "redefin": [1, 253, 258, 261, 263, 269, 277], "accordingli": [1, 253, 258, 261, 263, 269, 270, 277], "descript": [1, 2, 6, 19, 31, 221, 222, 223, 243, 244, 246, 250, 253, 255, 258, 261, 263, 266, 269, 273, 277, 278], "modelfitresult": [1, 2, 22, 200, 201, 202, 203, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 246, 253, 258, 261, 263, 269, 277], "allometric_vari": [1, 2, 33, 210, 211, 248], "wt": [1, 2, 30, 33, 210, 253, 278], "reference_valu": [1, 2, 33, 210, 248], "refer": [1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 68, 71, 75, 76, 77, 84, 87, 88, 89, 118, 127, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 208, 210, 211, 223, 246, 248, 253, 264, 270, 281, 282], "70": [1, 2, 33, 91, 210, 255, 276], "appli": [1, 2, 19, 157, 159, 166, 174, 175, 186, 187, 188, 210, 246, 248, 249, 255, 259, 264, 269, 276, 280, 282], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 33, 37, 42, 65, 68, 71, 75, 76, 84, 88, 89, 92, 94, 96, 98, 100, 101, 103, 111, 112, 115, 116, 118, 122, 123, 124, 126, 128, 129, 134, 137, 146, 147, 154, 155, 166, 168, 174, 179, 185, 186, 187, 188, 190, 191, 192, 193, 209, 210, 213, 214, 215, 217, 223, 225, 229, 230, 239, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 280, 282], "cl": [1, 2, 4, 8, 16, 26, 30, 33, 35, 37, 39, 41, 56, 68, 74, 85, 101, 112, 114, 118, 121, 126, 130, 131, 132, 136, 137, 143, 146, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 184, 186, 187, 188, 210, 212, 253, 259, 261, 263, 266, 268, 270], "q": [1, 33, 210, 246], "v": [1, 8, 16, 26, 30, 33, 41, 56, 68, 86, 101, 112, 117, 118, 130, 131, 132, 136, 137, 146, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 210, 212, 251, 253, 259, 263, 266, 268, 270, 279, 280], "75": [1, 33, 210, 253, 258], "lower_bound": [1, 2, 33, 210, 248], "lower": [1, 2, 25, 26, 33, 35, 43, 66, 87, 88, 89, 111, 115, 116, 149, 167, 168, 174, 179, 190, 193, 210, 211, 248, 256, 261, 266, 268], "bound": [1, 25, 26, 33, 43, 67, 156, 168, 179, 186, 187, 188, 190, 195, 210, 246, 248, 266], "upper_bound": [1, 2, 33, 210, 248], "upper": [1, 25, 26, 33, 35, 43, 87, 88, 89, 111, 115, 116, 149, 167, 168, 179, 190, 193, 210, 246, 248, 266, 268], "should": [1, 6, 14, 25, 33, 35, 37, 39, 43, 153, 166, 210, 214, 215, 217, 246, 248, 249, 250, 251, 253, 256, 259, 261, 263, 264, 265, 268, 269, 273, 277], "true": [1, 2, 6, 8, 10, 15, 19, 26, 33, 34, 55, 65, 74, 76, 84, 87, 88, 89, 105, 119, 120, 122, 123, 124, 125, 126, 128, 142, 143, 155, 161, 162, 163, 166, 174, 175, 178, 191, 192, 193, 194, 198, 203, 210, 223, 224, 246, 253, 255, 258, 261, 263, 268, 269, 270, 271, 277, 278, 279, 282], "No": [1, 6, 230, 231, 264, 269], "select": [1, 2, 153, 186, 188, 222, 244, 246, 248, 253, 261, 263, 266, 269, 271, 277, 278, 280], "see": [1, 2, 6, 8, 19, 35, 37, 203, 210, 212, 214, 215, 217, 218, 248, 249, 251, 253, 255, 256, 258, 261, 263, 264, 265, 268, 269, 270, 273, 277, 280], "about": [1, 2, 6, 249, 253, 255, 258, 260, 261, 263, 264, 268, 269, 277, 280], "actual": [1, 2, 25, 132, 253, 258, 261, 263, 264, 269, 277], "minim": [1, 2, 246, 253, 258, 261, 263, 269, 277], "statu": [1, 2, 246, 253, 256, 258, 261, 263, 264, 269, 277], "time": [1, 2, 6, 7, 9, 10, 26, 30, 33, 39, 40, 68, 76, 77, 91, 97, 98, 103, 110, 118, 129, 130, 131, 132, 133, 136, 137, 141, 148, 164, 176, 177, 178, 181, 189, 211, 218, 246, 248, 253, 258, 259, 261, 263, 264, 266, 267, 269, 270, 273, 276, 277, 279, 280], "you": [1, 2, 251, 253, 258, 260, 261, 262, 263, 264, 268, 269, 270, 273, 277, 281, 282], "look": [1, 2, 30, 46, 101, 126, 253, 258, 261, 263, 269, 270, 277, 280], "summary_model": [1, 2, 246, 253, 258, 261, 263, 269, 277, 280], "tabl": [1, 2, 55, 136, 157, 222, 244, 245, 246, 251, 253, 254, 258, 259, 261, 263, 265, 266, 269, 274, 276, 277, 278, 279, 280], "gener": [1, 2, 6, 19, 56, 61, 69, 73, 133, 153, 154, 155, 156, 232, 234, 246, 248, 253, 255, 258, 259, 261, 262, 263, 269, 272, 273, 277, 280], "summarize_modelfit_result": [1, 2, 246, 253, 258, 261, 263, 269, 277], "minimization_success": [1, 2, 223, 253, 258, 261, 263, 269, 277], "errors_found": [1, 2, 253, 258, 261, 263, 269, 277], "pheno": [1, 8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 260, 266, 268, 270, 282], "phenobarb": [1, 136, 223, 266, 268], "scaled_model": [1, 2], "warnings_found": [1, 2, 253, 258, 261, 263, 269, 277], "ofv": [1, 2, 48, 135, 201, 205, 214, 215, 217, 221, 222, 223, 246, 253, 258, 261, 263, 269, 276, 277], "aic": [1, 2, 47, 205, 214, 215, 217, 246, 261, 263, 269, 277], "bic": [1, 2, 48, 205, 214, 215, 217, 246, 248, 253, 261, 263, 269, 277, 280], "730": [1, 244, 259, 261], "894727": [1, 244, 259], "740": [1, 80, 97, 244, 255], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 223, 253, 258, 261, 263, 269, 277], "estimation_runtim": [1, 2, 253, 258, 261, 263, 269, 277], "_estim": [1, 261, 269], "32": [1, 6, 57, 91, 96, 108, 203, 244, 245, 248, 253, 255, 258, 265, 267, 276, 279], "005818": [1, 259, 268], "121955": 1, "44555": [1, 259], "111053": [1, 259, 268], "201526": [1, 259, 268], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 259, 268], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 204, 221, 225, 226, 227, 228, 229, 230, 231, 233, 244, 246, 253, 258, 259, 261, 263, 269, 274, 277, 280], "predict": [1, 2, 14, 19, 81, 82, 102, 105, 113, 134, 201, 202, 203, 221, 246, 253, 254, 261, 263, 269, 276, 277], "influenti": [1, 2, 201, 202, 222, 246, 253, 261, 263, 269, 277], "individu": [1, 2, 6, 19, 38, 55, 56, 57, 61, 71, 81, 82, 101, 102, 106, 107, 108, 110, 113, 134, 135, 146, 154, 155, 156, 194, 201, 202, 203, 221, 222, 246, 248, 253, 261, 263, 264, 269, 273, 276, 277, 281], "outlier": [1, 2, 202, 203, 222, 246, 253, 261, 263, 269, 277, 279], "summary_individuals_count": [1, 2, 253, 261, 263, 269, 277], "summarize_individuals_count_t": [1, 2, 246, 253, 261, 263, 269, 277], "parent_model": [1, 2, 19, 246, 253, 258, 261, 263, 269, 277], "inf_select": [1, 2, 222, 253, 261, 263, 269, 277], "inf_param": [1, 2, 222, 253, 261, 263, 269, 277], "out_ob": [1, 2, 222, 253, 261, 263, 269, 277], "out_ind": [1, 2, 222, 253, 261, 263, 269, 277], "inf_outli": [1, 2, 222, 253, 261, 263, 269, 277], "differ": [1, 2, 3, 19, 24, 48, 221, 223, 244, 245, 246, 249, 253, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 282], "statist": [1, 6, 56, 61, 187, 253, 255, 259, 261, 263, 266, 268, 269, 277], "summary_individu": [1, 246, 253, 261, 263, 269, 277], "summarize_individu": [1, 222, 246, 253, 261, 263, 269, 277], "outlier_count": [1, 221, 253, 261, 263, 269, 277], "dofv_vs_par": [1, 221, 253, 261, 263, 269, 277], "id": [1, 6, 10, 57, 75, 76, 77, 91, 94, 96, 97, 98, 100, 108, 110, 136, 137, 141, 154, 203, 245, 246, 248, 253, 255, 259, 261, 263, 265, 266, 267, 268, 269, 270, 277, 279], "nan": [1, 2, 94, 195, 246, 253, 255, 258, 259, 261, 263, 269, 276, 277, 278], "742852": 1, "000000": [1, 2, 43, 49, 50, 51, 58, 244, 253, 259, 261, 263, 267, 269, 277], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 26, 39, 57, 71, 79, 91, 94, 96, 97, 108, 149, 168, 179, 187, 203, 244, 245, 253, 255, 258, 259, 260, 261, 263, 264, 265, 267, 269, 276, 277, 278, 279, 280, 282], "092658": 1, "55": [1, 2, 6, 57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 269, 276, 279], "6": [1, 6, 57, 80, 91, 96, 108, 110, 203, 244, 245, 253, 255, 259, 261, 263, 264, 265, 267, 268, 269, 276, 277, 278, 279, 282], "535711": 1, "175743": 1, "56": [1, 57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 279], "764710": 1, "576072": 1, "57": [1, 57, 91, 96, 100, 108, 154, 203, 244, 245, 253, 255, 258, 259, 265, 267, 279], "975589": 1, "539779": 1, "58": [1, 57, 91, 96, 100, 108, 110, 154, 203, 244, 245, 255, 259, 265, 267, 278, 279], "194798": 1, "775689": 1, "59": [1, 57, 91, 94, 96, 98, 100, 106, 108, 110, 154, 203, 244, 245, 253, 255, 258, 259, 265, 267, 269, 279], "11": [1, 2, 57, 78, 79, 81, 91, 94, 96, 97, 108, 203, 244, 245, 253, 255, 259, 261, 263, 264, 265, 267, 268, 269, 276, 278, 279, 280], "175577": 1, "462889": 1, "predicted_dofv": [1, 221, 222, 253, 261, 263, 269, 277], "predicted_residu": [1, 221, 222, 253, 261, 263, 269, 277], "118": [1, 154, 246, 259], "fulli": [2, 280], "best": [2, 246, 253, 261, 263, 264, 269, 277, 280], "dataset": [2, 10, 11, 12, 19, 44, 56, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 93, 94, 97, 99, 100, 104, 106, 107, 108, 110, 117, 127, 133, 138, 149, 153, 160, 189, 197, 211, 215, 245, 246, 248, 251, 259, 262, 263, 268, 279, 281], "combin": [2, 4, 71, 119, 120, 125, 157, 159, 175, 185, 216, 246, 248, 253, 258, 259, 261, 264, 277, 280], "modelsearch": [2, 211, 217, 221, 246, 280], "ruvsearch": [2, 211, 218, 219, 246, 280], "covsearch": [2, 212, 246, 280], "run_amd": [2, 246, 282], "dataset_path": 2, "modeltyp": [2, 211, 248], "pk_oral": [2, 211, 248], "search_spac": [2, 211, 217, 246, 248, 269, 280], "let": [2, 14, 19, 75, 246, 253, 259, 268, 270, 280], "categor": [2, 6, 35, 246, 248, 253, 255, 259, 280, 282], "sex": [2, 249, 253, 273, 280], "ag": [2, 6, 253, 278, 280], "occas": [2, 39, 211, 215, 246, 248, 263, 268], "visi": [2, 263], "c": [2, 9, 187, 247, 252, 253, 258, 259, 263, 264, 268, 270, 277, 282], "specifi": [2, 6, 30, 37, 72, 77, 87, 89, 138, 140, 149, 157, 159, 173, 175, 193, 213, 246, 248, 258, 263, 264, 266, 268, 282], "oral": [2, 280], "drug": [2, 273], "iiv": [2, 18, 23, 27, 32, 37, 39, 42, 48, 71, 101, 126, 146, 166, 185, 211, 214, 215, 217, 246, 248, 253, 262, 263, 280], "we": [2, 249, 251, 253, 259, 260, 262, 264, 268, 270, 273, 282], "our": [2, 249, 251, 252, 264, 273], "object": [2, 3, 4, 7, 9, 10, 14, 19, 20, 26, 27, 28, 30, 31, 33, 34, 36, 43, 44, 45, 46, 47, 48, 53, 54, 60, 64, 65, 66, 67, 69, 70, 73, 74, 76, 77, 84, 87, 88, 89, 94, 102, 109, 111, 113, 115, 116, 117, 130, 132, 137, 138, 139, 140, 141, 142, 144, 145, 149, 151, 152, 157, 160, 162, 163, 167, 168, 171, 175, 177, 179, 183, 184, 189, 190, 191, 192, 193, 198, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 238, 244, 246, 248, 250, 253, 255, 256, 258, 261, 263, 264, 266, 268, 269, 270, 273, 277, 280], "build": [2, 211, 247, 248, 256, 268, 280], "pk_iv": [2, 211, 248], "cl_init": [2, 211, 248], "popul": [2, 19, 30, 43, 80, 81, 82, 102, 113, 118, 195, 211, 246, 248, 278], "clearanc": [2, 33, 85, 211, 246, 248, 253, 263, 270], "01": [2, 18, 27, 35, 174, 195, 211, 212, 248, 253, 268, 276, 278], "vc_init": [2, 211, 248], "central": [2, 7, 8, 9, 16, 30, 41, 68, 118, 130, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 211, 248, 251, 256, 266, 268], "compart": [2, 6, 8, 9, 16, 40, 41, 92, 93, 103, 148, 150, 173, 178, 211, 246, 248, 269, 280], "volum": [2, 33, 41, 86, 211, 246, 248, 253, 263, 264], "mat_init": [2, 211, 248], "absorpt": [2, 112, 127, 158, 164, 176, 178, 181, 211, 217, 221, 246, 248, 261, 263, 269, 280], "mfl": [2, 211, 212, 221, 246, 248, 253, 269], "depend": [2, 6, 19, 30, 56, 71, 75, 157, 159, 175, 246, 250, 255, 261, 270, 280, 282], "lloq": [2, 149, 211, 248], "quantif": [2, 149, 211, 248], "loq": [2, 149, 211, 248], "data": [2, 6, 19, 32, 78, 79, 80, 81, 82, 83, 96, 105, 136, 137, 141, 149, 157, 159, 161, 175, 195, 211, 222, 244, 246, 255, 259, 262, 263, 264, 266, 268, 270, 273, 280, 282], "bodi": [2, 6, 10, 249, 255, 264, 273], "weight": [2, 6, 10, 83, 180, 196, 255, 273, 277], "correspond": [2, 14, 172, 245, 253, 264, 279, 280], "datainfo": [2, 19, 77, 138, 160, 197, 246, 280, 281], "file": [2, 10, 19, 28, 46, 72, 95, 136, 138, 139, 140, 141, 197, 198, 206, 207, 224, 225, 226, 227, 229, 230, 231, 233, 246, 248, 251, 253, 258, 260, 261, 262, 263, 264, 266, 269, 270, 272, 273, 277, 280, 281], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 228, 233, 246, 250, 253, 255, 264, 266, 268], "model_typ": 2, "elimin": [2, 112, 122, 123, 124, 128, 165, 169, 170, 182, 246, 248, 269, 280], "vc": [2, 41, 150, 253, 261, 263], "mat": [2, 8, 42, 164, 176, 181, 245, 246, 247, 252, 253, 261, 263, 268, 270, 277], "proport": [2, 37, 119, 120, 125, 153, 157, 159, 174, 175, 246, 248], "step": [2, 15, 19, 34, 36, 45, 142, 145, 162, 163, 212, 223, 246, 248, 251, 253, 258, 260, 261, 263, 264, 269, 273, 277, 282], "foce": [2, 14, 15, 34, 36, 142, 162, 163, 246, 248, 258], "interact": [2, 14, 15, 34, 36, 136, 142, 162, 163, 246, 249, 258, 264, 266, 268, 273, 280, 282], "specif": [2, 14, 19, 26, 45, 77, 153, 199, 246, 248, 255, 264, 266, 269, 273, 280], "support": [2, 8, 14, 30, 36, 37, 53, 54, 69, 78, 79, 81, 82, 83, 102, 109, 113, 158, 162, 163, 176, 212, 235, 246, 248, 253, 255, 256, 258, 262, 264, 266, 268, 269, 270, 272, 273, 275, 280, 282], "nonmem": [2, 14, 68, 69, 77, 106, 107, 108, 172, 183, 216, 246, 247, 250, 251, 260, 262, 266, 267, 268, 273, 280, 281], "cmt": [2, 93, 246, 269], "rate": [2, 6, 8, 9, 17, 41, 127, 158, 164, 176, 178, 181, 246, 248, 280], "via": [2, 246, 248, 251, 260, 262, 266, 268, 270, 280, 282], "exclud": [2, 105, 221, 261, 263, 264, 269], "pleas": [2, 250, 251, 260, 264, 280, 282], "featur": [2, 251, 253, 258, 261, 262, 263, 264, 277, 281, 282], "languag": [2, 90, 136, 249, 253, 256, 264, 269], "how": [2, 3, 155, 214, 217, 246, 248, 249, 251, 253, 255, 260, 261, 263, 264, 268, 269, 270, 278, 281], "defin": [2, 8, 61, 105, 117, 127, 132, 137, 246, 253, 256, 264, 268, 279, 280], "zo": [2, 217, 221, 246, 248, 269, 280], "seq": [2, 248, 269, 280], "fo": [2, 14, 36, 162, 163, 246, 248, 258, 269, 273, 280], "mm": [2, 246, 248, 269, 280], "mix": [2, 39, 48, 124, 170, 205, 246, 256, 260, 263, 266, 269, 273, 280], "lagtim": [2, 158, 176, 269, 280], "transit": [2, 8, 173, 178, 246, 248, 269, 280], "peripher": [2, 8, 41, 150, 173, 217, 221, 246, 248, 269, 280], "cat": [2, 35, 253, 280], "iv": [2, 211, 248, 280], "note": [2, 4, 6, 25, 68, 69, 94, 106, 107, 108, 223, 224, 225, 229, 230, 244, 255, 261, 263, 267, 268, 270, 278, 282], "overriden": 2, "ignor": [2, 106, 107, 108, 136, 246, 248, 266, 268, 270], "soon": 2, "explicitli": [2, 16, 248, 263, 264], "stai": [2, 27], "vice": 2, "versa": 2, "instanc": [2, 121, 143, 253, 280], "effect": [2, 35, 37, 48, 121, 126, 143, 146, 174, 205, 212, 246, 248, 256, 260, 264, 266, 273, 278, 280, 281], "none": [2, 6, 7, 8, 9, 10, 14, 15, 17, 19, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 39, 43, 46, 48, 56, 61, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 95, 134, 138, 140, 146, 147, 149, 153, 154, 155, 156, 157, 159, 166, 172, 174, 175, 185, 186, 187, 188, 197, 200, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 225, 226, 234, 238, 246, 248, 255, 259, 261, 263, 268, 269, 280], "null": [2, 255, 261, 263, 269, 280, 282], "yield": [2, 133, 153], "workflow": [2, 3, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 246, 260, 264, 273, 280], "want": [2, 249, 251, 261, 262, 263, 264, 268, 269, 270, 272], "desir": [2, 230, 231], "subset": [2, 67, 154], "algorithm": [2, 212, 213, 214, 217, 221, 246, 248, 273, 280, 282], "six": 2, "below": [2, 251, 258, 261, 263, 264, 269, 277], "detail": [2, 210, 212, 214, 215, 217, 218, 258, 264, 269, 276, 277, 280, 281], "regard": [2, 264, 269], "subhead": 2, "distribut": [2, 18, 23, 27, 39, 41, 56, 61, 71, 112, 132, 150, 154, 155, 156, 185, 188, 215, 235, 244, 246, 248, 259, 264, 266, 269, 276, 280, 281], "term": [2, 157, 246, 261, 264, 268], "keep": [2, 14, 25, 153, 225, 246, 249, 256, 261, 264], "well": [2, 56, 253, 255, 258, 261, 263, 264, 268, 269, 276, 277, 280, 281], "iov": [2, 27, 39, 101, 126, 147, 215, 246, 248, 276, 280], "explain": [2, 253, 264, 273, 280], "ruv": [2, 166, 248], "power": [2, 35, 174, 248, 264, 273, 274, 276, 277], "vari": [2, 129, 177, 218, 246, 248, 277], "identifi": [2, 6, 32, 253, 255, 261, 264, 276, 280], "option": [2, 14, 19, 27, 35, 37, 39, 45, 70, 71, 78, 79, 81, 82, 83, 153, 205, 212, 239, 244, 246, 248, 253, 255, 261, 263, 264, 266, 269, 281, 282], "reduced_stepwis": [2, 221, 246, 269, 280], "iiv_strategi": [2, 214, 217, 246, 248, 261, 269, 280], "absorption_delai": [2, 217, 246, 269, 280], "rank_typ": [2, 205, 214, 215, 217, 248, 261, 263, 269, 280], "cutoff": [2, 177, 201, 202, 203, 205, 214, 215, 217, 246, 248, 261, 263, 269, 280], "brute_forc": [2, 214, 246, 261], "fullblock": [2, 214, 217, 246, 261, 269], "tri": [2, 248, 269], "list_of_paramet": [2, 37, 39, 215, 248, 263], "random": [2, 3, 13, 18, 19, 23, 27, 39, 48, 56, 61, 73, 75, 114, 117, 126, 154, 155, 156, 246, 248, 256, 259, 263, 276, 281], "group": [2, 26, 32, 133, 134, 153, 218, 248, 262, 277], "p_valu": [2, 218, 248, 277], "05": [2, 41, 49, 50, 51, 52, 58, 59, 62, 63, 150, 212, 218, 244, 248, 253, 266, 267, 276, 277, 278], "skip": [2, 218, 248, 253, 277], "p_forward": [2, 212, 248, 253], "p_backward": [2, 212, 248, 253], "max_step": [2, 212, 248, 253, 282], "scm": [2, 212, 246, 253, 273, 275, 282], "forward": [2, 212, 246, 248, 253, 278, 282], "backward": [2, 212, 223, 246, 248, 253, 278], "variou": [2, 68, 221, 222, 246, 248, 249, 251, 253, 256, 258, 261, 263, 269, 273, 277], "access": [2, 253, 255, 258, 261, 263, 264, 266, 269, 270, 277, 280, 282], "json": [2, 10, 28, 207, 208, 224, 246, 248, 253, 255, 258, 261, 263, 268, 269, 277, 280], "format": [2, 69, 246, 248, 250, 253, 256, 258, 260, 261, 262, 263, 264, 266, 268, 269, 272, 277], "summary_tool": [2, 246, 253, 258, 261, 263, 269, 277], "candid": [2, 212, 217, 246, 248, 253, 258, 277, 280], "compar": [2, 205, 244, 246, 253, 258, 273, 277, 280], "rank": [2, 205, 214, 215, 217, 246, 248, 253, 277], "selected_model": 2, "modelsearch_run1": [2, 246], "iivsearch_run35": 2, "vp1": [2, 41, 150, 173, 268], "best_ruvsearch_2": [2, 277], "time_varying2": [2, 277], "iiv_on_ruv": [2, 246, 274, 276, 277], "iovsearch_run30": 2, "etai5": 2, "covsearch_run6": [2, 253], "exp": [2, 30, 35, 37, 136, 186, 187, 188, 212, 253, 266, 268, 270], "dofv": [2, 201, 202, 221, 244, 245, 246, 253, 274, 276, 277], "n_param": [2, 253, 263, 277], "d_param": [2, 253, 263, 277], "2097": 2, "977183": 2, "2240": 2, "703380": 2, "142": [2, 253], "726197": 2, "2278": 2, "644915": 2, "37": [2, 57, 91, 96, 98, 108, 203, 244, 245, 253, 255, 265, 267, 279], "941535": 2, "2436": 2, "296090": 2, "157": 2, "651175": 2, "15": [2, 57, 79, 91, 96, 108, 203, 244, 245, 253, 255, 261, 263, 264, 265, 267, 268, 278, 279], "2571": 2, "507991": 2, "135": [2, 110, 255, 267, 268, 276], "211901": 2, "16": [2, 6, 57, 79, 91, 96, 108, 175, 188, 203, 244, 245, 253, 255, 261, 263, 264, 265, 267, 268, 274, 276, 277, 278, 279], "2590": 2, "767668": 2, "259677": 2, "2597": 2, "989257": 2, "221589": 2, "17": [2, 57, 78, 79, 81, 82, 91, 94, 96, 108, 110, 203, 244, 245, 253, 255, 261, 263, 264, 265, 267, 268, 269, 274, 276, 279], "base_model": [2, 205], "qp1": [2, 41, 150, 173, 246, 268], "iivsearch_run1": 2, "covsearch_run11": [2, 253], "covsearch_run12": [2, 253], "covsearch_run13": [2, 253], "covsearch_run14": [2, 253], "covsearch_run15": [2, 253], "fals": [2, 6, 8, 13, 14, 16, 18, 23, 25, 26, 28, 32, 34, 35, 36, 43, 55, 65, 67, 74, 76, 84, 87, 88, 89, 105, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 142, 143, 153, 155, 161, 167, 168, 174, 178, 179, 190, 192, 193, 194, 195, 197, 203, 211, 223, 224, 226, 238, 245, 253, 255, 258, 266, 268, 270, 271, 278, 279], "2081": 2, "2220": 2, "2280": 2, "522613": 2, "2238": 2, "872": 2, "001789": 2, "1518": 2, "310447": 2, "2591": 2, "679149": 2, "2557": 2, "406757": 2, "767683": 2, "765222": 2, "767674": 2, "2556": 2, "767708": 2, "2061": 2, "030230": 2, "2189": 2, "928952": 2, "2187": 2, "799687": 2, "1476": 2, "416540": 2, "2510": 2, "871505": 2, "599113": 2, "957578": 2, "2509": 2, "960030": 2, "960064": 2, "pop_cl_estim": [2, 253, 258, 263, 277], "07": [2, 49, 50, 51, 52, 58, 59, 62, 63, 244, 253, 261, 263, 266, 267, 276, 278], "25": [2, 57, 78, 81, 82, 91, 96, 98, 108, 203, 244, 245, 253, 255, 261, 265, 267, 269, 274, 276, 277, 279], "4279": [2, 253], "73": [2, 110, 255, 267, 277, 280, 282], "6465": 2, "74": 2, "65": [2, 6, 253], "83": [2, 253, 276], "08": [2, 49, 51, 52, 59, 62, 253, 266, 267], "36": [2, 57, 91, 96, 108, 203, 244, 245, 253, 255, 261, 263, 265, 267, 269, 276, 279], "78": 2, "86": [2, 253], "48": [2, 57, 91, 96, 98, 108, 203, 244, 245, 253, 255, 265, 267, 277, 278, 279], "35": [2, 57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 277, 279], "pop_etai5wt_estim": 2, "pop_matage_estim": [2, 253], "pop_matsex_estim": [2, 253], "pop_matwt_estim": [2, 253], "pop_vcage_estim": [2, 253], "pop_vcsex_estim": [2, 253], "392976": 2, "pop_vcwt_estim": [2, 253], "pop_vp1age_estim": 2, "007563": 2, "pop_vp1sex_estim": 2, "pop_vp1wt_estim": 2, "001": [2, 35, 67, 195, 268, 278], "105": [2, 253, 258, 277], "dbic": [2, 246, 261, 263, 269], "128": [2, 6], "898722": 2, "iivsearch_run4": 2, "21": [2, 57, 78, 81, 91, 96, 108, 203, 244, 245, 253, 255, 258, 259, 265, 267, 274, 276, 279], "611092": 2, "iivsearch_run5": 2, "572737": 2, "iivsearch_run2": 2, "929719": 2, "summary_error": [2, 253, 258, 261, 263, 269], "summarize_error": [2, 246, 253, 258, 261, 263, 269], "categori": [2, 6, 35, 39, 137, 220, 248, 253, 258, 261, 263, 268, 269, 280], "error_no": [2, 253, 258, 261, 263, 269], "2022": [2, 253, 258, 261, 263, 264, 269, 280], "225": 2, "messag": [2, 228, 246, 248, 253, 258, 261, 263, 269], "success": [2, 246, 249, 253, 258, 261, 263], "nhowev": [2, 253, 258, 263], "problem": [2, 136, 141, 246, 253, 258, 261, 263, 264, 265, 266, 268, 270], "occur": [2, 152, 258, 261, 263, 264, 282], "WITH": [2, 258, 261, 263, 264], "THE": [2, 258, 261, 263, 264], "page": [3, 245, 247, 250, 251, 258, 269, 270], "public": [3, 256], "modul": [3, 8, 246, 250, 266, 268, 272, 282], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 246, 255, 260, 264, 266, 268, 280], "relat": [3, 225, 229, 230, 246, 249, 278], "statement": [3, 4, 8, 16, 19, 24, 33, 35, 37, 38, 39, 41, 42, 68, 118, 130, 131, 132, 144, 146, 150, 151, 157, 158, 159, 164, 165, 166, 169, 170, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 196, 246, 248, 253, 264, 268, 273, 281], "transform": [3, 19, 157, 159, 161, 175, 186, 187, 188, 246, 248, 260, 262, 270, 276, 281], "manipul": [3, 26, 266, 268, 270], "built": [3, 130, 248, 251, 262], "run": [3, 71, 134, 199, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 229, 233, 244, 245, 246, 254, 260, 262, 264, 265, 267, 272, 273, 276, 278, 279, 281, 282], "api_model": 3, "api_tool": 3, "packag": [3, 248, 250, 256, 260, 262, 264, 271, 273, 282], "express": [4, 5, 7, 8, 9, 10, 16, 17, 18, 23, 27, 30, 37, 53, 54, 56, 80, 92, 102, 103, 109, 113, 117, 157, 159, 174, 175, 183, 246, 248, 249, 253, 264, 268, 273, 279], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 249, 251, 262, 264, 266], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 205, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 246, 253, 259, 261, 263, 264, 265, 266, 268, 269, 270, 271, 276, 277, 278], "represent": [4, 16, 234, 255, 260, 266, 268, 270], "togeth": [4, 27, 158, 176, 251, 256, 259, 265, 277, 282], "sympi": [4, 6, 8, 16, 18, 23, 27, 30, 33, 56, 80, 109, 117, 256, 266, 273], "str": [4, 6, 7, 8, 10, 18, 23, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 43, 48, 56, 69, 70, 74, 75, 76, 80, 88, 90, 95, 101, 112, 114, 117, 121, 126, 130, 133, 135, 138, 139, 140, 141, 143, 146, 147, 153, 157, 159, 162, 166, 171, 172, 174, 175, 177, 185, 186, 187, 188, 191, 192, 197, 198, 199, 200, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 243, 246], "expr": [4, 9, 27, 30, 33, 109, 183], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 136, 141, 162, 163, 213, 225, 226, 227, 228, 229, 230, 231, 233, 245, 246, 248, 253, 256, 264, 266, 268, 273, 280, 282], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30], "free": [4, 5, 6, 7, 8, 16, 17, 18, 19, 23, 27, 30, 249, 264, 273], "hand": [4, 8, 16, 56], "side": [4, 8, 16, 56, 161], "pop_cl": 4, "eta_cl": [4, 37, 39, 270], "rhs_symbol": [4, 8, 16, 29], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 17, 18, 23, 25, 26, 27, 28, 31, 32, 226, 228], "replac": [4, 5, 6, 7, 8, 10, 13, 14, 15, 17, 18, 23, 25, 26, 27, 31, 32, 153, 184, 246, 248, 256, 270], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 31, 32, 36, 162, 199, 210, 212, 213, 214, 215, 216, 217, 218, 219, 230, 231, 246], "sub": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30, 266], "substitut": [4, 5, 7, 8, 16, 17, 18, 23, 27, 29, 30, 264, 266, 268], "dict": [4, 5, 10, 16, 17, 18, 23, 26, 27, 30, 45, 60, 78, 79, 81, 82, 83, 87, 89, 92, 103, 152, 167, 168, 179, 193, 225, 229, 230, 239, 255, 266], "old": [4, 30, 152, 246, 276], "new": [4, 6, 9, 10, 14, 18, 19, 23, 25, 26, 27, 30, 31, 37, 39, 42, 43, 69, 70, 73, 74, 84, 87, 88, 89, 152, 153, 157, 159, 166, 167, 171, 174, 175, 192, 193, 195, 235, 248, 249, 251, 255, 264, 269, 272, 276, 277, 280, 281], "pair": [4, 5, 8, 17, 18, 23, 27, 30, 35, 66, 221], "return": [4, 6, 8, 9, 10, 15, 16, 19, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 235, 238, 239, 246, 264], "updat": [4, 9, 10, 19, 26, 30, 194, 195, 197, 246, 248, 251, 262, 264, 269, 270, 273, 277, 281], "b": [4, 264, 269], "amount": [5, 6, 7, 8, 16, 17, 246, 255, 266], "dose": [5, 6, 7, 8, 9, 16, 17, 40, 84, 92, 97, 98, 105, 127, 148, 177, 246, 268, 281], "amt": [5, 7, 8, 10, 16, 17, 30, 33, 41, 68, 76, 77, 91, 98, 118, 130, 131, 132, 136, 137, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 255, 266, 268, 270], "dictionari": [5, 10, 14, 17, 18, 23, 26, 27, 28, 31, 78, 79, 81, 82, 83, 92, 103, 153, 167, 168, 179, 225, 229, 230, 239, 266], "unknown": [6, 255], "unit": [6, 117], "ratio": [6, 212, 218, 246, 248, 255, 277], "datatyp": [6, 138], "float64": [6, 10, 55, 62, 63, 66, 80, 81, 82, 83, 98, 110, 255, 266, 267, 268], "descriptor": [6, 10], "immut": [6, 10, 13, 14, 15, 25, 26, 27, 28, 29, 31, 32, 246], "colum": 6, "measur": [6, 249, 255, 264], "bool": [6, 19, 25, 28, 32, 33, 35, 43, 55, 65, 67, 74, 76, 84, 105, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 153, 155, 166, 174, 175, 178, 194, 195, 197, 198, 210, 211, 223, 224, 226, 238], "discret": [6, 255, 263], "bar": [6, 259], "panda": [6, 10, 246, 256, 273], "dtype": [6, 10, 55, 60, 62, 63, 66, 67, 80, 81, 82, 83, 97, 98, 108, 110, 255, 266, 267, 268], "nomin": [6, 255], "ordin": [6, 255], "rang": [6, 28, 75, 280], "na": 6, "int8": 6, "sign": [6, 187, 264], "bit": 6, "127": [6, 261], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 255], "147": 6, "483": 6, "648": [6, 244], "647": [6, 244, 261], "int64": [6, 108, 255], "64": 6, "223": [6, 254], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 57, 79, 91, 96, 108, 203, 244, 245, 253, 255, 261, 263, 265, 267, 274, 276, 279], "446": 6, "744": [6, 80, 97, 255, 267], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 264], "float": [6, 25, 33, 37, 42, 43, 47, 48, 66, 149, 156, 174, 177, 201, 202, 203, 205, 210, 211, 212, 214, 215, 217, 218, 246], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 77, 189, 246, 248, 266], "tran": [6, 77, 189, 246, 248, 266], "date": [6, 75, 77, 189, 246, 248, 264, 282], "common": [6, 35, 61, 239, 264, 268, 281], "birth": 6, "human": [6, 28, 273], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 255, 273], "concentr": [6, 94, 273], "substanc": 6, "blood": 6, "subject": [6, 14, 91, 100, 222, 264, 281], "uniqu": [6, 32, 46, 74, 153, 225, 235, 246, 248, 255, 280], "interv": [6, 255, 256], "ration": 6, "max": [6, 35, 169, 170, 244, 255], "datafram": [6, 15, 26, 28, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 75, 78, 79, 81, 82, 83, 91, 94, 96, 133, 134, 138, 153, 154, 155, 156, 194, 201, 202, 203, 205, 220, 221, 222, 223, 228, 246, 255, 273], "idv": [6, 10, 177, 255, 276], "independ": [6, 8, 255, 264, 271, 276, 280], "dv": [6, 10, 30, 68, 76, 77, 91, 110, 118, 130, 134, 136, 137, 141, 157, 159, 169, 170, 175, 246, 255, 266, 268, 270, 279], "infus": [6, 127, 176, 181, 246, 268], "addit": [6, 35, 37, 45, 74, 84, 119, 120, 125, 157, 159, 175, 246, 248, 253, 255, 258, 264, 276, 277, 280], "interdos": 6, "ss": 6, "steadi": [6, 246], "state": [6, 26, 35, 246, 264, 278], "event": [6, 99, 189, 246, 249, 264], "mdv": [6, 104, 246], "miss": [6, 91, 96, 246], "yet": [6, 280], "exactli": 6, "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 166, 248, 264, 268, 273], "physic": [6, 117, 249, 255, 264], "recogn": [6, 172, 249, 264, 270], "without": [6, 9, 53, 54, 78, 79, 81, 82, 83, 102, 109, 113, 153, 227, 244, 246, 248, 251, 256, 264, 266], "static": [6, 10, 19], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 27, 28, 30, 69, 118, 132, 178, 246, 248, 280], "convert_pd_dtype_to_datatyp": 6, "is_categor": 6, "check": [6, 19, 25, 27, 65, 66, 67, 119, 120, 121, 122, 123, 124, 125, 127, 128, 246, 250, 270, 280, 282], "is_numer": 6, "col1": 6, "col2": 6, "properti": [6, 14, 18, 23, 25, 26, 31, 264, 266], "lag_tim": [7, 9], "bioavail": [7, 92, 246], "compartment": [7, 8, 16, 30, 246, 248, 266], "system": [7, 8, 9, 14, 16, 24, 30, 53, 54, 56, 78, 79, 81, 82, 83, 102, 109, 113, 127, 184, 229, 246, 248, 250, 251, 264, 266, 270, 281], "lag": [7, 9, 40, 103, 148, 246], "enter": [7, 264], "fraction": [7, 156, 244, 259], "bolu": [7, 8, 30, 41, 68, 118, 130, 150, 158, 164, 165, 169, 170, 173, 178, 182, 184, 246, 248, 266], "comp": [7, 8, 246], "a_centr": [7, 8, 16, 30, 68, 118, 130, 169, 170, 175, 182, 266], "depot": [7, 8, 9, 164, 176, 178, 246, 268, 280], "alag": [7, 246], "a_depot": [7, 8, 16], "builder": [8, 9], "graph": [8, 234, 248, 251], "odesystem": [8, 16, 30, 246], "od": [8, 14, 16, 24, 30, 42, 53, 54, 56, 78, 79, 81, 82, 83, 102, 109, 113, 127, 172, 184, 246, 248, 266, 281], "descib": 8, "cb": [8, 9], "compartmentalsystembuild": 8, "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 280], "k21": [8, 280], "vector": [8, 16, 18, 154, 155, 156, 245, 259, 266], "load_example_model": [8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 246, 260, 282], "pprint": [8, 16, 109], "ode_system": [8, 16, 30, 41, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 246, 266], "a_output": [8, 16, 30, 266], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 234, 264], "compartment_nam": [8, 16], "compartmental_matrix": [8, 266], "matrix": [8, 18, 27, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 66, 154, 155, 156, 245, 246, 248, 259, 266], "set_first_order_absorpt": [8, 42, 158, 176, 181, 246, 268], "dosing_compart": 8, "receiv": [8, 264], "output_compart": 8, "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 67, 127, 128, 132, 176, 181, 182, 246, 263, 269, 271, 280], "set_zero_order_absorpt": [8, 158, 164, 176, 246, 268, 282], "atom": 8, "http": [8, 245, 250, 255, 256, 259, 260, 264, 277], "doc": [8, 251], "org": [8, 245, 247, 250, 255, 259, 264, 277], "latest": [8, 246, 256, 260], "core": [8, 260, 266, 268], "html": [8, 72, 256, 264, 268], "basic": [8, 28, 183, 246, 250, 253, 255, 264, 270, 280, 281], "find_compart": 8, "its": [8, 25, 30, 67, 75, 132, 195, 221, 246, 248, 250, 253, 255, 256, 260, 262, 264, 266, 282], "found": [8, 26, 220, 244, 245, 246, 251, 254, 257, 259, 261, 263, 264, 267, 269, 276, 277, 280, 281, 282], "find_depot": 8, "out": [8, 27, 65, 195, 246, 264, 266, 272, 282], "find_transit_compart": 8, "chain": [8, 268], "singl": [8, 10, 25, 27, 185, 189, 200, 216, 220, 223, 225, 246, 248, 256, 259, 264, 268, 280], "distinguish": [8, 264], "get_compartment_inflow": 8, "go": [8, 216, 223, 246, 255, 264], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 197, 198, 225, 229, 230, 248], "ka": [8, 9, 16, 38, 246, 263], "get_n_connect": 8, "connect": [8, 19, 225, 227, 248, 255, 264, 273, 280, 281], "int": [8, 30, 33, 36, 45, 56, 61, 67, 73, 97, 106, 107, 145, 153, 154, 155, 156, 157, 162, 163, 173, 178, 212, 216, 218, 220], "to_compartmental_system": [8, 16, 24, 30], "to_explicit_system": [8, 16, 24, 30, 266], "skip_output": [8, 16], "explicit": [8, 16, 30, 39, 246, 248, 249, 253, 263, 266, 280], "boolean": [8, 25, 26, 84, 88, 89, 153, 161, 166, 192, 193, 201, 202, 203, 255], "leav": [8, 268], "result": [8, 14, 19, 27, 65, 71, 72, 75, 94, 131, 135, 138, 149, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 229, 230, 231, 233, 235, 238, 246, 249, 251, 262, 264, 270, 272, 273, 275, 281], "explicitodesystem": [8, 246, 266], "equat": [8, 16, 56, 266], "condit": [8, 16, 246, 259, 264, 266, 277], "dt": [8, 16, 30, 266], "compartmentalsystem": [9, 16, 246, 266], "newli": [9, 27, 263], "move_dos": 9, "move": [9, 195, 246], "anoth": [9, 19, 30, 235, 268], "remove_compart": 9, "remove_flow": 9, "set_dos": 9, "set_lag_tim": [9, 246], "force_absolute_path": 10, "sequenc": [10, 15, 26, 27, 30, 71], "metadata": [10, 225, 226, 229, 230, 233, 246], "index": [10, 26, 27, 28, 30, 36, 45, 56, 61, 66, 67, 98, 110, 145, 162, 163, 220, 223, 245, 246, 255, 259, 260, 266, 278, 282], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 75], "idv_column": 10, "apgr": [10, 30, 33, 35, 68, 76, 77, 91, 96, 105, 118, 121, 130, 131, 132, 136, 137, 191, 212, 255, 259, 266, 268, 270, 276], "fa1": [10, 76, 77, 91, 136, 137, 255, 266, 268], "fa2": [10, 76, 77, 91, 136, 137, 255, 266], "example_model": 10, "dta": [10, 136, 266, 268, 270], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 246, 264, 268], "read_json": 10, "read": [10, 138, 139, 140, 141, 206, 207, 211, 224, 225, 229, 230, 246, 250, 255, 260, 262, 264, 272, 273, 275, 280, 281], "set_column": 10, "col": 10, "exist": [10, 30, 35, 45, 46, 74, 95, 97, 225, 226, 227, 246, 248, 250, 253, 255, 263, 280], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 28, 255, 268], "recover": 12, "issu": [12, 22, 246, 251, 262, 282], "hashabl": 13, "level": [13, 18, 23, 27, 31, 32, 101, 126, 246, 248, 255, 262, 266, 268, 273, 278, 280], "variabilitylevel": 13, "parameter_nam": [13, 27, 88, 183, 190, 192, 246, 250, 268, 270], "definit": [13, 14, 19, 30, 57, 155, 156, 203, 246, 248, 253, 259, 264, 266, 280], "varianc": [13, 18, 23, 27, 55, 56, 61, 166, 195, 261, 266, 268, 280], "abstract": [13, 24, 29, 229, 233, 245, 247, 256, 262, 266], "evalf": [13, 18, 23], "get_covari": [13, 18, 23, 27], "name1": [13, 18, 23, 135], "name2": [13, 18, 23, 135], "get_vari": [13, 18, 23], "latex_str": [13, 18, 23], "align": [13, 18, 23, 266, 268], "cov": [14, 15, 27, 34, 35, 36, 49, 56, 57, 59, 61, 62, 142, 155, 162, 163, 245, 246, 251, 258, 259, 268], "evalu": [14, 36, 78, 79, 80, 81, 82, 83, 162, 163, 223, 244, 246, 273, 276, 279], "maximum_evalu": [14, 258], "laplac": [14, 36, 162, 163, 246, 248, 258], "isampl": [14, 36, 45, 162, 246, 258], "niter": [14, 36, 45, 162, 246, 258], "auto": [14, 15, 246, 258], "keep_every_nth_it": [14, 15, 246, 258], "residu": [14, 27, 83, 115, 202, 203, 221, 246, 262, 277, 279, 280, 282], "solver": [14, 172, 213, 246, 248, 280], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 45, 162, 280], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 69, 75, 230, 231, 248, 250, 251, 253, 256, 262, 264, 266, 268, 272], "uncertainti": [14, 56, 57, 61, 154, 155, 156, 246, 248, 259, 267], "epsilon": [14, 27, 53, 54, 78, 79, 137, 166, 174, 180, 196, 246, 248, 256], "calcul": [14, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 80, 94, 205, 244, 245, 246, 259, 261, 262, 263, 269, 281], "deriv": [14, 16, 117, 246, 251, 253], "eta": [14, 27, 30, 33, 35, 37, 39, 53, 54, 55, 57, 68, 71, 78, 79, 81, 102, 109, 114, 118, 130, 131, 132, 136, 137, 141, 146, 147, 154, 166, 185, 186, 187, 188, 246, 248, 253, 256, 259, 261, 263, 266, 267, 270, 276, 280, 281, 282], "preserv": [14, 27, 264], "comput": [14, 251, 252, 253, 264], "sampl": [14, 27, 73, 153, 154, 155, 156, 259], "similar": [14, 244, 258, 264, 269, 277, 282], "em": 14, "everi": [14, 255, 264], "nth": 14, "iter": [14, 15, 30, 56, 133, 153, 155, 246, 274, 277], "laplacian": 14, "solv": [14, 246], "advan": [14, 172, 246], "cvode": [14, 172, 248], "advan14": [14, 172, 248], "dgear": [14, 172, 248], "advan8": [14, 172, 248], "dverk": [14, 172, 248], "advan6": [14, 172, 248], "ida": [14, 172, 248], "advan15": [14, 172, 248], "lsoda": [14, 172, 248, 258], "advan13": [14, 172, 248, 268], "lsodi": [14, 172, 248, 258], "advan9": [14, 172, 248], "absolut": [14, 66, 246, 264], "toler": 14, "supported_method": [14, 258], "frozenset": 14, "bay": [14, 162, 163, 248], "imp": [14, 36, 162, 163, 213, 246, 248, 258], "impmap": [14, 36, 162, 163, 246, 248], "ITS": [14, 36, 162, 163, 246, 248, 263, 269], "saem": [14, 36, 162, 163, 213, 246, 248], "supported_solv": [14, 258], "to_datafram": [15, 26, 228], "overview": [15, 228, 244, 248, 257, 278], "pd": [15, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 75, 78, 79, 80, 81, 82, 83, 91, 93, 94, 96, 97, 98, 99, 104, 108, 110, 133, 134, 135, 138, 153, 154, 155, 156, 194, 195, 201, 202, 203, 205, 220, 221, 222, 223, 228, 246, 255], "estimation_step": [15, 19, 34, 36, 45, 142, 145, 162, 163, 246], "doctest": [15, 251], "ellipsi": 15, "ic": 16, "differenti": [16, 266], "k": [16, 56, 245, 246, 251, 253, 259], "eq1": 16, "eq2": 16, "ordinari": [16, 266], "durat": [17, 176, 181], "mutual": [17, 263, 280], "exclus": [17, 264, 280], "d1": [17, 246], "r1": 17, "symbolc": 17, "dur": 17, "joint": [18, 27, 39, 71, 185, 259, 263, 266, 281], "omega_cl": [18, 23, 27], "omega_v": [18, 27], "corr_cl_v": [18, 27], "omega_cl_v": [18, 27], "dist": [18, 23, 27, 246, 251], "iiv_cl": [18, 23, 27, 270], "iiv_v": [18, 27, 268], "itself": [18, 23, 264], "omega1": 18, "omega2": 18, "omega_new": [18, 23, 27], "random_vari": [19, 71, 185, 266, 268, 282], "dependent_vari": [19, 246], "modelfit_result": [19, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 78, 79, 80, 81, 82, 83, 154, 155, 156, 194, 195, 203, 210, 211, 212, 213, 214, 215, 217, 218, 223, 246, 266, 267, 268, 282], "initial_individual_estim": 19, "filename_extens": 19, "value_typ": 19, "y": [19, 26, 30, 68, 117, 118, 130, 136, 137, 141, 144, 157, 159, 166, 174, 175, 177, 196, 266, 268, 270], "discript": 19, "estimationstep": [19, 34, 36, 142, 162, 163, 246, 258], "extens": [19, 225, 227, 255, 264, 266], "model_cod": [19, 246, 268], "modelfit": [19, 216, 223, 225, 229, 230, 244, 246, 248, 281], "observation_transform": [19, 246], "parent": [19, 221, 222, 235, 258], "randomvari": [19, 246], "likelihood": [19, 47, 48, 212, 218, 248, 277], "2ll": [19, 47, 48, 246], "log": [19, 35, 37, 48, 132, 157, 159, 161, 175, 246, 255, 259, 268], "record": [19, 78, 79, 80, 81, 82, 83, 84, 133, 149, 246, 251, 270], "would": [19, 32, 132, 244, 253, 259, 264, 268, 270, 273, 282], "copi": [19, 39, 70, 111, 115, 116, 246, 261, 263, 264, 268, 280], "deepcopi": 19, "create_model": 19, "factori": 19, "io": [19, 251, 256, 260], "implement": [19, 225, 227, 229, 230, 264, 266, 273, 280], "g": [19, 68, 74, 147, 217, 246, 251, 255, 258, 259, 261, 263, 268, 269, 273, 277, 280, 282], "nonmem7": 19, "has_same_dataset_a": 19, "update_datainfo": 19, "msg": 21, "syntax": [21, 280], "normal": [23, 27, 32, 39, 60, 64, 132, 259, 263, 264, 282], "init": [25, 26, 35, 43, 89, 167, 193, 195, 248, 259, 266], "inf": [25, 50, 52, 63, 266], "param": [25, 248], "tvcl": [25, 30, 33, 37, 39, 68, 80, 118, 130, 131, 132, 136, 137, 146, 244, 259, 266, 268, 270], "005": 25, "constrain": [25, 256, 266], "unfix": [25, 87, 88, 89, 167, 190, 192, 193, 246], "back": [25, 64, 246], "previou": [25, 27, 30, 40, 71, 97, 118, 164, 176, 178, 181, 211, 222, 238, 246, 264, 269, 281, 282], "less": 25, "greater": 25, "altern": [25, 187, 251, 264, 268], "constructor": [25, 246], "collect": [26, 27, 259, 264, 268, 280], "usual": [26, 251, 282], "wai": [26, 122, 123, 124, 128, 251, 253, 255, 258, 264, 266, 268, 280, 282], "displai": [26, 157, 259, 264, 268], "summar": [26, 220, 222, 223, 259, 265], "par1": 26, "par2": 26, "pset": 26, "fixed": [26, 87], "nonfix": 26, "set_fix": 26, "set_initial_estim": [26, 246], "100": [26, 35, 36, 45, 154, 162, 188, 244, 246, 248, 253, 267, 268, 271, 278], "eta_level": 27, "epsilon_level": 27, "act": 27, "while": [27, 251, 268, 280, 282], "variabilityhierarchi": 27, "contin": 27, "hierarchi": [27, 31], "rv": [27, 71, 114, 151, 185, 266], "normaldistribut": 27, "covariance_matrix": [27, 49, 56, 59, 61, 62, 155, 244, 246, 266, 267], "nrv": 27, "variance_paramet": 27, "rv1": 27, "rv2": 27, "get_rvs_with_same_dist": 27, "join": [27, 185, 246, 249, 268], "ind": 27, "fill": 27, "name_templ": 27, "param_nam": 27, "taken": [27, 84, 91, 96, 189, 225, 255, 259], "remain": [27, 249, 264], "templat": [27, 35, 37, 268], "overrid": [27, 250, 280], "tupl": [27, 133, 153, 212, 239], "dist1": 27, "dist2": 27, "_": [27, 222, 245, 259], "unjoin": 27, "nearest_valid_paramet": 27, "parameter_valu": 27, "forc": [27, 74, 155, 156, 194, 197, 198, 246, 248, 263, 264], "small": 27, "parameters_sdcorr": 27, "sd": [27, 55, 268, 276, 279], "corr": [27, 51, 58, 276], "assum": [27, 225, 259, 264, 270], "var": [27, 57, 259], "rng": [27, 56, 61, 73, 154, 155, 156], "jointnormaldistribut": 27, "validate_paramet": 27, "seri": [27, 51, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 80, 81, 82, 83, 93, 97, 98, 99, 104, 108, 110, 135, 155, 156, 157, 187, 195, 246, 267], "current": [27, 36, 37, 53, 54, 68, 69, 78, 79, 81, 82, 83, 102, 109, 113, 127, 130, 158, 162, 163, 176, 184, 189, 205, 212, 216, 229, 235, 245, 246, 248, 251, 253, 254, 259, 260, 262, 263, 264, 265, 266, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 282], "matric": [27, 57, 156, 246, 256, 267], "semidefinit": [27, 246, 256], "use_cach": 27, "symengin": [27, 256, 273], "cach": 27, "__version__": 28, "88": 28, "from_dict": [28, 226, 228], "get_and_reset_index": 28, "attr": 28, "wrapper": [28, 246, 251, 256, 260, 282], "reset": [28, 189, 246, 282], "facilit": 28, "multiindex": [28, 246], "to_csv": [28, 268], "save": [28, 224, 246, 268], "readabl": [28, 227, 229, 255, 264, 273], "print": [28, 65, 136, 137, 204, 246, 266, 268], "to_dict": [28, 226, 228], "lzma": [28, 224], "serial": [28, 246, 255, 273], "compress": [28, 224], "unless": [28, 30, 264], "signific": [30, 67, 214, 215, 217, 246, 264, 278], "after_od": [30, 175], "s\u2081": [30, 33, 68, 118, 130, 131, 132, 137, 175, 266], "ipr": [30, 68, 81, 118, 130, 136, 137, 174, 175, 246, 266, 267, 268, 279], "ir": [30, 68, 118, 130, 136, 137, 175, 266], "iwr": [30, 68, 118, 130, 136, 137, 175, 266], "before_od": [30, 33, 35, 131, 132, 186, 187, 188], "btime": [30, 33, 68, 118, 130, 131, 132, 136, 137, 266], "tad": [30, 33, 44, 68, 118, 130, 131, 132, 136, 137, 246, 255, 266, 276], "tvv": [30, 33, 68, 118, 130, 131, 132, 136, 137, 146, 244, 259, 266, 268, 270], "\u212f": [30, 33, 42, 68, 118, 130, 131, 132, 166, 266], "whole": [30, 248, 255, 264, 280], "s1": [30, 126, 136, 266, 268, 270], "symbol_or_stat": 30, "direct_depend": 30, "direct": [30, 234, 253, 264, 278], "find_assign": [30, 37, 38, 39, 42, 144, 146, 157, 159, 166, 174, 177, 196, 268], "find_assignment_index": 30, "full_express": [30, 35, 186, 187, 188], "expand": [30, 84], "full": [30, 71, 102, 109, 113, 245, 246, 248, 259, 263, 264, 269, 276], "reassign": 30, "sypmpi": 30, "remove_symbol_definit": 30, "elsewher": 30, "longer": [30, 246], "make": [30, 68, 131, 144, 152, 153, 212, 246, 256, 263, 264, 266, 268, 269, 280, 282], "sure": [30, 152, 246, 264, 269, 282], "stat": [30, 280], "rais": [30, 153, 195, 246], "p": [33, 205, 212, 218, 244, 245, 246, 248, 253, 259, 268, 277, 278], "allometri": [33, 210, 211, 246, 280], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 45, 142, 145, 163, 246, 282], "add_estimation_step": [34, 45, 142, 145, 162, 163, 246], "remove_estimation_step": [34, 36, 45, 142, 162, 163], "append_estimation_step_opt": [34, 36, 142, 145, 162, 163, 246], "remove_covariance_step": [34, 36, 45, 145, 162, 163, 246], "set_evaluation_step": [34, 36, 45, 142, 145, 162], "allow_nest": [35, 246], "linear": [35, 244, 245, 246, 256, 266, 273, 275], "lin": 35, "coveff": [35, 74], "median": [35, 56, 61, 244, 246, 268, 273, 279], "equal": [35, 39, 153, 166, 248, 251, 268], "minimum": [35, 256], "000": [35, 267], "frac": [35, 157, 159, 245, 266, 268, 279], "min": [35, 157, 159, 244, 255], "piecewis": [35, 246], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 268], "theta2": [35, 268], "pow": [35, 268], "mai": [35, 261, 263, 264, 268, 269, 280], "abbrevi": [35, 37, 246, 248, 251, 270], "multipli": [35, 37, 166, 244, 248, 268], "alreadi": [35, 248, 251, 263, 264, 268], "pop_clapgr": 35, "idx": [36, 45, 145, 162, 163, 282], "argument": [36, 78, 79, 81, 82, 83, 162, 199, 210, 212, 213, 214, 215, 216, 217, 218, 219, 232, 246, 248, 268, 280, 282], "pass": [36, 73, 162, 199, 210, 212, 213, 214, 215, 216, 217, 218, 219, 235, 264], "opt": [36, 45, 162], "1000": [36, 45, 80, 162, 259], "len": [36, 45, 145, 149], "add_covariance_step": [36, 45, 142, 145, 162, 163, 246], "initial_estim": [37, 42], "09": [37, 42, 159, 166, 175, 253, 261, 268, 269, 270, 274], "eta_nam": [37, 39, 166, 248, 268], "prop": [37, 268], "logit": 37, "user": [37, 95, 246, 256, 261, 263, 264, 266, 267, 268, 269, 270], "remove_iiv": [37, 39, 42, 147, 246, 268, 270], "add_pk_iiv": [37, 39, 146, 147, 246, 269], "add_iov": [37, 42, 146, 147, 246, 268], "remove_iov": [37, 39, 42, 146, 246, 268], "pop_ka": [38, 43], "occ": [39, 215, 248, 253, 263], "disjoint": [39, 263], "accept": [39, 106, 107, 108, 248, 264], "add_iiv": [39, 42, 146, 147, 246, 268, 270], "set_transit_compart": [40, 148, 246, 268], "remove_lag_tim": [40, 246, 268], "parameter": 41, "qpn": 41, "vpn": 41, "volumn": 41, "mathsf": [41, 150], "cdot": [41, 150, 259, 266, 268], "qp2": [41, 150, 173, 246, 268], "vp2": [41, 150, 173, 268], "peripheral1": [41, 150, 173], "set_peripheral_compart": [41, 150, 246, 268], "remove_peripheral_compart": [41, 173, 246, 268], "Will": [42, 140, 225, 226, 227], "pop_mat": [42, 268, 270], "eta_mat": 42, "004693": [43, 60, 116, 259, 266], "1000000": [43, 87, 88, 89, 116, 167, 168, 190, 193, 266, 268], "009160": [43, 116, 266], "100000": [43, 116, 258, 266, 268], "99": [43, 116, 136, 195, 244, 246, 253, 266], "030963": [43, 111, 259, 266], "031128": [43, 111, 136, 259, 266, 268, 270], "013241": [43, 115, 136, 259, 266, 267, 268], "append": [45, 246], "increas": [46, 251], "until": [46, 223, 264, 282], "do": [46, 155, 244, 246, 248, 259, 264, 268, 270, 277, 282], "noth": [46, 149, 264], "next": [46, 246, 264, 269, 270, 277], "run2": [46, 171, 268], "run3": 46, "n_estimated_paramet": [47, 48], "fit": [47, 48, 195, 204, 216, 221, 223, 229, 246, 264, 266, 277, 281, 282], "variat": 48, "n_random_paramet": 48, "n_individu": 48, "n_fixed_paramet": 48, "n_observ": 48, "n_individ": 48, "n_estimated_iiv_omega_paramet": 48, "611": 48, "7071686183284": 48, "616": [48, 246, 267], "536606983396": 48, "610": 48, "7412809453149": 48, "594": 48, "431131169692": 48, "411510e": [49, 52, 59, 62, 266, 267], "010000e": [49, 52, 59, 62, 266, 267], "000002": [49, 51, 52, 59, 62, 266, 267], "000001": [49, 51, 52, 56, 59, 61, 62, 263, 266, 267, 269], "538630e": [49, 51, 52, 59, 62, 266, 267], "178090e": [49, 52, 59, 62, 266, 267], "233530e": [49, 52, 59, 62, 266, 267], "04": [49, 50, 51, 52, 58, 59, 62, 63, 244, 253, 263, 266, 267, 276, 278], "000804": [49, 51, 52, 59, 62, 253, 266, 267], "000050": [49, 51, 52, 59, 62, 244, 266, 267], "171840e": [49, 52, 59, 62, 266, 267], "461760e": [49, 52, 59, 62, 266, 267], "665010e": [49, 52, 59, 62, 266, 267], "06": [49, 51, 52, 59, 62, 244, 253, 261, 263, 266, 267, 276, 278, 280], "040250e": [49, 52, 59, 62, 266, 267], "007016": [49, 51, 52, 59, 62, 266, 267], "000108": [49, 51, 52, 59, 62, 266, 267], "944800e": [49, 52, 59, 62, 266, 267], "932950e": [49, 52, 59, 62, 266, 267], "093430e": [49, 52, 59, 62, 266, 267], "981380e": [49, 51, 52, 59, 62, 266, 267], "000180": [49, 51, 52, 59, 62, 266, 267], "856650e": [49, 52, 59, 62, 266, 267], "867230e": [49, 52, 59, 62, 266, 267], "000039": [49, 51, 52, 59, 62, 266, 267], "000019": [49, 51, 52, 59, 62, 266, 267], "589820e": [49, 51, 52, 59, 62, 266, 267], "685650e": [49, 52, 59, 62, 266, 267], "000029": [49, 51, 52, 59, 62, 266, 267], "000005": [49, 51, 52, 59, 62, 266, 267], "195640e": [49, 52, 59, 62, 266, 267], "007099": [49, 50, 51, 58, 267], "094640": [49, 50, 51, 58, 267], "388059": [49, 50, 51, 58, 66], "097981": [49, 50, 51, 58, 267], "170820": [49, 50, 51, 58, 267], "356899": [49, 50, 51, 58, 66], "138062": [49, 50, 51, 58, 267], "356662": [49, 50, 51, 58, 66, 267], "238441": [49, 50, 51, 58], "096515": [49, 50, 51, 58], "062991": [49, 50, 51, 58, 267], "153616": [49, 50, 51, 58, 267], "185111": [49, 50, 51, 58, 267], "159170": [49, 50, 51, 58, 267], "027495": [49, 50, 51, 58, 267], "calculate_se_from_cov": [49, 50, 51, 52, 58, 59, 63, 246], "calculate_se_from_inf": [49, 50, 51, 52, 58, 59, 62, 246], "calculate_cov_from_inf": [49, 50, 51, 58, 59, 62, 63, 246], "calculate_cov_from_corrs": [49, 50, 52, 58, 59, 62, 63, 246], "calculate_inf_from_cov": [49, 50, 51, 52, 58, 62, 63, 246], "calculate_inf_from_corrs": [49, 50, 51, 52, 59, 62, 63, 246], "calculate_corr_from_inf": [49, 51, 52, 58, 59, 62, 63, 246], "information_matrix": [50, 52, 63, 267], "995567e": [50, 52, 59, 63], "22660": [50, 52, 58, 59, 63, 267], "028196": [50, 52, 59, 63], "16057": [50, 52, 58, 59, 63, 267], "855248": [50, 52, 59, 63], "203511": [50, 52, 58, 59, 63, 267], "614428": [50, 52, 59, 63], "39474": [50, 52, 58, 59, 63, 267], "250514": [50, 52, 59, 63], "820118": [50, 52, 59, 63], "299536": [50, 52, 59, 63], "266003e": [50, 52, 59, 63], "2129": [50, 52, 58, 59, 63, 267], "904642": [50, 52, 59, 63], "260": [50, 52, 58, 59, 63, 267], "176234": [50, 52, 59, 63], "375": [50, 52, 58, 59, 63, 267], "266233": [50, 52, 59, 63], "2800": [50, 52, 58, 59, 63, 267], "816246": [50, 52, 59, 63], "7718": [50, 52, 58, 59, 63, 267], "769557": [50, 52, 59, 63], "605786e": [50, 52, 59, 63], "187": [50, 52, 58, 59, 63, 267], "038903": [50, 52, 59, 63], "177": [50, 52, 58, 59, 63, 246, 267, 278], "207683": [50, 52, 59, 63], "205": [50, 52, 58, 59, 63, 267], "808480": [50, 52, 59, 63], "2225": [50, 52, 58, 59, 63, 267, 268], "150449": [50, 52, 59, 63], "035116e": [50, 52, 59, 63], "7527": [50, 52, 58, 59, 63, 267], "530027": [50, 52, 59, 63], "2462": [50, 52, 58, 59, 63, 267], "974821": [50, 52, 59, 63], "9977": [50, 52, 58, 59, 63, 267], "488860": [50, 52, 59, 63], "947425e": [50, 52, 59, 63], "22343": [50, 52, 58, 59, 63, 267], "198618": [50, 52, 59, 63], "9370": [50, 52, 58, 59, 63, 267], "758371": [50, 52, 59, 63], "201183e": [50, 52, 59, 63], "249847": [50, 52, 59, 63, 267], "177845": [50, 52, 59, 63], "calculate_corr_from_cov": [50, 51, 52, 58, 59, 62, 63, 246], "se": [51, 58, 252, 253, 266, 267], "correlation_matrix": [51, 58, 66, 267], "standard_error": [51, 58, 266, 267], "411512e": 51, "009998e": 51, "178111e": 51, "233518e": 51, "171834e": 51, "461762e": 51, "665011e": 51, "040245e": 51, "944801e": 51, "932957e": 51, "093431e": 51, "856651e": 51, "867245e": 51, "685661e": 51, "195664e": 51, "gradient": [53, 54, 78, 79, 246], "pheno_linear": [53, 54, 78, 79, 81, 82, 83, 102, 109, 113, 130, 205], "d_eps1": [53, 109], "d_epseta1_1": [53, 109], "oeta1": [53, 102, 113], "d_epseta1_2": [53, 109], "oeta2": [53, 102, 113], "calculate_eta_gradient_express": [53, 246], "d_eta1": [54, 102, 109, 113], "d_eta2": [54, 102, 109, 113], "calculate_epsilon_gradient_express": [54, 246], "parameter_estim": [55, 56, 57, 61, 67, 80, 82, 83, 155, 156, 195, 244, 246, 266, 267, 268], "individual_estim": [55, 71, 78, 79, 81, 154, 194, 246, 267, 268], "shrinkag": [55, 57, 281], "deviat": [55, 196, 244, 259, 265, 267, 276, 279], "pe": [55, 56, 57, 61, 80, 82, 155, 156, 268], "ie": [55, 154, 194, 268], "720481": 55, "240295": 55, "471305": 55, "128389": 55, "calculate_individual_shrinkag": [55, 246], "expr_or_expr": 56, "expect": [56, 61, 249, 264, 276], "arbitrari": [56, 61], "solut": [56, 184], "th": [56, 245, 259], "95": [56, 244, 259], "percentil": [56, 244, 259], "previous": [56, 61, 134, 195, 246, 270, 282], "interest": [56, 249, 264, 268, 273], "seed": [56, 61, 73, 154, 156, 248], "create_rng": [56, 61, 154, 155, 156], "stderr": [56, 61, 244, 280], "p5": [56, 61, 259], "004234": [56, 61], "001138": [56, 61], "004907": [56, 61], "001247": [56, 61], "p95": [56, 61, 259], "individual_estimates_covari": [57, 154, 246, 267], "ieta_shr": 57, "847789": 57, "256473": 57, "796643": 57, "210669": 57, "755025": 57, "226957": 57, "764541": 57, "216405": 57, "816192": 57, "203974": 57, "778108": 57, "210992": 57, "659420": 57, "236875": 57, "668551": 57, "240097": 57, "260056": 57, "200374": 57, "725190": 57, "226563": 57, "972110": 57, "421852": 57, "249640": 57, "254119": 57, "730294": 57, "364932": 57, "165785": 57, "194464": 57, "813399": 57, "313554": 57, "797328": 57, "213211": 57, "769059": 57, "278079": 57, "098506": 57, "176778": 57, "749022": 57, "235386": 57, "742181": 57, "222932": 57, "317956": 57, "264473": 57, "943950": 57, "232732": 57, "707183": 57, "259077": 57, "553787": 57, "247717": 57, "826349": 57, "114302": 57, "26": [57, 91, 96, 108, 203, 244, 245, 253, 255, 263, 265, 267, 276, 278, 279], "854777": 57, "341384": 57, "27": [57, 91, 96, 108, 110, 203, 244, 245, 253, 255, 261, 263, 265, 267, 269, 277, 279], "820829": 57, "263235": 57, "28": [57, 78, 81, 82, 91, 96, 108, 203, 244, 245, 253, 255, 261, 264, 265, 267, 276, 279], "999942": 57, "319986": 57, "29": [57, 78, 81, 82, 91, 96, 108, 187, 203, 244, 245, 247, 253, 255, 261, 264, 265, 267, 276, 279], "967084": 57, "432760": 57, "30": [57, 91, 96, 108, 203, 244, 245, 253, 255, 258, 261, 263, 264, 265, 267, 269, 276, 279], "404773": 57, "325215": 57, "31": [57, 78, 81, 91, 96, 108, 110, 203, 244, 245, 253, 255, 265, 267, 274, 276, 279, 280], "999980": 57, "318421": 57, "925283": 57, "167667": 57, "33": [57, 91, 96, 108, 110, 203, 244, 245, 253, 255, 265, 267, 269, 278, 279], "913706": 57, "242106": 57, "34": [57, 82, 91, 96, 108, 110, 203, 244, 245, 253, 255, 265, 267, 274, 276, 279], "875554": 57, "249197": 57, "849135": 57, "294294": 57, "172206": 57, "246422": 57, "747380": 57, "278340": 57, "38": [57, 78, 81, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 279], "187440": 57, "231249": 57, "39": [57, 91, 96, 108, 203, 244, 245, 253, 255, 263, 265, 267, 276, 277, 278, 279], "237805": 57, "254485": 57, "40": [57, 91, 94, 96, 108, 110, 149, 203, 244, 245, 255, 258, 265, 267, 278, 279], "999925": 57, "189793": 57, "41": [57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 276, 279], "941906": 57, "170998": 57, "42": [57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 269, 278, 279], "923801": 57, "244046": 57, "43": [57, 91, 96, 108, 203, 244, 245, 253, 255, 258, 265, 267, 278, 279], "999928": 57, "320403": 57, "44": [57, 91, 96, 108, 203, 244, 245, 255, 265, 267, 279], "237637": 57, "260453": 57, "45": [57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 279], "869540": 57, "194503": 57, "46": [57, 91, 96, 108, 203, 244, 245, 255, 258, 265, 267, 279], "999949": 57, "319750": 57, "47": [57, 91, 96, 108, 110, 203, 244, 245, 255, 265, 267, 269, 276, 279], "983782": 57, "393234": 57, "698267": 57, "169337": 57, "49": [57, 91, 96, 108, 203, 244, 245, 255, 265, 267, 279], "776674": 57, "214962": 57, "50": [57, 91, 96, 108, 203, 244, 245, 255, 265, 267, 269, 276, 279], "688847": 57, "192608": 57, "51": [57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 279, 280], "822213": 57, "202534": 57, "52": [57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 269, 278, 279], "511489": 57, "273601": 57, "53": [57, 91, 96, 108, 203, 244, 245, 253, 255, 265, 267, 274, 276, 279], "964757": 57, "223448": 57, "762153": 57, "181648": 57, "965657": 57, "435741": 57, "995278": 57, "354798": 57, "813382": 57, "263372": 57, "727295": 57, "232867": 57, "738777": 57, "224742": 57, "calculate_eta_shrinkag": [57, 246, 268], "995565e": 58, "041788": 58, "848052": 58, "410335": 58, "240358": 58, "820116": [58, 267], "179011": 58, "266004e": 58, "908225": 58, "176399": 58, "266263": 58, "818557": 58, "757955": 58, "605785e": 58, "038825": 58, "207512": 58, "808434": 58, "144772": 58, "035114e": 58, "518562": 58, "972906": 58, "457873": 58, "947424e": 58, "197906": 58, "736254": 58, "201162e": 58, "249846": 58, "006431": 58, "ucp": [60, 64], "ucpscal": [60, 64], "calculate_ucp_scal": [60, 246], "00916": [60, 136, 195, 259, 266, 268, 270], "0309626": [60, 136, 195, 266, 268, 270], "031127999999999996": 60, "013241000000000001": 60, "convers": [60, 246], "pharmacokinet": [61, 255], "pre": 61, "k_e": 61, "calculate_individual_parameter_statist": [61, 246, 268], "000210": [62, 63, 266, 267], "026895": [62, 63, 266, 267], "083762": [62, 63, 266, 267], "013415": [62, 63, 266, 267], "007477": [62, 63, 266, 267], "002279": [62, 63, 266, 267], "unconstrain": 64, "calculate_parameters_from_ucp": [64, 246], "verbos": 65, "consist": [65, 253, 264, 280], "across": [65, 246, 264], "consol": 65, "els": [65, 246, 268], "fail": [65, 246, 264, 273], "cor": [66, 251], "highli": 66, "high": [66, 255, 256, 273], "zero_limit": 67, "significant_digit": [67, 246], "close": [67, 195, 246, 259, 264, 265], "distanc": [67, 75, 279], "logic": 67, "cleanup": 68, "what": [68, 264, 270, 273], "inlin": 68, "clean": 68, "might": [68, 264, 268, 273, 280, 282], "certain": [68, 133, 246, 263, 264, 268, 272, 280], "requir": [68, 246, 248, 253, 260, 264, 276], "to_format": 69, "inplac": 69, "nlmixr": [69, 216, 251, 262], "underli": [69, 90, 136, 266], "converted_model": 69, "model_copi": 70, "pheno2": [70, 282], "block": [71, 146, 174, 246, 248, 259, 261, 268, 269, 276, 280], "iiv_cl_iiv_v": [71, 185], "split_joint_distribut": [71, 246, 268], "report": [72, 246, 251, 262, 273], "through": [73, 248, 249, 250, 253, 264, 266, 280], "numpi": [73, 255, 256, 266], "standard_norm": 73, "5532605888887387": 73, "stem": 74, "force_numb": 74, "coveff1": 74, "temp": 74, "temp1": 74, "cl1": 74, "df": [75, 79, 222, 246, 255, 274, 276], "date_column": 75, "deidentifi": [75, 246], "year": [75, 246, 251, 264], "earliest": 75, "maintain": [75, 249, 251, 252, 262, 264, 272, 273], "leap": 75, "1901": 75, "1902": 75, "1903": 75, "1904": 75, "closest": 75, "preceed": 75, "column_nam": [76, 191], "mark": [76, 77, 84, 191, 248, 264], "drop_dropped_column": [76, 191, 246], "undrop_column": [76, 246], "undrop": [76, 191], "drop_column": [77, 191, 246], "them": [77, 153, 249, 261, 263, 264, 269, 270, 277, 280], "dy": 78, "dep": 78, "771084": [78, 81], "881859": [78, 81], "441728": [78, 81], "113050": [78, 81], "783055": [78, 81], "150": [78, 79, 81, 82, 83, 267], "375041": [78, 81], "151": [78, 79, 81, 82, 83], "833395": [78, 81], "152": [78, 79, 81, 82, 83], "876707": [78, 81], "153": [78, 79, 81, 82, 83, 254], "905095": [78, 81], "154": [78, 79, 81, 82, 83], "099690": [78, 81], "155": [78, 79, 81, 82, 83, 107, 110, 255, 267], "evaluate_eta_gradi": [78, 246], "deta": 79, "159537": 79, "609116": 79, "325893": 79, "562289": 79, "104417": 79, "346161": 79, "452951": 79, "682310": 79, "838840": 79, "981836": 79, "424423": 79, "973013": 79, "497185": 79, "344797": 79, "198714": 79, "697161": 79, "987731": 79, "941806": 79, "817067": 79, "309945": 79, "evaluate_epsilon_gradi": [79, 246], "573770": 80, "739": [80, 97, 255], "165105": 80, "741": [80, 97, 244, 255], "742": [80, 97, 244, 255], "743": [80, 97, 255], "evaluate_population_predict": [81, 246], "529739": 82, "179910": [82, 265], "688648": 82, "798916": 82, "023225": 82, "459036": 82, "223295": 82, "217288": 82, "472888": 82, "226455": 82, "evaluate_individual_predict": [82, 246], "wre": [83, 246], "313859": 83, "675721": 83, "544240": 83, "921720": 83, "517677": 83, "223935": 83, "053334": 83, "007023": 83, "931252": 83, "778389": 83, "flag": [84, 246, 279, 280], "origin": [84, 197, 244, 245, 249, 251, 259, 264, 279], "care": [84, 225], "00469307": [87, 88, 89, 136, 168, 179, 190, 195, 266, 268, 270], "fix_paramet": [87, 89, 192, 193, 268], "unfix_paramat": [87, 88, 89, 193], "fix_paramaters_to": [87, 193], "unfix_paramaters_to": [87, 88, 89, 167, 192], "fix_or_unfix_paramet": [88, 89, 192, 193], "fix_parameters_to": [88, 167, 192, 268], "baselin": [91, 96, 129, 246, 259], "60": [91, 253, 255, 264, 274], "63": [91, 110, 255, 267, 276], "present": [93, 99, 248, 255, 259, 264, 280], "extract": [93, 99, 246, 248, 262], "directli": [94, 225, 229, 230, 246, 248, 255, 256, 264, 266, 268, 273, 280], "cmax": [94, 246, 255], "tmax": [94, 246, 255], "cmin": [94, 246, 255], "tmin": [94, 246, 255], "doseid": [94, 97, 255], "589": [94, 98, 255], "config": [95, 246, 251, 271], "get_baselin": [96, 246], "set_covari": 96, "period": [97, 255], "96": [98, 188, 244, 253, 255, 268, 269], "108": [98, 255, 267], "120": [98, 255, 267], "132": [98, 255, 267], "144": [98, 255, 267, 278], "retriev": [100, 101, 106, 107, 112, 114, 208, 209, 225, 229, 230, 246, 266, 267, 268, 281], "get_pk_paramet": [101, 114, 246], "get_rv_paramet": [101, 112, 126, 246], "has_random_effect": [101, 114, 246], "opr": [102, 109, 113], "get_population_prediction_express": [102, 246], "epress": [102, 113], "item": [105, 250, 253, 264], "activ": [106, 107, 108, 264], "get_number_of_observ": [106, 110, 246, 255], "get_number_of_observations_per_individu": [106, 107, 110, 246], "total": [107, 246, 255], "get_number_of_individu": [107, 108, 246, 255], "observation_count": 108, "accord": [109, 246, 264, 269, 280], "oeta\u2082": 109, "oeta\u2081": 109, "112": [110, 253, 255, 261, 263, 267, 269, 276, 277], "131": [110, 255, 267], "146": [110, 253, 255, 263, 267], "get_theta": [111, 115, 246], "get_sigma": [111, 116, 246], "get_individual_paramet": [112, 114, 126, 246], "get_individual_prediction_express": [113, 246], "get_omega": [115, 116, 246], "structur": [116, 211, 227, 246, 248, 255, 262, 263, 266, 268, 269, 280, 282], "00": [116, 259, 266, 267, 274, 276, 278, 280], "olumn": 117, "milligram": [117, 255], "liter": [117, 255], "kilogram": [117, 255], "named_subscript": 118, "greek": 118, "subscript": 118, "cleanup_model": [118, 246], "\u03b8\u2081": 118, "\u03b8\u2082": 118, "\u03b8\u2083": 118, "\u03b7\u2081": 118, "\u03b7\u2082": 118, "\u03b5\u2081": 118, "has_proportional_error_model": [119, 120, 246], "has_combined_error_model": [119, 125, 246], "proportin": [120, 268], "has_additive_error_model": [120, 125, 246], "reli": [122, 123, 124, 128, 264], "heurist": [122, 123, 124, 128], "abl": [122, 123, 124, 128, 246, 258, 260, 262, 268, 272, 273], "detect": [122, 123, 124, 128, 246, 260, 266, 272], "micha": [123, 124, 169, 170, 248, 280], "menten": [123, 124, 169, 170, 248, 280], "set_michaelis_menten_elimin": [123, 165, 170, 182, 246, 268], "michali": 124, "set_mixed_mm_fo_elimin": [124, 268], "set_zero_order_elimin": [128, 165, 169, 170, 246, 268], "get_covariate_baselin": [129, 246], "load": 130, "statment": 131, "mu": [132, 259], "referenc": [132, 268], "theta_1": 132, "eta_1": [132, 259], "mu_1": [132, 259], "\u03bc\u2081": 132, "\u03bc\u2082": 132, "dataset_or_model": [133, 153], "name_pattern": [133, 153], "omitted_": 133, "omiss": 133, "omit": [133, 248, 253, 268], "placehold": [133, 153], "plot": [134, 135, 246, 259, 265, 273], "alt": [134, 135, 244, 259, 265], "chart": [134, 135, 244], "iofv1": 135, "iofv2": 135, "against": [135, 264], "iofv": [135, 222, 244, 246, 265, 267, 279], "scatterplot": 135, "subroutin": [136, 246, 264, 266, 268, 270], "advan1": [136, 266, 268, 270], "trans2": [136, 266, 268, 270], "IF": [136, 246, 264, 266, 268], "gt": [136, 266], "lt": [136, 266], "ptvcl": [136, 183, 266], "ptvv": [136, 266], "ivcl": [136, 244, 259, 266, 268, 270], "ivv": [136, 244, 259, 266, 268], "uncondit": [136, 266], "cwre": [136, 221, 222, 266, 267, 276, 277], "npde": [136, 266], "noappend": [136, 266], "noprint": [136, 266], "onehead": [136, 266], "home": [139, 246, 266], "run1": [139, 140, 209], "mod": [139, 225, 227, 246, 248, 255, 266, 267, 268, 280], "read_model_from_databas": [139, 141, 246], "databas": [139, 140, 141, 225, 226, 227, 229, 230, 231, 233, 238, 243, 246], "read_model_from_str": [139, 140, 246, 268], "lookup": 140, "err": [141, 268], "has_covariate_effect": [143, 246], "unrun": 144, "to_remov": [146, 147, 248], "eta_iov_1_1": 147, "add_lag_tim": [148, 178, 246, 268], "uloq": 149, "736": 149, "add_peripheral_compart": [150, 173, 246, 268], "new_nam": [152, 171], "renam": [152, 246], "clash": [152, 225, 227], "resampl": 153, "stratifi": [153, 248], "sample_s": [153, 248], "resample_": 153, "randomli": [153, 156], "renumb": [153, 248], "upward": 153, "stratif": [153, 248], "determin": [153, 261, 263, 264, 269], "valueerror": 153, "strata": 153, "suppli": [153, 261, 263, 269, 276], "control": [153, 251, 263, 264, 266], "pattern": [153, 264], "samples_per_id": 154, "pool": [154, 261], "iec": 154, "127941": 154, "037273": 154, "065492": 154, "182851": 154, "263323": 154, "265849": 154, "295883": 154, "060346": 154, "012108": 154, "219967": 154, "034279": 154, "040988": 154, "187879": 154, "143184": 154, "088845": 154, "034655": 154, "187779": 154, "014214": 154, "019953": 154, "151151": 154, "sample_parameters_from_covariance_matrix": [154, 156, 246], "sample_parameters_uniformli": [154, 155, 246], "uniform": [154, 155, 156], "force_posdef_sampl": [155, 156, 248], "force_posdef_covmatrix": [155, 248], "mani": [155, 246, 268], "never": [155, 269], "005069": 155, "974989": 155, "204629": 155, "024756": 155, "012088": 155, "012943": 155, "004690": 155, "958431": 155, "233231": 155, "038866": 155, "029000": 155, "012516": 155, "004902": 155, "950778": 155, "128388": 155, "019020": 155, "023866": 155, "013413": 155, "sample_individual_estim": [155, 156, 246], "estiat": [155, 156], "reject": 156, "004878": 156, "908216": 156, "149441": 156, "029179": 156, "025472": 156, "012947": 156, "004828": 156, "014444": 156, "149958": 156, "028853": 156, "027653": 156, "013348": 156, "004347": 156, "053837": 156, "165804": 156, "028465": 156, "026798": 156, "013727": 156, "data_tran": [157, 159, 175, 246, 268], "series_term": 157, "\u00b2": [157, 159], "epsilon_1": [157, 159, 175], "expans": [157, 268], "approxim": [157, 264], "\u03b5\u2090": [157, 159, 268], "set_proportional_error_model": [157, 159, 246, 268], "set_combined_error_model": [157, 175, 246, 268, 277], "epsilon_2": 159, "remove_error_model": [159, 175, 246, 268], "\u03b5\u209a": [159, 175, 268], "set_additive_error_model": [159, 175, 246, 268], "fix_to_log": 161, "dynam": [161, 235, 264], "lambda": [161, 186, 187, 274, 276], "zeta": [161, 274, 276], "emul": 161, "set_bolus_order_absorpt": [164, 176, 181], "list_of_ep": [166, 174], "same_eta": [166, 248], "chosen": [166, 246, 261, 268, 280], "eta_rv1": 166, "set_power_on_ruv": [166, 246, 268, 277], "set_upper_bound": [168, 190], "unconstrain_paramet": [168, 179, 192], "constraint": [168, 179, 183, 190, 192, 246, 256, 273], "clmm": [169, 170, 182, 268], "km": [169, 170, 182, 246, 268], "set_first_order_elimin": [169, 170, 182, 246, 268], "prefer": [172, 264], "peripheral2": 173, "lower_limit": 174, "zero_protect": [174, 175, 246], "autodetect": 174, "protect": [174, 175, 246, 264], "power\u2081": 174, "set_iiv_on_ruv": [174, 246, 268, 277], "225e": 175, "ipredadj": 175, "sequenti": [176, 246, 248, 269, 280], "mdt": [176, 178, 246, 268], "quantil": [177, 244, 246], "time_vari": [177, 276, 277], "keep_depot": [178, 246], "transit1": [178, 268], "transit2": [178, 268], "transit3": [178, 268], "set_lower_bound": [179, 190], "use_thetas_for_error_stdev": [180, 246, 268], "smallest": [182, 255], "simplifi": [183, 246, 247, 253, 256, 273], "plugin": [183, 250, 251, 256, 257, 260, 281], "conf": [183, 250], "comment": [183, 246, 250, 270], "ab": [183, 187, 248, 268], "analyt": 184, "becom": [185, 248, 273], "create_joint_distribut": [185, 246, 268], "list_of_eta": [186, 187, 188], "boxcox": [186, 246], "lambda1": [186, 187, 268], "transform_etas_tdist": [186, 187, 246, 268], "transform_etas_john_drap": [186, 188, 246, 268], "john": [187, 246, 248], "draper": [187, 246, 248], "spelect": 187, "1980": 187, "famili": [187, 264], "journal": [187, 277], "royal": 187, "societi": 187, "190": 187, "197": 187, "doi": [187, 259, 277], "2307": 187, "2986305": 187, "transform_etas_boxcox": [187, 188, 246, 268], "degre": [188, 276], "freedom": [188, 264, 276], "80": [188, 253, 267, 268, 276, 277], "df1": [188, 268], "translat": [189, 246], "hour": [189, 255], "caution": 189, "account": 189, "unfix_paramet": [190, 246, 268], "had": [194, 264], "move_est_close_to_bound": 195, "00469555": 195, "984258": [195, 266, 267], "15892": 195, "0293508": [195, 266], "sd_ep": [196, 268], "set_weighted_error_model": [196, 246, 268], "write": [197, 198, 224, 246, 251, 264, 272, 281], "whose": [197, 264], "suffix": 197, "overwrit": [197, 198], "newdataset": 197, "recalcul": 199, "frem_dir1": 199, "read_result": [199, 208, 246, 280], "model_or_model": 200, "run_tool": [200, 211, 221, 246], "84": [201, 202, 222, 261, 263, 269, 278], "machin": [201, 202, 203, 225, 229, 230, 255, 260, 264], "learn": [201, 202, 203, 260], "threshold": [201, 202, 203, 248, 253], "signal": [201, 202, 265], "raw": [201, 202, 203, 222, 244, 246, 255], "delta": [201, 244, 246, 265], "tell": [201, 203, 264], "predict_influential_outli": [201, 203, 246], "predict_outli": [201, 202, 246], "outlier_cutoff": 202, "influential_cutoff": 202, "singal": [202, 203], "influential_outli": 202, "predict_influential_individu": [202, 203, 246], "simev": [203, 246, 275], "281443": 203, "057392": 203, "119105": 203, "846849": 203, "600540": 203, "014008": 203, "750734": 203, "247175": 203, "117002": 203, "835389": 203, "529582": 203, "035670": 203, "292333": 203, "303278": 203, "565949": 203, "078192": 203, "291295": 203, "466421": 203, "402343": 203, "699996": 203, "567987": 203, "526776": 203, "303918": 203, "177588": 203, "272142": 203, "390000": 203, "775876": 203, "501528": 203, "700951": 203, "352599": 203, "294196": 203, "744014": 203, "215364": [203, 278], "208691": 203, "713130": 203, "300293": 203, "810736": 203, "459877": 203, "675125": 203, "563835": 203, "526945": 203, "449199": 203, "720714": 203, "792248": 203, "860923": 203, "731858": 203, "247131": 203, "894190": 203, "282737": 203, "153398": 203, "200546": 203, "902774": 203, "586427": 203, "183329": 203, "036930": 203, "639868": 203, "765279": 203, "209665": 203, "225693": 203, "errors_allow": [205, 246], "bic_typ": 205, "rounding_error": 205, "maxevals_exceed": 205, "lrt": 205, "denot": [205, 259, 268], "model_1": [205, 259], "model_2": [205, 259], "extern": [206, 251, 255, 256, 268, 272, 273], "create_result": [207, 246, 268], "retrieve_model": [208, 225, 229, 230, 246, 280], "tooldatabas": [209, 226, 231, 235, 238], "modeldatabas": [209, 225, 227, 233], "tooldir_path": 209, "retrieve_final_model": [209, 246], "allometryresult": 210, "resum": [211, 238, 280], "amd": [211, 246, 280], "reult": 211, "search": [211, 212, 217, 246, 248, 253, 263, 273, 280], "runord": [211, 248], "compon": [211, 248, 256, 260, 264, 276], "run_iiv": [211, 246], "try": [212, 248, 253, 258, 273, 282], "sentenc": [212, 253], "compact": [212, 253], "mode": [212, 213, 214, 215, 217, 246, 259, 264], "covsearchresult": 212, "estmethod": [213, 246, 280], "exhaust": [213, 217, 246], "exhaustive_with_upd": [213, 258], "exhaustive_only_ev": [213, 246, 258], "estmethodresult": 213, "reduc": [213, 246, 258, 278], "no_add": [214, 217, 246, 261, 269], "iivsearch": [214, 246, 280], "brute_force_no_of_eta": [214, 261], "brute_force_block_structur": [214, 261], "strategi": [214, 217, 246, 261, 269], "add_diagon": [214, 217, 246, 261, 269], "iivsearchresult": 214, "iovsearch": [215, 246, 280], "iovsearchresult": 215, "modelsearchresult": 217, "bin": [218, 276, 282], "attempt": [218, 253, 264], "ruvsearchresult": 218, "arg": 219, "kei": [221, 229, 264, 277], "fit_result": 221, "mathrm": [222, 279], "veebar": 222, "least": [222, 264, 280], "outli": [222, 279], "criteria": [222, 246, 248, 253, 261, 263, 269, 277], "include_all_estimation_step": 223, "runtim": [223, 246, 258], "wasn": 223, "estmat": 223, "586": [223, 265, 267], "276056": [223, 265], "again": [224, 268, 282], "Not": [224, 255, 264], "applic": [224, 238, 264, 273, 280], "file_extens": [225, 227], "nontransactionalmodeldatabas": [225, 230], "local": [225, 226, 227, 229, 230, 231, 233, 251, 261, 264], "store": [225, 226, 227, 229, 230, 231, 233, 246, 270, 280], "modelnam": 225, "overwritten": 225, "recommend": [225, 282], "localmodeldirectorydatabas": 225, "retrieve_fil": [225, 229, 230], "filesystem": [225, 229, 230], "model_nam": [225, 227, 229, 230, 259], "retrieve_local_fil": [225, 229, 230], "destination_path": [225, 229, 230], "retrieve_modelfit_result": [225, 229, 230], "store_local_fil": [225, 226, 229, 230, 231, 233], "new_filenam": 225, "store_metadata": [225, 226, 229, 230], "store_model": [225, 229, 230], "store_modelfit_result": [225, 229, 230], "toolnam": [226, 231, 233, 280], "exist_ok": 226, "read_metadata": 226, "source_path": [226, 231, 233], "store_result": [226, 231, 233], "transactionalmodeldatabas": 227, "subdirectori": [227, 280], "list_model": 227, "snapshot": [227, 229], "context": [227, 229, 264, 273], "transact": [227, 229, 264], "writabl": [227, 229], "timestamp": 228, "log_error": 228, "log_warn": 228, "abc": [229, 233], "baseclass": 229, "primari": 229, "center": 229, "around": [229, 249], "belong": [229, 282], "dummi": [230, 231], "anyth": [230, 231, 251, 261, 264], "task_input": 232, "func": 232, "model_databas": 233, "task": [234, 268, 272, 273], "acycl": 234, "node": [234, 235], "edg": 234, "wf": 235, "unique_nam": 235, "db": 235, "dask": [235, 246, 273], "whatev": [235, 264], "alia": [236, 237], "localdirectorydatabas": [236, 243], "localdirectorytooldatabas": [237, 243, 280], "dispatch": [238, 243, 246, 280], "execut": [238, 246, 264], "executiondispatch": 238, "default_dispatch": 243, "local_dask": [243, 280], "default_model_databas": 243, "default_tool_databas": 243, "psn": [244, 245, 246, 248, 254, 259, 265, 274, 276, 278, 279, 280, 281], "parameter_statist": 244, "bia": [244, 246], "rse": [244, 267], "divid": [244, 248, 270], "005856": 244, "005820": 244, "000038": 244, "000487": 244, "083167": 244, "455435": 244, "443165": 244, "009885": 244, "099305": 244, "068231": 244, "141376": 244, "109797": 244, "030323": 244, "114986": 244, "813337": 244, "195880": 244, "195844": 244, "005646": 244, "046548": 244, "237634": 244, "015546": 244, "015112": 244, "000872": 244, "003434": 244, "220871": 244, "parameter_distribut": 244, "lowest": [244, 259], "highest": [244, 246, 259, 270], "interpol": 244, "fall": [244, 246], "x_0": 244, "x_1": 244, "np": [244, 255, 266], "004762": 244, "004767": [244, 253], "004805": 244, "004974": 244, "005120": 244, "211220": 244, "214364": 244, "242657": 244, "290449": 244, "307106": 244, "000011": 244, "012961": 244, "100104": 244, "100376": 244, "102825": 244, "116900": 244, "125456": 244, "007812": 244, "007857": 244, "008261": 244, "009741": 244, "011116": 244, "97": [244, 253], "006669": 244, "006685": 244, "007429": 244, "007593": 244, "007612": 244, "613679": 244, "646879": 244, "726604": 244, "730551": 244, "730990": 244, "338957": 244, "371005": 244, "536153": 244, "545316": 244, "546334": 244, "281203": 244, "300874": 244, "306057": 244, "306101": 244, "306106": 244, "021677": 244, "023708": 244, "025429": 244, "026581": 244, "026710": 244, "parameter_estimates_histogram": 244, "histogram": [244, 246], "repeatchart": 244, "005298": 244, "30730": 244, "074931": 244, "136423": 244, "011374": 244, "006048": 244, "38692": 244, "029844": 244, "189763": 244, "019143": 244, "005624": 244, "53224": 244, "118806": 244, "219550": 244, "019831": 244, "005771": [244, 253], "40115": 244, "034322": 244, "150905": 244, "012287": 244, "005933": 244, "42119": 244, "074050": 244, "171158": 244, "017394": 244, "005275": 244, "59087": 244, "289793": 244, "248009": 244, "016396": 244, "005847": 244, "44711": 244, "109860": 244, "206296": 244, "016346": 244, "005939": 244, "52688": 244, "040057": 244, "210552": 244, "013631": 244, "98": [244, 253, 259, 261], "005998": 244, "41948": 244, "192046": 244, "175269": 244, "013485": 244, "005479": 244, "43956": 244, "109733": 244, "197253": 244, "011771": 244, "ofv_statist": 244, "bootstrap_bootdata_ofv": 244, "original_bootdata_ofv": 244, "sum": [244, 254], "bootstrap_origdata_ofv": 244, "boostrap": 244, "original_origdata_ofv": 244, "delta_bootdata": 244, "delta_origdata": 244, "722": 244, "220925": 244, "386171": 244, "134966": 244, "245796": 244, "929008": 244, "620085": 244, "523805": 244, "737": 244, "632473": 244, "951710": 244, "024871": 244, "110934": 244, "218525": 244, "629078": 244, "737746": 244, "ofv_distribut": 244, "parameter_distriut": 244, "601": 244, "007583": 244, "602": 244, "266529": 244, "613": 244, "597036": 244, "641": 244, "950291": 244, "621": 244, "273905": 244, "622": 244, "073513": 244, "629": 244, "269987": 244, "806391": 244, "915431": 244, "955989": 244, "731": 244, "321004": 244, "879050": 244, "021463": 244, "059207": 244, "398901": 244, "299364": 244, "020705": 244, "061262": 244, "426277": 244, "984323": 244, "879224": 244, "788": 244, "101562": 244, "803": 244, "869362": 244, "661": 244, "714778": 244, "800": [244, 267], "121734": 244, "810": [244, 267], "417314": 244, "732": 244, "165644": 244, "757": 244, "877092": 244, "369737": 244, "671690": 244, "375800": 244, "162811": 244, "270917": 244, "982365": 244, "475010": 244, "828": 244, "178008": 244, "839": 244, "691272": 244, "840": 244, "970524": 244, "836": 244, "395339": 244, "846": 244, "981350": 244, "848": 244, "157573": 244, "859": 244, "964343": 244, "893": [244, 261], "228440": 244, "896": [244, 259], "924451": 244, "443675": 244, "246668": 244, "558111": 244, "129": 244, "069616": 244, "162": 244, "333713": 244, "166": 244, "029724": 244, "ofv_plot": 244, "layerchart": [244, 265], "dofv_quantiles_plot": 244, "show": [244, 248, 259, 264, 276, 279], "metric": [244, 245, 267], "chi": 244, "squar": 244, "907310": 244, "911844": 244, "750": 244, "388987": 244, "670": 244, "684132": 244, "675": 244, "846450": 244, "738": 244, "099607": 244, "248779": 244, "734": 244, "876739": 244, "733": [244, 277], "182039": 244, "626": 244, "440820": 244, "637": 244, "427606": 244, "748": 244, "285576": 244, "239599": 244, "025253": 244, "519551": 244, "781": 244, "380852": 244, "793": 244, "303365": 244, "994494": 244, "754": 244, "666705": 244, "688168": 244, "664": 244, "288159": 244, "671": 244, "883942": 244, "255718": 244, "974215": 244, "332959": 244, "052283": 244, "689": 244, "940217": 244, "693": 244, "963948": 244, "735": 244, "763734": 244, "004534": 244, "494261": 244, "162318": 244, "204881": 244, "627961": 244, "287312": 244, "986786": 244, "390849": 244, "785654": 244, "624824": 244, "922512": 244, "099768": 244, "595783": 244, "360991": 244, "358744": 244, "157557": 244, "023731": 244, "869007": 244, "372000e": 244, "000015": 244, "000003": 244, "098000e": 244, "462220e": 244, "009862": 244, "002316": 244, "002320": 244, "320640e": 244, "531300e": 244, "013222": 244, "000146": 244, "961337e": 244, "572900e": 244, "002167": 244, "014550e": 244, "000033": 244, "000196": 244, "178980e": 244, "included_individu": 244, "case_result": [245, 246], "cook_scor": 245, "jackknife_cook_scor": 245, "delta_ofv": 245, "dofv_influenti": 245, "130159": 245, "121389": 245, "015207": 245, "348263": 245, "336159": 245, "144045": 245, "192433": 245, "181125": 245, "031030": 245, "163095": 245, "155901": 245, "026142": 245, "422651": 245, "404915": 245, "190732": 245, "374312": 245, "343311": 245, "097063": 245, "169869": 245, "163883": 245, "026223": 245, "263865": 245, "254943": 245, "058123": 245, "757098": 245, "673587": 245, "477910": 245, "150161": 245, "144191": 245, "023623": 245, "361646": 245, "352901": 245, "217902": 245, "255533": 245, "215005": 245, "035375": 245, "191848": 245, "187019": 245, "038199": 245, "376365": 245, "337975": 245, "096680": 245, "142806": 245, "137340": 245, "014709": 245, "193393": 245, "179744": 245, "031711": 245, "131746": 245, "122842": 245, "020637": 245, "176644": 245, "932149": 245, "036787": 245, "128197": 245, "120498": 245, "019030": 245, "141093": 245, "138101": 245, "029021": 245, "176582": 245, "153583": 245, "035291": 245, "104396": 245, "100064": 245, "015499": 245, "552071": 245, "501458": 245, "278595": 245, "242334": 245, "217068": 245, "047627": 245, "792099": 245, "715951": 245, "798775": 245, "135247": 245, "133493": 245, "021356": 245, "442779": 245, "424958": 245, "125763": 245, "132903": 245, "127188": 245, "010157": 245, "081122": 245, "076790": 245, "005443": 245, "183624": 245, "168501": 245, "027707": 245, "113959": 245, "111168": 245, "012363": 245, "532749": 245, "515747": 245, "325048": 245, "094133": 245, "091212": 245, "014747": 245, "447798": 245, "406737": 245, "194457": 245, "364978": 245, "352973": 245, "124295": 245, "270838": 245, "252922": 245, "063675": 245, "129553": 245, "121963": 245, "014043": 245, "254914": 245, "243250": 245, "064025": 245, "207529": 245, "194633": 245, "046887": 245, "239182": 245, "218112": 245, "044252": 245, "181986": 245, "173826": 245, "020285": 245, "604112": 245, "584208": 245, "604211": 245, "407717": 245, "369648": 245, "154161": 245, "215722": 245, "196744": 245, "043742": 245, "214167": 245, "200091": 245, "036238": 245, "094284": 245, "089002": 245, "007506": 245, "074174": 245, "072365": 245, "007535": 245, "743323": 245, "717468": 245, "654313": 245, "153971": 245, "147360": 245, "014502": 245, "284706": 245, "278460": 245, "072960": 245, "331587": 245, "309374": 245, "116933": 245, "447965": 245, "421612": 245, "129593": 245, "184872": 245, "175196": 245, "029896": 245, "430382": 245, "415446": 245, "141657": 245, "409307": 245, "369197": 245, "189729": 245, "084764": 245, "079718": 245, "007416": 245, "107600": 245, "103145": 245, "013947": 245, "154672": 245, "150761": 245, "028236": 245, "155632": 245, "150461": 245, "034848": 245, "covariance_ratio": 245, "skipped_individu": 245, "050505": 245, "963884": 245, "058896": 245, "087449": 245, "985403": 245, "029066": 245, "101636": 245, "086424": 245, "017369": 245, "094799": 245, "849310": 245, "121111": 245, "049151": 245, "096456": 245, "070088": 245, "040691": 245, "065881": 245, "606158": 245, "205007": 245, "099191": 245, "143483": 245, "050691": 245, "086007": 245, "156273": 245, "919336": 245, "056714": 245, "999221": 245, "029600": 245, "034017": 245, "108785": 245, "038495": 245, "954054": 245, "053618": 245, "096334": 245, "943556": 245, "125423": 245, "086167": 245, "145822": 245, "113939": 245, "114399": 245, "057664": 245, "788608": 245, "063991": 245, "115559": 245, "160549": 245, "034685": 245, "035618": 245, "714976": 245, "092664": 245, "089158": 245, "054565": 245, "002555": 245, "032356": 245, "003056": 245, "936719": 245, "122771": 245, "078285": 245, "096841": 245, "068821": 245, "sqrt": [245, 268], "p_i": 245, "p_": 245, "orig": 245, "operatornam": [245, 259, 279], "sum_": 245, "overlin": [245, 259], "_j": 245, "_k": [245, 259], "det": 245, "Then": [245, 259], "ofv_": 245, "iofv_": 245, "iofv_k": 245, "ofv_k": 245, "case_column": 245, "rikard": [245, 247, 252, 273, 277], "nordgren": [245, 247, 252, 273, 277], "sebastian": [245, 247, 252], "ueckert": [245, 247, 252], "svetlana": 245, "freiberga": 245, "karlsson": [245, 247, 252, 259, 277], "faster": [245, 246, 273], "2018": [245, 264, 277], "abstr": [245, 247], "8683": 245, "www": [245, 247, 264], "meet": [245, 247, 249, 264, 273], "ofv_iter": 246, "parameter_estimates_iter": 246, "eval": 246, "did": [246, 278], "successfulli": [246, 282], "round": [246, 255], "subtool": [246, 280], "proxi": [246, 264], "1314": 246, "1355": [246, 253], "1378": [246, 261], "typo": 246, "caus": [246, 264, 273, 282], "1377": 246, "1381": 246, "1064": [246, 261], "afd7707": 246, "1139": 246, "saddl": 246, "1394": 246, "too": [246, 264], "pars": [246, 262, 270, 272, 273, 280], "1117": 246, "timeout": 246, "loop": 246, "wait": 246, "lst": [246, 280], "much": [246, 273], "phi": [246, 251, 280], "de": 246, "correctli": 246, "ncomp": 246, "deidentify_data": 246, "cli": [246, 262], "anonym": 246, "dadt": 246, "setter": 246, "multivari": 246, "1293": 246, "1302": [246, 253], "1303": [246, 269], "last20": 246, "run_modelsearch": [246, 269, 280], "run_iovsearch": [246, 263], "run_ruvsearch": [246, 277], "run_covsearch": [246, 253, 282], "run_iivsearch": [246, 261], "nomem": 246, "rh": 246, "1180": 246, "887": [246, 261, 263], "1162": 246, "1032": 246, "add_covariate_effect": [246, 253, 268], "1004": 246, "remove_covariate_effect": 246, "1181": 246, "9fd701521": 246, "best_model": 246, "final_model_nam": 246, "a7fbcbfe2": 246, "update_initial_individual_estim": 246, "modelsearch_candidate1": [246, 269, 280], "modifi": [246, 262, 264, 271], "wors": 246, "calculate_b": [246, 261, 263, 269], "calculate_a": 246, "check_parameters_near_bound": 246, "check_high_correl": 246, "plot_iofv_vs_iofv": 246, "plot_individual_predict": 246, "evaluate_express": 246, "evaluate_weighted_residu": 246, "parameter_esimt": 246, "calculate_pk_parameters_statist": 246, "update_init": [246, 266, 268], "predict_": 246, "print_fit_summari": 246, "write_result": 246, "rank_model": 246, "speedup": 246, "297a64041": 246, "individual_ofv": [246, 267], "1101": 246, "57fc4fee8": 246, "fd417aaf": 246, "convert_model": 246, "d5458e36": 246, "keyerror": 246, "localmodeldirectori": 246, "filenotfounderror": 246, "1193bd39": 246, "unus": 246, "submodul": 246, "bb96a13c": 246, "update_paramet": 246, "0ca786c5": 246, "dd056da3": 246, "915bc9c7": 246, "get_config_path": 246, "disabl": [246, 249], "82b32278": 246, "unwant": 246, "debug": 246, "1131a610": 246, "ebfafb45": 246, "1173": 246, "fb070ee1": 246, "1049": [246, 261], "pyreadr": 246, "easier": [246, 256, 266], "instal": [246, 248, 264, 281], "mac": [246, 251], "m1": [246, 278], "get_evid": 246, "get_cmt": 246, "resmod": [246, 275], "916": 246, "strict": [246, 264], "1055": 246, "attibut": 246, "1092": 246, "exlud": 246, "unreport": 246, "1076": 246, "988": 246, "1c65359": 246, "42fe72f": 246, "1001": 246, "lead": [246, 268, 282], "uneven": 246, "branch": [246, 251], "stepwis": [246, 253, 278, 280], "694": 246, "properli": 246, "708": 246, "790": 246, "974": 246, "produc": [246, 264], "1017": 246, "989": 246, "71f4cf23": 246, "dsl": 246, "932": 246, "973": 246, "cfc09bad": 246, "975": 246, "917": 246, "977": 246, "908": 246, "fd564168": 246, "088a046a": 246, "c76fa476": 246, "430f1d2e": 246, "make_declar": 246, "greekify_model": 246, "find_clearance_paramet": 246, "find_volume_paramet": 246, "vp": 246, "newer": 246, "820": [246, 267], "seprat": 246, "sporad": 246, "race": [246, 249], "lazi": 246, "duplic": 246, "745": 246, "1st": 246, "3rd": 246, "bad": 246, "710": 246, "configur": [246, 270, 281], "licens": 246, "advanx": 246, "add_time_after_dos": [246, 255], "intercompartment": 246, "695": 246, "defob": 246, "choos": [246, 261, 264, 269, 270, 271], "gl": 246, "solve_ode_system": 246, "meta": 246, "switch": [246, 273], "read_dataset_from_datainfo": 246, "addl": 246, "linalgerror": 246, "656": [246, 261], "tflite": [246, 260], "649": 246, "654": 246, "expand_additional_dos": 246, "better": [246, 269, 277], "modelsyntaxerror": 246, "588": 246, "625": [246, 261], "578": 246, "vc1": 246, "577": 246, "632": 246, "636": 246, "boundari": [246, 263, 269], "590": 246, "gl_real": 246, "sampled_iofv": [246, 279], "version": [246, 248, 260, 264, 280], "subblock": 246, "check_dataset": 246, "tensorflow": 246, "modelbuild": 246, "add_mdt_iiv": 246, "three": [246, 256, 264, 270], "add_eta": [246, 276], "etas_as_fullblock": 246, "iiv_as_fullblock": 246, "add_mdt_eta": 246, "remove_loq_data": 246, "wip": 246, "don": 246, "130": 246, "create_report": 246, "528": 246, "457": 246, "translate_nmtran_tim": 246, "print_model_cod": [246, 260, 266], "has_michaelis_menten_elimin": 246, "has_zero_order_elimin": 246, "has_first_order_elimin": 246, "has_mixed_mm_fo_elimin": 246, "2c": 246, "1c": 246, "timevari": 246, "create_symbol": 246, "remove_unused_parameters_and_rv": 246, "mu_reference_model": 246, "simplify_express": 246, "bump_model_numb": 246, "regress": 246, "get_doseid": [246, 255], "get_unit_of": 246, "get_concentration_parameters_from_data": [246, 255], "write_csv": 246, "resample_data": 246, "omit_data": 246, "get_observation_express": 246, "get_individu": 246, "get_dos": [246, 255], "list_time_varying_covari": 246, "estmeth": 246, "optim": [246, 256, 262, 266, 273], "incorrect": 246, "add_allometri": 246, "insert_aft": 246, "modelstat": 246, "power_on_ruv": 246, "estimationmethod": 246, "guard": 246, "avoid": [246, 256, 264], "cdd": 246, "bipp": [246, 248], "frem": [246, 266, 275, 276], "5000": 246, "shift": 246, "write_model": [246, 266, 268, 270], "header": 246, "nest": [246, 282], "update_sourc": [246, 270], "due": [246, 277], "set_dtbs_error_model": [246, 268], "dure": [246, 282], "logger": 246, "parametr": 246, "broken": 246, "parallel": [246, 280], "generate_model_cod": [246, 266], "print_model_symbol": 246, "get_observ": [246, 255], "parameter_sampl": 246, "api": [246, 256, 262, 268, 272, 273, 281], "improv": [246, 276], "eta_shrinkag": 246, "summarize_model": 246, "window": [246, 251, 260, 264], "rstudio": [246, 273], "zero_order_absorpt": 246, "first_order_absorpt": 246, "bolus_absorpt": 246, "set_bolus_absorpt": [246, 268], "seq_zo_fo_absorpt": 246, "set_seq_zo_fo_absorpt": [246, 268], "have_zero_order_absorpt": 246, "has_zero_order_absorpt": 246, "individual_shrinkag": 246, "individual_parameter_statist": 246, "pk_paramet": 246, "create_rv_block": 246, "split_rv_block": 246, "nind": 246, "nob": 246, "nobsi": 246, "remove_error": 246, "additive_error": 246, "proportional_error": 246, "combined_error": 246, "has_additive_error": 246, "has_proportional_error": 246, "has_combined_error": 246, "theta_as_stdev": 246, "set_dtbs_error": 246, "tdist": [246, 274], "john_drap": 246, "add_paramet": 246, "add_individual_paramet": [246, 268], "first_order_elimin": 246, "zero_order_elimin": 246, "michaelis_menten_elimin": 246, "mixed_mm_fo_elimin": 246, "revert": 246, "thread": [246, 249], "site": 246, "crossval": [246, 275], "qa": [246, 275], "plain": [246, 250, 251], "sdcorr": 246, "data_transform": [246, 268], "evalut": 246, "bootstrap": [246, 275], "dependent_variable_symbol": 246, "releas": [246, 264, 282], "claus": 246, "rework": 246, "interfac": [246, 256, 260, 262, 264, 266, 268, 273, 281, 282], "com": 246, "stdin": 246, "123": [246, 253, 261, 263, 267, 269, 277], "clearer": 246, "prioriti": [246, 270], "aggregatedmodelfitresult": 246, "priorit": [246, 270], "abbr": [246, 250, 270], "half": [246, 274, 276], "life": [246, 274, 276], "set_nam": 246, "copy_model": [246, 268, 282], "parameter_init": 246, "base_parameter_chang": [246, 259], "parameter_vari": [246, 259, 276], "coeffici": 246, "frem_result": 246, "simevalresult": 246, "nonfixed_init": 246, "parameterset": 246, "migrat": 246, "github": [246, 251, 260, 262, 273, 282], "action": [246, 248, 249, 251, 264, 273], "integr": [246, 248, 273], "columntyp": 246, "to_base_model": 246, "comined_mm_fo_elimin": 246, "absorption_r": 246, "pretti": 246, "qaresult": 246, "nmtranparseerror": 246, "error_model": 246, "bootstrapresult": 246, "pharmpyconfigpath": [246, 250], "environ": [246, 249, 281, 282], "linearizeresult": 246, "label": 246, "sometim": 246, "wrong": 246, "reset_indic": 246, "multiindic": 246, "functionsadd_lag_tim": 246, "yaml": 246, "view": [246, 264, 278], "assumpt": [246, 264], "0th": [246, 248], "parser": [246, 273], "individul": 246, "extend": [246, 264, 276, 278], "postprocess": [246, 275], "librari": [246, 260, 262, 264, 273, 282], "stella": [247, 252, 273], "belin": [247, 252, 273], "gunnar": [247, 252], "yngman": [247, 252, 259], "simon": [247, 252], "carter": [247, 252], "buatoi": [247, 252], "jo\u00e3o": [247, 252], "abrant": [247, 252], "andrew": [247, 252], "hooker": [247, 252], "assemblerr": 247, "novel": 247, "process": [247, 277], "2021": [247, 259], "9656": 247, "subcommand": 248, "top": [248, 255, 280], "often": [248, 251, 266, 278], "help": [248, 249, 253, 273, 280, 282], "verb": 248, "particular": [248, 249, 251, 255, 264, 265], "welcom": [248, 249, 251, 264], "usag": 248, "exit": 248, "program": [248, 249, 260, 264], "pheno_r": [248, 255, 266, 267], "prettyprint": 248, "output_fil": 248, "idcol": 248, "datecol": 248, "match": 248, "pager": 248, "stdout": [248, 280], "datasetsmultipl": 248, "1th": 248, "quot": 248, "comb": 248, "elimini": 248, "propot": 248, "error_typ": 248, "givenbi": 248, "cov_sampl": 248, "posdef": 248, "non_fix": 248, "input_path": 248, "particip": 249, "project": [249, 250, 251, 262, 264], "made": [249, 264, 266], "member": 249, "globe": 249, "divers": 249, "skill": [249, 273], "person": [249, 264], "experi": 249, "growth": 249, "everyon": [249, 251, 264], "guidelin": 249, "insid": [249, 264], "goal": 249, "inclus": [249, 264, 276], "grow": 249, "pledg": 249, "treat": [249, 251, 264], "peopl": 249, "harass": 249, "bulli": 249, "regardless": [249, 264, 266], "sexual": 249, "orient": 249, "gender": 249, "ident": 249, "appear": [249, 282], "nation": [249, 252], "ethnic": 249, "religion": 249, "imageri": 249, "sexist": 249, "racist": 249, "exclusionari": 249, "joke": 249, "acknowledg": [249, 264], "citat": 249, "request": [249, 251], "author": [249, 264], "own": [249, 250, 256, 264, 266], "cite": 249, "those": [249, 264, 268, 280], "realiz": 249, "varieti": [249, 253], "opinion": 249, "background": 249, "serv": [249, 264, 273], "enrich": 249, "discuss": 249, "pro": 249, "con": 249, "technologi": 249, "proactiv": 249, "ensur": [249, 264], "heard": 249, "feel": [249, 273], "confid": 249, "freeli": 249, "question": 249, "answer": 249, "respectfulli": 249, "pai": 249, "attent": 249, "feedback": 249, "forum": 249, "especi": 249, "contribut": [249, 262, 264], "conscienti": 249, "percept": 249, "wider": 249, "respond": 249, "strive": 249, "behavior": 249, "encourag": [249, 251, 256, 262], "product": [249, 253, 258, 264], "debat": 249, "disagr": 249, "entir": [249, 251, 264, 280], "silent": 249, "violat": [249, 264], "contact": [249, 264], "talk": 249, "privat": [249, 264], "situat": 249, "onlin": 249, "offlin": 249, "mail": [249, 264], "social": 249, "media": 249, "confer": 249, "associ": [249, 263, 264], "adapt": [249, 264, 273], "astropi": 249, "appdir": 250, "your": [250, 251, 260, 262, 264, 268, 270, 280, 282], "web": 250, "pypi": [250, 251, 260], "ini": 250, "fallback": 250, "pharmpyconfigfil": 250, "bug": 251, "appreci": 251, "suggest": [251, 262], "suitabl": [251, 273], "student": [251, 273], "intern": [251, 266, 268, 270, 273, 282], "commun": [251, 264], "aspir": 251, "conduct": [251, 269], "foster": 251, "linux": [251, 260], "maco": [251, 260], "ll": 251, "badg": 251, "pip": [251, 260], "python3": 251, "pip3": 251, "guid": 251, "former": 251, "ubuntu": 251, "apt": 251, "url": [251, 260], "render": [251, 264, 273], "On": [251, 273], "sudo": 251, "brew": 251, "unnecessari": [251, 264], "thing": [251, 264], "instruct": 251, "black": 251, "formatt": 251, "flake8": 251, "linter": 251, "isort": 251, "lint": 251, "reformat": 251, "py39": 251, "test_paramet": 251, "py": [251, 260], "test_get_theta": 251, "apart": 251, "suit": 251, "purpos": [251, 264], "complex": [251, 260, 262], "test_modelsearch": 251, "test_summary_individu": 251, "pull": 251, "manag": 251, "contributor": [251, 264], "emploi": 251, "commit": [251, 264], "push": 251, "name_of_branch": 251, "deploy": 251, "setup": 251, "trigger": [251, 266], "tag": 251, "changelog": 251, "bump": 251, "semant": 251, "bumpvers": 251, "cfg": 251, "sh": 251, "patch": 251, "minor": 251, "major": [251, 264], "copyright": 251, "necessari": [251, 264, 282], "coi": 251, "stream": [251, 266], "verbatim": [251, 264], "farmaci": 252, "uu": 252, "kajsa": 252, "harl": 252, "zhe": [252, 273], "huang": [252, 273], "aurelien": 252, "oom": 252, "piyanan": 252, "assawasuwannakit": 252, "xiaomei": 252, "chen": 252, "alzahra": 252, "hamdan": 252, "osama": 252, "qutishat": 252, "shijun": 252, "wang": 252, "tianwu": 252, "yang": 252, "warm": 252, "thank": 252, "sponsor": 252, "hoffman": 252, "la": 252, "roch": 252, "ltd": 252, "pharmetheu": 252, "uppsala": [252, 262], "univers": [252, 262], "enabl": [252, 264], "resourc": 252, "swedish": 252, "infrastructur": 252, "snic": 252, "uppmax": 252, "research": [252, 273], "council": 252, "inter": [253, 261], "five": 253, "third": [253, 256, 264], "fourth": 253, "cartesian": [253, 258], "manual": [253, 255, 280], "rewritten": 253, "notic": [253, 264], "semicolon": 253, "mox2": [253, 258, 261, 263, 269, 280], "covsearch_run1": 253, "covsearch_run2": 253, "covsearch_run3": 253, "covsearch_run4": 253, "covsearch_run5": 253, "covsearch_run7": 253, "covsearch_run8": 253, "covsearch_run9": 253, "covsearch_run10": 253, "covsearch_run16": 253, "covsearch_run17": 253, "covsearch_run18": 253, "covsearch_run19": 253, "covsearch_run20": 253, "covsearch_run21": 253, "covsearch_run22": 253, "covsearch_run23": 253, "covsearch_run24": 253, "covsearch_run25": 253, "covsearch_run26": 253, "covsearch_run27": 253, "covsearch_run28": 253, "covsearch_run29": 253, "covsearch_run30": 253, "covsearch_run31": 253, "covsearch_run32": 253, "covsearch_run33": 253, "covsearch_run34": 253, "covsearch_run35": 253, "covsearch_run36": 253, "covsearch_run37": 253, "covsearch_run38": 253, "covsearch_run39": 253, "covsearch_run40": 253, "covsearch_run41": 253, "covsearch_run42": 253, "covsearch_run43": 253, "covsearch_run44": 253, "covsearch_run45": 253, "covsearch_run46": 253, "covsearch_run47": 253, "covsearch_run48": 253, "covsearch_run49": 253, "covsearch_run50": 253, "covsearch_run51": 253, "covsearch_run52": 253, "covsearch_run53": 253, "covsearch_run54": 253, "pvalu": [253, 278], "goal_pvalu": [253, 278], "is_backward": [253, 278], "047127e": 253, "03": [253, 274, 276, 278], "710000e": 253, "568110e": 253, "494490e": 253, "498453e": 253, "459287e": 253, "280678e": 253, "923500e": 253, "003390e": 253, "984500e": 253, "372293e": 253, "176965e": 253, "207550e": 253, "626878e": 253, "564495e": 253, "539960e": 253, "762000e": 253, "823200e": 253, "417058e": 253, "759040e": 253, "469024e": 253, "02": [253, 276, 278, 280], "811054e": 253, "642452e": 253, "840779e": 253, "261720e": 253, "651215e": 253, "954671e": 253, "163414e": 253, "926594e": 253, "491049e": 253, "423998e": 253, "706676e": 253, "374390e": 253, "054865e": 253, "105347e": 253, "300000e": 253, "029682e": 253, "641559e": 253, "748923e": 253, "363918e": 253, "203548e": 253, "052323e": 253, "567877e": 253, "507358e": 253, "510000e": 253, "1292": [253, 258, 261, 263, 269], "186761": [253, 258, 261, 263, 269], "742325": 253, "929085": 253, "315057": 253, "1346": 253, "501817": 253, "978215": 253, "1332": 253, "164976": 253, "062682": 253, "1312": 253, "249442": 253, "061671": 253, "248431": 253, "056538": 253, "1313": [253, 269], "243298": 253, "732689": 253, "919450": 253, "651626": 253, "1335": 253, "838386": 253, "814832": 253, "1334": 253, "001593": 253, "363759": 253, "550520": 253, "989077": 253, "175838": 253, "136326": 253, "323087": 253, "387950": 253, "1316": 253, "574711": 253, "961688": 253, "1317": 253, "148448": 253, "743393": 253, "930153": 253, "617998": 253, "1340": 253, "804759": 253, "641996": 253, "1345": 253, "828756": 253, "288366": 253, "1357": 253, "475127": 253, "263168": 253, "1343": [253, 261], "449928": 253, "814686": 253, "1319": 253, "001446": 253, "181808": 253, "368568": 253, "957602": 253, "144362": 253, "567343": 253, "1347": 253, "754104": 253, "426389": 253, "613149": 253, "66": [253, 274], "324567": 253, "1358": [253, 268], "511327": 253, "446030": 253, "632790": 253, "549224": 253, "1326": 253, "735985": 253, "997342": 253, "184102": 253, "617389": 253, "1351": 253, "804150": 253, "900404": 253, "1350": 253, "087164": 253, "566615": 253, "1391": 253, "753375": 253, "929659": 253, "1352": 253, "116420": 253, "990522": 253, "177283": 253, "217267": 253, "404028": 253, "62": [253, 274], "729333": 253, "1354": 253, "916093": 253, "101": 253, "379219": 253, "1393": 253, "565980": 253, "67": [253, 276, 278], "670588": 253, "1359": 253, "857348": 253, "016040": 253, "202801": 253, "926496": 253, "113256": 253, "139": 253, "462177": 253, "1431": 253, "648937": 253, "706655": 253, "1375": 253, "893415": 253, "798603": 253, "1367": 253, "985364": 253, "801019": 253, "1438": 253, "987780": 253, "92": 253, "443408": 253, "1384": 253, "630169": 253, "997461": 253, "1439": 253, "184221": 253, "322869": 253, "509630": 253, "925020": 253, "111781": 253, "814402": 253, "1435": 253, "001163": 253, "862830": 253, "049591": 253, "449696": 253, "636456": 253, "801017": 253, "987778": 253, "89": [253, 269], "1414": 253, "872375": 253, "93": [253, 258], "810457": 253, "76": 253, "630168": 253, "68": 253, "pop_vc_estim": [253, 258, 263, 277], "pop_mat_estim": [253, 258, 263, 277], "5328": [253, 258, 261, 263, 269], "104": [253, 258, 261, 263, 269], "2300": [253, 258, 261, 269], "433676": [253, 258, 261, 263, 269], "2632": 253, "103": [253, 261], "2400": 253, "447194": 253, "8757": 253, "106": [253, 261, 274, 276, 277], "2690": 253, "429235": 253, "4824": 253, "0490": 253, "435646": 253, "1536": 253, "7690": 253, "430342": 253, "9763": 253, "102": 253, "8640": 253, "428158": 253, "9807": 253, "1030": 253, "505090": 253, "3823": 253, "4790": 253, "453248": 253, "3323": 253, "5279": 253, "434088": 253, "7087": 253, "109": [253, 269], "1750": 253, "459561": 253, "8501": 253, "4740": 253, "428178": 253, "4821": 253, "0270": 253, "435683": 253, "1635": 253, "5920": 253, "433194": 253, "0931": 253, "1120": 253, "435607": 253, "1216": 253, "2180": 253, "519385": 253, "3873": 253, "4580": 253, "453399": 253, "6231": 253, "442192": 253, "9115": 253, "9240": 253, "466270": 253, "7337": 253, "9590": 253, "409478": 253, "3781": 253, "2760": 253, "415011": 253, "1007": 253, "5110": 253, "446059": 253, "1211": 253, "8490": 253, "522201": 253, "2833": 253, "7400": 253, "430777": 253, "3688": 253, "9010": 253, "444906": 253, "9130": 253, "7450": 253, "468161": 253, "8124": 253, "7120": 253, "407766": 253, "3789": 253, "2080": 253, "416694": 253, "1985": 253, "6770": 253, "441794": 253, "2994": 253, "94": 253, "1796": 253, "587939": 253, "4692": 253, "3027": 253, "440385": 253, "0941": 253, "6170": 253, "463834": 253, "6693": 253, "2570": 253, "413923": 253, "3618": 253, "427491": 253, "2658": 253, "5620": 253, "521096": 253, "4546": 253, "9522": 253, "446657": 253, "0732": 253, "0130": 253, "454492": 253, "7145": 253, "9771": 253, "451302": 253, "3318": 253, "9710": 253, "477444": 253, "4944": 253, "3068": 253, "502124": 253, "0790": 253, "7890": 253, "462595": 253, "7389": 253, "8006": 253, "491811": 253, "6677": 253, "7770": 253, "477864": 253, "6488": 253, "0460": 253, "472418": 253, "9834": 253, "9929": 253, "474434": 253, "0359": 253, "2120": 253, "478021": 253, "0706": 253, "1991": 253, "474688": 253, "0336": 253, "8083": 253, "475373": 253, "0636": 253, "2525": 253, "473063": 253, "0292": 253, "8033": 253, "473542": 253, "0651": 253, "9375": 253, "483644": 253, "0661": 253, "5310": 253, "462817": 253, "0432": 253, "1300": [253, 263], "446808": 253, "7913": 253, "90": 253, "1894": 253, "489466": 253, "9838": 253, "9945": 253, "474441": 253, "0361": 253, "478038": 253, "ruv_prop_estim": [253, 258, 263, 277], "pop_clage_estim": 253, "209972": [253, 258, 261, 263, 269], "197452": 253, "005338": 253, "192852": 253, "199549": 253, "193411": 253, "195608": 253, "192557": 253, "198783": 253, "191425": 253, "192934": 253, "192682": 253, "000659": 253, "199545": 253, "000303": 253, "193747": 253, "000956": 253, "197305": 253, "006150": 253, "194664": 253, "005918": 253, "198812": 253, "000334": 253, "192753": 253, "006503": 253, "194238": 253, "009567": 253, "189160": 253, "005291": 253, "195766": 253, "003125": 253, "195730": 253, "195098": 253, "006600": 253, "195843": 253, "001364": 253, "189330": 253, "003100": 253, "193116": 253, "008094": 253, "189540": 253, "006380": 253, "196038": 253, "002606": 253, "197429": 253, "000340": 253, "204599": 253, "002549": 253, "190442": 253, "000522": 253, "195705": 253, "005726": 253, "192398": 253, "002984": 253, "196915": 253, "000299": 253, "198387": 253, "001229": 253, "190453": 253, "000216": 253, "197082": 253, "005988": 253, "191512": 253, "002433": 253, "194217": 253, "000649": 253, "191075": 253, "001918": 253, "197129": 253, "005915": 253, "183751": 253, "001489": 253, "187999": 253, "001004": 253, "194026": 253, "005955": 253, "187663": 253, "002481": 253, "193344": 253, "009365": 253, "187822": 253, "002901": 253, "187730": 253, "187425": 253, "002946": 253, "184713": 253, "006622": 253, "187724": 253, "002919": 253, "187525": 253, "003050": 253, "192812": 253, "005142": 253, "183104": 253, "001493": 253, "187672": 253, "002483": 253, "193349": 253, "009366": 253, "pop_clsex_estim": 253, "pop_clwt_estim": 253, "382904": 253, "010536": 253, "387669": 253, "010497": 253, "396947": 253, "010523": 253, "385807": 253, "010703": 253, "554417": 253, "011851": 253, "519989": 253, "012179": 253, "808497": 253, "011109": 253, "737404": [253, 279], "007109": 253, "709206": 253, "000803": 253, "736659": 253, "000429": 253, "706752": 253, "000822": 253, "662625": 253, "002097": 253, "709124": 253, "000793": 253, "704774": 253, "427285": 253, "003711": 253, "779125": 253, "001087": 253, "007108": 253, "059279": 253, "517590": 253, "056724": 253, "520520": 253, "063392": 253, "057943": 253, "019268": 253, "348000": 253, "008419": 253, "040813": 253, "045624": 253, "023159": 253, "057041": 253, "059912": 253, "003577": 253, "495110": 253, "070972": 253, "033397": 253, "013863": 253, "012482": 253, "367050": 253, "020109": 253, "442940": 253, "030354": 253, "491875": 253, "038044": 253, "224276": 253, "001885": 253, "848782": 253, "017435": 253, "646840": 253, "585757": 253, "000169": 253, "367142": 253, "002221": 253, "737357": 253, "009685": 253, "033267": 253, "009238": 253, "267484": 253, "012667": 253, "165471": 253, "005033": 253, "094740": 253, "010833": 253, "065816": 253, "004749": 253, "096523": 253, "005557": 253, "098655": 253, "107862": 253, "012020": 253, "118838": 253, "005781": 253, "002862": 253, "222520": 253, "005160": 253, "361570": 253, "008017": 253, "030930": 253, "005034": 253, "094706": 253, "010829": 253, "065876": 253, "019706": 253, "014651": 253, "020136": 253, "014954": 253, "022336": 253, "011936": 253, "005508": 253, "002344": 253, "013967": 253, "034213": 253, "034044": 253, "009672": 253, "008593": 253, "017124": 253, "000315": 253, "022223": 253, "019316": 253, "009542": 253, "010323": 253, "008652": 253, "018053": 253, "019211": 253, "001906": 253, "014021": 253, "011399": 253, "003565": 253, "010903": 253, "014331": 253, "013699": 253, "015830": 253, "000202": 253, "002078": 253, "009019": 253, "005773": 253, "012366": 253, "002607": 253, "002247": 253, "005768": 253, "011567": 253, "006160": 253, "014272": 253, "004566": 253, "010938": 253, "002378": 253, "007473": 253, "011606": 253, "010672": 253, "000456": 253, "009445": 253, "014649": 253, "012169": 253, "002248": 253, "953372": 253, "013320": 253, "984897": 253, "012092": 253, "972469": 253, "011946": 253, "954734": 253, "010781": 253, "009540": 253, "009922": 253, "989687": 253, "009576": 253, "986758": 253, "869150": 253, "632058": 253, "008418": 253, "751771": 253, "007571": 253, "416489": 253, "013879": 253, "724866": 253, "008196": 253, "746265": 253, "007399": 253, "727224": 253, "008331": 253, "666572": 253, "010074": 253, "751144": 253, "008031": 253, "711725": 253, "008833": 253, "012851": 253, "967468": 253, "751794": 253, "007573": 253, "416464": 253, "013880": 253, "110": [253, 261, 263, 269, 277], "113": [253, 261, 263, 269, 277], "121": [253, 261, 263, 269, 277], "1403": [253, 261, 263, 269, 277], "1404": [253, 261, 263, 269, 277], "1405": [253, 261, 263, 269, 277], "1406": [253, 261, 263, 269, 277], "1407": [253, 261, 263, 269, 277], "757118": [253, 261, 263, 269], "659694": [253, 261, 263, 269], "302503": [253, 261, 263, 269], "464327": [253, 261, 263, 269], "034898": [253, 261, 263, 269], "482240": 253, "223632": 253, "357442": 253, "119299": 253, "565277": 253, "696443": 253, "062486": 253, "234841": 253, "088594": 253, "953572": 253, "857979": 253, "193305": 253, "003283": 253, "861988": 253, "188718": 253, "005806": 253, "962325": 253, "455479": 253, "289527": 253, "216857": 253, "4015": 253, "462": 253, "reduced_ofv": [253, 278], "extended_ofv": [253, 278], "ofv_drop": [253, 278], "extended_st": [253, 278], "621435": 253, "246753": 253, "394001": 253, "645626": 253, "219363": 253, "001068": 253, "875674": 253, "899671": 253, "152040": 253, "126842": 253, "678359": 253, "045482": 253, "821275": 253, "431017": 253, "290062": 253, "366965": 253, "488428": 253, "591623": 253, "039740": 253, "659788": 253, "942802": 253, "017391": 253, "380435": 253, "441298": 253, "668043": 253, "180108": 253, "388697": 253, "680065": 253, "025518": 253, "935973": 253, "77": 253, "446136": 253, "690615": 253, "782563": 253, "71": [253, 277], "002416": 253, "644805": 253, "554053": 253, "674591": 253, "072441": 253, "183059": 253, "134631": 253, "547765": 253, "311846": 253, "373764": 253, "196444": 253, "delta_df": [253, 278], "extended_signific": [253, 278], "covariate_effect": [253, 259, 276, 278], "ofv_summari": [253, 278], "candidate_summari": [253, 278], "n_test": [253, 278], "n_ok": [253, 278], "n_localmin": [253, 278], "n_fail": [253, 278], "stepinclud": [253, 278], "estimation_ofv": 254, "prediction_ofv": 254, "545": 254, "863847": 254, "186": 254, "192727": 254, "512": 254, "953185": 254, "694832": 254, "547": 254, "843632": 254, "184": [254, 278], "022535": 254, "579": 254, "109635": 254, "596550": 254, "prediction_ofv_sum": 254, "747": 254, "506644594254": 254, "read_raw_dataset": 255, "arrai": [255, 266, 280], "get_id": 255, "largest": 255, "ser": 255, "di": [255, 282], "role": 255, "identif": [255, 277], "mostli": [255, 256, 273], "steven": 255, "typologi": 255, "en": [255, 256, 259], "wikipedia": 255, "wiki": [255, 264], "level_of_measur": 255, "annot": 255, "kg": 255, "mg": 255, "l": [255, 282], "low": [255, 266, 268], "understand": [255, 272], "accompani": [255, 264], "And": [255, 264, 280], "map": 255, "under": [256, 262, 264, 278, 282], "construct": [256, 272], "complet": 256, "four": 256, "distinct": 256, "layer": [256, 269, 271], "worklow": 256, "higher": [256, 262, 266, 268, 279], "coupl": 256, "mathemat": [256, 266, 273], "concid": 256, "live": 256, "namespac": 256, "mutablesequ": 256, "scalar": [256, 266], "element": [256, 267], "concern": [256, 264], "expos": 256, "numpydoc": 256, "readthedoc": 256, "ecosystem": 256, "thu": [256, 261, 264, 266, 280], "wrap": 256, "share": [256, 264, 271], "leak": 256, "parti": [256, 264], "break": 256, "run_estmethod": 258, "chapter": [258, 269], "few": 258, "addition": [258, 269, 280], "9999": 258, "examin": [258, 260], "runtime_estim": 258, "estmethod_run2": 258, "2422": 258, "465718": 258, "81": [258, 261, 267], "estmethod_run1": 258, "2271": 258, "769243": 258, "run_typ": 258, "1299": [258, 263], "696027": 258, "2420": 258, "117263": 258, "145": 258, "2702": 258, "1840": 258, "3241": 258, "6578": 258, "iiv_cl_estim": [258, 263, 277], "iiv_vc_estim": [258, 263, 277], "481858": [258, 261, 263, 269], "593654": [258, 261, 263, 269], "439589": 258, "483291": 258, "598179": 258, "901289": 258, "419533": 258, "408292": 258, "iiv_mat_estim": [258, 263, 277], "000130": [258, 263, 269], "322572": 258, "197647": 258, "865979": 258, "105366": 258, "10000": 258, "787": 258, "creation": 259, "model_3b": 259, "u": [259, 268], "eta_i": 259, "leq": 259, "n_": 259, "par": [259, 266], "eta_k": 259, "bmatrix": 259, "vdot": 259, "eta_": 259, "sim": [259, 266, 268, 279], "mathcal": [259, 266, 268], "mu_2": 259, "omega_": [259, 268], "n1": 259, "n2": 259, "ddot": 259, "latter": 259, "partit": 259, "5th": 259, "630859": 259, "868770": 259, "176754": 259, "95th": 259, "925602": 259, "082310": 259, "244607": 259, "569077": 259, "600360": 259, "632538": 259, "532478": 259, "824355": 259, "138312": 259, "577861": 259, "761430": 259, "991915": 259, "003863": 259, "148763": 259, "297579": 259, "600771": 259, "631260": 259, "661025": 259, "315965": 259, "549669": 259, "811532": 259, "margin": 259, "ij": 259, "ijk": 259, "omega_k": 259, "sigma_1": 259, "sigma_2": 259, "sigma_i": 259, "turn": [259, 266], "percent": 259, "red": 259, "figur": 259, "vconcatchart": 259, "sigma_": 259, "020503": 259, "628814": 259, "009309": 259, "544459": 259, "026950": 259, "613127": 259, "050396": 259, "551581": 259, "individual_effect": 259, "913307": 259, "899565": 259, "923297": 259, "939015": 259, "926632": 259, "948404": 259, "933506": 259, "894967": 259, "970755": 259, "010192": 259, "973823": 259, "047109": 259, "992728": 259, "986142": 259, "999404": 259, "361911": 259, "322628": 259, "418737": 259, "894772": 259, "868658": 259, "917333": 259, "947797": 259, "923656": 259, "969732": 259, "771958": 259, "748072": 259, "790423": 259, "790120": 259, "768277": 259, "806911": 259, "percentu": 259, "unexplained_vari": 259, "sd_observ": 259, "sd_5th": 259, "sd_95th": 259, "469535": 259, "359934": 259, "547612": 259, "465490": 259, "352335": 259, "538174": 259, "165502": 259, "141580": 259, "190726": 259, "159149": 259, "134989": 259, "183613": 259, "420471": 259, "327104": 259, "490419": 259, "404440": 259, "306148": 259, "467046": 259, "143317": 259, "122348": 259, "166012": 259, "141826": 259, "120282": 259, "163610": 259, "percetil": 259, "025328": 259, "022571": 259, "020115": 259, "216681": 259, "188254": 259, "163572": 259, "027391": 259, "021634": 259, "020540": 259, "intermedi": 259, "model_4": [259, 266], "parameter_inits_and_estim": 259, "model_3": 259, "115195": 259, "007066": 259, "209016": 259, "125999": 259, "020191": 259, "224959": 259, "126000": 259, "007084": 259, "38635": 259, "220463": 259, "195326": 259, "176796": 259, "bsv_apgr": 259, "010583": 259, "107027": 259, "000008": 259, "171529": 259, "404278": 259, "000010": 259, "012042": 259, "115427": 259, "000032": 259, "208475": 259, "415588": 259, "000030": 259, "062712": 259, "117271": 259, "039930": 259, "446939": 259, "402075": 259, "bsv_wgt": 259, "244579": 259, "244448": 259, "002173": 259, "002170": 259, "244080": 259, "007763": 259, "007760": 259, "249237": 259, "034610": 259, "015250": 259, "relative_chang": 259, "773218": 259, "095327": 259, "520526": 259, "271369": 259, "110618": 259, "974324": 259, "868": [259, 261], "657803": 259, "852": 259, "803483": 259, "753": 259, "302743": 259, "themselv": 259, "ideal": 259, "estimated_covari": 259, "stdev": 259, "423728": 259, "237640": 259, "525424": 259, "704565": 259, "nyberg": 259, "hb": 259, "jonsson": 259, "mo": 259, "introduct": 259, "cpt": 259, "pharmacometr": [259, 262, 264, 280], "syst": 259, "pharmacol": 259, "1002": 259, "psp4": 259, "12741": 259, "plan": 260, "stabl": 260, "googl": [260, 273], "coral": 260, "repo": 260, "tflite_runtim": 260, "nonlinear": 260, "sever": [260, 276], "read_model_result": 261, "aspect": [261, 276, 280], "explor": [261, 273], "naiv": 261, "minima": 261, "\u03b4ofv": [261, 263, 269], "\u03b4aic": [261, 263, 269], "\u03b4bic": [261, 263, 269], "iivsearch_no_of_etas_candidate3": 261, "282024": 261, "iivsearch_no_of_etas_candidate2": 261, "217": 261, "691571": 261, "iivsearch_no_of_etas_candidate6": 261, "385": 261, "641987": 261, "iivsearch_no_of_etas_candidate1": 261, "631": 261, "871991": 261, "iivsearch_no_of_etas_candidate5": 261, "633": [261, 267], "419500": 261, "iivsearch_no_of_etas_candidate4": 261, "815": 261, "076729": 261, "iivsearch_no_of_etas_candidate7": 261, "834": 261, "249063": 261, "iivsearch_block_structure_candidate1": 261, "971960": 261, "1283": 261, "597406": 261, "1279": 261, "315382": 261, "1061": 261, "623812": 261, "673395": 261, "443392": 261, "645": 261, "895882": 261, "464": 261, "238653": 261, "066319": 261, "1365": 261, "569365": 261, "178325": 261, "1280": 261, "1278": [261, 269], "1070": 261, "204731": 261, "1058": 261, "897": 261, "963854": 261, "024311": 261, "644": 261, "650": 261, "186341": 261, "640": 261, "468": 261, "529112": 261, "458": 261, "437": 261, "440744": 261, "1364": 261, "1261": [261, 263], "189012": 261, "1259": [261, 269], "530267": [261, 269], "1039": 261, "215418": [261, 278], "641723": 261, "034998": 261, "620": 261, "864210": 261, "439": 261, "206982": 261, "417": 261, "411370": 261, "160972": 261, "5333": 261, "0366": 261, "1164": 261, "2929": 261, "8058": 261, "9055": 261, "2270": 261, "9424": 261, "1360": 261, "239": 261, "1090": 261, "234": 261, "6680": 261, "9380": 261, "6690": 261, "9880": 261, "433544": 261, "114210": 261, "347648": 261, "316164": 261, "310155": 261, "922906": 261, "434563": 261, "436279": 261, "481830": 261, "594777": 261, "396159": 261, "516927": 261, "593578": 261, "414690": 261, "247930": 261, "656304": 261, "00013": 261, "31998": 261, "08352": 261, "43473": 261, "209975": 261, "401593": 261, "574966": 261, "736398": 261, "750954": 261, "744891": 261, "810669": 261, "215885": 261, "iiv_cl_iiv_vc_estim": 261, "498114": 261, "965311": 261, "348227": 261, "596114": 261, "524856": 261, "831038": 261, "973037": 261, "826292": 261, "168816": 261, "275494": 261, "612863": 261, "081253": 261, "444919": 261, "093815": 261, "067016": 261, "554482": 261, "103963": 261, "060027": 261, "670815": 261, "108198": 261, "049148": 261, "371": 261, "agnost": 262, "architectur": 262, "mainli": 262, "foundat": [262, 264], "post": [262, 277], "sens": 263, "brute": 263, "approach": 263, "nonzero": 263, "constant": 263, "iovsearch_run7": 263, "iovsearch_run5": 263, "iovsearch_run6": 263, "iovsearch_run3": 263, "iovsearch_run4": 263, "iovsearch_run2": 263, "iovsearch_run1": 263, "iovsearch_run8": 263, "540508": 263, "1265": 263, "694052": 263, "230772": 263, "384316": 263, "230394": 263, "383938": 263, "1262": 263, "153544": 263, "750000": 263, "403544": 263, "750400": 263, "403145": 263, "060114": 263, "093431": 263, "043077": 263, "1257": 263, "110467": 263, "149": 263, "782429": 263, "1115": 263, "911624": 263, "015062": 263, "707566": 263, "017679": 263, "017280": 263, "707992": 263, "707614": 263, "017728": 263, "1145": 263, "944840": 263, "230": 263, "1954": 263, "242": [263, 274, 276], "440613": 263, "665": 263, "439784": 263, "1951": 263, "241": 263, "1950": 263, "440611": 263, "1402": 263, "439785": 263, "439783": 263, "2313": 263, "438628": 263, "474140": 263, "586866": 263, "311861": 263, "472835": 263, "590422": 263, "320387": 263, "474125": 263, "586859": 263, "311859": 263, "474111": 263, "586860": 263, "311903": 263, "590425": 263, "320393": 263, "472840": 263, "590424": 263, "320395": 263, "572627": 263, "290631": 263, "omega_iov_1_estim": 263, "194680": 263, "002735": 263, "195532": 263, "194676": 263, "194675": 263, "195531": 263, "197005": 263, "483460": 263, "omega_iov_2_estim": 263, "omega_iov_3_estim": 263, "000006": 263, "000000e": [263, 278], "241921": 263, "119820": 263, "001912": 263, "068405": 263, "121866": 263, "620420": 263, "271367": 263, "291396": 263, "230854": 263, "051358": 263, "936871": 263, "267222": 263, "042977": 263, "050766": 263, "059323": 263, "250083": 263, "291876": 263, "187631": 263, "020838": 263, "612880": 263, "660334": 263, "657": 263, "279": [263, 274], "NEAR": [263, 269], "adopt": 264, "wikimedia": 264, "bowl_of_hygieia_by_david": 264, "svg": 264, "cc": 264, "BY": 264, "sa": 264, "font": 264, "pt": 264, "san": 264, "relicens": 264, "lgpl": 264, "know": 264, "maintaint": 264, "softwar": [264, 273, 280], "redistribut": 264, "publish": 264, "hope": 264, "warranti": 264, "impli": 264, "merchant": 264, "FOR": 264, "modif": [264, 276], "permit": 264, "retain": 264, "disclaim": 264, "reproduc": 264, "materi": 264, "holder": 264, "AND": [264, 268], "AS": 264, "OR": 264, "BUT": 264, "NOT": 264, "TO": 264, "OF": 264, "IN": 264, "shall": 264, "BE": 264, "liabl": 264, "indirect": 264, "incident": 264, "exemplari": 264, "consequenti": 264, "damag": 264, "procur": 264, "good": 264, "servic": 264, "loss": 264, "profit": 264, "busi": 264, "interrupt": 264, "ON": 264, "theori": [264, 266], "liabil": 264, "contract": 264, "tort": 264, "neglig": 264, "aris": 264, "advis": 264, "SUCH": 264, "june": 264, "2007": 264, "inc": 264, "fsf": 264, "preambl": 264, "copyleft": 264, "practic": 264, "design": [264, 266, 268, 273, 280], "awai": 264, "contrast": 264, "guarante": 264, "speak": 264, "price": 264, "charg": 264, "wish": [264, 268], "piec": 264, "prevent": 264, "deni": 264, "ask": [264, 282], "surrend": 264, "therefor": 264, "respons": 264, "grati": 264, "fee": 264, "recipi": 264, "gpl": 264, "assert": 264, "offer": [264, 266, 268], "permiss": 264, "clearli": 264, "sake": 264, "erron": 264, "devic": 264, "although": 264, "manufactur": 264, "fundament": 264, "incompat": 264, "aim": [264, 276], "systemat": 264, "abus": 264, "area": [264, 273], "precis": 264, "unaccept": 264, "prohibit": 264, "substanti": 264, "domain": [264, 271, 280], "stand": 264, "readi": 264, "provis": 264, "futur": 264, "threaten": 264, "constantli": [264, 282], "patent": 264, "danger": 264, "proprietari": 264, "assur": 264, "law": 264, "semiconductor": 264, "mask": 264, "license": 264, "address": 264, "organ": [264, 266], "fashion": 264, "exact": 264, "earlier": 264, "cover": [264, 269, 270, 272, 281], "unmodifi": 264, "propag": 264, "secondarili": 264, "infring": 264, "countri": 264, "convei": 264, "mere": 264, "network": 264, "transfer": 264, "extent": 264, "conveni": [264, 266], "promin": 264, "visibl": 264, "menu": 264, "criterion": 264, "offici": 264, "wide": 264, "among": 264, "essenti": 264, "kernel": 264, "script": [264, 280], "link": [264, 277], "subprogram": 264, "intim": 264, "regener": 264, "grant": 264, "irrevoc": 264, "affirm": 264, "unlimit": 264, "constitut": 264, "fair": 264, "equival": [264, 266, 280], "sole": 264, "facil": 264, "compli": 264, "behalf": 264, "relationship": [264, 278], "circumst": 264, "sublicens": 264, "anti": 264, "circumvent": 264, "deem": 264, "technolog": 264, "fulfil": 264, "oblig": 264, "articl": 264, "wipo": 264, "treati": 264, "decemb": 264, "1996": 264, "waiv": 264, "forbid": 264, "exercis": 264, "intent": 264, "enforc": 264, "medium": [264, 273], "conspicu": 264, "intact": 264, "absenc": 264, "along": 264, "relev": [264, 270, 280], "anyon": 264, "who": [264, 270], "possess": 264, "invalid": 264, "natur": 264, "storag": 264, "aggreg": 264, "beyond": 264, "embodi": 264, "durabl": 264, "customarili": 264, "interchang": 264, "spare": 264, "reason": [264, 273], "cost": 264, "server": 264, "occasion": 264, "noncommerci": 264, "subsect": 264, "6b": 264, "further": 264, "clear": [264, 282], "sai": [264, 270], "host": 264, "satisfi": 264, "peer": 264, "transmiss": 264, "6d": 264, "portion": 264, "consum": 264, "tangibl": 264, "household": 264, "sold": 264, "incorpor": 264, "dwell": 264, "doubt": 264, "resolv": [264, 271], "favor": 264, "coverag": 264, "typic": [264, 280], "commerci": 264, "industri": 264, "procedur": 264, "suffic": 264, "interf": 264, "perpetu": 264, "character": 264, "But": 264, "nor": 264, "abil": 264, "rom": 264, "advers": 264, "protocol": 264, "publicli": 264, "password": 264, "unpack": 264, "supplement": 264, "govern": 264, "notwithstand": 264, "misrepresent": 264, "licensor": 264, "declin": 264, "trademark": 264, "trade": 264, "indemnif": 264, "contractu": 264, "impos": 264, "surviv": 264, "termin": 264, "expressli": 264, "void": 264, "paragraph": 264, "ceas": 264, "reinstat": 264, "provision": 264, "perman": 264, "notifi": 264, "prior": 264, "dai": 264, "cessat": 264, "moreov": 264, "cure": 264, "receipt": 264, "qualifi": 264, "ancillari": 264, "consequ": 264, "likewis": 264, "downstream": 264, "complianc": 264, "entiti": 264, "asset": 264, "subdivid": 264, "predecessor": 264, "plu": 264, "effort": 264, "royalti": 264, "litig": 264, "cross": 264, "claim": 264, "counterclaim": 264, "lawsuit": 264, "alleg": 264, "sell": 264, "sale": 264, "acquir": 264, "hereaft": 264, "manner": [264, 269], "worldwid": 264, "agreement": 264, "denomin": 264, "coven": 264, "sue": 264, "knowingli": 264, "readili": 264, "arrang": 264, "depriv": 264, "yourself": 264, "benefit": [264, 273], "knowledg": 264, "believ": 264, "pursuant": 264, "convey": 264, "discriminatori": 264, "scope": 264, "payment": 264, "primarili": 264, "march": 264, "constru": 264, "defens": 264, "court": 264, "contradict": 264, "excus": 264, "simultan": [264, 269], "pertin": 264, "agre": 264, "whom": 264, "refrain": 264, "affero": 264, "revis": 264, "Such": 264, "spirit": 264, "ever": 264, "THERE": 264, "qualiti": 264, "prove": 264, "defect": 264, "repair": 264, "WILL": 264, "inabl": 264, "BEING": 264, "inaccur": 264, "sustain": 264, "failur": [264, 273], "review": 264, "waiver": 264, "civil": 264, "greatest": 264, "achiev": 264, "attach": 264, "safest": 264, "pointer": 264, "brief": 264, "idea": [264, 273], "electron": 264, "paper": 264, "hypothet": 264, "Of": 264, "cours": 264, "gui": 264, "box": [264, 276], "employ": 264, "programm": 264, "school": 264, "philosophi": 264, "why": 264, "7b2feb6f20b626a559d3150f6638c111f20b5213": 264, "lin_evalu": 265, "lin_estim": 265, "268756": 265, "problemat": 265, "947354": 265, "939053": 265, "008301": 265, "970582": 265, "012053": 265, "041471": 265, "982345": 265, "979456": 265, "002889": 265, "457096": 265, "435700": 265, "021396": 265, "839445": 265, "838391": 265, "001054": 265, "257222": 265, "278016": 265, "020794": 265, "098344": 265, "077164": 265, "021179": 265, "538623": 265, "520111": 265, "018512": 265, "647972": 265, "673400": 265, "025427": 265, "394648": 265, "373180": 265, "021468": 265, "480163": 265, "505680": 265, "025517": 265, "650236": 265, "629298": 265, "020938": 265, "991406": [265, 267], "988587": 265, "002820": 265, "378873": 265, "372846": 265, "006028": 265, "739906": 265, "725640": 265, "014265": 265, "328801": 265, "326482": 265, "002319": 265, "113286": 265, "104515": 265, "008771": 265, "212076": 265, "325127": 265, "113051": 265, "334048": 265, "321306": 265, "012742": 265, "327782": 265, "306287": 265, "021495": 265, "821537": 265, "795371": 265, "026165": 265, "631283": 265, "620311": 265, "010972": 265, "861666": 265, "855927": 265, "005739": 265, "915260": 265, "913348": 265, "001913": 265, "988972": 265, "024483": 265, "035512": 265, "279274": 265, "269277": 265, "009997": 265, "733179": 265, "729199": 265, "003980": 265, "830055": 265, "827764": 265, "002290": 265, "851725": 265, "847176": 265, "004549": 265, "212098": 265, "192122": 265, "019976": 265, "774789": 265, "773559": 265, "001230": 265, "352292": 265, "351131": 265, "001162": 265, "172644": 265, "165200": 265, "007443": 265, "427375": 265, "420258": 265, "007117": 265, "381438": 265, "412378": 265, "030941": 265, "624011": 265, "614613": 265, "009397": 265, "970630": 265, "955216": 265, "015414": 265, "177025": 265, "002885": 265, "206543": 265, "180626": 265, "025916": 265, "955033": 265, "945036": 265, "982451": 265, "972114": 265, "010337": 265, "051495": 265, "098643": 265, "047147": 265, "424500": 265, "425925": 265, "001425": 265, "734347": 265, "702764": 265, "031583": 265, "018483": 265, "997957": 265, "020526": 265, "810285": [265, 267], "807205": 265, "003080": 265, "279257": 265, "276411": 265, "002846": 265, "168465": 265, "267932": 265, "099467": 265, "190512": 265, "178815": 265, "011697": 265, "749138": 265, "727859": 265, "021278": 265, "598562": 265, "616685": 265, "018123": 265, "237457": 265, "251607": 265, "014150": 265, "568928": 265, "581417": 265, "012489": 265, "800065": 265, "795239": 265, "004826": 265, "098027": 265, "103873": 265, "005846": 265, "586253": [265, 267], "582931": 265, "003323": 265, "663950": 265, "650298": 265, "013652": 265, "850995": 265, "833333": 265, "017662": 265, "605848": 265, "592551": 265, "013297": 265, "iofv_plot": 265, "At": 266, "heart": 266, "li": [266, 280], "subclass": 266, "principl": 266, "pharmi": 266, "transpar": 266, "mymodel": [266, 268], "inspect": 266, "sdtab1": 266, "parset": 266, "displaystyl": [266, 268], "eta1": 266, "frem_model": 266, "000286193": 266, "0676481": 266, "0256033": 266, "027906": [266, 267], "0235094": 266, "00161838": 266, "24458": 266, "omega_est": 266, "0393482": 266, "0168369": 266, "0442286": 266, "0426757": 266, "0259374": 266, "0654878": 266, "00168063": 266, "983027": 266, "240423": 266, "98305": 266, "choleski": 266, "198363807182661": 266, "0848788911603008": 266, "136868454493349": 266, "222967085720797": 266, "616745467855979": 266, "743597812371906": 266, "215138540674925": 266, "145697201390566": 266, "508675383095755": 266, "810424017694199": 266, "pure": 266, "astyp": 266, "numeric64": 266, "linalg": 266, "19836381": 266, "08487889": 266, "13686845": 266, "22296709": 266, "61674547": 266, "74359781": 266, "21513854": 266, "1456972": 266, "50867538": 266, "81042402": 266, "quit": 266, "flexibl": 266, "cumbersom": 266, "easili": 266, "a_": [266, 268], "004696": [266, 267], "158920": [266, 267], "029351": [266, 267], "s_": [266, 268], "testdata": 267, "2760562818805": 267, "parameter_estimates_sdcorr": 267, "171321": 267, "167051": 267, "115069": 267, "Or": 267, "standard_errors_sdcorr": 267, "039153": 267, "022378": 267, "009904": 267, "relative_standard_error": 267, "044731": 267, "027325": 267, "527072": 267, "457068": 267, "267918": 267, "172147": 267, "proper": 267, "388058": 267, "356900": 267, "238442": 267, "096516": 267, "invers": 267, "29955600": 267, "400": 267, "910": 267, "267": 267, "039": 267, "207": 267, "809": 267, "520": 267, "980": 267, "200": 267, "450": 267, "947352": 267, "970591": 267, "982342": 267, "457091": 267, "839437": 267, "257230": 267, "098338": 267, "538621": 267, "647969": 267, "394643": 267, "480164": 267, "650233": 267, "378880": 267, "739902": 267, "328800": 267, "113284": 267, "212096": 267, "334047": 267, "327778": 267, "821533": 267, "631281": 267, "861669": 267, "915261": 267, "988977": 267, "279273": 267, "733181": 267, "830053": 267, "851724": 267, "212095": 267, "774791": 267, "352283": 267, "172643": 267, "427376": 267, "381444": 267, "624014": 267, "970627": 267, "177028": 267, "206540": 267, "955029": 267, "982447": 267, "051499": 267, "424503": 267, "734342": 267, "018477": 267, "279258": 267, "168486": 267, "190508": 267, "749134": 267, "598565": 267, "237467": 267, "568934": 267, "800062": 267, "098025": 267, "663948": 267, "850993": 267, "605845": 267, "143": 267, "045": 267, "971": 267, "881": 267, "575": 267, "080": 267, "063": 267, "427": 267, "668": 267, "543": 267, "662": 267, "478": 267, "667": 267, "253": 267, "495": 267, "918": 267, "67071": 267, "401100": 267, "35080": 267, "587770": 267, "36360": 267, "278800": 267, "19730": 267, "670700": 267, "21710": 267, "352600": 267, "86050": 267, "067200": 267, "35060": 267, "059269": 267, "72100": 267, "036754": 267, "10860": 267, "814140": 267, "28180": 267, "699410": 267, "eb": 267, "043861": 267, "005430": 267, "166321": 267, "131833": 267, "095934": 267, "130868": 267, "009154": 267, "017388": 267, "102019": 267, "283500": 267, "019417": 267, "099839": 267, "045946": 267, "059072": 267, "024270": 267, "189351": 267, "248536": 267, "091872": 267, "009545": 267, "012052": 267, "066151": 267, "293685": 267, "030236": 267, "074789": 267, "094502": 267, "147433": 267, "076820": 267, "105604": 267, "020051": 267, "066265": 267, "086035": 267, "023260": 267, "067138": 267, "030859": 267, "337255": 267, "035532": 267, "032579": 267, "028410": 267, "003589": 267, "080613": 267, "060233": 267, "052854": 267, "004469": 267, "057344": 267, "051992": 267, "212941": 267, "137510": 267, "004111": 267, "023282": 267, "302636": 267, "039069": 267, "119442": 267, "044956": 267, "263320": 267, "000776": 267, "083231": 267, "003150": 267, "012752": 267, "049654": 267, "080932": 267, "000555": 267, "099614": 267, "061864": 267, "332738": 267, "038156": 267, "067641": 267, "038017": 267, "184137": 267, "156617": 267, "208753": 267, "114558": 267, "053036": 267, "008405": 267, "026004": 267, "144920": 267, "081646": 267, "083320": 267, "015380": 267, "000392": 267, "078062": 267, "018966": 267, "112030": 267, "112715": 267, "383786": 267, "001730": 267, "167583": 267, "042068": 267, "066598": 267, "037600": 267, "000093": 267, "010662": 267, "009775": 267, "058306": 267, "229005": 267, "033958": 267, "008959": 267, "092312": 267, "050987": 267, "192569": 267, "002727": 267, "225657": 267, "115824": 267, "204269": 267, "054792": 267, "066334": 267, "123689": 267, "239678": 267, "047215": 267, "186615": 267, "000949": 267, "010812": 267, "015929": 267, "017213": 267, "005234": 267, "122552": 267, "076677": 267, "095696": 267, "024883": 267, "002999": 267, "007157": 267, "model_ref": 268, "easi": [268, 273], "pipelin": 268, "unfix_parameters_to": 268, "print_model_diff": 268, "ipython": 268, "pkmat": 268, "errori": 268, "pkcl": 268, "vd1": 268, "advan2": 268, "s2": 268, "vka": 268, "pkmdt": 268, "matd1": 268, "pop_mdt": 268, "advan5": 268, "trans1": 268, "defdos": 268, "transit4": 268, "s5": 268, "vk12": 268, "mdtk23": 268, "mdtk34": 268, "mdtk45": 268, "mdtk50": 268, "valag1": 268, "similarli": 268, "tol": 268, "pkkm": 268, "desdadt": 268, "pop_clmm": 268, "067": 268, "pop_km": 268, "iiv_clmm": 268, "pkclmm": 268, "002346535": 268, "advan3": 268, "trans4": 268, "pkvp1": 268, "v1": 268, "v1q": 268, "qp1v2": 268, "pop_qp1": 268, "050458": 268, "pop_vp1": 268, "remove_ref": 268, "059618": 268, "advan11": 268, "pkvp2": 268, "v1q2": 268, "vp1q3": 268, "qp2v3": 268, "00046930699999999997": 268, "0529809": 268, "004223763": 268, "pop_qp2": 268, "pop_vp2": 268, "onto": 268, "pkwgt_median": 268, "30000cl": 268, "clwgt": 268, "wgt_median": 268, "clwgtv": 268, "pop_clwgt": 268, "user_effect": 268, "std": 268, "30000wgt_std": 268, "704565cl": 268, "wgt_std": 268, "pketab1": 268, "etab1": 268, "etab2": 268, "lambda2": 268, "analog": 268, "pketat1": 268, "384": 268, "etat1": 268, "pketad1": 268, "etad1": 268, "iiv_s1": 268, "eta_new": 268, "iiv_": 268, "pkiov_1": 268, "0if": 268, "iov_1": 268, "etai1": 268, "00309626": 268, "omega_iov_1": 268, "iov_2": 268, "etai2": 268, "0031128": 268, "omega_iov_2": 268, "pkdummyeta": 268, "dummyomega": 268, "isn": 268, "runnabl": 268, "epsilon_a": 268, "approx": 268, "taylor": 268, "epsilon_": 268, "epsilon_p": 268, "sigma_prop": [268, 277], "sigma_add": [268, 277], "iiv_ruv1": 268, "ruv1": 268, "power1": 268, "someim": 268, "correspondng": 268, "11506954418958998": 268, "errorw": 268, "fy": 268, "wif": 268, "THEN": 268, "1000000000end": 268, "ifi": 268, "tbs_lambda": 268, "tbs_zeta": 268, "ivcl0": 268, "0031045": 268, "iiv_cl_iiv_v0": 268, "model_block": 268, "445550": 268, "bootstrap_dir1": 268, "597341": 268, "039061": 268, "365446": 268, "019725": 268, "secondary_paramet": 268, "delai": [269, 280], "grammar": [269, 273], "exhaustive_stepwis": 269, "obtain": 269, "basi": 269, "subsequ": [269, 270, 280], "modelsearch_candidate2": [269, 280], "594608": 269, "1272": 269, "124874": 269, "modelsearch_candidate3": [269, 280], "558028": 269, "088295": 269, "modelsearch_candidate4": [269, 280], "956313": 269, "1270": 269, "486580": 269, "287000": 269, "1260": 269, "817266": 269, "362287": 269, "1327": 269, "153182": 269, "1325": 269, "551467": 269, "1307": 269, "301235": 269, "1295": 269, "1305": 269, "1289": 269, "2927": 269, "4334": 269, "7778": 269, "0058": 269, "1640": 269, "260324": 269, "7646": 269, "824443": 269, "5477": 269, "607839": 269, "1147": 269, "842498": 269, "470974": 269, "595276": 269, "526185": 269, "930160": 269, "495109": 269, "322680": 269, "470531": 269, "515250": 269, "312692": 269, "194221": 269, "202201": 269, "207885": 269, "232322": 269, "199750": 269, "205369": 269, "193439": 269, "pop_qp1_estim": 269, "pop_vp1_estim": 269, "pop_mdt_estim": 269, "155413": 269, "4192": 269, "6100": 269, "172730": 269, "3977": 269, "4562": 269, "158070": 269, "8042": 269, "8517": 269, "iiv_mdt_estim": 269, "156289": 269, "192020": 269, "092419": 269, "262429": 269, "720369": 269, "464263": 269, "127061": 269, "906722": 269, "053781": 269, "923055": 269, "795863": 269, "030658": 269, "661330": 269, "168680": 269, "833073": 269, "041529": 269, "205858": 269, "064930": 269, "609673": 269, "396329": 269, "928556": 269, "365": 269, "330": 269, "topic": 270, "scheme": 270, "theta_cl": 270, "mention": [270, 282], "ve": 270, "despit": 270, "write_etas_in_abbr": 270, "altair": [271, 273], "vega": 271, "lite": 271, "ggplot": 271, "editor": 271, "clamp": 271, "vconcat": 271, "spec": 271, "inten": 272, "export": 272, "strictli": 272, "necessesari": 272, "detect_model": 272, "summer": 273, "master": 273, "thesi": 273, "internship": 273, "email": 273, "team": 273, "tox": 273, "pytest": 273, "sphinx": 273, "wise": 273, "known": 273, "trial": 273, "involv": 273, "outcom": 273, "350h": 273, "difficulti": 273, "mentor": 273, "scipi": 273, "focu": 273, "proof": 273, "concept": 273, "algebra": 273, "simul": [273, 279], "scratch": 273, "lark": 273, "earlei": 273, "lalr": 273, "stricter": 273, "175h": 273, "almost": 273, "compat": 273, "benefici": 273, "diff": 273, "potenti": 273, "eas": 273, "jupyt": 273, "holoview": 273, "bokeh": 273, "monitor": 273, "ongo": 273, "veri": [273, 282], "happen": 273, "converg": 273, "sort": [273, 280], "dashboard": 273, "complement": 273, "realtim": 273, "restart": [273, 282], "middl": 273, "worflow": 273, "dvid": [274, 276, 277], "autocorrel": [274, 276], "dtb": [274, 276], "91": [274, 276], "idv_varying_ruv": 274, "idv_varying_ruv_cutoff0": 274, "idv_varying_ruv_cutoff1": 274, "idv_varying_ruv_cutoff2": 274, "idv_varying_ruv_cutoff3": 274, "idv_varying_ruv_cutoff4": 274, "idv_varying_ruv_cutoff5": 274, "idv_varying_ruv_cutoff6": 274, "idv_varying_ruv_cutoff7": 274, "idv_varying_ruv_cutoff8": 274, "idv_varying_combin": 274, "idv_varying_theta": 274, "cv": [274, 276], "772": [274, 276], "042": [274, 276], "sdeps_0": [274, 276], "t1": 274, "298": 274, "sdeps_t1": 274, "t2": 274, "886": 274, "t0": [274, 276], "271": [274, 276], "sdeps_t0": [274, 276], "390": [274, 276], "956": [274, 276], "717": 274, "014": 274, "914": 274, "983": 274, "884": 274, "017": 274, "955": 274, "958": 274, "969": 274, "933": 274, "022": 274, "819": 274, "007": 274, "755": 274, "982": 274, "642": 274, "387": 274, "th_0": 274, "257": 274, "sdep": 274, "th_t1": 274, "124": 274, "th_t2": 274, "delta_pow": [274, 276], "037": [274, 276], "delet": 275, "diagnost": 275, "impact": 276, "improement": 276, "592698": 276, "197887": 276, "007493": 276, "521171": 276, "et1apgr": 276, "487930": 276, "residual_error_model": 276, "910000": 276, "030000": 276, "diagnos": 276, "structural_bia": 276, "cpred": 276, "binmin": 276, "binmax": 276, "binid": 276, "159": 276, "258": 276, "strutur": 276, "mdel": 276, "fullblock_paramet": 276, "183463": 276, "171306": 276, "554610": 276, "154408": 276, "167053": 276, "cox": 276, "boxcox_paramet": 276, "shape": 276, "new_sd": 276, "old_sd": 276, "922083": 276, "182037": 276, "332800": 276, "166021": 276, "tdist_paramet": 276, "79": 276, "9997": 276, "168477": 276, "9986": 276, "166469": 276, "residual_error": 276, "additional_paramet": 276, "coeff": 276, "48793": 276, "033334": 276, "48218": 276, "052342": 276, "59034": 276, "008371": 276, "00887": 276, "003273": 276, "set_time_varying_error_model": 277, "ibrahim": 277, "quickli": [277, 280], "assess": 277, "inde": 277, "cwres_model": 277, "479721": 277, "385268": 277, "002792": 277, "time_varying1": 277, "117041": 277, "555154": 277, "time_varying3": 277, "336641": 277, "091207": 277, "065738": 277, "654562": 277, "046578": 277, "519115": 277, "612710": 277, "643741": 277, "027766": 277, "000367": 277, "967365": 277, "00123": 277, "0976": 277, "12252": 277, "14299": 277, "000337": 277, "05242": 277, "006105": 277, "10545": 277, "12659": 277, "15573": 277, "00054": 277, "04769": 277, "030825": 277, "mox3": 277, "best_ruvsearch_1": 277, "2460": 277, "704469": 277, "957378": 277, "2473": 277, "661847": 277, "269102": 277, "2495": 277, "973571": 277, "2444": 277, "2455": 277, "2475": 277, "2423": 277, "757516": 277, "2435": 277, "047712": 277, "2453": 277, "068976": 277, "707": 277, "5434": 277, "531596": 277, "794": 277, "3091": 277, "528620": 277, "3094": 277, "532547": 277, "iiv_vc_iiv_cl_estim": 277, "077743": 277, "038888": 277, "076793": 277, "039924": 277, "071628": 277, "038470": 277, "072309": 277, "704770": 277, "093311": 277, "074889": 277, "707665": 277, "081095": 277, "075048": 277, "705429": 277, "044311": 277, "iiv_ruv1_estim": 277, "time_varying_estim": 277, "039675": 277, "040734": 277, "42509": 277, "215727": 277, "655144": 277, "708324": 277, "762729": 277, "236530": 277, "229762": 277, "715966": 277, "423148": 277, "419741": 277, "774540": 277, "164274": 277, "450202": 277, "195425": 277, "960585": 277, "090461": 277, "848498": 277, "052021": 277, "239462": 277, "065148": 277, "571348": 277, "244582": 277, "161981": 277, "509910": 277, "373696": 277, "084489": 277, "647643": 277, "344772": 277, "083776": 277, "259395": 277, "101415": 277, "024651": 277, "443542": 277, "124023": 277, "183089": 277, "977222": 277, "219": 277, "moustafa": 277, "m": 277, "maria": 277, "kjellsson": 277, "aap": 277, "1208": 277, "s12248": 277, "018": 277, "0240": 277, "pha": 278, "219210": 278, "90878": 278, "219167": 278, "36222": 278, "bmi": 278, "219171": 278, "47564": 278, "cycll": 278, "219203": 278, "94536": 278, "diag": 278, "219206": 278, "01527": 278, "disdur": 278, "219032": 278, "86056": 278, "215321": 278, "70954": 278, "215306": 278, "67698": 278, "phia": 278, "men": 278, "215407": 278, "40295": 278, "phib": 278, "georeg": 278, "215373": 278, "77800": 278, "216968": 278, "25989": 278, "slp": 278, "215359": 278, "18150": 278, "54656": 278, "140000e": 278, "43314": 278, "390000e": 278, "96342": 278, "319000e": 278, "89351": 278, "695800e": 278, "178": 278, "04822": 278, "290000e": 278, "03256": 278, "060000e": 278, "72597": 278, "10102": 278, "580000e": 278, "1661": 278, "58291": 278, "50452": 278, "phaag": 278, "phabmi": 278, "phacycl": 278, "phadiag": 278, "phadisdur": 278, "backward_scm_dir1": 278, "phawt": 278, "phiamen": 278, "phibgeoreg": 278, "phibmen": 278, "slpgeoreg": 278, "304": 278, "beween": 278, "target": 278, "slightli": 278, "215961": 278, "46277": 278, "3249": 278, "44601": 278, "215748": 278, "07194": 278, "213": 278, "39083": 278, "215570": 278, "57352": 278, "49842": 278, "215486": 278, "23440": 278, "33912": 278, "87007": 278, "36433": 278, "215357": 278, "74693": 278, "61": 278, "12314": 278, "215337": 278, "95044": 278, "79649": 278, "24090": 278, "215332": 278, "91461": 278, "23763": 278, "67861": 278, "00163": 278, "215450": 278, "74783": 278, "07085": 278, "215491": 278, "11568": 278, "43870": 278, "500000e": 278, "700000e": 278, "170000e": 278, "260000e": 278, "360000e": 278, "600000e": 278, "020000e": 278, "620000e": 278, "430000e": 278, "200000e": 278, "lbest": 278, "cpl": 278, "230120": 279, "165042": 279, "853273": 279, "575351": 279, "215148": 279, "027733": 279, "083424": 279, "533799": 279, "300884": 279, "993262": 279, "654589": 279, "180960": 279, "322738": 279, "928279": 279, "905658": 279, "370783": 279, "364078": 279, "546277": 279, "795252": 279, "313336": 279, "957716": 279, "351839": 279, "058260": 279, "078494": 279, "542369": 279, "664634": 279, "221459": 279, "775938": 279, "823449": 279, "873918": 279, "527835": 279, "135159": 279, "793703": 279, "405150": 279, "899285": 279, "615899": 279, "562788": 279, "330868": 279, "406903": 279, "230477": 279, "818812": 279, "328937": 279, "438225": 279, "892761": 279, "479966": 279, "446579": 279, "929665": 279, "924846": 279, "849137": 279, "432346": 279, "615092": 279, "247238": 279, "024193": 279, "423537": 279, "694969": 279, "018308": 279, "484284": 279, "548598": 279, "705806": 279, "387386": 279, "664954": 279, "114753": 279, "424024": 279, "056381": 279, "853355": 279, "282087": 279, "178961": 279, "413680": 279, "449888": 279, "695800": 279, "678095": 279, "238692": 279, "704503": 279, "138213": 279, "541680": 279, "166879": 279, "713778": 279, "026935": 279, "929655": 279, "316351": 279, "567697": 279, "335429": 279, "009725": 279, "563473": 279, "937635": 279, "388393": 279, "461262": 279, "459161": 279, "959843": 279, "462408": 279, "277388": 279, "501489": 279, "260472": 279, "811596": 279, "179394": 279, "366018": 279, "219194": 279, "398492": 279, "786560": 279, "218010": 279, "961895": 279, "630512": 279, "191401": 279, "612812": 279, "051986": 279, "231970": 279, "816485": 279, "553003": 279, "584818": 279, "767349": 279, "988276": 279, "776532": 279, "846457": 279, "892200": 279, "822404": 279, "725509": 279, "015416": 279, "207434": 279, "018880": 279, "565671": 279, "212538": 279, "838099": 279, "434087": 279, "250063": 279, "341361": 279, "140249": 279, "297823": 279, "599116": 279, "944073": 279, "086788": 279, "659430": 279, "409142": 279, "831345": 279, "485191": 279, "516464": 279, "775355": 279, "755737": 279, "901408": 279, "733704": 279, "793265": 279, "794788": 279, "851982": 279, "693935": 279, "707700": 279, "912201": 279, "382384": 279, "401748": 279, "905528": 279, "538437": 279, "069326": 279, "498709": 279, "926835": 279, "186642": 279, "196475": 279, "077897": 279, "497867": 279, "985533": 279, "773375": 279, "848184": 279, "819544": 279, "565811": 279, "551558": 279, "762211": 279, "572217": 279, "843029": 279, "630121": 279, "042324": 279, "056323": 279, "298009": 279, "187278": 279, "035731": 279, "406685": 279, "370226": 279, "361844": 279, "802175": 279, "957232": 279, "496993": 279, "597045": 279, "169391": 279, "639042": 279, "361498": 279, "454421": 279, "400720": 279, "106708": 279, "977219": 279, "024682": 279, "889492": 279, "974785": 279, "904024": 279, "641421": 279, "575363": 279, "835458": 279, "886356": 279, "840067": 279, "853009": 279, "253049": 279, "819836": 279, "712658": 279, "884553": 279, "374133": 279, "497236": 279, "285544": 279, "044583": 279, "893425": 279, "415675": 279, "765897": 279, "277992": 279, "360173": 279, "046265": 279, "396594": 279, "586789": 279, "688954": 279, "414926": 279, "684344": 279, "358567": 279, "249772": 279, "841335": 279, "907778": 279, "493584": 279, "496109": 279, "659481": 279, "253768": 279, "362886": 279, "933397": 279, "222423": 279, "936980": 279, "731451": 279, "988252": 279, "178177": 279, "206488": 279, "605768": 279, "746436": 279, "517867": 279, "477206": 279, "911020": 279, "980420": 279, "763155": 279, "346212": 279, "408266": 279, "453899": 279, "811144": 279, "686115": 279, "462547": 279, "337790": 279, "783555": 279, "031564": 279, "043157": 279, "036534": 279, "195385": 279, "972480": 279, "525306": 279, "225458": 279, "378125": 279, "016286": 279, "723710": 279, "404922": 279, "699366": 279, "269137": 279, "846592": 279, "408322": 279, "815026": 279, "509957": 279, "448461": 279, "243399": 279, "159667": 279, "926077": 279, "481351": 279, "541949": 279, "933824": 279, "625663": 279, "944302": 279, "422555": 279, "371639": 279, "087071": 279, "907322": 279, "735586": 279, "344235": 279, "663661": 279, "611250": 279, "606033": 279, "556035": 279, "308617": 279, "500411": 279, "860290": 279, "584165": 279, "874004": 279, "631308": 279, "881148": 279, "153441": 279, "824837": 279, "133006": 279, "758791": 279, "366355": 279, "054769": 279, "348849": 279, "860736": 279, "921633": 279, "488686": 279, "568383": 279, "946876": 279, "824880": 279, "376218": 279, "604188": 279, "916884": 279, "898802": 279, "467337": 279, "638247": 279, "773450": 279, "472019": 279, "136159": 279, "600450": 279, "318875": 279, "151210": 279, "104682": 279, "526828": 279, "551158": 279, "354616": 279, "293600": 279, "796073": 279, "884839": 279, "376893": 279, "486179": 279, "367480": 279, "114640": 279, "121901": 279, "054791": 279, "408347": 279, "512627": 279, "864669": 279, "867625": 279, "842566": 279, "280139": 279, "078385": 279, "638560": 279, "631655": 279, "882876": 279, "622712": 279, "758919": 279, "037941": 279, "361556": 279, "814952": 279, "708577": 279, "715708": 279, "989005": 279, "266944": 279, "383043": 279, "621329": 279, "212573": 279, "676905": 279, "110075": 279, "003027": 279, "956306": 279, "905147": 279, "380865": 279, "445912": 279, "534496": 279, "546036": 279, "876780": 279, "900845": 279, "682987": 279, "924166": 279, "749003": 279, "802797": 279, "115117": 279, "196823": 279, "662582": 279, "806515": 279, "851698": 279, "488859": 279, "296737": 279, "429352": 279, "743671": 279, "574667": 279, "191840": 279, "880881": 279, "874349": 279, "956378": 279, "630846": 279, "676572": 279, "668763": 279, "483346": 279, "954047": 279, "455902": 279, "793645": 279, "731336": 279, "425364": 279, "928532": 279, "504667": 279, "030662": 279, "366585": 279, "455400": 279, "662370": 279, "551208": 279, "502366": 279, "580405": 279, "552114": 279, "305631": 279, "275622": 279, "040276": 279, "544260": 279, "155311": 279, "515088": 279, "022410": 279, "363698": 279, "751915": 279, "424237": 279, "434510": 279, "952586": 279, "098997": 279, "073635": 279, "073683": 279, "963905": 279, "169888": 279, "879430": 279, "351619": 279, "564632": 279, "178975": 279, "255630": 279, "695028": 279, "264764": 279, "408061": 279, "516160": 279, "572606": 279, "297200": 279, "916145": 279, "244786": 279, "606428": 279, "744242": 279, "416676": 279, "693535": 279, "269584": 279, "069317": 279, "764024": 279, "716822": 279, "133073": 279, "132983": 279, "125029": 279, "027851": 279, "105503": 279, "583418": 279, "402983": 279, "850645": 279, "363551": 279, "032512": 279, "052073": 279, "892175": 279, "788249": 279, "435102": 279, "242420": 279, "777419": 279, "589215": 279, "512603": 279, "416254": 279, "923185": 279, "175264": 279, "418469": 279, "824234": 279, "194473": 279, "675347": 279, "903583": 279, "550825": 279, "271405": 279, "501681": 279, "875052": 279, "876965": 279, "372005": 279, "432371": 279, "885439": 279, "357159": 279, "323449": 279, "iofv_summari": 279, "orgin": 279, "ob": 279, "sampled_median": 279, "sampled_stdev": 279, "residual_q1": 279, "743042": 279, "269351": 279, "092721": 279, "132107": 279, "049484": 279, "062882": 279, "923433": 279, "032842": 279, "903729": 279, "041599": 279, "666016": 279, "588530": 279, "233558": 279, "813525": 279, "338707": 279, "262659": 279, "651808": 279, "842347": 279, "092618": 279, "607326": 279, "763450": 279, "426016": 279, "953150": 279, "344659": 279, "002809": 279, "839617": 279, "390660": 279, "093249": 279, "843159": 279, "761625": 279, "066485": 279, "562593": 279, "515891": 279, "678375": 279, "587563": 279, "846506": 279, "321253": 279, "931536": 279, "511037": 279, "243040": 279, "313767": 279, "998817": 279, "190685": 279, "266501": 279, "243372": 279, "216676": 279, "334541": 279, "088609": 279, "030344": 279, "099508": 279, "626027": 279, "236755": 279, "682470": 279, "271061": 279, "322169": 279, "889854": 279, "855528": 279, "232988": 279, "221102": 279, "260479": 279, "297037": 279, "100632": 279, "978394": 279, "671231": 279, "588077": 279, "600891": 279, "572710": 279, "088513": 279, "331370": 279, "651006": 279, "383926": 279, "621596": 279, "936751": 279, "638334": 279, "863723": 279, "802597": 279, "124775": 279, "712276": 279, "541296": 279, "902641": 279, "054733": 279, "087013": 279, "019852": 279, "185274": 279, "299915": 279, "071925": 279, "504540": 279, "056317": 279, "177399": 279, "404555": 279, "347654": 279, "490854": 279, "248420": 279, "402107": 279, "172721": 279, "309188": 279, "612652": 279, "605320": 279, "387170": 279, "916585": 279, "723804": 279, "814910": 279, "320602": 279, "089383": 279, "193802": 279, "746322": 279, "453306": 279, "888849": 279, "347721": 279, "796098": 279, "427890": 279, "964192": 279, "509526": 279, "553605": 279, "595254": 279, "940021": 279, "187065": 279, "218493": 279, "446771": 279, "021723": 279, "143293": 279, "077425": 279, "553705": 279, "963659": 279, "230769": 279, "941064": 279, "345041": 279, "355392": 279, "177536": 279, "564686": 279, "074840": 279, "501228": 279, "910681": 279, "928524": 279, "255799": 279, "746242": 279, "724151": 279, "284455": 279, "111385": 279, "103779": 279, "602531": 279, "057843": 279, "201646": 279, "908651": 279, "880337": 279, "368175": 279, "066179": 279, "743926": 279, "503126": 279, "881606": 279, "250884": 279, "047349": 279, "844822": 279, "189370": 279, "511282": 279, "270109": 279, "430602": 279, "221208": 279, "868376": 279, "958375": 279, "098127": 279, "780755": 279, "635224": 279, "985409": 279, "809369": 279, "378962": 279, "211565": 279, "057646": 279, "205194": 279, "036416": 279, "193803": 279, "429374": 279, "204566": 279, "181809": 279, "278418": 279, "598975": 279, "337763": 279, "785971": 279, "413662": 279, "606782": 279, "709391": 279, "881992": 279, "864932": 279, "303395": 279, "084555": 279, "219260": 279, "154550": 279, "785024": 279, "694892": 279, "512588": 279, "121911": 279, "906081": 279, "693733": 279, "669899": 279, "053933": 279, "229621": 279, "686649": 279, "489669": 279, "193242": 279, "455548": 279, "756085": 279, "871678": 279, "683725": 279, "788305": 279, "441965": 279, "980475": 279, "053564": 279, "483885": 279, "840129": 279, "161657": 279, "813878": 279, "634209": 279, "574414": 279, "214315": 279, "235064": 279, "837522": 279, "929402": 279, "427740": 279, "521014": 279, "392308": 279, "944092": 279, "407457": 279, "879179": 279, "753044": 279, "057118": 279, "900168": 279, "579183": 279, "047295": 279, "069060": 279, "430617": 279, "023015": 279, "749906": 279, "157977": 279, "117461": 279, "010968": 279, "974584": 279, "052094": 279, "650140": 279, "206923": 279, "302385": 279, "557865": 279, "806373": 279, "733736": 279, "309462": 279, "292477": 279, "034161": 279, "253204": 279, "515730": 279, "067793": 279, "328308": 279, "941486": 279, "862193": 279, "275903": 279, "359860": 279, "865778": 279, "461685": 279, "346120": 279, "040796": 279, "340902": 279, "669504": 279, "165811": 279, "006993": 279, "056961": 279, "515114": 279, "073228": 279, "455873": 279, "041631": 279, "121517": 279, "970391": 279, "151516": 279, "604970": 279, "314527": 279, "639192": 279, "701809": 279, "559444": 279, "756955": 279, "240398": 279, "residual_q3": 279, "residual_outli": 279, "101924": 279, "045535": 279, "234064": 279, "025423": 279, "109899": 279, "625316": 279, "268882": 279, "574353": 279, "419169": 279, "807045": 279, "159688": 279, "667537": 279, "022651": 279, "630322": 279, "291458": 279, "309807": 279, "105832": 279, "301714": 279, "720484": 279, "289277": 279, "953368": 279, "653632": 279, "126620": 279, "673619": 279, "333709": 279, "076368": 279, "549693": 279, "158992": 279, "824096": 279, "026303": 279, "658756": 279, "145689": 279, "986494": 279, "095503": 279, "364901": 279, "552261": 279, "588452": 279, "301528": 279, "219416": 279, "359428": 279, "174344": 279, "432004": 279, "734733": 279, "135789": 279, "237813": 279, "693671": 279, "260535": 279, "184885": 279, "364894": 279, "772187": 279, "236023": 279, "845436": 279, "707608": 279, "626422": 279, "497515": 279, "963228": 279, "904840": 279, "701781": 279, "338779": 279, "individual_predictions_plot": 279, "trim": 280, "modelsearch_dir1": 280, "hash": 280, "mytab_mox1": 280, "subfold": 280, "temporari": 280, "finish": 280, "recreat": 280, "frame": [280, 282], "programmat": 280, "pharmpy_vers": 280, "tool_nam": 280, "start_tim": 280, "22t14": 280, "312240": 280, "end_tim": 280, "592109": 280, "common_opt": 280, "tmp": 280, "tool_result": 280, "locat": 280, "concis": 280, "newlin": 280, "semi": 280, "colon": 280, "endpoint": 280, "wildcard": 280, "nodepot": 280, "autom": 280, "gotcha": 281, "mirror": 282, "cran": 282, "reticul": 282, "remot": 282, "install_github": 282, "ref": 282, "install_pharmpi": 282, "session": 282, "packagevers": 282, "print_pharmpy_vers": 282, "miniconda": 282, "py_discover_config": 282, "conda_cr": 282, "python_vers": 282, "virtual": 282, "someth": 282, "libpython": 282, "lib": 282, "libpython3": 282, "pipe": 282, "magrittr": 282, "model_a": 282, "model_b": 282, "reset_index": 282, "5l": 282, "input_model": 282}, "objects": {"pharmpy": [[240, 0, 0, "-", "model"], [241, 0, 0, "-", "modeling"], [242, 0, 0, "-", "tools"], [243, 0, 0, "-", "workflows"], [248, 6, 1, "cmdoption-pharmpy-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-version", "--version"], [248, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "ExplicitODESystem"], [17, 1, 1, "", "Infusion"], [18, 1, 1, "", "JointNormalDistribution"], [19, 1, 1, "", "Model"], [20, 4, 1, "", "ModelError"], [21, 4, 1, "", "ModelSyntaxError"], [22, 4, 1, "", "ModelfitResultsError"], [23, 1, 1, "", "NormalDistribution"], [24, 1, 1, "", "ODESystem"], [25, 1, 1, "", "Parameter"], [26, 1, 1, "", "Parameters"], [27, 1, 1, "", "RandomVariables"], [28, 1, 1, "", "Results"], [29, 1, 1, "", "Statement"], [30, 1, 1, "", "Statements"], [31, 1, 1, "", "VariabilityHierarchy"], [32, 1, 1, "", "VariabilityLevel"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "subs"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartment"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "output_compartment"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_compartmental_system"], [8, 2, 1, "", "to_explicit_system"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"]], "pharmpy.model.ExplicitODESystem": [[16, 3, 1, "", "amounts"], [16, 3, 1, "", "compartment_names"], [16, 3, 1, "", "free_symbols"], [16, 3, 1, "", "ics"], [16, 3, 1, "", "odes"], [16, 3, 1, "", "rhs_symbols"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_compartmental_system"], [16, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Infusion": [[17, 3, 1, "", "amount"], [17, 2, 1, "", "create"], [17, 3, 1, "", "duration"], [17, 3, 1, "", "free_symbols"], [17, 3, 1, "", "rate"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"]], "pharmpy.model.JointNormalDistribution": [[18, 2, 1, "", "create"], [18, 2, 1, "", "evalf"], [18, 3, 1, "", "free_symbols"], [18, 2, 1, "", "get_covariance"], [18, 2, 1, "", "get_variance"], [18, 2, 1, "", "latex_string"], [18, 3, 1, "", "level"], [18, 3, 1, "", "mean"], [18, 3, 1, "", "names"], [18, 2, 1, "", "replace"], [18, 2, 1, "", "subs"], [18, 3, 1, "", "variance"]], "pharmpy.model.Model": [[19, 2, 1, "", "copy"], [19, 2, 1, "", "create_model"], [19, 3, 1, "", "datainfo"], [19, 3, 1, "", "dataset"], [19, 3, 1, "", "dependent_variable"], [19, 3, 1, "", "description"], [19, 3, 1, "", "estimation_steps"], [19, 3, 1, "", "filename_extension"], [19, 2, 1, "", "has_same_dataset_as"], [19, 3, 1, "", "initial_individual_estimates"], [19, 3, 1, "", "model_code"], [19, 3, 1, "", "modelfit_results"], [19, 3, 1, "", "name"], [19, 3, 1, "", "observation_transformation"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "parent_model"], [19, 3, 1, "", "random_variables"], [19, 3, 1, "", "statements"], [19, 2, 1, "", "update_datainfo"], [19, 3, 1, "", "value_type"]], "pharmpy.model.NormalDistribution": [[23, 2, 1, "", "create"], [23, 2, 1, "", "evalf"], [23, 3, 1, "", "free_symbols"], [23, 2, 1, "", "get_covariance"], [23, 2, 1, "", "get_variance"], [23, 2, 1, "", "latex_string"], [23, 3, 1, "", "level"], [23, 3, 1, "", "mean"], [23, 3, 1, "", "names"], [23, 2, 1, "", "replace"], [23, 2, 1, "", "subs"], [23, 3, 1, "", "variance"]], "pharmpy.model.ODESystem": [[24, 2, 1, "", "to_compartmental_system"], [24, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Parameter": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "init"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "name"], [25, 2, 1, "", "replace"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[26, 2, 1, "", "create"], [26, 3, 1, "", "fix"], [26, 3, 1, "", "fixed"], [26, 3, 1, "", "inits"], [26, 3, 1, "", "lower"], [26, 3, 1, "", "names"], [26, 3, 1, "", "nonfixed"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "set_fix"], [26, 2, 1, "", "set_initial_estimates"], [26, 3, 1, "", "symbols"], [26, 2, 1, "", "to_dataframe"], [26, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[27, 3, 1, "", "covariance_matrix"], [27, 2, 1, "", "create"], [27, 3, 1, "", "epsilon_levels"], [27, 3, 1, "", "epsilons"], [27, 3, 1, "", "eta_levels"], [27, 3, 1, "", "etas"], [27, 3, 1, "", "free_symbols"], [27, 2, 1, "", "get_covariance"], [27, 2, 1, "", "get_rvs_with_same_dist"], [27, 3, 1, "", "iiv"], [27, 3, 1, "", "iov"], [27, 2, 1, "", "join"], [27, 3, 1, "", "names"], [27, 2, 1, "", "nearest_valid_parameters"], [27, 3, 1, "", "nrvs"], [27, 3, 1, "", "parameter_names"], [27, 2, 1, "", "parameters_sdcorr"], [27, 2, 1, "", "replace"], [27, 2, 1, "", "sample"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "unjoin"], [27, 2, 1, "", "validate_parameters"], [27, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_and_reset_index"], [28, 2, 1, "", "to_csv"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[29, 3, 1, "", "free_symbols"], [29, 3, 1, "", "rhs_symbols"], [29, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[30, 3, 1, "", "after_odes"], [30, 3, 1, "", "before_odes"], [30, 2, 1, "", "dependencies"], [30, 2, 1, "", "direct_dependencies"], [30, 3, 1, "", "error"], [30, 2, 1, "", "find_assignment"], [30, 2, 1, "", "find_assignment_index"], [30, 3, 1, "", "free_symbols"], [30, 2, 1, "", "full_expression"], [30, 3, 1, "", "ode_system"], [30, 2, 1, "", "reassign"], [30, 2, 1, "", "remove_symbol_definitions"], [30, 2, 1, "", "subs"], [30, 2, 1, "", "to_compartmental_system"], [30, 2, 1, "", "to_explicit_system"]], "pharmpy.model.VariabilityHierarchy": [[31, 2, 1, "", "create"], [31, 3, 1, "", "levels"], [31, 3, 1, "", "names"], [31, 2, 1, "", "replace"]], "pharmpy.model.VariabilityLevel": [[32, 2, 1, "", "create"], [32, 3, 1, "", "group"], [32, 3, 1, "", "name"], [32, 3, 1, "", "reference"], [32, 2, 1, "", "replace"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_peripheral_compartment"], [42, 5, 1, "", "add_pk_iiv"], [43, 5, 1, "", "add_population_parameter"], [44, 5, 1, "", "add_time_after_dose"], [45, 5, 1, "", "append_estimation_step_options"], [46, 5, 1, "", "bump_model_number"], [47, 5, 1, "", "calculate_aic"], [48, 5, 1, "", "calculate_bic"], [49, 5, 1, "", "calculate_corr_from_cov"], [50, 5, 1, "", "calculate_corr_from_inf"], [51, 5, 1, "", "calculate_cov_from_corrse"], [52, 5, 1, "", "calculate_cov_from_inf"], [53, 5, 1, "", "calculate_epsilon_gradient_expression"], [54, 5, 1, "", "calculate_eta_gradient_expression"], [55, 5, 1, "", "calculate_eta_shrinkage"], [56, 5, 1, "", "calculate_individual_parameter_statistics"], [57, 5, 1, "", "calculate_individual_shrinkage"], [58, 5, 1, "", "calculate_inf_from_corrse"], [59, 5, 1, "", "calculate_inf_from_cov"], [60, 5, 1, "", "calculate_parameters_from_ucp"], [61, 5, 1, "", "calculate_pk_parameters_statistics"], [62, 5, 1, "", "calculate_se_from_cov"], [63, 5, 1, "", "calculate_se_from_inf"], [64, 5, 1, "", "calculate_ucp_scale"], [65, 5, 1, "", "check_dataset"], [66, 5, 1, "", "check_high_correlations"], [67, 5, 1, "", "check_parameters_near_bounds"], [68, 5, 1, "", "cleanup_model"], [69, 5, 1, "", "convert_model"], [70, 5, 1, "", "copy_model"], [71, 5, 1, "", "create_joint_distribution"], [72, 5, 1, "", "create_report"], [73, 5, 1, "", "create_rng"], [74, 5, 1, "", "create_symbol"], [75, 5, 1, "", "deidentify_data"], [76, 5, 1, "", "drop_columns"], [77, 5, 1, "", "drop_dropped_columns"], [78, 5, 1, "", "evaluate_epsilon_gradient"], [79, 5, 1, "", "evaluate_eta_gradient"], [80, 5, 1, "", "evaluate_expression"], [81, 5, 1, "", "evaluate_individual_prediction"], [82, 5, 1, "", "evaluate_population_prediction"], [83, 5, 1, "", "evaluate_weighted_residuals"], [84, 5, 1, "", "expand_additional_doses"], [85, 5, 1, "", "find_clearance_parameters"], [86, 5, 1, "", "find_volume_parameters"], [87, 5, 1, "", "fix_or_unfix_parameters"], [88, 5, 1, "", "fix_parameters"], [89, 5, 1, "", "fix_parameters_to"], [90, 5, 1, "", "generate_model_code"], [91, 5, 1, "", "get_baselines"], [92, 5, 1, "", "get_bioavailability"], [93, 5, 1, "", "get_cmt"], [94, 5, 1, "", "get_concentration_parameters_from_data"], [95, 5, 1, "", "get_config_path"], [96, 5, 1, "", "get_covariate_baselines"], [97, 5, 1, "", "get_doseid"], [98, 5, 1, "", "get_doses"], [99, 5, 1, "", "get_evid"], [100, 5, 1, "", "get_ids"], [101, 5, 1, "", "get_individual_parameters"], [102, 5, 1, "", "get_individual_prediction_expression"], [103, 5, 1, "", "get_lag_times"], [104, 5, 1, "", "get_mdv"], [105, 5, 1, "", "get_model_covariates"], [106, 5, 1, "", "get_number_of_individuals"], [107, 5, 1, "", "get_number_of_observations"], [108, 5, 1, "", "get_number_of_observations_per_individual"], [109, 5, 1, "", "get_observation_expression"], [110, 5, 1, "", "get_observations"], [111, 5, 1, "", "get_omegas"], [112, 5, 1, "", "get_pk_parameters"], [113, 5, 1, "", "get_population_prediction_expression"], [114, 5, 1, "", "get_rv_parameters"], [115, 5, 1, "", "get_sigmas"], [116, 5, 1, "", "get_thetas"], [117, 5, 1, "", "get_unit_of"], [118, 5, 1, "", "greekify_model"], [119, 5, 1, "", "has_additive_error_model"], [120, 5, 1, "", "has_combined_error_model"], [121, 5, 1, "", "has_covariate_effect"], [122, 5, 1, "", "has_first_order_elimination"], [123, 5, 1, "", "has_michaelis_menten_elimination"], [124, 5, 1, "", "has_mixed_mm_fo_elimination"], [125, 5, 1, "", "has_proportional_error_model"], [126, 5, 1, "", "has_random_effect"], [127, 5, 1, "", "has_zero_order_absorption"], [128, 5, 1, "", "has_zero_order_elimination"], [129, 5, 1, "", "list_time_varying_covariates"], [130, 5, 1, "", "load_example_model"], [131, 5, 1, "", "make_declarative"], [132, 5, 1, "", "mu_reference_model"], [133, 5, 1, "", "omit_data"], [134, 5, 1, "", "plot_individual_predictions"], [135, 5, 1, "", "plot_iofv_vs_iofv"], [136, 5, 1, "", "print_model_code"], [137, 5, 1, "", "print_model_symbols"], [138, 5, 1, "", "read_dataset_from_datainfo"], [139, 5, 1, "", "read_model"], [140, 5, 1, "", "read_model_from_database"], [141, 5, 1, "", "read_model_from_string"], [142, 5, 1, "", "remove_covariance_step"], [143, 5, 1, "", "remove_covariate_effect"], [144, 5, 1, "", "remove_error_model"], [145, 5, 1, "", "remove_estimation_step"], [146, 5, 1, "", "remove_iiv"], [147, 5, 1, "", "remove_iov"], [148, 5, 1, "", "remove_lag_time"], [149, 5, 1, "", "remove_loq_data"], [150, 5, 1, "", "remove_peripheral_compartment"], [151, 5, 1, "", "remove_unused_parameters_and_rvs"], [152, 5, 1, "", "rename_symbols"], [153, 5, 1, "", "resample_data"], [154, 5, 1, "", "sample_individual_estimates"], [155, 5, 1, "", "sample_parameters_from_covariance_matrix"], [156, 5, 1, "", "sample_parameters_uniformly"], [157, 5, 1, "", "set_additive_error_model"], [158, 5, 1, "", "set_bolus_absorption"], [159, 5, 1, "", "set_combined_error_model"], [160, 5, 1, "", "set_covariates"], [161, 5, 1, "", "set_dtbs_error_model"], [162, 5, 1, "", "set_estimation_step"], [163, 5, 1, "", "set_evaluation_step"], [164, 5, 1, "", "set_first_order_absorption"], [165, 5, 1, "", "set_first_order_elimination"], [166, 5, 1, "", "set_iiv_on_ruv"], [167, 5, 1, "", "set_initial_estimates"], [168, 5, 1, "", "set_lower_bounds"], [169, 5, 1, "", "set_michaelis_menten_elimination"], [170, 5, 1, "", "set_mixed_mm_fo_elimination"], [171, 5, 1, "", "set_name"], [172, 5, 1, "", "set_ode_solver"], [173, 5, 1, "", "set_peripheral_compartments"], [174, 5, 1, "", "set_power_on_ruv"], [175, 5, 1, "", "set_proportional_error_model"], [176, 5, 1, "", "set_seq_zo_fo_absorption"], [177, 5, 1, "", "set_time_varying_error_model"], [178, 5, 1, "", "set_transit_compartments"], [179, 5, 1, "", "set_upper_bounds"], [180, 5, 1, "", "set_weighted_error_model"], [181, 5, 1, "", "set_zero_order_absorption"], [182, 5, 1, "", "set_zero_order_elimination"], [183, 5, 1, "", "simplify_expression"], [184, 5, 1, "", "solve_ode_system"], [185, 5, 1, "", "split_joint_distribution"], [186, 5, 1, "", "transform_etas_boxcox"], [187, 5, 1, "", "transform_etas_john_draper"], [188, 5, 1, "", "transform_etas_tdist"], [189, 5, 1, "", "translate_nmtran_time"], [190, 5, 1, "", "unconstrain_parameters"], [191, 5, 1, "", "undrop_columns"], [192, 5, 1, "", "unfix_parameters"], [193, 5, 1, "", "unfix_parameters_to"], [194, 5, 1, "", "update_initial_individual_estimates"], [195, 5, 1, "", "update_inits"], [196, 5, 1, "", "use_thetas_for_error_stdev"], [197, 5, 1, "", "write_csv"], [198, 5, 1, "", "write_model"]], "pharmpy.tools": [[199, 5, 1, "", "create_results"], [200, 5, 1, "", "fit"], [201, 5, 1, "", "predict_influential_individuals"], [202, 5, 1, "", "predict_influential_outliers"], [203, 5, 1, "", "predict_outliers"], [204, 5, 1, "", "print_fit_summary"], [205, 5, 1, "", "rank_models"], [206, 5, 1, "", "read_modelfit_results"], [207, 5, 1, "", "read_results"], [208, 5, 1, "", "retrieve_final_model"], [209, 5, 1, "", "retrieve_models"], [210, 5, 1, "", "run_allometry"], [211, 5, 1, "", "run_amd"], [212, 5, 1, "", "run_covsearch"], [213, 5, 1, "", "run_estmethod"], [214, 5, 1, "", "run_iivsearch"], [215, 5, 1, "", "run_iovsearch"], [216, 5, 1, "", "run_modelfit"], [217, 5, 1, "", "run_modelsearch"], [218, 5, 1, "", "run_ruvsearch"], [219, 5, 1, "", "run_tool"], [220, 5, 1, "", "summarize_errors"], [221, 5, 1, "", "summarize_individuals"], [222, 5, 1, "", "summarize_individuals_count_table"], [223, 5, 1, "", "summarize_modelfit_results"], [224, 5, 1, "", "write_results"]], "pharmpy.workflows": [[225, 1, 1, "", "LocalDirectoryDatabase"], [226, 1, 1, "", "LocalDirectoryToolDatabase"], [227, 1, 1, "", "LocalModelDirectoryDatabase"], [228, 1, 1, "", "Log"], [229, 1, 1, "", "ModelDatabase"], [230, 1, 1, "", "NullModelDatabase"], [231, 1, 1, "", "NullToolDatabase"], [232, 1, 1, "", "Task"], [233, 1, 1, "", "ToolDatabase"], [234, 1, 1, "", "Workflow"], [235, 5, 1, "", "call_workflow"], [236, 3, 1, "", "default_model_database"], [237, 3, 1, "", "default_tool_database"], [238, 5, 1, "", "execute_workflow"], [239, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[225, 2, 1, "", "retrieve_file"], [225, 2, 1, "", "retrieve_local_files"], [225, 2, 1, "", "retrieve_model"], [225, 2, 1, "", "retrieve_modelfit_results"], [225, 2, 1, "", "store_local_file"], [225, 2, 1, "", "store_metadata"], [225, 2, 1, "", "store_model"], [225, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[226, 2, 1, "", "from_dict"], [226, 2, 1, "", "read_metadata"], [226, 2, 1, "", "store_local_file"], [226, 2, 1, "", "store_metadata"], [226, 2, 1, "", "store_results"], [226, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[227, 2, 1, "", "list_models"], [227, 2, 1, "", "snapshot"], [227, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[228, 2, 1, "", "from_dict"], [228, 3, 1, "", "log"], [228, 2, 1, "", "log_error"], [228, 2, 1, "", "log_warning"], [228, 2, 1, "", "to_dataframe"], [228, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[229, 2, 1, "", "retrieve_file"], [229, 2, 1, "", "retrieve_local_files"], [229, 2, 1, "", "retrieve_model"], [229, 2, 1, "", "retrieve_modelfit_results"], [229, 2, 1, "", "snapshot"], [229, 2, 1, "", "store_local_file"], [229, 2, 1, "", "store_metadata"], [229, 2, 1, "", "store_model"], [229, 2, 1, "", "store_modelfit_results"], [229, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[230, 2, 1, "", "retrieve_file"], [230, 2, 1, "", "retrieve_local_files"], [230, 2, 1, "", "retrieve_model"], [230, 2, 1, "", "retrieve_modelfit_results"], [230, 2, 1, "", "store_local_file"], [230, 2, 1, "", "store_metadata"], [230, 2, 1, "", "store_model"], [230, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[231, 2, 1, "", "store_local_file"], [231, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[233, 3, 1, "", "model_database"], [233, 2, 1, "", "store_local_file"], [233, 2, 1, "", "store_results"]], "pharmpy-data-append": [[248, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [248, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[248, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[248, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [248, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[248, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [248, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[248, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [248, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [248, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [248, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [248, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [248, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [248, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[248, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[248, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[248, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[248, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[248, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[248, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[248, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [248, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[248, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[248, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [248, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[248, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[248, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [248, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [248, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[248, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[248, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [248, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [248, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [248, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [248, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[248, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[248, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[248, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[248, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [248, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [248, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [248, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[248, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[248, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[248, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[248, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[248, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[248, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[248, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[248, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[248, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[248, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[248, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[248, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [248, 6, 1, "cmdoption-pharmpy-run-amd-categorical", "--categorical"], [248, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [248, 6, 1, "cmdoption-pharmpy-run-amd-continuous", "--continuous"], [248, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-amd-lloq", "--lloq"], [248, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [248, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [248, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [248, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [248, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [248, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [248, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[248, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [248, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[248, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[248, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [248, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [248, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [248, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[248, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[248, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [248, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[248, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[248, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [248, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [248, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[248, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [248, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 270], "dataset": [0, 255, 280], "overview": [0, 272, 276], "pars": 0, "translat": 0, "step": [0, 278], "nm": 0, "tran": 0, "comment": 0, "line": [0, 248], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 255, 268], "date": 0, "id": 0, "check": [0, 251], "tabl": 0, "file": [0, 250, 255, 268], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 251], "all": 0, "zero": [0, 268], "individu": [0, 244, 245, 259, 265, 267, 268, 279], "control": 0, "stream": 0, "gener": [0, 264], "option": [0, 243, 280], "problem": 0, "data": [0, 243, 248], "eta": [0, 268], "code": [0, 249, 251, 266, 268], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 28, 244, 245, 248, 253, 254, 258, 259, 261, 263, 265, 266, 267, 268, 269, 274, 276, 277, 278, 279, 280], "spars": 0, "matrix": [0, 244, 267], "allometri": [1, 2, 248], "run": [1, 2, 248, 251, 253, 258, 261, 263, 268, 269, 277, 280], "argument": [1, 2, 253, 258, 261, 263, 269, 277], "procedur": [1, 277], "The": [1, 244, 245, 248, 250, 254, 256, 258, 259, 261, 265, 266, 268, 269, 274, 276, 277, 278, 279, 282], "automat": 2, "model": [2, 19, 240, 241, 248, 255, 256, 261, 266, 268, 269, 270, 274, 277, 280, 282], "develop": [2, 251, 252, 257], "amd": [2, 248], "input": [2, 252], "search": [2, 261, 269], "space": [2, 269], "order": [2, 268], "subtool": 2, "structur": [2, 261, 276], "iivsearch": [2, 248, 261], "iovsearch": [2, 248, 263], "residu": [2, 267, 276], "covari": [2, 244, 245, 259, 261, 267, 268, 276], "api": 3, "refer": [3, 245, 259], "assign": 4, "bolu": [5, 268], "columninfo": [6, 255], "compart": [7, 268], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 255], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 263, 268], "estimationstep": [14, 15], "explicitodesystem": 16, "infus": 17, "jointnormaldistribut": 18, "modelerror": 20, "modelsyntaxerror": 21, "modelfitresultserror": 22, "normaldistribut": 23, "odesystem": 24, "paramet": [25, 26, 244, 255, 256, 259, 266, 267, 268, 270], "randomvari": [27, 256], "statement": [29, 30, 256, 266], "variabilityhierarchi": 31, "variabilitylevel": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 248], "add_individual_paramet": 38, "add_iov": [39, 248], "add_lag_tim": 40, "add_peripheral_compart": 41, "add_pk_iiv": 42, "add_population_paramet": 43, "add_time_after_dos": 44, "append_estimation_step_opt": 45, "bump_model_numb": 46, "calculate_a": 47, "calculate_b": 48, "calculate_corr_from_cov": 49, "calculate_corr_from_inf": 50, "calculate_cov_from_corrs": 51, "calculate_cov_from_inf": 52, "calculate_epsilon_gradient_express": 53, "calculate_eta_gradient_express": 54, "calculate_eta_shrinkag": 55, "calculate_individual_parameter_statist": 56, "calculate_individual_shrinkag": 57, "calculate_inf_from_corrs": 58, "calculate_inf_from_cov": 59, "calculate_parameters_from_ucp": 60, "calculate_pk_parameters_statist": 61, "calculate_se_from_cov": 62, "calculate_se_from_inf": 63, "calculate_ucp_scal": 64, "check_dataset": 65, "check_high_correl": 66, "check_parameters_near_bound": 67, "cleanup_model": 68, "convert_model": 69, "copy_model": 70, "create_joint_distribut": [71, 248], "create_report": 72, "create_rng": 73, "create_symbol": 74, "deidentify_data": 75, "drop_column": 76, "drop_dropped_column": 77, "evaluate_epsilon_gradi": 78, "evaluate_eta_gradi": 79, "evaluate_express": 80, "evaluate_individual_predict": 81, "evaluate_population_predict": 82, "evaluate_weighted_residu": 83, "expand_additional_dos": 84, "find_clearance_paramet": 85, "find_volume_paramet": 86, "fix_or_unfix_paramet": 87, "fix_paramet": 88, "fix_parameters_to": 89, "generate_model_cod": 90, "get_baselin": 91, "get_bioavail": 92, "get_cmt": 93, "get_concentration_parameters_from_data": 94, "get_config_path": 95, "get_covariate_baselin": 96, "get_doseid": 97, "get_dos": 98, "get_evid": 99, "get_id": 100, "get_individual_paramet": 101, "get_individual_prediction_express": 102, "get_lag_tim": 103, "get_mdv": 104, "get_model_covari": 105, "get_number_of_individu": 106, "get_number_of_observ": 107, "get_number_of_observations_per_individu": 108, "get_observation_express": 109, "get_observ": 110, "get_omega": 111, "get_pk_paramet": 112, "get_population_prediction_express": 113, "get_rv_paramet": 114, "get_sigma": 115, "get_theta": 116, "get_unit_of": 117, "greekify_model": 118, "has_additive_error_model": 119, "has_combined_error_model": 120, "has_covariate_effect": 121, "has_first_order_elimin": 122, "has_michaelis_menten_elimin": 123, "has_mixed_mm_fo_elimin": 124, "has_proportional_error_model": 125, "has_random_effect": 126, "has_zero_order_absorpt": 127, "has_zero_order_elimin": 128, "list_time_varying_covari": 129, "load_example_model": 130, "make_declar": 131, "mu_reference_model": 132, "omit_data": 133, "plot_individual_predict": 134, "plot_iofv_vs_iofv": 135, "print_model_cod": 136, "print_model_symbol": 137, "read_dataset_from_datainfo": 138, "read_model": 139, "read_model_from_databas": 140, "read_model_from_str": 141, "remove_covariance_step": 142, "remove_covariate_effect": 143, "remove_error_model": 144, "remove_estimation_step": 145, "remove_iiv": [146, 248], "remove_iov": [147, 248], "remove_lag_tim": 148, "remove_loq_data": 149, "remove_peripheral_compart": 150, "remove_unused_parameters_and_rv": 151, "rename_symbol": 152, "resample_data": 153, "sample_individual_estim": 154, "sample_parameters_from_covariance_matrix": 155, "sample_parameters_uniformli": 156, "set_additive_error_model": 157, "set_bolus_absorpt": 158, "set_combined_error_model": 159, "set_covari": 160, "set_dtbs_error_model": 161, "set_estimation_step": 162, "set_evaluation_step": 163, "set_first_order_absorpt": 164, "set_first_order_elimin": 165, "set_iiv_on_ruv": 166, "set_initial_estim": 167, "set_lower_bound": 168, "set_michaelis_menten_elimin": 169, "set_mixed_mm_fo_elimin": 170, "set_nam": 171, "set_ode_solv": 172, "set_peripheral_compart": 173, "set_power_on_ruv": 174, "set_proportional_error_model": 175, "set_seq_zo_fo_absorpt": 176, "set_time_varying_error_model": 177, "set_transit_compart": 178, "set_upper_bound": 179, "set_weighted_error_model": 180, "set_zero_order_absorpt": 181, "set_zero_order_elimin": 182, "simplify_express": 183, "solve_ode_system": 184, "split_joint_distribut": 185, "transform_etas_boxcox": 186, "transform_etas_john_drap": 187, "transform_etas_tdist": 188, "translate_nmtran_tim": 189, "unconstrain_paramet": 190, "undrop_column": 191, "unfix_paramet": 192, "unfix_parameters_to": 193, "update_initial_individual_estim": 194, "update_init": [195, 248], "use_thetas_for_error_stdev": 196, "write_csv": 197, "write_model": 198, "create_result": 199, "fit": [200, 268], "predict_influential_individu": 201, "predict_influential_outli": 202, "predict_outli": 203, "print_fit_summari": 204, "rank_model": 205, "read_modelfit_result": 206, "read_result": 207, "retrieve_final_model": 208, "retrieve_model": 209, "run_allometri": 210, "run_amd": 211, "run_covsearch": 212, "run_estmethod": 213, "run_iivsearch": 214, "run_iovsearch": 215, "run_modelfit": 216, "run_modelsearch": 217, "run_ruvsearch": 218, "run_tool": 219, "summarize_error": 220, "summarize_individu": 221, "summarize_individuals_count_t": 222, "summarize_modelfit_result": 223, "write_result": 224, "localdirectorydatabas": 225, "localdirectorytooldatabas": 226, "localmodeldirectorydatabas": 227, "log": 228, "modeldatabas": 229, "nullmodeldatabas": 230, "nulltooldatabas": 231, "task": 232, "tooldatabas": 233, "workflow": [234, 243, 251], "call_workflow": 235, "default_model_databas": 236, "default_tool_databas": 237, "execute_workflow": 238, "split_common_opt": 239, "pharmpi": [240, 241, 242, 243, 247, 248, 249, 251, 255, 256, 262, 266, 271, 275, 280, 282], "packag": [240, 241, 242, 243], "class": [240, 243, 256], "function": [241, 242, 243], "tool": [242, 275, 280], "modul": [243, 256], "bootstrap": [244, 248], "postprocess": [244, 259], "statist": 244, "ofv": [244, 245, 248, 254, 259, 265, 267, 278, 279], "includ": 244, "case": 245, "delet": 245, "diagnost": 245, "cdd": [245, 248], "cook": 245, "score": 245, "jackknif": 245, "cookscor": 245, "ratio": 245, "delta": 245, "skip": 245, "column": 245, "changelog": 246, "0": 246, "88": 246, "2022": 246, "12": 246, "21": 246, "new": [246, 263, 268, 270], "featur": [246, 269, 280], "chang": [246, 271], "87": 246, "14": 246, "86": 246, "11": 246, "30": 246, "bugfix": 246, "85": 246, "18": 246, "84": 246, "1": 246, "13": 246, "bug": 246, "fix": [246, 268], "09": 246, "83": 246, "01": 246, "82": 246, "10": 246, "24": 246, "81": 246, "80": 246, "19": 246, "79": 246, "16": 246, "78": 246, "20": 246, "77": 246, "08": 246, "76": 246, "06": 246, "05": 246, "75": 246, "74": 246, "07": 246, "73": 246, "72": 246, "71": 246, "70": 246, "17": 246, "69": 246, "04": 246, "29": 246, "68": 246, "27": 246, "67": 246, "25": 246, "66": 246, "65": 246, "64": 246, "63": 246, "62": 246, "61": 246, "03": 246, "31": 246, "59": 246, "58": 246, "4": 246, "22": 246, "57": 246, "56": 246, "55": 246, "54": 246, "53": 246, "52": 246, "02": 246, "51": 246, "50": 246, "49": 246, "48": 246, "47": 246, "28": 246, "46": 246, "45": 246, "44": 246, "43": 246, "42": 246, "41": 246, "2021": 246, "40": 246, "39": 246, "15": 246, "38": 246, "37": 246, "26": 246, "36": 246, "35": 246, "34": 246, "3": 246, "2": [246, 264], "33": 246, "32": 246, "23": 246, "2020": 246, "9": 246, "8": 246, "7": 246, "6": 246, "5": 246, "2018": 246, "citat": 247, "how": 247, "cite": 247, "pharmr": [247, 282], "command": 248, "interfac": 248, "append": 248, "deidentifi": 248, "filter": 248, "print": 248, "resampl": 248, "write": [248, 266, 268, 270], "info": 248, "absorption_r": 248, "add_cov_effect": 248, "boxcox": [248, 268, 276], "elimination_r": 248, "error": [248, 267, 268, 276, 282], "iiv_on_ruv": 248, "john_drap": 248, "peripheral_compart": 248, "power_on_ruv": 248, "sampl": [248, 279], "tdist": [248, 276], "transit_compart": 248, "frem": [248, 259], "linear": [248, 265], "qa": [248, 276], "report": 248, "ruvsearch": [248, 277], "scm": [248, 278], "simev": [248, 279], "summari": [248, 278, 279], "covsearch": [248, 253], "estmethod": [248, 258], "execut": 248, "modelsearch": [248, 269], "commun": 249, "conduct": 249, "configur": 250, "environ": [250, 251], "variabl": [250, 259, 266, 270], "contribut": 251, "set": [251, 266, 268, 271], "up": 251, "support": 251, "platform": 251, "instal": [251, 260, 282], "python": [251, 282], "git": 251, "fork": 251, "clone": 251, "repositori": 251, "tox": 251, "graphviz": 251, "us": [251, 270, 282], "build": 251, "document": [251, 257], "unit": [251, 255], "test": 251, "integr": 251, "usabl": 251, "virtual": 251, "standard": [251, 267, 268], "releas": 251, "version": [251, 282], "inform": [251, 255, 267], "contributor": 252, "scientif": 252, "fund": 252, "effect": [253, 259, 268, 276], "wildcard": 253, "algorithm": [253, 258, 261, 263, 269], "crossval": 254, "crossvalid": 254, "retriev": 255, "from": [255, 268], "updat": [255, 258, 266, 268, 282], "subject": 255, "observ": 255, "dose": 255, "extract": 255, "group": 255, "after": 255, "concentr": 255, "type": [255, 280], "scale": 255, "continu": 255, "categori": 255, "drop": 255, "datatyp": 255, "descriptor": 255, "design": 256, "principl": 256, "level": 256, "architectur": 256, "heart": 256, "docstr": 256, "depend": 256, "exhaust": [258, 269], "onli": 258, "evalu": 258, "method": 258, "solver": 258, "coeffici": 259, "unexplain": 259, "estim": [259, 266, 267, 268], "valu": 259, "get": [260, 266, 268], "start": [260, 261], "A": 260, "first": [260, 268], "exampl": [260, 280], "brute": 261, "forc": 261, "number": [261, 268], "iiv": [261, 268, 269], "full": 261, "ad": [261, 268, 269], "compar": [261, 263, 269], "rank": [261, 263, 269], "candid": [261, 263, 269, 278], "welcom": 262, "iov": [263, 268], "licens": 264, "logo": 264, "copyright": 264, "bsd": 264, "claus": 264, "gnu": 264, "lesser": 264, "public": 264, "read": [266, 267, 268, 270], "name": [266, 270], "random": [266, 270], "modelfit": [266, 267], "initi": [266, 268], "final": 267, "rel": 267, "correl": 267, "indiviud": 267, "predict": [267, 279], "basic": 268, "sourc": 268, "string": 268, "unfix": 268, "add": 268, "pk": 268, "od": 268, "system": 268, "absorpt": 268, "rate": 268, "sequenti": 268, "delai": 268, "transit": 268, "lag": 268, "elimin": 268, "micha": 268, "menten": 268, "mix": 268, "peripher": 268, "remov": 268, "transform": 268, "approxim": 268, "t": 268, "john": 268, "draper": 268, "an": 268, "addit": 268, "proport": 268, "combin": [268, 269], "appli": 268, "ruv": 268, "power": 268, "deviat": 268, "epsilon": 268, "theta": 268, "weight": 268, "dtb": 268, "creat": 268, "joint": 268, "multipl": 268, "between": [268, 269], "previou": 268, "psn": [268, 275], "shrinkag": 268, "calcul": 268, "common": [269, 280], "behaviour": 269, "exclus": 269, "stepwis": 269, "reduc": 269, "dure": 269, "plugin": [270, 272], "plot": [271, 279], "theme": 271, "axi": 271, "project": 273, "suggest": 273, "resmod": 274, "connect": 275, "bia": 276, "fullblock": 276, "databas": 280, "directori": 280, "metadata": 280, "languag": 280, "mfl": 280, "symbol": 280, "describ": 280, "interv": 280, "redund": 280, "descript": 280, "user": 281, "guid": 281, "r": 282, "troubl": 282, "shoot": 282, "wrong": 282, "import": 282, "gotcha": 282, "object": 282, "list": 282, "indic": 282, "datafram": 282, "multiindex": 282, "float": 282, "integ": 282, "singl": 282, "element": 282, "vector": 282}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"calculate_eta_shrinkage": [[55, "calculate-eta-shrinkage"]], "create_report": [[72, "create-report"]], "convert_model": [[69, "convert-model"]], "calculate_inf_from_cov": [[59, "calculate-inf-from-cov"]], "check_dataset": [[65, "check-dataset"]], "check_parameters_near_bounds": [[67, "check-parameters-near-bounds"]], "calculate_eta_gradient_expression": [[54, "calculate-eta-gradient-expression"]], "calculate_inf_from_corrse": [[58, "calculate-inf-from-corrse"]], "calculate_parameters_from_ucp": [[60, "calculate-parameters-from-ucp"]], "add_population_parameter": [[43, "add-population-parameter"]], "calculate_epsilon_gradient_expression": [[53, "calculate-epsilon-gradient-expression"]], "add_iov": [[39, "add-iov"]], "add_lag_time": [[40, "add-lag-time"]], "check_high_correlations": [[66, "check-high-correlations"]], "calculate_individual_parameter_statistics": [[56, "calculate-individual-parameter-statistics"]], "cleanup_model": [[68, "cleanup-model"]], "add_time_after_dose": [[44, "add-time-after-dose"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "copy_model": [[70, "copy-model"]], "calculate_individual_shrinkage": [[57, "calculate-individual-shrinkage"]], "calculate_se_from_inf": [[63, "calculate-se-from-inf"]], "append_estimation_step_options": [[45, "append-estimation-step-options"]], "calculate_corr_from_cov": [[49, "calculate-corr-from-cov"]], "create_rng": [[73, "create-rng"]], "calculate_ucp_scale": [[64, "calculate-ucp-scale"]], "calculate_corr_from_inf": [[50, "calculate-corr-from-inf"]], "add_pk_iiv": [[42, "add-pk-iiv"]], "bump_model_number": [[46, "bump-model-number"]], "calculate_aic": [[47, "calculate-aic"]], "add_peripheral_compartment": [[41, "add-peripheral-compartment"]], "add_iiv": [[37, "add-iiv"]], "calculate_bic": [[48, "calculate-bic"]], "create_joint_distribution": [[71, "create-joint-distribution"]], "calculate_cov_from_corrse": [[51, "calculate-cov-from-corrse"]], "calculate_pk_parameters_statistics": [[61, "calculate-pk-parameters-statistics"]], "calculate_cov_from_inf": [[52, "calculate-cov-from-inf"]], "calculate_se_from_cov": [[62, "calculate-se-from-cov"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [258, "running"], [253, "running"], [261, "running"], [277, "running"], [263, "running"], [269, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [258, "arguments"], [253, "arguments"], [261, "arguments"], [277, "arguments"], [263, "arguments"], [269, "arguments"]], "Procedure": [[1, "procedure"], [277, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "Parameters": [[26, "parameters"], [268, "parameters"]], "ModelfitResultsError": [[22, "modelfitresultserror"]], "RandomVariables": [[27, "randomvariables"]], "Assignment": [[4, "assignment"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "DatasetError": [[11, "dataseterror"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Parameter": [[25, "parameter"]], "add_allometry": [[33, "add-allometry"]], "ColumnInfo": [[6, "columninfo"], [255, "columninfo"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "add_estimation_step": [[36, "add-estimation-step"]], "Statement": [[29, "statement"]], "JointNormalDistribution": [[18, "jointnormaldistribution"]], "add_covariance_step": [[34, "add-covariance-step"]], "VariabilityLevel": [[32, "variabilitylevel"]], "EstimationSteps": [[15, "estimationsteps"]], "ModelSyntaxError": [[21, "modelsyntaxerror"]], "Results": [[28, "results"], [2, "results"], [253, "results"], [280, "results"], [263, "results"]], "Compartment": [[7, "compartment"]], "ModelError": [[20, "modelerror"]], "Statements": [[30, "statements"]], "DatasetWarning": [[12, "datasetwarning"]], "EstimationStep": [[14, "estimationstep"]], "ExplicitODESystem": [[16, "explicitodesystem"]], "API Reference": [[3, "api-reference"]], "Bolus": [[5, "bolus"]], "Distribution": [[13, "distribution"], [268, "distribution"]], "Model": [[19, "model"]], "NormalDistribution": [[23, "normaldistribution"]], "ODESystem": [[24, "odesystem"]], "Infusion": [[17, "infusion"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [261, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [263, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "DataInfo": [[10, "datainfo"], [255, "datainfo"]], "VariabilityHierarchy": [[31, "variabilityhierarchy"]], "default_model_database": [[236, "default-model-database"]], "ToolDatabase": [[233, "tooldatabase"]], "Workflow": [[234, "workflow"]], "Crossval": [[254, "crossval"]], "The crossval results": [[254, "the-crossval-results"]], "Crossvalidation OFVs": [[254, "crossvalidation-ofvs"]], "LocalModelDirectoryDatabase": [[227, "localmodeldirectorydatabase"]], "Contributors": [[252, "authors"]], "Development": [[252, "development"]], "Scientific input": [[252, "scientific-input"]], "Funding": [[252, "funding"]], "NullToolDatabase": [[231, "nulltooldatabase"]], "Estmethod": [[258, "estmethod"]], "Algorithms": [[258, "algorithms"], [261, "algorithms"], [269, "algorithms"]], "Exhaustive": [[258, "exhaustive"]], "Exhaustive (with update)": [[258, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[258, "exhaustive-only-evaluation"]], "Methods": [[258, "methods"]], "Solvers": [[258, "solvers"]], "The Estmethod results": [[258, "the-estmethod-results"]], "pharmpy.model Package": [[240, "module-pharmpy.model"]], "Classes": [[240, "classes"], [243, "classes"]], "Bootstrap": [[244, "bootstrap"]], "The Bootstrap postprocessing and results": [[244, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[244, "parameter-statistics"]], "OFV statistics": [[244, "ofv-statistics"]], "Covariance matrix": [[244, "covariance-matrix"], [267, "covariance-matrix"]], "Included individuals": [[244, "included-individuals"]], "NullModelDatabase": [[230, "nullmodeldatabase"]], "Citation": [[247, "citation"]], "How to cite Pharmpy and pharmr": [[247, "how-to-cite-pharmpy-and-pharmr"]], "COVsearch": [[253, "covsearch"]], "Effects": [[253, "effects"]], "Wildcards": [[253, "wildcards"]], "Algorithm": [[253, "algorithm"], [263, "algorithm"]], "ModelDatabase": [[229, "modeldatabase"]], "Task": [[232, "task"]], "Configuration": [[250, "configuration"]], "The configuration file": [[250, "the-configuration-file"]], "Environment variables": [[250, "environment-variables"]], "Documentation for developers": [[257, "documentation-for-developers"]], "pharmpy.modeling Package": [[241, "module-pharmpy.modeling"]], "Functions": [[241, "functions"], [242, "functions"], [243, "functions"]], "Design principles": [[256, "design-principles"]], "Levels of the architecture": [[256, "levels-of-the-architecture"]], "The Heart, The Model Class": [[256, "the-heart-the-model-class"]], "pharmpy.Parameters": [[256, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[256, "pharmpy-randomvariables"]], "pharmpy.Statements": [[256, "pharmpy-statements"]], "The pharmpy.modeling module": [[256, "the-pharmpy-modeling-module"]], "Docstrings": [[256, "docstrings"]], "Dependencies": [[256, "dependencies"]], "The Pharmpy command line interface": [[248, "the-pharmpy-command-line-interface"]], "pharmpy": [[248, "pharmpy"]], "pharmpy data": [[248, "pharmpy-data"]], "pharmpy data append": [[248, "pharmpy-data-append"]], "pharmpy data deidentify": [[248, "pharmpy-data-deidentify"]], "pharmpy data filter": [[248, "pharmpy-data-filter"]], "pharmpy data print": [[248, "pharmpy-data-print"]], "pharmpy data resample": [[248, "pharmpy-data-resample"]], "pharmpy data write": [[248, "pharmpy-data-write"]], "pharmpy info": [[248, "pharmpy-info"]], "pharmpy model": [[248, "pharmpy-model"]], "pharmpy model absorption_rate": [[248, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[248, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[248, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[248, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[248, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[248, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[248, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[248, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[248, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[248, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[248, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[248, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[248, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[248, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[248, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[248, "pharmpy-model-sample"]], "pharmpy model tdist": [[248, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[248, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[248, "pharmpy-model-update-inits"]], "pharmpy results": [[248, "pharmpy-results"]], "pharmpy results bootstrap": [[248, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[248, "pharmpy-results-cdd"]], "pharmpy results frem": [[248, "pharmpy-results-frem"]], "pharmpy results linearize": [[248, "pharmpy-results-linearize"]], "pharmpy results ofv": [[248, "pharmpy-results-ofv"]], "pharmpy results print": [[248, "pharmpy-results-print"]], "pharmpy results qa": [[248, "pharmpy-results-qa"]], "pharmpy results report": [[248, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[248, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[248, "pharmpy-results-scm"]], "pharmpy results simeval": [[248, "pharmpy-results-simeval"]], "pharmpy results summary": [[248, "pharmpy-results-summary"]], "pharmpy run": [[248, "pharmpy-run"]], "pharmpy run allometry": [[248, "pharmpy-run-allometry"]], "pharmpy run amd": [[248, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[248, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[248, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[248, "pharmpy-run-estmethod"]], "pharmpy run execute": [[248, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[248, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[248, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[248, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[248, "pharmpy-run-ruvsearch"]], "execute_workflow": [[238, "execute-workflow"]], "Datasets in Pharmpy": [[255, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[255, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[255, "update-the-dataset-of-a-model"]], "Subjects": [[255, "subjects"]], "Observations": [[255, "observations"]], "Dosing": [[255, "dosing"]], "Extract dosing information": [[255, "extract-dosing-information"]], "Dose grouping": [[255, "dose-grouping"]], "Time after dose": [[255, "time-after-dose"]], "Concentration parameters": [[255, "concentration-parameters"]], "type": [[255, "type"]], "scale": [[255, "scale"]], "continuous": [[255, "continuous"]], "categories": [[255, "categories"]], "unit": [[255, "unit"]], "drop": [[255, "drop"]], "datatype": [[255, "datatype"]], "descriptor": [[255, "descriptor"]], "datainfo file": [[255, "datainfo-file"]], "Pharmpy Community Code of Conduct": [[249, "pharmpy-community-code-of-conduct"]], "pharmpy.tools Package": [[242, "module-pharmpy.tools"]], "summarize_individuals_count_table": [[222, "summarize-individuals-count-table"]], "LocalDirectoryDatabase": [[225, "localdirectorydatabase"]], "Contribute": [[251, "contribute"]], "Set up the development environment": [[251, "set-up-the-development-environment"]], "Supported platforms": [[251, "supported-platforms"]], "Install Python": [[251, "install-python"]], "Install git": [[251, "install-git"]], "Fork and clone the code repository": [[251, "fork-and-clone-the-code-repository"]], "Install tox": [[251, "install-tox"]], "Install graphviz used for building the documentation": [[251, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[251, "using-the-development-environment"]], "Running tox": [[251, "running-tox"]], "Check code formatting": [[251, "check-code-formatting"]], "Run the unit tests": [[251, "run-the-unit-tests"]], "Build and test the documentation": [[251, "build-and-test-the-documentation"]], "Run the integration tests": [[251, "run-the-integration-tests"]], "Build a usable virtual environment": [[251, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[251, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[251, "releasing-pharmpy-and-documentation"]], "Version": [[251, "version"]], "Information for developers": [[251, "information-for-developers"]], "Changelog": [[246, "changelog"]], "0.88.0 (2022-12-21)": [[246, "id1"]], "New features": [[246, "new-features"], [246, "id12"], [246, "id22"], [246, "id29"], [246, "id40"], [246, "id44"], [246, "id51"], [246, "id54"], [246, "id58"], [246, "id64"], [246, "id68"], [246, "id74"], [246, "id79"], [246, "id83"], [246, "id86"], [246, "id94"], [246, "id98"], [246, "id104"], [246, "id113"], [246, "id117"], [246, "id120"], [246, "id124"], [246, "id126"], [246, "id131"], [246, "id134"], [246, "id138"]], "Changes": [[246, "changes"], [246, "id3"], [246, "id5"], [246, "id7"], [246, "id10"], [246, "id13"], [246, "id15"], [246, "id18"], [246, "id23"], [246, "id26"], [246, "id30"], [246, "id33"], [246, "id36"], [246, "id41"], [246, "id45"], [246, "id48"], [246, "id52"], [246, "id55"], [246, "id59"], [246, "id65"], [246, "id69"], [246, "id80"], [246, "id84"], [246, "id89"], [246, "id95"], [246, "id105"], [246, "id110"], [246, "id114"], [246, "id121"], [246, "id127"], [246, "id132"], [246, "id135"], [246, "id139"]], "0.87.0 (2022-12-14)": [[246, "id2"]], "0.86.0 (2022-11-30)": [[246, "id4"]], "Bugfixes": [[246, "bugfixes"], [246, "id8"], [246, "id34"], [246, "id38"], [246, "id42"], [246, "id46"], [246, "id49"], [246, "id56"], [246, "id60"], [246, "id62"], [246, "id66"], [246, "id70"], [246, "id72"], [246, "id75"], [246, "id77"], [246, "id81"], [246, "id87"], [246, "id90"], [246, "id92"], [246, "id96"], [246, "id100"], [246, "id102"], [246, "id106"], [246, "id108"], [246, "id111"], [246, "id115"], [246, "id118"], [246, "id122"], [246, "id129"], [246, "id136"], [246, "id140"]], "0.85.0 (2022-11-18)": [[246, "id6"]], "0.84.1 (2022-11-13)": [[246, "id9"]], "Bug fixes": [[246, "bug-fixes"], [246, "id16"], [246, "id20"], [246, "id24"], [246, "id27"], [246, "id31"]], "0.84.0 (2022-11-09)": [[246, "id11"]], "0.83.0 (2022-11-01)": [[246, "id14"]], "0.82.0 (2022-10-24)": [[246, "id17"]], "0.81.1 (2022-10-24)": [[246, "id19"]], "0.81.0 (2022-10-21)": [[246, "id21"]], "0.80.0 (2022-10-19)": [[246, "id25"]], "0.79.0 (2022-10-16)": [[246, "id28"]], "0.78.0 (2022-09-20)": [[246, "id32"]], "0.77.0 (2022-09-08)": [[246, "id35"]], "0.76.1 (2022-09-06)": [[246, "id37"]], "0.76.0 (2022-09-05)": [[246, "id39"]], "0.75.0 (2022-08-10)": [[246, "id43"]], "0.74.0 (2022-07-18)": [[246, "id47"]], "0.73.0 (2022-06-21)": [[246, "id50"]], "0.72.0 (2022-06-08)": [[246, "id53"]], "0.71.0 (2022-05-24)": [[246, "id57"]], "0.70.1 (2022-05-17)": [[246, "id61"]], "0.70.0 (2022-05-13)": [[246, "id63"]], "0.69.0 (2022-04-29)": [[246, "id67"]], "0.68.0 (2022-04-27)": [[246, "id71"]], "0.67.0 (2022-04-25)": [[246, "id73"]], "0.66.0 (2022-04-20)": [[246, "id76"]], "0.65.0 (2022-04-14)": [[246, "id78"]], "0.64.0 (2022-04-12)": [[246, "id82"]], "0.63.0 (2022-04-07)": [[246, "id85"]], "0.62.0 (2022-04-04)": [[246, "id88"]], "New feature": [[246, "new-feature"]], "0.61.1 (2022-03-31)": [[246, "id91"]], "0.61.0 (2022-03-29)": [[246, "id93"]], "0.59.0 (2022-03-25)": [[246, "id97"]], "0.58.4 (2022-03-24)": [[246, "id99"]], "0.58.1 (2022-03-22)": [[246, "id101"]], "0.58.0 (2022-03-22)": [[246, "id103"]], "0.57.0 (2022-03-21)": [[246, "id107"]], "0.56.0 (2022-03-17)": [[246, "id109"]], "0.55.0 (2022-03-16)": [[246, "id112"]], "0.54.0 (2022-03-08)": [[246, "id116"]], "0.53.0 (2022-03-04)": [[246, "id119"]], "0.52.0 (2022-02-25)": [[246, "id123"]], "0.51.0 (2022-02-24)": [[246, "id125"]], "0.50.1 (2022-02-16)": [[246, "id128"]], "0.50.0 (2022-02-16)": [[246, "id130"]], "0.49.0 (2022-02-10)": [[246, "id133"]], "0.48.0 (2022-02-04)": [[246, "id137"]], "0.47.0 (2022-01-28)": [[246, "id141"]], "0.46.0 (2022-01-27)": [[246, "id142"]], "0.45.0 (2022-01-21)": [[246, "id143"]], "0.44.0 (2022-01-20)": [[246, "id144"]], "0.43.0 (2022-01-12)": [[246, "id145"]], "0.42.0 (2022-01-11)": [[246, "id146"]], "0.41.0 (2021-12-21)": [[246, "id147"]], "0.40.0 (2021-12-16)": [[246, "id148"]], "0.39.0 (2021-12-15)": [[246, "id149"]], "0.38.0 (2021-12-08)": [[246, "id150"]], "0.37.1 (2021-11-26)": [[246, "id151"]], "0.37.0 (2021-11-24)": [[246, "id152"]], "0.36.0 (2021-11-11)": [[246, "id153"]], "0.35.0 (2021-11-02)": [[246, "id154"]], "0.34.3 (2021-10-28)": [[246, "id155"]], "0.34.2 (2021-10-26)": [[246, "id156"]], "0.34.1 (2021-10-20)": [[246, "id157"]], "0.34.0 (2021-10-14)": [[246, "id158"]], "0.33.0 (2021-10-11)": [[246, "id159"]], "0.32.0 (2021-09-28)": [[246, "id160"]], "0.31.0 (2021-09-21)": [[246, "id161"]], "0.30.0 (2021-09-06)": [[246, "id162"]], "0.29.0 (2021-08-25)": [[246, "id163"]], "0.28.0 (2021-08-24)": [[246, "id164"]], "0.27.0 (2021-08-09)": [[246, "id165"]], "0.26.1 (2021-08-04)": [[246, "id166"]], "0.26.0 (2021-07-13)": [[246, "id167"]], "0.25.1 (2021-07-08)": [[246, "id168"]], "0.25.0 (2021-06-24)": [[246, "id169"]], "0.24.0 (2021-05-25)": [[246, "id170"]], "0.23.4 (2021-05-03)": [[246, "id171"]], "0.23.3 (2021-04-29)": [[246, "id172"]], "0.23.2 (2021-04-28)": [[246, "id173"]], "0.23.1 (2021-04-28)": [[246, "id174"]], "0.23.0 (2021-04-28)": [[246, "id175"]], "0.22.0 (2021-03-29)": [[246, "id176"]], "0.21.0 (2021-03-22)": [[246, "id177"]], "0.20.1 (2021-03-11)": [[246, "id178"]], "0.20.0 (2021-03-11)": [[246, "id179"]], "0.19.0 (2021-03-02)": [[246, "id180"]], "0.18.0 (2021-03-01)": [[246, "id181"]], "0.17.0 (2021-02-15)": [[246, "id182"]], "0.16.0 (2021-02-08)": [[246, "id183"]], "0.15.0 (2021-02-01)": [[246, "id184"]], "0.14.0 (2021-01-25)": [[246, "id185"]], "0.13.0 (2021-01-18)": [[246, "id186"]], "0.12.0 (2020-12-18)": [[246, "id187"]], "0.11.0 (2020-11-20)": [[246, "id188"]], "0.10.0 (2020-11-16)": [[246, "id189"]], "0.9.0 (2020-10-26)": [[246, "id190"]], "0.8.0 (2020-10-08)": [[246, "id191"]], "0.7.0 (2020-09-28)": [[246, "id192"]], "0.6.0 (2020-09-18)": [[246, "id193"]], "0.5.0 (2020-09-04)": [[246, "id194"]], "0.4.0 (2020-07-24)": [[246, "id195"]], "0.3.0 (2020-06-16)": [[246, "id196"]], "0.2.0 (2020-03-27)": [[246, "id197"]], "0.1.0 (2018-07-22)": [[246, "id198"]], "Log": [[228, "log"]], "split_common_options": [[239, "split-common-options"]], "write_results": [[224, "write-results"]], "LocalDirectoryToolDatabase": [[226, "localdirectorytooldatabase"]], "pharmpy.workflows Package": [[243, "module-pharmpy.workflows"]], "Options for the data module": [[243, "id1"]], "Case deletion diagnostics": [[245, "case-deletion-diagnostics"]], "The cdd results": [[245, "the-cdd-results"]], "Case results": [[245, "case-results"]], "Cook score": [[245, "cook-score"]], "Jackknife cookscore": [[245, "jackknife-cookscore"]], "Covariance ratio": [[245, "covariance-ratio"]], "Delta OFV": [[245, "delta-ofv"]], "Skipped individuals": [[245, "skipped-individuals"]], "Case column": [[245, "case-column"]], "References": [[245, "references"], [259, "references"]], "summarize_modelfit_results": [[223, "summarize-modelfit-results"]], "call_workflow": [[235, "call-workflow"]], "default_tool_database": [[237, "default-tool-database"]], "read_modelfit_results": [[206, "read-modelfit-results"]], "run_modelfit": [[216, "run-modelfit"]], "predict_outliers": [[203, "predict-outliers"]], "run_modelsearch": [[217, "run-modelsearch"]], "transform_etas_tdist": [[188, "transform-etas-tdist"]], "rank_models": [[205, "rank-models"]], "read_results": [[207, "read-results"]], "update_inits": [[195, "update-inits"]], "undrop_columns": [[191, "undrop-columns"]], "unfix_parameters_to": [[193, "unfix-parameters-to"]], "fit": [[200, "fit"]], "retrieve_final_model": [[208, "retrieve-final-model"]], "predict_influential_outliers": [[202, "predict-influential-outliers"]], "transform_etas_boxcox": [[186, "transform-etas-boxcox"]], "run_iovsearch": [[215, "run-iovsearch"]], "transform_etas_john_draper": [[187, "transform-etas-john-draper"]], "write_csv": [[197, "write-csv"]], "unfix_parameters": [[192, "unfix-parameters"]], "run_amd": [[211, "run-amd"]], "use_thetas_for_error_stdev": [[196, "use-thetas-for-error-stdev"]], "summarize_errors": [[220, "summarize-errors"]], "predict_influential_individuals": [[201, "predict-influential-individuals"]], "run_estmethod": [[213, "run-estmethod"]], "retrieve_models": [[209, "retrieve-models"]], "summarize_individuals": [[221, "summarize-individuals"]], "run_ruvsearch": [[218, "run-ruvsearch"]], "unconstrain_parameters": [[190, "unconstrain-parameters"]], "create_results": [[199, "create-results"]], "print_fit_summary": [[204, "print-fit-summary"]], "run_tool": [[219, "run-tool"]], "split_joint_distribution": [[185, "split-joint-distribution"]], "run_allometry": [[210, "run-allometry"]], "run_iivsearch": [[214, "run-iivsearch"]], "write_model": [[198, "write-model"]], "translate_nmtran_time": [[189, "translate-nmtran-time"]], "update_initial_individual_estimates": [[194, "update-initial-individual-estimates"]], "run_covsearch": [[212, "run-covsearch"]], "set_first_order_elimination": [[165, "set-first-order-elimination"]], "set_bolus_absorption": [[158, "set-bolus-absorption"]], "remove_lag_time": [[148, "remove-lag-time"]], "set_weighted_error_model": [[180, "set-weighted-error-model"]], "set_time_varying_error_model": [[177, "set-time-varying-error-model"]], "solve_ode_system": [[184, "solve-ode-system"]], "remove_peripheral_compartment": [[150, "remove-peripheral-compartment"]], "set_proportional_error_model": [[175, "set-proportional-error-model"]], "set_transit_compartments": [[178, "set-transit-compartments"]], "set_initial_estimates": [[167, "set-initial-estimates"]], "set_covariates": [[160, "set-covariates"]], "simplify_expression": [[183, "simplify-expression"]], "sample_parameters_from_covariance_matrix": [[155, "sample-parameters-from-covariance-matrix"]], "set_first_order_absorption": [[164, "set-first-order-absorption"]], "sample_individual_estimates": [[154, "sample-individual-estimates"]], "set_ode_solver": [[172, "set-ode-solver"]], "set_zero_order_elimination": [[182, "set-zero-order-elimination"]], "set_estimation_step": [[162, "set-estimation-step"]], "set_additive_error_model": [[157, "set-additive-error-model"]], "set_michaelis_menten_elimination": [[169, "set-michaelis-menten-elimination"]], "set_mixed_mm_fo_elimination": [[170, "set-mixed-mm-fo-elimination"]], "set_upper_bounds": [[179, "set-upper-bounds"]], "remove_loq_data": [[149, "remove-loq-data"]], "set_name": [[171, "set-name"]], "set_power_on_ruv": [[174, "set-power-on-ruv"]], "remove_unused_parameters_and_rvs": [[151, "remove-unused-parameters-and-rvs"]], "sample_parameters_uniformly": [[156, "sample-parameters-uniformly"]], "resample_data": [[153, "resample-data"]], "set_lower_bounds": [[168, "set-lower-bounds"]], "set_iiv_on_ruv": [[166, "set-iiv-on-ruv"]], "set_zero_order_absorption": [[181, "set-zero-order-absorption"]], "rename_symbols": [[152, "rename-symbols"]], "set_combined_error_model": [[159, "set-combined-error-model"]], "set_seq_zo_fo_absorption": [[176, "set-seq-zo-fo-absorption"]], "set_peripheral_compartments": [[173, "set-peripheral-compartments"]], "set_evaluation_step": [[163, "set-evaluation-step"]], "set_dtbs_error_model": [[161, "set-dtbs-error-model"]], "read_model": [[139, "read-model"]], "has_first_order_elimination": [[122, "has-first-order-elimination"]], "remove_estimation_step": [[145, "remove-estimation-step"]], "list_time_varying_covariates": [[129, "list-time-varying-covariates"]], "get_rv_parameters": [[114, "get-rv-parameters"]], "get_omegas": [[111, "get-omegas"]], "mu_reference_model": [[132, "mu-reference-model"]], "read_model_from_string": [[141, "read-model-from-string"]], "remove_covariate_effect": [[143, "remove-covariate-effect"]], "remove_error_model": [[144, "remove-error-model"]], "make_declarative": [[131, "make-declarative"]], "get_sigmas": [[115, "get-sigmas"]], "get_pk_parameters": [[112, "get-pk-parameters"]], "get_unit_of": [[117, "get-unit-of"]], "get_thetas": [[116, "get-thetas"]], "has_covariate_effect": [[121, "has-covariate-effect"]], "read_dataset_from_datainfo": [[138, "read-dataset-from-datainfo"]], "has_additive_error_model": [[119, "has-additive-error-model"]], "has_mixed_mm_fo_elimination": [[124, "has-mixed-mm-fo-elimination"]], "has_combined_error_model": [[120, "has-combined-error-model"]], "remove_iov": [[147, "remove-iov"]], "has_zero_order_elimination": [[128, "has-zero-order-elimination"]], "plot_iofv_vs_iofv": [[135, "plot-iofv-vs-iofv"]], "get_population_prediction_expression": [[113, "get-population-prediction-expression"]], "has_random_effect": [[126, "has-random-effect"]], "remove_covariance_step": [[142, "remove-covariance-step"]], "read_model_from_database": [[140, "read-model-from-database"]], "print_model_symbols": [[137, "print-model-symbols"]], "plot_individual_predictions": [[134, "plot-individual-predictions"]], "has_michaelis_menten_elimination": [[123, "has-michaelis-menten-elimination"]], "remove_iiv": [[146, "remove-iiv"]], "has_proportional_error_model": [[125, "has-proportional-error-model"]], "greekify_model": [[118, "greekify-model"]], "load_example_model": [[130, "load-example-model"]], "print_model_code": [[136, "print-model-code"]], "has_zero_order_absorption": [[127, "has-zero-order-absorption"]], "omit_data": [[133, "omit-data"]], "evaluate_epsilon_gradient": [[78, "evaluate-epsilon-gradient"]], "evaluate_weighted_residuals": [[83, "evaluate-weighted-residuals"]], "get_number_of_individuals": [[106, "get-number-of-individuals"]], "generate_model_code": [[90, "generate-model-code"]], "get_observation_expression": [[109, "get-observation-expression"]], "fix_or_unfix_parameters": [[87, "fix-or-unfix-parameters"]], "get_lag_times": [[103, "get-lag-times"]], "get_evid": [[99, "get-evid"]], "get_baselines": [[91, "get-baselines"]], "get_individual_parameters": [[101, "get-individual-parameters"]], "get_concentration_parameters_from_data": [[94, "get-concentration-parameters-from-data"]], "get_ids": [[100, "get-ids"]], "get_model_covariates": [[105, "get-model-covariates"]], "drop_dropped_columns": [[77, "drop-dropped-columns"]], "fix_parameters_to": [[89, "fix-parameters-to"]], "get_cmt": [[93, "get-cmt"]], "get_number_of_observations": [[107, "get-number-of-observations"]], "evaluate_expression": [[80, "evaluate-expression"]], "fix_parameters": [[88, "fix-parameters"]], "get_mdv": [[104, "get-mdv"]], "evaluate_individual_prediction": [[81, "evaluate-individual-prediction"]], "drop_columns": [[76, "drop-columns"]], "get_bioavailability": [[92, "get-bioavailability"]], "get_doseid": [[97, "get-doseid"]], "get_observations": [[110, "get-observations"]], "evaluate_eta_gradient": [[79, "evaluate-eta-gradient"]], "evaluate_population_prediction": [[82, "evaluate-population-prediction"]], "get_covariate_baselines": [[96, "get-covariate-baselines"]], "get_number_of_observations_per_individual": [[108, "get-number-of-observations-per-individual"]], "find_volume_parameters": [[86, "find-volume-parameters"]], "get_individual_prediction_expression": [[102, "get-individual-prediction-expression"]], "deidentify_data": [[75, "deidentify-data"]], "create_symbol": [[74, "create-symbol"]], "get_config_path": [[95, "get-config-path"]], "get_doses": [[98, "get-doses"]], "expand_additional_doses": [[84, "expand-additional-doses"]], "find_clearance_parameters": [[85, "find-clearance-parameters"]], "Project suggestions": [[273, "project-suggestions"]], "Resmod": [[274, "resmod"]], "The resmod results": [[274, "the-resmod-results"]], "Resmod models": [[274, "resmod-models"]], "Brute force search for number of IIVs": [[261, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[261, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[261, "full-brute-force-search"]], "Adding IIV to the start model": [[261, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[261, "comparing-and-ranking-candidates"], [263, "comparing-and-ranking-candidates"], [269, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[261, "the-iivsearch-results"]], "PsN with Pharmpy": [[275, "psn-with-pharmpy"]], "Tools connected to PsN": [[275, "tools-connected-to-psn"]], "QA": [[276, "qa"]], "The qa results": [[276, "the-qa-results"]], "Overview": [[276, "overview"]], "Structural bias": [[276, "structural-bias"]], "Fullblock": [[276, "fullblock"]], "Boxcox": [[276, "boxcox"], [268, "boxcox"]], "Tdist": [[276, "tdist"]], "Residual error": [[276, "residual-error"]], "Covariate effects": [[276, "covariate-effects"], [259, "covariate-effects"]], "Plugins": [[272, "plugins"]], "Overview of a plugin": [[272, "overview-of-a-plugin"]], "Tools": [[280, "tools"]], "Tools in Pharmpy": [[280, "tools-in-pharmpy"]], "Common options": [[280, "common-options"]], "Common features": [[280, "common-features"]], "Tool database": [[280, "tool-database"]], "Running directory": [[280, "running-directory"]], "Metadata": [[280, "metadata"]], "Datasets": [[280, "datasets"]], "Model feature language (MFL)": [[280, "model-feature-language-mfl"]], "Option types": [[280, "option-types"]], "Model features": [[280, "model-features"]], "Symbols": [[280, "symbols"]], "Describe intervals": [[280, "describe-intervals"]], "Redundant descriptions": [[280, "redundant-descriptions"]], "Examples": [[280, "examples"]], "ruvsearch": [[277, "ruvsearch"]], "Models": [[277, "models"]], "The RUVsearch results": [[277, "the-ruvsearch-results"]], "Using the NONMEM plugin": [[270, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[270, "names-of-parameters-and-random-variables"]], "Reading in a model": [[270, "reading-in-a-model"], [266, "reading-in-a-model"]], "New parameters and random variables": [[270, "new-parameters-and-random-variables"]], "Writing a model": [[270, "writing-a-model"], [266, "writing-a-model"]], "The Pharmpy model": [[266, "the-pharmpy-model"]], "Model name": [[266, "model-name"]], "Getting the model code": [[266, "getting-the-model-code"], [268, "getting-the-model-code"]], "Model parameters": [[266, "model-parameters"]], "Parameter sets": [[266, "parameter-sets"]], "Random variables": [[266, "random-variables"]], "Model statements": [[266, "model-statements"]], "Modelfit results": [[266, "modelfit-results"], [267, "modelfit-results"]], "Updating initial estimates": [[266, "updating-initial-estimates"]], "scm": [[278, "scm"]], "The scm results": [[278, "the-scm-results"]], "Steps": [[278, "steps"]], "OFV Summary": [[278, "ofv-summary"]], "Candidate Summary": [[278, "candidate-summary"]], "Linearize": [[265, "linearize"]], "The linearize results": [[265, "the-linearize-results"]], "OFVs": [[265, "ofvs"]], "Individual OFVs": [[265, "individual-ofvs"]], "User guide": [[281, "user-guide"]], "FREM": [[259, "frem"]], "The FREM postprocessing and results": [[259, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[259, "parameter-covariate-coefficients"]], "Individual covariate effects": [[259, "individual-covariate-effects"]], "Unexplained variability": [[259, "unexplained-variability"]], "Parameter estimates": [[259, "parameter-estimates"], [267, "parameter-estimates"]], "OFV": [[259, "ofv"]], "Estimated covariate values": [[259, "estimated-covariate-values"]], "Distribution of new IOVs": [[263, "distribution-of-new-iovs"]], "License": [[264, "license"]], "Logo": [[264, "logo"]], "Copyright": [[264, "copyright"]], "BSD 2-clause License": [[264, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[264, "gnu-lesser-general-public-license"]], "Getting started": [[260, "getting-started"]], "Installation": [[260, "installation"]], "A first example": [[260, "a-first-example"]], "Plots in Pharmpy": [[271, "plots-in-pharmpy"]], "Setting themes": [[271, "setting-themes"]], "Changing axis of plots": [[271, "changing-axis-of-plots"]], "Welcome to Pharmpy": [[262, "welcome-to-pharmpy"]], "Reading modelfit results": [[267, "reading-modelfit-results"]], "Final OFV": [[267, "final-ofv"]], "Standard errors of parameter estimates": [[267, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[267, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[267, "correlation-matrix"]], "Information Matrix": [[267, "information-matrix"]], "Indiviudal OFV": [[267, "indiviudal-ofv"]], "Predictions": [[267, "predictions"]], "Residuals": [[267, "residuals"]], "Individual estimates": [[267, "individual-estimates"]], "Modeling": [[268, "modeling"]], "Basic modeling": [[268, "basic-modeling"]], "Reading, writing and updating source models": [[268, "reading-writing-and-updating-source-models"]], "Read model from file": [[268, "read-model-from-file"]], "Read model from string": [[268, "read-model-from-string"]], "Write model to file": [[268, "write-model-to-file"]], "Fix and unfix parameters": [[268, "fix-and-unfix-parameters"]], "Add parameter": [[268, "add-parameter"]], "PK models and ODE systems": [[268, "pk-models-and-ode-systems"]], "Absorption rate": [[268, "absorption-rate"]], "Bolus absorption": [[268, "bolus-absorption"]], "Zero order": [[268, "zero-order"]], "First order": [[268, "first-order"]], "Sequential zero-order then first-order": [[268, "sequential-zero-order-then-first-order"]], "Absorption delay": [[268, "absorption-delay"]], "Transit compartments": [[268, "transit-compartments"]], "Lag time": [[268, "lag-time"]], "Elimination rate": [[268, "elimination-rate"]], "First-order elimination": [[268, "first-order-elimination"]], "Zero-order elimination": [[268, "zero-order-elimination"]], "Michaelis-Menten elimination": [[268, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[268, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[268, "add-peripheral-compartment"]], "Remove peripheral compartment": [[268, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[268, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[268, "adding-covariate-effects"]], "Transformation of etas": [[268, "transformation-of-etas"]], "Approximate t-distribution": [[268, "approximate-t-distribution"]], "John Draper": [[268, "john-draper"]], "Adding new etas": [[268, "adding-new-etas"]], "Adding IIVs": [[268, "adding-iivs"]], "Adding IOVs": [[268, "adding-iovs"]], "Removing etas": [[268, "removing-etas"]], "Remove IIVs": [[268, "remove-iivs"]], "Remove IOVs": [[268, "remove-iovs"]], "The error model": [[268, "the-error-model"]], "Removing the error model": [[268, "removing-the-error-model"]], "Setting an additive error model": [[268, "setting-an-additive-error-model"]], "Setting a proportional error model": [[268, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[268, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[268, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[268, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[268, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[268, "weighted-error-model"]], "dTBS error model": [[268, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[268, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[268, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[268, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[268, "fitting-a-model"]], "Getting results from a PsN run": [[268, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[268, "eta-shrinkage"]], "Individual parameter calculations": [[268, "individual-parameter-calculations"]], "Simeval": [[279, "simeval"]], "The simeval results": [[279, "the-simeval-results"]], "Sampled Individual OFVs": [[279, "sampled-individual-ofvs"]], "Individual OFV summary": [[279, "individual-ofv-summary"]], "Individual prediction plot": [[279, "individual-prediction-plot"]], "Modelsearch": [[269, "modelsearch"]], "The search space": [[269, "the-search-space"]], "Common behaviours between algorithms": [[269, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[269, "feature-combination-exclusions"]], "Exhaustive search": [[269, "exhaustive-search"]], "Exhaustive stepwise search": [[269, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[269, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[269, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[269, "the-modelsearch-results"]], "Pharmpy in R": [[282, "pharmpy-in-r"]], "Installing pharmr": [[282, "installing-pharmr"]], "Updating": [[282, "updating"]], "Trouble shooting": [[282, "trouble-shooting"]], "Wrong Python version": [[282, "wrong-python-version"]], "Error importing Pharmpy": [[282, "error-importing-pharmpy"]], "Using pharmr": [[282, "using-pharmr"]], "Gotchas": [[282, "gotchas"]], "The model object": [[282, "the-model-object"]], "List indices": [[282, "list-indices"]], "Dataframes with multiindex": [[282, "dataframes-with-multiindex"]], "Floats and integers": [[282, "floats-and-integers"]], "Single element vectors": [[282, "single-element-vectors"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "output_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.output_compartment"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_compartmental_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_explicit_system"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "explicitodesystem (class in pharmpy.model)": [[16, "pharmpy.model.ExplicitODESystem"]], "amounts (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.amounts"]], "compartment_names (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.compartment_names"]], "free_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.free_symbols"]], "ics (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.ics"]], "odes (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.odes"]], "rhs_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.rhs_symbols"]], "subs() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.subs"]], "to_compartmental_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_explicit_system"]], "infusion (class in pharmpy.model)": [[17, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[17, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.free_symbols"]], "rate (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[17, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[17, "pharmpy.model.Infusion.subs"]], "jointnormaldistribution (class in pharmpy.model)": [[18, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[18, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.subs"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[19, "pharmpy.model.Model"]], "copy() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.copy"]], "create_model() (pharmpy.model.model static method)": [[19, "pharmpy.model.Model.create_model"]], "datainfo (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dataset"]], "dependent_variable (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dependent_variable"]], "description (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.initial_individual_estimates"]], "model_code (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parent_model"]], "random_variables (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.random_variables"]], "statements (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.statements"]], "update_datainfo() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.update_datainfo"]], "value_type (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.value_type"]], "modelerror": [[20, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[21, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[22, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[23, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[23, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.subs"]], "variance (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[24, "pharmpy.model.ODESystem"]], "to_compartmental_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_explicit_system"]], "parameter (class in pharmpy.model)": [[25, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[25, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.fix"]], "init (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[25, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.symbol"]], "upper (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[26, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[26, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fixed"]], "inits (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.to_dataframe"]], "upper (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[27, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[27, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.free_symbols"]], "get_covariance() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.replace"]], "sample() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.subs"]], "unjoin() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[28, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[28, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[29, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[29, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[30, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.free_symbols"]], "full_expression() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.subs"]], "to_compartmental_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_explicit_system"]], "variabilityhierarchy (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[31, "pharmpy.model.VariabilityHierarchy.create"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[31, "pharmpy.model.VariabilityHierarchy.replace"]], "variabilitylevel (class in pharmpy.model)": [[32, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[32, "pharmpy.model.VariabilityLevel.create"]], "group (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[32, "pharmpy.model.VariabilityLevel.replace"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_inf() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_inf"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_inf() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_inf"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_inf_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_inf_from_corrse"]], "calculate_inf_from_cov() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_inf_from_cov"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_inf() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_inf"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.convert_model"]], "copy_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.copy_model"]], "create_joint_distribution() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_joint_distribution"]], "create_report() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_report"]], "create_rng() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.deidentify_data"]], "drop_columns() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.fix_parameters_to"]], "generate_model_code() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.generate_model_code"]], "get_baselines() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_doses"]], "get_evid() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_individual_prediction_expression"]], "get_lag_times() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_mdv"]], "get_model_covariates() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_unit_of"]], "greekify_model() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.has_first_order_elimination"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_random_effect"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.has_zero_order_elimination"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.plot_iofv_vs_iofv"]], "print_model_code() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.read_model"]], "read_model_from_database() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.read_model_from_database"]], "read_model_from_string() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.set_dtbs_error_model"]], "set_estimation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_estimates() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_time_varying_error_model"]], "set_transit_compartments() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_zero_order_elimination"]], "simplify_expression() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.split_joint_distribution"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.write_model"]], "create_results() (in module pharmpy.tools)": [[199, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[200, "pharmpy.tools.fit"]], "predict_influential_individuals() (in module pharmpy.tools)": [[201, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[202, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[203, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[204, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[205, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[206, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[207, "pharmpy.tools.read_results"]], "retrieve_final_model() (in module pharmpy.tools)": [[208, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[209, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[210, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[211, "pharmpy.tools.run_amd"]], "run_covsearch() (in module pharmpy.tools)": [[212, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[213, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[214, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[215, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[216, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[217, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[218, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[219, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[220, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[221, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[222, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[223, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[224, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[225, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[225, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[226, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[227, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[227, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[227, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[227, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[228, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[228, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[228, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[228, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[228, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[228, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[228, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[229, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[229, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[230, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[230, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[231, "pharmpy.workflows.NullToolDatabase"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[231, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[231, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[232, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[233, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[233, "pharmpy.workflows.ToolDatabase.model_database"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[233, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[233, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[234, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[235, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[236, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[237, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[238, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[239, "pharmpy.workflows.split_common_options"]], "module": [[240, "module-pharmpy.model"], [241, "module-pharmpy.modeling"], [242, "module-pharmpy.tools"], [243, "module-pharmpy.workflows"]], "pharmpy.model": [[240, "module-pharmpy.model"]], "pharmpy.modeling": [[241, "module-pharmpy.modeling"]], "pharmpy.tools": [[242, "module-pharmpy.tools"]], "pharmpy.workflows": [[243, "module-pharmpy.workflows"]], "--algorithm": [[248, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[248, "cmdoption-pharmpy-run-allometry-allometric_variable"], [248, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--categorical": [[248, "cmdoption-pharmpy-run-amd-categorical"]], "--cl_init": [[248, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[248, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[248, "cmdoption-pharmpy-data-print-columns"]], "--continuous": [[248, "cmdoption-pharmpy-run-amd-continuous"]], "--cutoff": [[248, "cmdoption-pharmpy-run-iivsearch-cutoff"], [248, "cmdoption-pharmpy-run-iovsearch-cutoff"], [248, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[248, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[248, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[248, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[248, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [248, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[248, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[248, "cmdoption-pharmpy-model-add_iov-eta_names"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[248, "cmdoption-pharmpy-model-add_iov-etas"], [248, "cmdoption-pharmpy-model-boxcox-etas"], [248, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [248, "cmdoption-pharmpy-model-john_draper-etas"], [248, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[248, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[248, "cmdoption-pharmpy-data-append-f"], [248, "cmdoption-pharmpy-data-deidentify-f"], [248, "cmdoption-pharmpy-data-filter-f"], [248, "cmdoption-pharmpy-data-write-f"], [248, "cmdoption-pharmpy-model-absorption_rate-f"], [248, "cmdoption-pharmpy-model-add_cov_effect-f"], [248, "cmdoption-pharmpy-model-add_iiv-f"], [248, "cmdoption-pharmpy-model-add_iov-f"], [248, "cmdoption-pharmpy-model-boxcox-f"], [248, "cmdoption-pharmpy-model-create_joint_distribution-f"], [248, "cmdoption-pharmpy-model-elimination_rate-f"], [248, "cmdoption-pharmpy-model-error-f"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [248, "cmdoption-pharmpy-model-john_draper-f"], [248, "cmdoption-pharmpy-model-peripheral_compartments-f"], [248, "cmdoption-pharmpy-model-power_on_ruv-f"], [248, "cmdoption-pharmpy-model-remove_iiv-f"], [248, "cmdoption-pharmpy-model-remove_iov-f"], [248, "cmdoption-pharmpy-model-tdist-f"], [248, "cmdoption-pharmpy-model-transit_compartments-f"], [248, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[248, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[248, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[248, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[248, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[248, "cmdoption-pharmpy-data-append-h"], [248, "cmdoption-pharmpy-data-deidentify-h"], [248, "cmdoption-pharmpy-data-filter-h"], [248, "cmdoption-pharmpy-data-h"], [248, "cmdoption-pharmpy-data-print-h"], [248, "cmdoption-pharmpy-data-resample-h"], [248, "cmdoption-pharmpy-data-write-h"], [248, "cmdoption-pharmpy-h"], [248, "cmdoption-pharmpy-info-h"], [248, "cmdoption-pharmpy-model-absorption_rate-h"], [248, "cmdoption-pharmpy-model-add_cov_effect-h"], [248, "cmdoption-pharmpy-model-add_iiv-h"], [248, "cmdoption-pharmpy-model-add_iov-h"], [248, "cmdoption-pharmpy-model-boxcox-h"], [248, "cmdoption-pharmpy-model-create_joint_distribution-h"], [248, "cmdoption-pharmpy-model-elimination_rate-h"], [248, "cmdoption-pharmpy-model-error-h"], [248, "cmdoption-pharmpy-model-h"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [248, "cmdoption-pharmpy-model-john_draper-h"], [248, "cmdoption-pharmpy-model-peripheral_compartments-h"], [248, "cmdoption-pharmpy-model-power_on_ruv-h"], [248, "cmdoption-pharmpy-model-print-h"], [248, "cmdoption-pharmpy-model-remove_iiv-h"], [248, "cmdoption-pharmpy-model-remove_iov-h"], [248, "cmdoption-pharmpy-model-sample-h"], [248, "cmdoption-pharmpy-model-tdist-h"], [248, "cmdoption-pharmpy-model-transit_compartments-h"], [248, "cmdoption-pharmpy-model-update_inits-h"], [248, "cmdoption-pharmpy-results-bootstrap-h"], [248, "cmdoption-pharmpy-results-cdd-h"], [248, "cmdoption-pharmpy-results-frem-h"], [248, "cmdoption-pharmpy-results-h"], [248, "cmdoption-pharmpy-results-linearize-h"], [248, "cmdoption-pharmpy-results-ofv-h"], [248, "cmdoption-pharmpy-results-print-h"], [248, "cmdoption-pharmpy-results-qa-h"], [248, "cmdoption-pharmpy-results-report-h"], [248, "cmdoption-pharmpy-results-ruvsearch-h"], [248, "cmdoption-pharmpy-results-scm-h"], [248, "cmdoption-pharmpy-results-simeval-h"], [248, "cmdoption-pharmpy-results-summary-h"], [248, "cmdoption-pharmpy-run-allometry-h"], [248, "cmdoption-pharmpy-run-amd-h"], [248, "cmdoption-pharmpy-run-bootstrap-h"], [248, "cmdoption-pharmpy-run-covsearch-h"], [248, "cmdoption-pharmpy-run-estmethod-h"], [248, "cmdoption-pharmpy-run-execute-h"], [248, "cmdoption-pharmpy-run-h"], [248, "cmdoption-pharmpy-run-iivsearch-h"], [248, "cmdoption-pharmpy-run-iovsearch-h"], [248, "cmdoption-pharmpy-run-modelsearch-h"], [248, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[248, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[248, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [248, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[248, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[248, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq": [[248, "cmdoption-pharmpy-run-amd-lloq"]], "--lower_bounds": [[248, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[248, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[248, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[248, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[248, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[248, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[248, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[248, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[248, "cmdoption-pharmpy-model-add_cov_effect-operation"], [248, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[248, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[248, "cmdoption-pharmpy-data-append-o"], [248, "cmdoption-pharmpy-data-deidentify-o"], [248, "cmdoption-pharmpy-data-filter-o"], [248, "cmdoption-pharmpy-data-write-o"], [248, "cmdoption-pharmpy-model-absorption_rate-o"], [248, "cmdoption-pharmpy-model-add_cov_effect-o"], [248, "cmdoption-pharmpy-model-add_iiv-o"], [248, "cmdoption-pharmpy-model-add_iov-o"], [248, "cmdoption-pharmpy-model-boxcox-o"], [248, "cmdoption-pharmpy-model-create_joint_distribution-o"], [248, "cmdoption-pharmpy-model-elimination_rate-o"], [248, "cmdoption-pharmpy-model-error-o"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [248, "cmdoption-pharmpy-model-john_draper-o"], [248, "cmdoption-pharmpy-model-peripheral_compartments-o"], [248, "cmdoption-pharmpy-model-power_on_ruv-o"], [248, "cmdoption-pharmpy-model-remove_iiv-o"], [248, "cmdoption-pharmpy-model-remove_iov-o"], [248, "cmdoption-pharmpy-model-tdist-o"], [248, "cmdoption-pharmpy-model-transit_compartments-o"], [248, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[248, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[248, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[248, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[248, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[248, "cmdoption-pharmpy-run-allometry-path"], [248, "cmdoption-pharmpy-run-amd-path"], [248, "cmdoption-pharmpy-run-covsearch-path"], [248, "cmdoption-pharmpy-run-estmethod-path"], [248, "cmdoption-pharmpy-run-iivsearch-path"], [248, "cmdoption-pharmpy-run-iovsearch-path"], [248, "cmdoption-pharmpy-run-modelsearch-path"], [248, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[248, "cmdoption-pharmpy-run-iivsearch-rank_type"], [248, "cmdoption-pharmpy-run-iovsearch-rank_type"], [248, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[248, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[248, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[248, "cmdoption-pharmpy-data-resample-resamples"]], "--same_eta": [[248, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[248, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[248, "cmdoption-pharmpy-model-sample-samples"], [248, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[248, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[248, "cmdoption-pharmpy-data-resample-seed"], [248, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[248, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[248, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[248, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[248, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[248, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[248, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[248, "cmdoption-pharmpy-version"]], "-f": [[248, "cmdoption-pharmpy-data-append-f"], [248, "cmdoption-pharmpy-data-deidentify-f"], [248, "cmdoption-pharmpy-data-filter-f"], [248, "cmdoption-pharmpy-data-write-f"], [248, "cmdoption-pharmpy-model-absorption_rate-f"], [248, "cmdoption-pharmpy-model-add_cov_effect-f"], [248, "cmdoption-pharmpy-model-add_iiv-f"], [248, "cmdoption-pharmpy-model-add_iov-f"], [248, "cmdoption-pharmpy-model-boxcox-f"], [248, "cmdoption-pharmpy-model-create_joint_distribution-f"], [248, "cmdoption-pharmpy-model-elimination_rate-f"], [248, "cmdoption-pharmpy-model-error-f"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [248, "cmdoption-pharmpy-model-john_draper-f"], [248, "cmdoption-pharmpy-model-peripheral_compartments-f"], [248, "cmdoption-pharmpy-model-power_on_ruv-f"], [248, "cmdoption-pharmpy-model-remove_iiv-f"], [248, "cmdoption-pharmpy-model-remove_iov-f"], [248, "cmdoption-pharmpy-model-tdist-f"], [248, "cmdoption-pharmpy-model-transit_compartments-f"], [248, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[248, "cmdoption-pharmpy-data-append-h"], [248, "cmdoption-pharmpy-data-deidentify-h"], [248, "cmdoption-pharmpy-data-filter-h"], [248, "cmdoption-pharmpy-data-h"], [248, "cmdoption-pharmpy-data-print-h"], [248, "cmdoption-pharmpy-data-resample-h"], [248, "cmdoption-pharmpy-data-write-h"], [248, "cmdoption-pharmpy-h"], [248, "cmdoption-pharmpy-info-h"], [248, "cmdoption-pharmpy-model-absorption_rate-h"], [248, "cmdoption-pharmpy-model-add_cov_effect-h"], [248, "cmdoption-pharmpy-model-add_iiv-h"], [248, "cmdoption-pharmpy-model-add_iov-h"], [248, "cmdoption-pharmpy-model-boxcox-h"], [248, "cmdoption-pharmpy-model-create_joint_distribution-h"], [248, "cmdoption-pharmpy-model-elimination_rate-h"], [248, "cmdoption-pharmpy-model-error-h"], [248, "cmdoption-pharmpy-model-h"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [248, "cmdoption-pharmpy-model-john_draper-h"], [248, "cmdoption-pharmpy-model-peripheral_compartments-h"], [248, "cmdoption-pharmpy-model-power_on_ruv-h"], [248, "cmdoption-pharmpy-model-print-h"], [248, "cmdoption-pharmpy-model-remove_iiv-h"], [248, "cmdoption-pharmpy-model-remove_iov-h"], [248, "cmdoption-pharmpy-model-sample-h"], [248, "cmdoption-pharmpy-model-tdist-h"], [248, "cmdoption-pharmpy-model-transit_compartments-h"], [248, "cmdoption-pharmpy-model-update_inits-h"], [248, "cmdoption-pharmpy-results-bootstrap-h"], [248, "cmdoption-pharmpy-results-cdd-h"], [248, "cmdoption-pharmpy-results-frem-h"], [248, "cmdoption-pharmpy-results-h"], [248, "cmdoption-pharmpy-results-linearize-h"], [248, "cmdoption-pharmpy-results-ofv-h"], [248, "cmdoption-pharmpy-results-print-h"], [248, "cmdoption-pharmpy-results-qa-h"], [248, "cmdoption-pharmpy-results-report-h"], [248, "cmdoption-pharmpy-results-ruvsearch-h"], [248, "cmdoption-pharmpy-results-scm-h"], [248, "cmdoption-pharmpy-results-simeval-h"], [248, "cmdoption-pharmpy-results-summary-h"], [248, "cmdoption-pharmpy-run-allometry-h"], [248, "cmdoption-pharmpy-run-amd-h"], [248, "cmdoption-pharmpy-run-bootstrap-h"], [248, "cmdoption-pharmpy-run-covsearch-h"], [248, "cmdoption-pharmpy-run-estmethod-h"], [248, "cmdoption-pharmpy-run-execute-h"], [248, "cmdoption-pharmpy-run-h"], [248, "cmdoption-pharmpy-run-iivsearch-h"], [248, "cmdoption-pharmpy-run-iovsearch-h"], [248, "cmdoption-pharmpy-run-modelsearch-h"], [248, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[248, "cmdoption-pharmpy-data-append-o"], [248, "cmdoption-pharmpy-data-deidentify-o"], [248, "cmdoption-pharmpy-data-filter-o"], [248, "cmdoption-pharmpy-data-write-o"], [248, "cmdoption-pharmpy-model-absorption_rate-o"], [248, "cmdoption-pharmpy-model-add_cov_effect-o"], [248, "cmdoption-pharmpy-model-add_iiv-o"], [248, "cmdoption-pharmpy-model-add_iov-o"], [248, "cmdoption-pharmpy-model-boxcox-o"], [248, "cmdoption-pharmpy-model-create_joint_distribution-o"], [248, "cmdoption-pharmpy-model-elimination_rate-o"], [248, "cmdoption-pharmpy-model-error-o"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [248, "cmdoption-pharmpy-model-john_draper-o"], [248, "cmdoption-pharmpy-model-peripheral_compartments-o"], [248, "cmdoption-pharmpy-model-power_on_ruv-o"], [248, "cmdoption-pharmpy-model-remove_iiv-o"], [248, "cmdoption-pharmpy-model-remove_iov-o"], [248, "cmdoption-pharmpy-model-tdist-o"], [248, "cmdoption-pharmpy-model-transit_compartments-o"], [248, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[248, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [248, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [248, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[248, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[248, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[248, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[248, "cmdoption-pharmpy-data-append-arg-expression"], [248, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[248, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[248, "cmdoption-pharmpy-data-append-arg-file"], [248, "cmdoption-pharmpy-data-deidentify-arg-file"], [248, "cmdoption-pharmpy-data-filter-arg-file"], [248, "cmdoption-pharmpy-data-print-arg-file"], [248, "cmdoption-pharmpy-data-resample-arg-file"], [248, "cmdoption-pharmpy-data-write-arg-file"], [248, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [248, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [248, "cmdoption-pharmpy-model-add_iiv-arg-file"], [248, "cmdoption-pharmpy-model-add_iov-arg-file"], [248, "cmdoption-pharmpy-model-boxcox-arg-file"], [248, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [248, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [248, "cmdoption-pharmpy-model-error-arg-file"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [248, "cmdoption-pharmpy-model-john_draper-arg-file"], [248, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [248, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [248, "cmdoption-pharmpy-model-print-arg-file"], [248, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [248, "cmdoption-pharmpy-model-remove_iov-arg-file"], [248, "cmdoption-pharmpy-model-sample-arg-file"], [248, "cmdoption-pharmpy-model-tdist-arg-file"], [248, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [248, "cmdoption-pharmpy-model-update_inits-arg-file"], [248, "cmdoption-pharmpy-results-ofv-arg-file"], [248, "cmdoption-pharmpy-results-print-arg-file"], [248, "cmdoption-pharmpy-results-summary-arg-file"], [248, "cmdoption-pharmpy-run-allometry-arg-file"], [248, "cmdoption-pharmpy-run-bootstrap-arg-file"], [248, "cmdoption-pharmpy-run-covsearch-arg-file"], [248, "cmdoption-pharmpy-run-estmethod-arg-file"], [248, "cmdoption-pharmpy-run-execute-arg-file"], [248, "cmdoption-pharmpy-run-iivsearch-arg-file"], [248, "cmdoption-pharmpy-run-iovsearch-arg-file"], [248, "cmdoption-pharmpy-run-modelsearch-arg-file"], [248, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[248, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[248, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[248, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [248, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[248, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[248, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [248, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[248, "cmdoption-pharmpy-h"], [248, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[248, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[248, "cmdoption-pharmpy-data-append-arg-expression"], [248, "cmdoption-pharmpy-data-append-arg-file"], [248, "cmdoption-pharmpy-data-append-f"], [248, "cmdoption-pharmpy-data-append-h"], [248, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[248, "cmdoption-pharmpy-data-deidentify-arg-file"], [248, "cmdoption-pharmpy-data-deidentify-datecols"], [248, "cmdoption-pharmpy-data-deidentify-f"], [248, "cmdoption-pharmpy-data-deidentify-h"], [248, "cmdoption-pharmpy-data-deidentify-idcol"], [248, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[248, "cmdoption-pharmpy-data-filter-arg-expressions"], [248, "cmdoption-pharmpy-data-filter-arg-file"], [248, "cmdoption-pharmpy-data-filter-f"], [248, "cmdoption-pharmpy-data-filter-h"], [248, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[248, "cmdoption-pharmpy-data-print-arg-file"], [248, "cmdoption-pharmpy-data-print-columns"], [248, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[248, "cmdoption-pharmpy-data-resample-arg-file"], [248, "cmdoption-pharmpy-data-resample-group"], [248, "cmdoption-pharmpy-data-resample-h"], [248, "cmdoption-pharmpy-data-resample-replace"], [248, "cmdoption-pharmpy-data-resample-resamples"], [248, "cmdoption-pharmpy-data-resample-sample_size"], [248, "cmdoption-pharmpy-data-resample-seed"], [248, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[248, "cmdoption-pharmpy-data-write-arg-file"], [248, "cmdoption-pharmpy-data-write-f"], [248, "cmdoption-pharmpy-data-write-h"], [248, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[248, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[248, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[248, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [248, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [248, "cmdoption-pharmpy-model-absorption_rate-f"], [248, "cmdoption-pharmpy-model-absorption_rate-h"], [248, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[248, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [248, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [248, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [248, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [248, "cmdoption-pharmpy-model-add_cov_effect-f"], [248, "cmdoption-pharmpy-model-add_cov_effect-h"], [248, "cmdoption-pharmpy-model-add_cov_effect-o"], [248, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[248, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [248, "cmdoption-pharmpy-model-add_iiv-arg-file"], [248, "cmdoption-pharmpy-model-add_iiv-arg-param"], [248, "cmdoption-pharmpy-model-add_iiv-eta_name"], [248, "cmdoption-pharmpy-model-add_iiv-f"], [248, "cmdoption-pharmpy-model-add_iiv-h"], [248, "cmdoption-pharmpy-model-add_iiv-o"], [248, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[248, "cmdoption-pharmpy-model-add_iov-arg-file"], [248, "cmdoption-pharmpy-model-add_iov-arg-occ"], [248, "cmdoption-pharmpy-model-add_iov-eta_names"], [248, "cmdoption-pharmpy-model-add_iov-etas"], [248, "cmdoption-pharmpy-model-add_iov-f"], [248, "cmdoption-pharmpy-model-add_iov-h"], [248, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[248, "cmdoption-pharmpy-model-boxcox-arg-file"], [248, "cmdoption-pharmpy-model-boxcox-etas"], [248, "cmdoption-pharmpy-model-boxcox-f"], [248, "cmdoption-pharmpy-model-boxcox-h"], [248, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[248, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [248, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [248, "cmdoption-pharmpy-model-create_joint_distribution-f"], [248, "cmdoption-pharmpy-model-create_joint_distribution-h"], [248, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[248, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [248, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [248, "cmdoption-pharmpy-model-elimination_rate-f"], [248, "cmdoption-pharmpy-model-elimination_rate-h"], [248, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[248, "cmdoption-pharmpy-model-error-arg-error_type"], [248, "cmdoption-pharmpy-model-error-arg-file"], [248, "cmdoption-pharmpy-model-error-f"], [248, "cmdoption-pharmpy-model-error-h"], [248, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[248, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [248, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[248, "cmdoption-pharmpy-model-john_draper-arg-file"], [248, "cmdoption-pharmpy-model-john_draper-etas"], [248, "cmdoption-pharmpy-model-john_draper-f"], [248, "cmdoption-pharmpy-model-john_draper-h"], [248, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[248, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [248, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [248, "cmdoption-pharmpy-model-peripheral_compartments-f"], [248, "cmdoption-pharmpy-model-peripheral_compartments-h"], [248, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[248, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [248, "cmdoption-pharmpy-model-power_on_ruv-eps"], [248, "cmdoption-pharmpy-model-power_on_ruv-f"], [248, "cmdoption-pharmpy-model-power_on_ruv-h"], [248, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[248, "cmdoption-pharmpy-model-print-arg-file"], [248, "cmdoption-pharmpy-model-print-explicit-odes"], [248, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[248, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [248, "cmdoption-pharmpy-model-remove_iiv-f"], [248, "cmdoption-pharmpy-model-remove_iiv-h"], [248, "cmdoption-pharmpy-model-remove_iiv-o"], [248, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[248, "cmdoption-pharmpy-model-remove_iov-arg-file"], [248, "cmdoption-pharmpy-model-remove_iov-f"], [248, "cmdoption-pharmpy-model-remove_iov-h"], [248, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[248, "cmdoption-pharmpy-model-sample-arg-file"], [248, "cmdoption-pharmpy-model-sample-h"], [248, "cmdoption-pharmpy-model-sample-samples"], [248, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[248, "cmdoption-pharmpy-model-tdist-arg-file"], [248, "cmdoption-pharmpy-model-tdist-etas"], [248, "cmdoption-pharmpy-model-tdist-f"], [248, "cmdoption-pharmpy-model-tdist-h"], [248, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[248, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [248, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [248, "cmdoption-pharmpy-model-transit_compartments-f"], [248, "cmdoption-pharmpy-model-transit_compartments-h"], [248, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[248, "cmdoption-pharmpy-model-update_inits-arg-file"], [248, "cmdoption-pharmpy-model-update_inits-f"], [248, "cmdoption-pharmpy-model-update_inits-h"], [248, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[248, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[248, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [248, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[248, "cmdoption-pharmpy-results-cdd-arg-psn"], [248, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[248, "cmdoption-pharmpy-results-frem-arg-psn"], [248, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [248, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [248, "cmdoption-pharmpy-results-frem-h"], [248, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[248, "cmdoption-pharmpy-results-linearize-arg-psn"], [248, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[248, "cmdoption-pharmpy-results-ofv-arg-file"], [248, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[248, "cmdoption-pharmpy-results-print-arg-file"], [248, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[248, "cmdoption-pharmpy-results-qa-arg-psn"], [248, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[248, "cmdoption-pharmpy-results-report-arg-psn"], [248, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[248, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [248, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[248, "cmdoption-pharmpy-results-scm-arg-psn"], [248, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[248, "cmdoption-pharmpy-results-simeval-arg-psn"], [248, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[248, "cmdoption-pharmpy-results-summary-arg-file"], [248, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[248, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[248, "cmdoption-pharmpy-run-allometry-allometric_variable"], [248, "cmdoption-pharmpy-run-allometry-arg-file"], [248, "cmdoption-pharmpy-run-allometry-h"], [248, "cmdoption-pharmpy-run-allometry-initials"], [248, "cmdoption-pharmpy-run-allometry-lower_bounds"], [248, "cmdoption-pharmpy-run-allometry-non_fixed"], [248, "cmdoption-pharmpy-run-allometry-parameters"], [248, "cmdoption-pharmpy-run-allometry-path"], [248, "cmdoption-pharmpy-run-allometry-reference_value"], [248, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[248, "cmdoption-pharmpy-run-amd-allometric_variable"], [248, "cmdoption-pharmpy-run-amd-arg-input_path"], [248, "cmdoption-pharmpy-run-amd-categorical"], [248, "cmdoption-pharmpy-run-amd-cl_init"], [248, "cmdoption-pharmpy-run-amd-continuous"], [248, "cmdoption-pharmpy-run-amd-h"], [248, "cmdoption-pharmpy-run-amd-lloq"], [248, "cmdoption-pharmpy-run-amd-mat_init"], [248, "cmdoption-pharmpy-run-amd-modeltype"], [248, "cmdoption-pharmpy-run-amd-occasion"], [248, "cmdoption-pharmpy-run-amd-order"], [248, "cmdoption-pharmpy-run-amd-path"], [248, "cmdoption-pharmpy-run-amd-search_space"], [248, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[248, "cmdoption-pharmpy-run-bootstrap-arg-file"], [248, "cmdoption-pharmpy-run-bootstrap-h"], [248, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[248, "cmdoption-pharmpy-run-covsearch-algorithm"], [248, "cmdoption-pharmpy-run-covsearch-arg-file"], [248, "cmdoption-pharmpy-run-covsearch-effects"], [248, "cmdoption-pharmpy-run-covsearch-h"], [248, "cmdoption-pharmpy-run-covsearch-max_steps"], [248, "cmdoption-pharmpy-run-covsearch-p_backward"], [248, "cmdoption-pharmpy-run-covsearch-p_forward"], [248, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[248, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [248, "cmdoption-pharmpy-run-estmethod-arg-file"], [248, "cmdoption-pharmpy-run-estmethod-h"], [248, "cmdoption-pharmpy-run-estmethod-methods"], [248, "cmdoption-pharmpy-run-estmethod-path"], [248, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[248, "cmdoption-pharmpy-run-execute-arg-file"], [248, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[248, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [248, "cmdoption-pharmpy-run-iivsearch-arg-file"], [248, "cmdoption-pharmpy-run-iivsearch-cutoff"], [248, "cmdoption-pharmpy-run-iivsearch-h"], [248, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [248, "cmdoption-pharmpy-run-iivsearch-path"], [248, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[248, "cmdoption-pharmpy-run-iovsearch-arg-file"], [248, "cmdoption-pharmpy-run-iovsearch-column"], [248, "cmdoption-pharmpy-run-iovsearch-cutoff"], [248, "cmdoption-pharmpy-run-iovsearch-distribution"], [248, "cmdoption-pharmpy-run-iovsearch-h"], [248, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [248, "cmdoption-pharmpy-run-iovsearch-path"], [248, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[248, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [248, "cmdoption-pharmpy-run-modelsearch-arg-file"], [248, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [248, "cmdoption-pharmpy-run-modelsearch-cutoff"], [248, "cmdoption-pharmpy-run-modelsearch-h"], [248, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [248, "cmdoption-pharmpy-run-modelsearch-path"], [248, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[248, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [248, "cmdoption-pharmpy-run-ruvsearch-groups"], [248, "cmdoption-pharmpy-run-ruvsearch-h"], [248, "cmdoption-pharmpy-run-ruvsearch-p_value"], [248, "cmdoption-pharmpy-run-ruvsearch-path"], [248, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[248, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [248, "cmdoption-pharmpy-results-cdd-arg-psn"], [248, "cmdoption-pharmpy-results-frem-arg-psn"], [248, "cmdoption-pharmpy-results-linearize-arg-psn"], [248, "cmdoption-pharmpy-results-qa-arg-psn"], [248, "cmdoption-pharmpy-results-report-arg-psn"], [248, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [248, "cmdoption-pharmpy-results-scm-arg-psn"], [248, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[248, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [248, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})