Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.ExplicitODESystem", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_inf", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_inf", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_inf_from_corrse", "api/pharmpy.modeling.calculate_inf_from_cov", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_inf", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.copy_model", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_report", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.generate_model_code", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_database", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.ExplicitODESystem.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_inf.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_inf.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_inf_from_corrse.rst", "api/pharmpy.modeling.calculate_inf_from_cov.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_inf.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.copy_model.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_report.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.generate_model_code.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_database.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "ExplicitODESystem", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_inf", "calculate_cov_from_corrse", "calculate_cov_from_inf", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_inf_from_corrse", "calculate_inf_from_cov", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_se_from_cov", "calculate_se_from_inf", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "copy_model", "create_joint_distribution", "create_report", "create_rng", "create_symbol", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "generate_model_code", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_lag_times", "get_mdv", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_proportional_error_model", "has_random_effect", "has_zero_order_absorption", "has_zero_order_elimination", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_database", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_results", "fit", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_covsearch", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 19, 25, 26, 27, 30, 32, 53, 54, 68, 73, 75, 76, 77, 78, 80, 81, 82, 83, 92, 98, 101, 105, 106, 107, 108, 112, 116, 121, 122, 123, 127, 143, 156, 158, 174, 183, 188, 194, 214, 219, 223, 227, 228, 229, 243, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 277, 278, 279], "section": [0, 248, 251, 261, 273, 277], "i": [0, 1, 2, 3, 6, 8, 19, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 46, 48, 55, 56, 65, 67, 68, 69, 71, 73, 75, 77, 78, 80, 81, 82, 90, 92, 95, 98, 104, 105, 106, 107, 117, 131, 132, 145, 146, 148, 152, 153, 154, 156, 157, 160, 161, 162, 163, 165, 168, 169, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 194, 196, 197, 200, 202, 204, 209, 210, 212, 213, 214, 215, 221, 223, 227, 228, 229, 233, 242, 243, 244, 246, 247, 248, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 276, 277, 279], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 202, 223, 224, 225, 226, 227, 228, 229, 231, 244, 258, 261, 265, 269, 270, 274, 277, 279], "The": [0, 2, 3, 6, 8, 9, 10, 16, 19, 25, 26, 27, 30, 33, 35, 39, 41, 56, 64, 71, 72, 77, 78, 79, 80, 81, 82, 100, 111, 116, 118, 119, 124, 125, 137, 152, 156, 158, 174, 211, 216, 219, 247, 249, 251, 253, 257, 259, 260, 261, 264, 267, 269, 270, 277, 278], "inform": [0, 1, 2, 6, 8, 49, 50, 51, 52, 58, 59, 62, 63, 116, 244, 246, 248, 251, 254, 258, 259, 260, 261, 265, 266, 270, 274, 275, 277, 278], "intend": [0, 261, 277], "non": [0, 26, 67, 71, 79, 184, 244, 253, 254, 256, 261, 263, 270, 277], "hard": [0, 270], "find": [0, 8, 30, 46, 84, 85, 116, 208, 221, 244, 248, 259, 261, 278, 279], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 249, 251, 253, 257, 258, 260, 261, 263, 264, 265, 266, 274], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 242, 243, 244, 248, 251, 252, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 270, 271, 273, 274, 275, 276, 278], "develop": [0, 210, 244, 261, 269, 270, 277, 279], "remov": [0, 2, 9, 27, 30, 75, 105, 106, 107, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 167, 178, 189, 191, 210, 243, 244, 246, 251, 254, 258, 260, 261, 267, 278], "row": [0, 1, 2, 26, 77, 78, 90, 93, 95, 153, 154, 220, 242, 246, 251, 253, 256, 258, 260, 264, 266, 274, 275], "split": [0, 71, 184, 237, 244, 246, 265, 277], "drop": [0, 2, 6, 75, 76, 190, 244, 266, 270, 275], "column": [0, 1, 2, 6, 8, 10, 16, 26, 32, 39, 44, 56, 75, 76, 77, 78, 79, 83, 92, 93, 95, 98, 132, 133, 136, 152, 153, 159, 176, 188, 190, 200, 201, 202, 210, 213, 219, 220, 242, 244, 246, 251, 253, 256, 258, 260, 264, 265, 266, 274, 275, 277], "error": [0, 2, 11, 20, 21, 25, 27, 30, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 114, 118, 119, 124, 135, 143, 156, 158, 173, 174, 176, 179, 195, 204, 218, 221, 226, 242, 244, 251, 258, 259, 260, 263, 266, 267, 274, 275, 277, 278], "handl": [0, 3, 83, 183, 244, 253, 254, 256, 259, 270], "valid": [0, 27, 244, 261, 265], "some": [0, 8, 10, 61, 71, 143, 156, 225, 242, 244, 246, 249, 251, 253, 259, 261, 262, 263, 265, 266, 269, 270, 274, 277, 279], "rule": [0, 65, 261], "These": [0, 249, 254, 256, 261, 262, 265, 269, 270, 277], "were": [0, 27, 30, 218, 242, 243, 253, 256, 261, 266, 277, 279], "test": [0, 2, 120, 211, 213, 215, 216, 244, 246, 251, 257, 258, 260, 264, 266, 270, 274], "7": [0, 1, 2, 35, 49, 51, 52, 57, 59, 62, 78, 90, 95, 107, 109, 202, 242, 243, 251, 253, 256, 258, 260, 261, 262, 263, 264, 266, 271, 273, 274, 275, 276], "4": [0, 1, 2, 6, 49, 51, 52, 57, 59, 62, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 107, 187, 202, 216, 221, 242, 243, 251, 252, 253, 256, 258, 260, 261, 262, 263, 264, 265, 266, 271, 273, 274, 275, 276], "3": [0, 1, 2, 6, 30, 33, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 68, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 97, 99, 107, 109, 115, 117, 129, 130, 131, 135, 136, 149, 153, 154, 155, 177, 185, 186, 187, 191, 192, 194, 200, 201, 202, 220, 242, 243, 251, 252, 253, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 271, 273, 274, 275, 276, 277, 279], "delimet": 0, "between": [0, 8, 9, 27, 71, 219, 233, 242, 243, 244, 246, 256, 260, 261, 267, 270, 273, 274, 278, 279], "comma": [0, 277], "space": [0, 64, 210, 215, 244, 246, 277], "tab": [0, 135, 244, 268], "befor": [0, 2, 30, 154, 155, 193, 246, 260, 262, 266], "after": [0, 6, 30, 105, 106, 107, 176, 208, 218, 221, 225, 243, 244, 246, 252, 256, 261, 262, 263, 266, 270, 271, 273, 275, 276, 279], "ar": [0, 3, 4, 6, 8, 26, 27, 30, 36, 37, 39, 42, 56, 71, 93, 104, 129, 145, 146, 150, 158, 161, 162, 173, 184, 188, 194, 204, 211, 212, 214, 215, 223, 225, 242, 244, 246, 247, 248, 249, 251, 253, 254, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 275, 277, 279], "give": [0, 26, 104, 131, 155, 242, 244, 246, 251, 256, 260, 261, 275], "sic": 0, "begin": [0, 256, 263, 265], "end": [0, 36, 46, 256, 261, 263, 265, 277], "insert": [0, 244], "each": [0, 2, 8, 27, 33, 35, 55, 56, 57, 77, 78, 79, 80, 81, 82, 90, 95, 96, 107, 130, 133, 134, 152, 155, 165, 225, 242, 243, 246, 248, 251, 253, 254, 256, 258, 260, 261, 263, 264, 265, 266, 267, 273, 274, 275, 276, 277, 279], "can": [0, 1, 2, 6, 10, 19, 26, 30, 48, 56, 64, 73, 79, 116, 152, 183, 208, 214, 225, 228, 229, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 273, 274, 277, 278, 279], "onli": [0, 2, 3, 8, 10, 14, 27, 35, 53, 54, 65, 68, 75, 77, 78, 80, 81, 82, 101, 108, 112, 130, 152, 183, 193, 214, 221, 233, 244, 246, 247, 251, 260, 261, 265, 266, 269, 277, 279], "numer": [0, 6, 14, 31, 77, 78, 80, 81, 242, 244, 253, 263, 270], "e": [0, 6, 19, 27, 68, 74, 105, 106, 107, 131, 146, 160, 215, 242, 244, 249, 253, 256, 258, 260, 261, 263, 265, 266, 267, 270, 274, 277, 279], "other": [0, 9, 19, 27, 30, 69, 134, 214, 237, 242, 247, 249, 254, 258, 261, 270], "charact": [0, 10, 253], "than": [0, 25, 26, 258, 261, 266], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 27, 35, 204, 223, 224, 227, 228, 236, 244, 251, 261, 266, 270, 277], "except": [0, 11, 12, 20, 21, 22, 37, 56, 152, 261], "ii": [0, 6], "datx": [0, 244], "fortran": 0, "short": [0, 249, 261], "form": [0, 24, 27, 152, 211, 244, 261], "exponenti": [0, 35, 37, 42, 165, 246, 251, 256, 265], "notat": [0, 279], "2": [0, 1, 2, 6, 8, 19, 30, 33, 35, 36, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 99, 101, 107, 108, 109, 110, 115, 117, 129, 130, 131, 135, 136, 149, 153, 154, 155, 156, 158, 163, 166, 168, 169, 172, 174, 175, 177, 180, 184, 186, 187, 191, 192, 194, 202, 209, 219, 242, 243, 246, 249, 251, 252, 253, 256, 258, 260, 262, 263, 264, 265, 266, 267, 271, 273, 274, 275, 276, 277], "1": [0, 1, 2, 6, 7, 8, 18, 19, 23, 26, 27, 30, 33, 35, 36, 41, 43, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 95, 96, 97, 99, 101, 107, 108, 109, 110, 113, 114, 115, 117, 129, 130, 131, 132, 135, 136, 140, 143, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 173, 175, 176, 178, 181, 184, 185, 186, 187, 189, 191, 192, 194, 195, 202, 209, 210, 211, 215, 219, 242, 243, 246, 248, 249, 251, 252, 253, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 274, 275, 276, 277, 279], "mean": [0, 2, 13, 18, 19, 23, 56, 61, 131, 153, 154, 210, 223, 227, 242, 243, 244, 246, 256, 258, 261, 263, 264, 265, 266, 270, 273, 277, 279], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 18, 19, 25, 26, 27, 30, 32, 56, 60, 61, 64, 70, 79, 84, 85, 100, 104, 110, 111, 113, 114, 115, 116, 132, 133, 137, 152, 153, 154, 156, 158, 166, 167, 174, 176, 178, 207, 214, 216, 218, 221, 223, 227, 228, 233, 242, 243, 245, 246, 249, 250, 251, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 274, 275, 277], "d": [0, 8, 13, 16, 18, 23, 27, 28, 30, 224, 226, 237, 261, 263], "instead": [0, 65, 79, 104, 223, 243, 244, 246, 253, 254, 256, 261, 265, 270, 279], "lone": 0, "an": [0, 4, 8, 10, 15, 17, 19, 26, 27, 30, 33, 38, 39, 45, 50, 52, 63, 64, 72, 96, 98, 118, 119, 120, 124, 129, 131, 142, 152, 156, 186, 200, 201, 202, 218, 219, 221, 224, 226, 244, 246, 249, 251, 253, 256, 257, 258, 259, 260, 261, 263, 266, 267, 270, 273, 275, 276, 277, 279], "0": [0, 1, 2, 6, 7, 8, 15, 16, 18, 19, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 95, 96, 97, 109, 110, 114, 115, 117, 129, 130, 131, 135, 140, 141, 144, 149, 153, 154, 155, 158, 160, 161, 162, 165, 166, 167, 173, 174, 176, 178, 184, 185, 186, 189, 192, 194, 202, 209, 210, 211, 216, 220, 221, 242, 243, 246, 249, 251, 253, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 271, 273, 274, 275, 276, 277, 279], "dot": 0, "most": [0, 6, 35, 183, 246, 251, 254, 261, 265, 273], "24": [0, 57, 90, 95, 97, 107, 109, 202, 242, 243, 251, 253, 258, 260, 262, 264, 266, 273, 274, 276], "long": [0, 244, 261, 270], "count": [0, 96, 220, 227, 244, 266], "delimit": 0, "wa": [0, 28, 194, 219, 242, 244, 261, 262, 274, 275], "eaten": 0, "empti": [0, 27, 218, 251, 265], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 17, 19, 27, 28, 30, 40, 46, 65, 71, 75, 86, 87, 88, 140, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 191, 192, 193, 194, 244, 246, 247, 248, 253, 258, 259, 260, 266, 267, 277, 278, 279], "As": [0, 27, 247, 248, 265, 267, 277, 279], "contain": [0, 2, 3, 27, 79, 200, 201, 202, 242, 243, 246, 251, 252, 253, 254, 258, 260, 261, 264, 265, 266, 271, 273, 274, 275, 276, 277], "drope": 0, "input": [0, 8, 9, 10, 27, 30, 35, 37, 39, 62, 63, 70, 73, 76, 120, 125, 135, 140, 154, 165, 210, 219, 230, 244, 246, 253, 258, 260, 263, 265, 266, 267, 270, 274, 279], "ani": [0, 2, 8, 9, 45, 56, 67, 150, 208, 220, 230, 233, 249, 253, 258, 260, 261, 263, 265, 267, 270, 277, 279], "limit": [0, 2, 66, 148, 173, 210, 244, 246, 260, 261, 268], "length": [0, 79, 80, 81, 82, 96, 97, 109, 244, 253], "If": [0, 2, 10, 19, 30, 35, 46, 56, 71, 73, 79, 92, 96, 98, 145, 146, 152, 154, 165, 173, 184, 185, 186, 187, 188, 194, 204, 212, 215, 221, 242, 246, 253, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 270, 277, 279], "ha": [0, 2, 8, 19, 27, 71, 79, 90, 95, 118, 119, 120, 121, 122, 123, 124, 125, 127, 242, 244, 246, 247, 249, 251, 253, 254, 258, 260, 261, 263, 265, 266, 272, 274, 275, 277], "more": [0, 2, 8, 26, 209, 211, 212, 213, 215, 216, 244, 246, 248, 251, 257, 259, 261, 265, 266, 270, 273, 277, 278], "extra": [0, 244], "consid": [0, 2, 212, 213, 215, 244, 251, 254, 258, 260, 261, 266, 274], "start": [0, 2, 8, 36, 45, 96, 132, 144, 152, 212, 244, 246, 249, 251, 253, 256, 260, 261, 265, 266, 274, 275, 277, 279], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 233, 242, 244, 246, 247, 249, 251, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 274, 276, 277, 278, 279], "been": [0, 2, 6, 247, 251, 253, 261, 263, 265, 277], "provid": [0, 27, 154, 173, 246, 247, 251, 253, 258, 260, 261, 265, 266, 279], "default": [0, 1, 2, 6, 7, 19, 25, 27, 32, 33, 35, 36, 37, 42, 46, 48, 55, 71, 73, 75, 100, 104, 111, 117, 125, 139, 145, 146, 148, 152, 153, 154, 156, 158, 161, 162, 165, 173, 174, 176, 184, 185, 186, 187, 196, 197, 199, 204, 209, 212, 213, 215, 221, 236, 241, 244, 246, 248, 251, 258, 260, 263, 265, 266, 267, 268, 274, 279], "where": [0, 2, 33, 41, 208, 242, 243, 244, 247, 248, 251, 253, 256, 260, 261, 265, 266, 267, 270, 277, 279], "rexex": 0, "": [0, 10, 64, 140, 246, 253, 256, 261, 267, 271], "za": 0, "z": [0, 33], "either": [0, 2, 37, 210, 211, 246, 258, 261, 263, 265, 277], "surround": 0, "two": [0, 8, 9, 27, 30, 134, 242, 244, 245, 246, 261, 270, 274, 277, 279], "By": [0, 19, 27, 260, 261, 263], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 30, 46, 64, 72, 132, 142, 153, 212, 213, 214, 215, 227, 242, 243, 244, 246, 251, 258, 260, 261, 263, 264, 265, 266, 267, 268, 270, 274, 275, 277, 279], "interpret": [0, 244, 261], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 19, 26, 27, 28, 30, 33, 39, 48, 56, 64, 71, 73, 77, 78, 79, 80, 81, 82, 104, 117, 131, 132, 139, 150, 152, 153, 154, 155, 156, 158, 163, 165, 171, 173, 174, 179, 188, 193, 195, 196, 199, 200, 201, 202, 204, 209, 210, 211, 212, 213, 214, 215, 216, 223, 224, 225, 227, 228, 229, 231, 236, 242, 243, 244, 246, 248, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 273, 274, 275, 277, 278], "chang": [0, 2, 9, 19, 26, 27, 36, 157, 161, 163, 166, 167, 175, 178, 180, 192, 246, 249, 261, 263, 265, 266, 267, 274, 279], "howev": [0, 258, 260, 261, 265, 267, 277, 279], "one": [0, 2, 6, 8, 9, 10, 14, 23, 25, 26, 27, 35, 68, 75, 79, 87, 136, 152, 154, 165, 179, 188, 190, 191, 195, 199, 214, 218, 220, 223, 227, 228, 231, 244, 246, 247, 249, 253, 254, 256, 260, 261, 263, 265, 266, 267, 270, 277, 279], "legal": [0, 261], "ones": [0, 251, 256], "9": [0, 2, 6, 41, 57, 66, 78, 81, 90, 93, 95, 107, 109, 194, 202, 242, 243, 251, 253, 257, 258, 260, 261, 262, 264, 265, 266, 273, 274, 275, 276, 279], "sinc": [0, 6, 254, 256, 258, 265, 266, 267, 270, 279], "number": [0, 2, 6, 8, 14, 23, 25, 39, 46, 56, 61, 67, 73, 74, 105, 106, 107, 109, 132, 152, 153, 154, 155, 156, 165, 172, 177, 211, 214, 216, 219, 220, 242, 244, 246, 251, 253, 261, 273, 274, 275, 277, 279], "valu": [0, 1, 6, 10, 19, 25, 26, 27, 33, 37, 42, 43, 56, 60, 61, 66, 67, 77, 78, 79, 80, 81, 82, 86, 88, 90, 93, 95, 110, 114, 115, 152, 155, 176, 192, 204, 209, 211, 212, 213, 215, 216, 221, 241, 242, 244, 246, 249, 251, 253, 262, 263, 265, 274, 275, 276], "met": [0, 261], "doubl": 0, "big": 0, "warn": [0, 2, 12, 218, 226, 244, 251, 258, 260, 266, 279], "larger": [0, 261], "pad": 0, "filter": [0, 105, 106, 107, 244, 253], "so": [0, 25, 152, 225, 247, 248, 249, 254, 261, 267, 273, 279], "characterscannot": 0, "neither": [0, 261], "perform": [0, 14, 68, 246, 251, 261, 263, 266, 267], "order": [0, 8, 27, 30, 121, 123, 126, 127, 152, 163, 164, 169, 175, 180, 181, 210, 244, 246, 253, 261, 263, 266, 270, 277, 279], "given": [0, 2, 27, 36, 74, 77, 78, 80, 81, 82, 87, 88, 111, 113, 120, 125, 137, 145, 146, 153, 154, 155, 176, 182, 191, 192, 198, 204, 225, 227, 244, 246, 249, 251, 253, 256, 258, 260, 261, 266, 267, 273, 274], "critic": [0, 247], "case": [0, 2, 71, 83, 152, 221, 244, 251, 257, 258, 260, 261, 263, 265, 266, 272, 278], "illeg": 0, "get": [0, 4, 5, 7, 8, 10, 16, 17, 27, 30, 89, 91, 92, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 128, 220, 244, 253, 256, 260, 261, 264, 270, 278, 279], "need": [0, 2, 37, 68, 83, 116, 244, 246, 248, 249, 254, 256, 257, 261, 263, 265, 269, 270, 279], "becaus": [0, 8, 244, 261, 265], "later": [0, 257, 261], "comparison": [0, 266, 270], "It": [0, 19, 223, 247, 249, 253, 254, 257, 258, 259, 261, 263, 264, 265, 268, 273, 277, 279], "possibl": [0, 2, 6, 27, 30, 121, 122, 123, 127, 183, 212, 215, 244, 249, 253, 258, 261, 264, 265, 266, 267, 268, 270, 273, 277, 279], "done": [0, 1, 68, 69, 77, 78, 80, 81, 82, 152, 247, 263, 265, 266, 268, 274], "eq": [0, 16, 265], "ne": [0, 265], "text": [0, 19, 35, 263, 270], "otherwis": [0, 6, 8, 19, 30, 33, 35, 37, 40, 68, 71, 92, 98, 117, 118, 119, 124, 129, 130, 131, 152, 163, 173, 174, 175, 176, 177, 180, 247, 253, 261, 263, 270], "appropri": [0, 19, 247, 261], "letter": [0, 117], "alphanum": 0, "underscor": 0, "real": [0, 253, 254], "special": [0, 6, 188, 253, 254, 261], "digit": [0, 67, 244], "enclos": 0, "ok": [0, 254], "w": [0, 30, 68, 117, 129, 135, 136, 143, 156, 165, 174, 176, 179, 195, 261, 263, 265], "o": [0, 243, 245, 246, 250, 274], "With": [0, 277], "eqn": 0, "ge": 0, "etc": [0, 3, 244, 265, 267, 275, 277], "maximum": [0, 14, 35, 67, 211, 246, 251], "have": [0, 6, 8, 19, 27, 30, 35, 37, 126, 188, 213, 220, 225, 227, 244, 246, 248, 249, 251, 253, 254, 257, 258, 260, 261, 263, 265, 266, 267, 268, 270, 277, 279], "12": [0, 1, 57, 90, 93, 95, 96, 97, 107, 202, 242, 243, 251, 253, 256, 258, 261, 262, 264, 266, 271, 273, 274, 275, 276], "must": [0, 25, 39, 71, 152, 165, 223, 243, 246, 248, 260, 261, 263, 265], "decreas": [0, 254], "within": [0, 152, 247, 261, 277], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 27, 30, 173, 242, 247, 249, 251, 254, 261, 267, 279], "affect": [0, 104, 261, 267], "even": [0, 25, 74, 76, 90, 95, 248, 261, 267], "still": [0, 261, 267, 279], "cannot": [0, 8, 56, 71, 222, 244, 253, 261, 265, 277], "both": [0, 1, 2, 19, 39, 160, 220, 244, 247, 251, 253, 258, 260, 261, 263, 266, 274, 277, 279], "reenter": 0, "think": 0, "risk": [0, 261], "being": [0, 6, 27, 56, 155, 156, 158, 174, 243, 244, 248, 256, 261, 267, 270, 275, 279], "truncat": 0, "encod": [0, 179, 195, 244, 253, 268], "here": [0, 2, 104, 253, 254, 255, 258, 263, 265, 266, 270, 277, 278, 279], "possibli": [0, 270], "partial": [0, 246, 270], "list": [0, 2, 6, 8, 10, 13, 14, 16, 18, 26, 27, 30, 33, 37, 39, 71, 75, 76, 84, 85, 87, 88, 99, 100, 104, 111, 113, 128, 133, 145, 146, 152, 153, 159, 165, 173, 184, 185, 186, 187, 189, 190, 191, 192, 199, 204, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 232, 242, 243, 244, 246, 247, 249, 251, 253, 260, 261, 263, 265, 273, 274, 275, 277], "decid": [0, 2, 125, 258, 260, 261, 266, 274], "whether": [0, 25, 33, 35, 37, 71, 120, 125, 152, 165, 200, 202, 221, 224, 236, 246, 258, 261, 265, 266, 277], "put": [0, 132, 152, 254, 256], "up": [0, 247, 251, 279], "written": [0, 196, 244, 261, 263, 267, 277], "scientif": [0, 254], "14": [0, 57, 78, 90, 95, 107, 202, 242, 243, 251, 253, 258, 260, 261, 262, 264, 273, 275, 276], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 19, 96, 242, 265], "describ": [0, 2, 16, 27, 30, 56, 121, 122, 123, 126, 127, 242, 251, 253, 258, 260, 263], "output": [0, 8, 16, 19, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 220, 244, 246, 249, 261, 263, 265, 277, 279], "alwai": [0, 154, 244, 253, 266], "synonym": [0, 244], "name": [0, 1, 2, 6, 7, 8, 10, 13, 14, 16, 18, 19, 23, 25, 26, 27, 31, 32, 35, 37, 38, 39, 43, 46, 56, 67, 69, 70, 71, 74, 75, 80, 81, 82, 87, 91, 96, 97, 100, 102, 104, 107, 109, 111, 113, 117, 120, 128, 129, 132, 134, 139, 142, 145, 146, 151, 152, 159, 165, 170, 173, 184, 185, 186, 187, 190, 191, 204, 208, 209, 210, 213, 217, 218, 221, 223, 224, 225, 227, 228, 230, 231, 232, 233, 241, 243, 244, 246, 248, 251, 253, 260, 261, 264, 265, 269, 274, 275, 277, 278, 279], "avail": [0, 1, 2, 6, 33, 40, 56, 116, 129, 163, 175, 177, 180, 204, 242, 246, 248, 251, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 270, 274, 276, 277, 279], "carri": [0, 261], "over": [0, 109, 132, 152, 176, 200, 201, 202, 242, 243, 256, 260, 277], "onc": [0, 130, 251, 267], "covari": [0, 6, 10, 18, 27, 34, 35, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 71, 95, 104, 120, 128, 135, 141, 142, 153, 154, 155, 159, 210, 211, 244, 246, 251, 253, 254, 260, 263, 270, 275, 277, 278], "final": [0, 2, 34, 141, 207, 244, 251, 256, 258, 260, 261, 266, 267, 274, 275], "estim": [0, 1, 2, 14, 15, 19, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 57, 61, 66, 67, 71, 79, 86, 87, 88, 134, 135, 140, 141, 144, 149, 153, 154, 155, 156, 158, 161, 162, 163, 166, 168, 169, 173, 174, 175, 177, 179, 180, 181, 185, 186, 187, 191, 192, 193, 194, 195, 199, 209, 210, 221, 242, 243, 244, 246, 251, 252, 254, 258, 260, 262, 266, 269, 270, 273, 274, 277, 278], "oppos": 0, "ext": [0, 244, 277], "per": [0, 6, 14, 26, 68, 105, 106, 107, 109, 153, 154, 176, 220], "est": [0, 34, 36, 45, 141, 144], "first": [0, 2, 27, 35, 40, 74, 90, 95, 121, 123, 134, 161, 163, 164, 169, 175, 177, 180, 244, 246, 251, 256, 258, 260, 261, 267, 270, 277, 279], "call": [0, 220, 233, 244, 248, 249, 261, 267, 279], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 243, 244, 246, 248, 251, 258, 260, 266, 270, 271, 273, 274, 275, 277, 278], "theta": [0, 1, 30, 33, 35, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 66, 67, 68, 86, 87, 88, 110, 114, 115, 117, 129, 130, 131, 135, 136, 140, 154, 155, 166, 167, 173, 178, 179, 185, 186, 187, 189, 191, 192, 194, 195, 244, 258, 260, 263, 264, 266, 267, 270, 274], "sigma": [0, 1, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 67, 110, 114, 115, 135, 136, 140, 154, 155, 156, 158, 174, 242, 256, 258, 260, 263, 264, 265, 266, 267], "omega": [0, 1, 23, 27, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 71, 110, 114, 115, 135, 136, 140, 154, 155, 184, 194, 244, 246, 256, 258, 260, 263, 264, 265, 266, 267, 273, 274], "fix": [0, 1, 2, 25, 26, 33, 43, 48, 71, 86, 87, 88, 110, 114, 115, 160, 166, 167, 178, 184, 189, 191, 192, 209, 246, 258, 261, 263, 270, 277], "offdiagon": 0, "could": [0, 19, 244, 253, 261, 265, 269, 270, 279], "part": [0, 27, 74, 242, 244, 246, 249, 261, 263, 267, 270, 277], "NO": [0, 261], "probabl": 0, "same": [0, 2, 8, 10, 16, 19, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 67, 68, 71, 75, 76, 83, 86, 87, 88, 96, 117, 126, 130, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 210, 213, 223, 225, 227, 243, 244, 246, 247, 251, 253, 256, 260, 261, 263, 265, 266, 277, 279], "type": [0, 2, 6, 8, 10, 19, 29, 30, 35, 48, 111, 133, 137, 204, 210, 212, 213, 215, 241, 244, 246, 249, 251, 256, 257, 258, 259, 260, 261, 263, 265, 266, 270], "now": [0, 244, 249, 265, 267], "investig": 0, "follow": [0, 2, 35, 131, 184, 242, 244, 246, 247, 249, 251, 253, 254, 257, 258, 260, 261, 263, 265, 266, 267, 269, 277, 279], "like": [0, 19, 27, 261, 265, 267, 270, 277], "One": [0, 27, 132, 133, 230, 270, 279], "last": [0, 30, 162, 221], "left": [0, 4, 56, 263, 265, 269], "justifi": 0, "size": [0, 6, 13, 152, 244, 247, 265, 270], "13": [0, 1, 2, 57, 90, 93, 95, 96, 107, 202, 242, 243, 251, 253, 258, 260, 261, 262, 264, 266, 271, 273, 275, 276], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 227, 228, 231, 241, 242, 243, 244, 245, 247, 249, 251, 256, 257, 259, 260, 261, 262, 264, 269, 270, 273, 275, 276, 278], "n": [0, 6, 18, 23, 27, 41, 71, 149, 154, 155, 172, 177, 184, 186, 214, 242, 243, 244, 246, 256, 258, 260, 263, 265], "flatten": [0, 244], "triangular": 0, "correl": [0, 49, 50, 51, 52, 58, 59, 62, 63, 66, 71, 194, 244, 273], "abov": [0, 33, 35, 37, 66, 242, 243, 251, 256, 261, 263, 279], "off": 0, "diagon": [0, 135, 244, 258, 263, 264, 266], "obj": [0, 19], "right": [0, 4, 8, 16, 261, 263, 265, 279], "also": [0, 2, 27, 76, 152, 244, 248, 249, 251, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 274, 277, 279], "22": [0, 2, 57, 77, 78, 80, 81, 90, 95, 107, 109, 202, 242, 243, 251, 253, 256, 260, 262, 264, 276], "integ": [0, 6, 117, 244, 246, 277], "5": [0, 1, 2, 30, 33, 49, 51, 52, 56, 57, 59, 62, 68, 78, 79, 88, 90, 93, 95, 97, 107, 109, 117, 129, 130, 131, 135, 187, 192, 202, 219, 220, 242, 243, 251, 253, 256, 258, 260, 261, 262, 263, 264, 265, 266, 271, 273, 275, 276, 279], "expon": [0, 1, 33, 209, 246], "regular": [0, 10, 259], "take": [0, 2, 25, 73, 244, 247, 253, 258, 260, 261, 265, 266, 270], "19": [0, 2, 57, 78, 90, 95, 107, 202, 242, 243, 251, 253, 258, 262, 264, 265, 273, 275, 276], "posit": [0, 27, 154, 155, 244, 246, 247, 254], "neg": [0, 277], "For": [0, 2, 8, 35, 37, 105, 106, 107, 131, 188, 209, 211, 212, 213, 215, 216, 242, 243, 246, 248, 249, 251, 256, 257, 261, 263, 265, 266, 267, 270, 277, 279], "20": [0, 57, 81, 90, 95, 107, 202, 242, 243, 251, 253, 261, 262, 264, 271, 273, 274, 275, 276], "In": [0, 71, 83, 247, 249, 251, 258, 260, 261, 263, 265, 270, 277, 279], "observ": [0, 6, 19, 40, 96, 105, 106, 107, 108, 109, 163, 175, 177, 180, 181, 219, 220, 242, 244, 256, 270, 273, 276, 278], "byte": 0, "evid": [0, 98, 244], "toward": [0, 96, 244], "token": [0, 277], "whitespac": 0, "parenthes": [0, 277], "multipl": [0, 4, 27, 30, 218, 244, 251, 254, 263, 274, 275, 277, 278], "open": [0, 247, 249, 259, 261, 268], "keyword": [0, 246], "kept": [0, 83, 244, 246, 258], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 244, 246, 248, 249, 251, 253, 254, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 274, 279], "csv": [0, 2, 28, 140, 196, 222, 244, 246, 251, 253, 258, 260, 265, 266, 274, 277], "wgt": [0, 2, 4, 6, 10, 30, 33, 35, 68, 75, 76, 90, 95, 104, 116, 117, 129, 130, 131, 135, 136, 142, 185, 186, 187, 190, 209, 211, 253, 256, 263, 265, 267, 270, 273, 277], "23": [0, 2, 56, 57, 61, 73, 78, 90, 95, 107, 153, 154, 155, 202, 242, 243, 251, 253, 258, 260, 262, 264, 266, 275, 276], "titl": 0, "crash": [0, 244], "nmtran": [0, 6], "There": [0, 225], "72": [0, 2, 251], "includ": [0, 2, 3, 18, 23, 27, 42, 133, 221, 243, 244, 247, 251, 258, 259, 260, 261, 265, 273, 275, 277], "come": [0, 249, 261], "filenam": [0, 19, 223, 227, 228, 263], "repres": [0, 4, 6, 19, 25, 26, 27, 246, 251, 253, 254, 256, 261, 263, 265], "rel": [0, 14, 244, 256], "path": [0, 1, 2, 10, 19, 28, 46, 72, 94, 137, 138, 140, 196, 197, 198, 205, 206, 208, 210, 222, 223, 224, 225, 227, 228, 229, 231, 236, 244, 246, 248, 251, 253, 258, 260, 263, 265, 266, 274, 275, 277, 279], "work": [0, 244, 247, 249, 261, 263, 270], "directori": [0, 198, 208, 223, 224, 225, 244, 246, 248, 249, 251, 263, 265, 275], "when": [0, 14, 35, 68, 244, 247, 249, 253, 260, 261, 263, 265, 267, 273, 275, 277, 279], "invok": [0, 19], "nmfe": 0, "content": [0, 1, 2, 219, 220, 251, 253, 258, 260, 261, 266, 274], "simpli": [0, 25, 249, 267], "seen": [0, 1, 2, 251, 253, 258, 260, 266, 274], "54": [0, 57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 266, 271, 273, 276], "doe": [0, 2, 8, 46, 74, 94, 148, 223, 224, 225, 228, 229, 244, 254, 258, 260, 261, 266, 267, 273, 279], "pk": [0, 2, 38, 42, 111, 135, 244, 246, 251, 258, 263, 266, 267, 277, 278], "pred": [0, 81, 135, 140, 244, 263, 264, 265, 273, 276], "simpl": [0, 1, 135, 183, 221, 263, 265, 267], "merg": [0, 244, 261], "placement": [0, 248], "place": [0, 248, 261, 265, 279], "seem": 0, "restrict": [0, 225, 261], "automat": [0, 14, 33, 210, 244, 249, 251, 257, 261, 274, 277], "creat": [0, 2, 4, 5, 7, 8, 10, 15, 17, 18, 19, 23, 25, 26, 27, 28, 68, 72, 73, 74, 92, 93, 98, 140, 145, 165, 173, 198, 208, 219, 220, 223, 224, 225, 226, 227, 233, 236, 242, 243, 244, 246, 249, 251, 252, 253, 256, 258, 260, 262, 263, 266, 270, 271, 273, 274, 275, 276, 277, 278], "continu": [0, 2, 6, 35, 210, 244, 246, 247, 249, 251, 256, 261, 270, 277, 279], "factor": [0, 270], "compil": [0, 261], "11138": 0, "445": [0, 258], "though": [0, 261], "outsid": [0, 244, 247, 261], "standard": [0, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 63, 72, 195, 242, 244, 254, 256, 261, 267, 270, 273, 274, 276], "gfortran": 0, "8": [0, 2, 6, 49, 50, 51, 52, 57, 58, 59, 62, 63, 90, 95, 97, 107, 109, 202, 242, 243, 251, 253, 257, 258, 260, 261, 262, 263, 264, 265, 271, 273, 274, 275, 276, 279], "hh": 0, "j": [0, 186, 243, 256], "nep": 0, "h": [0, 246], "second": [0, 134, 246, 251, 267], "f": [0, 30, 68, 117, 129, 135, 136, 143, 156, 158, 165, 173, 174, 176, 195, 242, 244, 246, 250, 261, 263, 265, 267], "respect": [0, 2, 244, 247, 256, 261, 265, 266, 267], "ep": [0, 30, 68, 108, 117, 129, 135, 136, 143, 156, 165, 173, 176, 195, 244, 246, 263, 265, 267], "implicit": [0, 244], "kind": [0, 6, 8, 111, 261], "dpsize": 0, "main": [0, 246, 270, 279], "function": [0, 3, 10, 14, 16, 33, 35, 53, 54, 73, 76, 77, 78, 80, 81, 82, 86, 87, 88, 101, 108, 112, 121, 122, 123, 127, 156, 158, 166, 174, 183, 188, 191, 192, 194, 198, 204, 212, 215, 230, 242, 244, 246, 249, 254, 258, 259, 260, 261, 263, 265, 266, 267, 269, 270, 273, 274, 275, 277, 279], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 13, 18, 19, 23, 27, 31, 32, 39, 56, 74, 79, 100, 110, 113, 114, 116, 125, 136, 155, 209, 210, 244, 246, 251, 253, 254, 258, 264, 265, 270, 273, 278], "doesn": [0, 30, 227, 244, 258], "t": [0, 6, 8, 16, 30, 33, 168, 169, 181, 187, 221, 227, 230, 232, 243, 244, 246, 256, 258, 263, 271, 273], "declar": [0, 2, 68, 130, 251, 277], "assign": [0, 6, 30, 68, 244, 246], "stop": 0, "entri": [0, 226], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 19, 23, 25, 26, 27, 30, 53, 54, 68, 74, 101, 104, 108, 112, 116, 130, 136, 151, 173, 210, 244, 251, 254, 265, 270], "separ": [0, 10, 71, 83, 131, 152, 184, 225, 244, 246, 249, 251, 253, 254, 256, 261, 265, 270, 277], "thnn": 0, "nn": [0, 256], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 25, 27, 261, 265], "ad": [0, 9, 35, 37, 41, 83, 212, 213, 215, 244, 246, 251, 260, 261, 267, 274, 275, 278], "x": [0, 1, 2, 26, 33, 68, 77, 78, 93, 153, 242, 251, 253, 256, 258, 260, 264, 265, 266, 268, 274, 275], "xxe": 0, "xx": 0, "string": [0, 6, 10, 27, 28, 30, 100, 104, 137, 138, 139, 140, 244, 253, 266], "tool": [1, 2, 3, 14, 45, 143, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 229, 231, 236, 241, 242, 244, 245, 246, 249, 251, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 269, 270, 274, 278], "add": [1, 9, 14, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 83, 173, 174, 244, 246, 253, 258, 261, 266, 267, 268, 277], "allometr": [1, 2, 33, 209, 246, 277], "scale": [1, 2, 6, 33, 55, 60, 64, 209, 244, 246, 256, 265, 268, 277], "pharmr": [1, 2, 3, 244, 249, 251, 254, 257, 258, 259, 260, 266, 274, 278], "command": [1, 244, 249, 251, 257, 258, 259, 260, 261, 265, 266, 274, 278], "line": [1, 68, 244, 251, 257, 258, 259, 260, 261, 265, 266, 274, 278], "To": [1, 2, 246, 249, 251, 257, 258, 260, 261, 265, 266, 268, 274, 277, 279], "initi": [1, 2, 8, 15, 16, 19, 25, 26, 33, 37, 39, 40, 41, 42, 43, 71, 73, 79, 86, 87, 88, 149, 156, 158, 163, 165, 166, 168, 169, 173, 174, 175, 177, 180, 181, 185, 186, 187, 191, 192, 193, 194, 209, 210, 232, 244, 246, 251, 256, 258, 260, 261, 266, 274, 278], "python": [1, 2, 243, 244, 246, 251, 253, 254, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 274, 277, 278], "r": [1, 2, 28, 243, 244, 251, 253, 254, 257, 258, 259, 260, 263, 264, 265, 266, 267, 274, 277, 278], "run_allometri": [1, 244], "start_model": [1, 219, 251, 258, 260, 266, 274, 277], "read_model": [1, 139, 140, 244, 251, 253, 258, 260, 263, 264, 265, 266, 274, 279], "start_model_result": [1, 251, 258, 260, 266, 274, 277], "read_modelfit_result": [1, 244, 251, 260, 266, 274], "re": [1, 2, 198, 206, 207, 211, 215, 217, 224, 229, 231, 243, 251, 258, 260, 263, 264, 265, 266, 274, 276, 277, 279], "code": [1, 19, 21, 68, 89, 104, 116, 121, 122, 123, 127, 135, 140, 173, 174, 197, 244, 251, 258, 259, 260, 261, 266, 267, 269, 270, 274, 278, 279], "redefin": [1, 251, 258, 260, 266, 274], "accordingli": [1, 251, 258, 260, 266, 267, 274], "descript": [1, 2, 6, 19, 31, 219, 220, 221, 241, 242, 244, 248, 251, 253, 258, 260, 263, 266, 270, 274, 275], "modelfitresult": [1, 2, 22, 199, 200, 201, 202, 205, 209, 210, 211, 212, 213, 214, 215, 216, 244, 251, 258, 260, 266, 274], "allometric_vari": [1, 2, 33, 209, 210, 246], "wt": [1, 2, 30, 33, 209, 251, 275], "reference_valu": [1, 2, 33, 209, 246], "refer": [1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 68, 71, 75, 76, 83, 86, 87, 88, 117, 126, 130, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 207, 209, 210, 221, 244, 246, 251, 261, 267, 278, 279], "70": [1, 2, 33, 90, 209, 253, 273], "appli": [1, 2, 19, 156, 158, 165, 173, 174, 185, 186, 187, 209, 244, 246, 247, 253, 256, 261, 266, 273, 277, 279], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 33, 37, 42, 65, 68, 71, 75, 83, 87, 88, 91, 93, 95, 97, 99, 100, 102, 110, 111, 114, 115, 117, 121, 122, 123, 125, 127, 128, 133, 136, 145, 146, 153, 154, 165, 167, 173, 178, 184, 185, 186, 187, 189, 190, 191, 192, 208, 209, 212, 213, 215, 221, 223, 227, 228, 237, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271, 277, 279], "cl": [1, 2, 4, 8, 16, 26, 30, 33, 35, 37, 39, 41, 56, 68, 74, 84, 100, 111, 113, 117, 120, 125, 129, 130, 131, 135, 136, 142, 145, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 183, 185, 186, 187, 209, 211, 251, 256, 258, 260, 263, 265, 267], "q": [1, 33, 209, 244], "v": [1, 8, 16, 26, 30, 33, 41, 56, 68, 85, 100, 111, 116, 117, 129, 130, 131, 135, 136, 145, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 209, 211, 249, 251, 256, 260, 263, 265, 267, 276, 277], "75": [1, 33, 209], "lower_bound": [1, 2, 33, 209, 246], "lower": [1, 2, 25, 26, 33, 35, 43, 66, 86, 87, 88, 110, 114, 115, 148, 166, 167, 173, 178, 189, 192, 209, 210, 246, 254, 258, 263, 265], "bound": [1, 25, 26, 33, 43, 67, 155, 167, 178, 185, 186, 187, 189, 194, 209, 246, 263], "upper_bound": [1, 2, 33, 209, 246], "upper": [1, 25, 26, 33, 35, 43, 86, 87, 88, 110, 114, 115, 148, 166, 167, 178, 189, 192, 209, 244, 246, 263, 265], "should": [1, 6, 14, 25, 33, 35, 37, 39, 43, 152, 165, 209, 212, 213, 215, 244, 246, 247, 248, 249, 251, 254, 256, 258, 260, 261, 262, 265, 266, 270, 274], "true": [1, 2, 6, 8, 10, 15, 19, 26, 33, 34, 55, 65, 74, 75, 83, 86, 87, 88, 104, 118, 119, 121, 122, 123, 124, 125, 127, 141, 142, 154, 160, 161, 162, 165, 173, 174, 177, 190, 191, 192, 193, 197, 202, 209, 221, 222, 244, 251, 253, 258, 260, 265, 266, 267, 268, 274, 275, 276, 279], "No": [1, 6, 228, 229, 261, 266], "select": [1, 2, 152, 185, 187, 220, 242, 244, 246, 251, 258, 260, 263, 266, 268, 274, 275, 277], "see": [1, 2, 6, 8, 19, 35, 37, 202, 209, 211, 212, 213, 215, 216, 246, 247, 249, 251, 253, 254, 258, 260, 261, 262, 265, 266, 267, 270, 274, 277], "about": [1, 2, 6, 247, 251, 253, 257, 258, 260, 261, 265, 266, 274, 277], "actual": [1, 2, 25, 131, 251, 258, 260, 261, 266, 274], "minim": [1, 2, 251, 258, 260, 266, 274], "statu": [1, 2, 244, 251, 254, 258, 260, 261, 266, 274], "time": [1, 2, 6, 7, 9, 10, 26, 30, 33, 39, 40, 68, 75, 76, 90, 96, 97, 102, 109, 117, 128, 129, 130, 131, 132, 135, 136, 140, 147, 163, 175, 176, 177, 180, 188, 210, 216, 244, 246, 251, 256, 258, 260, 261, 263, 264, 266, 267, 270, 273, 274, 276, 277], "you": [1, 2, 249, 251, 257, 258, 259, 260, 261, 265, 266, 267, 270, 274, 278, 279], "look": [1, 2, 30, 46, 100, 125, 251, 258, 260, 266, 267, 274, 277], "summary_model": [1, 2, 244, 251, 258, 260, 266, 274, 277], "tabl": [1, 2, 55, 135, 156, 220, 242, 243, 244, 249, 251, 252, 256, 258, 260, 262, 263, 266, 271, 273, 274, 275, 276, 277], "gener": [1, 2, 6, 19, 56, 61, 69, 73, 132, 152, 153, 154, 155, 230, 232, 244, 246, 251, 253, 256, 258, 259, 260, 266, 269, 270, 274, 277], "summarize_modelfit_result": [1, 2, 244, 251, 258, 260, 266, 274], "minimization_success": [1, 2, 221, 251, 258, 260, 266, 274], "errors_found": [1, 2, 251, 258, 260, 266, 274], "pheno": [1, 8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 79, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 257, 263, 265, 267, 279], "phenobarb": [1, 135, 221, 263, 265], "scaled_model": [1, 2], "warnings_found": [1, 2, 251, 258, 260, 266, 274], "ofv": [1, 2, 48, 134, 200, 204, 212, 213, 215, 219, 220, 221, 244, 251, 258, 260, 266, 273, 274], "aic": [1, 2, 47, 204, 212, 213, 215, 244, 251, 258, 260, 266, 274], "bic": [1, 2, 48, 204, 212, 213, 215, 244, 246, 251, 258, 260, 266, 274, 277], "730": [1, 242, 256, 258], "894727": [1, 242, 256], "740": [1, 79, 96, 242, 253], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 221, 251, 258, 260, 266, 274], "estimation_runtim": [1, 2, 251, 258, 260, 266, 274], "_estim": [1, 258, 260, 266], "32": [1, 6, 57, 90, 95, 107, 202, 242, 243, 246, 253, 262, 264, 273, 276], "005818": [1, 256, 265], "121955": 1, "44555": [1, 256], "111053": [1, 256, 265], "201526": [1, 256, 265], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 256, 265], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 203, 219, 223, 224, 225, 226, 227, 228, 229, 231, 242, 244, 251, 256, 258, 260, 266, 271, 274, 277], "predict": [1, 2, 14, 19, 80, 81, 101, 104, 112, 133, 200, 201, 202, 219, 244, 251, 252, 258, 260, 266, 273, 274], "influenti": [1, 2, 200, 201, 220, 244, 251, 258, 260, 266, 274], "individu": [1, 2, 6, 19, 38, 55, 56, 57, 61, 71, 80, 81, 100, 101, 105, 106, 107, 109, 112, 133, 134, 145, 153, 154, 155, 193, 200, 201, 202, 219, 220, 244, 246, 251, 258, 260, 261, 266, 270, 273, 274, 278], "outlier": [1, 2, 201, 202, 220, 244, 251, 258, 260, 266, 274, 276], "summary_individuals_count": [1, 2, 251, 258, 260, 266, 274], "summarize_individuals_count_t": [1, 2, 244, 251, 258, 260, 266, 274], "parent_model": [1, 2, 19, 244, 251, 258, 260, 266, 274], "inf_select": [1, 2, 220, 251, 258, 260, 266, 274], "inf_param": [1, 2, 220, 251, 258, 260, 266, 274], "out_ob": [1, 2, 220, 251, 258, 260, 266, 274], "out_ind": [1, 2, 220, 251, 258, 260, 266, 274], "inf_outli": [1, 2, 220, 251, 258, 260, 266, 274], "differ": [1, 2, 3, 19, 24, 48, 219, 221, 242, 243, 244, 247, 251, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 270, 273, 274, 275, 277, 279], "statist": [1, 6, 56, 61, 186, 251, 253, 256, 258, 260, 263, 265, 266, 274], "summary_individu": [1, 244, 251, 258, 260, 266, 274], "summarize_individu": [1, 220, 244, 251, 258, 260, 266, 274], "outlier_count": [1, 219, 251, 258, 260, 266, 274], "dofv_vs_par": [1, 219, 251, 258, 260, 266, 274], "id": [1, 6, 10, 57, 75, 76, 90, 93, 95, 96, 97, 99, 107, 109, 135, 136, 140, 153, 202, 243, 244, 246, 251, 253, 256, 258, 260, 262, 263, 264, 265, 266, 267, 274, 276], "nan": [1, 2, 93, 194, 244, 251, 253, 256, 258, 260, 266, 273, 274, 275], "742852": 1, "000000": [1, 2, 43, 49, 50, 51, 58, 242, 251, 256, 258, 260, 264, 266, 274], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 26, 39, 57, 71, 78, 90, 93, 95, 96, 107, 148, 167, 178, 186, 202, 242, 243, 251, 253, 256, 257, 258, 260, 261, 262, 264, 266, 273, 274, 275, 276, 277, 279], "092658": 1, "55": [1, 2, 6, 57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 266, 273, 276], "6": [1, 6, 57, 79, 90, 95, 107, 109, 202, 242, 243, 251, 253, 256, 258, 260, 261, 262, 264, 265, 266, 273, 274, 275, 276, 279], "535711": 1, "175743": 1, "56": [1, 57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 276], "764710": 1, "576072": 1, "57": [1, 57, 90, 95, 99, 107, 153, 202, 242, 243, 253, 256, 262, 264, 276], "975589": 1, "539779": 1, "58": [1, 57, 90, 95, 99, 107, 109, 153, 202, 242, 243, 253, 256, 262, 264, 275, 276], "194798": 1, "775689": 1, "59": [1, 57, 90, 93, 95, 97, 99, 105, 107, 109, 153, 202, 242, 243, 253, 256, 262, 264, 266, 276], "11": [1, 2, 57, 77, 78, 80, 90, 93, 95, 96, 107, 202, 242, 243, 251, 253, 256, 258, 261, 262, 264, 265, 266, 273, 275, 276, 277], "175577": 1, "462889": 1, "predicted_dofv": [1, 219, 220, 251, 258, 260, 266, 274], "predicted_residu": [1, 219, 220, 251, 258, 260, 266, 274], "118": [1, 153, 244, 256], "fulli": [2, 277], "best": [2, 244, 251, 258, 260, 261, 266, 274, 277], "dataset": [2, 10, 11, 12, 19, 44, 56, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 92, 93, 96, 98, 99, 103, 105, 106, 107, 109, 116, 126, 132, 137, 148, 152, 159, 188, 196, 210, 213, 243, 244, 246, 249, 256, 259, 260, 265, 276, 278], "combin": [2, 4, 71, 118, 119, 124, 156, 158, 174, 184, 214, 244, 246, 251, 256, 258, 261, 274, 277], "modelsearch": [2, 210, 215, 219, 244, 277], "ruvsearch": [2, 210, 216, 217, 244, 277], "covsearch": [2, 211, 244, 277], "run_amd": [2, 244, 279], "dataset_path": 2, "modeltyp": [2, 210, 246], "pk_oral": [2, 210, 246], "categor": [2, 6, 35, 210, 244, 246, 251, 253, 256, 277, 279], "sex": [2, 247, 251, 270, 277], "ag": [2, 6, 251, 275, 277], "occas": [2, 39, 210, 213, 244, 246, 260, 265], "visi": [2, 260], "c": [2, 9, 186, 245, 250, 251, 256, 260, 261, 265, 267, 274, 279], "specifi": [2, 6, 30, 37, 72, 76, 86, 88, 137, 139, 140, 148, 156, 158, 172, 174, 192, 244, 246, 260, 261, 263, 265, 279], "oral": [2, 277], "drug": [2, 270], "iiv": [2, 18, 23, 27, 32, 37, 39, 42, 48, 71, 100, 125, 145, 165, 184, 210, 212, 213, 215, 244, 246, 251, 259, 260, 277], "we": [2, 247, 249, 251, 256, 257, 259, 261, 265, 267, 270, 279], "our": [2, 247, 249, 250, 261, 270], "object": [2, 3, 4, 6, 7, 9, 10, 14, 19, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 43, 44, 45, 46, 47, 48, 53, 54, 60, 64, 65, 66, 67, 69, 70, 73, 74, 75, 76, 83, 86, 87, 88, 93, 101, 108, 110, 112, 114, 115, 116, 129, 131, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 156, 159, 161, 162, 166, 167, 170, 174, 176, 178, 182, 183, 188, 189, 190, 191, 192, 197, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 242, 244, 246, 248, 251, 253, 254, 258, 260, 261, 263, 265, 266, 267, 270, 274, 277], "build": [2, 210, 245, 246, 254, 265, 277], "pk_iv": [2, 210, 246], "cl_init": [2, 210, 246], "popul": [2, 19, 30, 43, 79, 80, 81, 101, 112, 117, 194, 210, 244, 246, 275], "clearanc": [2, 33, 84, 210, 244, 246, 251, 260, 267], "01": [2, 18, 27, 35, 173, 194, 210, 211, 246, 251, 265, 273, 275], "vc_init": [2, 210, 246], "central": [2, 7, 8, 9, 16, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 210, 246, 249, 254, 263, 265], "compart": [2, 6, 8, 9, 16, 40, 41, 91, 92, 102, 147, 149, 172, 177, 210, 244, 246, 266, 277], "volum": [2, 33, 41, 85, 210, 244, 246, 251, 260, 261], "mat_init": [2, 210, 246], "absorpt": [2, 111, 126, 157, 163, 175, 177, 180, 210, 215, 219, 244, 246, 258, 260, 266, 277], "search_spac": [2, 210, 215, 244, 246, 266, 277], "mfl": [2, 210, 211, 219, 244, 246, 251, 266], "lloq": [2, 148, 210, 246], "quantif": [2, 148, 210, 246], "loq": [2, 148, 210, 246], "data": [2, 6, 19, 32, 77, 78, 79, 80, 81, 82, 95, 104, 135, 136, 140, 148, 156, 158, 160, 174, 194, 210, 220, 242, 244, 253, 256, 259, 260, 261, 263, 265, 267, 270, 277, 279], "found": [2, 8, 26, 218, 242, 243, 244, 249, 252, 255, 256, 258, 260, 261, 264, 266, 273, 274, 277, 278, 279], "datainfo": [2, 19, 76, 137, 159, 196, 244, 277, 278], "bodi": [2, 6, 10, 247, 253, 261, 270], "weight": [2, 6, 10, 82, 179, 195, 253, 270, 274], "correspond": [2, 14, 171, 243, 251, 261, 276, 277], "file": [2, 10, 19, 28, 46, 72, 94, 135, 137, 138, 139, 140, 196, 197, 205, 206, 222, 223, 224, 225, 227, 228, 229, 231, 244, 246, 249, 251, 257, 258, 259, 260, 261, 263, 266, 267, 269, 270, 274, 277, 278], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 226, 231, 244, 248, 251, 253, 261, 263, 265], "model_typ": 2, "elimin": [2, 111, 121, 122, 123, 127, 164, 168, 169, 181, 244, 246, 266, 277], "vc": [2, 41, 149, 251, 258], "mat": [2, 8, 42, 163, 175, 180, 243, 244, 245, 250, 251, 258, 265, 267, 274], "proport": [2, 37, 118, 119, 124, 152, 156, 158, 173, 174, 244, 246], "step": [2, 15, 19, 34, 36, 45, 141, 144, 161, 162, 211, 221, 244, 246, 249, 251, 257, 258, 260, 261, 266, 270, 274, 279], "foce": [2, 14, 15, 34, 36, 141, 161, 162, 246], "interact": [2, 14, 15, 34, 36, 135, 141, 161, 162, 244, 247, 261, 263, 265, 270, 277, 279], "specif": [2, 14, 19, 26, 45, 76, 152, 198, 244, 246, 253, 261, 263, 266, 270, 277], "support": [2, 8, 14, 30, 36, 37, 53, 54, 69, 77, 78, 80, 81, 82, 101, 108, 112, 157, 161, 162, 175, 211, 233, 244, 246, 251, 253, 254, 259, 261, 263, 265, 266, 267, 269, 270, 272, 277, 279], "nonmem": [2, 14, 68, 69, 76, 105, 106, 107, 171, 182, 214, 244, 245, 248, 249, 257, 259, 263, 264, 265, 270, 277, 278], "cmt": [2, 92, 244, 266], "rate": [2, 6, 8, 9, 17, 41, 126, 157, 163, 175, 177, 180, 244, 246, 277], "via": [2, 244, 246, 249, 257, 259, 263, 265, 267, 277, 279], "exclud": [2, 104, 219, 258, 260, 261, 266], "pleas": [2, 248, 249, 257, 261, 277, 279], "featur": [2, 249, 251, 258, 259, 260, 261, 274, 278, 279], "languag": [2, 89, 135, 247, 251, 254, 261, 266], "how": [2, 3, 154, 212, 215, 244, 246, 247, 249, 251, 253, 257, 258, 260, 261, 265, 266, 267, 275, 278], "defin": [2, 8, 61, 104, 116, 126, 131, 136, 251, 254, 261, 265, 276, 277], "depend": [2, 6, 19, 30, 56, 71, 156, 158, 174, 244, 248, 253, 258, 267, 277, 279], "zo": [2, 215, 219, 244, 246, 266, 277], "seq": [2, 246, 266, 277], "fo": [2, 14, 36, 161, 162, 244, 246, 266, 270, 277], "mm": [2, 244, 246, 266, 277], "mix": [2, 39, 48, 123, 169, 204, 244, 254, 257, 260, 263, 266, 270, 277], "lagtim": [2, 157, 175, 266, 277], "transit": [2, 8, 172, 177, 244, 246, 266, 277], "peripher": [2, 8, 41, 149, 172, 215, 219, 244, 246, 266, 277], "iv": [2, 210, 246, 277], "none": [2, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 39, 43, 46, 48, 56, 61, 70, 71, 73, 77, 78, 79, 80, 81, 82, 94, 133, 137, 139, 140, 145, 146, 148, 152, 153, 154, 155, 156, 158, 165, 171, 173, 174, 184, 185, 186, 187, 196, 199, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 223, 224, 232, 236, 244, 246, 253, 256, 258, 260, 265, 266, 277], "null": [2, 253, 258, 260, 266, 277, 279], "yield": [2, 132, 152], "workflow": [2, 3, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 244, 257, 261, 270, 277], "want": [2, 247, 249, 258, 259, 260, 261, 265, 266, 267, 269], "desir": [2, 228, 229], "subset": [2, 67, 153], "algorithm": [2, 211, 212, 215, 219, 244, 246, 270, 277, 279], "six": 2, "below": [2, 249, 258, 260, 261, 266, 274], "detail": [2, 209, 211, 212, 213, 215, 216, 261, 266, 273, 274, 277, 278], "regard": [2, 261, 266], "subhead": 2, "distribut": [2, 18, 23, 27, 39, 41, 56, 61, 71, 111, 131, 149, 153, 154, 155, 184, 187, 213, 233, 242, 244, 246, 256, 261, 263, 266, 273, 277, 278], "term": [2, 156, 244, 258, 261, 265], "keep": [2, 14, 25, 152, 223, 244, 247, 254, 258, 261], "well": [2, 56, 251, 253, 258, 260, 261, 265, 266, 273, 274, 277, 278], "iov": [2, 27, 39, 100, 125, 146, 213, 244, 246, 273, 277], "explain": [2, 251, 261, 270, 277], "ruv": [2, 165, 246], "power": [2, 35, 173, 246, 261, 270, 271, 273, 274], "vari": [2, 128, 176, 216, 244, 246, 274], "identifi": [2, 6, 32, 251, 253, 258, 261, 273, 277], "effect": [2, 35, 37, 48, 120, 125, 142, 145, 173, 204, 211, 244, 246, 254, 257, 261, 263, 270, 275, 277, 278], "option": [2, 14, 19, 27, 35, 37, 39, 45, 70, 71, 77, 78, 80, 81, 82, 152, 204, 211, 237, 242, 244, 246, 251, 253, 258, 260, 261, 263, 266, 278, 279], "reduced_stepwis": [2, 219, 244, 266, 277], "iiv_strategi": [2, 212, 215, 244, 246, 258, 266, 277], "absorption_delai": [2, 215, 244, 266, 277], "rank_typ": [2, 204, 212, 213, 215, 246, 258, 260, 266, 277], "cutoff": [2, 176, 200, 201, 202, 204, 212, 213, 215, 244, 246, 258, 260, 266, 277], "brute_forc": [2, 212, 244, 258], "fullblock": [2, 212, 215, 244, 258, 266], "tri": [2, 246, 266], "list_of_paramet": [2, 37, 39, 213, 246, 260], "random": [2, 3, 13, 18, 19, 23, 27, 39, 48, 56, 61, 73, 113, 116, 125, 153, 154, 155, 244, 246, 254, 256, 260, 273, 278], "group": [2, 26, 32, 132, 133, 152, 216, 246, 259, 274], "p_valu": [2, 216, 246, 274], "05": [2, 41, 49, 50, 51, 52, 58, 59, 62, 63, 149, 211, 216, 242, 246, 251, 263, 264, 273, 274, 275], "skip": [2, 216, 246, 251, 274], "p_forward": [2, 211, 246, 251], "p_backward": [2, 211, 246, 251], "max_step": [2, 211, 246, 251, 279], "scm": [2, 211, 244, 251, 270, 272, 279], "forward": [2, 211, 244, 246, 251, 275, 279], "backward": [2, 211, 221, 244, 246, 251, 275], "variou": [2, 68, 219, 220, 244, 246, 247, 249, 251, 254, 258, 260, 266, 270, 274], "access": [2, 251, 253, 258, 260, 261, 263, 266, 267, 274, 277, 279], "json": [2, 10, 28, 206, 207, 222, 244, 246, 251, 253, 258, 260, 265, 266, 274, 277], "format": [2, 69, 246, 248, 251, 254, 257, 258, 259, 260, 261, 263, 265, 266, 269, 274], "summary_tool": [2, 244, 251, 258, 260, 266, 274], "candid": [2, 211, 215, 244, 246, 251, 274, 277], "compar": [2, 204, 242, 244, 251, 270, 274], "rank": [2, 204, 212, 213, 215, 244, 246, 251, 274], "selected_model": 2, "modelsearch_run1": [2, 244], "iivsearch_run35": 2, "vp1": [2, 41, 149, 172, 265], "best_ruvsearch_2": [2, 274], "time_varying2": [2, 274], "iiv_on_ruv": [2, 244, 271, 273, 274], "iovsearch_run30": 2, "etai5": 2, "covsearch_run6": 2, "exp": [2, 30, 35, 37, 135, 185, 186, 187, 211, 251, 263, 265, 267], "dofv": [2, 200, 201, 219, 242, 243, 244, 251, 271, 273, 274], "n_param": [2, 274], "d_param": [2, 274], "2097": 2, "977183": 2, "2240": 2, "703380": 2, "142": 2, "726197": 2, "2278": 2, "644915": 2, "37": [2, 57, 90, 95, 97, 107, 202, 242, 243, 251, 253, 260, 262, 264, 276], "941535": 2, "2436": 2, "296090": 2, "157": 2, "651175": 2, "15": [2, 57, 78, 90, 95, 107, 202, 242, 243, 251, 253, 258, 260, 261, 262, 264, 265, 275, 276], "2571": 2, "507991": 2, "135": [2, 109, 253, 264, 265, 273], "211901": 2, "16": [2, 6, 57, 78, 90, 95, 107, 174, 187, 202, 242, 243, 251, 253, 258, 261, 262, 264, 265, 271, 273, 274, 275, 276], "2590": 2, "767668": 2, "259677": 2, "2597": 2, "989257": 2, "221589": 2, "17": [2, 57, 77, 78, 80, 81, 90, 93, 95, 107, 109, 202, 242, 243, 251, 253, 258, 260, 261, 262, 264, 265, 266, 271, 273, 276], "base_model": [2, 204], "qp1": [2, 41, 149, 172, 244, 265], "iivsearch_run1": 2, "covsearch_run11": 2, "cat": [2, 35, 251, 277], "covsearch_run12": 2, "covsearch_run13": 2, "covsearch_run14": 2, "covsearch_run15": 2, "fals": [2, 6, 8, 13, 14, 16, 18, 23, 25, 26, 28, 32, 34, 35, 36, 43, 55, 65, 67, 74, 75, 83, 86, 87, 88, 104, 110, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 141, 142, 152, 154, 160, 166, 167, 173, 177, 178, 189, 191, 192, 193, 194, 196, 202, 221, 222, 224, 236, 243, 251, 253, 263, 265, 267, 268, 275, 276], "2081": 2, "2220": 2, "2280": 2, "522613": 2, "2238": 2, "872": 2, "001789": 2, "1518": 2, "310447": 2, "2591": 2, "679149": 2, "2557": 2, "406757": 2, "767683": 2, "765222": 2, "767674": 2, "2556": 2, "767708": 2, "2061": 2, "030230": 2, "2189": 2, "928952": 2, "2187": 2, "799687": 2, "1476": 2, "416540": 2, "2510": 2, "871505": 2, "599113": 2, "957578": 2, "2509": 2, "960030": 2, "960064": 2, "pop_cl_estim": [2, 251, 274], "07": [2, 49, 50, 51, 52, 58, 59, 62, 63, 242, 258, 260, 263, 264, 273, 275], "25": [2, 57, 77, 80, 81, 90, 95, 97, 107, 202, 242, 243, 251, 253, 258, 262, 264, 266, 271, 273, 274, 276], "4279": 2, "73": [2, 109, 251, 253, 264, 274, 277, 279], "6465": 2, "74": 2, "65": [2, 6], "83": [2, 273], "08": [2, 49, 51, 52, 59, 62, 260, 263, 264], "36": [2, 57, 90, 95, 107, 202, 242, 243, 251, 253, 258, 260, 262, 264, 266, 273, 276], "78": 2, "86": 2, "48": [2, 57, 90, 95, 97, 107, 202, 242, 243, 251, 253, 260, 262, 264, 274, 275, 276], "35": [2, 57, 90, 95, 107, 202, 242, 243, 251, 253, 260, 262, 264, 274, 276], "pop_etai5wt_estim": 2, "pop_matage_estim": [2, 251], "pop_matsex_estim": [2, 251], "pop_matwt_estim": [2, 251], "pop_vcage_estim": [2, 251], "pop_vcsex_estim": [2, 251], "392976": 2, "pop_vcwt_estim": [2, 251], "pop_vp1age_estim": 2, "007563": 2, "pop_vp1sex_estim": 2, "pop_vp1wt_estim": 2, "001": [2, 35, 67, 194, 265, 275], "105": [2, 274], "dbic": [2, 244, 258, 260, 266], "128": [2, 6], "898722": 2, "iivsearch_run4": 2, "21": [2, 57, 77, 80, 90, 95, 107, 202, 242, 243, 251, 253, 256, 262, 264, 271, 273, 276], "611092": 2, "iivsearch_run5": 2, "572737": 2, "iivsearch_run2": 2, "929719": 2, "summary_error": [2, 251, 258, 260, 266], "summarize_error": [2, 244, 251, 258, 260, 266], "categori": [2, 6, 35, 39, 136, 218, 246, 251, 258, 260, 265, 266, 277], "error_no": [2, 251, 258, 260, 266], "2022": [2, 258, 260, 261, 266, 277], "225": 2, "messag": [2, 226, 244, 246, 251, 258, 260, 266], "success": [2, 244, 247, 251, 258, 260], "nhowev": 2, "problem": [2, 135, 140, 244, 258, 260, 261, 262, 263, 265, 267], "occur": [2, 151, 258, 260, 261, 279], "WITH": [2, 258, 260, 261], "THE": [2, 258, 260, 261], "page": [3, 243, 245, 248, 249, 266, 267], "public": [3, 254], "modul": [3, 8, 244, 248, 263, 265, 269, 279], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 244, 253, 257, 261, 263, 265, 277], "relat": [3, 223, 227, 228, 244, 247, 275], "statement": [3, 4, 8, 16, 19, 24, 33, 35, 37, 38, 39, 41, 42, 68, 117, 129, 130, 131, 143, 145, 149, 150, 156, 157, 158, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 180, 181, 183, 185, 186, 187, 195, 244, 246, 251, 261, 265, 270, 278], "transform": [3, 19, 156, 158, 160, 174, 185, 186, 187, 244, 246, 257, 259, 267, 273, 278], "manipul": [3, 26, 263, 265, 267], "built": [3, 129, 246, 249, 259], "run": [3, 71, 133, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 227, 231, 242, 243, 244, 252, 257, 259, 261, 262, 264, 269, 270, 273, 275, 276, 278, 279], "api_model": 3, "api_tool": 3, "packag": [3, 246, 248, 254, 257, 259, 261, 268, 270, 279], "express": [4, 5, 7, 8, 9, 10, 16, 17, 18, 23, 27, 30, 37, 53, 54, 56, 79, 91, 101, 102, 108, 112, 116, 156, 158, 173, 174, 182, 244, 246, 247, 251, 261, 265, 270, 276], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 247, 249, 259, 261, 263], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 204, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 244, 256, 258, 261, 262, 263, 265, 266, 267, 268, 273, 274, 275], "represent": [4, 16, 232, 253, 257, 263, 265, 267], "togeth": [4, 27, 157, 175, 249, 254, 256, 262, 274, 279], "sympi": [4, 6, 8, 16, 18, 23, 27, 30, 33, 56, 79, 108, 116, 254, 263, 270], "str": [4, 6, 7, 8, 10, 18, 23, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 43, 48, 56, 69, 70, 74, 75, 79, 87, 89, 94, 100, 111, 113, 116, 120, 125, 129, 132, 134, 137, 138, 139, 140, 142, 145, 146, 152, 156, 158, 161, 165, 170, 171, 173, 174, 176, 184, 185, 186, 187, 190, 191, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 241, 244], "expr": [4, 9, 27, 30, 33, 108, 182], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 36, 135, 140, 161, 162, 223, 224, 225, 226, 227, 228, 229, 231, 243, 244, 246, 251, 254, 261, 263, 265, 270, 277, 279], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30], "free": [4, 5, 6, 7, 8, 16, 17, 18, 19, 23, 27, 30, 247, 261, 270], "note": [4, 6, 25, 68, 69, 93, 105, 106, 107, 221, 222, 223, 227, 228, 242, 253, 258, 260, 264, 265, 267, 275, 279], "hand": [4, 8, 16, 56], "side": [4, 8, 16, 56, 160], "pop_cl": 4, "eta_cl": [4, 37, 39, 267], "rhs_symbol": [4, 8, 16, 29], "classmethod": [4, 5, 7, 17, 18, 23, 25, 27, 28, 224, 226], "sub": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30, 263], "substitut": [4, 5, 7, 8, 16, 17, 18, 23, 27, 29, 30, 261, 263, 265], "dict": [4, 5, 10, 16, 17, 18, 23, 26, 27, 30, 45, 60, 77, 78, 80, 81, 82, 86, 88, 91, 102, 151, 166, 167, 178, 192, 223, 227, 228, 237, 253, 263], "old": [4, 30, 151, 244, 273], "new": [4, 6, 9, 10, 14, 19, 25, 26, 27, 30, 37, 39, 42, 43, 69, 70, 73, 74, 83, 86, 87, 88, 151, 152, 156, 158, 165, 166, 170, 173, 174, 191, 192, 194, 233, 246, 247, 249, 253, 261, 266, 269, 273, 274, 277, 278], "pair": [4, 5, 8, 17, 18, 23, 27, 30, 35, 66, 219], "return": [4, 6, 8, 9, 10, 15, 16, 19, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 233, 236, 237, 244, 261], "updat": [4, 9, 10, 19, 26, 30, 193, 194, 196, 244, 246, 249, 259, 261, 266, 267, 270, 274, 278], "b": [4, 261, 266], "amount": [5, 6, 7, 8, 16, 17, 244, 253, 263], "dose": [5, 6, 7, 8, 9, 16, 17, 40, 83, 91, 96, 97, 104, 126, 147, 176, 244, 265, 278], "amt": [5, 7, 8, 10, 16, 17, 30, 33, 41, 68, 75, 76, 90, 97, 117, 129, 130, 131, 135, 136, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 253, 263, 265, 267], "dictionari": [5, 10, 14, 17, 18, 23, 26, 27, 28, 31, 77, 78, 80, 81, 82, 91, 102, 152, 166, 167, 178, 223, 227, 228, 237, 263], "unknown": [6, 253], "unit": [6, 116], "ratio": [6, 211, 216, 244, 246, 253, 274], "datatyp": [6, 137], "float64": [6, 10, 55, 62, 63, 66, 79, 80, 81, 82, 97, 109, 253, 263, 264, 265], "descriptor": [6, 10], "colum": 6, "measur": [6, 247, 253, 261], "bool": [6, 19, 25, 28, 32, 33, 35, 43, 55, 65, 67, 74, 75, 83, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 152, 154, 165, 173, 174, 177, 193, 194, 196, 197, 209, 221, 222, 224, 236], "discret": [6, 253, 260], "bar": [6, 256], "panda": [6, 10, 244, 254, 270], "dtype": [6, 10, 55, 60, 62, 63, 66, 67, 79, 80, 81, 82, 96, 97, 107, 109, 253, 263, 264, 265], "nomin": [6, 253], "ordin": [6, 253], "rang": [6, 28, 277], "na": 6, "int8": 6, "sign": [6, 186, 261], "bit": 6, "127": [6, 258], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 253], "147": 6, "483": 6, "648": [6, 242], "647": [6, 242, 258], "int64": [6, 107, 253], "64": 6, "223": [6, 252], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 57, 78, 90, 95, 107, 202, 242, 243, 251, 253, 258, 262, 264, 271, 273, 276], "446": 6, "744": [6, 79, 96, 253, 264], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 261], "float": [6, 33, 37, 42, 43, 47, 48, 66, 148, 155, 173, 176, 200, 201, 202, 204, 209, 210, 211, 212, 213, 215, 216, 244], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 76, 188, 244, 246, 263], "tran": [6, 76, 188, 244, 246, 263], "date": [6, 76, 188, 244, 261, 279], "common": [6, 35, 61, 237, 261, 265, 278], "birth": 6, "human": [6, 28, 270], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 253, 270], "concentr": [6, 93, 270], "substanc": 6, "blood": 6, "subject": [6, 14, 90, 99, 220, 261, 278], "uniqu": [6, 32, 46, 74, 152, 223, 233, 244, 246, 253, 277], "interv": [6, 253, 254], "ration": 6, "max": [6, 35, 168, 169, 242, 253], "datafram": [6, 15, 26, 28, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 77, 78, 80, 81, 82, 90, 93, 95, 132, 133, 137, 152, 153, 154, 155, 193, 200, 201, 202, 204, 218, 219, 220, 221, 226, 244, 251, 253, 270], "idv": [6, 10, 176, 253, 273], "independ": [6, 253, 261, 268, 273, 277], "dv": [6, 10, 30, 68, 75, 76, 90, 109, 117, 129, 133, 135, 136, 140, 156, 158, 168, 169, 174, 244, 253, 263, 265, 267, 276], "infus": [6, 126, 175, 180, 265], "addit": [6, 35, 37, 45, 74, 83, 118, 119, 124, 156, 158, 174, 244, 246, 251, 253, 261, 273, 274, 277], "interdos": 6, "ss": 6, "steadi": [6, 244], "state": [6, 26, 35, 244, 261, 275], "event": [6, 98, 188, 244, 247, 261], "mdv": [6, 103, 244], "miss": [6, 90, 95, 244], "yet": [6, 277], "exactli": 6, "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 165, 246, 261, 265, 270], "physic": [6, 116, 247, 253, 261], "recogn": [6, 171, 247, 261, 267], "without": [6, 9, 53, 54, 77, 78, 80, 81, 82, 101, 108, 112, 152, 225, 242, 244, 246, 249, 254, 261, 263], "static": [6, 10, 19], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 27, 28, 30, 69, 117, 131, 177, 244, 246, 277], "convert_pd_dtype_to_datatyp": 6, "deriv": [6, 10, 13, 14, 16, 18, 23, 25, 27, 116, 244, 249, 251], "kwarg": [6, 10, 13, 14, 19, 28, 36, 161, 198, 209, 211, 212, 213, 214, 215, 216, 217, 228, 229, 244], "properti": [6, 14, 25, 261, 263], "is_categor": 6, "check": [6, 19, 25, 27, 65, 66, 67, 118, 119, 120, 121, 122, 123, 124, 126, 127, 244, 248, 267, 277, 279], "is_numer": 6, "col1": 6, "col2": 6, "lag_tim": [7, 9], "bioavail": [7, 91, 244], "compartment": [7, 8, 16, 30, 244, 246, 263], "system": [7, 8, 9, 14, 16, 24, 30, 53, 54, 56, 77, 78, 80, 81, 82, 101, 108, 112, 126, 183, 227, 244, 246, 248, 249, 261, 263, 267, 278], "lag": [7, 9, 40, 102, 147, 244], "enter": [7, 261], "fraction": [7, 155, 242, 256], "bolu": [7, 8, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 177, 181, 183, 246, 263], "comp": [7, 8, 244], "depot": [7, 8, 9, 163, 175, 177, 244, 265, 277], "alag": [7, 244], "a_centr": [7, 8, 16, 30, 68, 117, 129, 168, 169, 174, 181, 263], "builder": [8, 9], "odesystem": [8, 16, 30, 244], "od": [8, 14, 16, 24, 30, 42, 53, 54, 56, 77, 78, 80, 81, 82, 101, 108, 112, 126, 171, 183, 244, 246, 263, 278], "descib": 8, "cb": [8, 9], "compartmentalsystembuild": 8, "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 277], "k21": [8, 277], "vector": [8, 16, 18, 153, 154, 155, 243, 256, 263], "load_example_model": [8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 244, 257, 279], "pprint": [8, 16, 108], "ode_system": [8, 16, 30, 41, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 244, 263], "a_output": [8, 16, 30, 263], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 232, 261], "compartment_nam": [8, 16], "compartmental_matrix": [8, 263], "matrix": [8, 18, 27, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 66, 153, 154, 155, 243, 244, 246, 256, 263], "set_first_order_absorpt": [8, 42, 157, 175, 180, 244, 265], "dosing_compart": 8, "receiv": [8, 261], "output_compart": 8, "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 67, 126, 127, 131, 175, 180, 181, 244, 260, 266, 268, 277], "set_zero_order_absorpt": [8, 157, 163, 175, 244, 265, 279], "atom": 8, "http": [8, 243, 248, 253, 254, 256, 257, 261, 274], "doc": [8, 249], "org": [8, 243, 245, 248, 253, 256, 261, 274], "latest": [8, 244, 254, 257], "core": [8, 257, 263, 265], "html": [8, 72, 254, 261, 265], "basic": [8, 28, 182, 244, 248, 251, 253, 261, 267, 277, 278], "find_compart": 8, "its": [8, 25, 30, 67, 131, 194, 219, 244, 246, 248, 251, 253, 254, 257, 259, 261, 263, 279], "find_depot": 8, "out": [8, 27, 65, 194, 244, 261, 263, 269, 279], "find_transit_compart": 8, "chain": [8, 265], "singl": [8, 10, 25, 27, 184, 188, 199, 214, 218, 221, 223, 244, 246, 254, 256, 261, 265, 277], "distinguish": [8, 261], "get_compartment_inflow": 8, "go": [8, 214, 221, 244, 253, 261], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 196, 197, 223, 227, 228, 246], "ka": [8, 9, 16, 38, 244, 260], "get_n_connect": 8, "connect": [8, 19, 223, 225, 246, 253, 261, 270, 277, 278], "int": [8, 30, 33, 36, 45, 56, 61, 67, 73, 96, 105, 106, 144, 152, 153, 154, 155, 156, 161, 162, 172, 177, 211, 214, 216, 218], "to_compartmental_system": [8, 16, 24, 30], "to_explicit_system": [8, 16, 24, 30, 263], "skip_output": [8, 16], "explicit": [8, 16, 30, 39, 244, 246, 247, 251, 260, 263, 277], "boolean": [8, 25, 26, 83, 87, 88, 152, 160, 165, 191, 192, 200, 201, 202, 253], "leav": [8, 265], "result": [8, 14, 19, 27, 65, 71, 72, 91, 93, 102, 130, 134, 137, 148, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 227, 228, 229, 231, 233, 236, 244, 247, 249, 259, 261, 267, 269, 270, 272, 278], "explicitodesystem": [8, 244, 263], "equat": [8, 16, 56, 263], "condit": [8, 16, 244, 256, 261, 263, 274], "dt": [8, 16, 30, 263], "compartmentalsystem": [9, 16, 244, 263], "newli": [9, 27, 260], "move_dos": 9, "move": [9, 194, 244], "anoth": [9, 19, 30, 233, 265], "remove_compart": 9, "remove_flow": 9, "set_dos": 9, "set_lag_tim": [9, 244], "force_absolute_path": 10, "sequenc": [10, 15, 26, 27, 30, 71], "metadata": [10, 223, 224, 227, 228, 231, 244], "index": [10, 26, 27, 28, 30, 36, 45, 56, 61, 66, 67, 97, 109, 144, 161, 162, 218, 221, 243, 244, 251, 253, 256, 257, 263, 275, 279], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": 10, "idv_column": 10, "apgr": [10, 30, 33, 35, 68, 75, 76, 90, 95, 104, 117, 120, 129, 130, 131, 135, 136, 190, 211, 253, 256, 263, 265, 267, 273], "fa1": [10, 75, 76, 90, 135, 136, 253, 263, 265], "fa2": [10, 75, 76, 90, 135, 136, 253, 263], "replac": [10, 27, 152, 183, 244, 246, 254, 267], "example_model": 10, "dta": [10, 135, 263, 265, 267], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 244, 261, 265], "read_json": 10, "read": [10, 137, 138, 139, 140, 205, 206, 210, 222, 223, 227, 228, 244, 248, 253, 257, 259, 261, 269, 270, 272, 277, 278], "set_column": 10, "col": 10, "exist": [10, 30, 35, 45, 46, 74, 94, 96, 223, 224, 225, 244, 246, 248, 251, 253, 260, 277], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 28, 253, 265], "recover": 12, "issu": [12, 22, 244, 249, 259, 279], "hashabl": 13, "level": [13, 18, 23, 27, 31, 32, 100, 125, 244, 246, 253, 259, 263, 265, 270, 275, 277], "variabilitylevel": 13, "parameter_nam": [13, 27, 87, 182, 189, 191, 244, 248, 265, 267], "definit": [13, 14, 19, 30, 57, 154, 155, 202, 244, 246, 251, 256, 261, 263, 277], "varianc": [13, 18, 23, 27, 55, 56, 61, 165, 194, 258, 263, 265, 277], "abstract": [13, 24, 29, 227, 231, 243, 245, 254, 259, 263], "evalf": [13, 18, 23], "get_covari": [13, 18, 23, 27], "name1": [13, 18, 23, 134], "name2": [13, 18, 23, 134], "get_vari": [13, 18, 23], "latex_str": [13, 18, 23], "align": [13, 18, 23, 263, 265], "cov": [14, 15, 27, 34, 35, 36, 49, 56, 57, 59, 61, 62, 141, 154, 161, 162, 243, 244, 249, 256, 265], "evalu": [14, 36, 77, 78, 79, 80, 81, 82, 161, 162, 221, 242, 244, 270, 273, 276], "maximum_evalu": 14, "laplac": [14, 36, 161, 162, 244, 246], "isampl": [14, 36, 45, 161, 244], "niter": [14, 36, 45, 161, 244], "auto": [14, 15, 244], "keep_every_nth_it": [14, 15, 244], "residu": [14, 27, 82, 114, 201, 202, 219, 244, 259, 274, 276, 277, 279], "solver": [14, 171, 244, 246], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 45, 161, 277], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 69, 228, 229, 246, 248, 249, 251, 254, 259, 261, 263, 265, 269], "let": [14, 19, 244, 251, 256, 265, 267, 277], "uncertainti": [14, 56, 57, 61, 153, 154, 155, 244, 246, 256, 264], "epsilon": [14, 27, 53, 54, 77, 78, 136, 165, 173, 179, 195, 244, 246, 254], "calcul": [14, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 79, 93, 204, 242, 243, 244, 256, 258, 259, 260, 266, 278], "eta": [14, 27, 30, 33, 35, 37, 39, 53, 54, 55, 57, 68, 71, 77, 78, 80, 101, 108, 113, 117, 129, 130, 131, 135, 136, 140, 145, 146, 153, 165, 184, 185, 186, 187, 244, 246, 251, 254, 256, 258, 260, 263, 264, 267, 273, 277, 278, 279], "preserv": [14, 27, 261], "comput": [14, 249, 251, 261], "sampl": [14, 27, 73, 152, 153, 154, 155, 256], "similar": [14, 242, 261, 266, 274, 279], "em": 14, "everi": [14, 253, 261], "nth": 14, "iter": [14, 15, 30, 56, 132, 152, 154, 244, 271, 274], "laplacian": 14, "solv": [14, 244], "advan": [14, 171, 244], "cvode": [14, 171, 246], "advan14": [14, 171, 246], "dgear": [14, 171, 246], "advan8": [14, 171, 246], "dverk": [14, 171, 246], "advan6": [14, 171, 246], "ida": [14, 171, 246], "advan15": [14, 171, 246], "lsoda": [14, 171, 246], "advan13": [14, 171, 246, 265], "lsodi": [14, 171, 246], "advan9": [14, 171, 246], "absolut": [14, 66, 244, 261], "toler": 14, "supported_method": 14, "ITS": [14, 36, 161, 162, 244, 246, 260, 266], "impmap": [14, 36, 161, 162, 244, 246], "imp": [14, 36, 161, 162, 244, 246], "saem": [14, 36, 161, 162, 244, 246], "bay": [14, 161, 162, 246], "to_datafram": [15, 26, 226], "overview": [15, 226, 242, 246, 255, 275], "pd": [15, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 80, 81, 82, 90, 92, 93, 95, 96, 97, 98, 103, 107, 109, 132, 133, 134, 137, 152, 153, 154, 155, 193, 194, 200, 201, 202, 204, 218, 219, 220, 221, 226, 244, 253], "estimation_step": [15, 19, 34, 36, 45, 141, 144, 161, 162, 244], "doctest": [15, 249], "ellipsi": 15, "ic": 16, "explicitli": [16, 246, 260, 261], "differenti": [16, 263], "a_depot": 16, "k": [16, 56, 243, 244, 249, 251, 256], "eq1": 16, "eq2": 16, "ordinari": [16, 263], "durat": [17, 175, 180], "mutual": [17, 260, 277], "exclus": [17, 261, 277], "d1": [17, 244], "r1": 17, "symbolc": 17, "dur": 17, "joint": [18, 27, 39, 71, 184, 256, 260, 263, 278], "omega_cl": [18, 23, 27], "omega_v": [18, 27], "corr_cl_v": [18, 27], "omega_cl_v": [18, 27], "dist": [18, 23, 27, 244, 249], "iiv_cl": [18, 23, 27, 267], "iiv_v": [18, 27, 265], "itself": [18, 23, 261], "omega1": 18, "omega2": 18, "omega_new": [18, 23, 27], "dependent_vari": [19, 244], "y": [19, 26, 30, 68, 116, 117, 129, 135, 136, 140, 143, 156, 158, 165, 173, 174, 176, 195, 263, 265, 267], "discript": 19, "estimationstep": [19, 34, 36, 141, 161, 162, 244], "filename_extens": 19, "extens": [19, 223, 225, 253, 261, 263], "initial_individual_estim": 19, "model_cod": [19, 244, 265], "modelfit_result": [19, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 77, 78, 79, 80, 81, 82, 153, 154, 155, 193, 194, 202, 209, 210, 211, 212, 213, 215, 216, 244, 263, 264, 265, 279], "modelfit": [19, 214, 221, 223, 227, 228, 242, 244, 246, 278], "observation_transform": [19, 244], "parent": [19, 219, 220, 233], "random_vari": [19, 71, 184, 263, 265, 279], "randomvari": [19, 244], "value_typ": 19, "likelihood": [19, 47, 48, 211, 216, 246, 274], "2ll": [19, 47, 48, 244], "log": [19, 35, 37, 48, 131, 156, 158, 160, 174, 244, 253, 256, 265], "record": [19, 77, 78, 79, 80, 81, 82, 83, 132, 148, 244, 249, 267], "would": [19, 32, 131, 242, 251, 256, 261, 265, 267, 270, 279], "copi": [19, 39, 70, 110, 114, 115, 244, 258, 260, 261, 265, 277], "deepcopi": 19, "create_model": 19, "factori": 19, "io": [19, 249, 254, 257], "implement": [19, 223, 225, 227, 228, 260, 261, 263, 270, 277], "g": [19, 68, 74, 146, 215, 244, 249, 253, 256, 258, 260, 265, 266, 270, 274, 277, 279], "nonmem7": 19, "has_same_dataset_a": 19, "update_datainfo": 19, "msg": 21, "syntax": [21, 277], "normal": [23, 27, 32, 39, 60, 64, 131, 256, 260, 261, 279], "abc": [24, 29, 227, 231], "init": [25, 26, 35, 43, 88, 166, 192, 194, 246, 256, 263], "param": [25, 26, 246], "tvcl": [25, 30, 33, 37, 39, 68, 79, 117, 129, 130, 131, 135, 136, 145, 242, 256, 263, 265, 267], "005": 25, "constrain": [25, 254, 263], "unfix": [25, 86, 87, 88, 166, 189, 191, 192, 244], "back": [25, 64, 244], "previou": [25, 27, 30, 40, 71, 96, 117, 163, 175, 177, 180, 220, 236, 244, 261, 266, 278, 279], "less": 25, "greater": 25, "altern": [25, 186, 249, 261, 265], "constructor": 25, "immut": 26, "collect": [26, 27, 256, 261, 265, 277], "usual": [26, 249, 279], "wai": [26, 121, 122, 123, 127, 249, 251, 253, 261, 263, 265, 277, 279], "displai": [26, 156, 256, 261, 265], "summar": [26, 218, 220, 221, 256, 262], "par1": 26, "par2": 26, "pset": 26, "oo": [26, 43, 110, 114, 189, 263, 265], "fixed": [26, 86], "nonfix": 26, "set_fix": 26, "set_initial_estim": [26, 244], "100": [26, 35, 36, 45, 153, 161, 187, 242, 244, 246, 264, 265, 268, 275], "eta_level": 27, "epsilon_level": 27, "act": 27, "while": [27, 249, 265, 277, 279], "variabilityhierarchi": 27, "contin": 27, "hierarchi": [27, 31], "rv": [27, 71, 113, 150, 184, 263], "normaldistribut": 27, "covariance_matrix": [27, 49, 56, 59, 61, 62, 154, 242, 244, 263, 264], "nrv": 27, "variance_paramet": 27, "rv1": 27, "rv2": 27, "get_rvs_with_same_dist": 27, "join": [27, 184, 244, 247, 265], "ind": 27, "fill": 27, "name_templ": 27, "param_nam": 27, "taken": [27, 83, 90, 95, 188, 223, 253, 256], "remain": [27, 247, 261], "stai": 27, "templat": [27, 35, 37, 265], "overrid": [27, 248, 277], "tupl": [27, 132, 152, 211, 237], "dist1": 27, "dist2": 27, "_": [27, 28, 220, 243, 256], "unjoin": 27, "nearest_valid_paramet": 27, "parameter_valu": 27, "forc": [27, 74, 154, 155, 193, 196, 197, 244, 246, 260, 261], "small": 27, "parameters_sdcorr": 27, "sd": [27, 55, 265, 273, 276], "corr": [27, 51, 58, 273], "assum": [27, 223, 256, 261, 267], "var": [27, 57, 251, 256], "rng": [27, 56, 61, 73, 153, 154, 155], "jointnormaldistribut": 27, "validate_paramet": 27, "seri": [27, 51, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 79, 80, 81, 82, 92, 96, 97, 98, 103, 107, 109, 134, 154, 155, 156, 186, 194, 244, 264], "current": [27, 36, 37, 53, 54, 68, 69, 77, 78, 80, 81, 82, 101, 108, 112, 126, 129, 157, 161, 162, 175, 183, 188, 204, 211, 214, 227, 233, 243, 244, 246, 249, 251, 252, 256, 257, 259, 260, 261, 262, 263, 265, 266, 269, 270, 271, 273, 274, 275, 276, 277, 279], "matric": [27, 57, 155, 244, 254, 264], "semidefinit": [27, 244, 254], "use_cach": 27, "symengin": [27, 254, 270], "cach": 27, "from_dict": [28, 224, 226], "get_and_reset_index": 28, "attr": 28, "wrapper": [28, 244, 249, 254, 257, 279], "reset": [28, 188, 244, 279], "facilit": 28, "multiindex": [28, 244], "to_csv": [28, 265], "save": [28, 222, 244, 265], "readabl": [28, 225, 227, 253, 261, 270], "print": [28, 65, 135, 136, 203, 244, 263, 265], "to_dict": [28, 224, 226], "lzma": [28, 222], "serial": [28, 244, 253, 270], "compress": [28, 222], "unless": [28, 30, 261], "signific": [30, 67, 212, 213, 215, 244, 261, 275], "after_od": [30, 174], "s\u2081": [30, 33, 68, 117, 129, 130, 131, 136, 174, 263], "ipr": [30, 68, 80, 117, 129, 135, 136, 173, 174, 244, 263, 264, 265, 276], "ir": [30, 68, 117, 129, 135, 136, 174, 263], "iwr": [30, 68, 117, 129, 135, 136, 174, 263], "before_od": [30, 33, 35, 130, 131, 185, 186, 187], "btime": [30, 33, 68, 117, 129, 130, 131, 135, 136, 263], "tad": [30, 33, 44, 68, 117, 129, 130, 131, 135, 136, 244, 253, 263, 273], "tvv": [30, 33, 68, 117, 129, 130, 131, 135, 136, 145, 242, 256, 263, 265, 267], "\u212f": [30, 33, 42, 68, 117, 129, 130, 131, 165, 263], "whole": [30, 246, 253, 261, 277], "s1": [30, 125, 135, 263, 265, 267], "symbol_or_stat": 30, "direct_depend": 30, "direct": [30, 232, 251, 261, 275], "find_assign": [30, 37, 38, 39, 42, 143, 145, 156, 158, 165, 173, 176, 195, 265], "find_assignment_index": 30, "full_express": [30, 35, 185, 186, 187], "expand": [30, 83], "full": [30, 71, 101, 108, 112, 243, 244, 246, 256, 260, 261, 266, 273], "reassign": 30, "sypmpi": 30, "remove_symbol_definit": 30, "elsewher": 30, "longer": [30, 244], "make": [30, 68, 130, 143, 151, 152, 211, 244, 254, 260, 261, 263, 265, 266, 277, 279], "sure": [30, 151, 244, 261, 266, 279], "stat": [30, 277], "rais": [30, 152, 194, 244], "p": [33, 204, 211, 216, 242, 243, 244, 246, 251, 256, 265, 274, 275], "allometri": [33, 209, 210, 244, 277], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 45, 141, 144, 162, 244, 279], "add_estimation_step": [34, 45, 141, 144, 161, 162, 244], "remove_estimation_step": [34, 36, 45, 141, 161, 162], "append_estimation_step_opt": [34, 36, 141, 144, 161, 162, 244], "remove_covariance_step": [34, 36, 45, 144, 161, 162, 244], "set_evaluation_step": [34, 36, 45, 141, 144, 161], "allow_nest": [35, 244], "linear": [35, 242, 243, 244, 254, 263, 270, 272], "lin": 35, "coveff": [35, 74], "median": [35, 56, 61, 242, 244, 265, 270, 276], "equal": [35, 39, 152, 165, 246, 249, 265], "minimum": [35, 254], "000": [35, 264], "frac": [35, 156, 158, 243, 263, 265, 276], "min": [35, 156, 158, 242, 253], "piecewis": [35, 244], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 265], "theta2": [35, 265], "pow": [35, 265], "mai": [35, 258, 260, 261, 265, 266, 277], "abbrevi": [35, 37, 244, 246, 249, 267], "multipli": [35, 37, 165, 242, 246, 265], "alreadi": [35, 246, 249, 260, 261, 265], "pop_clapgr": 35, "idx": [36, 45, 144, 161, 162, 279], "argument": [36, 77, 78, 80, 81, 82, 161, 198, 209, 211, 212, 213, 214, 215, 216, 217, 230, 244, 246, 265, 277, 279], "pass": [36, 73, 161, 198, 209, 211, 212, 213, 214, 215, 216, 217, 233, 261], "opt": [36, 45, 161], "1000": [36, 45, 79, 161, 256], "len": [36, 45, 144, 148], "add_covariance_step": [36, 45, 141, 144, 161, 162, 244], "initial_estim": [37, 42], "09": [37, 42, 158, 165, 174, 251, 258, 265, 266, 267, 271], "eta_nam": [37, 39, 165, 246, 265], "prop": [37, 265], "logit": 37, "user": [37, 94, 244, 254, 258, 260, 261, 263, 264, 265, 266, 267], "remove_iiv": [37, 39, 42, 146, 244, 260, 265, 267], "add_pk_iiv": [37, 39, 145, 146, 244, 266], "add_iov": [37, 42, 145, 146, 244, 260, 265], "remove_iov": [37, 39, 42, 145, 244, 260, 265], "pop_ka": [38, 43], "occ": [39, 213, 246, 260], "disjoint": [39, 260], "accept": [39, 105, 106, 107, 246, 261], "add_iiv": [39, 42, 145, 146, 244, 265, 267], "set_transit_compart": [40, 147, 244, 265], "remove_lag_tim": [40, 244, 265], "parameter": 41, "qpn": 41, "vpn": 41, "volumn": 41, "mathsf": [41, 149], "cdot": [41, 149, 256, 263, 265], "qp2": [41, 149, 172, 244, 265], "vp2": [41, 149, 172, 265], "peripheral1": [41, 149, 172], "set_peripheral_compart": [41, 149, 244, 265], "remove_peripheral_compart": [41, 172, 244, 265], "Will": [42, 139, 223, 224, 225], "pop_mat": [42, 265, 267], "eta_mat": 42, "004693": [43, 60, 115, 256, 263], "1000000": [43, 86, 87, 88, 115, 166, 167, 189, 192, 263, 265], "009160": [43, 115, 263], "100000": [43, 115, 263, 265], "99": [43, 115, 135, 194, 242, 244, 263], "030963": [43, 110, 256, 263], "031128": [43, 110, 135, 256, 263, 265, 267], "013241": [43, 114, 135, 256, 263, 264, 265], "append": [45, 244], "increas": [46, 249], "until": [46, 221, 261, 279], "do": [46, 154, 242, 244, 246, 256, 261, 265, 267, 274, 279], "noth": [46, 148, 261], "next": [46, 261, 266, 267, 274], "run2": [46, 170, 265], "run3": 46, "n_estimated_paramet": [47, 48], "fit": [47, 48, 194, 203, 214, 219, 221, 227, 244, 261, 263, 274, 278, 279], "variat": 48, "n_random_paramet": 48, "n_individu": 48, "n_fixed_paramet": 48, "n_observ": 48, "n_individ": 48, "n_estimated_iiv_omega_paramet": 48, "611": 48, "7071686183284": 48, "616": [48, 244, 264], "536606983396": 48, "610": 48, "7412809453149": 48, "594": 48, "431131169692": 48, "411510e": [49, 52, 59, 62, 263, 264], "010000e": [49, 52, 59, 62, 263, 264], "000002": [49, 51, 52, 59, 62, 263, 264], "000001": [49, 51, 52, 56, 59, 61, 62, 260, 263, 264, 266], "538630e": [49, 51, 52, 59, 62, 263, 264], "178090e": [49, 52, 59, 62, 263, 264], "233530e": [49, 52, 59, 62, 263, 264], "04": [49, 50, 51, 52, 58, 59, 62, 63, 242, 251, 263, 264, 273, 275], "000804": [49, 51, 52, 59, 62, 263, 264], "000050": [49, 51, 52, 59, 62, 242, 263, 264], "171840e": [49, 52, 59, 62, 263, 264], "461760e": [49, 52, 59, 62, 263, 264], "665010e": [49, 52, 59, 62, 263, 264], "06": [49, 51, 52, 59, 62, 242, 251, 258, 260, 263, 264, 273, 275, 277], "040250e": [49, 52, 59, 62, 263, 264], "007016": [49, 51, 52, 59, 62, 263, 264], "000108": [49, 51, 52, 59, 62, 263, 264], "944800e": [49, 52, 59, 62, 263, 264], "932950e": [49, 52, 59, 62, 263, 264], "093430e": [49, 52, 59, 62, 263, 264], "981380e": [49, 51, 52, 59, 62, 263, 264], "000180": [49, 51, 52, 59, 62, 263, 264], "856650e": [49, 52, 59, 62, 263, 264], "867230e": [49, 52, 59, 62, 263, 264], "000039": [49, 51, 52, 59, 62, 263, 264], "000019": [49, 51, 52, 59, 62, 263, 264], "589820e": [49, 51, 52, 59, 62, 263, 264], "685650e": [49, 52, 59, 62, 263, 264], "000029": [49, 51, 52, 59, 62, 263, 264], "000005": [49, 51, 52, 59, 62, 263, 264], "195640e": [49, 52, 59, 62, 263, 264], "007099": [49, 50, 51, 58, 264], "094640": [49, 50, 51, 58, 264], "388059": [49, 50, 51, 58, 66], "097981": [49, 50, 51, 58, 264], "170820": [49, 50, 51, 58, 264], "356899": [49, 50, 51, 58, 66], "138062": [49, 50, 51, 58, 264], "356662": [49, 50, 51, 58, 66, 264], "238441": [49, 50, 51, 58], "096515": [49, 50, 51, 58], "062991": [49, 50, 51, 58, 264], "153616": [49, 50, 51, 58, 264], "185111": [49, 50, 51, 58, 264], "159170": [49, 50, 51, 58, 264], "027495": [49, 50, 51, 58, 264], "calculate_se_from_cov": [49, 50, 51, 52, 58, 59, 63, 244], "calculate_se_from_inf": [49, 50, 51, 52, 58, 59, 62, 244], "calculate_cov_from_inf": [49, 50, 51, 58, 59, 62, 63, 244], "calculate_cov_from_corrs": [49, 50, 52, 58, 59, 62, 63, 244], "calculate_inf_from_cov": [49, 50, 51, 52, 58, 62, 63, 244], "calculate_inf_from_corrs": [49, 50, 51, 52, 59, 62, 63, 244], "calculate_corr_from_inf": [49, 51, 52, 58, 59, 62, 63, 244], "information_matrix": [50, 52, 63, 264], "inf": [50, 52, 63], "995567e": [50, 52, 59, 63], "22660": [50, 52, 58, 59, 63, 264], "028196": [50, 52, 59, 63], "16057": [50, 52, 58, 59, 63, 264], "855248": [50, 52, 59, 63], "203511": [50, 52, 58, 59, 63, 264], "614428": [50, 52, 59, 63], "39474": [50, 52, 58, 59, 63, 264], "250514": [50, 52, 59, 63], "820118": [50, 52, 59, 63], "299536": [50, 52, 59, 63], "266003e": [50, 52, 59, 63], "2129": [50, 52, 58, 59, 63, 264], "904642": [50, 52, 59, 63], "260": [50, 52, 58, 59, 63, 264], "176234": [50, 52, 59, 63], "375": [50, 52, 58, 59, 63, 264], "266233": [50, 52, 59, 63], "2800": [50, 52, 58, 59, 63, 264], "816246": [50, 52, 59, 63], "7718": [50, 52, 58, 59, 63, 264], "769557": [50, 52, 59, 63], "605786e": [50, 52, 59, 63], "187": [50, 52, 58, 59, 63, 264], "038903": [50, 52, 59, 63], "177": [50, 52, 58, 59, 63, 244, 264, 275], "207683": [50, 52, 59, 63], "205": [50, 52, 58, 59, 63, 264], "808480": [50, 52, 59, 63], "2225": [50, 52, 58, 59, 63, 264, 265], "150449": [50, 52, 59, 63], "035116e": [50, 52, 59, 63], "7527": [50, 52, 58, 59, 63, 264], "530027": [50, 52, 59, 63], "2462": [50, 52, 58, 59, 63, 264], "974821": [50, 52, 59, 63], "9977": [50, 52, 58, 59, 63, 264], "488860": [50, 52, 59, 63], "947425e": [50, 52, 59, 63], "22343": [50, 52, 58, 59, 63, 264], "198618": [50, 52, 59, 63], "9370": [50, 52, 58, 59, 63, 264], "758371": [50, 52, 59, 63], "201183e": [50, 52, 59, 63], "249847": [50, 52, 59, 63, 264], "177845": [50, 52, 59, 63], "calculate_corr_from_cov": [50, 51, 52, 58, 59, 62, 63, 244], "se": [51, 58, 250, 263, 264], "correlation_matrix": [51, 58, 66, 264], "standard_error": [51, 58, 263, 264], "411512e": 51, "009998e": 51, "178111e": 51, "233518e": 51, "171834e": 51, "461762e": 51, "665011e": 51, "040245e": 51, "944801e": 51, "932957e": 51, "093431e": 51, "856651e": 51, "867245e": 51, "685661e": 51, "195664e": 51, "gradient": [53, 54, 77, 78, 244], "pheno_linear": [53, 54, 77, 78, 80, 81, 82, 101, 108, 112, 129, 204], "d_eps1": [53, 108], "d_epseta1_1": [53, 108], "oeta1": [53, 101, 112], "d_epseta1_2": [53, 108], "oeta2": [53, 101, 112], "calculate_eta_gradient_express": [53, 244], "d_eta1": [54, 101, 108, 112], "d_eta2": [54, 101, 108, 112], "calculate_epsilon_gradient_express": [54, 244], "parameter_estim": [55, 56, 57, 61, 67, 79, 81, 82, 154, 155, 194, 242, 244, 263, 264, 265], "individual_estim": [55, 71, 77, 78, 80, 153, 193, 244, 264, 265], "shrinkag": [55, 57, 278], "deviat": [55, 195, 242, 256, 262, 264, 273, 276], "pe": [55, 56, 57, 61, 79, 81, 154, 155, 265], "ie": [55, 153, 193, 265], "720481": 55, "240295": 55, "471305": 55, "128389": 55, "calculate_individual_shrinkag": [55, 244], "expr_or_expr": 56, "expect": [56, 61, 247, 261, 273], "arbitrari": [56, 61], "solut": [56, 183], "th": [56, 243, 256], "95": [56, 242, 256], "percentil": [56, 242, 256], "previous": [56, 61, 133, 194, 244, 267, 279], "interest": [56, 247, 261, 265, 270], "seed": [56, 61, 73, 153, 155, 246], "create_rng": [56, 61, 153, 154, 155], "stderr": [56, 61, 242, 277], "p5": [56, 61, 256], "004234": [56, 61], "001138": [56, 61], "004907": [56, 61], "001247": [56, 61], "p95": [56, 61, 256], "individual_estimates_covari": [57, 153, 244, 264], "ieta_shr": 57, "847789": 57, "256473": 57, "796643": 57, "210669": 57, "755025": 57, "226957": 57, "764541": 57, "216405": 57, "816192": 57, "203974": 57, "778108": 57, "210992": 57, "659420": 57, "236875": 57, "668551": 57, "240097": 57, "260056": 57, "200374": 57, "725190": 57, "226563": 57, "972110": 57, "421852": 57, "249640": 57, "254119": 57, "730294": 57, "364932": 57, "165785": 57, "194464": 57, "813399": 57, "313554": 57, "797328": 57, "213211": 57, "769059": 57, "278079": 57, "098506": 57, "176778": 57, "749022": 57, "235386": 57, "742181": 57, "222932": 57, "317956": 57, "264473": 57, "943950": 57, "232732": 57, "707183": 57, "259077": 57, "553787": 57, "247717": 57, "826349": 57, "114302": 57, "26": [57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 273, 275, 276], "854777": 57, "341384": 57, "27": [57, 90, 95, 107, 109, 202, 242, 243, 251, 253, 258, 260, 262, 264, 266, 274, 276], "820829": 57, "263235": 57, "28": [57, 77, 80, 81, 90, 95, 107, 202, 242, 243, 251, 253, 258, 261, 262, 264, 273, 276], "999942": 57, "319986": 57, "29": [57, 77, 80, 81, 90, 95, 107, 186, 202, 242, 243, 245, 251, 253, 258, 261, 262, 264, 273, 276], "967084": 57, "432760": 57, "30": [57, 90, 95, 107, 202, 242, 243, 251, 253, 258, 260, 261, 262, 264, 266, 273, 276], "404773": 57, "325215": 57, "31": [57, 77, 80, 90, 95, 107, 109, 202, 242, 243, 251, 253, 262, 264, 271, 273, 276, 277], "999980": 57, "318421": 57, "925283": 57, "167667": 57, "33": [57, 90, 95, 107, 109, 202, 242, 243, 251, 253, 262, 264, 266, 275, 276], "913706": 57, "242106": 57, "34": [57, 81, 90, 95, 107, 109, 202, 242, 243, 251, 253, 262, 264, 271, 273, 276], "875554": 57, "249197": 57, "849135": 57, "294294": 57, "172206": 57, "246422": 57, "747380": 57, "278340": 57, "38": [57, 77, 80, 90, 95, 107, 202, 242, 243, 253, 262, 264, 276], "187440": 57, "231249": 57, "39": [57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 273, 274, 275, 276], "237805": 57, "254485": 57, "40": [57, 90, 93, 95, 107, 109, 148, 202, 242, 243, 251, 253, 262, 264, 275, 276], "999925": 57, "189793": 57, "41": [57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 273, 276], "941906": 57, "170998": 57, "42": [57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 266, 275, 276], "923801": 57, "244046": 57, "43": [57, 90, 95, 107, 202, 242, 243, 251, 253, 260, 262, 264, 275, 276], "999928": 57, "320403": 57, "44": [57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 276], "237637": 57, "260453": 57, "45": [57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 276], "869540": 57, "194503": 57, "46": [57, 90, 95, 107, 202, 242, 243, 251, 253, 262, 264, 276], "999949": 57, "319750": 57, "47": [57, 90, 95, 107, 109, 202, 242, 243, 251, 253, 262, 264, 266, 273, 276], "983782": 57, "393234": 57, "698267": 57, "169337": 57, "49": [57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 276], "776674": 57, "214962": 57, "50": [57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 266, 273, 276], "688847": 57, "192608": 57, "51": [57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 276, 277], "822213": 57, "202534": 57, "52": [57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 266, 275, 276], "511489": 57, "273601": 57, "53": [57, 90, 95, 107, 202, 242, 243, 253, 262, 264, 271, 273, 276], "964757": 57, "223448": 57, "762153": 57, "181648": 57, "965657": 57, "435741": 57, "995278": 57, "354798": 57, "813382": 57, "263372": 57, "727295": 57, "232867": 57, "738777": 57, "224742": 57, "calculate_eta_shrinkag": [57, 244, 265], "995565e": 58, "041788": 58, "848052": 58, "410335": 58, "240358": 58, "820116": [58, 264], "179011": 58, "266004e": 58, "908225": 58, "176399": 58, "266263": 58, "818557": 58, "757955": 58, "605785e": 58, "038825": 58, "207512": 58, "808434": 58, "144772": 58, "035114e": 58, "518562": 58, "972906": 58, "457873": 58, "947424e": 58, "197906": 58, "736254": 58, "201162e": 58, "249846": 58, "006431": 58, "ucp": [60, 64], "ucpscal": [60, 64], "calculate_ucp_scal": [60, 244], "00916": [60, 135, 194, 256, 263, 265, 267], "0309626": [60, 135, 194, 263, 265, 267], "031127999999999996": 60, "013241000000000001": 60, "convers": [60, 244], "pharmacokinet": [61, 253], "pre": 61, "k_e": 61, "calculate_individual_parameter_statist": [61, 244, 265], "000210": [62, 63, 263, 264], "026895": [62, 63, 263, 264], "083762": [62, 63, 263, 264], "013415": [62, 63, 263, 264], "007477": [62, 63, 263, 264], "002279": [62, 63, 263, 264], "unconstrain": 64, "calculate_parameters_from_ucp": [64, 244], "verbos": 65, "consist": [65, 251, 261, 277], "across": [65, 244, 261], "consol": 65, "els": [65, 244, 265], "fail": [65, 244, 261, 270], "cor": [66, 249], "highli": 66, "high": [66, 253, 254, 270], "zero_limit": 67, "significant_digit": [67, 244], "close": [67, 194, 244, 256, 261, 262], "distanc": [67, 276], "logic": 67, "cleanup": 68, "what": [68, 261, 267, 270], "inlin": 68, "clean": 68, "might": [68, 261, 265, 270, 277, 279], "certain": [68, 132, 244, 260, 261, 265, 269, 277], "requir": [68, 244, 246, 251, 257, 261, 273], "to_format": 69, "inplac": 69, "nlmixr": [69, 214, 249, 259], "underli": [69, 89, 135, 263], "converted_model": 69, "model_copi": 70, "pheno2": [70, 279], "block": [71, 145, 173, 244, 246, 256, 258, 265, 266, 273, 277], "iiv_cl_iiv_v": [71, 184], "split_joint_distribut": [71, 244, 265], "report": [72, 244, 249, 259, 270], "through": [73, 246, 247, 248, 251, 261, 263, 277], "numpi": [73, 253, 254, 263], "standard_norm": 73, "5532605888887387": 73, "stem": 74, "force_numb": 74, "coveff1": 74, "temp": 74, "temp1": 74, "cl1": 74, "column_nam": [75, 190], "mark": [75, 76, 83, 190, 246, 261], "drop_dropped_column": [75, 190, 244], "undrop_column": [75, 244], "undrop": [75, 190], "drop_column": [76, 190, 244], "them": [76, 152, 247, 258, 260, 261, 266, 267, 274, 277], "dy": 77, "dep": 77, "771084": [77, 80], "881859": [77, 80], "441728": [77, 80], "113050": [77, 80], "783055": [77, 80], "150": [77, 78, 80, 81, 82, 264], "375041": [77, 80], "151": [77, 78, 80, 81, 82], "833395": [77, 80], "152": [77, 78, 80, 81, 82], "876707": [77, 80], "153": [77, 78, 80, 81, 82, 252], "905095": [77, 80], "154": [77, 78, 80, 81, 82], "099690": [77, 80], "155": [77, 78, 80, 81, 82, 106, 109, 253, 264], "evaluate_eta_gradi": [77, 244], "df": [78, 220, 244, 253, 271, 273], "deta": 78, "159537": 78, "609116": 78, "325893": 78, "562289": 78, "104417": 78, "346161": 78, "452951": 78, "682310": 78, "838840": 78, "981836": 78, "424423": 78, "973013": 78, "497185": 78, "344797": 78, "198714": 78, "697161": 78, "987731": 78, "941806": 78, "817067": 78, "309945": 78, "evaluate_epsilon_gradi": [78, 244], "573770": 79, "739": [79, 96, 253], "165105": 79, "741": [79, 96, 242, 253], "742": [79, 96, 242, 253], "743": [79, 96, 253], "evaluate_population_predict": [80, 244], "529739": 81, "179910": [81, 262], "688648": 81, "798916": 81, "023225": 81, "459036": 81, "223295": 81, "217288": 81, "472888": 81, "226455": 81, "evaluate_individual_predict": [81, 244], "wre": [82, 244], "313859": 82, "675721": 82, "544240": 82, "921720": 82, "517677": 82, "223935": 82, "053334": 82, "007023": 82, "931252": 82, "778389": 82, "flag": [83, 244, 276, 277], "origin": [83, 196, 242, 243, 247, 249, 256, 261, 276], "care": [83, 223], "00469307": [86, 87, 88, 135, 167, 178, 189, 194, 263, 265, 267], "fix_paramet": [86, 88, 191, 192, 265], "unfix_paramat": [86, 87, 88, 192], "fix_paramaters_to": [86, 192], "unfix_paramaters_to": [86, 87, 88, 166, 191], "fix_or_unfix_paramet": [87, 88, 191, 192], "fix_parameters_to": [87, 166, 191, 265], "baselin": [90, 95, 128, 244, 256], "60": [90, 253, 261, 271], "63": [90, 109, 253, 264, 273], "present": [92, 98, 246, 253, 256, 261, 277], "extract": [92, 98, 244, 246, 259], "directli": [93, 223, 227, 228, 244, 246, 253, 254, 261, 263, 265, 270, 277], "cmax": [93, 244, 253], "tmax": [93, 244, 253], "cmin": [93, 244, 253], "tmin": [93, 244, 253], "doseid": [93, 96, 253], "589": [93, 97, 253], "config": [94, 244, 249, 268], "get_baselin": [95, 244], "set_covari": 95, "period": [96, 253], "96": [97, 187, 242, 253, 265, 266], "108": [97, 253, 264], "120": [97, 253, 264], "132": [97, 251, 253, 264], "144": [97, 251, 253, 264, 275], "retriev": [99, 100, 105, 106, 111, 113, 207, 208, 223, 227, 228, 244, 263, 264, 265, 278], "get_pk_paramet": [100, 113, 244], "get_rv_paramet": [100, 111, 125, 244], "has_random_effect": [100, 113, 244], "opr": [101, 108, 112], "get_population_prediction_express": [101, 244], "epress": [101, 112], "item": [104, 248, 251, 261], "activ": [105, 106, 107, 261], "ignor": [105, 106, 107, 135, 244, 246, 263, 265, 267], "get_number_of_observ": [105, 109, 244, 253], "get_number_of_observations_per_individu": [105, 106, 109, 244], "total": [106, 244, 253], "get_number_of_individu": [106, 107, 244, 253], "observation_count": 107, "accord": [108, 244, 261, 266, 277], "oeta\u2082": 108, "oeta\u2081": 108, "112": [109, 251, 253, 258, 260, 264, 266, 273, 274], "131": [109, 251, 253, 264], "146": [109, 253, 260, 264], "get_theta": [110, 114, 244], "get_sigma": [110, 115, 244], "get_individual_paramet": [111, 113, 125, 244], "get_individual_prediction_express": [112, 244], "get_omega": [114, 115, 244], "structur": [115, 210, 225, 244, 246, 253, 259, 260, 263, 265, 266, 277, 279], "00": [115, 256, 263, 264, 271, 273, 275, 277], "olumn": 116, "milligram": [116, 253], "liter": [116, 253], "kilogram": [116, 253], "named_subscript": 117, "greek": 117, "subscript": 117, "cleanup_model": [117, 244], "\u03b8\u2081": 117, "\u03b8\u2082": 117, "\u03b8\u2083": 117, "\u03b7\u2081": 117, "\u03b7\u2082": 117, "\u03b5\u2081": 117, "has_proportional_error_model": [118, 119, 244], "has_combined_error_model": [118, 124, 244], "proportin": [119, 265], "has_additive_error_model": [119, 124, 244], "instanc": [120, 142, 251, 277], "reli": [121, 122, 123, 127, 261], "heurist": [121, 122, 123, 127], "abl": [121, 122, 123, 127, 244, 257, 259, 265, 269, 270], "detect": [121, 122, 123, 127, 244, 257, 263, 269], "micha": [122, 123, 168, 169, 246, 277], "menten": [122, 123, 168, 169, 246, 277], "set_michaelis_menten_elimin": [122, 164, 169, 181, 244, 265], "michali": 123, "set_mixed_mm_fo_elimin": [123, 265], "set_zero_order_elimin": [127, 164, 168, 169, 244, 265], "get_covariate_baselin": [128, 244], "load": 129, "statment": 130, "mu": [131, 256], "referenc": [131, 265], "theta_1": 131, "eta_1": [131, 256], "mu_1": [131, 256], "\u03bc\u2081": 131, "\u03bc\u2082": 131, "dataset_or_model": [132, 152], "name_pattern": [132, 152], "omitted_": 132, "omiss": 132, "omit": [132, 246, 251, 265], "placehold": [132, 152], "plot": [133, 134, 244, 256, 262, 270], "alt": [133, 134, 242, 256, 262], "chart": [133, 134, 242], "iofv1": 134, "iofv2": 134, "against": [134, 261], "iofv": [134, 220, 242, 244, 262, 264, 276], "scatterplot": 134, "subroutin": [135, 244, 261, 263, 265, 267], "advan1": [135, 263, 265, 267], "trans2": [135, 263, 265, 267], "IF": [135, 244, 261, 263, 265], "gt": [135, 251, 263], "lt": [135, 251, 263], "ptvcl": [135, 182, 263], "ptvv": [135, 263], "ivcl": [135, 242, 256, 263, 265, 267], "ivv": [135, 242, 256, 263, 265], "uncondit": [135, 263], "cwre": [135, 219, 220, 263, 264, 273, 274], "npde": [135, 263], "noappend": [135, 263], "noprint": [135, 263], "onehead": [135, 263], "home": [138, 244, 263], "run1": [138, 139, 208], "mod": [138, 223, 225, 244, 246, 253, 263, 264, 265, 277], "read_model_from_databas": [138, 140, 244], "databas": [138, 139, 140, 223, 224, 225, 227, 228, 229, 231, 236, 241, 244], "read_model_from_str": [138, 139, 244, 265], "lookup": 139, "err": [140, 265], "has_covariate_effect": [142, 244], "unrun": 143, "to_remov": [145, 146, 246], "eta_iov_1_1": [146, 260], "add_lag_tim": [147, 177, 244, 265], "uloq": 148, "736": 148, "add_peripheral_compart": [149, 172, 244, 265], "new_nam": [151, 170], "renam": [151, 244], "clash": [151, 223, 225], "resampl": 152, "stratifi": [152, 246], "sample_s": [152, 246], "resample_": 152, "randomli": [152, 155], "renumb": [152, 246], "upward": 152, "stratif": [152, 246], "determin": [152, 258, 260, 261, 266], "valueerror": 152, "strata": 152, "suppli": [152, 258, 260, 266, 273], "control": [152, 249, 260, 261, 263], "pattern": [152, 261], "samples_per_id": 153, "pool": [153, 258], "iec": 153, "127941": 153, "037273": 153, "065492": 153, "182851": 153, "263323": 153, "265849": 153, "295883": 153, "060346": 153, "012108": 153, "219967": 153, "034279": 153, "040988": 153, "187879": 153, "143184": 153, "088845": 153, "034655": 153, "187779": 153, "014214": 153, "019953": 153, "151151": 153, "sample_parameters_from_covariance_matrix": [153, 155, 244], "sample_parameters_uniformli": [153, 154, 244], "uniform": [153, 154, 155], "force_posdef_sampl": [154, 155, 246], "force_posdef_covmatrix": [154, 246], "mani": [154, 244, 265], "never": [154, 266], "005069": 154, "974989": 154, "204629": 154, "024756": 154, "012088": 154, "012943": 154, "004690": 154, "958431": 154, "233231": 154, "038866": 154, "029000": 154, "012516": 154, "004902": 154, "950778": 154, "128388": 154, "019020": 154, "023866": 154, "013413": 154, "sample_individual_estim": [154, 155, 244], "estiat": [154, 155], "reject": 155, "004878": 155, "908216": 155, "149441": 155, "029179": 155, "025472": 155, "012947": 155, "004828": 155, "014444": 155, "149958": 155, "028853": 155, "027653": 155, "013348": 155, "004347": 155, "053837": 155, "165804": 155, "028465": 155, "026798": 155, "013727": 155, "data_tran": [156, 158, 174, 244, 265], "series_term": 156, "\u00b2": [156, 158], "epsilon_1": [156, 158, 174], "expans": [156, 265], "approxim": [156, 261], "\u03b5\u2090": [156, 158, 265], "set_proportional_error_model": [156, 158, 244, 265], "set_combined_error_model": [156, 174, 244, 265, 274], "epsilon_2": 158, "remove_error_model": [158, 174, 244, 265], "\u03b5\u209a": [158, 174, 265], "set_additive_error_model": [158, 174, 244, 265], "fix_to_log": 160, "dynam": [160, 233, 261], "lambda": [160, 185, 186, 271, 273], "zeta": [160, 271, 273], "emul": 160, "set_bolus_order_absorpt": [163, 175, 180], "list_of_ep": [165, 173], "same_eta": [165, 246], "chosen": [165, 244, 258, 265, 277], "eta_rv1": 165, "set_power_on_ruv": [165, 244, 265, 274], "set_upper_bound": [167, 189], "unconstrain_paramet": [167, 178, 191], "constraint": [167, 178, 182, 189, 191, 244, 254, 270], "clmm": [168, 169, 181, 265], "km": [168, 169, 181, 265], "set_first_order_elimin": [168, 169, 181, 244, 265], "prefer": [171, 261], "peripheral2": 172, "lower_limit": 173, "zero_protect": [173, 174, 244], "autodetect": 173, "protect": [173, 174, 244, 261], "power\u2081": 173, "set_iiv_on_ruv": [173, 244, 265, 274], "225e": 174, "ipredadj": 174, "sequenti": [175, 244, 246, 266, 277], "mdt": [175, 177, 244, 265], "quantil": [176, 242, 244], "time_vari": [176, 273, 274], "keep_depot": [177, 244], "transit1": [177, 265], "transit2": [177, 265], "transit3": [177, 265], "set_lower_bound": [178, 189], "use_thetas_for_error_stdev": [179, 244, 265], "smallest": [181, 253], "simplifi": [182, 244, 245, 251, 254, 270], "plugin": [182, 248, 249, 254, 255, 257, 278], "conf": [182, 248], "comment": [182, 244, 248, 267], "ab": [182, 186, 246, 265], "analyt": 183, "becom": [184, 246, 270], "create_joint_distribut": [184, 244, 265], "list_of_eta": [185, 186, 187], "boxcox": [185, 244], "lambda1": [185, 186, 265], "transform_etas_tdist": [185, 186, 244, 265], "transform_etas_john_drap": [185, 187, 244, 265], "john": [186, 244, 246], "draper": [186, 244, 246], "spelect": 186, "1980": 186, "famili": [186, 261], "journal": [186, 274], "royal": 186, "societi": 186, "190": 186, "197": 186, "doi": [186, 256, 274], "2307": 186, "2986305": 186, "transform_etas_boxcox": [186, 187, 244, 265], "degre": [187, 273], "freedom": [187, 261, 273], "80": [187, 264, 265, 273, 274], "df1": [187, 265], "translat": [188, 244], "hour": [188, 253], "caution": 188, "account": 188, "unfix_paramet": [189, 244, 265], "had": [193, 261], "move_est_close_to_bound": 194, "00469555": 194, "984258": [194, 263, 264], "15892": 194, "0293508": [194, 263], "sd_ep": [195, 265], "set_weighted_error_model": [195, 244, 265], "write": [196, 197, 222, 244, 249, 261, 269, 278], "whose": [196, 261], "suffix": 196, "overwrit": [196, 197], "newdataset": 196, "recalcul": 198, "frem_dir1": 198, "read_result": [198, 207, 244, 277], "model_or_model": 199, "run_tool": [199, 210, 219, 244], "84": [200, 201, 220, 258, 260, 266, 275], "machin": [200, 201, 202, 223, 227, 228, 253, 257, 261], "learn": [200, 201, 202, 257], "threshold": [200, 201, 202, 246, 251], "signal": [200, 201, 262], "raw": [200, 201, 202, 220, 242, 244, 253], "delta": [200, 242, 244, 262], "tell": [200, 202, 261], "predict_influential_outli": [200, 202, 244], "predict_outli": [200, 201, 244], "outlier_cutoff": 201, "influential_cutoff": 201, "singal": [201, 202], "influential_outli": 201, "predict_influential_individu": [201, 202, 244], "simev": [202, 244, 272], "281443": 202, "057392": 202, "119105": 202, "846849": 202, "600540": 202, "014008": 202, "750734": 202, "247175": 202, "117002": 202, "835389": 202, "529582": 202, "035670": 202, "292333": 202, "303278": 202, "565949": 202, "078192": 202, "291295": 202, "466421": 202, "402343": 202, "699996": 202, "567987": 202, "526776": 202, "303918": 202, "177588": 202, "272142": 202, "390000": 202, "775876": 202, "501528": 202, "700951": 202, "352599": 202, "294196": 202, "744014": 202, "215364": [202, 275], "208691": 202, "713130": 202, "300293": 202, "810736": 202, "459877": 202, "675125": 202, "563835": 202, "526945": 202, "449199": 202, "720714": 202, "792248": 202, "860923": 202, "731858": 202, "247131": 202, "894190": 202, "282737": 202, "153398": 202, "200546": 202, "902774": 202, "586427": 202, "183329": 202, "036930": 202, "639868": 202, "765279": 202, "209665": 202, "225693": 202, "errors_allow": [204, 244], "bic_typ": 204, "rounding_error": 204, "maxevals_exceed": 204, "lrt": 204, "denot": [204, 256, 265], "model_1": [204, 256], "model_2": [204, 256], "extern": [205, 249, 253, 254, 265, 269, 270], "create_result": [206, 244, 265], "retrieve_model": [207, 223, 227, 228, 244, 277], "tooldatabas": [208, 224, 229, 233, 236], "modeldatabas": [208, 223, 225, 231], "tooldir_path": 208, "retrieve_final_model": [208, 244], "allometryresult": 209, "amd": [210, 244, 277], "reult": 210, "search": [210, 211, 215, 244, 246, 251, 260, 270, 277], "runord": [210, 246], "compon": [210, 246, 254, 257, 261, 273], "run_iiv": [210, 244], "try": [211, 246, 251, 270, 279], "sentenc": [211, 251], "compact": [211, 251], "mode": [211, 212, 213, 215, 244, 256, 261], "covsearchresult": 211, "no_add": [212, 215, 244, 258, 266], "iivsearch": [212, 244, 277], "brute_force_no_of_eta": [212, 258], "brute_force_block_structur": [212, 258], "strategi": [212, 215, 244, 258, 266], "add_diagon": [212, 215, 244, 258, 266], "iivsearchresult": 212, "iovsearch": [213, 244, 277], "iovsearchresult": 213, "exhaust": [215, 244], "modelsearchresult": 215, "bin": [216, 273, 279], "attempt": [216, 251, 261], "ruvsearchresult": 216, "arg": 217, "kei": [219, 227, 261, 274], "fit_result": 219, "mathrm": [220, 276], "veebar": 220, "least": [220, 261, 277], "outli": [220, 276], "criteria": [220, 244, 246, 258, 260, 266, 274], "include_all_estimation_step": 221, "runtim": [221, 244], "wasn": 221, "estmat": 221, "586": [221, 262, 264], "276056": [221, 262], "again": [222, 265, 279], "Not": [222, 253, 261], "applic": [222, 236, 261, 270, 277], "file_extens": [223, 225], "nontransactionalmodeldatabas": [223, 228], "local": [223, 224, 225, 227, 228, 229, 231, 249, 258, 261], "store": [223, 224, 225, 227, 228, 229, 231, 244, 267, 277], "modelnam": 223, "overwritten": 223, "recommend": [223, 279], "localmodeldirectorydatabas": 223, "retrieve_fil": [223, 227, 228], "filesystem": [223, 227, 228], "model_nam": [223, 225, 227, 228, 256], "retrieve_local_fil": [223, 227, 228], "destination_path": [223, 227, 228], "retrieve_modelfit_result": [223, 227, 228], "store_local_fil": [223, 224, 227, 228, 229, 231], "new_filenam": 223, "store_metadata": [223, 224, 227, 228], "store_model": [223, 227, 228], "store_modelfit_result": [223, 227, 228], "toolnam": [224, 229, 231, 277], "exist_ok": 224, "read_metadata": 224, "source_path": [224, 229, 231], "store_result": [224, 229, 231], "transactionalmodeldatabas": 225, "subdirectori": [225, 277], "list_model": 225, "snapshot": [225, 227], "context": [225, 227, 261, 270], "transact": [225, 227, 261], "writabl": [225, 227], "timestamp": 226, "log_error": 226, "log_warn": 226, "baseclass": 227, "primari": 227, "center": 227, "around": [227, 247], "belong": [227, 279], "dummi": [228, 229], "anyth": [228, 229, 249, 258, 261], "task_input": 230, "func": 230, "model_databas": 231, "task": [232, 265, 269, 270], "acycl": 232, "graph": [232, 246, 249], "node": [232, 233], "edg": 232, "wf": 233, "unique_nam": 233, "db": 233, "dask": [233, 244, 270], "whatev": [233, 261], "alia": [234, 235], "localdirectorydatabas": [234, 241], "localdirectorytooldatabas": [235, 241, 277], "dispatch": [236, 241, 244, 277], "resum": [236, 277], "execut": [236, 244, 261], "executiondispatch": 236, "default_dispatch": 241, "local_dask": [241, 277], "default_model_databas": 241, "default_tool_databas": 241, "psn": [242, 243, 244, 246, 252, 256, 262, 271, 273, 275, 276, 277, 278], "parameter_statist": 242, "bia": [242, 244], "rse": [242, 264], "divid": [242, 246, 267], "005856": 242, "005820": 242, "000038": 242, "000487": 242, "083167": 242, "455435": 242, "443165": 242, "009885": 242, "099305": 242, "068231": 242, "141376": 242, "109797": 242, "030323": 242, "114986": 242, "813337": 242, "195880": 242, "195844": 242, "005646": 242, "046548": 242, "237634": 242, "015546": 242, "015112": 242, "000872": 242, "003434": 242, "220871": 242, "parameter_distribut": 242, "lowest": [242, 256], "highest": [242, 256, 267], "interpol": 242, "fall": [242, 244], "x_0": 242, "x_1": 242, "np": [242, 253, 263], "004762": 242, "004767": 242, "004805": 242, "004974": 242, "005120": 242, "211220": 242, "214364": 242, "242657": 242, "290449": 242, "307106": 242, "000011": 242, "012961": 242, "100104": 242, "100376": 242, "102825": 242, "116900": 242, "125456": 242, "007812": 242, "007857": 242, "008261": 242, "009741": 242, "011116": 242, "97": 242, "006669": 242, "006685": 242, "007429": 242, "007593": 242, "007612": 242, "613679": 242, "646879": 242, "726604": 242, "730551": 242, "730990": 242, "338957": 242, "371005": 242, "536153": 242, "545316": 242, "546334": 242, "281203": 242, "300874": 242, "306057": 242, "306101": 242, "306106": 242, "021677": 242, "023708": 242, "025429": 242, "026581": 242, "026710": 242, "parameter_estimates_histogram": 242, "histogram": [242, 244], "repeatchart": 242, "005298": 242, "30730": 242, "074931": 242, "136423": 242, "011374": 242, "006048": 242, "38692": 242, "029844": 242, "189763": 242, "019143": 242, "005624": 242, "53224": 242, "118806": 242, "219550": 242, "019831": 242, "005771": 242, "40115": 242, "034322": 242, "150905": 242, "012287": 242, "005933": 242, "42119": 242, "074050": 242, "171158": 242, "017394": 242, "005275": 242, "59087": 242, "289793": 242, "248009": 242, "016396": 242, "005847": 242, "44711": 242, "109860": 242, "206296": 242, "016346": 242, "005939": 242, "52688": 242, "040057": 242, "210552": 242, "013631": 242, "98": [242, 256, 258], "005998": 242, "41948": 242, "192046": 242, "175269": 242, "013485": 242, "005479": 242, "43956": 242, "109733": 242, "197253": 242, "011771": 242, "ofv_statist": 242, "bootstrap_bootdata_ofv": 242, "original_bootdata_ofv": 242, "sum": [242, 252], "bootstrap_origdata_ofv": 242, "boostrap": 242, "original_origdata_ofv": 242, "delta_bootdata": 242, "delta_origdata": 242, "722": 242, "220925": 242, "386171": 242, "134966": 242, "245796": 242, "929008": 242, "620085": 242, "523805": 242, "737": 242, "632473": 242, "951710": 242, "024871": 242, "110934": 242, "218525": 242, "629078": 242, "737746": 242, "ofv_distribut": 242, "parameter_distriut": 242, "601": 242, "007583": 242, "602": 242, "266529": 242, "613": 242, "597036": 242, "641": 242, "950291": 242, "621": 242, "273905": 242, "622": 242, "073513": 242, "629": 242, "269987": 242, "806391": 242, "915431": 242, "955989": 242, "731": 242, "321004": 242, "879050": 242, "021463": 242, "059207": 242, "398901": 242, "299364": 242, "020705": 242, "061262": 242, "426277": 242, "984323": 242, "879224": 242, "788": 242, "101562": 242, "803": 242, "869362": 242, "661": 242, "714778": 242, "800": [242, 264], "121734": 242, "810": [242, 264], "417314": 242, "732": 242, "165644": 242, "757": 242, "877092": 242, "369737": 242, "671690": 242, "375800": 242, "162811": 242, "270917": 242, "982365": 242, "475010": 242, "828": 242, "178008": 242, "839": 242, "691272": 242, "840": 242, "970524": 242, "836": 242, "395339": 242, "846": 242, "981350": 242, "848": 242, "157573": 242, "859": 242, "964343": 242, "893": [242, 258], "228440": 242, "896": [242, 256], "924451": 242, "443675": 242, "246668": 242, "558111": 242, "129": 242, "069616": 242, "162": 242, "333713": 242, "166": 242, "029724": 242, "ofv_plot": 242, "layerchart": [242, 262], "dofv_quantiles_plot": 242, "show": [242, 246, 256, 261, 273, 276], "metric": [242, 243, 264], "chi": 242, "squar": 242, "907310": 242, "911844": 242, "750": 242, "388987": 242, "670": 242, "684132": 242, "675": 242, "846450": 242, "738": 242, "099607": 242, "248779": 242, "734": 242, "876739": 242, "733": [242, 274], "182039": 242, "626": 242, "440820": 242, "637": 242, "427606": 242, "748": 242, "285576": 242, "239599": 242, "025253": 242, "519551": 242, "781": 242, "380852": 242, "793": 242, "303365": 242, "994494": 242, "754": 242, "666705": 242, "688168": 242, "664": 242, "288159": 242, "671": 242, "883942": 242, "255718": 242, "974215": 242, "332959": 242, "052283": 242, "689": 242, "940217": 242, "693": 242, "963948": 242, "735": 242, "763734": 242, "004534": 242, "494261": 242, "162318": 242, "204881": 242, "627961": 242, "287312": 242, "986786": 242, "390849": 242, "785654": 242, "624824": 242, "922512": 242, "099768": 242, "595783": 242, "360991": 242, "358744": 242, "157557": 242, "023731": 242, "869007": 242, "372000e": 242, "000015": 242, "000003": 242, "098000e": 242, "462220e": 242, "009862": 242, "002316": 242, "002320": 242, "320640e": 242, "531300e": 242, "013222": 242, "000146": 242, "961337e": 242, "572900e": 242, "002167": 242, "014550e": 242, "000033": 242, "000196": 242, "178980e": 242, "included_individu": 242, "case_result": [243, 244], "cook_scor": 243, "jackknife_cook_scor": 243, "delta_ofv": 243, "dofv_influenti": 243, "130159": 243, "121389": 243, "015207": 243, "348263": 243, "336159": 243, "144045": 243, "192433": 243, "181125": 243, "031030": 243, "163095": 243, "155901": 243, "026142": 243, "422651": 243, "404915": 243, "190732": 243, "374312": 243, "343311": 243, "097063": 243, "169869": 243, "163883": 243, "026223": 243, "263865": 243, "254943": 243, "058123": 243, "757098": 243, "673587": 243, "477910": 243, "150161": 243, "144191": 243, "023623": 243, "361646": 243, "352901": 243, "217902": 243, "255533": 243, "215005": 243, "035375": 243, "191848": 243, "187019": 243, "038199": 243, "376365": 243, "337975": 243, "096680": 243, "142806": 243, "137340": 243, "014709": 243, "193393": 243, "179744": 243, "031711": 243, "131746": 243, "122842": 243, "020637": 243, "176644": 243, "932149": 243, "036787": 243, "128197": 243, "120498": 243, "019030": 243, "141093": 243, "138101": 243, "029021": 243, "176582": 243, "153583": 243, "035291": 243, "104396": 243, "100064": 243, "015499": 243, "552071": 243, "501458": 243, "278595": 243, "242334": 243, "217068": 243, "047627": 243, "792099": 243, "715951": 243, "798775": 243, "135247": 243, "133493": 243, "021356": 243, "442779": 243, "424958": 243, "125763": 243, "132903": 243, "127188": 243, "010157": 243, "081122": 243, "076790": 243, "005443": 243, "183624": 243, "168501": 243, "027707": 243, "113959": 243, "111168": 243, "012363": 243, "532749": 243, "515747": 243, "325048": 243, "094133": 243, "091212": 243, "014747": 243, "447798": 243, "406737": 243, "194457": 243, "364978": 243, "352973": 243, "124295": 243, "270838": 243, "252922": 243, "063675": 243, "129553": 243, "121963": 243, "014043": 243, "254914": 243, "243250": 243, "064025": 243, "207529": 243, "194633": 243, "046887": 243, "239182": 243, "218112": 243, "044252": 243, "181986": 243, "173826": 243, "020285": 243, "604112": 243, "584208": 243, "604211": 243, "407717": 243, "369648": 243, "154161": 243, "215722": 243, "196744": 243, "043742": 243, "214167": 243, "200091": 243, "036238": 243, "094284": 243, "089002": 243, "007506": 243, "074174": 243, "072365": 243, "007535": 243, "743323": 243, "717468": 243, "654313": 243, "153971": 243, "147360": 243, "014502": 243, "284706": 243, "278460": 243, "072960": 243, "331587": 243, "309374": 243, "116933": 243, "447965": 243, "421612": 243, "129593": 243, "184872": 243, "175196": 243, "029896": 243, "430382": 243, "415446": 243, "141657": 243, "409307": 243, "369197": 243, "189729": 243, "084764": 243, "079718": 243, "007416": 243, "107600": 243, "103145": 243, "013947": 243, "154672": 243, "150761": 243, "028236": 243, "155632": 243, "150461": 243, "034848": 243, "covariance_ratio": 243, "skipped_individu": 243, "050505": 243, "963884": 243, "058896": 243, "087449": 243, "985403": 243, "029066": 243, "101636": 243, "086424": 243, "017369": 243, "094799": 243, "849310": 243, "121111": 243, "049151": 243, "096456": 243, "070088": 243, "040691": 243, "065881": 243, "606158": 243, "205007": 243, "099191": 243, "143483": 243, "050691": 243, "086007": 243, "156273": 243, "919336": 243, "056714": 243, "999221": 243, "029600": 243, "034017": 243, "108785": 243, "038495": 243, "954054": 243, "053618": 243, "096334": 243, "943556": 243, "125423": 243, "086167": 243, "145822": 243, "113939": 243, "114399": 243, "057664": 243, "788608": 243, "063991": 243, "115559": 243, "160549": 243, "034685": 243, "035618": 243, "714976": 243, "092664": 243, "089158": 243, "054565": 243, "002555": 243, "032356": 243, "003056": 243, "936719": 243, "122771": 243, "078285": 243, "096841": 243, "068821": 243, "sqrt": [243, 265], "p_i": 243, "p_": 243, "orig": 243, "operatornam": [243, 256, 276], "sum_": 243, "overlin": [243, 256], "_j": 243, "_k": [243, 256], "det": 243, "Then": [243, 256], "ofv_": 243, "iofv_": 243, "iofv_k": 243, "ofv_k": 243, "case_column": 243, "rikard": [243, 245, 250, 270, 274], "nordgren": [243, 245, 250, 270, 274], "sebastian": [243, 245, 250], "ueckert": [243, 245, 250], "svetlana": 243, "freiberga": 243, "karlsson": [243, 245, 250, 256, 274], "faster": [243, 244, 270], "2018": [243, 261, 274], "abstr": [243, 245], "8683": 243, "www": [243, 245, 261], "meet": [243, 245, 247, 261, 270], "year": [244, 249, 261], "last20": 244, "run_modelsearch": [244, 266, 277], "run_iovsearch": [244, 260], "run_ruvsearch": [244, 274], "run_covsearch": [244, 251, 279], "run_iivsearch": [244, 258], "nomem": 244, "pars": [244, 259, 267, 269, 270, 277], "rh": 244, "1180": 244, "887": [244, 258, 260], "1162": 244, "1032": 244, "add_covariate_effect": [244, 251, 265], "1004": 244, "remove_covariate_effect": [244, 251], "1181": 244, "9fd701521": 244, "best_model": 244, "final_model_nam": 244, "a7fbcbfe2": 244, "update_initial_individual_estim": 244, "modelsearch_candidate1": [244, 266, 277], "modifi": [244, 259, 261, 268], "wors": 244, "calculate_b": [244, 258, 260, 266], "calculate_a": 244, "check_parameters_near_bound": 244, "check_high_correl": 244, "plot_iofv_vs_iofv": 244, "plot_individual_predict": 244, "evaluate_express": 244, "evaluate_weighted_residu": 244, "parameter_esimt": 244, "calculate_pk_parameters_statist": 244, "update_init": [244, 263, 265], "predict_": 244, "print_fit_summari": 244, "write_result": 244, "rank_model": 244, "speedup": 244, "297a64041": 244, "individual_ofv": [244, 264], "1101": 244, "57fc4fee8": 244, "fd417aaf": 244, "convert_model": 244, "d5458e36": 244, "keyerror": 244, "localmodeldirectori": 244, "filenotfounderror": 244, "1193bd39": 244, "unus": 244, "submodul": 244, "bb96a13c": 244, "update_paramet": 244, "0ca786c5": 244, "dd056da3": 244, "915bc9c7": 244, "get_config_path": 244, "disabl": [244, 247], "82b32278": 244, "unwant": 244, "debug": 244, "1131a610": 244, "ebfafb45": 244, "1173": 244, "fb070ee1": 244, "1049": [244, 258], "pyreadr": 244, "easier": [244, 254, 263], "instal": [244, 246, 261, 278], "mac": [244, 249], "m1": [244, 275], "get_evid": 244, "get_cmt": 244, "resmod": [244, 272], "916": 244, "strict": [244, 261], "round": [244, 253], "1055": 244, "attibut": 244, "1092": 244, "exlud": 244, "unreport": 244, "1076": 244, "988": 244, "1c65359": 244, "subtool": [244, 277], "42fe72f": 244, "1001": 244, "lead": [244, 265, 279], "uneven": 244, "branch": [244, 249], "reduc": [244, 275], "stepwis": [244, 251, 275, 277], "694": 244, "properli": 244, "708": 244, "790": 244, "974": 244, "produc": [244, 261], "1017": 244, "989": 244, "71f4cf23": 244, "dsl": 244, "932": 244, "973": 244, "cfc09bad": 244, "975": 244, "917": 244, "977": 244, "908": 244, "fd564168": 244, "088a046a": 244, "c76fa476": 244, "430f1d2e": 244, "make_declar": 244, "greekify_model": 244, "estmethod": 244, "find_clearance_paramet": 244, "find_volume_paramet": 244, "vp": 244, "newer": 244, "820": [244, 264], "seprat": 244, "correctli": 244, "sporad": 244, "race": [244, 247], "caus": [244, 261, 270, 279], "lazi": 244, "duplic": 244, "745": 244, "1st": 244, "3rd": 244, "bad": 244, "710": 244, "configur": [244, 267, 278], "licens": 244, "advanx": 244, "add_time_after_dos": [244, 253], "de": 244, "intercompartment": 244, "695": 244, "defob": 244, "choos": [244, 258, 261, 266, 267, 268], "gl": 244, "solve_ode_system": 244, "meta": 244, "switch": [244, 270], "read_dataset_from_datainfo": 244, "addl": 244, "linalgerror": 244, "656": [244, 258], "tflite": [244, 257], "649": 244, "654": 244, "expand_additional_dos": 244, "better": [244, 266, 274], "modelsyntaxerror": 244, "588": 244, "625": [244, 258], "578": 244, "vc1": 244, "577": 244, "632": 244, "636": 244, "boundari": [244, 260, 266], "590": 244, "gl_real": 244, "sampled_iofv": [244, 276], "version": [244, 246, 257, 261, 277], "subblock": 244, "check_dataset": 244, "tensorflow": 244, "modelbuild": 244, "add_mdt_iiv": 244, "three": [244, 254, 261, 267], "lst": [244, 277], "add_eta": [244, 273], "etas_as_fullblock": 244, "iiv_as_fullblock": 244, "add_mdt_eta": 244, "remove_loq_data": 244, "wip": 244, "don": 244, "130": [244, 251], "create_report": 244, "528": 244, "457": 244, "translate_nmtran_tim": 244, "print_model_cod": [244, 257, 263], "has_michaelis_menten_elimin": 244, "has_zero_order_elimin": 244, "has_first_order_elimin": 244, "has_mixed_mm_fo_elimin": 244, "2c": 244, "1c": 244, "timevari": 244, "create_symbol": 244, "remove_unused_parameters_and_rv": 244, "mu_reference_model": 244, "simplify_express": 244, "cli": [244, 259], "bump_model_numb": 244, "regress": 244, "get_doseid": [244, 253], "get_unit_of": 244, "get_concentration_parameters_from_data": [244, 253], "write_csv": 244, "resample_data": 244, "omit_data": 244, "get_observation_express": 244, "get_individu": 244, "get_dos": [244, 253], "list_time_varying_covari": 244, "estmeth": 244, "optim": [244, 254, 259, 263, 270], "incorrect": 244, "add_allometri": 244, "insert_aft": 244, "modelstat": 244, "power_on_ruv": 244, "estimationmethod": 244, "guard": 244, "avoid": [244, 254, 261], "cdd": 244, "bipp": [244, 246], "frem": [244, 263, 272, 273], "5000": 244, "shift": 244, "write_model": [244, 263, 265, 267], "header": 244, "nest": [244, 279], "update_sourc": [244, 267], "due": [244, 274], "set_dtbs_error_model": [244, 265], "dure": [244, 279], "logger": 244, "parametr": 244, "broken": 244, "parallel": [244, 277], "generate_model_cod": [244, 263], "print_model_symbol": 244, "get_observ": [244, 253], "parameter_sampl": 244, "api": [244, 254, 259, 265, 269, 270, 278], "improv": [244, 273], "eta_shrinkag": 244, "summarize_model": 244, "window": [244, 249, 257, 261], "rstudio": [244, 270], "zero_order_absorpt": 244, "first_order_absorpt": 244, "bolus_absorpt": 244, "set_bolus_absorpt": [244, 265], "seq_zo_fo_absorpt": 244, "set_seq_zo_fo_absorpt": [244, 265], "have_zero_order_absorpt": 244, "has_zero_order_absorpt": 244, "individual_shrinkag": 244, "individual_parameter_statist": 244, "pk_paramet": 244, "create_rv_block": 244, "split_rv_block": 244, "nind": 244, "nob": 244, "nobsi": 244, "remove_error": 244, "additive_error": 244, "proportional_error": 244, "combined_error": 244, "has_additive_error": 244, "has_proportional_error": 244, "has_combined_error": 244, "theta_as_stdev": 244, "set_dtbs_error": 244, "tdist": [244, 271], "john_drap": 244, "add_paramet": 244, "add_individual_paramet": [244, 265], "first_order_elimin": 244, "zero_order_elimin": 244, "michaelis_menten_elimin": 244, "mixed_mm_fo_elimin": 244, "revert": 244, "thread": [244, 247], "phi": [244, 249, 277], "site": 244, "crossval": [244, 272], "qa": [244, 272], "plain": [244, 248, 249], "sdcorr": 244, "data_transform": [244, 265], "evalut": 244, "bootstrap": [244, 272], "dependent_variable_symbol": 244, "releas": [244, 261, 279], "claus": 244, "rework": 244, "interfac": [244, 254, 257, 259, 261, 263, 265, 270, 278, 279], "com": 244, "stdin": 244, "123": [244, 251, 258, 260, 264, 266, 274], "clearer": 244, "prioriti": [244, 267], "aggregatedmodelfitresult": 244, "priorit": [244, 267], "abbr": [244, 248, 267], "half": [244, 271, 273], "life": [244, 271, 273], "set_nam": 244, "copy_model": [244, 265, 279], "parameter_init": 244, "base_parameter_chang": [244, 256], "parameter_vari": [244, 256, 273], "coeffici": 244, "frem_result": 244, "simevalresult": 244, "nonfixed_init": 244, "parameterset": 244, "migrat": 244, "github": [244, 249, 257, 259, 270, 279], "action": [244, 246, 247, 249, 261, 270], "integr": [244, 246, 270], "columntyp": 244, "to_base_model": 244, "comined_mm_fo_elimin": 244, "absorption_r": 244, "pretti": 244, "qaresult": 244, "nmtranparseerror": 244, "error_model": 244, "bootstrapresult": 244, "pharmpyconfigpath": [244, 248], "environ": [244, 247, 278, 279], "linearizeresult": 244, "label": 244, "sometim": 244, "wrong": 244, "reset_indic": 244, "multiindic": 244, "functionsadd_lag_tim": 244, "yaml": 244, "view": [244, 261, 275], "assumpt": [244, 261], "0th": [244, 246], "parser": [244, 270], "individul": 244, "extend": [244, 261, 273, 275], "postprocess": [244, 272], "librari": [244, 257, 259, 261, 270, 279], "stella": [245, 250, 270], "belin": [245, 250, 270], "gunnar": [245, 250], "yngman": [245, 250, 256], "simon": [245, 250], "carter": [245, 250], "buatoi": [245, 250], "jo\u00e3o": [245, 250], "abrant": [245, 250], "andrew": [245, 250], "hooker": [245, 250], "assemblerr": 245, "novel": 245, "process": [245, 274], "2021": [245, 256], "9656": 245, "subcommand": 246, "top": [246, 253, 277], "often": [246, 249, 263, 275], "help": [246, 247, 251, 270, 277, 279], "verb": 246, "particular": [246, 247, 249, 253, 261, 262], "welcom": [246, 247, 249, 261], "usag": 246, "exit": 246, "program": [246, 247, 257, 261], "pheno_r": [246, 253, 263, 264], "prettyprint": 246, "output_fil": 246, "match": 246, "pager": 246, "stdout": [246, 277], "datasetsmultipl": 246, "1th": 246, "quot": 246, "comb": 246, "elimini": 246, "propot": 246, "error_typ": 246, "givenbi": 246, "cov_sampl": 246, "posdef": 246, "non_fix": 246, "input_path": 246, "particip": 247, "project": [247, 248, 249, 259, 261], "made": [247, 261, 263], "member": 247, "globe": 247, "divers": 247, "skill": [247, 270], "person": [247, 261], "experi": 247, "growth": 247, "everyon": [247, 249, 261], "guidelin": 247, "insid": [247, 261], "goal": 247, "inclus": [247, 261, 273], "grow": 247, "pledg": 247, "treat": [247, 249, 261], "peopl": 247, "harass": 247, "bulli": 247, "regardless": [247, 261, 263], "sexual": 247, "orient": 247, "gender": 247, "ident": 247, "appear": [247, 279], "nation": 247, "ethnic": 247, "religion": 247, "imageri": 247, "sexist": 247, "racist": 247, "exclusionari": 247, "joke": 247, "acknowledg": [247, 261], "citat": 247, "request": [247, 249], "author": [247, 261], "own": [247, 248, 254, 261, 263], "cite": 247, "those": [247, 261, 265, 277], "realiz": 247, "varieti": [247, 251], "opinion": 247, "background": 247, "serv": [247, 261, 270], "enrich": 247, "discuss": 247, "pro": 247, "con": 247, "technologi": 247, "proactiv": 247, "ensur": [247, 261], "heard": 247, "feel": [247, 270], "confid": 247, "freeli": 247, "question": 247, "answer": 247, "respectfulli": 247, "pai": 247, "attent": 247, "feedback": 247, "forum": 247, "especi": 247, "contribut": [247, 259, 261], "conscienti": 247, "percept": 247, "wider": 247, "respond": 247, "strive": 247, "behavior": 247, "encourag": [247, 249, 254, 259], "product": [247, 251, 261], "debat": 247, "disagr": 247, "entir": [247, 249, 261, 277], "silent": 247, "violat": [247, 261], "contact": [247, 261], "maintain": [247, 249, 250, 259, 261, 269, 270], "talk": 247, "privat": [247, 251, 261], "situat": 247, "onlin": 247, "offlin": 247, "mail": [247, 261], "social": 247, "media": 247, "confer": 247, "associ": [247, 260, 261], "adapt": [247, 261, 270], "astropi": 247, "appdir": 248, "your": [248, 249, 257, 259, 261, 265, 267, 277, 279], "web": 248, "pypi": [248, 249, 257], "ini": 248, "fallback": 248, "pharmpyconfigfil": 248, "bug": 249, "appreci": 249, "suggest": [249, 259], "suitabl": [249, 270], "student": [249, 270], "intern": [249, 263, 265, 267, 270, 279], "commun": [249, 261], "aspir": 249, "conduct": [249, 266], "foster": 249, "linux": [249, 257], "maco": [249, 257], "ll": 249, "badg": 249, "pip": [249, 257], "python3": 249, "pip3": 249, "guid": 249, "former": 249, "ubuntu": 249, "apt": 249, "url": [249, 257], "render": [249, 261, 270], "On": [249, 270], "sudo": 249, "brew": 249, "unnecessari": [249, 261], "thing": [249, 261], "instruct": 249, "black": 249, "formatt": 249, "flake8": 249, "linter": 249, "isort": 249, "lint": 249, "reformat": 249, "py39": 249, "test_paramet": 249, "py": [249, 257], "test_get_theta": 249, "apart": 249, "suit": 249, "purpos": [249, 261], "complex": [249, 257, 259], "test_modelsearch": 249, "test_summary_individu": 249, "pull": 249, "manag": 249, "contributor": [249, 261], "emploi": 249, "commit": [249, 261], "push": 249, "name_of_branch": 249, "deploy": 249, "setup": 249, "trigger": [249, 263], "tag": 249, "changelog": 249, "bump": 249, "semant": 249, "bumpvers": 249, "cfg": 249, "sh": 249, "patch": 249, "minor": 249, "major": [249, 261], "copyright": 249, "necessari": [249, 261, 279], "coi": 249, "stream": [249, 263], "verbatim": [249, 261], "farmaci": 250, "uu": 250, "kajsa": 250, "harl": 250, "zhe": [250, 270], "huang": [250, 270], "aurelien": 250, "oom": 250, "piyanan": 250, "assawasuwannakit": 250, "xiaomei": 250, "chen": 250, "alzahra": 250, "hamdan": 250, "osama": 250, "qutishat": 250, "shijun": 250, "wang": 250, "tianwu": 250, "yang": 250, "warm": 250, "thank": 250, "sponsor": 250, "hoffman": 250, "la": 250, "roch": 250, "ltd": 250, "pharmetheu": 250, "uppsala": [250, 259], "univers": [250, 259], "inter": [251, 258], "five": 251, "third": [251, 254, 261], "fourth": 251, "cartesian": 251, "manual": [251, 253, 277], "rewritten": 251, "notic": [251, 261], "semicolon": 251, "mox2": [251, 258, 260, 266, 277], "418814": 251, "139": 251, "125102": 251, "138": 251, "135134": 251, "927208": 251, "485622": 251, "937252": 251, "780611": 251, "mo": [251, 256], "504543": 251, "90": 251, "597508": 251, "87": 251, "790910": 251, "806421": 251, "62": [251, 271], "737810": 251, "195653": 251, "315057": 251, "651626": 251, "814832": 251, "978215": 251, "056538": 251, "732689": 251, "062682": 251, "061671": 251, "742325": 251, "1436": 251, "605574": 251, "1431": 251, "311862": 251, "1430": 251, "321894": 251, "1425": 251, "113968": 251, "1424": 251, "672383": 251, "124012": 251, "1422": 251, "967372": 251, "1415": 251, "691304": 251, "1382": 251, "784268": 251, "1379": 251, "977671": 251, "1364": [251, 258], "993181": 251, "1354": 251, "924571": 251, "382413": 251, "1346": 251, "501817": 251, "1335": 251, "838386": 251, "1334": 251, "001593": 251, "1332": 251, "164976": 251, "1313": [251, 266], "243298": 251, "1312": 251, "919450": 251, "249442": 251, "248431": 251, "1302": 251, "929085": 251, "1292": [251, 258, 260, 266], "186761": [251, 258, 260, 266], "1414": 251, "1386": 251, "787242": 251, "1409": 251, "1381": 251, "493530": 251, "1408": 251, "1380": 251, "503563": 251, "1405": [251, 258, 260, 266, 274], "586096": 251, "1404": [251, 258, 260, 266, 274], "144510": 251, "1378": [251, 258], "596140": 251, "1402": [251, 260], "1377": 251, "439499": 251, "1397": 251, "1374": 251, "453891": 251, "1341": 251, "546855": 251, "1361": 251, "1338": 251, "740258": 251, "1323": 251, "755768": 251, "1336": 251, "687158": 251, "145000": 251, "1330": 251, "1309": 251, "554864": 251, "1319": 251, "1298": 251, "891433": 251, "1318": 251, "1297": 251, "054639": 251, "1316": 251, "1295": [251, 266], "218022": 251, "1276": 251, "296345": 251, "1296": 251, "1275": 251, "972496": 251, "302489": 251, "301478": 251, "1286": 251, "1265": [251, 260], "982132": 251, "1278": [251, 258, 260, 266], "1259": [251, 258, 260, 266], "530267": [251, 258, 260, 266], "550520": 251, "1328": 251, "1305": [251, 266], "313107": 251, "1350": 251, "224247": 251, "1308": 251, "986835": 251, "1416": 251, "503401": 251, "1396": 251, "1370": 251, "975529": 251, "1417": 251, "275090": 251, "1371": 251, "747218": 251, "1418": 251, "475139": 251, "1398": 251, "1372": 251, "947267": 251, "1426": 251, "509140": 251, "1376": 251, "690808": 251, "430350": 251, "612019": 251, "1427": 251, "910516": 251, "092185": 251, "1437": 251, "275565": 251, "1413": 251, "1383": 251, "166774": 251, "631837": 251, "1412": 251, "523046": 251, "957318": 251, "848526": 251, "805990": 251, "697199": 251, "1438": 251, "187223": 251, "1384": 251, "078432": 251, "1363": 251, "424478": 251, "1343": [251, 258], "1317": 251, "896606": 251, "1388": 251, "878574": 251, "1368": 251, "350702": 251, "113956": 251, "586084": 251, "ruv_prop_estim": [251, 274], "9960": 251, "187601": 251, "7980": 251, "185142": 251, "6117": 251, "180085": 251, "5252": 251, "181726": 251, "7337": 251, "184103": 251, "4092": 251, "180301": 251, "4997": 251, "179325": 251, "4482": 251, "181272": 251, "4189": 251, "189053": 251, "5013": 251, "188003": 251, "6103": 251, "187672": 251, "8728": 251, "190712": 251, "3161": 251, "195330": 251, "8757": 251, "192852": 251, "3323": 251, "191425": 251, "7087": 251, "192934": 251, "4824": 251, "199549": 251, "9807": 251, "192557": 251, "3823": 251, "198783": 251, "1536": 251, "193411": 251, "9763": 251, "195608": 251, "2632": 251, "197452": 251, "5328": [251, 258, 260, 266], "209972": [251, 258, 260, 266], "8499": 251, "192681": 251, "1238": 251, "194408": 251, "5391": 251, "182237": 251, "7059": 251, "182092": 251, "4373": 251, "181626": 251, "7842": 251, "182065": 251, "5121": 251, "181752": 251, "4741": 251, "180703": 251, "9846": 251, "187508": 251, "0276": 251, "187684": 251, "9787": 251, "186766": 251, "9897": 251, "187557": 251, "9709": 251, "186978": 251, "8036": 251, "196301": 251, "9160": 251, "192686": 251, "184102": 251, "5256": 251, "181734": 251, "pop_clage_estim": 251, "pop_clsex_estim": 251, "pop_clwt_estim": 251, "739428": 251, "007466": 251, "724484": 251, "765510": 251, "784040": 251, "788914": 251, "849555": 251, "808269": 251, "834534": 251, "577983": 251, "386872": 251, "414099": 251, "365025": 251, "293158": 251, "004963": 251, "382904": 251, "010536": 251, "005338": 251, "000660": 251, "387683": 251, "342000": 251, "002802": 251, "812282": 251, "743874": 251, "002654": 251, "856355": 251, "712068": 251, "002342": 251, "796171": 251, "805106": 251, "002752": 251, "726541": 251, "730115": 251, "000284": 251, "737330": 251, "746890": 251, "747449": 251, "373211": 251, "788917": 251, "784186": 251, "034933": 251, "013481": 251, "037359": 251, "227740": 251, "022746": 251, "049832": 251, "019706": 251, "059279": 251, "517590": 251, "406124": 251, "258315": 251, "008865": 251, "008788": 251, "242742": 251, "006337": 251, "013997": 251, "809357": 251, "007942": 251, "746753": 251, "009662": 251, "772697": 251, "007715": 251, "756337": 251, "008384": 251, "011954": 251, "133780": 251, "943702": 251, "073220": 251, "086860": 251, "013679": 251, "953372": 251, "013320": 251, "014651": 251, "008482": 251, "115170": 251, "065250": 251, "942578": 251, "723985": 251, "008686": 251, "705263": 251, "007851": 251, "765500": 251, "006172": 251, "011627": 251, "800803": 251, "008297": 251, "013862": 251, "800449": 251, "008143": 251, "012912": 251, "808946": 251, "007874": 251, "014022": 251, "741105": 251, "007820": 251, "013734": 251, "793357": 251, "007122": 251, "015534": 251, "596488": 251, "008073": 251, "012324": 251, "012251": 251, "133790": 251, "756260": 251, "008381": 251, "110": [251, 258, 260, 266, 274], "113": [251, 258, 260, 266, 274], "121": [251, 258, 260, 266, 274], "1403": [251, 258, 260, 266, 274], "1406": [251, 258, 260, 266, 274], "1407": [251, 258, 260, 266, 274], "757118": [251, 258, 260, 266], "659694": [251, 258, 260, 266], "302503": [251, 258, 260, 266], "464327": [251, 258, 260, 266], "034898": [251, 258, 260, 266], "167558": 251, "086188": 251, "238268": 251, "450755": 251, "456701": 251, "573801": 251, "385316": 251, "317492": 251, "252706": 251, "975049": 251, "2920": 251, "reduced_ofv": [251, 275], "extended_ofv": [251, 275], "ofv_drop": [251, 275], "extended_st": [251, 275], "048703": 251, "880596": 251, "422754": 251, "282451": 251, "491364": 251, "722430": 251, "69": 251, "189487": 251, "475854": 251, "812097": 251, "583786": 251, "276068": 251, "783835": 251, "432709": 251, "981079": 251, "422665": 251, "197894": 251, "395171": 251, "207926": 251, "316382": 251, "796548": 251, "491606": 251, "669991": 251, "026263": 251, "351743": 251, "200416": 251, "581649": 251, "181096": 251, "727000": 251, "933192": 251, "491618": 251, "delta_df": [251, 275], "pvalu": [251, 275], "goal_pvalu": [251, 275], "047127e": 251, "03": [251, 271, 273, 275], "710000e": 251, "568110e": 251, "494490e": 251, "498453e": 251, "459287e": 251, "280678e": 251, "923500e": 251, "003390e": 251, "253363e": 251, "996801e": 251, "705542e": 251, "706940e": 251, "706759e": 251, "368618e": 251, "02": [251, 273, 275, 277], "944356e": 251, "215423e": 251, "675009e": 251, "082162e": 251, "987935e": 251, "521990e": 251, "685310e": 251, "727896e": 251, "143199e": 251, "279024e": 251, "375337e": 251, "248414e": 251, "512424e": 251, "446750e": 251, "991122e": 251, "130547e": 251, "712593e": 251, "531279e": 251, "732385e": 251, "085233e": 251, "is_backward": [251, 275], "extended_signific": [251, 275], "folder": 251, "t3": 251, "rms6r0p90qs2_8fd7g2p8f": 251, "covariate_effect": [251, 256, 273, 275], "ofv_summari": [251, 275], "candidate_summari": [251, 275], "n_test": [251, 275], "n_ok": [251, 275], "n_localmin": [251, 275], "n_fail": [251, 275], "stepinclud": [251, 275], "estimation_ofv": 252, "prediction_ofv": 252, "545": 252, "863847": 252, "186": 252, "192727": 252, "512": 252, "953185": 252, "694832": 252, "547": 252, "843632": 252, "184": [252, 275], "022535": 252, "579": 252, "109635": 252, "596550": 252, "prediction_ofv_sum": 252, "747": 252, "506644594254": 252, "read_raw_dataset": 253, "arrai": [253, 263, 277], "get_id": 253, "largest": 253, "ser": 253, "di": [253, 279], "role": 253, "identif": [253, 274], "mostli": [253, 254, 270], "steven": 253, "typologi": 253, "en": [253, 254, 256], "wikipedia": 253, "wiki": [253, 261], "level_of_measur": 253, "annot": 253, "kg": 253, "mg": 253, "l": [253, 279], "low": [253, 263, 265], "understand": [253, 269], "accompani": [253, 261], "And": [253, 261, 277], "map": 253, "under": [254, 259, 261, 275, 279], "construct": [254, 269], "complet": 254, "four": 254, "distinct": 254, "layer": [254, 266, 268], "worklow": 254, "higher": [254, 259, 263, 265, 276], "coupl": 254, "mathemat": [254, 263, 270], "concid": 254, "live": 254, "namespac": 254, "mutablesequ": 254, "scalar": [254, 263], "element": [254, 264], "concern": [254, 261], "expos": 254, "numpydoc": 254, "readthedoc": 254, "ecosystem": 254, "thu": [254, 258, 261, 263, 277], "wrap": 254, "share": [254, 261, 268], "leak": 254, "parti": [254, 261], "break": 254, "creation": 256, "model_3b": 256, "u": [256, 265], "eta_i": 256, "leq": 256, "n_": 256, "par": [256, 263], "eta_k": 256, "bmatrix": 256, "vdot": 256, "eta_": 256, "sim": [256, 263, 265, 276], "mathcal": [256, 263, 265], "mu_2": 256, "omega_": [256, 265], "n1": 256, "n2": 256, "ddot": 256, "latter": 256, "partit": 256, "5th": 256, "630859": 256, "868770": 256, "176754": 256, "95th": 256, "925602": 256, "082310": 256, "244607": 256, "569077": 256, "600360": 256, "632538": 256, "532478": 256, "824355": 256, "138312": 256, "577861": 256, "761430": 256, "991915": 256, "003863": 256, "148763": 256, "297579": 256, "600771": 256, "631260": 256, "661025": 256, "315965": 256, "549669": 256, "811532": 256, "margin": 256, "ij": 256, "ijk": 256, "omega_k": 256, "sigma_1": 256, "sigma_2": 256, "sigma_i": 256, "turn": [256, 263], "percent": 256, "red": 256, "figur": 256, "vconcatchart": 256, "sigma_": 256, "020503": 256, "628814": 256, "009309": 256, "544459": 256, "026950": 256, "613127": 256, "050396": 256, "551581": 256, "individual_effect": 256, "913307": 256, "899565": 256, "923297": 256, "939015": 256, "926632": 256, "948404": 256, "933506": 256, "894967": 256, "970755": 256, "010192": 256, "973823": 256, "047109": 256, "992728": 256, "986142": 256, "999404": 256, "361911": 256, "322628": 256, "418737": 256, "894772": 256, "868658": 256, "917333": 256, "947797": 256, "923656": 256, "969732": 256, "771958": 256, "748072": 256, "790423": 256, "790120": 256, "768277": 256, "806911": 256, "percentu": 256, "unexplained_vari": 256, "sd_observ": 256, "sd_5th": 256, "sd_95th": 256, "469535": 256, "359934": 256, "547612": 256, "465490": 256, "352335": 256, "538174": 256, "165502": 256, "141580": 256, "190726": 256, "159149": 256, "134989": 256, "183613": 256, "420471": 256, "327104": 256, "490419": 256, "404440": 256, "306148": 256, "467046": 256, "143317": 256, "122348": 256, "166012": 256, "141826": 256, "120282": 256, "163610": 256, "percetil": 256, "025328": 256, "022571": 256, "020115": 256, "216681": 256, "188254": 256, "163572": 256, "027391": 256, "021634": 256, "020540": 256, "intermedi": 256, "model_4": [256, 263], "parameter_inits_and_estim": 256, "model_3": 256, "115195": 256, "007066": 256, "209016": 256, "125999": 256, "020191": 256, "224959": 256, "126000": 256, "007084": 256, "38635": 256, "220463": 256, "195326": 256, "176796": 256, "bsv_apgr": 256, "010583": 256, "107027": 256, "000008": 256, "171529": 256, "404278": 256, "000010": 256, "012042": 256, "115427": 256, "000032": 256, "208475": 256, "415588": 256, "000030": 256, "062712": 256, "117271": 256, "039930": 256, "446939": 256, "402075": 256, "bsv_wgt": 256, "244579": 256, "244448": 256, "002173": 256, "002170": 256, "244080": 256, "007763": 256, "007760": 256, "249237": 256, "034610": 256, "015250": 256, "relative_chang": 256, "773218": 256, "095327": 256, "520526": 256, "271369": 256, "110618": 256, "974324": 256, "868": [256, 258], "657803": 256, "852": 256, "803483": 256, "753": 256, "302743": 256, "themselv": 256, "ideal": 256, "estimated_covari": 256, "stdev": 256, "423728": 256, "237640": 256, "525424": 256, "704565": 256, "nyberg": 256, "hb": 256, "jonsson": 256, "introduct": 256, "cpt": 256, "pharmacometr": [256, 259, 261, 277], "syst": 256, "pharmacol": 256, "1002": 256, "psp4": 256, "12741": 256, "plan": 257, "stabl": 257, "googl": [257, 270], "coral": 257, "repo": 257, "tflite_runtim": 257, "nonlinear": 257, "examin": 257, "sever": [257, 273], "read_model_result": 258, "aspect": [258, 273, 277], "explor": [258, 270], "naiv": 258, "minima": 258, "\u03b4ofv": [258, 260, 266], "\u03b4aic": [258, 260, 266], "\u03b4bic": [258, 260, 266], "iivsearch_no_of_etas_candidate3": 258, "282024": 258, "iivsearch_no_of_etas_candidate2": 258, "217": 258, "691571": 258, "iivsearch_no_of_etas_candidate6": 258, "385": 258, "641987": 258, "iivsearch_no_of_etas_candidate1": 258, "631": 258, "871991": 258, "iivsearch_no_of_etas_candidate5": 258, "633": [258, 264], "419500": 258, "iivsearch_no_of_etas_candidate4": 258, "815": 258, "076729": 258, "iivsearch_no_of_etas_candidate7": 258, "834": 258, "249063": 258, "iivsearch_block_structure_candidate1": 258, "81": [258, 264], "971960": 258, "1283": [258, 260], "597406": 258, "1279": 258, "315382": 258, "1061": 258, "623812": 258, "673395": 258, "443392": 258, "645": 258, "895882": 258, "464": 258, "238653": 258, "066319": 258, "1365": 258, "569365": 258, "178325": 258, "1280": [258, 260], "1070": 258, "204731": 258, "1058": 258, "897": 258, "963854": 258, "024311": 258, "644": 258, "650": 258, "186341": 258, "640": 258, "468": 258, "529112": 258, "458": 258, "437": 258, "440744": 258, "1261": [258, 260], "189012": 258, "1039": 258, "215418": [258, 275], "641723": 258, "034998": 258, "620": 258, "864210": 258, "439": 258, "206982": 258, "417": 258, "411370": 258, "160972": 258, "5333": 258, "0366": 258, "1164": 258, "1064": 258, "2929": 258, "8058": 258, "9055": 258, "104": [258, 260, 266], "2270": 258, "2300": [258, 266], "9424": 258, "103": 258, "1360": 258, "239": 258, "1090": 258, "234": 258, "6680": 258, "9380": 258, "6690": 258, "106": [258, 271, 273, 274], "9880": 258, "433544": 258, "433676": [258, 260, 266], "114210": 258, "347648": 258, "316164": 258, "310155": 258, "922906": 258, "434563": 258, "436279": 258, "481830": 258, "481858": [258, 260, 266], "594777": 258, "396159": 258, "516927": 258, "593578": 258, "593654": [258, 260, 266], "414690": 258, "247930": 258, "656304": 258, "00013": 258, "31998": 258, "08352": 258, "43473": 258, "209975": 258, "401593": 258, "574966": 258, "736398": 258, "750954": 258, "744891": 258, "810669": 258, "215885": 258, "iiv_cl_iiv_vc_estim": 258, "498114": 258, "965311": 258, "348227": 258, "596114": 258, "524856": 258, "831038": 258, "973037": 258, "826292": 258, "168816": 258, "275494": 258, "612863": 258, "081253": 258, "444919": 258, "093815": 258, "067016": 258, "554482": 258, "103963": 258, "060027": 258, "670815": 258, "108198": 258, "049148": 258, "371": 258, "agnost": 259, "architectur": 259, "mainli": 259, "foundat": [259, 261], "post": [259, 274], "sens": 260, "brute": 260, "approach": 260, "nonzero": 260, "constant": 260, "iovsearch_candidate7": 260, "eta_iov_2_1": 260, "eta_iov_3_1": 260, "540508": 260, "iovsearch_candidate5": 260, "230772": 260, "iovsearch_candidate6": 260, "230394": 260, "iovsearch_candidate3": 260, "750000": 260, "iovsearch_candidate4": 260, "750400": 260, "iovsearch_candidate2": 260, "060114": 260, "iovsearch_candidate1": 260, "043077": 260, "iovsearch_candidate8": 260, "241921": 260, "694052": 260, "384316": 260, "383938": 260, "1262": 260, "153544": 260, "403544": 260, "403145": 260, "093431": 260, "1257": 260, "110467": 260, "1115": 260, "911624": 260, "1300": 260, "017728": 260, "1284": 260, "1263": 260, "070775": 260, "1299": 260, "707992": 260, "761039": 260, "707614": 260, "760660": 260, "017679": 260, "1282": 260, "1258": 260, "780267": 260, "017280": 260, "779867": 260, "707566": 260, "1281": 260, "470153": 260, "015062": 260, "1254": 260, "487190": 260, "1145": 260, "944840": 260, "1131": 260, "1113": 260, "288346": 260, "1954": 260, "1951": 260, "1950": 260, "2313": 260, "242": [260, 271, 273], "440613": 260, "665": 260, "439785": 260, "439783": 260, "230": 260, "241": 260, "440611": 260, "439784": 260, "438628": 260, "474140": 260, "586866": 260, "472835": 260, "590425": 260, "472840": 260, "590424": 260, "474125": 260, "586859": 260, "474111": 260, "586860": 260, "590422": 260, "572627": 260, "311861": 260, "194680": 260, "320393": 260, "195531": 260, "320395": 260, "195532": 260, "000130": [260, 266], "311859": 260, "194676": 260, "311903": 260, "194675": 260, "320387": 260, "290631": 260, "197005": 260, "omega_iov_1_estim": 260, "omega_iov_2_estim": 260, "002735": 260, "000006": 260, "483460": 260, "omega_iov_3_estim": 260, "000000e": [260, 275], "119820": 260, "001912": 260, "121866": 260, "620420": 260, "291396": 260, "230854": 260, "936871": 260, "267222": 260, "050766": 260, "059323": 260, "068405": 260, "291876": 260, "271367": 260, "187631": 260, "051358": 260, "020838": 260, "042977": 260, "612880": 260, "250083": 260, "660334": 260, "657": 260, "395": 260, "NEAR": [260, 266], "BE": [260, 261], "address": [260, 261], "adopt": 261, "wikimedia": 261, "bowl_of_hygieia_by_david": 261, "svg": 261, "cc": 261, "BY": 261, "sa": 261, "font": 261, "pt": 261, "san": 261, "relicens": 261, "lgpl": 261, "know": 261, "maintaint": 261, "softwar": [261, 270, 277], "redistribut": 261, "publish": 261, "hope": 261, "warranti": 261, "impli": 261, "merchant": 261, "FOR": 261, "modif": [261, 273], "permit": 261, "retain": 261, "disclaim": 261, "reproduc": 261, "materi": 261, "holder": 261, "AND": [261, 265], "AS": 261, "OR": 261, "BUT": 261, "NOT": 261, "TO": 261, "OF": 261, "IN": 261, "shall": 261, "liabl": 261, "indirect": 261, "incident": 261, "exemplari": 261, "consequenti": 261, "damag": 261, "procur": 261, "good": 261, "servic": 261, "loss": 261, "profit": 261, "busi": 261, "interrupt": 261, "ON": 261, "theori": [261, 263], "liabil": 261, "contract": 261, "tort": 261, "neglig": 261, "aris": 261, "advis": 261, "SUCH": 261, "june": 261, "2007": 261, "inc": 261, "fsf": 261, "preambl": 261, "copyleft": 261, "practic": 261, "design": [261, 263, 265, 270, 277], "awai": 261, "contrast": 261, "guarante": 261, "too": 261, "speak": 261, "price": 261, "charg": 261, "wish": [261, 265], "piec": 261, "prevent": 261, "deni": 261, "ask": [261, 279], "surrend": 261, "therefor": 261, "respons": 261, "grati": 261, "fee": 261, "recipi": 261, "gpl": 261, "assert": 261, "offer": [261, 263, 265], "permiss": 261, "clearli": 261, "sake": 261, "erron": 261, "devic": 261, "although": 261, "manufactur": 261, "fundament": 261, "incompat": 261, "aim": [261, 273], "systemat": 261, "abus": 261, "area": [261, 270], "precis": 261, "unaccept": 261, "prohibit": 261, "substanti": 261, "domain": [261, 268, 277], "stand": 261, "readi": 261, "provis": 261, "futur": 261, "threaten": 261, "constantli": [261, 279], "patent": 261, "danger": 261, "proprietari": 261, "assur": 261, "law": 261, "semiconductor": 261, "mask": 261, "license": 261, "organ": [261, 263], "fashion": 261, "exact": 261, "earlier": 261, "cover": [261, 266, 267, 269, 278], "unmodifi": 261, "propag": 261, "secondarili": 261, "infring": 261, "countri": 261, "convei": 261, "enabl": 261, "mere": 261, "network": 261, "transfer": 261, "extent": 261, "conveni": [261, 263], "promin": 261, "visibl": 261, "menu": 261, "criterion": 261, "offici": 261, "wide": 261, "among": 261, "essenti": 261, "kernel": 261, "script": [261, 277], "link": [261, 274], "subprogram": 261, "intim": 261, "regener": 261, "grant": 261, "irrevoc": 261, "affirm": 261, "unlimit": 261, "constitut": 261, "fair": 261, "equival": [261, 263, 277], "sole": 261, "facil": 261, "compli": 261, "behalf": 261, "relationship": [261, 275], "circumst": 261, "sublicens": 261, "anti": 261, "circumvent": 261, "deem": 261, "technolog": 261, "fulfil": 261, "oblig": 261, "articl": 261, "wipo": 261, "treati": 261, "decemb": 261, "1996": 261, "waiv": 261, "forbid": 261, "exercis": 261, "intent": 261, "enforc": 261, "medium": [261, 270], "conspicu": 261, "intact": 261, "absenc": 261, "along": 261, "relev": [261, 267, 277], "anyon": 261, "who": [261, 267], "possess": 261, "invalid": 261, "natur": 261, "storag": 261, "aggreg": 261, "beyond": 261, "embodi": 261, "durabl": 261, "customarili": 261, "interchang": 261, "spare": 261, "reason": [261, 270], "cost": 261, "server": 261, "occasion": 261, "noncommerci": 261, "subsect": 261, "6b": 261, "further": 261, "clear": [261, 279], "sai": [261, 267], "host": 261, "satisfi": 261, "peer": 261, "transmiss": 261, "6d": 261, "portion": 261, "consum": 261, "tangibl": 261, "household": 261, "sold": 261, "incorpor": 261, "dwell": 261, "doubt": 261, "resolv": [261, 268], "favor": 261, "coverag": 261, "typic": [261, 277], "commerci": 261, "industri": 261, "procedur": 261, "suffic": 261, "interf": 261, "perpetu": 261, "character": 261, "But": 261, "nor": 261, "abil": 261, "rom": 261, "advers": 261, "protocol": 261, "publicli": 261, "password": 261, "unpack": 261, "supplement": 261, "govern": 261, "notwithstand": 261, "misrepresent": 261, "licensor": 261, "declin": 261, "trademark": 261, "trade": 261, "indemnif": 261, "contractu": 261, "impos": 261, "surviv": 261, "termin": 261, "expressli": 261, "void": 261, "paragraph": 261, "ceas": 261, "reinstat": 261, "provision": 261, "perman": 261, "notifi": 261, "prior": 261, "dai": 261, "cessat": 261, "moreov": 261, "cure": 261, "receipt": 261, "qualifi": 261, "ancillari": 261, "consequ": 261, "likewis": 261, "downstream": 261, "complianc": 261, "entiti": 261, "asset": 261, "subdivid": 261, "predecessor": 261, "plu": 261, "effort": 261, "royalti": 261, "litig": 261, "cross": 261, "claim": 261, "counterclaim": 261, "lawsuit": 261, "alleg": 261, "sell": 261, "sale": 261, "acquir": 261, "hereaft": 261, "manner": [261, 266], "worldwid": 261, "agreement": 261, "denomin": 261, "coven": 261, "sue": 261, "knowingli": 261, "readili": 261, "arrang": 261, "depriv": 261, "yourself": 261, "benefit": [261, 270], "knowledg": 261, "believ": 261, "pursuant": 261, "convey": 261, "discriminatori": 261, "scope": 261, "payment": 261, "primarili": 261, "march": 261, "constru": 261, "defens": 261, "court": 261, "contradict": 261, "excus": 261, "simultan": [261, 266], "pertin": 261, "agre": 261, "whom": 261, "refrain": 261, "affero": 261, "revis": 261, "Such": 261, "spirit": 261, "ever": 261, "proxi": 261, "THERE": 261, "qualiti": 261, "prove": 261, "defect": 261, "repair": 261, "WILL": 261, "inabl": 261, "BEING": 261, "inaccur": 261, "sustain": 261, "failur": [261, 270], "review": 261, "waiver": 261, "civil": 261, "greatest": 261, "achiev": 261, "attach": 261, "safest": 261, "pointer": 261, "brief": 261, "idea": [261, 270], "electron": 261, "paper": 261, "hypothet": 261, "Of": 261, "cours": 261, "gui": 261, "box": [261, 273], "employ": 261, "programm": 261, "school": 261, "philosophi": 261, "why": 261, "7b2feb6f20b626a559d3150f6638c111f20b5213": 261, "lin_evalu": 262, "lin_estim": 262, "268756": 262, "problemat": 262, "947354": 262, "939053": 262, "008301": 262, "970582": 262, "012053": 262, "041471": 262, "982345": 262, "979456": 262, "002889": 262, "457096": 262, "435700": 262, "021396": 262, "839445": 262, "838391": 262, "001054": 262, "257222": 262, "278016": 262, "020794": 262, "098344": 262, "077164": 262, "021179": 262, "538623": 262, "520111": 262, "018512": 262, "647972": 262, "673400": 262, "025427": 262, "394648": 262, "373180": 262, "021468": 262, "480163": 262, "505680": 262, "025517": 262, "650236": 262, "629298": 262, "020938": 262, "991406": [262, 264], "988587": 262, "002820": 262, "378873": 262, "372846": 262, "006028": 262, "739906": 262, "725640": 262, "014265": 262, "328801": 262, "326482": 262, "002319": 262, "113286": 262, "104515": 262, "008771": 262, "212076": 262, "325127": 262, "113051": 262, "334048": 262, "321306": 262, "012742": 262, "327782": 262, "306287": 262, "021495": 262, "821537": 262, "795371": 262, "026165": 262, "631283": 262, "620311": 262, "010972": 262, "861666": 262, "855927": 262, "005739": 262, "915260": 262, "913348": 262, "001913": 262, "988972": 262, "024483": 262, "035512": 262, "279274": 262, "269277": 262, "009997": 262, "733179": 262, "729199": 262, "003980": 262, "830055": 262, "827764": 262, "002290": 262, "851725": 262, "847176": 262, "004549": 262, "212098": 262, "192122": 262, "019976": 262, "774789": 262, "773559": 262, "001230": 262, "352292": 262, "351131": 262, "001162": 262, "172644": 262, "165200": 262, "007443": 262, "427375": 262, "420258": 262, "007117": 262, "381438": 262, "412378": 262, "030941": 262, "624011": 262, "614613": 262, "009397": 262, "970630": 262, "955216": 262, "015414": 262, "177025": 262, "002885": 262, "206543": 262, "180626": 262, "025916": 262, "955033": 262, "945036": 262, "982451": 262, "972114": 262, "010337": 262, "051495": 262, "098643": 262, "047147": 262, "424500": 262, "425925": 262, "001425": 262, "734347": 262, "702764": 262, "031583": 262, "018483": 262, "997957": 262, "020526": 262, "810285": [262, 264], "807205": 262, "003080": 262, "279257": 262, "276411": 262, "002846": 262, "168465": 262, "267932": 262, "099467": 262, "190512": 262, "178815": 262, "011697": 262, "749138": 262, "727859": 262, "021278": 262, "598562": 262, "616685": 262, "018123": 262, "237457": 262, "251607": 262, "014150": 262, "568928": 262, "581417": 262, "012489": 262, "800065": 262, "795239": 262, "004826": 262, "098027": 262, "103873": 262, "005846": 262, "586253": [262, 264], "582931": 262, "003323": 262, "663950": 262, "650298": 262, "013652": 262, "850995": 262, "833333": 262, "017662": 262, "605848": 262, "592551": 262, "013297": 262, "iofv_plot": 262, "At": 263, "heart": 263, "li": [263, 277], "subclass": 263, "principl": 263, "pharmi": 263, "transpar": 263, "mymodel": [263, 265], "inspect": 263, "sdtab1": 263, "displaystyl": [263, 265], "infti": 263, "parset": 263, "eta1": 263, "frem_model": 263, "000286193": 263, "0676481": 263, "0256033": 263, "027906": [263, 264], "0235094": 263, "00161838": 263, "24458": 263, "omega_est": 263, "0393482": 263, "0168369": 263, "0442286": 263, "0426757": 263, "0259374": 263, "0654878": 263, "00168063": 263, "983027": 263, "240423": 263, "98305": 263, "choleski": 263, "198363807182661": 263, "0848788911603008": 263, "136868454493349": 263, "222967085720797": 263, "616745467855979": 263, "743597812371906": 263, "215138540674925": 263, "145697201390566": 263, "508675383095755": 263, "810424017694199": 263, "pure": 263, "astyp": 263, "numeric64": 263, "linalg": 263, "19836381": 263, "08487889": 263, "13686845": 263, "22296709": 263, "61674547": 263, "74359781": 263, "21513854": 263, "1456972": 263, "50867538": 263, "81042402": 263, "quit": 263, "flexibl": 263, "cumbersom": 263, "easili": 263, "a_": [263, 265], "004696": [263, 264], "158920": [263, 264], "029351": [263, 264], "s_": [263, 265], "testdata": 264, "2760562818805": 264, "parameter_estimates_sdcorr": 264, "171321": 264, "167051": 264, "115069": 264, "Or": 264, "standard_errors_sdcorr": 264, "039153": 264, "022378": 264, "009904": 264, "relative_standard_error": 264, "044731": 264, "027325": 264, "527072": 264, "457068": 264, "267918": 264, "172147": 264, "proper": 264, "388058": 264, "356900": 264, "238442": 264, "096516": 264, "invers": 264, "29955600": 264, "400": 264, "910": 264, "267": 264, "039": 264, "207": 264, "809": 264, "520": 264, "980": 264, "200": 264, "450": 264, "947352": 264, "970591": 264, "982342": 264, "457091": 264, "839437": 264, "257230": 264, "098338": 264, "538621": 264, "647969": 264, "394643": 264, "480164": 264, "650233": 264, "378880": 264, "739902": 264, "328800": 264, "113284": 264, "212096": 264, "334047": 264, "327778": 264, "821533": 264, "631281": 264, "861669": 264, "915261": 264, "988977": 264, "279273": 264, "733181": 264, "830053": 264, "851724": 264, "212095": 264, "774791": 264, "352283": 264, "172643": 264, "427376": 264, "381444": 264, "624014": 264, "970627": 264, "177028": 264, "206540": 264, "955029": 264, "982447": 264, "051499": 264, "424503": 264, "734342": 264, "018477": 264, "279258": 264, "168486": 264, "190508": 264, "749134": 264, "598565": 264, "237467": 264, "568934": 264, "800062": 264, "098025": 264, "663948": 264, "850993": 264, "605845": 264, "143": 264, "045": 264, "971": 264, "881": 264, "575": 264, "080": 264, "063": 264, "427": 264, "668": 264, "543": 264, "662": 264, "478": 264, "667": 264, "253": 264, "495": 264, "918": 264, "67071": 264, "401100": 264, "35080": 264, "587770": 264, "36360": 264, "278800": 264, "19730": 264, "670700": 264, "21710": 264, "352600": 264, "86050": 264, "067200": 264, "35060": 264, "059269": 264, "72100": 264, "036754": 264, "10860": 264, "814140": 264, "28180": 264, "699410": 264, "eb": 264, "043861": 264, "005430": 264, "166321": 264, "131833": 264, "095934": 264, "130868": 264, "009154": 264, "017388": 264, "102019": 264, "283500": 264, "019417": 264, "099839": 264, "045946": 264, "059072": 264, "024270": 264, "189351": 264, "248536": 264, "091872": 264, "009545": 264, "012052": 264, "066151": 264, "293685": 264, "030236": 264, "074789": 264, "094502": 264, "147433": 264, "076820": 264, "105604": 264, "020051": 264, "066265": 264, "086035": 264, "023260": 264, "067138": 264, "030859": 264, "337255": 264, "035532": 264, "032579": 264, "028410": 264, "003589": 264, "080613": 264, "060233": 264, "052854": 264, "004469": 264, "057344": 264, "051992": 264, "212941": 264, "137510": 264, "004111": 264, "023282": 264, "302636": 264, "039069": 264, "119442": 264, "044956": 264, "263320": 264, "000776": 264, "083231": 264, "003150": 264, "012752": 264, "049654": 264, "080932": 264, "000555": 264, "099614": 264, "061864": 264, "332738": 264, "038156": 264, "067641": 264, "038017": 264, "184137": 264, "156617": 264, "208753": 264, "114558": 264, "053036": 264, "008405": 264, "026004": 264, "144920": 264, "081646": 264, "083320": 264, "015380": 264, "000392": 264, "078062": 264, "018966": 264, "112030": 264, "112715": 264, "383786": 264, "001730": 264, "167583": 264, "042068": 264, "066598": 264, "037600": 264, "000093": 264, "010662": 264, "009775": 264, "058306": 264, "229005": 264, "033958": 264, "008959": 264, "092312": 264, "050987": 264, "192569": 264, "002727": 264, "225657": 264, "115824": 264, "204269": 264, "054792": 264, "066334": 264, "123689": 264, "239678": 264, "047215": 264, "186615": 264, "000949": 264, "010812": 264, "015929": 264, "017213": 264, "005234": 264, "122552": 264, "076677": 264, "095696": 264, "024883": 264, "002999": 264, "007157": 264, "model_ref": 265, "easi": [265, 270], "pipelin": 265, "unfix_parameters_to": 265, "print_model_diff": 265, "ipython": 265, "pkmat": 265, "errori": 265, "pkcl": 265, "vd1": 265, "advan2": 265, "s2": 265, "vka": 265, "pkmdt": 265, "matd1": 265, "pop_mdt": 265, "advan5": 265, "trans1": 265, "defdos": 265, "transit4": 265, "s5": 265, "vk12": 265, "mdtk23": 265, "mdtk34": 265, "mdtk45": 265, "mdtk50": 265, "valag1": 265, "similarli": 265, "tol": 265, "pkkm": 265, "desdadt": 265, "pop_clmm": 265, "067": 265, "1358": 265, "pop_km": 265, "iiv_clmm": 265, "pkclmm": 265, "002346535": 265, "advan3": 265, "trans4": 265, "pkvp1": 265, "v1": 265, "v1q": 265, "qp1v2": 265, "pop_qp1": 265, "050458": 265, "pop_vp1": 265, "remove_ref": 265, "059618": 265, "advan11": 265, "pkvp2": 265, "v1q2": 265, "vp1q3": 265, "qp2v3": 265, "00046930699999999997": 265, "0529809": 265, "004223763": 265, "pop_qp2": 265, "pop_vp2": 265, "onto": 265, "pkwgt_median": 265, "30000cl": 265, "clwgt": 265, "wgt_median": 265, "clwgtv": 265, "pop_clwgt": 265, "user_effect": 265, "std": 265, "30000wgt_std": 265, "704565cl": 265, "wgt_std": 265, "pketab1": 265, "etab1": 265, "etab2": 265, "lambda2": 265, "analog": 265, "pketat1": 265, "384": 265, "etat1": 265, "pketad1": 265, "etad1": 265, "iiv_s1": 265, "eta_new": 265, "iiv_": 265, "pkiov_1": 265, "0if": 265, "iov_1": 265, "etai1": 265, "00309626": 265, "omega_iov_1": 265, "iov_2": 265, "etai2": 265, "0031128": 265, "omega_iov_2": 265, "pkdummyeta": 265, "dummyomega": 265, "isn": 265, "runnabl": 265, "epsilon_a": 265, "approx": 265, "taylor": 265, "epsilon_": 265, "epsilon_p": 265, "sigma_prop": [265, 274], "sigma_add": [265, 274], "iiv_ruv1": 265, "ruv1": 265, "power1": 265, "someim": 265, "correspondng": 265, "11506954418958998": 265, "errorw": 265, "fy": 265, "wif": 265, "THEN": 265, "1000000000end": 265, "ifi": 265, "tbs_lambda": 265, "tbs_zeta": 265, "ivcl0": 265, "0031045": 265, "iiv_cl_iiv_v0": 265, "model_block": 265, "445550": 265, "bootstrap_dir1": 265, "597341": 265, "039061": 265, "365446": 265, "019725": 265, "secondary_paramet": 265, "chapter": 266, "delai": [266, 277], "grammar": [266, 270], "exhaustive_stepwis": 266, "addition": [266, 277], "obtain": 266, "basi": 266, "subsequ": [266, 267, 277], "modelsearch_candidate2": [266, 277], "594608": 266, "1272": 266, "124874": 266, "modelsearch_candidate3": [266, 277], "558028": 266, "088295": 266, "modelsearch_candidate4": [266, 277], "956313": 266, "1270": 266, "486580": 266, "287000": 266, "1260": 266, "817266": 266, "362287": 266, "1327": 266, "153182": 266, "1325": 266, "551467": 266, "1307": 266, "301235": 266, "1303": 266, "1289": 266, "2927": 266, "4334": 266, "7778": 266, "0058": 266, "109": 266, "1640": 266, "260324": 266, "7646": 266, "824443": 266, "5477": 266, "607839": 266, "1147": 266, "842498": 266, "470974": 266, "595276": 266, "526185": 266, "930160": 266, "495109": 266, "322680": 266, "470531": 266, "515250": 266, "312692": 266, "194221": 266, "202201": 266, "207885": 266, "232322": 266, "199750": 266, "205369": 266, "193439": 266, "pop_qp1_estim": 266, "pop_vp1_estim": 266, "pop_mdt_estim": 266, "155413": 266, "89": 266, "4192": 266, "6100": 266, "172730": 266, "3977": 266, "4562": 266, "158070": 266, "8042": 266, "8517": 266, "iiv_mdt_estim": 266, "156289": 266, "192020": 266, "092419": 266, "262429": 266, "720369": 266, "464263": 266, "127061": 266, "906722": 266, "053781": 266, "923055": 266, "795863": 266, "030658": 266, "661330": 266, "168680": 266, "833073": 266, "041529": 266, "205858": 266, "064930": 266, "609673": 266, "396329": 266, "928556": 266, "365": 266, "330": 266, "topic": 267, "scheme": 267, "theta_cl": 267, "mention": [267, 279], "ve": 267, "despit": 267, "write_etas_in_abbr": 267, "altair": [268, 270], "vega": 268, "lite": 268, "ggplot": 268, "editor": 268, "clamp": 268, "vconcat": 268, "spec": 268, "inten": 269, "export": 269, "strictli": 269, "necessesari": 269, "detect_model": 269, "summer": 270, "master": 270, "thesi": 270, "internship": 270, "email": 270, "team": 270, "tox": 270, "pytest": 270, "sphinx": 270, "wise": 270, "known": 270, "trial": 270, "involv": 270, "outcom": 270, "research": 270, "350h": 270, "difficulti": 270, "mentor": 270, "scipi": 270, "focu": 270, "proof": 270, "concept": 270, "algebra": 270, "simul": [270, 276], "scratch": 270, "lark": 270, "earlei": 270, "lalr": 270, "much": 270, "stricter": 270, "175h": 270, "almost": 270, "compat": 270, "benefici": 270, "diff": 270, "potenti": 270, "eas": 270, "jupyt": 270, "holoview": 270, "bokeh": 270, "monitor": 270, "ongo": 270, "veri": [270, 279], "happen": 270, "converg": 270, "sort": [270, 277], "dashboard": 270, "complement": 270, "realtim": 270, "restart": [270, 279], "middl": 270, "worflow": 270, "dvid": [271, 273, 274], "autocorrel": [271, 273], "dtb": [271, 273], "91": [271, 273], "idv_varying_ruv": 271, "idv_varying_ruv_cutoff0": 271, "idv_varying_ruv_cutoff1": 271, "idv_varying_ruv_cutoff2": 271, "idv_varying_ruv_cutoff3": 271, "idv_varying_ruv_cutoff4": 271, "idv_varying_ruv_cutoff5": 271, "idv_varying_ruv_cutoff6": 271, "idv_varying_ruv_cutoff7": 271, "idv_varying_ruv_cutoff8": 271, "idv_varying_combin": 271, "idv_varying_theta": 271, "66": 271, "cv": [271, 273], "772": [271, 273], "042": [271, 273], "sdeps_0": [271, 273], "t1": 271, "298": 271, "sdeps_t1": 271, "t2": 271, "886": 271, "t0": [271, 273], "271": [271, 273], "sdeps_t0": [271, 273], "390": [271, 273], "956": [271, 273], "717": 271, "014": 271, "914": 271, "983": 271, "884": 271, "017": 271, "955": 271, "958": 271, "969": 271, "933": 271, "022": 271, "819": 271, "007": 271, "755": 271, "982": 271, "642": 271, "387": 271, "th_0": 271, "257": 271, "sdep": 271, "279": 271, "th_t1": 271, "124": 271, "th_t2": 271, "delta_pow": [271, 273], "037": [271, 273], "delet": 272, "diagnost": 272, "impact": 273, "improement": 273, "592698": 273, "197887": 273, "007493": 273, "521171": 273, "et1apgr": 273, "487930": 273, "residual_error_model": 273, "910000": 273, "030000": 273, "diagnos": 273, "structural_bia": 273, "cpred": 273, "binmin": 273, "binmax": 273, "binid": 273, "159": 273, "258": 273, "67": [273, 275], "strutur": 273, "mdel": 273, "fullblock_paramet": 273, "183463": 273, "171306": 273, "554610": 273, "154408": 273, "167053": 273, "cox": 273, "boxcox_paramet": 273, "shape": 273, "new_sd": 273, "old_sd": 273, "922083": 273, "182037": 273, "332800": 273, "166021": 273, "tdist_paramet": 273, "79": 273, "9997": 273, "168477": 273, "9986": 273, "166469": 273, "residual_error": 273, "additional_paramet": 273, "coeff": 273, "48793": 273, "033334": 273, "48218": 273, "052342": 273, "59034": 273, "008371": 273, "00887": 273, "003273": 273, "set_time_varying_error_model": 274, "ibrahim": 274, "quickli": [274, 277], "assess": 274, "inde": 274, "cwres_model": 274, "479721": 274, "385268": 274, "002792": 274, "time_varying1": 274, "117041": 274, "555154": 274, "time_varying3": 274, "336641": 274, "091207": 274, "065738": 274, "654562": 274, "046578": 274, "519115": 274, "612710": 274, "643741": 274, "027766": 274, "000367": 274, "967365": 274, "00123": 274, "0976": 274, "12252": 274, "14299": 274, "000337": 274, "05242": 274, "006105": 274, "10545": 274, "12659": 274, "15573": 274, "00054": 274, "04769": 274, "030825": 274, "mox3": 274, "best_ruvsearch_1": 274, "2460": 274, "704469": 274, "957378": 274, "2473": 274, "661847": 274, "269102": 274, "2495": 274, "973571": 274, "2444": 274, "2455": 274, "2475": 274, "2423": 274, "757516": 274, "2435": 274, "047712": 274, "2453": 274, "068976": 274, "71": 274, "pop_vc_estim": 274, "pop_mat_estim": 274, "707": 274, "5434": 274, "531596": 274, "794": 274, "3091": 274, "528620": 274, "3094": 274, "532547": 274, "iiv_vc_estim": 274, "iiv_vc_iiv_cl_estim": 274, "077743": 274, "038888": 274, "076793": 274, "039924": 274, "071628": 274, "038470": 274, "iiv_cl_estim": 274, "iiv_mat_estim": 274, "072309": 274, "704770": 274, "093311": 274, "074889": 274, "707665": 274, "081095": 274, "075048": 274, "705429": 274, "044311": 274, "iiv_ruv1_estim": 274, "time_varying_estim": 274, "039675": 274, "040734": 274, "42509": 274, "215727": 274, "655144": 274, "708324": 274, "762729": 274, "236530": 274, "229762": 274, "715966": 274, "423148": 274, "419741": 274, "774540": 274, "164274": 274, "450202": 274, "195425": 274, "960585": 274, "090461": 274, "848498": 274, "052021": 274, "239462": 274, "065148": 274, "571348": 274, "244582": 274, "161981": 274, "509910": 274, "373696": 274, "084489": 274, "647643": 274, "344772": 274, "083776": 274, "259395": 274, "101415": 274, "024651": 274, "443542": 274, "124023": 274, "183089": 274, "977222": 274, "219": 274, "moustafa": 274, "m": 274, "maria": 274, "kjellsson": 274, "aap": 274, "1208": 274, "s12248": 274, "018": 274, "0240": 274, "pha": 275, "219210": 275, "90878": 275, "219167": 275, "36222": 275, "bmi": 275, "219171": 275, "47564": 275, "cycll": 275, "219203": 275, "94536": 275, "diag": 275, "219206": 275, "01527": 275, "disdur": 275, "219032": 275, "86056": 275, "215321": 275, "70954": 275, "215306": 275, "67698": 275, "phia": 275, "men": 275, "215407": 275, "40295": 275, "phib": 275, "georeg": 275, "215373": 275, "77800": 275, "216968": 275, "25989": 275, "slp": 275, "215359": 275, "18150": 275, "54656": 275, "140000e": 275, "43314": 275, "390000e": 275, "96342": 275, "319000e": 275, "89351": 275, "695800e": 275, "178": 275, "04822": 275, "290000e": 275, "03256": 275, "060000e": 275, "72597": 275, "10102": 275, "580000e": 275, "1661": 275, "58291": 275, "50452": 275, "phaag": 275, "phabmi": 275, "phacycl": 275, "phadiag": 275, "phadisdur": 275, "backward_scm_dir1": 275, "phawt": 275, "phiamen": 275, "phibgeoreg": 275, "phibmen": 275, "slpgeoreg": 275, "304": 275, "beween": 275, "target": 275, "slightli": 275, "215961": 275, "46277": 275, "3249": 275, "44601": 275, "215748": 275, "07194": 275, "213": 275, "39083": 275, "215570": 275, "57352": 275, "49842": 275, "215486": 275, "23440": 275, "33912": 275, "87007": 275, "36433": 275, "215357": 275, "74693": 275, "61": 275, "12314": 275, "215337": 275, "95044": 275, "79649": 275, "24090": 275, "215332": 275, "91461": 275, "23763": 275, "67861": 275, "00163": 275, "215450": 275, "74783": 275, "07085": 275, "215491": 275, "11568": 275, "43870": 275, "500000e": 275, "700000e": 275, "170000e": 275, "260000e": 275, "360000e": 275, "600000e": 275, "020000e": 275, "620000e": 275, "430000e": 275, "200000e": 275, "did": 275, "lbest": 275, "cpl": 275, "575351": 276, "230120": 276, "165042": 276, "488686": 276, "921633": 276, "300884": 276, "027733": 276, "083424": 276, "824880": 276, "946876": 276, "928279": 276, "654589": 276, "180960": 276, "916884": 276, "604188": 276, "795252": 276, "370783": 276, "364078": 276, "638247": 276, "467337": 276, "078494": 276, "957716": 276, "351839": 276, "136159": 276, "472019": 276, "823449": 276, "664634": 276, "221459": 276, "151210": 276, "318875": 276, "405150": 276, "527835": 276, "135159": 276, "551158": 276, "526828": 276, "406903": 276, "615899": 276, "562788": 276, "796073": 276, "293600": 276, "892761": 276, "818812": 276, "328937": 276, "486179": 276, "376893": 276, "849137": 276, "446579": 276, "929665": 276, "121901": 276, "114640": 276, "423537": 276, "615092": 276, "247238": 276, "512627": 276, "408347": 276, "705806": 276, "018308": 276, "484284": 276, "842566": 276, "867625": 276, "056381": 276, "664954": 276, "114753": 276, "638560": 276, "078385": 276, "449888": 276, "282087": 276, "178961": 276, "622712": 276, "882876": 276, "138213": 276, "678095": 276, "238692": 276, "361556": 276, "037941": 276, "929655": 276, "166879": 276, "713778": 276, "422555": 276, "708577": 276, "563473": 276, "567697": 276, "335429": 276, "266944": 276, "989005": 276, "959843": 276, "388393": 276, "461262": 276, "212573": 276, "621329": 276, "811596": 276, "277388": 276, "501489": 276, "003027": 276, "110075": 276, "786560": 276, "366018": 276, "219194": 276, "380865": 276, "905147": 276, "612812": 276, "961895": 276, "630512": 276, "546036": 276, "534496": 276, "584818": 276, "231970": 276, "816485": 276, "682987": 276, "900845": 276, "892200": 276, "988276": 276, "776532": 276, "802797": 276, "749003": 276, "018880": 276, "725509": 276, "015416": 276, "662582": 276, "196823": 276, "250063": 276, "212538": 276, "838099": 276, "488859": 276, "851698": 276, "944073": 276, "140249": 276, "297823": 276, "743671": 276, "429352": 276, "485191": 276, "659430": 276, "409142": 276, "880881": 276, "191840": 276, "733704": 276, "775355": 276, "755737": 276, "630846": 276, "956378": 276, "707700": 276, "794788": 276, "851982": 276, "483346": 276, "668763": 276, "538437": 276, "382384": 276, "401748": 276, "793645": 276, "455902": 276, "196475": 276, "498709": 276, "926835": 276, "928532": 276, "425364": 276, "848184": 276, "497867": 276, "985533": 276, "366585": 276, "030662": 276, "572217": 276, "565811": 276, "551558": 276, "551208": 276, "662370": 276, "298009": 276, "630121": 276, "042324": 276, "552114": 276, "580405": 276, "361844": 276, "035731": 276, "406685": 276, "040276": 276, "275622": 276, "169391": 276, "957232": 276, "496993": 276, "515088": 276, "155311": 276, "106708": 276, "361498": 276, "454421": 276, "751915": 276, "363698": 276, "904024": 276, "024682": 276, "889492": 276, "952586": 276, "434510": 276, "840067": 276, "575363": 276, "835458": 276, "073683": 276, "073635": 276, "884553": 276, "253049": 276, "819836": 276, "879430": 276, "169888": 276, "893425": 276, "497236": 276, "285544": 276, "178975": 276, "564632": 276, "046265": 276, "765897": 276, "277992": 276, "264764": 276, "695028": 276, "684344": 276, "586789": 276, "688954": 276, "572606": 276, "516160": 276, "493584": 276, "249772": 276, "841335": 276, "244786": 276, "916145": 276, "933397": 276, "659481": 276, "253768": 276, "416676": 276, "744242": 276, "178177": 276, "936980": 276, "731451": 276, "069317": 276, "269584": 276, "477206": 276, "605768": 276, "746436": 276, "716822": 276, "737404": 276, "408266": 276, "980420": 276, "763155": 276, "125029": 276, "132983": 276, "337790": 276, "811144": 276, "686115": 276, "583418": 276, "105503": 276, "195385": 276, "031564": 276, "043157": 276, "363551": 276, "850645": 276, "016286": 276, "525306": 276, "225458": 276, "892175": 276, "052073": 276, "846592": 276, "404922": 276, "699366": 276, "242420": 276, "435102": 276, "243399": 276, "815026": 276, "509957": 276, "512603": 276, "589215": 276, "933824": 276, "926077": 276, "481351": 276, "175264": 276, "923185": 276, "087071": 276, "944302": 276, "194473": 276, "824234": 276, "611250": 276, "735586": 276, "344235": 276, "550825": 276, "903583": 276, "860290": 276, "556035": 276, "308617": 276, "875052": 276, "501681": 276, "153441": 276, "874004": 276, "631308": 276, "432371": 276, "372005": 276, "054769": 276, "133006": 276, "758791": 276, "323449": 276, "357159": 276, "215148": 276, "860736": 276, "853273": 276, "993262": 276, "568383": 276, "533799": 276, "905658": 276, "376218": 276, "322738": 276, "313336": 276, "898802": 276, "546277": 276, "542369": 276, "773450": 276, "058260": 276, "873918": 276, "600450": 276, "775938": 276, "899285": 276, "104682": 276, "793703": 276, "230477": 276, "354616": 276, "330868": 276, "479966": 276, "884839": 276, "438225": 276, "432346": 276, "367480": 276, "924846": 276, "694969": 276, "054791": 276, "024193": 276, "387386": 276, "864669": 276, "548598": 276, "853355": 276, "280139": 276, "424024": 276, "695800": 276, "631655": 276, "413680": 276, "541680": 276, "758919": 276, "704503": 276, "316351": 276, "814952": 276, "026935": 276, "937635": 276, "715708": 276, "009725": 276, "462408": 276, "383043": 276, "459161": 276, "179394": 276, "676905": 276, "260472": 276, "218010": 276, "956306": 276, "398492": 276, "051986": 276, "445912": 276, "191401": 276, "767349": 276, "876780": 276, "553003": 276, "822404": 276, "924166": 276, "846457": 276, "565671": 276, "115117": 276, "207434": 276, "341361": 276, "806515": 276, "434087": 276, "086788": 276, "296737": 276, "599116": 276, "516464": 276, "574667": 276, "831345": 276, "793265": 276, "874349": 276, "901408": 276, "912201": 276, "676572": 276, "693935": 276, "069326": 276, "954047": 276, "905528": 276, "077897": 276, "731336": 276, "186642": 276, "819544": 276, "504667": 276, "773375": 276, "843029": 276, "455400": 276, "762211": 276, "187278": 276, "502366": 276, "056323": 276, "802175": 276, "305631": 276, "370226": 276, "639042": 276, "544260": 276, "597045": 276, "977219": 276, "022410": 276, "400720": 276, "641421": 276, "424237": 276, "974785": 276, "853009": 276, "098997": 276, "886356": 276, "374133": 276, "963905": 276, "712658": 276, "415675": 276, "351619": 276, "044583": 276, "396594": 276, "255630": 276, "360173": 276, "358567": 276, "408061": 276, "414926": 276, "496109": 276, "297200": 276, "907778": 276, "222423": 276, "606428": 276, "362886": 276, "206488": 276, "693535": 276, "988252": 276, "911020": 276, "764024": 276, "517867": 276, "453899": 276, "133073": 276, "346212": 276, "783555": 276, "027851": 276, "462547": 276, "972480": 276, "402983": 276, "036534": 276, "723710": 276, "032512": 276, "378125": 276, "408322": 276, "788249": 276, "269137": 276, "159667": 276, "777419": 276, "448461": 276, "625663": 276, "416254": 276, "541949": 276, "907322": 276, "418469": 276, "371639": 276, "606033": 276, "675347": 276, "663661": 276, "584165": 276, "271405": 276, "500411": 276, "824837": 276, "876965": 276, "881148": 276, "348849": 276, "885439": 276, "366355": 276, "iofv_summari": 276, "orgin": 276, "ob": 276, "sampled_median": 276, "sampled_stdev": 276, "residual_q1": 276, "743042": 276, "269351": 276, "092721": 276, "132107": 276, "049484": 276, "062882": 276, "923433": 276, "032842": 276, "903729": 276, "041599": 276, "666016": 276, "588530": 276, "233558": 276, "813525": 276, "338707": 276, "262659": 276, "651808": 276, "842347": 276, "092618": 276, "607326": 276, "763450": 276, "426016": 276, "953150": 276, "344659": 276, "002809": 276, "839617": 276, "390660": 276, "093249": 276, "843159": 276, "761625": 276, "066485": 276, "562593": 276, "515891": 276, "678375": 276, "587563": 276, "846506": 276, "321253": 276, "931536": 276, "511037": 276, "243040": 276, "313767": 276, "998817": 276, "190685": 276, "266501": 276, "243372": 276, "216676": 276, "334541": 276, "088609": 276, "030344": 276, "099508": 276, "626027": 276, "236755": 276, "682470": 276, "271061": 276, "322169": 276, "889854": 276, "855528": 276, "232988": 276, "221102": 276, "260479": 276, "297037": 276, "100632": 276, "978394": 276, "671231": 276, "588077": 276, "600891": 276, "572710": 276, "088513": 276, "331370": 276, "651006": 276, "383926": 276, "621596": 276, "936751": 276, "638334": 276, "863723": 276, "802597": 276, "124775": 276, "712276": 276, "541296": 276, "902641": 276, "054733": 276, "087013": 276, "019852": 276, "185274": 276, "299915": 276, "071925": 276, "504540": 276, "056317": 276, "177399": 276, "404555": 276, "347654": 276, "490854": 276, "248420": 276, "402107": 276, "172721": 276, "309188": 276, "612652": 276, "605320": 276, "387170": 276, "916585": 276, "723804": 276, "814910": 276, "320602": 276, "089383": 276, "193802": 276, "746322": 276, "453306": 276, "888849": 276, "347721": 276, "796098": 276, "427890": 276, "964192": 276, "509526": 276, "553605": 276, "595254": 276, "940021": 276, "187065": 276, "218493": 276, "446771": 276, "021723": 276, "143293": 276, "077425": 276, "553705": 276, "963659": 276, "230769": 276, "941064": 276, "345041": 276, "355392": 276, "177536": 276, "564686": 276, "074840": 276, "501228": 276, "910681": 276, "928524": 276, "255799": 276, "746242": 276, "724151": 276, "284455": 276, "111385": 276, "103779": 276, "602531": 276, "057843": 276, "201646": 276, "908651": 276, "880337": 276, "368175": 276, "066179": 276, "743926": 276, "503126": 276, "881606": 276, "250884": 276, "047349": 276, "844822": 276, "189370": 276, "511282": 276, "270109": 276, "430602": 276, "221208": 276, "868376": 276, "958375": 276, "098127": 276, "780755": 276, "635224": 276, "985409": 276, "809369": 276, "378962": 276, "211565": 276, "057646": 276, "205194": 276, "036416": 276, "193803": 276, "429374": 276, "204566": 276, "181809": 276, "278418": 276, "598975": 276, "337763": 276, "785971": 276, "413662": 276, "606782": 276, "709391": 276, "881992": 276, "864932": 276, "303395": 276, "084555": 276, "219260": 276, "154550": 276, "785024": 276, "694892": 276, "512588": 276, "121911": 276, "906081": 276, "693733": 276, "669899": 276, "053933": 276, "229621": 276, "686649": 276, "489669": 276, "193242": 276, "455548": 276, "756085": 276, "871678": 276, "683725": 276, "788305": 276, "441965": 276, "980475": 276, "053564": 276, "483885": 276, "840129": 276, "161657": 276, "813878": 276, "634209": 276, "574414": 276, "214315": 276, "235064": 276, "837522": 276, "929402": 276, "427740": 276, "521014": 276, "392308": 276, "944092": 276, "407457": 276, "879179": 276, "753044": 276, "057118": 276, "900168": 276, "579183": 276, "047295": 276, "069060": 276, "430617": 276, "023015": 276, "749906": 276, "157977": 276, "117461": 276, "010968": 276, "974584": 276, "052094": 276, "650140": 276, "206923": 276, "302385": 276, "557865": 276, "806373": 276, "733736": 276, "309462": 276, "292477": 276, "034161": 276, "253204": 276, "515730": 276, "067793": 276, "328308": 276, "941486": 276, "862193": 276, "275903": 276, "359860": 276, "865778": 276, "461685": 276, "346120": 276, "040796": 276, "340902": 276, "669504": 276, "165811": 276, "006993": 276, "056961": 276, "515114": 276, "073228": 276, "455873": 276, "041631": 276, "121517": 276, "970391": 276, "151516": 276, "604970": 276, "314527": 276, "639192": 276, "701809": 276, "559444": 276, "756955": 276, "240398": 276, "residual_q3": 276, "residual_outli": 276, "101924": 276, "045535": 276, "234064": 276, "025423": 276, "109899": 276, "625316": 276, "268882": 276, "574353": 276, "419169": 276, "807045": 276, "159688": 276, "667537": 276, "022651": 276, "630322": 276, "291458": 276, "309807": 276, "105832": 276, "301714": 276, "720484": 276, "289277": 276, "953368": 276, "653632": 276, "126620": 276, "673619": 276, "333709": 276, "076368": 276, "549693": 276, "158992": 276, "824096": 276, "026303": 276, "658756": 276, "145689": 276, "986494": 276, "095503": 276, "364901": 276, "552261": 276, "588452": 276, "301528": 276, "219416": 276, "359428": 276, "174344": 276, "432004": 276, "734733": 276, "135789": 276, "237813": 276, "693671": 276, "260535": 276, "184885": 276, "364894": 276, "772187": 276, "236023": 276, "845436": 276, "707608": 276, "626422": 276, "497515": 276, "963228": 276, "904840": 276, "701781": 276, "338779": 276, "individual_predictions_plot": 276, "trim": 277, "modelsearch_dir1": 277, "hash": 277, "mytab_mox1": 277, "subfold": 277, "temporari": 277, "finish": 277, "recreat": 277, "frame": [277, 279], "programmat": 277, "pharmpy_vers": 277, "tool_nam": 277, "start_tim": 277, "22t14": 277, "312240": 277, "end_tim": 277, "592109": 277, "common_opt": 277, "tmp": 277, "tool_result": 277, "locat": 277, "concis": 277, "newlin": 277, "semi": 277, "colon": 277, "endpoint": 277, "wildcard": 277, "nodepot": 277, "autom": 277, "gotcha": 278, "mirror": 279, "cran": 279, "reticul": 279, "remot": 279, "install_github": 279, "ref": 279, "install_pharmpi": 279, "session": 279, "successfulli": 279, "packagevers": 279, "print_pharmpy_vers": 279, "miniconda": 279, "py_discover_config": 279, "conda_cr": 279, "python_vers": 279, "virtual": 279, "someth": 279, "libpython": 279, "lib": 279, "libpython3": 279, "pipe": 279, "magrittr": 279, "model_a": 279, "model_b": 279, "reset_index": 279, "5l": 279, "input_model": 279}, "objects": {"pharmpy": [[238, 0, 0, "-", "model"], [239, 0, 0, "-", "modeling"], [240, 0, 0, "-", "tools"], [241, 0, 0, "-", "workflows"], [246, 6, 1, "cmdoption-pharmpy-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-version", "--version"], [246, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "ExplicitODESystem"], [17, 1, 1, "", "Infusion"], [18, 1, 1, "", "JointNormalDistribution"], [19, 1, 1, "", "Model"], [20, 4, 1, "", "ModelError"], [21, 4, 1, "", "ModelSyntaxError"], [22, 4, 1, "", "ModelfitResultsError"], [23, 1, 1, "", "NormalDistribution"], [24, 1, 1, "", "ODESystem"], [25, 1, 1, "", "Parameter"], [26, 1, 1, "", "Parameters"], [27, 1, 1, "", "RandomVariables"], [28, 1, 1, "", "Results"], [29, 1, 1, "", "Statement"], [30, 1, 1, "", "Statements"], [31, 1, 1, "", "VariabilityHierarchy"], [32, 1, 1, "", "VariabilityLevel"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "subs"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 3, 1, "", "datatype"], [6, 2, 1, "", "derive"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 3, 1, "", "scale"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "subs"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 3, 1, "", "dosing_compartment"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "output_compartment"], [8, 3, 1, "", "peripheral_compartments"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 2, 1, "", "to_compartmental_system"], [8, 2, 1, "", "to_explicit_system"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "derive"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "derive"], [13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "derive"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "to_dataframe"]], "pharmpy.model.ExplicitODESystem": [[16, 3, 1, "", "amounts"], [16, 3, 1, "", "compartment_names"], [16, 3, 1, "", "free_symbols"], [16, 3, 1, "", "ics"], [16, 3, 1, "", "odes"], [16, 3, 1, "", "rhs_symbols"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_compartmental_system"], [16, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Infusion": [[17, 3, 1, "", "amount"], [17, 2, 1, "", "create"], [17, 3, 1, "", "duration"], [17, 3, 1, "", "free_symbols"], [17, 3, 1, "", "rate"], [17, 2, 1, "", "subs"]], "pharmpy.model.JointNormalDistribution": [[18, 2, 1, "", "create"], [18, 2, 1, "", "derive"], [18, 2, 1, "", "evalf"], [18, 3, 1, "", "free_symbols"], [18, 2, 1, "", "get_covariance"], [18, 2, 1, "", "get_variance"], [18, 2, 1, "", "latex_string"], [18, 3, 1, "", "level"], [18, 3, 1, "", "mean"], [18, 3, 1, "", "names"], [18, 2, 1, "", "subs"], [18, 3, 1, "", "variance"]], "pharmpy.model.Model": [[19, 2, 1, "", "copy"], [19, 2, 1, "", "create_model"], [19, 3, 1, "", "datainfo"], [19, 3, 1, "", "dataset"], [19, 3, 1, "", "dependent_variable"], [19, 3, 1, "", "description"], [19, 3, 1, "", "estimation_steps"], [19, 3, 1, "", "filename_extension"], [19, 2, 1, "", "has_same_dataset_as"], [19, 3, 1, "", "initial_individual_estimates"], [19, 3, 1, "", "model_code"], [19, 3, 1, "", "modelfit_results"], [19, 3, 1, "", "name"], [19, 3, 1, "", "observation_transformation"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "parent_model"], [19, 3, 1, "", "random_variables"], [19, 3, 1, "", "statements"], [19, 2, 1, "", "update_datainfo"], [19, 3, 1, "", "value_type"]], "pharmpy.model.NormalDistribution": [[23, 2, 1, "", "create"], [23, 2, 1, "", "derive"], [23, 2, 1, "", "evalf"], [23, 3, 1, "", "free_symbols"], [23, 2, 1, "", "get_covariance"], [23, 2, 1, "", "get_variance"], [23, 2, 1, "", "latex_string"], [23, 3, 1, "", "level"], [23, 3, 1, "", "mean"], [23, 3, 1, "", "names"], [23, 2, 1, "", "subs"], [23, 3, 1, "", "variance"]], "pharmpy.model.ODESystem": [[24, 2, 1, "", "to_compartmental_system"], [24, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Parameter": [[25, 2, 1, "", "create"], [25, 2, 1, "", "derive"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "init"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "name"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[26, 3, 1, "", "fix"], [26, 3, 1, "", "fixed"], [26, 3, 1, "", "inits"], [26, 3, 1, "", "lower"], [26, 3, 1, "", "names"], [26, 3, 1, "", "nonfixed"], [26, 2, 1, "", "set_fix"], [26, 2, 1, "", "set_initial_estimates"], [26, 3, 1, "", "symbols"], [26, 2, 1, "", "to_dataframe"], [26, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[27, 3, 1, "", "covariance_matrix"], [27, 2, 1, "", "create"], [27, 2, 1, "", "derive"], [27, 3, 1, "", "epsilon_levels"], [27, 3, 1, "", "epsilons"], [27, 3, 1, "", "eta_levels"], [27, 3, 1, "", "etas"], [27, 3, 1, "", "free_symbols"], [27, 2, 1, "", "get_covariance"], [27, 2, 1, "", "get_rvs_with_same_dist"], [27, 3, 1, "", "iiv"], [27, 3, 1, "", "iov"], [27, 2, 1, "", "join"], [27, 3, 1, "", "names"], [27, 2, 1, "", "nearest_valid_parameters"], [27, 3, 1, "", "nrvs"], [27, 3, 1, "", "parameter_names"], [27, 2, 1, "", "parameters_sdcorr"], [27, 2, 1, "", "sample"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "unjoin"], [27, 2, 1, "", "validate_parameters"], [27, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_and_reset_index"], [28, 2, 1, "", "to_csv"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[29, 3, 1, "", "free_symbols"], [29, 3, 1, "", "rhs_symbols"], [29, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[30, 3, 1, "", "after_odes"], [30, 3, 1, "", "before_odes"], [30, 2, 1, "", "dependencies"], [30, 2, 1, "", "direct_dependencies"], [30, 3, 1, "", "error"], [30, 2, 1, "", "find_assignment"], [30, 2, 1, "", "find_assignment_index"], [30, 3, 1, "", "free_symbols"], [30, 2, 1, "", "full_expression"], [30, 3, 1, "", "ode_system"], [30, 2, 1, "", "reassign"], [30, 2, 1, "", "remove_symbol_definitions"], [30, 2, 1, "", "subs"], [30, 2, 1, "", "to_compartmental_system"], [30, 2, 1, "", "to_explicit_system"]], "pharmpy.model.VariabilityHierarchy": [[31, 3, 1, "", "levels"], [31, 3, 1, "", "names"]], "pharmpy.model.VariabilityLevel": [[32, 3, 1, "", "group"], [32, 3, 1, "", "name"], [32, 3, 1, "", "reference"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_peripheral_compartment"], [42, 5, 1, "", "add_pk_iiv"], [43, 5, 1, "", "add_population_parameter"], [44, 5, 1, "", "add_time_after_dose"], [45, 5, 1, "", "append_estimation_step_options"], [46, 5, 1, "", "bump_model_number"], [47, 5, 1, "", "calculate_aic"], [48, 5, 1, "", "calculate_bic"], [49, 5, 1, "", "calculate_corr_from_cov"], [50, 5, 1, "", "calculate_corr_from_inf"], [51, 5, 1, "", "calculate_cov_from_corrse"], [52, 5, 1, "", "calculate_cov_from_inf"], [53, 5, 1, "", "calculate_epsilon_gradient_expression"], [54, 5, 1, "", "calculate_eta_gradient_expression"], [55, 5, 1, "", "calculate_eta_shrinkage"], [56, 5, 1, "", "calculate_individual_parameter_statistics"], [57, 5, 1, "", "calculate_individual_shrinkage"], [58, 5, 1, "", "calculate_inf_from_corrse"], [59, 5, 1, "", "calculate_inf_from_cov"], [60, 5, 1, "", "calculate_parameters_from_ucp"], [61, 5, 1, "", "calculate_pk_parameters_statistics"], [62, 5, 1, "", "calculate_se_from_cov"], [63, 5, 1, "", "calculate_se_from_inf"], [64, 5, 1, "", "calculate_ucp_scale"], [65, 5, 1, "", "check_dataset"], [66, 5, 1, "", "check_high_correlations"], [67, 5, 1, "", "check_parameters_near_bounds"], [68, 5, 1, "", "cleanup_model"], [69, 5, 1, "", "convert_model"], [70, 5, 1, "", "copy_model"], [71, 5, 1, "", "create_joint_distribution"], [72, 5, 1, "", "create_report"], [73, 5, 1, "", "create_rng"], [74, 5, 1, "", "create_symbol"], [75, 5, 1, "", "drop_columns"], [76, 5, 1, "", "drop_dropped_columns"], [77, 5, 1, "", "evaluate_epsilon_gradient"], [78, 5, 1, "", "evaluate_eta_gradient"], [79, 5, 1, "", "evaluate_expression"], [80, 5, 1, "", "evaluate_individual_prediction"], [81, 5, 1, "", "evaluate_population_prediction"], [82, 5, 1, "", "evaluate_weighted_residuals"], [83, 5, 1, "", "expand_additional_doses"], [84, 5, 1, "", "find_clearance_parameters"], [85, 5, 1, "", "find_volume_parameters"], [86, 5, 1, "", "fix_or_unfix_parameters"], [87, 5, 1, "", "fix_parameters"], [88, 5, 1, "", "fix_parameters_to"], [89, 5, 1, "", "generate_model_code"], [90, 5, 1, "", "get_baselines"], [91, 5, 1, "", "get_bioavailability"], [92, 5, 1, "", "get_cmt"], [93, 5, 1, "", "get_concentration_parameters_from_data"], [94, 5, 1, "", "get_config_path"], [95, 5, 1, "", "get_covariate_baselines"], [96, 5, 1, "", "get_doseid"], [97, 5, 1, "", "get_doses"], [98, 5, 1, "", "get_evid"], [99, 5, 1, "", "get_ids"], [100, 5, 1, "", "get_individual_parameters"], [101, 5, 1, "", "get_individual_prediction_expression"], [102, 5, 1, "", "get_lag_times"], [103, 5, 1, "", "get_mdv"], [104, 5, 1, "", "get_model_covariates"], [105, 5, 1, "", "get_number_of_individuals"], [106, 5, 1, "", "get_number_of_observations"], [107, 5, 1, "", "get_number_of_observations_per_individual"], [108, 5, 1, "", "get_observation_expression"], [109, 5, 1, "", "get_observations"], [110, 5, 1, "", "get_omegas"], [111, 5, 1, "", "get_pk_parameters"], [112, 5, 1, "", "get_population_prediction_expression"], [113, 5, 1, "", "get_rv_parameters"], [114, 5, 1, "", "get_sigmas"], [115, 5, 1, "", "get_thetas"], [116, 5, 1, "", "get_unit_of"], [117, 5, 1, "", "greekify_model"], [118, 5, 1, "", "has_additive_error_model"], [119, 5, 1, "", "has_combined_error_model"], [120, 5, 1, "", "has_covariate_effect"], [121, 5, 1, "", "has_first_order_elimination"], [122, 5, 1, "", "has_michaelis_menten_elimination"], [123, 5, 1, "", "has_mixed_mm_fo_elimination"], [124, 5, 1, "", "has_proportional_error_model"], [125, 5, 1, "", "has_random_effect"], [126, 5, 1, "", "has_zero_order_absorption"], [127, 5, 1, "", "has_zero_order_elimination"], [128, 5, 1, "", "list_time_varying_covariates"], [129, 5, 1, "", "load_example_model"], [130, 5, 1, "", "make_declarative"], [131, 5, 1, "", "mu_reference_model"], [132, 5, 1, "", "omit_data"], [133, 5, 1, "", "plot_individual_predictions"], [134, 5, 1, "", "plot_iofv_vs_iofv"], [135, 5, 1, "", "print_model_code"], [136, 5, 1, "", "print_model_symbols"], [137, 5, 1, "", "read_dataset_from_datainfo"], [138, 5, 1, "", "read_model"], [139, 5, 1, "", "read_model_from_database"], [140, 5, 1, "", "read_model_from_string"], [141, 5, 1, "", "remove_covariance_step"], [142, 5, 1, "", "remove_covariate_effect"], [143, 5, 1, "", "remove_error_model"], [144, 5, 1, "", "remove_estimation_step"], [145, 5, 1, "", "remove_iiv"], [146, 5, 1, "", "remove_iov"], [147, 5, 1, "", "remove_lag_time"], [148, 5, 1, "", "remove_loq_data"], [149, 5, 1, "", "remove_peripheral_compartment"], [150, 5, 1, "", "remove_unused_parameters_and_rvs"], [151, 5, 1, "", "rename_symbols"], [152, 5, 1, "", "resample_data"], [153, 5, 1, "", "sample_individual_estimates"], [154, 5, 1, "", "sample_parameters_from_covariance_matrix"], [155, 5, 1, "", "sample_parameters_uniformly"], [156, 5, 1, "", "set_additive_error_model"], [157, 5, 1, "", "set_bolus_absorption"], [158, 5, 1, "", "set_combined_error_model"], [159, 5, 1, "", "set_covariates"], [160, 5, 1, "", "set_dtbs_error_model"], [161, 5, 1, "", "set_estimation_step"], [162, 5, 1, "", "set_evaluation_step"], [163, 5, 1, "", "set_first_order_absorption"], [164, 5, 1, "", "set_first_order_elimination"], [165, 5, 1, "", "set_iiv_on_ruv"], [166, 5, 1, "", "set_initial_estimates"], [167, 5, 1, "", "set_lower_bounds"], [168, 5, 1, "", "set_michaelis_menten_elimination"], [169, 5, 1, "", "set_mixed_mm_fo_elimination"], [170, 5, 1, "", "set_name"], [171, 5, 1, "", "set_ode_solver"], [172, 5, 1, "", "set_peripheral_compartments"], [173, 5, 1, "", "set_power_on_ruv"], [174, 5, 1, "", "set_proportional_error_model"], [175, 5, 1, "", "set_seq_zo_fo_absorption"], [176, 5, 1, "", "set_time_varying_error_model"], [177, 5, 1, "", "set_transit_compartments"], [178, 5, 1, "", "set_upper_bounds"], [179, 5, 1, "", "set_weighted_error_model"], [180, 5, 1, "", "set_zero_order_absorption"], [181, 5, 1, "", "set_zero_order_elimination"], [182, 5, 1, "", "simplify_expression"], [183, 5, 1, "", "solve_ode_system"], [184, 5, 1, "", "split_joint_distribution"], [185, 5, 1, "", "transform_etas_boxcox"], [186, 5, 1, "", "transform_etas_john_draper"], [187, 5, 1, "", "transform_etas_tdist"], [188, 5, 1, "", "translate_nmtran_time"], [189, 5, 1, "", "unconstrain_parameters"], [190, 5, 1, "", "undrop_columns"], [191, 5, 1, "", "unfix_parameters"], [192, 5, 1, "", "unfix_parameters_to"], [193, 5, 1, "", "update_initial_individual_estimates"], [194, 5, 1, "", "update_inits"], [195, 5, 1, "", "use_thetas_for_error_stdev"], [196, 5, 1, "", "write_csv"], [197, 5, 1, "", "write_model"]], "pharmpy.tools": [[198, 5, 1, "", "create_results"], [199, 5, 1, "", "fit"], [200, 5, 1, "", "predict_influential_individuals"], [201, 5, 1, "", "predict_influential_outliers"], [202, 5, 1, "", "predict_outliers"], [203, 5, 1, "", "print_fit_summary"], [204, 5, 1, "", "rank_models"], [205, 5, 1, "", "read_modelfit_results"], [206, 5, 1, "", "read_results"], [207, 5, 1, "", "retrieve_final_model"], [208, 5, 1, "", "retrieve_models"], [209, 5, 1, "", "run_allometry"], [210, 5, 1, "", "run_amd"], [211, 5, 1, "", "run_covsearch"], [212, 5, 1, "", "run_iivsearch"], [213, 5, 1, "", "run_iovsearch"], [214, 5, 1, "", "run_modelfit"], [215, 5, 1, "", "run_modelsearch"], [216, 5, 1, "", "run_ruvsearch"], [217, 5, 1, "", "run_tool"], [218, 5, 1, "", "summarize_errors"], [219, 5, 1, "", "summarize_individuals"], [220, 5, 1, "", "summarize_individuals_count_table"], [221, 5, 1, "", "summarize_modelfit_results"], [222, 5, 1, "", "write_results"]], "pharmpy.workflows": [[223, 1, 1, "", "LocalDirectoryDatabase"], [224, 1, 1, "", "LocalDirectoryToolDatabase"], [225, 1, 1, "", "LocalModelDirectoryDatabase"], [226, 1, 1, "", "Log"], [227, 1, 1, "", "ModelDatabase"], [228, 1, 1, "", "NullModelDatabase"], [229, 1, 1, "", "NullToolDatabase"], [230, 1, 1, "", "Task"], [231, 1, 1, "", "ToolDatabase"], [232, 1, 1, "", "Workflow"], [233, 5, 1, "", "call_workflow"], [234, 3, 1, "", "default_model_database"], [235, 3, 1, "", "default_tool_database"], [236, 5, 1, "", "execute_workflow"], [237, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[223, 2, 1, "", "retrieve_file"], [223, 2, 1, "", "retrieve_local_files"], [223, 2, 1, "", "retrieve_model"], [223, 2, 1, "", "retrieve_modelfit_results"], [223, 2, 1, "", "store_local_file"], [223, 2, 1, "", "store_metadata"], [223, 2, 1, "", "store_model"], [223, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[224, 2, 1, "", "from_dict"], [224, 2, 1, "", "read_metadata"], [224, 2, 1, "", "store_local_file"], [224, 2, 1, "", "store_metadata"], [224, 2, 1, "", "store_results"], [224, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[225, 2, 1, "", "list_models"], [225, 2, 1, "", "snapshot"], [225, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[226, 2, 1, "", "from_dict"], [226, 3, 1, "", "log"], [226, 2, 1, "", "log_error"], [226, 2, 1, "", "log_warning"], [226, 2, 1, "", "to_dataframe"], [226, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[227, 2, 1, "", "retrieve_file"], [227, 2, 1, "", "retrieve_local_files"], [227, 2, 1, "", "retrieve_model"], [227, 2, 1, "", "retrieve_modelfit_results"], [227, 2, 1, "", "snapshot"], [227, 2, 1, "", "store_local_file"], [227, 2, 1, "", "store_metadata"], [227, 2, 1, "", "store_model"], [227, 2, 1, "", "store_modelfit_results"], [227, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[228, 2, 1, "", "retrieve_file"], [228, 2, 1, "", "retrieve_local_files"], [228, 2, 1, "", "retrieve_model"], [228, 2, 1, "", "retrieve_modelfit_results"], [228, 2, 1, "", "store_local_file"], [228, 2, 1, "", "store_metadata"], [228, 2, 1, "", "store_model"], [228, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[229, 2, 1, "", "store_local_file"], [229, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[231, 3, 1, "", "model_database"], [231, 2, 1, "", "store_local_file"], [231, 2, 1, "", "store_results"]], "pharmpy-data-anonymize": [[246, 6, 1, "cmdoption-pharmpy-data-anonymize-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-group", "--group"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-data-anonymize-arg-file", "file"]], "pharmpy-data-append": [[246, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [246, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-filter": [[246, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [246, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[246, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [246, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[246, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [246, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [246, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [246, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [246, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [246, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [246, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[246, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[246, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[246, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[246, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[246, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[246, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[246, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [246, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[246, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[246, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [246, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[246, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[246, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [246, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [246, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[246, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[246, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [246, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [246, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [246, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [246, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[246, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[246, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[246, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[246, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [246, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [246, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [246, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[246, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[246, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[246, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[246, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[246, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[246, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[246, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[246, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[246, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[246, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[246, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[246, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [246, 6, 1, "cmdoption-pharmpy-run-amd-categorical", "--categorical"], [246, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [246, 6, 1, "cmdoption-pharmpy-run-amd-continuous", "--continuous"], [246, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-amd-lloq", "--lloq"], [246, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [246, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [246, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [246, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [246, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [246, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [246, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[246, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [246, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[246, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[246, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [246, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [246, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[246, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[246, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [246, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[246, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[246, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [246, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [246, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[246, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [246, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 267], "dataset": [0, 253, 277], "overview": [0, 269, 273], "pars": 0, "translat": 0, "step": [0, 275], "nm": 0, "tran": 0, "comment": 0, "line": [0, 246], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 253, 265], "date": 0, "id": 0, "check": [0, 249], "tabl": 0, "file": [0, 248, 253, 265], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 249], "all": 0, "zero": [0, 265], "individu": [0, 242, 243, 256, 262, 264, 265, 276], "control": 0, "stream": 0, "gener": [0, 261], "option": [0, 241, 277], "problem": 0, "data": [0, 241, 246], "eta": [0, 265], "code": [0, 247, 249, 263, 265], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 28, 242, 243, 246, 251, 252, 256, 258, 260, 262, 263, 264, 265, 266, 271, 273, 274, 275, 276, 277], "spars": 0, "matrix": [0, 242, 264], "allometri": [1, 2, 246], "run": [1, 2, 246, 249, 251, 258, 260, 265, 266, 274, 277], "argument": [1, 2, 251, 258, 260, 266, 274], "procedur": [1, 274], "The": [1, 242, 243, 246, 248, 252, 254, 256, 258, 262, 263, 265, 266, 271, 273, 274, 275, 276, 279], "automat": 2, "model": [2, 19, 238, 239, 246, 253, 254, 258, 263, 265, 266, 267, 271, 274, 277, 279], "develop": [2, 249, 250, 255], "amd": [2, 246], "input": [2, 250], "search": [2, 258, 266], "space": [2, 266], "order": [2, 265], "subtool": 2, "structur": [2, 258, 273], "iivsearch": [2, 246, 258], "iovsearch": [2, 246, 260], "residu": [2, 264, 273], "covari": [2, 242, 243, 256, 258, 264, 265, 273], "api": 3, "refer": [3, 243, 256], "assign": 4, "bolu": [5, 265], "columninfo": [6, 253], "compart": [7, 265], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 253], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 260, 265], "estimationstep": [14, 15], "explicitodesystem": 16, "infus": 17, "jointnormaldistribut": 18, "modelerror": 20, "modelsyntaxerror": 21, "modelfitresultserror": 22, "normaldistribut": 23, "odesystem": 24, "paramet": [25, 26, 242, 253, 254, 256, 263, 264, 265, 267], "randomvari": [27, 254], "statement": [29, 30, 254, 263], "variabilityhierarchi": 31, "variabilitylevel": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 246], "add_individual_paramet": 38, "add_iov": [39, 246], "add_lag_tim": 40, "add_peripheral_compart": 41, "add_pk_iiv": 42, "add_population_paramet": 43, "add_time_after_dos": 44, "append_estimation_step_opt": 45, "bump_model_numb": 46, "calculate_a": 47, "calculate_b": 48, "calculate_corr_from_cov": 49, "calculate_corr_from_inf": 50, "calculate_cov_from_corrs": 51, "calculate_cov_from_inf": 52, "calculate_epsilon_gradient_express": 53, "calculate_eta_gradient_express": 54, "calculate_eta_shrinkag": 55, "calculate_individual_parameter_statist": 56, "calculate_individual_shrinkag": 57, "calculate_inf_from_corrs": 58, "calculate_inf_from_cov": 59, "calculate_parameters_from_ucp": 60, "calculate_pk_parameters_statist": 61, "calculate_se_from_cov": 62, "calculate_se_from_inf": 63, "calculate_ucp_scal": 64, "check_dataset": 65, "check_high_correl": 66, "check_parameters_near_bound": 67, "cleanup_model": 68, "convert_model": 69, "copy_model": 70, "create_joint_distribut": [71, 246], "create_report": 72, "create_rng": 73, "create_symbol": 74, "drop_column": 75, "drop_dropped_column": 76, "evaluate_epsilon_gradi": 77, "evaluate_eta_gradi": 78, "evaluate_express": 79, "evaluate_individual_predict": 80, "evaluate_population_predict": 81, "evaluate_weighted_residu": 82, "expand_additional_dos": 83, "find_clearance_paramet": 84, "find_volume_paramet": 85, "fix_or_unfix_paramet": 86, "fix_paramet": 87, "fix_parameters_to": 88, "generate_model_cod": 89, "get_baselin": 90, "get_bioavail": 91, "get_cmt": 92, "get_concentration_parameters_from_data": 93, "get_config_path": 94, "get_covariate_baselin": 95, "get_doseid": 96, "get_dos": 97, "get_evid": 98, "get_id": 99, "get_individual_paramet": 100, "get_individual_prediction_express": 101, "get_lag_tim": 102, "get_mdv": 103, "get_model_covari": 104, "get_number_of_individu": 105, "get_number_of_observ": 106, "get_number_of_observations_per_individu": 107, "get_observation_express": 108, "get_observ": 109, "get_omega": 110, "get_pk_paramet": 111, "get_population_prediction_express": 112, "get_rv_paramet": 113, "get_sigma": 114, "get_theta": 115, "get_unit_of": 116, "greekify_model": 117, "has_additive_error_model": 118, "has_combined_error_model": 119, "has_covariate_effect": 120, "has_first_order_elimin": 121, "has_michaelis_menten_elimin": 122, "has_mixed_mm_fo_elimin": 123, "has_proportional_error_model": 124, "has_random_effect": 125, "has_zero_order_absorpt": 126, "has_zero_order_elimin": 127, "list_time_varying_covari": 128, "load_example_model": 129, "make_declar": 130, "mu_reference_model": 131, "omit_data": 132, "plot_individual_predict": 133, "plot_iofv_vs_iofv": 134, "print_model_cod": 135, "print_model_symbol": 136, "read_dataset_from_datainfo": 137, "read_model": 138, "read_model_from_databas": 139, "read_model_from_str": 140, "remove_covariance_step": 141, "remove_covariate_effect": 142, "remove_error_model": 143, "remove_estimation_step": 144, "remove_iiv": [145, 246], "remove_iov": [146, 246], "remove_lag_tim": 147, "remove_loq_data": 148, "remove_peripheral_compart": 149, "remove_unused_parameters_and_rv": 150, "rename_symbol": 151, "resample_data": 152, "sample_individual_estim": 153, "sample_parameters_from_covariance_matrix": 154, "sample_parameters_uniformli": 155, "set_additive_error_model": 156, "set_bolus_absorpt": 157, "set_combined_error_model": 158, "set_covari": 159, "set_dtbs_error_model": 160, "set_estimation_step": 161, "set_evaluation_step": 162, "set_first_order_absorpt": 163, "set_first_order_elimin": 164, "set_iiv_on_ruv": 165, "set_initial_estim": 166, "set_lower_bound": 167, "set_michaelis_menten_elimin": 168, "set_mixed_mm_fo_elimin": 169, "set_nam": 170, "set_ode_solv": 171, "set_peripheral_compart": 172, "set_power_on_ruv": 173, "set_proportional_error_model": 174, "set_seq_zo_fo_absorpt": 175, "set_time_varying_error_model": 176, "set_transit_compart": 177, "set_upper_bound": 178, "set_weighted_error_model": 179, "set_zero_order_absorpt": 180, "set_zero_order_elimin": 181, "simplify_express": 182, "solve_ode_system": 183, "split_joint_distribut": 184, "transform_etas_boxcox": 185, "transform_etas_john_drap": 186, "transform_etas_tdist": 187, "translate_nmtran_tim": 188, "unconstrain_paramet": 189, "undrop_column": 190, "unfix_paramet": 191, "unfix_parameters_to": 192, "update_initial_individual_estim": 193, "update_init": [194, 246], "use_thetas_for_error_stdev": 195, "write_csv": 196, "write_model": 197, "create_result": 198, "fit": [199, 265], "predict_influential_individu": 200, "predict_influential_outli": 201, "predict_outli": 202, "print_fit_summari": 203, "rank_model": 204, "read_modelfit_result": 205, "read_result": 206, "retrieve_final_model": 207, "retrieve_model": 208, "run_allometri": 209, "run_amd": 210, "run_covsearch": 211, "run_iivsearch": 212, "run_iovsearch": 213, "run_modelfit": 214, "run_modelsearch": 215, "run_ruvsearch": 216, "run_tool": 217, "summarize_error": 218, "summarize_individu": 219, "summarize_individuals_count_t": 220, "summarize_modelfit_result": 221, "write_result": 222, "localdirectorydatabas": 223, "localdirectorytooldatabas": 224, "localmodeldirectorydatabas": 225, "log": 226, "modeldatabas": 227, "nullmodeldatabas": 228, "nulltooldatabas": 229, "task": 230, "tooldatabas": 231, "workflow": [232, 241, 249], "call_workflow": 233, "default_model_databas": 234, "default_tool_databas": 235, "execute_workflow": 236, "split_common_opt": 237, "pharmpi": [238, 239, 240, 241, 245, 246, 247, 249, 253, 254, 259, 263, 268, 272, 277, 279], "packag": [238, 239, 240, 241], "class": [238, 241, 254], "function": [239, 240, 241], "tool": [240, 272, 277], "modul": [241, 254], "bootstrap": [242, 246], "postprocess": [242, 256], "statist": 242, "ofv": [242, 243, 246, 252, 256, 262, 264, 275, 276], "includ": 242, "case": 243, "delet": 243, "diagnost": 243, "cdd": [243, 246], "cook": 243, "score": 243, "jackknif": 243, "cookscor": 243, "ratio": 243, "delta": 243, "skip": 243, "column": 243, "changelog": 244, "0": 244, "81": 244, "1": 244, "2022": 244, "10": 244, "24": 244, "bug": 244, "fix": [244, 265], "21": 244, "new": [244, 260, 265, 267], "featur": [244, 266, 277], "chang": [244, 268], "80": 244, "19": 244, "79": 244, "16": 244, "78": 244, "09": 244, "20": 244, "bugfix": 244, "77": 244, "08": 244, "76": 244, "06": 244, "05": 244, "75": 244, "74": 244, "07": 244, "18": 244, "73": 244, "72": 244, "71": 244, "70": 244, "17": 244, "13": 244, "69": 244, "04": 244, "29": 244, "68": 244, "27": 244, "67": 244, "25": 244, "66": 244, "65": 244, "14": 244, "64": 244, "12": 244, "63": 244, "62": 244, "61": 244, "03": 244, "31": 244, "59": 244, "58": 244, "4": 244, "22": 244, "57": 244, "56": 244, "55": 244, "54": 244, "53": 244, "52": 244, "02": 244, "51": 244, "50": 244, "49": 244, "48": 244, "47": 244, "01": 244, "28": 244, "46": 244, "45": 244, "44": 244, "43": 244, "42": 244, "11": 244, "41": 244, "2021": 244, "40": 244, "39": 244, "15": 244, "38": 244, "37": 244, "26": 244, "36": 244, "35": 244, "34": 244, "3": 244, "2": [244, 261], "33": 244, "32": 244, "30": 244, "23": 244, "2020": 244, "9": 244, "8": 244, "7": 244, "6": 244, "5": 244, "2018": 244, "citat": 245, "how": 245, "cite": 245, "pharmr": [245, 279], "command": 246, "interfac": 246, "anonym": 246, "append": 246, "filter": 246, "print": 246, "resampl": 246, "write": [246, 263, 265, 267], "info": 246, "absorption_r": 246, "add_cov_effect": 246, "boxcox": [246, 265, 273], "elimination_r": 246, "error": [246, 264, 265, 273, 279], "iiv_on_ruv": 246, "john_drap": 246, "peripheral_compart": 246, "power_on_ruv": 246, "sampl": [246, 276], "tdist": [246, 273], "transit_compart": 246, "frem": [246, 256], "linear": [246, 262], "qa": [246, 273], "report": 246, "ruvsearch": [246, 274], "scm": [246, 275], "simev": [246, 276], "summari": [246, 275, 276], "covsearch": [246, 251], "estmethod": 246, "execut": 246, "modelsearch": [246, 266], "commun": 247, "conduct": 247, "configur": 248, "environ": [248, 249], "variabl": [248, 256, 263, 267], "contribut": 249, "set": [249, 263, 265, 268], "up": 249, "support": 249, "platform": 249, "instal": [249, 257, 279], "python": [249, 279], "git": 249, "fork": 249, "clone": 249, "repositori": 249, "tox": 249, "graphviz": 249, "us": [249, 267, 279], "build": 249, "document": [249, 255], "unit": [249, 253], "test": 249, "integr": 249, "usabl": 249, "virtual": 249, "standard": [249, 264, 265], "releas": 249, "version": [249, 279], "inform": [249, 253, 264], "contributor": 250, "scientif": 250, "fund": 250, "effect": [251, 256, 265, 273], "wildcard": 251, "algorithm": [251, 258, 260, 266], "crossval": 252, "crossvalid": 252, "retriev": 253, "from": [253, 265], "updat": [253, 263, 265, 279], "subject": 253, "observ": 253, "dose": 253, "extract": 253, "group": 253, "after": 253, "concentr": 253, "type": [253, 277], "scale": 253, "continu": 253, "categori": 253, "drop": 253, "datatyp": 253, "descriptor": 253, "design": 254, "principl": 254, "level": 254, "architectur": 254, "heart": 254, "docstr": 254, "depend": 254, "coeffici": 256, "unexplain": 256, "estim": [256, 263, 264, 265], "valu": 256, "get": [257, 263, 265], "start": [257, 258], "A": 257, "first": [257, 265], "exampl": [257, 277], "brute": 258, "forc": 258, "number": [258, 265], "iiv": [258, 265, 266], "full": 258, "ad": [258, 265, 266], "compar": [258, 260, 266], "rank": [258, 260, 266], "candid": [258, 260, 266, 275], "welcom": 259, "iov": [260, 265], "licens": 261, "logo": 261, "copyright": 261, "bsd": 261, "claus": 261, "gnu": 261, "lesser": 261, "public": 261, "read": [263, 264, 265, 267], "name": [263, 267], "random": [263, 267], "modelfit": [263, 264], "initi": [263, 265], "final": 264, "rel": 264, "correl": 264, "indiviud": 264, "predict": [264, 276], "basic": 265, "sourc": 265, "string": 265, "unfix": 265, "add": 265, "pk": 265, "od": 265, "system": 265, "absorpt": 265, "rate": 265, "sequenti": 265, "delai": 265, "transit": 265, "lag": 265, "elimin": 265, "micha": 265, "menten": 265, "mix": 265, "peripher": 265, "remov": 265, "transform": 265, "approxim": 265, "t": 265, "john": 265, "draper": 265, "an": 265, "addit": 265, "proport": 265, "combin": [265, 266], "appli": 265, "ruv": 265, "power": 265, "deviat": 265, "epsilon": 265, "theta": 265, "weight": 265, "dtb": 265, "creat": 265, "joint": 265, "multipl": 265, "between": [265, 266], "previou": 265, "psn": [265, 272], "shrinkag": 265, "calcul": 265, "common": [266, 277], "behaviour": 266, "exclus": 266, "exhaust": 266, "stepwis": 266, "reduc": 266, "dure": 266, "plugin": [267, 269], "plot": [268, 276], "theme": 268, "axi": 268, "project": 270, "suggest": 270, "resmod": 271, "connect": 272, "bia": 273, "fullblock": 273, "databas": 277, "directori": 277, "metadata": 277, "languag": 277, "mfl": 277, "symbol": 277, "describ": 277, "interv": 277, "redund": 277, "descript": 277, "user": 278, "guid": 278, "r": 279, "troubl": 279, "shoot": 279, "wrong": 279, "import": 279, "gotcha": 279, "object": 279, "list": 279, "indic": 279, "datafram": 279, "multiindex": 279, "float": 279, "integ": 279, "singl": 279, "element": 279, "vector": 279}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"cleanup_model": [[68, "cleanup-model"]], "bump_model_number": [[46, "bump-model-number"]], "append_estimation_step_options": [[45, "append-estimation-step-options"]], "calculate_cov_from_corrse": [[51, "calculate-cov-from-corrse"]], "check_high_correlations": [[66, "check-high-correlations"]], "calculate_ucp_scale": [[64, "calculate-ucp-scale"]], "create_joint_distribution": [[71, "create-joint-distribution"]], "copy_model": [[70, "copy-model"]], "add_iiv": [[37, "add-iiv"]], "add_pk_iiv": [[42, "add-pk-iiv"]], "calculate_cov_from_inf": [[52, "calculate-cov-from-inf"]], "add_time_after_dose": [[44, "add-time-after-dose"]], "calculate_eta_shrinkage": [[55, "calculate-eta-shrinkage"]], "check_parameters_near_bounds": [[67, "check-parameters-near-bounds"]], "create_rng": [[73, "create-rng"]], "calculate_inf_from_cov": [[59, "calculate-inf-from-cov"]], "calculate_parameters_from_ucp": [[60, "calculate-parameters-from-ucp"]], "calculate_inf_from_corrse": [[58, "calculate-inf-from-corrse"]], "calculate_se_from_cov": [[62, "calculate-se-from-cov"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "add_population_parameter": [[43, "add-population-parameter"]], "add_lag_time": [[40, "add-lag-time"]], "calculate_eta_gradient_expression": [[54, "calculate-eta-gradient-expression"]], "calculate_individual_shrinkage": [[57, "calculate-individual-shrinkage"]], "calculate_corr_from_cov": [[49, "calculate-corr-from-cov"]], "calculate_se_from_inf": [[63, "calculate-se-from-inf"]], "calculate_epsilon_gradient_expression": [[53, "calculate-epsilon-gradient-expression"]], "calculate_pk_parameters_statistics": [[61, "calculate-pk-parameters-statistics"]], "create_report": [[72, "create-report"]], "check_dataset": [[65, "check-dataset"]], "calculate_bic": [[48, "calculate-bic"]], "add_iov": [[39, "add-iov"]], "calculate_aic": [[47, "calculate-aic"]], "convert_model": [[69, "convert-model"]], "calculate_individual_parameter_statistics": [[56, "calculate-individual-parameter-statistics"]], "add_peripheral_compartment": [[41, "add-peripheral-compartment"]], "calculate_corr_from_inf": [[50, "calculate-corr-from-inf"]], "ModelfitResultsError": [[22, "modelfitresultserror"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "VariabilityLevel": [[32, "variabilitylevel"]], "ColumnInfo": [[6, "columninfo"], [253, "columninfo"]], "DatasetWarning": [[12, "datasetwarning"]], "add_estimation_step": [[36, "add-estimation-step"]], "JointNormalDistribution": [[18, "jointnormaldistribution"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Distribution": [[13, "distribution"], [265, "distribution"]], "EstimationStep": [[14, "estimationstep"]], "ModelSyntaxError": [[21, "modelsyntaxerror"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "EstimationSteps": [[15, "estimationsteps"]], "Assignment": [[4, "assignment"]], "Parameters": [[26, "parameters"], [265, "parameters"]], "add_covariance_step": [[34, "add-covariance-step"]], "API Reference": [[3, "api-reference"]], "Model": [[19, "model"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Running": [[2, "running"], [1, "running"], [251, "running"], [258, "running"], [266, "running"], [274, "running"], [260, "running"]], "Arguments": [[2, "arguments"], [1, "arguments"], [251, "arguments"], [258, "arguments"], [266, "arguments"], [274, "arguments"], [260, "arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [258, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [260, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [28, "results"], [251, "results"], [277, "results"], [260, "results"]], "ExplicitODESystem": [[16, "explicitodesystem"]], "Infusion": [[17, "infusion"]], "ODESystem": [[24, "odesystem"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "Compartment": [[7, "compartment"]], "Bolus": [[5, "bolus"]], "Statement": [[29, "statement"]], "ModelError": [[20, "modelerror"]], "VariabilityHierarchy": [[31, "variabilityhierarchy"]], "DatasetError": [[11, "dataseterror"]], "DataInfo": [[10, "datainfo"], [253, "datainfo"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [274, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "add_allometry": [[33, "add-allometry"]], "Statements": [[30, "statements"]], "NormalDistribution": [[23, "normaldistribution"]], "RandomVariables": [[27, "randomvariables"]], "Parameter": [[25, "parameter"]], "split_common_options": [[237, "split-common-options"]], "ToolDatabase": [[231, "tooldatabase"]], "write_results": [[222, "write-results"]], "Bootstrap": [[242, "bootstrap"]], "The Bootstrap postprocessing and results": [[242, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[242, "parameter-statistics"]], "OFV statistics": [[242, "ofv-statistics"]], "Covariance matrix": [[242, "covariance-matrix"], [264, "covariance-matrix"]], "Included individuals": [[242, "included-individuals"]], "default_model_database": [[234, "default-model-database"]], "Case deletion diagnostics": [[243, "case-deletion-diagnostics"]], "The cdd results": [[243, "the-cdd-results"]], "Case results": [[243, "case-results"]], "Cook score": [[243, "cook-score"]], "Jackknife cookscore": [[243, "jackknife-cookscore"]], "Covariance ratio": [[243, "covariance-ratio"]], "Delta OFV": [[243, "delta-ofv"]], "Skipped individuals": [[243, "skipped-individuals"]], "Case column": [[243, "case-column"]], "References": [[243, "references"], [256, "references"]], "LocalModelDirectoryDatabase": [[225, "localmodeldirectorydatabase"]], "execute_workflow": [[236, "execute-workflow"]], "Log": [[226, "log"]], "Task": [[230, "task"]], "FREM": [[256, "frem"]], "The FREM postprocessing and results": [[256, "the-frem-postprocessing-and-results"]], "Covariate effects": [[256, "covariate-effects"], [273, "covariate-effects"]], "Parameter covariate coefficients": [[256, "parameter-covariate-coefficients"]], "Individual covariate effects": [[256, "individual-covariate-effects"]], "Unexplained variability": [[256, "unexplained-variability"]], "Parameter estimates": [[256, "parameter-estimates"], [264, "parameter-estimates"]], "OFV": [[256, "ofv"]], "Estimated covariate values": [[256, "estimated-covariate-values"]], "pharmpy.model Package": [[238, "module-pharmpy.model"]], "Classes": [[238, "classes"], [241, "classes"]], "Citation": [[245, "citation"]], "How to cite Pharmpy and pharmr": [[245, "how-to-cite-pharmpy-and-pharmr"]], "pharmpy.modeling Package": [[239, "module-pharmpy.modeling"]], "Functions": [[239, "functions"], [240, "functions"], [241, "functions"]], "LocalDirectoryToolDatabase": [[224, "localdirectorytooldatabase"]], "The Pharmpy command line interface": [[246, "the-pharmpy-command-line-interface"]], "pharmpy": [[246, "pharmpy"]], "pharmpy data": [[246, "pharmpy-data"]], "pharmpy data anonymize": [[246, "pharmpy-data-anonymize"]], "pharmpy data append": [[246, "pharmpy-data-append"]], "pharmpy data filter": [[246, "pharmpy-data-filter"]], "pharmpy data print": [[246, "pharmpy-data-print"]], "pharmpy data resample": [[246, "pharmpy-data-resample"]], "pharmpy data write": [[246, "pharmpy-data-write"]], "pharmpy info": [[246, "pharmpy-info"]], "pharmpy model": [[246, "pharmpy-model"]], "pharmpy model absorption_rate": [[246, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[246, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[246, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[246, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[246, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[246, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[246, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[246, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[246, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[246, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[246, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[246, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[246, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[246, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[246, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[246, "pharmpy-model-sample"]], "pharmpy model tdist": [[246, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[246, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[246, "pharmpy-model-update-inits"]], "pharmpy results": [[246, "pharmpy-results"]], "pharmpy results bootstrap": [[246, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[246, "pharmpy-results-cdd"]], "pharmpy results frem": [[246, "pharmpy-results-frem"]], "pharmpy results linearize": [[246, "pharmpy-results-linearize"]], "pharmpy results ofv": [[246, "pharmpy-results-ofv"]], "pharmpy results print": [[246, "pharmpy-results-print"]], "pharmpy results qa": [[246, "pharmpy-results-qa"]], "pharmpy results report": [[246, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[246, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[246, "pharmpy-results-scm"]], "pharmpy results simeval": [[246, "pharmpy-results-simeval"]], "pharmpy results summary": [[246, "pharmpy-results-summary"]], "pharmpy run": [[246, "pharmpy-run"]], "pharmpy run allometry": [[246, "pharmpy-run-allometry"]], "pharmpy run amd": [[246, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[246, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[246, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[246, "pharmpy-run-estmethod"]], "pharmpy run execute": [[246, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[246, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[246, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[246, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[246, "pharmpy-run-ruvsearch"]], "pharmpy.tools Package": [[240, "module-pharmpy.tools"]], "Crossval": [[252, "crossval"]], "The crossval results": [[252, "the-crossval-results"]], "Crossvalidation OFVs": [[252, "crossvalidation-ofvs"]], "Getting started": [[257, "getting-started"]], "Installation": [[257, "installation"]], "A first example": [[257, "a-first-example"]], "Workflow": [[232, "workflow"]], "Contribute": [[249, "contribute"]], "Set up the development environment": [[249, "set-up-the-development-environment"]], "Supported platforms": [[249, "supported-platforms"]], "Install Python": [[249, "install-python"]], "Install git": [[249, "install-git"]], "Fork and clone the code repository": [[249, "fork-and-clone-the-code-repository"]], "Install tox": [[249, "install-tox"]], "Install graphviz used for building the documentation": [[249, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[249, "using-the-development-environment"]], "Running tox": [[249, "running-tox"]], "Check code formatting": [[249, "check-code-formatting"]], "Run the unit tests": [[249, "run-the-unit-tests"]], "Build and test the documentation": [[249, "build-and-test-the-documentation"]], "Run the integration tests": [[249, "run-the-integration-tests"]], "Build a usable virtual environment": [[249, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[249, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[249, "releasing-pharmpy-and-documentation"]], "Version": [[249, "version"]], "Information for developers": [[249, "information-for-developers"]], "default_tool_database": [[235, "default-tool-database"]], "NullModelDatabase": [[228, "nullmodeldatabase"]], "Pharmpy Community Code of Conduct": [[247, "pharmpy-community-code-of-conduct"]], "COVsearch": [[251, "covsearch"]], "Effects": [[251, "effects"]], "Wildcards": [[251, "wildcards"]], "Algorithm": [[251, "algorithm"], [260, "algorithm"]], "NullToolDatabase": [[229, "nulltooldatabase"]], "Algorithms": [[258, "algorithms"], [266, "algorithms"]], "Brute force search for number of IIVs": [[258, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[258, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[258, "full-brute-force-search"]], "Adding IIV to the start model": [[258, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[258, "comparing-and-ranking-candidates"], [266, "comparing-and-ranking-candidates"], [260, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[258, "the-iivsearch-results"]], "Documentation for developers": [[255, "documentation-for-developers"]], "Contributors": [[250, "authors"]], "Development": [[250, "development"]], "Scientific input": [[250, "scientific-input"]], "Funding": [[250, "funding"]], "pharmpy.workflows Package": [[241, "module-pharmpy.workflows"]], "Options for the data module": [[241, "id1"]], "ModelDatabase": [[227, "modeldatabase"]], "LocalDirectoryDatabase": [[223, "localdirectorydatabase"]], "call_workflow": [[233, "call-workflow"]], "Design principles": [[254, "design-principles"]], "Levels of the architecture": [[254, "levels-of-the-architecture"]], "The Heart, The Model Class": [[254, "the-heart-the-model-class"]], "pharmpy.Parameters": [[254, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[254, "pharmpy-randomvariables"]], "pharmpy.Statements": [[254, "pharmpy-statements"]], "The pharmpy.modeling module": [[254, "the-pharmpy-modeling-module"]], "Docstrings": [[254, "docstrings"]], "Dependencies": [[254, "dependencies"]], "Configuration": [[248, "configuration"]], "The configuration file": [[248, "the-configuration-file"]], "Environment variables": [[248, "environment-variables"]], "Changelog": [[244, "changelog"]], "0.81.1 (2022-10-24)": [[244, "id1"]], "Bug fixes": [[244, "bug-fixes"], [244, "id3"], [244, "id6"], [244, "id10"]], "0.81.0 (2022-10-21)": [[244, "id2"]], "New features": [[244, "new-features"], [244, "id8"], [244, "id18"], [244, "id22"], [244, "id29"], [244, "id32"], [244, "id36"], [244, "id42"], [244, "id46"], [244, "id52"], [244, "id57"], [244, "id61"], [244, "id64"], [244, "id72"], [244, "id76"], [244, "id82"], [244, "id91"], [244, "id95"], [244, "id98"], [244, "id102"], [244, "id104"], [244, "id109"], [244, "id112"], [244, "id116"]], "Changes": [[244, "changes"], [244, "id5"], [244, "id9"], [244, "id12"], [244, "id14"], [244, "id19"], [244, "id23"], [244, "id26"], [244, "id30"], [244, "id33"], [244, "id37"], [244, "id43"], [244, "id47"], [244, "id58"], [244, "id62"], [244, "id67"], [244, "id73"], [244, "id83"], [244, "id88"], [244, "id92"], [244, "id99"], [244, "id105"], [244, "id110"], [244, "id113"], [244, "id117"]], "0.80.0 (2022-10-19)": [[244, "id4"]], "0.79.0 (2022-10-16)": [[244, "id7"]], "0.78.0 (2022-09-20)": [[244, "id11"]], "Bugfixes": [[244, "bugfixes"], [244, "id16"], [244, "id20"], [244, "id24"], [244, "id27"], [244, "id34"], [244, "id38"], [244, "id40"], [244, "id44"], [244, "id48"], [244, "id50"], [244, "id53"], [244, "id55"], [244, "id59"], [244, "id65"], [244, "id68"], [244, "id70"], [244, "id74"], [244, "id78"], [244, "id80"], [244, "id84"], [244, "id86"], [244, "id89"], [244, "id93"], [244, "id96"], [244, "id100"], [244, "id107"], [244, "id114"], [244, "id118"]], "0.77.0 (2022-09-08)": [[244, "id13"]], "0.76.1 (2022-09-06)": [[244, "id15"]], "0.76.0 (2022-09-05)": [[244, "id17"]], "0.75.0 (2022-08-10)": [[244, "id21"]], "0.74.0 (2022-07-18)": [[244, "id25"]], "0.73.0 (2022-06-21)": [[244, "id28"]], "0.72.0 (2022-06-08)": [[244, "id31"]], "0.71.0 (2022-05-24)": [[244, "id35"]], "0.70.1 (2022-05-17)": [[244, "id39"]], "0.70.0 (2022-05-13)": [[244, "id41"]], "0.69.0 (2022-04-29)": [[244, "id45"]], "0.68.0 (2022-04-27)": [[244, "id49"]], "0.67.0 (2022-04-25)": [[244, "id51"]], "0.66.0 (2022-04-20)": [[244, "id54"]], "0.65.0 (2022-04-14)": [[244, "id56"]], "0.64.0 (2022-04-12)": [[244, "id60"]], "0.63.0 (2022-04-07)": [[244, "id63"]], "0.62.0 (2022-04-04)": [[244, "id66"]], "New feature": [[244, "new-feature"]], "0.61.1 (2022-03-31)": [[244, "id69"]], "0.61.0 (2022-03-29)": [[244, "id71"]], "0.59.0 (2022-03-25)": [[244, "id75"]], "0.58.4 (2022-03-24)": [[244, "id77"]], "0.58.1 (2022-03-22)": [[244, "id79"]], "0.58.0 (2022-03-22)": [[244, "id81"]], "0.57.0 (2022-03-21)": [[244, "id85"]], "0.56.0 (2022-03-17)": [[244, "id87"]], "0.55.0 (2022-03-16)": [[244, "id90"]], "0.54.0 (2022-03-08)": [[244, "id94"]], "0.53.0 (2022-03-04)": [[244, "id97"]], "0.52.0 (2022-02-25)": [[244, "id101"]], "0.51.0 (2022-02-24)": [[244, "id103"]], "0.50.1 (2022-02-16)": [[244, "id106"]], "0.50.0 (2022-02-16)": [[244, "id108"]], "0.49.0 (2022-02-10)": [[244, "id111"]], "0.48.0 (2022-02-04)": [[244, "id115"]], "0.47.0 (2022-01-28)": [[244, "id119"]], "0.46.0 (2022-01-27)": [[244, "id120"]], "0.45.0 (2022-01-21)": [[244, "id121"]], "0.44.0 (2022-01-20)": [[244, "id122"]], "0.43.0 (2022-01-12)": [[244, "id123"]], "0.42.0 (2022-01-11)": [[244, "id124"]], "0.41.0 (2021-12-21)": [[244, "id125"]], "0.40.0 (2021-12-16)": [[244, "id126"]], "0.39.0 (2021-12-15)": [[244, "id127"]], "0.38.0 (2021-12-08)": [[244, "id128"]], "0.37.1 (2021-11-26)": [[244, "id129"]], "0.37.0 (2021-11-24)": [[244, "id130"]], "0.36.0 (2021-11-11)": [[244, "id131"]], "0.35.0 (2021-11-02)": [[244, "id132"]], "0.34.3 (2021-10-28)": [[244, "id133"]], "0.34.2 (2021-10-26)": [[244, "id134"]], "0.34.1 (2021-10-20)": [[244, "id135"]], "0.34.0 (2021-10-14)": [[244, "id136"]], "0.33.0 (2021-10-11)": [[244, "id137"]], "0.32.0 (2021-09-28)": [[244, "id138"]], "0.31.0 (2021-09-21)": [[244, "id139"]], "0.30.0 (2021-09-06)": [[244, "id140"]], "0.29.0 (2021-08-25)": [[244, "id141"]], "0.28.0 (2021-08-24)": [[244, "id142"]], "0.27.0 (2021-08-09)": [[244, "id143"]], "0.26.1 (2021-08-04)": [[244, "id144"]], "0.26.0 (2021-07-13)": [[244, "id145"]], "0.25.1 (2021-07-08)": [[244, "id146"]], "0.25.0 (2021-06-24)": [[244, "id147"]], "0.24.0 (2021-05-25)": [[244, "id148"]], "0.23.4 (2021-05-03)": [[244, "id149"]], "0.23.3 (2021-04-29)": [[244, "id150"]], "0.23.2 (2021-04-28)": [[244, "id151"]], "0.23.1 (2021-04-28)": [[244, "id152"]], "0.23.0 (2021-04-28)": [[244, "id153"]], "0.22.0 (2021-03-29)": [[244, "id154"]], "0.21.0 (2021-03-22)": [[244, "id155"]], "0.20.1 (2021-03-11)": [[244, "id156"]], "0.20.0 (2021-03-11)": [[244, "id157"]], "0.19.0 (2021-03-02)": [[244, "id158"]], "0.18.0 (2021-03-01)": [[244, "id159"]], "0.17.0 (2021-02-15)": [[244, "id160"]], "0.16.0 (2021-02-08)": [[244, "id161"]], "0.15.0 (2021-02-01)": [[244, "id162"]], "0.14.0 (2021-01-25)": [[244, "id163"]], "0.13.0 (2021-01-18)": [[244, "id164"]], "0.12.0 (2020-12-18)": [[244, "id165"]], "0.11.0 (2020-11-20)": [[244, "id166"]], "0.10.0 (2020-11-16)": [[244, "id167"]], "0.9.0 (2020-10-26)": [[244, "id168"]], "0.8.0 (2020-10-08)": [[244, "id169"]], "0.7.0 (2020-09-28)": [[244, "id170"]], "0.6.0 (2020-09-18)": [[244, "id171"]], "0.5.0 (2020-09-04)": [[244, "id172"]], "0.4.0 (2020-07-24)": [[244, "id173"]], "0.3.0 (2020-06-16)": [[244, "id174"]], "0.2.0 (2020-03-27)": [[244, "id175"]], "0.1.0 (2018-07-22)": [[244, "id176"]], "Datasets in Pharmpy": [[253, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[253, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[253, "update-the-dataset-of-a-model"]], "Subjects": [[253, "subjects"]], "Observations": [[253, "observations"]], "Dosing": [[253, "dosing"]], "Extract dosing information": [[253, "extract-dosing-information"]], "Dose grouping": [[253, "dose-grouping"]], "Time after dose": [[253, "time-after-dose"]], "Concentration parameters": [[253, "concentration-parameters"]], "type": [[253, "type"]], "scale": [[253, "scale"]], "continuous": [[253, "continuous"]], "categories": [[253, "categories"]], "unit": [[253, "unit"]], "drop": [[253, "drop"]], "datatype": [[253, "datatype"]], "descriptor": [[253, "descriptor"]], "datainfo file": [[253, "datainfo-file"]], "translate_nmtran_time": [[188, "translate-nmtran-time"]], "write_model": [[197, "write-model"]], "rank_models": [[204, "rank-models"]], "run_ruvsearch": [[216, "run-ruvsearch"]], "create_results": [[198, "create-results"]], "use_thetas_for_error_stdev": [[195, "use-thetas-for-error-stdev"]], "summarize_individuals": [[219, "summarize-individuals"]], "run_tool": [[217, "run-tool"]], "transform_etas_john_draper": [[186, "transform-etas-john-draper"]], "summarize_individuals_count_table": [[220, "summarize-individuals-count-table"]], "run_allometry": [[209, "run-allometry"]], "predict_outliers": [[202, "predict-outliers"]], "transform_etas_tdist": [[187, "transform-etas-tdist"]], "unfix_parameters": [[191, "unfix-parameters"]], "print_fit_summary": [[203, "print-fit-summary"]], "transform_etas_boxcox": [[185, "transform-etas-boxcox"]], "unfix_parameters_to": [[192, "unfix-parameters-to"]], "run_iovsearch": [[213, "run-iovsearch"]], "update_inits": [[194, "update-inits"]], "run_covsearch": [[211, "run-covsearch"]], "write_csv": [[196, "write-csv"]], "read_modelfit_results": [[205, "read-modelfit-results"]], "retrieve_final_model": [[207, "retrieve-final-model"]], "undrop_columns": [[190, "undrop-columns"]], "predict_influential_outliers": [[201, "predict-influential-outliers"]], "run_amd": [[210, "run-amd"]], "summarize_modelfit_results": [[221, "summarize-modelfit-results"]], "predict_influential_individuals": [[200, "predict-influential-individuals"]], "summarize_errors": [[218, "summarize-errors"]], "update_initial_individual_estimates": [[193, "update-initial-individual-estimates"]], "read_results": [[206, "read-results"]], "fit": [[199, "fit"]], "retrieve_models": [[208, "retrieve-models"]], "run_iivsearch": [[212, "run-iivsearch"]], "run_modelfit": [[214, "run-modelfit"]], "run_modelsearch": [[215, "run-modelsearch"]], "unconstrain_parameters": [[189, "unconstrain-parameters"]], "set_bolus_absorption": [[157, "set-bolus-absorption"]], "set_mixed_mm_fo_elimination": [[169, "set-mixed-mm-fo-elimination"]], "set_upper_bounds": [[178, "set-upper-bounds"]], "remove_loq_data": [[148, "remove-loq-data"]], "set_seq_zo_fo_absorption": [[175, "set-seq-zo-fo-absorption"]], "set_combined_error_model": [[158, "set-combined-error-model"]], "set_michaelis_menten_elimination": [[168, "set-michaelis-menten-elimination"]], "set_first_order_elimination": [[164, "set-first-order-elimination"]], "simplify_expression": [[182, "simplify-expression"]], "set_first_order_absorption": [[163, "set-first-order-absorption"]], "set_name": [[170, "set-name"]], "sample_parameters_from_covariance_matrix": [[154, "sample-parameters-from-covariance-matrix"]], "set_proportional_error_model": [[174, "set-proportional-error-model"]], "set_zero_order_absorption": [[180, "set-zero-order-absorption"]], "split_joint_distribution": [[184, "split-joint-distribution"]], "set_peripheral_compartments": [[172, "set-peripheral-compartments"]], "set_ode_solver": [[171, "set-ode-solver"]], "set_estimation_step": [[161, "set-estimation-step"]], "remove_unused_parameters_and_rvs": [[150, "remove-unused-parameters-and-rvs"]], "set_additive_error_model": [[156, "set-additive-error-model"]], "remove_peripheral_compartment": [[149, "remove-peripheral-compartment"]], "rename_symbols": [[151, "rename-symbols"]], "set_transit_compartments": [[177, "set-transit-compartments"]], "set_initial_estimates": [[166, "set-initial-estimates"]], "sample_parameters_uniformly": [[155, "sample-parameters-uniformly"]], "set_zero_order_elimination": [[181, "set-zero-order-elimination"]], "solve_ode_system": [[183, "solve-ode-system"]], "set_covariates": [[159, "set-covariates"]], "set_time_varying_error_model": [[176, "set-time-varying-error-model"]], "resample_data": [[152, "resample-data"]], "sample_individual_estimates": [[153, "sample-individual-estimates"]], "set_weighted_error_model": [[179, "set-weighted-error-model"]], "set_lower_bounds": [[167, "set-lower-bounds"]], "set_power_on_ruv": [[173, "set-power-on-ruv"]], "set_evaluation_step": [[162, "set-evaluation-step"]], "set_iiv_on_ruv": [[165, "set-iiv-on-ruv"]], "set_dtbs_error_model": [[160, "set-dtbs-error-model"]], "plot_individual_predictions": [[133, "plot-individual-predictions"]], "remove_covariance_step": [[141, "remove-covariance-step"]], "remove_estimation_step": [[144, "remove-estimation-step"]], "load_example_model": [[129, "load-example-model"]], "greekify_model": [[117, "greekify-model"]], "has_covariate_effect": [[120, "has-covariate-effect"]], "mu_reference_model": [[131, "mu-reference-model"]], "has_mixed_mm_fo_elimination": [[123, "has-mixed-mm-fo-elimination"]], "read_dataset_from_datainfo": [[137, "read-dataset-from-datainfo"]], "has_combined_error_model": [[119, "has-combined-error-model"]], "read_model": [[138, "read-model"]], "has_zero_order_elimination": [[127, "has-zero-order-elimination"]], "print_model_code": [[135, "print-model-code"]], "read_model_from_string": [[140, "read-model-from-string"]], "remove_error_model": [[143, "remove-error-model"]], "has_random_effect": [[125, "has-random-effect"]], "has_michaelis_menten_elimination": [[122, "has-michaelis-menten-elimination"]], "get_population_prediction_expression": [[112, "get-population-prediction-expression"]], "get_sigmas": [[114, "get-sigmas"]], "has_zero_order_absorption": [[126, "has-zero-order-absorption"]], "get_rv_parameters": [[113, "get-rv-parameters"]], "has_additive_error_model": [[118, "has-additive-error-model"]], "remove_lag_time": [[147, "remove-lag-time"]], "list_time_varying_covariates": [[128, "list-time-varying-covariates"]], "remove_iiv": [[145, "remove-iiv"]], "remove_covariate_effect": [[142, "remove-covariate-effect"]], "get_unit_of": [[116, "get-unit-of"]], "make_declarative": [[130, "make-declarative"]], "remove_iov": [[146, "remove-iov"]], "get_thetas": [[115, "get-thetas"]], "read_model_from_database": [[139, "read-model-from-database"]], "print_model_symbols": [[136, "print-model-symbols"]], "omit_data": [[132, "omit-data"]], "plot_iofv_vs_iofv": [[134, "plot-iofv-vs-iofv"]], "has_proportional_error_model": [[124, "has-proportional-error-model"]], "has_first_order_elimination": [[121, "has-first-order-elimination"]], "get_pk_parameters": [[111, "get-pk-parameters"]], "evaluate_expression": [[79, "evaluate-expression"]], "evaluate_population_prediction": [[81, "evaluate-population-prediction"]], "get_omegas": [[110, "get-omegas"]], "drop_columns": [[75, "drop-columns"]], "get_number_of_individuals": [[105, "get-number-of-individuals"]], "get_concentration_parameters_from_data": [[93, "get-concentration-parameters-from-data"]], "find_volume_parameters": [[85, "find-volume-parameters"]], "get_number_of_observations_per_individual": [[107, "get-number-of-observations-per-individual"]], "create_symbol": [[74, "create-symbol"]], "drop_dropped_columns": [[76, "drop-dropped-columns"]], "fix_parameters_to": [[88, "fix-parameters-to"]], "get_bioavailability": [[91, "get-bioavailability"]], "get_doseid": [[96, "get-doseid"]], "fix_or_unfix_parameters": [[86, "fix-or-unfix-parameters"]], "evaluate_individual_prediction": [[80, "evaluate-individual-prediction"]], "get_observations": [[109, "get-observations"]], "evaluate_eta_gradient": [[78, "evaluate-eta-gradient"]], "get_ids": [[99, "get-ids"]], "get_baselines": [[90, "get-baselines"]], "get_cmt": [[92, "get-cmt"]], "evaluate_weighted_residuals": [[82, "evaluate-weighted-residuals"]], "get_individual_parameters": [[100, "get-individual-parameters"]], "find_clearance_parameters": [[84, "find-clearance-parameters"]], "get_config_path": [[94, "get-config-path"]], "get_individual_prediction_expression": [[101, "get-individual-prediction-expression"]], "get_doses": [[97, "get-doses"]], "expand_additional_doses": [[83, "expand-additional-doses"]], "get_evid": [[98, "get-evid"]], "get_number_of_observations": [[106, "get-number-of-observations"]], "evaluate_epsilon_gradient": [[77, "evaluate-epsilon-gradient"]], "get_covariate_baselines": [[95, "get-covariate-baselines"]], "get_observation_expression": [[108, "get-observation-expression"]], "generate_model_code": [[89, "generate-model-code"]], "get_mdv": [[103, "get-mdv"]], "get_model_covariates": [[104, "get-model-covariates"]], "get_lag_times": [[102, "get-lag-times"]], "fix_parameters": [[87, "fix-parameters"]], "Modelsearch": [[266, "modelsearch"]], "The search space": [[266, "the-search-space"]], "Common behaviours between algorithms": [[266, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[266, "feature-combination-exclusions"]], "Exhaustive search": [[266, "exhaustive-search"]], "Exhaustive stepwise search": [[266, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[266, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[266, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[266, "the-modelsearch-results"]], "Project suggestions": [[270, "project-suggestions"]], "Resmod": [[271, "resmod"]], "The resmod results": [[271, "the-resmod-results"]], "Resmod models": [[271, "resmod-models"]], "Reading modelfit results": [[264, "reading-modelfit-results"]], "Modelfit results": [[264, "modelfit-results"], [263, "modelfit-results"]], "Final OFV": [[264, "final-ofv"]], "Standard errors of parameter estimates": [[264, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[264, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[264, "correlation-matrix"]], "Information Matrix": [[264, "information-matrix"]], "Indiviudal OFV": [[264, "indiviudal-ofv"]], "Predictions": [[264, "predictions"]], "Residuals": [[264, "residuals"]], "Individual estimates": [[264, "individual-estimates"]], "The Pharmpy model": [[263, "the-pharmpy-model"]], "Reading in a model": [[263, "reading-in-a-model"], [267, "reading-in-a-model"]], "Model name": [[263, "model-name"]], "Writing a model": [[263, "writing-a-model"], [267, "writing-a-model"]], "Getting the model code": [[263, "getting-the-model-code"], [265, "getting-the-model-code"]], "Model parameters": [[263, "model-parameters"]], "Parameter sets": [[263, "parameter-sets"]], "Random variables": [[263, "random-variables"]], "Model statements": [[263, "model-statements"]], "Updating initial estimates": [[263, "updating-initial-estimates"]], "Modeling": [[265, "modeling"]], "Basic modeling": [[265, "basic-modeling"]], "Reading, writing and updating source models": [[265, "reading-writing-and-updating-source-models"]], "Read model from file": [[265, "read-model-from-file"]], "Read model from string": [[265, "read-model-from-string"]], "Write model to file": [[265, "write-model-to-file"]], "Fix and unfix parameters": [[265, "fix-and-unfix-parameters"]], "Add parameter": [[265, "add-parameter"]], "PK models and ODE systems": [[265, "pk-models-and-ode-systems"]], "Absorption rate": [[265, "absorption-rate"]], "Bolus absorption": [[265, "bolus-absorption"]], "Zero order": [[265, "zero-order"]], "First order": [[265, "first-order"]], "Sequential zero-order then first-order": [[265, "sequential-zero-order-then-first-order"]], "Absorption delay": [[265, "absorption-delay"]], "Transit compartments": [[265, "transit-compartments"]], "Lag time": [[265, "lag-time"]], "Elimination rate": [[265, "elimination-rate"]], "First-order elimination": [[265, "first-order-elimination"]], "Zero-order elimination": [[265, "zero-order-elimination"]], "Michaelis-Menten elimination": [[265, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[265, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[265, "add-peripheral-compartment"]], "Remove peripheral compartment": [[265, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[265, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[265, "adding-covariate-effects"]], "Transformation of etas": [[265, "transformation-of-etas"]], "Boxcox": [[265, "boxcox"], [273, "boxcox"]], "Approximate t-distribution": [[265, "approximate-t-distribution"]], "John Draper": [[265, "john-draper"]], "Adding new etas": [[265, "adding-new-etas"]], "Adding IIVs": [[265, "adding-iivs"]], "Adding IOVs": [[265, "adding-iovs"]], "Removing etas": [[265, "removing-etas"]], "Remove IIVs": [[265, "remove-iivs"]], "Remove IOVs": [[265, "remove-iovs"]], "The error model": [[265, "the-error-model"]], "Removing the error model": [[265, "removing-the-error-model"]], "Setting an additive error model": [[265, "setting-an-additive-error-model"]], "Setting a proportional error model": [[265, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[265, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[265, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[265, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[265, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[265, "weighted-error-model"]], "dTBS error model": [[265, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[265, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[265, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[265, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[265, "fitting-a-model"]], "Getting results from a PsN run": [[265, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[265, "eta-shrinkage"]], "Individual parameter calculations": [[265, "individual-parameter-calculations"]], "User guide": [[278, "user-guide"]], "Pharmpy in R": [[279, "pharmpy-in-r"]], "Installing pharmr": [[279, "installing-pharmr"]], "Updating": [[279, "updating"]], "Trouble shooting": [[279, "trouble-shooting"]], "Wrong Python version": [[279, "wrong-python-version"]], "Error importing Pharmpy": [[279, "error-importing-pharmpy"]], "Using pharmr": [[279, "using-pharmr"]], "Gotchas": [[279, "gotchas"]], "The model object": [[279, "the-model-object"]], "List indices": [[279, "list-indices"]], "Dataframes with multiindex": [[279, "dataframes-with-multiindex"]], "Floats and integers": [[279, "floats-and-integers"]], "Single element vectors": [[279, "single-element-vectors"]], "ruvsearch": [[274, "ruvsearch"]], "Models": [[274, "models"]], "The RUVsearch results": [[274, "the-ruvsearch-results"]], "Welcome to Pharmpy": [[259, "welcome-to-pharmpy"]], "Simeval": [[276, "simeval"]], "The simeval results": [[276, "the-simeval-results"]], "Sampled Individual OFVs": [[276, "sampled-individual-ofvs"]], "Individual OFV summary": [[276, "individual-ofv-summary"]], "Individual prediction plot": [[276, "individual-prediction-plot"]], "Using the NONMEM plugin": [[267, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[267, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[267, "new-parameters-and-random-variables"]], "Tools": [[277, "tools"]], "Tools in Pharmpy": [[277, "tools-in-pharmpy"]], "Common options": [[277, "common-options"]], "Common features": [[277, "common-features"]], "Tool database": [[277, "tool-database"]], "Running directory": [[277, "running-directory"]], "Metadata": [[277, "metadata"]], "Datasets": [[277, "datasets"]], "Model feature language (MFL)": [[277, "model-feature-language-mfl"]], "Option types": [[277, "option-types"]], "Model features": [[277, "model-features"]], "Symbols": [[277, "symbols"]], "Describe intervals": [[277, "describe-intervals"]], "Redundant descriptions": [[277, "redundant-descriptions"]], "Examples": [[277, "examples"]], "Distribution of new IOVs": [[260, "distribution-of-new-iovs"]], "QA": [[273, "qa"]], "The qa results": [[273, "the-qa-results"]], "Overview": [[273, "overview"]], "Structural bias": [[273, "structural-bias"]], "Fullblock": [[273, "fullblock"]], "Tdist": [[273, "tdist"]], "Residual error": [[273, "residual-error"]], "PsN with Pharmpy": [[272, "psn-with-pharmpy"]], "Tools connected to PsN": [[272, "tools-connected-to-psn"]], "scm": [[275, "scm"]], "The scm results": [[275, "the-scm-results"]], "Steps": [[275, "steps"]], "OFV Summary": [[275, "ofv-summary"]], "Candidate Summary": [[275, "candidate-summary"]], "Plots in Pharmpy": [[268, "plots-in-pharmpy"]], "Setting themes": [[268, "setting-themes"]], "Changing axis of plots": [[268, "changing-axis-of-plots"]], "Linearize": [[262, "linearize"]], "The linearize results": [[262, "the-linearize-results"]], "OFVs": [[262, "ofvs"]], "Individual OFVs": [[262, "individual-ofvs"]], "License": [[261, "license"]], "Logo": [[261, "logo"]], "Copyright": [[261, "copyright"]], "BSD 2-clause License": [[261, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[261, "gnu-lesser-general-public-license"]], "Plugins": [[269, "plugins"]], "Overview of a plugin": [[269, "overview-of-a-plugin"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "derive() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.derive"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "output_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.output_compartment"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "to_compartmental_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_explicit_system"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "derive() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.derive"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "derive() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.derive"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "derive() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.derive"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "explicitodesystem (class in pharmpy.model)": [[16, "pharmpy.model.ExplicitODESystem"]], "amounts (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.amounts"]], "compartment_names (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.compartment_names"]], "free_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.free_symbols"]], "ics (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.ics"]], "odes (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.odes"]], "rhs_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.rhs_symbols"]], "subs() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.subs"]], "to_compartmental_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_explicit_system"]], "infusion (class in pharmpy.model)": [[17, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[17, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.free_symbols"]], "rate (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.rate"]], "subs() (pharmpy.model.infusion method)": [[17, "pharmpy.model.Infusion.subs"]], "jointnormaldistribution (class in pharmpy.model)": [[18, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[18, "pharmpy.model.JointNormalDistribution.create"]], "derive() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.derive"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.names"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.subs"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[19, "pharmpy.model.Model"]], "copy() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.copy"]], "create_model() (pharmpy.model.model static method)": [[19, "pharmpy.model.Model.create_model"]], "datainfo (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dataset"]], "dependent_variable (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dependent_variable"]], "description (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.initial_individual_estimates"]], "model_code (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parent_model"]], "random_variables (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.random_variables"]], "statements (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.statements"]], "update_datainfo() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.update_datainfo"]], "value_type (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.value_type"]], "modelerror": [[20, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[21, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[22, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[23, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[23, "pharmpy.model.NormalDistribution.create"]], "derive() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.derive"]], "evalf() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.names"]], "subs() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.subs"]], "variance (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[24, "pharmpy.model.ODESystem"]], "to_compartmental_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_explicit_system"]], "parameter (class in pharmpy.model)": [[25, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[25, "pharmpy.model.Parameter.create"]], "derive() (pharmpy.model.parameter method)": [[25, "pharmpy.model.Parameter.derive"]], "fix (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.fix"]], "init (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.name"]], "symbol (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.symbol"]], "upper (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[26, "pharmpy.model.Parameters"]], "fix (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fixed"]], "inits (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.nonfixed"]], "set_fix() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.to_dataframe"]], "upper (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[27, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[27, "pharmpy.model.RandomVariables.create"]], "derive() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.derive"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.free_symbols"]], "get_covariance() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "sample() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.subs"]], "unjoin() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[28, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[28, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[29, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[29, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[30, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.free_symbols"]], "full_expression() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.subs"]], "to_compartmental_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_explicit_system"]], "variabilityhierarchy (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityHierarchy"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.names"]], "variabilitylevel (class in pharmpy.model)": [[32, "pharmpy.model.VariabilityLevel"]], "group (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.reference"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_inf() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_inf"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_inf() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_inf"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_inf_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_inf_from_corrse"]], "calculate_inf_from_cov() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_inf_from_cov"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_inf() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_inf"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.convert_model"]], "copy_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.copy_model"]], "create_joint_distribution() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_joint_distribution"]], "create_report() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_report"]], "create_rng() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_symbol"]], "drop_columns() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.fix_parameters_to"]], "generate_model_code() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.generate_model_code"]], "get_baselines() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_doses"]], "get_evid() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_individual_prediction_expression"]], "get_lag_times() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_mdv"]], "get_model_covariates() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_unit_of"]], "greekify_model() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.has_first_order_elimination"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_random_effect"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_zero_order_elimination"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.plot_iofv_vs_iofv"]], "print_model_code() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.read_model"]], "read_model_from_database() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.read_model_from_database"]], "read_model_from_string() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.set_dtbs_error_model"]], "set_estimation_step() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_estimates() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_time_varying_error_model"]], "set_transit_compartments() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_zero_order_elimination"]], "simplify_expression() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.split_joint_distribution"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.write_model"]], "create_results() (in module pharmpy.tools)": [[198, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[199, "pharmpy.tools.fit"]], "predict_influential_individuals() (in module pharmpy.tools)": [[200, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[201, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[202, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[203, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[204, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[205, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[206, "pharmpy.tools.read_results"]], "retrieve_final_model() (in module pharmpy.tools)": [[207, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[208, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[209, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[210, "pharmpy.tools.run_amd"]], "run_covsearch() (in module pharmpy.tools)": [[211, "pharmpy.tools.run_covsearch"]], "run_iivsearch() (in module pharmpy.tools)": [[212, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[213, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[214, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[215, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[216, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[217, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[218, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[219, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[220, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[221, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[222, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[223, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[223, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[224, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[225, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[225, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[225, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[225, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[226, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[226, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[226, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[226, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[226, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[226, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[226, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[227, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[227, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[228, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[228, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[229, "pharmpy.workflows.NullToolDatabase"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[229, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[229, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[230, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[231, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[231, "pharmpy.workflows.ToolDatabase.model_database"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[231, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[231, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[232, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[233, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[234, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[235, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[236, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[237, "pharmpy.workflows.split_common_options"]], "module": [[238, "module-pharmpy.model"], [239, "module-pharmpy.modeling"], [240, "module-pharmpy.tools"], [241, "module-pharmpy.workflows"]], "pharmpy.model": [[238, "module-pharmpy.model"]], "pharmpy.modeling": [[239, "module-pharmpy.modeling"]], "pharmpy.tools": [[240, "module-pharmpy.tools"]], "pharmpy.workflows": [[241, "module-pharmpy.workflows"]], "--algorithm": [[246, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[246, "cmdoption-pharmpy-run-allometry-allometric_variable"], [246, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--categorical": [[246, "cmdoption-pharmpy-run-amd-categorical"]], "--cl_init": [[246, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[246, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[246, "cmdoption-pharmpy-data-print-columns"]], "--continuous": [[246, "cmdoption-pharmpy-run-amd-continuous"]], "--cutoff": [[246, "cmdoption-pharmpy-run-iivsearch-cutoff"], [246, "cmdoption-pharmpy-run-iovsearch-cutoff"], [246, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--distribution": [[246, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[246, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[246, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [246, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[246, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[246, "cmdoption-pharmpy-model-add_iov-eta_names"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[246, "cmdoption-pharmpy-model-add_iov-etas"], [246, "cmdoption-pharmpy-model-boxcox-etas"], [246, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [246, "cmdoption-pharmpy-model-john_draper-etas"], [246, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[246, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[246, "cmdoption-pharmpy-data-anonymize-f"], [246, "cmdoption-pharmpy-data-append-f"], [246, "cmdoption-pharmpy-data-filter-f"], [246, "cmdoption-pharmpy-data-write-f"], [246, "cmdoption-pharmpy-model-absorption_rate-f"], [246, "cmdoption-pharmpy-model-add_cov_effect-f"], [246, "cmdoption-pharmpy-model-add_iiv-f"], [246, "cmdoption-pharmpy-model-add_iov-f"], [246, "cmdoption-pharmpy-model-boxcox-f"], [246, "cmdoption-pharmpy-model-create_joint_distribution-f"], [246, "cmdoption-pharmpy-model-elimination_rate-f"], [246, "cmdoption-pharmpy-model-error-f"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [246, "cmdoption-pharmpy-model-john_draper-f"], [246, "cmdoption-pharmpy-model-peripheral_compartments-f"], [246, "cmdoption-pharmpy-model-power_on_ruv-f"], [246, "cmdoption-pharmpy-model-remove_iiv-f"], [246, "cmdoption-pharmpy-model-remove_iov-f"], [246, "cmdoption-pharmpy-model-tdist-f"], [246, "cmdoption-pharmpy-model-transit_compartments-f"], [246, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[246, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[246, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[246, "cmdoption-pharmpy-data-anonymize-group"], [246, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[246, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[246, "cmdoption-pharmpy-data-anonymize-h"], [246, "cmdoption-pharmpy-data-append-h"], [246, "cmdoption-pharmpy-data-filter-h"], [246, "cmdoption-pharmpy-data-h"], [246, "cmdoption-pharmpy-data-print-h"], [246, "cmdoption-pharmpy-data-resample-h"], [246, "cmdoption-pharmpy-data-write-h"], [246, "cmdoption-pharmpy-h"], [246, "cmdoption-pharmpy-info-h"], [246, "cmdoption-pharmpy-model-absorption_rate-h"], [246, "cmdoption-pharmpy-model-add_cov_effect-h"], [246, "cmdoption-pharmpy-model-add_iiv-h"], [246, "cmdoption-pharmpy-model-add_iov-h"], [246, "cmdoption-pharmpy-model-boxcox-h"], [246, "cmdoption-pharmpy-model-create_joint_distribution-h"], [246, "cmdoption-pharmpy-model-elimination_rate-h"], [246, "cmdoption-pharmpy-model-error-h"], [246, "cmdoption-pharmpy-model-h"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [246, "cmdoption-pharmpy-model-john_draper-h"], [246, "cmdoption-pharmpy-model-peripheral_compartments-h"], [246, "cmdoption-pharmpy-model-power_on_ruv-h"], [246, "cmdoption-pharmpy-model-print-h"], [246, "cmdoption-pharmpy-model-remove_iiv-h"], [246, "cmdoption-pharmpy-model-remove_iov-h"], [246, "cmdoption-pharmpy-model-sample-h"], [246, "cmdoption-pharmpy-model-tdist-h"], [246, "cmdoption-pharmpy-model-transit_compartments-h"], [246, "cmdoption-pharmpy-model-update_inits-h"], [246, "cmdoption-pharmpy-results-bootstrap-h"], [246, "cmdoption-pharmpy-results-cdd-h"], [246, "cmdoption-pharmpy-results-frem-h"], [246, "cmdoption-pharmpy-results-h"], [246, "cmdoption-pharmpy-results-linearize-h"], [246, "cmdoption-pharmpy-results-ofv-h"], [246, "cmdoption-pharmpy-results-print-h"], [246, "cmdoption-pharmpy-results-qa-h"], [246, "cmdoption-pharmpy-results-report-h"], [246, "cmdoption-pharmpy-results-ruvsearch-h"], [246, "cmdoption-pharmpy-results-scm-h"], [246, "cmdoption-pharmpy-results-simeval-h"], [246, "cmdoption-pharmpy-results-summary-h"], [246, "cmdoption-pharmpy-run-allometry-h"], [246, "cmdoption-pharmpy-run-amd-h"], [246, "cmdoption-pharmpy-run-bootstrap-h"], [246, "cmdoption-pharmpy-run-covsearch-h"], [246, "cmdoption-pharmpy-run-estmethod-h"], [246, "cmdoption-pharmpy-run-execute-h"], [246, "cmdoption-pharmpy-run-h"], [246, "cmdoption-pharmpy-run-iivsearch-h"], [246, "cmdoption-pharmpy-run-iovsearch-h"], [246, "cmdoption-pharmpy-run-modelsearch-h"], [246, "cmdoption-pharmpy-run-ruvsearch-h"]], "--iiv_strategy": [[246, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [246, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[246, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[246, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq": [[246, "cmdoption-pharmpy-run-amd-lloq"]], "--lower_bounds": [[246, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[246, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[246, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[246, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[246, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[246, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[246, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[246, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[246, "cmdoption-pharmpy-model-add_cov_effect-operation"], [246, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[246, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[246, "cmdoption-pharmpy-data-anonymize-o"], [246, "cmdoption-pharmpy-data-append-o"], [246, "cmdoption-pharmpy-data-filter-o"], [246, "cmdoption-pharmpy-data-write-o"], [246, "cmdoption-pharmpy-model-absorption_rate-o"], [246, "cmdoption-pharmpy-model-add_cov_effect-o"], [246, "cmdoption-pharmpy-model-add_iiv-o"], [246, "cmdoption-pharmpy-model-add_iov-o"], [246, "cmdoption-pharmpy-model-boxcox-o"], [246, "cmdoption-pharmpy-model-create_joint_distribution-o"], [246, "cmdoption-pharmpy-model-elimination_rate-o"], [246, "cmdoption-pharmpy-model-error-o"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [246, "cmdoption-pharmpy-model-john_draper-o"], [246, "cmdoption-pharmpy-model-peripheral_compartments-o"], [246, "cmdoption-pharmpy-model-power_on_ruv-o"], [246, "cmdoption-pharmpy-model-remove_iiv-o"], [246, "cmdoption-pharmpy-model-remove_iov-o"], [246, "cmdoption-pharmpy-model-tdist-o"], [246, "cmdoption-pharmpy-model-transit_compartments-o"], [246, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[246, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[246, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[246, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[246, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[246, "cmdoption-pharmpy-run-allometry-path"], [246, "cmdoption-pharmpy-run-amd-path"], [246, "cmdoption-pharmpy-run-covsearch-path"], [246, "cmdoption-pharmpy-run-iivsearch-path"], [246, "cmdoption-pharmpy-run-iovsearch-path"], [246, "cmdoption-pharmpy-run-modelsearch-path"], [246, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[246, "cmdoption-pharmpy-run-iivsearch-rank_type"], [246, "cmdoption-pharmpy-run-iovsearch-rank_type"], [246, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[246, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[246, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[246, "cmdoption-pharmpy-data-resample-resamples"]], "--same_eta": [[246, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[246, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[246, "cmdoption-pharmpy-model-sample-samples"], [246, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[246, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[246, "cmdoption-pharmpy-data-resample-seed"], [246, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[246, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[246, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[246, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[246, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[246, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[246, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[246, "cmdoption-pharmpy-version"]], "-f": [[246, "cmdoption-pharmpy-data-anonymize-f"], [246, "cmdoption-pharmpy-data-append-f"], [246, "cmdoption-pharmpy-data-filter-f"], [246, "cmdoption-pharmpy-data-write-f"], [246, "cmdoption-pharmpy-model-absorption_rate-f"], [246, "cmdoption-pharmpy-model-add_cov_effect-f"], [246, "cmdoption-pharmpy-model-add_iiv-f"], [246, "cmdoption-pharmpy-model-add_iov-f"], [246, "cmdoption-pharmpy-model-boxcox-f"], [246, "cmdoption-pharmpy-model-create_joint_distribution-f"], [246, "cmdoption-pharmpy-model-elimination_rate-f"], [246, "cmdoption-pharmpy-model-error-f"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [246, "cmdoption-pharmpy-model-john_draper-f"], [246, "cmdoption-pharmpy-model-peripheral_compartments-f"], [246, "cmdoption-pharmpy-model-power_on_ruv-f"], [246, "cmdoption-pharmpy-model-remove_iiv-f"], [246, "cmdoption-pharmpy-model-remove_iov-f"], [246, "cmdoption-pharmpy-model-tdist-f"], [246, "cmdoption-pharmpy-model-transit_compartments-f"], [246, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[246, "cmdoption-pharmpy-data-anonymize-h"], [246, "cmdoption-pharmpy-data-append-h"], [246, "cmdoption-pharmpy-data-filter-h"], [246, "cmdoption-pharmpy-data-h"], [246, "cmdoption-pharmpy-data-print-h"], [246, "cmdoption-pharmpy-data-resample-h"], [246, "cmdoption-pharmpy-data-write-h"], [246, "cmdoption-pharmpy-h"], [246, "cmdoption-pharmpy-info-h"], [246, "cmdoption-pharmpy-model-absorption_rate-h"], [246, "cmdoption-pharmpy-model-add_cov_effect-h"], [246, "cmdoption-pharmpy-model-add_iiv-h"], [246, "cmdoption-pharmpy-model-add_iov-h"], [246, "cmdoption-pharmpy-model-boxcox-h"], [246, "cmdoption-pharmpy-model-create_joint_distribution-h"], [246, "cmdoption-pharmpy-model-elimination_rate-h"], [246, "cmdoption-pharmpy-model-error-h"], [246, "cmdoption-pharmpy-model-h"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [246, "cmdoption-pharmpy-model-john_draper-h"], [246, "cmdoption-pharmpy-model-peripheral_compartments-h"], [246, "cmdoption-pharmpy-model-power_on_ruv-h"], [246, "cmdoption-pharmpy-model-print-h"], [246, "cmdoption-pharmpy-model-remove_iiv-h"], [246, "cmdoption-pharmpy-model-remove_iov-h"], [246, "cmdoption-pharmpy-model-sample-h"], [246, "cmdoption-pharmpy-model-tdist-h"], [246, "cmdoption-pharmpy-model-transit_compartments-h"], [246, "cmdoption-pharmpy-model-update_inits-h"], [246, "cmdoption-pharmpy-results-bootstrap-h"], [246, "cmdoption-pharmpy-results-cdd-h"], [246, "cmdoption-pharmpy-results-frem-h"], [246, "cmdoption-pharmpy-results-h"], [246, "cmdoption-pharmpy-results-linearize-h"], [246, "cmdoption-pharmpy-results-ofv-h"], [246, "cmdoption-pharmpy-results-print-h"], [246, "cmdoption-pharmpy-results-qa-h"], [246, "cmdoption-pharmpy-results-report-h"], [246, "cmdoption-pharmpy-results-ruvsearch-h"], [246, "cmdoption-pharmpy-results-scm-h"], [246, "cmdoption-pharmpy-results-simeval-h"], [246, "cmdoption-pharmpy-results-summary-h"], [246, "cmdoption-pharmpy-run-allometry-h"], [246, "cmdoption-pharmpy-run-amd-h"], [246, "cmdoption-pharmpy-run-bootstrap-h"], [246, "cmdoption-pharmpy-run-covsearch-h"], [246, "cmdoption-pharmpy-run-estmethod-h"], [246, "cmdoption-pharmpy-run-execute-h"], [246, "cmdoption-pharmpy-run-h"], [246, "cmdoption-pharmpy-run-iivsearch-h"], [246, "cmdoption-pharmpy-run-iovsearch-h"], [246, "cmdoption-pharmpy-run-modelsearch-h"], [246, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[246, "cmdoption-pharmpy-data-anonymize-o"], [246, "cmdoption-pharmpy-data-append-o"], [246, "cmdoption-pharmpy-data-filter-o"], [246, "cmdoption-pharmpy-data-write-o"], [246, "cmdoption-pharmpy-model-absorption_rate-o"], [246, "cmdoption-pharmpy-model-add_cov_effect-o"], [246, "cmdoption-pharmpy-model-add_iiv-o"], [246, "cmdoption-pharmpy-model-add_iov-o"], [246, "cmdoption-pharmpy-model-boxcox-o"], [246, "cmdoption-pharmpy-model-create_joint_distribution-o"], [246, "cmdoption-pharmpy-model-elimination_rate-o"], [246, "cmdoption-pharmpy-model-error-o"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [246, "cmdoption-pharmpy-model-john_draper-o"], [246, "cmdoption-pharmpy-model-peripheral_compartments-o"], [246, "cmdoption-pharmpy-model-power_on_ruv-o"], [246, "cmdoption-pharmpy-model-remove_iiv-o"], [246, "cmdoption-pharmpy-model-remove_iov-o"], [246, "cmdoption-pharmpy-model-tdist-o"], [246, "cmdoption-pharmpy-model-transit_compartments-o"], [246, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[246, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [246, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[246, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[246, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[246, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[246, "cmdoption-pharmpy-data-append-arg-expression"], [246, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[246, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[246, "cmdoption-pharmpy-data-anonymize-arg-file"], [246, "cmdoption-pharmpy-data-append-arg-file"], [246, "cmdoption-pharmpy-data-filter-arg-file"], [246, "cmdoption-pharmpy-data-print-arg-file"], [246, "cmdoption-pharmpy-data-resample-arg-file"], [246, "cmdoption-pharmpy-data-write-arg-file"], [246, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [246, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [246, "cmdoption-pharmpy-model-add_iiv-arg-file"], [246, "cmdoption-pharmpy-model-add_iov-arg-file"], [246, "cmdoption-pharmpy-model-boxcox-arg-file"], [246, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [246, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [246, "cmdoption-pharmpy-model-error-arg-file"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [246, "cmdoption-pharmpy-model-john_draper-arg-file"], [246, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [246, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [246, "cmdoption-pharmpy-model-print-arg-file"], [246, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [246, "cmdoption-pharmpy-model-remove_iov-arg-file"], [246, "cmdoption-pharmpy-model-sample-arg-file"], [246, "cmdoption-pharmpy-model-tdist-arg-file"], [246, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [246, "cmdoption-pharmpy-model-update_inits-arg-file"], [246, "cmdoption-pharmpy-results-ofv-arg-file"], [246, "cmdoption-pharmpy-results-print-arg-file"], [246, "cmdoption-pharmpy-results-summary-arg-file"], [246, "cmdoption-pharmpy-run-allometry-arg-file"], [246, "cmdoption-pharmpy-run-bootstrap-arg-file"], [246, "cmdoption-pharmpy-run-covsearch-arg-file"], [246, "cmdoption-pharmpy-run-estmethod-arg-file"], [246, "cmdoption-pharmpy-run-execute-arg-file"], [246, "cmdoption-pharmpy-run-iivsearch-arg-file"], [246, "cmdoption-pharmpy-run-iovsearch-arg-file"], [246, "cmdoption-pharmpy-run-modelsearch-arg-file"], [246, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[246, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[246, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[246, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [246, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[246, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[246, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [246, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[246, "cmdoption-pharmpy-h"], [246, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[246, "cmdoption-pharmpy-data-h"]], "pharmpy-data-anonymize command line option": [[246, "cmdoption-pharmpy-data-anonymize-arg-file"], [246, "cmdoption-pharmpy-data-anonymize-f"], [246, "cmdoption-pharmpy-data-anonymize-group"], [246, "cmdoption-pharmpy-data-anonymize-h"], [246, "cmdoption-pharmpy-data-anonymize-o"]], "pharmpy-data-append command line option": [[246, "cmdoption-pharmpy-data-append-arg-expression"], [246, "cmdoption-pharmpy-data-append-arg-file"], [246, "cmdoption-pharmpy-data-append-f"], [246, "cmdoption-pharmpy-data-append-h"], [246, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-filter command line option": [[246, "cmdoption-pharmpy-data-filter-arg-expressions"], [246, "cmdoption-pharmpy-data-filter-arg-file"], [246, "cmdoption-pharmpy-data-filter-f"], [246, "cmdoption-pharmpy-data-filter-h"], [246, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[246, "cmdoption-pharmpy-data-print-arg-file"], [246, "cmdoption-pharmpy-data-print-columns"], [246, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[246, "cmdoption-pharmpy-data-resample-arg-file"], [246, "cmdoption-pharmpy-data-resample-group"], [246, "cmdoption-pharmpy-data-resample-h"], [246, "cmdoption-pharmpy-data-resample-replace"], [246, "cmdoption-pharmpy-data-resample-resamples"], [246, "cmdoption-pharmpy-data-resample-sample_size"], [246, "cmdoption-pharmpy-data-resample-seed"], [246, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[246, "cmdoption-pharmpy-data-write-arg-file"], [246, "cmdoption-pharmpy-data-write-f"], [246, "cmdoption-pharmpy-data-write-h"], [246, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[246, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[246, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[246, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [246, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [246, "cmdoption-pharmpy-model-absorption_rate-f"], [246, "cmdoption-pharmpy-model-absorption_rate-h"], [246, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[246, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [246, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [246, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [246, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [246, "cmdoption-pharmpy-model-add_cov_effect-f"], [246, "cmdoption-pharmpy-model-add_cov_effect-h"], [246, "cmdoption-pharmpy-model-add_cov_effect-o"], [246, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[246, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [246, "cmdoption-pharmpy-model-add_iiv-arg-file"], [246, "cmdoption-pharmpy-model-add_iiv-arg-param"], [246, "cmdoption-pharmpy-model-add_iiv-eta_name"], [246, "cmdoption-pharmpy-model-add_iiv-f"], [246, "cmdoption-pharmpy-model-add_iiv-h"], [246, "cmdoption-pharmpy-model-add_iiv-o"], [246, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[246, "cmdoption-pharmpy-model-add_iov-arg-file"], [246, "cmdoption-pharmpy-model-add_iov-arg-occ"], [246, "cmdoption-pharmpy-model-add_iov-eta_names"], [246, "cmdoption-pharmpy-model-add_iov-etas"], [246, "cmdoption-pharmpy-model-add_iov-f"], [246, "cmdoption-pharmpy-model-add_iov-h"], [246, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[246, "cmdoption-pharmpy-model-boxcox-arg-file"], [246, "cmdoption-pharmpy-model-boxcox-etas"], [246, "cmdoption-pharmpy-model-boxcox-f"], [246, "cmdoption-pharmpy-model-boxcox-h"], [246, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[246, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [246, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [246, "cmdoption-pharmpy-model-create_joint_distribution-f"], [246, "cmdoption-pharmpy-model-create_joint_distribution-h"], [246, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[246, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [246, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [246, "cmdoption-pharmpy-model-elimination_rate-f"], [246, "cmdoption-pharmpy-model-elimination_rate-h"], [246, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[246, "cmdoption-pharmpy-model-error-arg-error_type"], [246, "cmdoption-pharmpy-model-error-arg-file"], [246, "cmdoption-pharmpy-model-error-f"], [246, "cmdoption-pharmpy-model-error-h"], [246, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[246, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [246, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[246, "cmdoption-pharmpy-model-john_draper-arg-file"], [246, "cmdoption-pharmpy-model-john_draper-etas"], [246, "cmdoption-pharmpy-model-john_draper-f"], [246, "cmdoption-pharmpy-model-john_draper-h"], [246, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[246, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [246, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [246, "cmdoption-pharmpy-model-peripheral_compartments-f"], [246, "cmdoption-pharmpy-model-peripheral_compartments-h"], [246, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[246, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [246, "cmdoption-pharmpy-model-power_on_ruv-eps"], [246, "cmdoption-pharmpy-model-power_on_ruv-f"], [246, "cmdoption-pharmpy-model-power_on_ruv-h"], [246, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[246, "cmdoption-pharmpy-model-print-arg-file"], [246, "cmdoption-pharmpy-model-print-explicit-odes"], [246, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[246, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [246, "cmdoption-pharmpy-model-remove_iiv-f"], [246, "cmdoption-pharmpy-model-remove_iiv-h"], [246, "cmdoption-pharmpy-model-remove_iiv-o"], [246, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[246, "cmdoption-pharmpy-model-remove_iov-arg-file"], [246, "cmdoption-pharmpy-model-remove_iov-f"], [246, "cmdoption-pharmpy-model-remove_iov-h"], [246, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[246, "cmdoption-pharmpy-model-sample-arg-file"], [246, "cmdoption-pharmpy-model-sample-h"], [246, "cmdoption-pharmpy-model-sample-samples"], [246, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[246, "cmdoption-pharmpy-model-tdist-arg-file"], [246, "cmdoption-pharmpy-model-tdist-etas"], [246, "cmdoption-pharmpy-model-tdist-f"], [246, "cmdoption-pharmpy-model-tdist-h"], [246, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[246, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [246, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [246, "cmdoption-pharmpy-model-transit_compartments-f"], [246, "cmdoption-pharmpy-model-transit_compartments-h"], [246, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[246, "cmdoption-pharmpy-model-update_inits-arg-file"], [246, "cmdoption-pharmpy-model-update_inits-f"], [246, "cmdoption-pharmpy-model-update_inits-h"], [246, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[246, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[246, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [246, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[246, "cmdoption-pharmpy-results-cdd-arg-psn"], [246, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[246, "cmdoption-pharmpy-results-frem-arg-psn"], [246, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [246, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [246, "cmdoption-pharmpy-results-frem-h"], [246, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[246, "cmdoption-pharmpy-results-linearize-arg-psn"], [246, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[246, "cmdoption-pharmpy-results-ofv-arg-file"], [246, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[246, "cmdoption-pharmpy-results-print-arg-file"], [246, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[246, "cmdoption-pharmpy-results-qa-arg-psn"], [246, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[246, "cmdoption-pharmpy-results-report-arg-psn"], [246, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[246, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [246, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[246, "cmdoption-pharmpy-results-scm-arg-psn"], [246, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[246, "cmdoption-pharmpy-results-simeval-arg-psn"], [246, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[246, "cmdoption-pharmpy-results-summary-arg-file"], [246, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[246, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[246, "cmdoption-pharmpy-run-allometry-allometric_variable"], [246, "cmdoption-pharmpy-run-allometry-arg-file"], [246, "cmdoption-pharmpy-run-allometry-h"], [246, "cmdoption-pharmpy-run-allometry-initials"], [246, "cmdoption-pharmpy-run-allometry-lower_bounds"], [246, "cmdoption-pharmpy-run-allometry-non_fixed"], [246, "cmdoption-pharmpy-run-allometry-parameters"], [246, "cmdoption-pharmpy-run-allometry-path"], [246, "cmdoption-pharmpy-run-allometry-reference_value"], [246, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[246, "cmdoption-pharmpy-run-amd-allometric_variable"], [246, "cmdoption-pharmpy-run-amd-arg-input_path"], [246, "cmdoption-pharmpy-run-amd-categorical"], [246, "cmdoption-pharmpy-run-amd-cl_init"], [246, "cmdoption-pharmpy-run-amd-continuous"], [246, "cmdoption-pharmpy-run-amd-h"], [246, "cmdoption-pharmpy-run-amd-lloq"], [246, "cmdoption-pharmpy-run-amd-mat_init"], [246, "cmdoption-pharmpy-run-amd-modeltype"], [246, "cmdoption-pharmpy-run-amd-occasion"], [246, "cmdoption-pharmpy-run-amd-order"], [246, "cmdoption-pharmpy-run-amd-path"], [246, "cmdoption-pharmpy-run-amd-search_space"], [246, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[246, "cmdoption-pharmpy-run-bootstrap-arg-file"], [246, "cmdoption-pharmpy-run-bootstrap-h"], [246, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[246, "cmdoption-pharmpy-run-covsearch-algorithm"], [246, "cmdoption-pharmpy-run-covsearch-arg-file"], [246, "cmdoption-pharmpy-run-covsearch-effects"], [246, "cmdoption-pharmpy-run-covsearch-h"], [246, "cmdoption-pharmpy-run-covsearch-max_steps"], [246, "cmdoption-pharmpy-run-covsearch-p_backward"], [246, "cmdoption-pharmpy-run-covsearch-p_forward"], [246, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[246, "cmdoption-pharmpy-run-estmethod-arg-file"], [246, "cmdoption-pharmpy-run-estmethod-h"], [246, "cmdoption-pharmpy-run-estmethod-methods"], [246, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[246, "cmdoption-pharmpy-run-execute-arg-file"], [246, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[246, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [246, "cmdoption-pharmpy-run-iivsearch-arg-file"], [246, "cmdoption-pharmpy-run-iivsearch-cutoff"], [246, "cmdoption-pharmpy-run-iivsearch-h"], [246, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [246, "cmdoption-pharmpy-run-iivsearch-path"], [246, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[246, "cmdoption-pharmpy-run-iovsearch-arg-file"], [246, "cmdoption-pharmpy-run-iovsearch-column"], [246, "cmdoption-pharmpy-run-iovsearch-cutoff"], [246, "cmdoption-pharmpy-run-iovsearch-distribution"], [246, "cmdoption-pharmpy-run-iovsearch-h"], [246, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [246, "cmdoption-pharmpy-run-iovsearch-path"], [246, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[246, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [246, "cmdoption-pharmpy-run-modelsearch-arg-file"], [246, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [246, "cmdoption-pharmpy-run-modelsearch-cutoff"], [246, "cmdoption-pharmpy-run-modelsearch-h"], [246, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [246, "cmdoption-pharmpy-run-modelsearch-path"], [246, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[246, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [246, "cmdoption-pharmpy-run-ruvsearch-groups"], [246, "cmdoption-pharmpy-run-ruvsearch-h"], [246, "cmdoption-pharmpy-run-ruvsearch-p_value"], [246, "cmdoption-pharmpy-run-ruvsearch-path"], [246, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[246, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [246, "cmdoption-pharmpy-results-cdd-arg-psn"], [246, "cmdoption-pharmpy-results-frem-arg-psn"], [246, "cmdoption-pharmpy-results-linearize-arg-psn"], [246, "cmdoption-pharmpy-results-qa-arg-psn"], [246, "cmdoption-pharmpy-results-report-arg-psn"], [246, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [246, "cmdoption-pharmpy-results-scm-arg-psn"], [246, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[246, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [246, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})