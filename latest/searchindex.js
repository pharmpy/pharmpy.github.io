Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_covariance_step", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_proportional_error_model", "has_random_effect", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 26, 29, 31, 57, 58, 72, 77, 81, 82, 83, 84, 86, 87, 88, 89, 95, 98, 105, 108, 114, 115, 116, 117, 123, 127, 133, 136, 137, 143, 163, 176, 178, 198, 210, 216, 223, 248, 254, 258, 262, 263, 264, 279, 280, 282, 283, 284, 285, 287, 289, 290, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 310, 311, 312, 314, 315, 316], "section": [0, 284, 287, 298, 300, 310, 314], "i": [0, 1, 2, 6, 8, 9, 18, 24, 25, 26, 27, 29, 31, 33, 34, 37, 39, 40, 42, 43, 45, 46, 50, 52, 59, 60, 69, 71, 72, 73, 76, 77, 79, 81, 83, 84, 86, 87, 88, 95, 96, 98, 101, 104, 105, 109, 113, 114, 115, 116, 129, 130, 131, 134, 135, 139, 144, 145, 147, 150, 151, 165, 166, 172, 173, 174, 176, 177, 181, 182, 183, 184, 185, 187, 188, 192, 193, 197, 198, 200, 201, 203, 206, 207, 208, 211, 213, 214, 215, 221, 223, 225, 226, 231, 233, 235, 241, 242, 246, 247, 248, 249, 250, 251, 256, 258, 262, 263, 264, 269, 278, 279, 280, 282, 283, 284, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 316], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 233, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 295, 298, 302, 306, 307, 311, 314], "The": [0, 2, 3, 6, 8, 9, 10, 18, 24, 25, 26, 29, 34, 37, 42, 44, 45, 60, 68, 76, 79, 83, 84, 85, 86, 87, 88, 107, 122, 127, 130, 131, 139, 140, 141, 157, 172, 176, 178, 188, 190, 198, 208, 212, 227, 238, 244, 245, 250, 251, 254, 280, 283, 285, 287, 289, 294, 297, 298, 301, 302, 304, 306, 307, 314, 315, 316], "inform": [0, 1, 2, 6, 8, 127, 212, 280, 282, 287, 289, 290, 292, 295, 296, 297, 298, 300, 303, 307, 311, 312, 314, 315], "intend": [0, 298, 300, 314], "non": [0, 25, 71, 76, 85, 98, 211, 280, 289, 290, 293, 298, 300, 302, 307, 314], "hard": [0, 307], "find": [0, 8, 29, 50, 90, 91, 127, 240, 256, 280, 296, 298, 315, 316], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 285, 287, 289, 292, 294, 295, 297, 298, 300, 301, 302, 303, 311], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 286, 287, 288, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 307, 308, 310, 311, 312, 313, 315], "develop": [0, 242, 280, 298, 306, 307, 314, 316], "remov": [0, 2, 9, 26, 29, 81, 114, 115, 116, 147, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 188, 191, 204, 217, 219, 221, 242, 279, 280, 282, 287, 290, 295, 297, 298, 304], "row": [0, 1, 2, 25, 83, 84, 96, 99, 101, 147, 173, 174, 199, 255, 278, 280, 282, 287, 289, 293, 295, 297, 301, 302, 303, 311, 312], "split": [0, 76, 211, 273, 280, 282, 300, 314], "drop": [0, 2, 6, 18, 81, 82, 218, 280, 303, 307, 312], "column": [0, 1, 2, 6, 8, 10, 18, 25, 31, 33, 42, 48, 60, 79, 81, 82, 83, 84, 85, 89, 95, 98, 99, 101, 105, 147, 151, 152, 156, 168, 172, 173, 179, 182, 190, 199, 201, 212, 216, 218, 231, 232, 233, 242, 247, 254, 255, 278, 280, 282, 287, 289, 293, 295, 297, 300, 301, 302, 303, 311, 312, 314], "error": [0, 2, 11, 19, 20, 24, 26, 29, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 125, 130, 131, 139, 141, 155, 163, 176, 178, 197, 198, 201, 205, 212, 224, 235, 250, 253, 256, 261, 278, 280, 287, 292, 295, 297, 303, 304, 311, 312, 314], "handl": [0, 2, 3, 89, 210, 212, 280, 289, 290, 293, 307], "valid": [0, 26, 38, 104, 180, 280, 298], "some": [0, 8, 10, 63, 76, 163, 176, 212, 260, 278, 280, 282, 285, 287, 289, 298, 299, 302, 303, 306, 307, 311, 314], "rule": [0, 69, 298], "These": [0, 285, 290, 293, 298, 299, 302, 306, 307, 314], "were": [0, 26, 29, 253, 278, 279, 280, 289, 292, 293, 298, 301, 303, 314, 316], "test": [0, 2, 132, 145, 244, 245, 247, 249, 250, 280, 282, 286, 287, 289, 292, 294, 295, 297, 301, 303, 307, 311], "7": [0, 1, 2, 37, 53, 55, 56, 61, 65, 66, 84, 96, 101, 116, 118, 147, 199, 233, 278, 279, 287, 289, 293, 295, 297, 298, 299, 301, 302, 303, 308, 310, 311, 312, 313], "4": [0, 1, 2, 6, 53, 55, 56, 61, 65, 66, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 116, 147, 199, 215, 233, 250, 256, 278, 279, 287, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 308, 310, 311, 312, 313], "3": [0, 1, 2, 6, 29, 53, 54, 55, 56, 61, 64, 65, 66, 67, 70, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 103, 106, 116, 118, 147, 155, 169, 173, 174, 175, 199, 203, 212, 213, 214, 215, 231, 232, 233, 250, 255, 278, 279, 287, 288, 289, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 310, 311, 312, 313, 314, 316], "delimet": 0, "between": [0, 8, 9, 26, 33, 76, 95, 212, 254, 269, 278, 279, 280, 282, 292, 293, 297, 298, 304, 307, 310, 311], "comma": [0, 282, 314], "space": [0, 68, 242, 249, 280, 282, 314], "tab": [0, 155, 280, 302, 305], "befor": [0, 2, 29, 174, 175, 222, 280, 282, 299, 303], "after": [0, 6, 29, 114, 115, 116, 201, 240, 253, 256, 260, 279, 280, 282, 288, 289, 293, 298, 299, 300, 303, 307, 308, 310, 312, 313, 316], "ar": [0, 2, 3, 4, 6, 7, 8, 25, 26, 29, 38, 39, 40, 42, 46, 60, 74, 76, 79, 98, 99, 113, 130, 131, 139, 148, 165, 166, 168, 170, 178, 180, 183, 184, 197, 202, 211, 212, 216, 223, 230, 235, 244, 246, 248, 249, 258, 260, 278, 280, 282, 283, 285, 287, 289, 290, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 312, 314, 316], "give": [0, 25, 113, 150, 175, 197, 258, 262, 263, 278, 280, 282, 293, 297, 298, 300, 312], "sic": 0, "begin": [0, 293, 300, 302], "end": [0, 39, 50, 293, 298, 300, 302, 314], "insert": [0, 268, 280], "each": [0, 2, 6, 8, 26, 34, 37, 59, 60, 61, 83, 84, 85, 86, 87, 88, 96, 101, 102, 116, 149, 152, 153, 168, 172, 175, 185, 187, 197, 199, 260, 278, 279, 282, 284, 287, 289, 290, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 310, 311, 312, 313, 314, 316], "can": [0, 1, 2, 6, 10, 18, 25, 26, 29, 35, 52, 60, 68, 77, 85, 127, 172, 210, 212, 240, 245, 248, 260, 263, 264, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 310, 311, 314, 315, 316], "onli": [0, 2, 3, 8, 10, 14, 26, 37, 57, 58, 69, 72, 81, 83, 84, 86, 87, 88, 104, 108, 117, 123, 130, 131, 139, 149, 172, 176, 178, 185, 187, 197, 198, 199, 201, 210, 212, 222, 248, 250, 251, 256, 269, 280, 282, 283, 287, 297, 298, 300, 303, 306, 314], "numer": [0, 6, 14, 30, 83, 84, 86, 87, 278, 280, 289, 307], "e": [0, 6, 18, 26, 38, 72, 78, 114, 115, 116, 150, 166, 180, 181, 249, 278, 280, 285, 289, 292, 293, 295, 297, 298, 300, 302, 303, 304, 307, 311, 314], "other": [0, 7, 9, 18, 26, 29, 44, 73, 153, 248, 268, 273, 278, 280, 283, 285, 290, 295, 298, 307], "charact": [0, 10, 289], "than": [0, 24, 25, 280, 295, 298, 303], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 26, 37, 235, 242, 258, 259, 262, 263, 272, 280, 282, 287, 298, 300, 303, 307, 314], "except": [0, 11, 12, 19, 20, 21, 40, 60, 172, 280, 298], "ii": [0, 6], "datx": [0, 280], "fortran": 0, "short": [0, 285, 298], "form": [0, 23, 26, 172, 280, 298], "exponenti": [0, 37, 40, 46, 187, 282, 287, 293], "notat": 0, "2": [0, 1, 2, 6, 18, 29, 34, 37, 39, 43, 45, 47, 49, 51, 53, 54, 55, 56, 61, 64, 65, 66, 67, 71, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 106, 116, 118, 147, 155, 169, 173, 174, 175, 176, 178, 185, 189, 192, 193, 196, 198, 199, 200, 203, 206, 214, 215, 233, 241, 250, 254, 278, 279, 282, 285, 287, 288, 289, 292, 293, 295, 297, 299, 300, 301, 302, 303, 304, 308, 310, 311, 312, 313, 314], "1": [0, 1, 2, 5, 6, 7, 8, 16, 17, 18, 22, 25, 26, 29, 34, 35, 37, 39, 44, 45, 47, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 72, 74, 79, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 103, 104, 106, 116, 118, 126, 129, 147, 148, 149, 150, 151, 155, 159, 169, 172, 173, 174, 175, 177, 184, 185, 186, 187, 192, 193, 196, 197, 199, 200, 201, 203, 206, 207, 210, 212, 213, 214, 215, 223, 233, 241, 242, 243, 244, 249, 250, 251, 254, 278, 279, 282, 284, 285, 287, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 312, 313, 314, 316], "mean": [0, 2, 13, 17, 18, 22, 60, 63, 74, 150, 173, 174, 242, 258, 262, 278, 279, 280, 282, 293, 295, 298, 300, 301, 302, 303, 307, 310, 313, 314], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 24, 25, 26, 29, 31, 60, 62, 63, 68, 79, 80, 85, 90, 91, 107, 113, 119, 120, 121, 122, 124, 125, 126, 127, 151, 152, 157, 172, 173, 174, 176, 178, 189, 191, 198, 201, 204, 239, 248, 250, 253, 256, 258, 262, 263, 269, 278, 279, 281, 282, 285, 286, 287, 289, 290, 295, 297, 298, 299, 300, 302, 303, 306, 307, 311, 312, 314], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 80, 259, 261, 273, 298, 302], "instead": [0, 9, 69, 85, 113, 258, 279, 280, 282, 289, 290, 292, 293, 298, 307], "lone": 0, "an": [0, 4, 6, 8, 9, 10, 15, 16, 18, 25, 26, 29, 32, 33, 34, 38, 41, 42, 49, 68, 95, 98, 102, 105, 130, 131, 132, 134, 135, 138, 139, 141, 145, 148, 150, 162, 172, 176, 180, 188, 214, 227, 230, 231, 232, 233, 253, 254, 256, 259, 261, 280, 282, 284, 285, 287, 289, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 307, 310, 312, 313, 314, 316], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 24, 25, 26, 27, 29, 34, 36, 37, 38, 39, 40, 45, 46, 47, 49, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 99, 101, 102, 103, 109, 118, 119, 125, 126, 128, 129, 147, 148, 149, 150, 155, 159, 161, 164, 168, 169, 173, 174, 175, 178, 180, 181, 183, 184, 187, 188, 189, 190, 191, 197, 198, 199, 201, 204, 211, 212, 213, 214, 217, 220, 223, 230, 232, 233, 241, 242, 244, 250, 251, 255, 256, 278, 279, 282, 285, 287, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 312, 313, 314, 316], "dot": 0, "most": [0, 6, 37, 210, 282, 290, 298, 310], "24": [0, 2, 61, 96, 101, 103, 116, 118, 147, 199, 233, 278, 279, 287, 289, 292, 295, 297, 299, 301, 302, 303, 310, 311, 313], "long": [0, 280, 298, 307], "count": [0, 102, 255, 262, 280, 303], "delimit": 0, "wa": [0, 27, 254, 278, 280, 286, 298, 299, 311, 312], "eaten": 0, "empti": [0, 18, 26, 253, 284], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 26, 27, 29, 33, 35, 43, 50, 69, 76, 81, 92, 93, 94, 95, 109, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 217, 219, 220, 222, 223, 280, 282, 283, 284, 289, 292, 294, 295, 296, 297, 300, 301, 302, 303, 304, 314, 316], "As": [0, 26, 283, 302, 304, 314], "contain": [0, 2, 3, 26, 79, 85, 231, 232, 233, 278, 279, 282, 287, 288, 289, 290, 292, 295, 297, 298, 300, 301, 303, 308, 310, 311, 312, 313, 314], "drope": 0, "input": [0, 7, 8, 9, 10, 26, 29, 37, 38, 40, 42, 66, 67, 77, 82, 128, 132, 140, 155, 159, 174, 187, 208, 242, 254, 265, 268, 280, 282, 287, 289, 292, 295, 297, 302, 303, 304, 307, 311], "ani": [0, 2, 6, 9, 18, 49, 60, 71, 170, 240, 245, 255, 265, 269, 285, 289, 294, 295, 297, 298, 300, 301, 302, 304, 307, 314, 316], "limit": [0, 2, 6, 70, 168, 190, 197, 212, 242, 280, 282, 297, 298, 305], "length": [0, 85, 86, 87, 88, 102, 103, 118, 280, 302], "If": [0, 2, 10, 18, 29, 35, 37, 50, 60, 75, 76, 77, 85, 95, 98, 102, 104, 105, 165, 166, 172, 174, 185, 187, 188, 197, 208, 211, 213, 214, 215, 216, 223, 235, 242, 246, 249, 256, 268, 278, 282, 285, 287, 289, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 314, 316], "ha": [0, 2, 8, 18, 26, 76, 85, 96, 101, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 278, 280, 282, 283, 285, 287, 289, 290, 292, 295, 297, 298, 300, 302, 303, 309, 311, 312, 314, 316], "more": [0, 2, 8, 25, 241, 244, 246, 247, 249, 250, 251, 280, 282, 287, 292, 294, 296, 298, 300, 302, 303, 307, 310, 314, 315], "extra": [0, 18, 280], "consid": [0, 2, 98, 246, 247, 249, 280, 287, 290, 292, 295, 297, 298, 303, 311], "start": [0, 2, 8, 39, 49, 102, 151, 164, 172, 246, 251, 280, 282, 285, 287, 292, 293, 297, 298, 300, 301, 302, 303, 311, 312, 314, 316], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 269, 278, 280, 282, 283, 285, 287, 290, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 307, 311, 313, 314, 315, 316], "been": [0, 2, 6, 144, 283, 287, 289, 298, 302, 314, 316], "provid": [0, 26, 174, 197, 282, 283, 286, 287, 289, 295, 297, 298, 303, 316], "default": [0, 1, 2, 6, 7, 9, 18, 24, 26, 31, 34, 37, 39, 40, 46, 50, 52, 59, 76, 77, 81, 104, 107, 109, 113, 120, 122, 129, 130, 131, 139, 140, 165, 166, 172, 173, 174, 176, 178, 183, 184, 187, 188, 197, 198, 201, 211, 213, 214, 215, 225, 226, 229, 235, 241, 246, 247, 249, 251, 256, 258, 262, 263, 272, 277, 280, 282, 284, 287, 295, 297, 300, 302, 303, 304, 305, 311, 316], "where": [0, 2, 7, 34, 45, 240, 278, 279, 280, 283, 284, 287, 289, 292, 293, 297, 298, 302, 303, 304, 307, 314, 316], "rexex": 0, "": [0, 8, 10, 14, 68, 159, 280, 282, 287, 289, 293, 298, 304, 308], "za": 0, "z": [0, 34], "either": [0, 2, 40, 79, 104, 242, 251, 282, 295, 298, 300, 302, 314, 316], "surround": 0, "two": [0, 8, 9, 26, 29, 79, 153, 278, 280, 281, 282, 298, 307, 311, 314], "By": [0, 18, 26, 130, 131, 139, 297, 298, 300], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 26, 29, 50, 68, 151, 162, 173, 212, 227, 246, 247, 248, 249, 250, 262, 278, 279, 280, 282, 284, 287, 292, 295, 297, 298, 300, 301, 302, 303, 304, 305, 311, 312, 314, 316], "interpret": [0, 280, 298, 316], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 25, 26, 27, 29, 33, 34, 36, 42, 52, 60, 68, 76, 77, 79, 83, 84, 85, 86, 87, 88, 95, 113, 129, 150, 151, 170, 172, 173, 174, 175, 176, 178, 185, 187, 195, 197, 198, 205, 212, 216, 222, 224, 225, 229, 231, 232, 233, 235, 241, 242, 244, 245, 246, 247, 248, 249, 250, 258, 259, 260, 262, 263, 264, 266, 268, 272, 278, 279, 280, 282, 284, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 311, 312, 314, 315], "chang": [0, 2, 9, 18, 25, 26, 39, 79, 177, 183, 185, 189, 191, 197, 200, 204, 206, 220, 282, 285, 298, 300, 302, 303, 304, 311, 316], "howev": [0, 295, 298, 304, 314, 316], "one": [0, 2, 6, 8, 9, 10, 14, 22, 24, 25, 26, 37, 72, 81, 85, 93, 130, 131, 139, 156, 172, 174, 182, 185, 187, 205, 216, 218, 219, 224, 229, 248, 250, 253, 255, 258, 262, 263, 266, 280, 282, 283, 285, 289, 290, 292, 293, 297, 298, 300, 302, 303, 304, 307, 314], "legal": [0, 298], "ones": [0, 9, 287, 293], "9": [0, 2, 6, 45, 61, 70, 84, 87, 96, 99, 101, 116, 118, 223, 233, 278, 279, 287, 289, 294, 295, 297, 298, 299, 301, 302, 303, 310, 311, 312, 313, 316], "sinc": [0, 6, 188, 280, 289, 290, 293, 295, 302, 303, 304, 307, 316], "number": [0, 2, 6, 8, 14, 22, 24, 42, 50, 60, 63, 71, 77, 78, 79, 114, 115, 116, 118, 151, 168, 172, 173, 174, 175, 176, 187, 196, 203, 243, 244, 248, 250, 254, 255, 278, 280, 282, 287, 289, 298, 302, 310, 311, 312, 314, 316], "valu": [0, 1, 6, 10, 18, 24, 25, 26, 34, 40, 46, 47, 60, 62, 63, 70, 71, 83, 84, 85, 86, 87, 88, 92, 94, 96, 99, 101, 119, 125, 126, 145, 168, 172, 175, 190, 199, 201, 220, 235, 241, 244, 246, 247, 249, 250, 251, 256, 277, 278, 280, 282, 285, 287, 289, 292, 299, 300, 302, 311, 312, 313], "met": [0, 298], "doubl": 0, "big": 0, "warn": [0, 2, 12, 253, 261, 280, 287, 292, 295, 297, 303, 316], "larger": [0, 298], "pad": 0, "filter": [0, 114, 115, 116, 280, 289], "so": [0, 24, 172, 260, 283, 285, 290, 298, 304, 310, 316], "characterscannot": 0, "neither": [0, 298], "perform": [0, 14, 72, 79, 282, 287, 298, 300, 302, 303, 304], "order": [0, 8, 9, 26, 29, 33, 128, 133, 137, 142, 143, 172, 185, 186, 193, 200, 206, 207, 208, 242, 280, 282, 289, 294, 298, 300, 301, 302, 303, 307, 314], "given": [0, 2, 9, 26, 39, 74, 78, 83, 84, 86, 87, 88, 93, 94, 120, 121, 122, 124, 132, 140, 145, 147, 157, 165, 166, 173, 174, 175, 201, 209, 212, 219, 220, 228, 235, 258, 260, 262, 263, 268, 280, 282, 285, 287, 289, 292, 293, 295, 297, 298, 303, 304, 310, 311], "critic": [0, 283], "case": [0, 2, 76, 89, 130, 131, 139, 172, 212, 256, 280, 287, 295, 297, 298, 300, 302, 303, 309, 315], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 26, 29, 33, 95, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 125, 126, 128, 146, 255, 280, 289, 293, 297, 298, 300, 301, 307, 316], "need": [0, 2, 18, 40, 72, 89, 127, 280, 282, 284, 285, 286, 290, 293, 294, 298, 300, 301, 306, 314, 316], "becaus": [0, 8, 280, 298], "later": [0, 294, 298], "comparison": [0, 303, 307], "It": [0, 18, 258, 283, 284, 285, 289, 290, 294, 295, 296, 298, 300, 301, 302, 305, 310, 314, 316], "possibl": [0, 2, 6, 26, 133, 136, 137, 143, 210, 246, 249, 280, 284, 285, 289, 295, 298, 300, 301, 302, 303, 304, 305, 307, 310, 314, 316], "done": [0, 1, 72, 73, 79, 83, 84, 86, 87, 88, 172, 283, 300, 303, 305, 311], "eq": [0, 8, 32, 302], "ne": 0, "text": [0, 18, 37, 38, 180, 300, 302, 307], "otherwis": [0, 6, 29, 34, 35, 37, 40, 43, 72, 76, 95, 98, 105, 129, 130, 131, 139, 141, 144, 148, 149, 150, 172, 185, 197, 198, 200, 201, 203, 206, 212, 283, 289, 298, 300, 302, 307], "appropri": [0, 283, 298], "letter": [0, 129], "alphanum": 0, "underscor": 0, "real": [0, 135, 145, 289, 290], "special": [0, 6, 216, 285, 289, 290, 298], "digit": [0, 71, 280], "enclos": 0, "ok": [0, 290], "w": [0, 29, 72, 129, 148, 155, 156, 163, 176, 187, 198, 201, 205, 212, 224, 287, 298, 300, 302], "o": [0, 279, 281, 282, 286, 311], "With": [0, 314], "eqn": 0, "ge": [0, 302], "etc": [0, 3, 280, 302, 304, 312, 314], "maximum": [0, 14, 37, 71, 244, 282, 287], "have": [0, 6, 8, 18, 26, 29, 37, 40, 79, 142, 216, 247, 255, 260, 262, 280, 282, 284, 285, 287, 289, 290, 292, 294, 295, 297, 298, 300, 301, 303, 304, 305, 307, 314, 316], "12": [0, 1, 2, 61, 96, 99, 101, 102, 103, 116, 147, 199, 233, 278, 279, 287, 289, 292, 293, 295, 297, 298, 299, 301, 302, 303, 308, 310, 311, 312, 313], "must": [0, 24, 42, 76, 172, 187, 258, 279, 282, 298, 300], "decreas": [0, 290], "within": [0, 172, 283, 298, 314], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 26, 29, 197, 278, 283, 285, 287, 290, 298, 304, 316], "affect": [0, 113, 185, 197, 280, 298, 304], "even": [0, 24, 78, 82, 96, 101, 284, 298, 304], "still": [0, 298, 304, 316], "cannot": [0, 8, 60, 76, 257, 280, 289, 298, 314], "both": [0, 1, 2, 18, 42, 181, 212, 255, 280, 283, 287, 289, 292, 295, 297, 298, 301, 303, 311, 314], "reenter": 0, "think": 0, "risk": [0, 298], "being": [0, 6, 26, 44, 60, 175, 176, 178, 198, 279, 280, 284, 292, 293, 298, 304, 307, 312], "truncat": 0, "encod": [0, 205, 224, 280, 289, 305], "here": [0, 2, 113, 289, 290, 291, 294, 295, 301, 302, 303, 307, 314, 315], "possibli": [0, 307], "partial": [0, 282, 286, 307], "list": [0, 2, 6, 8, 10, 13, 14, 17, 25, 26, 29, 32, 34, 40, 42, 76, 79, 81, 82, 90, 91, 93, 94, 106, 107, 113, 120, 121, 122, 124, 146, 152, 165, 166, 172, 173, 179, 187, 197, 211, 213, 214, 215, 217, 218, 219, 220, 229, 235, 240, 241, 242, 245, 246, 247, 248, 250, 253, 254, 255, 256, 267, 268, 278, 279, 280, 282, 283, 285, 287, 289, 292, 297, 298, 300, 302, 310, 311, 312, 314], "decid": [0, 2, 140, 295, 297, 298, 303, 311], "whether": [0, 24, 34, 37, 40, 76, 132, 140, 172, 187, 231, 233, 242, 256, 259, 272, 280, 282, 295, 298, 303, 314], "put": [0, 8, 151, 172, 280, 290, 293], "up": [0, 283, 284, 287, 294, 301, 314, 316], "written": [0, 280, 298, 300, 302, 304, 314], "scientif": [0, 290], "14": [0, 2, 61, 84, 96, 101, 116, 233, 278, 279, 287, 295, 297, 298, 299, 301, 302, 310, 312, 313], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 102, 188, 278, 302], "describ": [0, 2, 26, 29, 60, 133, 136, 137, 142, 143, 278, 287, 289, 295, 297, 300], "output": [0, 8, 18, 255, 268, 280, 282, 285, 298, 300, 302, 314], "alwai": [0, 174, 280, 289, 302, 303], "synonym": [0, 280], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 24, 25, 26, 30, 31, 32, 37, 38, 40, 41, 42, 47, 50, 60, 71, 73, 76, 78, 79, 81, 86, 87, 88, 93, 97, 102, 103, 107, 110, 113, 116, 118, 120, 121, 122, 124, 129, 130, 131, 132, 139, 146, 148, 151, 153, 162, 165, 166, 168, 171, 172, 176, 178, 179, 180, 182, 187, 188, 190, 194, 197, 198, 199, 201, 208, 211, 213, 214, 215, 218, 219, 230, 235, 240, 241, 242, 247, 252, 253, 256, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 277, 279, 280, 282, 284, 287, 289, 295, 297, 298, 301, 302, 303, 306, 311, 312, 314], "avail": [0, 1, 2, 6, 34, 43, 60, 127, 148, 185, 200, 203, 206, 212, 230, 235, 242, 278, 282, 287, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 307, 311, 313, 314, 315, 316], "carri": [0, 298], "over": [0, 118, 151, 172, 201, 231, 232, 233, 278, 279, 280, 293, 297, 314], "onc": [0, 149, 287, 304], "covari": [0, 6, 10, 17, 26, 36, 37, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 76, 101, 113, 132, 146, 155, 161, 162, 173, 174, 175, 179, 212, 244, 245, 280, 282, 287, 289, 290, 297, 307, 312, 314], "final": [0, 2, 36, 161, 239, 280, 287, 292, 293, 295, 297, 298, 302, 303, 304, 311, 312], "estim": [0, 1, 2, 3, 14, 15, 18, 24, 25, 34, 36, 37, 39, 40, 42, 43, 45, 46, 47, 49, 59, 60, 61, 63, 70, 71, 74, 76, 85, 92, 93, 94, 153, 154, 155, 159, 161, 164, 169, 173, 174, 175, 176, 178, 183, 184, 185, 189, 192, 193, 197, 198, 200, 203, 205, 206, 207, 213, 214, 215, 219, 220, 222, 223, 224, 229, 230, 241, 242, 245, 251, 256, 278, 279, 280, 282, 287, 288, 290, 292, 295, 296, 297, 299, 303, 306, 307, 310, 311, 314, 315], "oppos": 0, "ext": [0, 280, 314], "per": [0, 6, 14, 25, 72, 114, 115, 116, 118, 173, 174, 197, 201, 255], "est": [0, 36, 39, 49, 161, 164, 300, 302], "first": [0, 2, 7, 26, 35, 37, 43, 78, 96, 101, 104, 130, 131, 133, 137, 139, 153, 160, 176, 178, 183, 185, 186, 187, 193, 198, 200, 201, 203, 206, 280, 282, 287, 293, 295, 297, 298, 302, 304, 307, 314, 316], "call": [0, 255, 269, 280, 284, 285, 298, 304, 316], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 279, 280, 282, 287, 292, 295, 297, 303, 307, 308, 310, 311, 312, 314], "theta": [0, 1, 29, 34, 37, 119, 125, 126, 155, 156, 159, 197, 205, 224, 280, 295, 302, 303, 304, 307, 311], "sigma": [0, 1, 119, 125, 126, 155, 156, 159, 176, 178, 198, 278, 293, 295, 302, 303, 304], "omega": [0, 1, 22, 26, 61, 119, 125, 126, 155, 156, 159, 280, 282, 293, 295, 300, 302, 303, 304, 310, 311], "fix": [0, 1, 2, 24, 25, 34, 47, 52, 76, 92, 93, 94, 119, 125, 126, 181, 189, 191, 204, 211, 217, 219, 220, 241, 282, 295, 298, 300, 302, 307, 314], "offdiagon": 0, "could": [0, 18, 280, 289, 298, 302, 306, 307], "part": [0, 18, 26, 78, 278, 280, 282, 285, 286, 298, 300, 304, 307, 314], "NO": [0, 298], "probabl": 0, "same": [0, 2, 8, 10, 18, 26, 29, 42, 50, 71, 72, 92, 93, 94, 102, 142, 187, 189, 197, 219, 220, 225, 242, 247, 258, 260, 262, 279, 280, 282, 283, 287, 289, 292, 293, 297, 298, 300, 302, 303, 314, 316], "type": [0, 2, 6, 8, 10, 18, 28, 29, 37, 52, 74, 98, 120, 122, 152, 157, 202, 235, 242, 246, 247, 249, 251, 277, 280, 282, 285, 287, 293, 294, 295, 297, 298, 300, 303, 307], "now": [0, 280, 285, 302, 304], "investig": 0, "follow": [0, 2, 37, 150, 211, 278, 280, 282, 283, 285, 287, 289, 290, 292, 294, 295, 297, 298, 300, 302, 303, 304, 306, 314, 316], "like": [0, 26, 289, 298, 304, 307, 314], "One": [0, 2, 26, 151, 152, 265, 268, 307, 316], "last": [0, 8, 29, 33, 95, 184, 256], "left": [0, 4, 60, 300, 302, 306], "justifi": 0, "size": [0, 6, 13, 172, 280, 283, 307], "13": [0, 1, 2, 61, 96, 99, 101, 102, 116, 233, 278, 279, 287, 292, 295, 297, 298, 299, 301, 302, 303, 308, 310, 312, 313], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 262, 263, 266, 277, 278, 279, 280, 281, 283, 284, 285, 287, 292, 293, 294, 296, 297, 298, 299, 306, 307, 310, 312, 313, 315, 316], "n": [0, 6, 17, 22, 26, 38, 45, 76, 79, 169, 174, 175, 180, 196, 203, 211, 214, 248, 278, 279, 280, 282, 293, 295, 300, 302], "flatten": [0, 280], "triangular": 0, "correl": [0, 53, 54, 55, 56, 64, 65, 66, 67, 70, 76, 223, 280, 310], "abov": [0, 34, 37, 40, 70, 168, 278, 279, 287, 293, 298, 302, 316], "off": 0, "diagon": [0, 155, 280, 295, 301, 302, 303], "obj": 0, "right": [0, 4, 8, 298, 300, 302, 316], "also": [0, 2, 26, 35, 82, 172, 280, 284, 285, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 307, 311, 314, 316], "22": [0, 2, 61, 83, 84, 86, 87, 96, 101, 116, 118, 233, 278, 279, 287, 293, 297, 299, 301, 302, 313], "integ": [0, 6, 129, 280, 282, 314], "5": [0, 1, 2, 29, 34, 37, 53, 55, 56, 60, 61, 65, 66, 72, 84, 85, 94, 96, 99, 101, 103, 116, 118, 129, 147, 148, 149, 150, 155, 199, 212, 215, 220, 233, 254, 255, 278, 279, 287, 289, 293, 295, 297, 298, 299, 300, 301, 302, 303, 308, 310, 312, 313], "expon": [0, 1, 34, 241, 282], "regular": [0, 10, 296], "take": [0, 2, 24, 26, 77, 280, 283, 289, 292, 295, 297, 298, 303, 307], "19": [0, 2, 61, 84, 96, 101, 116, 233, 278, 279, 295, 299, 301, 302, 310, 312, 313], "posit": [0, 26, 174, 175, 280, 282, 283, 290], "neg": [0, 314], "For": [0, 2, 8, 37, 40, 114, 115, 116, 150, 199, 216, 241, 244, 246, 247, 249, 250, 251, 278, 279, 282, 284, 285, 287, 292, 293, 294, 298, 300, 303, 304, 307, 314, 316], "20": [0, 2, 61, 87, 96, 101, 116, 233, 278, 279, 287, 298, 299, 301, 302, 308, 310, 311, 312, 313], "In": [0, 76, 89, 283, 285, 287, 294, 295, 297, 298, 300, 301, 302, 307, 314, 316], "observ": [0, 6, 14, 18, 43, 102, 114, 115, 116, 117, 118, 185, 200, 203, 206, 207, 254, 255, 278, 280, 293, 307, 310, 313], "byte": 0, "evid": [0, 105, 280], "toward": [0, 102, 280], "token": [0, 314], "whitespac": 0, "parenthes": [0, 314], "multipl": [0, 4, 8, 26, 29, 98, 130, 131, 139, 185, 253, 268, 280, 287, 290, 300, 302, 311, 312, 314], "open": [0, 283, 285, 296, 298, 305], "keyword": [0, 282], "kept": [0, 89, 280, 282, 295], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 24, 25, 26, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 280, 282, 284, 285, 287, 289, 290, 292, 295, 297, 298, 300, 303, 304, 305, 306, 307, 311, 316], "csv": [0, 2, 27, 159, 225, 257, 280, 282, 287, 289, 292, 295, 297, 302, 303, 311, 314], "wgt": [0, 2, 4, 6, 10, 29, 34, 37, 72, 81, 82, 96, 101, 113, 127, 129, 147, 148, 149, 150, 155, 156, 162, 199, 213, 214, 215, 218, 241, 289, 293, 300, 302, 304, 307, 310, 314], "23": [0, 2, 60, 61, 63, 77, 84, 96, 101, 116, 173, 174, 175, 233, 278, 279, 287, 295, 297, 299, 301, 302, 303, 312, 313], "titl": 0, "crash": [0, 280], "nmtran": [0, 6, 14], "There": [0, 260, 292, 302], "72": 0, "includ": [0, 2, 3, 17, 22, 26, 46, 152, 256, 279, 280, 283, 287, 295, 296, 297, 298, 301, 302, 303, 310, 312, 314], "come": [0, 212, 285, 298], "filenam": [0, 18, 258, 262, 263, 267, 300], "repres": [0, 4, 6, 24, 25, 26, 35, 282, 287, 289, 290, 293, 298, 300], "rel": [0, 14, 280, 293], "path": [0, 1, 2, 10, 18, 27, 50, 74, 100, 157, 158, 225, 226, 227, 228, 236, 237, 238, 240, 242, 257, 258, 259, 260, 262, 263, 264, 266, 267, 272, 280, 282, 284, 287, 289, 292, 294, 295, 297, 300, 301, 302, 303, 311, 312, 314, 316], "work": [0, 280, 283, 285, 289, 292, 298, 300, 307], "directori": [0, 228, 240, 258, 259, 260, 280, 282, 284, 285, 300, 312], "when": [0, 14, 33, 37, 72, 95, 280, 283, 285, 289, 297, 298, 300, 304, 310, 312, 314], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 254, 255, 287, 289, 292, 295, 297, 298, 303, 311], "simpli": [0, 24, 285, 292, 304], "seen": [0, 1, 2, 287, 289, 292, 295, 297, 303, 311], "54": [0, 61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 303, 308, 310, 313], "doe": [0, 2, 50, 78, 100, 168, 212, 258, 259, 260, 263, 264, 280, 290, 292, 295, 297, 298, 303, 304, 310], "pk": [0, 2, 6, 41, 46, 74, 122, 155, 202, 212, 251, 280, 282, 287, 295, 302, 303, 304, 314], "pred": [0, 87, 155, 159, 280, 301, 302, 310, 313], "simpl": [0, 1, 155, 210, 256, 302, 304], "merg": [0, 280, 285, 298], "placement": [0, 284], "place": [0, 2, 284, 298], "seem": 0, "restrict": [0, 260, 298], "automat": [0, 14, 34, 242, 280, 285, 287, 294, 298, 311, 314], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 33, 72, 74, 75, 77, 78, 95, 98, 99, 105, 165, 187, 197, 227, 228, 240, 254, 255, 258, 259, 260, 261, 262, 265, 267, 269, 272, 278, 279, 280, 282, 284, 285, 288, 289, 292, 293, 295, 299, 303, 307, 308, 310, 311, 312, 313, 314, 315], "continu": [0, 2, 6, 18, 37, 280, 283, 285, 287, 293, 298, 307, 314], "factor": [0, 307], "compil": [0, 298], "11138": 0, "445": [0, 295], "though": [0, 298], "outsid": [0, 280, 283, 298], "standard": [0, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 67, 224, 227, 278, 280, 290, 293, 298, 302, 304, 307, 310, 311, 313], "gfortran": 0, "8": [0, 2, 6, 53, 54, 55, 56, 61, 64, 65, 66, 67, 96, 101, 103, 116, 118, 147, 199, 233, 278, 279, 287, 289, 295, 297, 298, 299, 301, 302, 308, 310, 311, 312, 313, 316], "hh": 0, "j": [0, 212, 214, 279, 293], "nep": 0, "h": [0, 282], "second": [0, 153, 282, 304], "f": [0, 29, 72, 129, 148, 155, 156, 163, 176, 178, 187, 197, 198, 201, 212, 224, 278, 280, 282, 286, 298, 300, 302, 304], "respect": [0, 2, 280, 283, 287, 292, 293, 298, 302, 303, 304], "ep": [0, 29, 155, 280, 282, 302, 304], "implicit": [0, 280], "kind": [0, 6, 8, 122, 298], "dpsize": 0, "main": [0, 282, 285, 307, 316], "function": [0, 3, 10, 14, 26, 34, 37, 38, 57, 58, 77, 82, 83, 84, 86, 87, 88, 92, 93, 94, 108, 117, 123, 133, 136, 137, 143, 176, 178, 180, 189, 197, 198, 210, 216, 219, 220, 223, 228, 235, 246, 249, 265, 278, 280, 282, 284, 285, 289, 290, 295, 297, 298, 300, 301, 303, 304, 306, 307, 310, 311, 312, 314, 315, 316], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 26, 30, 31, 42, 60, 78, 85, 107, 119, 120, 124, 125, 127, 130, 131, 139, 140, 156, 175, 176, 178, 187, 197, 198, 201, 241, 242, 280, 282, 287, 289, 290, 295, 301, 307, 310, 315, 316], "doesn": [0, 29, 262, 280, 295], "t": [0, 6, 8, 29, 34, 38, 80, 109, 192, 193, 207, 215, 256, 262, 265, 267, 279, 280, 282, 293, 295, 302, 308, 310], "declar": [0, 2, 72, 149, 287, 314], "assign": [0, 6, 29, 72, 280, 282, 300], "stop": 0, "entri": [0, 261], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 24, 25, 26, 29, 57, 58, 72, 78, 104, 108, 113, 117, 123, 127, 130, 131, 139, 149, 156, 171, 176, 178, 187, 197, 198, 201, 242, 280, 287, 290, 302, 307], "separ": [0, 10, 76, 89, 150, 172, 211, 260, 280, 282, 285, 287, 289, 290, 293, 298, 307, 314], "thnn": 0, "nn": [0, 293], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 24, 26, 168, 190, 212, 280, 298, 302], "ad": [0, 9, 18, 35, 37, 40, 45, 89, 246, 247, 249, 268, 280, 282, 287, 297, 298, 304, 311, 312], "x": [0, 1, 2, 25, 34, 72, 83, 84, 99, 147, 173, 199, 278, 287, 289, 293, 295, 297, 301, 302, 303, 305, 311, 312], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 26, 27, 29, 107, 113, 157, 158, 159, 280, 289, 302, 303], "tool": [1, 2, 3, 14, 18, 49, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 83, 84, 85, 86, 87, 88, 163, 173, 174, 175, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 264, 266, 272, 277, 278, 280, 281, 282, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 306, 307, 311, 315, 316], "add": [1, 9, 14, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 72, 89, 109, 180, 197, 198, 268, 280, 282, 287, 295, 298, 302, 303, 304, 305, 314], "allometr": [1, 2, 34, 241, 280, 282, 314], "scale": [1, 2, 6, 18, 34, 59, 62, 68, 241, 280, 282, 293, 305, 314], "pharmr": [1, 2, 3, 280, 285, 287, 290, 292, 294, 295, 296, 297, 303, 311, 315], "command": [1, 280, 285, 287, 292, 294, 295, 296, 297, 298, 302, 303, 311, 315], "line": [1, 72, 280, 287, 292, 294, 295, 296, 297, 298, 302, 303, 311, 315], "To": [1, 2, 282, 284, 285, 287, 292, 294, 295, 297, 298, 301, 302, 303, 305, 311, 314, 316], "initi": [1, 2, 15, 18, 24, 25, 34, 40, 42, 43, 45, 46, 47, 74, 76, 77, 85, 92, 93, 94, 109, 169, 176, 178, 185, 187, 188, 189, 192, 193, 197, 198, 200, 203, 206, 207, 213, 214, 215, 219, 220, 222, 223, 241, 242, 251, 267, 280, 282, 287, 292, 293, 295, 297, 298, 300, 302, 303, 311], "python": [1, 2, 279, 280, 282, 287, 289, 290, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 311, 314, 315], "r": [1, 2, 14, 27, 279, 280, 284, 287, 289, 290, 292, 294, 295, 296, 297, 300, 301, 302, 303, 304, 311, 314, 315], "read_model": [1, 159, 280, 287, 289, 292, 295, 297, 300, 302, 303, 311, 316], "read_modelfit_result": [1, 280, 287, 292, 295, 297, 300, 301, 303, 311], "run_allometri": [1, 280], "start_model": [1, 254, 287, 292, 295, 297, 303, 311, 314], "start_model_result": [1, 287, 292, 295, 297, 303, 311, 314], "re": [1, 2, 228, 237, 238, 239, 243, 244, 252, 259, 264, 266, 279, 287, 292, 295, 297, 301, 303, 311, 313, 314], "code": [1, 14, 18, 20, 72, 112, 113, 127, 133, 136, 137, 143, 155, 159, 197, 198, 226, 280, 287, 292, 295, 296, 297, 298, 302, 303, 304, 306, 307, 311, 316], "redefin": [1, 287, 292, 295, 297, 303, 311], "accordingli": [1, 287, 292, 295, 297, 303, 304, 311], "descript": [1, 2, 6, 18, 30, 254, 255, 256, 277, 278, 280, 284, 287, 289, 292, 295, 297, 303, 311, 312], "modelfitresult": [1, 2, 21, 229, 230, 231, 232, 233, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 280, 287, 292, 295, 297, 303, 311], "allometric_vari": [1, 2, 34, 241, 242, 282], "wt": [1, 29, 34, 241, 244, 287, 312], "reference_valu": [1, 2, 34, 241, 282], "refer": [1, 31, 34, 72, 79, 142, 199, 239, 241, 242, 256, 280, 282, 287, 298, 302, 304, 315, 316], "70": [1, 2, 34, 96, 241, 302, 310], "appli": [1, 2, 18, 35, 176, 178, 187, 197, 198, 213, 214, 215, 241, 280, 282, 283, 289, 293, 298, 302, 303, 310, 314], "all": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 25, 26, 27, 28, 29, 30, 34, 40, 44, 46, 69, 72, 76, 79, 81, 89, 93, 94, 97, 99, 101, 103, 106, 107, 110, 119, 122, 125, 126, 128, 129, 133, 136, 137, 140, 143, 146, 152, 154, 156, 165, 166, 173, 174, 187, 191, 197, 199, 204, 211, 213, 214, 215, 217, 218, 219, 220, 240, 241, 245, 246, 247, 249, 256, 258, 262, 263, 268, 273, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 292, 293, 295, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 314, 316], "cl": [1, 2, 4, 8, 25, 29, 34, 37, 40, 42, 45, 60, 72, 78, 80, 90, 107, 120, 122, 124, 129, 132, 140, 145, 148, 149, 150, 155, 156, 162, 165, 169, 177, 185, 186, 192, 193, 196, 200, 206, 210, 213, 214, 215, 241, 244, 287, 293, 295, 297, 300, 302, 304], "q": [1, 34, 45, 169, 241, 280, 302], "v": [1, 8, 25, 29, 34, 38, 60, 72, 80, 91, 107, 122, 127, 129, 148, 149, 150, 155, 156, 165, 177, 180, 185, 186, 192, 193, 200, 206, 207, 210, 241, 244, 285, 287, 293, 297, 300, 302, 304, 313, 314], "75": [1, 2, 34, 241, 287, 292], "lower_bound": [1, 2, 34, 241, 282], "lower": [1, 2, 6, 24, 25, 34, 37, 47, 70, 92, 93, 94, 119, 125, 126, 168, 189, 190, 191, 197, 204, 217, 220, 241, 242, 282, 290, 295, 300, 302], "bound": [1, 24, 25, 34, 47, 71, 175, 191, 204, 213, 214, 215, 217, 223, 241, 280, 282, 300], "upper_bound": [1, 2, 34, 241, 282], "upper": [1, 24, 25, 34, 37, 47, 92, 93, 94, 119, 125, 126, 168, 189, 191, 204, 217, 220, 241, 280, 282, 300, 302], "should": [1, 6, 24, 34, 37, 40, 42, 47, 172, 187, 241, 246, 247, 249, 280, 282, 283, 284, 285, 287, 290, 293, 295, 297, 298, 299, 303, 307, 311], "true": [1, 2, 6, 9, 10, 15, 18, 25, 34, 35, 36, 59, 69, 78, 81, 89, 92, 93, 94, 109, 113, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 161, 162, 174, 181, 183, 184, 187, 197, 198, 203, 218, 219, 220, 221, 222, 226, 233, 241, 256, 257, 280, 287, 289, 292, 295, 297, 300, 302, 303, 304, 305, 311, 312, 313, 316], "No": [1, 6, 212, 263, 264, 298, 303], "select": [1, 2, 172, 199, 213, 215, 255, 278, 280, 282, 287, 295, 297, 300, 303, 305, 311, 312, 314], "see": [1, 2, 6, 8, 18, 37, 40, 233, 241, 242, 244, 246, 247, 249, 250, 251, 282, 283, 284, 285, 287, 289, 290, 292, 295, 297, 298, 299, 300, 302, 303, 304, 307, 311, 314], "about": [1, 2, 6, 283, 287, 289, 292, 294, 295, 297, 298, 302, 303, 311, 314], "actual": [1, 2, 24, 150, 287, 292, 295, 297, 298, 303, 311], "minim": [1, 2, 280, 287, 292, 295, 297, 303, 311], "statu": [1, 2, 280, 287, 290, 292, 295, 297, 298, 303, 311], "time": [1, 2, 6, 7, 9, 10, 25, 29, 34, 42, 43, 72, 74, 81, 82, 96, 102, 103, 110, 118, 129, 146, 147, 148, 149, 150, 151, 155, 156, 159, 167, 185, 188, 199, 200, 201, 203, 206, 216, 242, 250, 280, 282, 287, 289, 292, 293, 295, 297, 298, 300, 301, 303, 304, 307, 310, 311, 313, 314], "you": [1, 2, 284, 285, 287, 292, 294, 295, 296, 297, 298, 301, 302, 303, 304, 307, 311, 314, 315, 316], "look": [1, 2, 29, 50, 107, 140, 287, 292, 295, 297, 303, 304, 311, 314], "summary_model": [1, 2, 280, 287, 292, 295, 297, 303, 311, 314], "tabl": [1, 2, 59, 155, 176, 212, 255, 278, 279, 280, 285, 287, 288, 292, 293, 295, 297, 299, 302, 303, 308, 310, 311, 312, 313, 314], "gener": [1, 2, 6, 33, 60, 63, 73, 77, 95, 151, 172, 173, 174, 175, 265, 267, 280, 282, 287, 289, 292, 293, 295, 296, 297, 302, 303, 306, 307, 311, 314], "summarize_modelfit_result": [1, 2, 280, 287, 292, 295, 297, 303, 311], "minimization_success": [1, 2, 256, 287, 292, 295, 297, 303, 311], "errors_found": [1, 2, 287, 292, 295, 297, 303, 311], "pheno": [1, 8, 10, 15, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 85, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 233, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 289, 294, 300, 301, 302, 304], "phenobarb": [1, 155, 256, 302], "scaled_model": [1, 2], "warnings_found": [1, 2, 287, 292, 295, 297, 303, 311], "ofv": [1, 2, 52, 153, 231, 235, 246, 247, 249, 254, 255, 256, 280, 287, 292, 295, 297, 303, 310, 311], "aic": [1, 51, 235, 246, 247, 249, 280, 295, 297, 303, 311], "bic": [1, 2, 52, 235, 246, 247, 249, 280, 282, 287, 295, 297, 303, 311, 314], "730": [1, 278, 293, 295], "894727": [1, 278, 293], "740": [1, 85, 102, 147, 199, 278, 289, 302], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 256, 287, 292, 295, 297, 303, 311], "estimation_runtim": [1, 2, 287, 292, 295, 297, 303, 311], "_estim": [1, 295, 303], "32": [1, 6, 61, 96, 101, 116, 233, 278, 279, 282, 287, 292, 299, 301, 302, 310, 313], "005818": [1, 293], "121955": 1, "44555": [1, 293], "111053": [1, 293], "201526": [1, 293], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 293], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 234, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 280, 287, 292, 293, 295, 297, 303, 308, 311, 314], "predict": [1, 2, 14, 18, 86, 87, 108, 113, 123, 152, 231, 232, 233, 254, 280, 287, 288, 295, 297, 303, 310, 311], "influenti": [1, 2, 231, 232, 255, 280, 287, 295, 297, 303, 311], "individu": [1, 2, 6, 18, 41, 59, 60, 61, 63, 76, 86, 87, 107, 108, 114, 115, 116, 118, 123, 152, 153, 154, 165, 173, 174, 175, 222, 231, 232, 233, 254, 255, 280, 282, 287, 295, 297, 298, 302, 303, 307, 310, 311], "outlier": [1, 2, 232, 233, 255, 280, 287, 295, 297, 303, 311, 313], "summary_individuals_count": [1, 2, 287, 295, 297, 303, 311], "summarize_individuals_count_t": [1, 2, 280, 287, 295, 297, 303, 311], "parent_model": [1, 2, 18, 280, 287, 292, 295, 297, 303, 311], "inf_select": [1, 2, 255, 287, 295, 297, 303, 311], "inf_param": [1, 2, 255, 287, 295, 297, 303, 311], "out_ob": [1, 2, 255, 287, 295, 297, 303, 311], "out_ind": [1, 2, 255, 287, 295, 297, 303, 311], "inf_outli": [1, 2, 255, 287, 295, 297, 303, 311], "differ": [1, 2, 3, 18, 23, 26, 52, 254, 256, 278, 279, 280, 283, 284, 287, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 314, 316], "statist": [1, 6, 60, 63, 214, 287, 289, 293, 295, 297, 300, 303, 311], "summary_individu": [1, 280, 287, 295, 297, 303, 311], "summarize_individu": [1, 255, 280, 287, 295, 297, 303, 311], "outlier_count": [1, 254, 287, 295, 297, 303, 311], "dofv_vs_par": [1, 254, 287, 295, 297, 303, 311], "id": [1, 5, 6, 10, 16, 61, 79, 81, 82, 96, 99, 101, 102, 103, 106, 116, 118, 147, 155, 156, 159, 173, 199, 233, 279, 280, 282, 287, 289, 293, 295, 297, 299, 301, 302, 303, 304, 311, 313], "nan": [1, 2, 99, 223, 280, 287, 292, 293, 295, 297, 302, 303, 310, 311, 312], "742852": 1, "000000": [1, 2, 47, 53, 54, 55, 64, 278, 287, 293, 295, 297, 301, 303, 311], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 25, 42, 61, 76, 84, 96, 99, 101, 102, 116, 168, 188, 190, 191, 204, 208, 212, 214, 233, 278, 279, 287, 289, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 308, 310, 311, 312, 313, 314], "092658": 1, "55": [1, 2, 6, 61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 303, 308, 310, 313], "6": [1, 2, 6, 61, 85, 96, 101, 116, 118, 147, 199, 233, 278, 279, 287, 289, 293, 295, 297, 298, 299, 301, 302, 303, 310, 311, 312, 313], "535711": 1, "175743": 1, "56": [1, 61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 313], "764710": 1, "576072": 1, "57": [1, 2, 61, 96, 101, 106, 116, 173, 233, 278, 279, 287, 292, 293, 299, 301, 302, 313], "975589": 1, "539779": 1, "58": [1, 2, 61, 96, 101, 106, 116, 118, 173, 233, 278, 279, 293, 299, 301, 302, 312, 313], "194798": 1, "775689": 1, "59": [1, 61, 96, 99, 101, 103, 106, 114, 116, 118, 147, 173, 199, 233, 278, 279, 287, 289, 292, 293, 299, 301, 302, 303, 313], "11": [1, 2, 61, 83, 84, 86, 96, 99, 101, 102, 116, 233, 278, 279, 287, 293, 294, 295, 297, 298, 299, 301, 302, 303, 308, 310, 312, 313, 314, 316], "175577": 1, "462889": 1, "predicted_dofv": [1, 254, 255, 287, 295, 297, 303, 311], "predicted_residu": [1, 254, 255, 287, 295, 297, 303, 311], "118": [1, 2, 173, 280, 293], "fulli": [2, 314], "best": [2, 280, 287, 295, 297, 298, 303, 311, 314], "dataset": [2, 10, 11, 12, 18, 33, 48, 60, 69, 74, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 102, 105, 106, 111, 114, 115, 116, 118, 127, 142, 147, 151, 157, 168, 172, 179, 199, 212, 216, 221, 225, 242, 247, 279, 280, 282, 285, 293, 296, 297, 313, 315], "combin": [2, 4, 76, 130, 131, 139, 141, 176, 178, 198, 211, 212, 248, 280, 282, 292, 293, 295, 298, 302, 311, 314], "modelsearch": [2, 242, 249, 254, 280, 314], "ruvsearch": [2, 242, 250, 252, 280, 314], "covsearch": [2, 244, 280, 314], "run_amd": [2, 280], "dataset_path": [2, 74, 302], "modeltyp": [2, 242, 282], "basic_pk": [2, 242], "administr": [2, 5, 6, 16, 74, 95, 242, 251, 280, 302], "oral": [2, 7, 74, 185, 242, 251, 280, 302, 314], "search_spac": [2, 242, 249, 280, 282, 303, 314], "let": [2, 14, 18, 79, 280, 287, 293, 302, 304, 314], "categor": [2, 6, 37, 280, 287, 289, 293, 314], "sex": [2, 283, 287, 307, 314], "ag": [2, 6, 244, 287, 312, 314], "occas": [2, 42, 242, 247, 280, 282, 297, 302], "visi": [2, 297], "c": [2, 9, 38, 180, 214, 281, 286, 292, 293, 297, 298, 302, 304, 311], "specifi": [2, 6, 9, 29, 40, 82, 92, 94, 157, 168, 176, 178, 196, 197, 198, 220, 227, 245, 280, 282, 284, 287, 292, 297, 298, 300, 301], "iiv": [2, 17, 22, 26, 31, 40, 42, 46, 52, 76, 107, 120, 140, 165, 187, 211, 242, 246, 247, 249, 280, 282, 287, 297, 300, 302, 314], "we": [2, 283, 285, 287, 293, 294, 296, 298, 300, 302, 304, 307, 316], "our": [2, 283, 285, 286, 298, 307], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 62, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 89, 92, 93, 94, 99, 108, 117, 119, 123, 125, 126, 127, 129, 148, 149, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 272, 278, 280, 282, 284, 287, 289, 290, 292, 295, 297, 298, 302, 303, 304, 307, 311, 314, 315, 316], "build": [2, 242, 281, 282, 290, 302, 314], "current": [2, 26, 39, 40, 57, 58, 72, 73, 83, 84, 86, 87, 88, 108, 117, 123, 142, 148, 177, 183, 184, 185, 200, 210, 212, 216, 230, 235, 244, 248, 251, 262, 269, 279, 280, 282, 285, 287, 288, 293, 294, 296, 297, 298, 299, 300, 303, 306, 307, 308, 310, 311, 312, 313, 314], "rout": [2, 242, 251], "iv": [2, 74, 185, 242, 280, 282, 314], "ivor": [2, 74, 242], "cl_init": [2, 74, 242, 282, 302], "popul": [2, 18, 29, 47, 85, 86, 87, 108, 123, 129, 223, 242, 280, 282, 312], "clearanc": [2, 34, 74, 90, 242, 280, 282, 287, 297, 304], "01": [2, 17, 26, 37, 74, 197, 223, 242, 244, 282, 287, 302, 310, 312], "vc_init": [2, 74, 242, 282, 302], "central": [2, 7, 8, 9, 29, 44, 45, 72, 74, 129, 148, 169, 177, 185, 186, 188, 192, 193, 196, 200, 203, 206, 207, 208, 210, 242, 282, 285, 290, 300, 302], "compart": [2, 6, 8, 9, 32, 35, 38, 43, 44, 45, 97, 98, 110, 128, 160, 167, 169, 185, 188, 196, 203, 208, 242, 280, 282, 302, 303, 314], "volum": [2, 34, 45, 74, 91, 242, 280, 282, 287, 297, 298], "mat_init": [2, 74, 242, 282, 302], "absorpt": [2, 74, 122, 142, 177, 185, 200, 203, 206, 242, 249, 254, 280, 282, 295, 297, 303, 314], "mfl": [2, 242, 244, 254, 280, 282, 287, 303], "depend": [2, 6, 18, 29, 33, 60, 76, 79, 95, 98, 130, 131, 139, 176, 178, 187, 197, 198, 201, 280, 284, 289, 295, 304, 314, 316], "lloq_limit": [2, 242, 282], "quantif": [2, 6, 168, 190, 212, 242, 282], "lloq_method": [2, 242, 282], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 39, 155, 159, 183, 184, 212, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 282, 287, 290, 298, 300, 302, 307, 314, 316], "transform_blq": [2, 168, 190, 242, 280, 282, 302], "bodi": [2, 6, 10, 283, 289, 298, 307], "weight": [2, 6, 10, 88, 130, 131, 139, 141, 205, 224, 287, 289, 307, 311], "correspond": [2, 9, 14, 18, 195, 279, 298, 300, 313, 314], "datainfo": [2, 18, 33, 82, 147, 157, 179, 225, 280, 314, 315], "file": [2, 10, 18, 27, 50, 75, 100, 155, 157, 158, 159, 225, 226, 227, 236, 237, 257, 258, 259, 260, 262, 263, 264, 266, 267, 280, 282, 285, 287, 292, 294, 295, 297, 298, 300, 301, 302, 303, 304, 306, 311, 314, 315], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 261, 265, 266, 267, 280, 284, 287, 289, 298, 301, 302, 315], "elimin": [2, 122, 133, 136, 137, 143, 186, 192, 193, 207, 280, 282, 303, 314], "vc": [2, 45, 169, 287, 295, 297, 302], "mat": [2, 46, 279, 280, 281, 286, 287, 295, 297, 302, 304, 311], "proport": [2, 40, 130, 131, 139, 141, 172, 176, 178, 197, 198, 212, 280, 282, 302], "step": [2, 15, 18, 36, 38, 39, 49, 161, 164, 180, 183, 184, 244, 256, 280, 282, 285, 287, 292, 294, 295, 297, 298, 303, 307, 311, 316], "foce": [2, 14, 15, 36, 39, 161, 183, 184, 280, 282, 292, 300, 302], "interact": [2, 14, 15, 36, 39, 155, 161, 183, 184, 280, 283, 292, 298, 300, 302, 307, 314, 316], "specif": [2, 14, 18, 25, 49, 82, 172, 197, 228, 280, 282, 287, 289, 298, 300, 303, 307, 314], "support": [2, 8, 14, 18, 29, 39, 40, 57, 58, 73, 74, 83, 84, 86, 87, 88, 108, 117, 123, 130, 131, 139, 177, 183, 184, 185, 200, 202, 212, 244, 250, 269, 280, 282, 287, 289, 290, 292, 296, 298, 300, 301, 302, 303, 304, 306, 309, 314], "nonmem": [2, 14, 18, 72, 73, 82, 114, 115, 116, 195, 248, 280, 281, 285, 289, 294, 296, 300, 301, 302, 307, 314], "cmt": [2, 33, 95, 98, 280, 303], "rate": [2, 6, 8, 9, 16, 45, 142, 177, 185, 200, 203, 206, 280, 282, 314], "via": [2, 280, 282, 284, 285, 294, 296, 300, 302, 304, 314, 316], "exclud": [2, 113, 254, 295, 297, 298, 303], "pleas": [2, 285, 294, 298, 300, 302, 314, 316], "featur": [2, 285, 287, 292, 295, 296, 297, 298, 311, 315], "languag": [2, 112, 155, 283, 287, 290, 298, 303], "how": [2, 3, 174, 242, 246, 249, 280, 282, 283, 285, 287, 289, 294, 295, 297, 298, 300, 302, 303, 304, 312, 315], "defin": [2, 8, 63, 113, 127, 142, 150, 156, 280, 287, 290, 298, 300, 313, 314], "data": [2, 6, 18, 31, 83, 84, 85, 86, 87, 88, 101, 113, 155, 156, 159, 168, 176, 178, 181, 190, 198, 212, 242, 255, 278, 280, 289, 293, 297, 298, 300, 302, 304, 307, 314], "zo": [2, 249, 254, 280, 282, 303, 314], "seq": [2, 282, 303, 314], "fo": [2, 14, 39, 183, 184, 280, 282, 292, 303, 307, 314], "mm": [2, 280, 282, 303, 314], "mix": [2, 42, 52, 137, 193, 235, 280, 290, 294, 297, 300, 303, 307, 314], "lagtim": [2, 177, 200, 303, 314], "transit": [2, 8, 196, 203, 280, 282, 303, 314], "peripher": [2, 8, 45, 169, 196, 249, 254, 280, 282, 302, 303, 314], "cat": [2, 37, 287, 314], "note": [2, 4, 6, 24, 72, 73, 99, 114, 115, 116, 197, 212, 256, 257, 258, 262, 263, 278, 289, 295, 297, 301, 302, 304, 312], "overriden": 2, "ignor": [2, 9, 114, 115, 116, 155, 280, 282, 302, 304], "soon": 2, "explicitli": [2, 282, 297, 298], "stai": [2, 26], "vice": 2, "versa": 2, "instanc": [2, 132, 162, 287, 314], "effect": [2, 37, 38, 40, 52, 132, 140, 162, 165, 180, 197, 235, 244, 280, 282, 290, 294, 298, 300, 302, 307, 312, 314], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 24, 25, 26, 27, 29, 30, 31, 34, 36, 39, 40, 42, 47, 50, 52, 60, 63, 74, 76, 77, 79, 83, 84, 85, 86, 87, 88, 100, 104, 130, 131, 139, 145, 147, 152, 157, 161, 165, 166, 168, 172, 173, 174, 175, 176, 178, 187, 190, 195, 197, 198, 201, 211, 212, 213, 214, 215, 221, 225, 229, 235, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 258, 259, 262, 263, 267, 268, 272, 280, 282, 284, 289, 293, 295, 297, 300, 302, 303, 314], "null": [2, 289, 295, 297, 303, 314, 316], "yield": [2, 151, 172], "workflow": [2, 3, 238, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 280, 294, 296, 298, 307, 314], "want": [2, 283, 285, 287, 295, 296, 297, 298, 302, 303, 304, 306], "desir": [2, 263, 264], "subset": [2, 71, 173, 300], "algorithm": [2, 244, 245, 246, 249, 254, 280, 282, 307, 314], "six": 2, "below": [2, 6, 168, 190, 212, 284, 285, 292, 295, 297, 298, 303, 311], "detail": [2, 241, 244, 246, 247, 249, 250, 251, 292, 298, 300, 303, 310, 311, 314, 315], "regard": [2, 298, 303], "subhead": 2, "distribut": [2, 17, 22, 26, 42, 45, 60, 63, 76, 122, 150, 154, 169, 173, 174, 175, 211, 215, 247, 269, 278, 280, 282, 293, 298, 303, 310, 314], "term": [2, 176, 280, 295, 298], "keep": [2, 14, 24, 168, 172, 246, 258, 280, 283, 290, 295, 298], "well": [2, 60, 287, 292, 295, 297, 298, 302, 303, 310, 311, 314, 315], "iov": [2, 26, 42, 107, 120, 140, 166, 247, 280, 282, 302, 310, 314], "explain": [2, 212, 287, 298, 307, 314], "ruv": [2, 187, 282], "power": [2, 37, 197, 212, 282, 298, 302, 307, 308, 310, 311], "vari": [2, 146, 201, 250, 280, 282, 311], "identifi": [2, 6, 31, 287, 289, 295, 298, 310, 314], "option": [2, 6, 9, 14, 18, 26, 37, 40, 42, 49, 74, 76, 83, 84, 86, 87, 88, 172, 212, 235, 258, 262, 263, 273, 278, 280, 282, 287, 295, 297, 298, 300, 302, 303, 315, 316], "reduced_stepwis": [2, 254, 280, 303, 314], "iiv_strategi": [2, 246, 249, 280, 282, 295, 303, 314], "absorption_delai": [2, 249, 280, 303, 314], "rank_typ": [2, 235, 246, 247, 249, 282, 295, 297, 303, 314], "cutoff": [2, 201, 231, 232, 233, 235, 246, 247, 249, 280, 282, 295, 297, 303, 314], "brute_forc": [2, 246, 280, 295], "fullblock": [2, 246, 249, 280, 295, 303], "tri": [2, 282, 303], "list_of_paramet": [2, 40, 42, 247, 282, 297], "random": [2, 3, 13, 17, 18, 22, 26, 42, 52, 60, 63, 77, 79, 120, 124, 127, 140, 173, 174, 175, 280, 282, 290, 293, 297, 302, 310, 316], "group": [2, 25, 31, 151, 152, 172, 250, 282, 296, 311], "p_valu": [2, 250, 282, 311], "05": [2, 45, 53, 54, 55, 56, 64, 65, 66, 67, 169, 244, 250, 278, 282, 287, 301, 302, 310, 311, 312], "skip": [2, 250, 282, 287, 311], "p_forward": [2, 244, 282, 287], "p_backward": [2, 244, 282, 287], "max_step": [2, 244, 282, 287], "scm": [2, 244, 280, 287, 307, 309], "forward": [2, 244, 280, 282, 287, 312], "backward": [2, 244, 256, 280, 282, 287, 312], "variou": [2, 72, 212, 254, 255, 280, 282, 283, 285, 287, 290, 292, 295, 296, 297, 303, 307, 311], "access": [2, 287, 289, 292, 295, 297, 298, 300, 302, 303, 304, 311, 314, 316], "json": [2, 10, 27, 237, 239, 257, 280, 282, 287, 289, 292, 295, 297, 303, 311, 314], "format": [2, 18, 73, 280, 282, 284, 287, 290, 292, 294, 295, 296, 297, 298, 300, 302, 303, 306, 311], "summary_tool": [2, 280, 287, 292, 295, 297, 303, 311], "candid": [2, 249, 280, 282, 287, 292, 311, 314], "compar": [2, 235, 278, 280, 287, 292, 307, 311, 314], "rank": [2, 235, 246, 247, 249, 280, 282, 287, 311], "selected_model": 2, "901": 2, "722667": 2, "iivsearch_run9": 2, "2272": 2, "503332": 2, "best_ruvsearch_2": [2, 311], "time_varying2": [2, 311], "iiv_on_ruv": [2, 280, 308, 310, 311], "2431": 2, "413432": 2, "iovsearch_run2": [2, 297], "2579": 2, "021315": 2, "2590": 2, "360161": 2, "covsearch_run6": [2, 287], "2593": 2, "888704": 2, "dofv": [2, 231, 232, 254, 278, 279, 280, 287, 308, 310, 311], "n_param": [2, 287, 297, 311], "d_param": [2, 287, 297, 311], "1370": 2, "780665": 2, "158": 2, "910100": 2, "147": [2, 6], "607883": 2, "338847": 2, "528542": 2, "modelsearch_run1": [2, 280], "base_model": [2, 235], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "best_ruvsearch_1": [2, 311], "iovsearch_run1": [2, 297], "iovsearch_run3": [2, 297], "iovsearch_run4": [2, 297], "iovsearch_run5": [2, 297], "iovsearch_run6": [2, 297], "iovsearch_run7": [2, 297], "iovsearch_run8": [2, 297], "iovsearch_run9": 2, "iovsearch_run10": 2, "covsearch_run1": [2, 287], "exp": [2, 29, 37, 40, 155, 213, 214, 215, 244, 287, 302, 304], "covsearch_run2": [2, 287], "covsearch_run3": [2, 287], "covsearch_run4": [2, 287], "covsearch_run5": [2, 287], "fals": [2, 6, 9, 13, 14, 17, 18, 22, 24, 25, 27, 31, 35, 37, 39, 47, 59, 69, 71, 78, 81, 89, 92, 93, 94, 109, 113, 119, 125, 126, 129, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 162, 172, 174, 181, 189, 191, 197, 203, 204, 217, 219, 220, 222, 223, 225, 233, 242, 256, 257, 259, 272, 279, 287, 289, 292, 300, 302, 304, 305, 312, 313], "19029": 2, "146679": 2, "2091": 2, "335789": 2, "2278": 2, "645238": 2, "1623": 2, "449423": 2, "2187": 2, "714827": 2, "2155": 2, "309747": 2, "1562": 2, "182445": 2, "1544": 2, "578087": 2, "1927": 2, "724795": 2, "1419": 2, "684985": 2, "2260": 2, "091630": 2, "2256": 2, "222388": 2, "2253": 2, "280037": 2, "2421": 2, "414958": 2, "018856": 2, "816993": 2, "2555": 2, "387421": 2, "817090": 2, "387607": 2, "413326": 2, "2524": 2, "580897": 2, "2556": 2, "106887": 2, "2502": 2, "502532": 2, "2591": 2, "473342": 2, "816184": 2, "112946": 2, "565747": 2, "739920": 2, "63": [2, 96, 118, 301, 302, 308, 310], "30": [2, 61, 96, 101, 116, 233, 278, 279, 287, 292, 295, 297, 298, 299, 301, 302, 303, 308, 310, 313], "15": [2, 61, 84, 96, 101, 116, 233, 278, 279, 287, 295, 297, 298, 299, 301, 302, 312, 313], "06": [2, 53, 55, 56, 65, 66, 278, 287, 295, 297, 301, 310, 312, 314], "21": [2, 61, 83, 86, 96, 101, 116, 233, 278, 279, 287, 292, 293, 299, 301, 302, 308, 310, 313], "82": 2, "77": [2, 287], "27": [2, 61, 96, 101, 116, 118, 233, 278, 279, 287, 295, 297, 299, 301, 302, 303, 311, 313], "80": [2, 215, 287, 301, 308, 310, 311], "02": [2, 287, 310, 312, 314], "37": [2, 61, 96, 101, 103, 116, 147, 199, 233, 278, 279, 287, 289, 299, 301, 302, 313], "45": [2, 61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 313], "18": [2, 6, 61, 84, 96, 101, 116, 233, 278, 279, 287, 295, 297, 299, 301, 302, 308, 310, 313], "85": 2, "73": [2, 118, 301, 302, 311, 314], "31": [2, 61, 83, 86, 96, 101, 116, 118, 233, 278, 279, 287, 299, 301, 302, 308, 310, 313, 314], "17": [2, 61, 83, 84, 86, 87, 96, 99, 101, 116, 118, 147, 199, 233, 278, 279, 287, 289, 295, 297, 298, 299, 301, 302, 303, 308, 310, 313], "60": [2, 96, 287, 298, 302, 308], "28": [2, 61, 83, 86, 87, 96, 101, 116, 212, 233, 278, 279, 287, 295, 298, 299, 301, 302, 310, 313], "84": [2, 231, 232, 255, 295, 297, 303, 312], "39": [2, 61, 96, 101, 116, 233, 278, 279, 287, 297, 299, 301, 302, 310, 311, 312, 313], "98": [2, 278, 287, 293, 295], "38": [2, 61, 83, 86, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 313], "96": [2, 103, 215, 278, 287, 302, 303], "52": [2, 61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 303, 312, 313], "33": [2, 61, 96, 101, 116, 118, 233, 278, 279, 287, 299, 301, 302, 303, 312, 313], "40": [2, 61, 96, 99, 101, 116, 118, 147, 168, 199, 233, 278, 279, 289, 292, 299, 301, 302, 312, 313], "44": [2, 61, 96, 101, 116, 233, 278, 279, 299, 301, 302, 313], "26": [2, 61, 96, 101, 116, 233, 278, 279, 287, 297, 299, 301, 302, 310, 312, 313], "66": [2, 287, 308], "36": [2, 61, 63, 96, 101, 116, 233, 278, 279, 287, 295, 297, 299, 301, 302, 303, 310, 313], "25": [2, 61, 83, 86, 87, 96, 101, 103, 116, 147, 233, 278, 279, 287, 289, 295, 299, 301, 302, 303, 308, 310, 311, 313], "65": [2, 6, 287], "29": [2, 61, 83, 86, 87, 96, 101, 116, 212, 214, 233, 278, 279, 281, 287, 295, 298, 299, 301, 302, 310, 313], "64": [2, 6], "78": 2, "88": 2, "51": [2, 61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 313, 314], "47": [2, 61, 96, 101, 116, 118, 233, 278, 279, 299, 301, 302, 303, 308, 310, 313], "34": [2, 61, 87, 96, 101, 116, 118, 233, 278, 279, 287, 299, 301, 302, 308, 310, 313], "pop_cl_estim": [2, 287, 292, 297, 311], "pop_vc_estim": [2, 287, 292, 297, 311], "0100": 2, "100": [2, 25, 37, 39, 49, 173, 183, 215, 278, 282, 287, 301, 302, 305, 312], "3711": 2, "125": 2, "228": 2, "5771": 2, "115": 2, "287": [2, 308], "8759": 2, "119": 2, "581": 2, "2667": 2, "105": [2, 287, 292, 311], "292": 2, "5775": 2, "127": [2, 6, 295], "060": 2, "1654": 2, "121": [2, 287, 295, 297, 303, 311], "364": 2, "9392": 2, "138": 2, "630": 2, "9500": 2, "923": 2, "9735": 2, "137": 2, "648": [2, 6, 278], "5006": 2, "116": 2, "034": 2, "6326": 2, "112": [2, 118, 287, 295, 297, 301, 302, 303, 308, 310, 311], "423": 2, "5612": 2, "416": 2, "5406": 2, "706": 2, "0598": 2, "151": [2, 83, 84, 86, 87, 88, 308], "9031": 2, "117": 2, "208": 2, "0793": 2, "438": 2, "439": [2, 295], "9253": 2, "887": [2, 280, 295, 297], "1390": 2, "114": 2, "800": [2, 278, 301], "9254": 2, "888": 2, "1388": 2, "9033": 2, "207": [2, 301], "9409": 2, "401": 2, "0197": 2, "635": 2, "1751": 2, "113": [2, 287, 295, 297, 303, 311], "681": 2, "2749": 2, "103": [2, 287, 295], "868": [2, 293, 295], "2141": 2, "935": 2, "5390": 2, "943": 2, "2723": 2, "795": 2, "2760": [2, 287], "837": 2, "2727": 2, "104": [2, 287, 292, 295, 297, 303], "085": 2, "2814": 2, "101": [2, 27, 287], "532": 2, "pop_mat_estim": [2, 287, 292, 297, 311], "010000": 2, "000100": 2, "459155": 2, "260127": 2, "563136": 2, "355314": 2, "386862": 2, "284833": 2, "224547": 2, "206026": 2, "463798": 2, "479941": 2, "486550": 2, "483385": 2, "495219": 2, "493621": 2, "463074": 2, "463102": 2, "495548": 2, "474613": 2, "495482": 2, "474620": 2, "493613": 2, "460720": 2, "468861": 2, "491231": 2, "461770": 2, "461787": 2, "462003": 2, "466555": 2, "427683": 2, "460977": 2, "460855": 2, "omega_iov_1_estim": [2, 297], "omega_iov_2_estim": [2, 297], "000010": [2, 293], "027698": 2, "000001": [2, 53, 55, 56, 60, 63, 65, 66, 297, 301, 303], "017913": 2, "109449": 2, "050657": 2, "110465": 2, "026922": 2, "026926": 2, "026951": 2, "026901": 2, "026857": 2, "026982": 2, "026914": 2, "omega_iov_2_3_estim": 2, "018497": 2, "018498": 2, "063509": 2, "046262": 2, "052580": 2, "017330": 2, "017318": 2, "017368": 2, "017319": 2, "017210": 2, "017372": 2, "017494": 2, "omega_iov_3_estim": [2, 297], "pop_clage_estim": [2, 287], "012352": 2, "012353": 2, "003156": 2, "003153": 2, "036852": 2, "043941": 2, "046134": 2, "011155": 2, "011139": 2, "004026": 2, "011192": 2, "011151": 2, "011028": 2, "011185": 2, "011372": 2, "pop_clsex_estim": [2, 287], "pop_matage_estim": [2, 287], "05079": 2, "016829": 2, "pop_matsex_estim": [2, 287], "pop_vcage_estim": [2, 287], "485722": 2, "002138": 2, "pop_vcsex_estim": [2, 287], "143849": 2, "dbic": [2, 280, 295, 297, 303], "059033": 2, "110": [2, 287, 295, 297, 303, 311], "464112": 2, "329": 2, "468146": 2, "642": [2, 308], "324437": 2, "695": [2, 280], "010496": 2, "712": 2, "614854": 2, "833": 2, "217496": 2, "439014": 2, "972689": 2, "493822": 2, "841931": 2, "134": 2, "736504": 2, "130": [2, 280], "443586": 2, "120": [2, 103, 147, 199, 289, 301, 302], "402996": 2, "683715": 2, "393070": 2, "71": [2, 287, 311], "089100": 2, "886801": 2, "290565": 2, "177358": 2, "205585": 2, "113181": 2, "752785": 2, "summary_error": [2, 287, 292, 295, 297, 303], "summarize_error": [2, 280, 287, 292, 295, 297, 303], "categori": [2, 6, 18, 37, 42, 156, 253, 282, 287, 292, 295, 297, 303, 314], "error_no": [2, 287, 292, 295, 297, 303], "2023": [2, 298], "03": [2, 287, 308, 310, 312], "402": 2, "messag": [2, 261, 280, 282, 287, 292, 295, 297, 303], "NEAR": [2, 297, 303], "ITS": [2, 14, 39, 183, 184, 280, 282, 297, 303], "boundari": [2, 280, 297, 303], "page": [3, 279, 281, 285, 292, 303, 304], "public": [3, 290], "modul": [3, 8, 280, 284, 289, 300, 302, 306, 316], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 289, 294, 298, 300, 302, 314], "relat": [3, 258, 262, 263, 280, 283, 312], "statement": [3, 4, 8, 18, 23, 34, 35, 37, 38, 40, 41, 42, 45, 46, 72, 129, 148, 149, 150, 163, 165, 169, 170, 176, 177, 178, 180, 185, 186, 187, 192, 193, 196, 197, 198, 200, 201, 203, 206, 207, 210, 212, 213, 214, 215, 224, 280, 282, 287, 298, 302, 307], "transform": [3, 18, 35, 154, 176, 178, 181, 198, 212, 213, 214, 215, 280, 282, 294, 304, 310, 315], "manipul": [3, 25, 289, 296, 302, 304, 315], "built": [3, 148, 230, 282, 285, 296], "run": [3, 76, 152, 154, 168, 197, 228, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 262, 266, 278, 279, 280, 288, 294, 296, 298, 299, 301, 306, 307, 310, 312, 313, 316], "packag": [3, 282, 290, 294, 296, 298, 305, 316], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 26, 29, 40, 57, 58, 60, 85, 97, 108, 110, 117, 123, 127, 145, 176, 178, 188, 190, 197, 198, 208, 209, 280, 282, 283, 298, 300, 307, 313], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 283, 285, 296, 298, 300], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 95, 235, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280, 287, 293, 295, 297, 298, 299, 300, 302, 303, 304, 305, 310, 311, 312], "represent": [4, 267, 289, 294, 304], "togeth": [4, 26, 177, 200, 285, 290, 293, 299, 311, 316], "sympi": [4, 6, 8, 17, 22, 26, 29, 34, 60, 85, 104, 117, 127, 128, 130, 131, 139, 145, 176, 178, 187, 188, 190, 197, 198, 201, 208, 290, 300, 307], "str": [4, 6, 7, 8, 10, 17, 18, 22, 24, 26, 27, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 47, 52, 60, 73, 74, 78, 79, 81, 85, 93, 100, 104, 107, 112, 120, 121, 122, 124, 127, 130, 131, 132, 139, 140, 145, 148, 151, 153, 154, 157, 158, 159, 162, 165, 166, 168, 172, 176, 178, 180, 182, 183, 187, 188, 190, 194, 195, 197, 198, 201, 202, 208, 211, 212, 213, 214, 215, 218, 219, 225, 226, 228, 229, 230, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 277, 280], "expr": [4, 9, 26, 29, 34, 38, 117, 145, 180, 188, 208, 209], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 26, 29, 283, 298, 307], "hand": [4, 8, 60], "side": [4, 8, 60, 181], "pop_cl": [4, 302], "eta_cl": [4, 40, 42, 302, 304], "rhs_symbol": [4, 8, 28], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 259, 261, 265, 267], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 259, 261], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 30, 31, 50, 172, 182, 199, 210, 265, 267, 268, 280, 282, 289, 290, 302, 304], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 39, 183, 228, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 267, 280], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29, 300], "substitut": [4, 5, 7, 8, 16, 17, 22, 26, 28, 29, 298, 302], "dict": [4, 5, 6, 10, 16, 17, 22, 25, 26, 29, 49, 62, 83, 84, 86, 87, 88, 92, 94, 97, 109, 110, 154, 171, 189, 191, 199, 204, 220, 258, 259, 262, 263, 264, 266, 267, 273, 289, 300], "old": [4, 29, 171, 280, 310], "new": [4, 6, 9, 10, 14, 17, 22, 24, 25, 26, 29, 30, 35, 40, 42, 46, 47, 73, 77, 78, 89, 92, 93, 94, 171, 172, 176, 178, 187, 189, 190, 194, 197, 198, 219, 220, 223, 268, 269, 282, 283, 285, 289, 298, 302, 303, 306, 310, 311, 314], "pair": [4, 5, 8, 16, 17, 22, 26, 29, 37, 70, 199, 254], "return": [4, 6, 7, 8, 9, 10, 15, 18, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 267, 269, 272, 273, 280, 298, 302], "updat": [4, 9, 10, 18, 25, 29, 188, 208, 222, 223, 225, 280, 282, 285, 296, 298, 302, 303, 304, 307, 311, 315, 316], "b": [4, 298, 303], "to_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 259, 261], "amount": [5, 6, 7, 8, 16, 38, 109, 280, 289, 300], "admid": [5, 6, 7, 8, 9, 16, 29, 33, 45, 72, 95, 98, 129, 148, 169, 177, 185, 186, 192, 193, 196, 200, 203, 206, 207, 210, 300, 302], "dose": [5, 6, 7, 8, 9, 16, 33, 35, 43, 89, 95, 97, 98, 102, 103, 109, 113, 142, 160, 167, 185, 199, 201, 280, 289], "int": [5, 8, 9, 16, 29, 34, 39, 44, 49, 60, 63, 71, 77, 102, 104, 114, 115, 130, 131, 139, 164, 168, 172, 173, 174, 175, 176, 178, 183, 184, 187, 196, 197, 198, 201, 203, 243, 244, 248, 250, 253], "amt": [5, 7, 8, 10, 16, 29, 34, 45, 72, 81, 82, 96, 103, 109, 129, 147, 148, 149, 150, 155, 156, 169, 177, 185, 186, 192, 193, 196, 199, 200, 203, 206, 207, 210, 289, 300, 302, 304], "dictionari": [5, 10, 14, 16, 17, 22, 25, 26, 27, 30, 83, 84, 86, 87, 88, 97, 110, 172, 189, 191, 204, 258, 259, 262, 263, 264, 266, 267, 273, 300], "unknown": [6, 145, 289], "unit": [6, 18, 127], "ratio": [6, 244, 250, 280, 282, 289, 311], "datatyp": [6, 18, 157], "float64": [6, 10, 59, 66, 67, 70, 85, 86, 87, 88, 103, 118, 230, 289, 300, 301, 302], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 265, 267, 280, 302], "colum": 6, "measur": [6, 283, 289, 298], "bool": [6, 9, 18, 24, 27, 31, 34, 35, 37, 47, 59, 69, 71, 78, 81, 89, 109, 113, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 172, 174, 187, 197, 198, 203, 222, 223, 225, 226, 241, 242, 256, 257, 259, 272], "discret": [6, 289, 297], "union": [6, 104, 130, 131, 139, 154, 176, 178, 187, 188, 197, 198, 201, 208], "tupl": [6, 7, 8, 26, 151, 172, 265, 273], "label": [6, 280], "bar": [6, 293], "panda": [6, 10, 280, 289, 290, 307], "dtype": [6, 10, 59, 62, 66, 67, 70, 71, 85, 86, 87, 88, 102, 103, 116, 118, 230, 289, 301, 302], "nomin": [6, 289], "ordin": [6, 289], "rang": [6, 27, 79, 314], "na": [6, 212], "int8": 6, "sign": [6, 214, 298], "bit": 6, "128": 6, "int16": 6, "16": [6, 61, 84, 96, 101, 116, 198, 215, 233, 278, 279, 287, 295, 297, 298, 299, 301, 302, 308, 310, 311, 312, 313], "768": 6, "767": 6, "int32": [6, 10, 289], "483": 6, "647": [6, 278, 295], "int64": [6, 116, 302], "223": [6, 288], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 308], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 85, 102, 147, 199, 289, 301, 302], "073": 6, "709": 6, "551": 6, "615": [6, 308], "float16": 6, "binari": [6, 298], "float": [6, 24, 34, 40, 46, 47, 51, 52, 70, 71, 74, 154, 168, 175, 190, 197, 201, 212, 231, 232, 233, 235, 241, 242, 244, 246, 247, 249, 250, 251, 280], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 82, 216, 280, 282, 300], "tran": [6, 82, 216, 280, 282, 300], "date": [6, 79, 82, 216, 280, 282, 298, 316], "common": [6, 37, 63, 273, 298, 315], "birth": 6, "human": [6, 27, 307], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 289, 307], "concentr": [6, 99, 289, 307], "substanc": 6, "blood": 6, "subject": [6, 14, 96, 106, 255, 289, 298], "uniqu": [6, 31, 50, 78, 172, 258, 269, 280, 282, 302, 314], "pd": [6, 15, 38, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 76, 79, 83, 84, 85, 86, 87, 88, 95, 96, 98, 99, 101, 102, 103, 105, 111, 116, 118, 121, 151, 152, 153, 154, 157, 172, 173, 174, 175, 180, 222, 223, 231, 232, 233, 235, 253, 254, 255, 256, 261, 280, 289], "interv": [6, 289, 290], "ration": 6, "max": [6, 37, 38, 180, 192, 193, 278, 302], "datafram": [6, 15, 18, 25, 27, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 76, 79, 83, 84, 86, 87, 88, 96, 99, 101, 151, 152, 154, 157, 172, 173, 174, 175, 222, 231, 232, 233, 235, 253, 254, 255, 256, 261, 280, 289, 307], "idv": [6, 10, 201, 289, 310], "independ": [6, 8, 289, 298, 300, 302, 305, 310, 314], "dv": [6, 10, 29, 72, 81, 82, 96, 104, 118, 129, 130, 131, 139, 147, 148, 152, 155, 156, 159, 176, 178, 187, 190, 192, 193, 197, 198, 199, 201, 212, 250, 280, 289, 300, 302, 304, 313], "dvid": [6, 18, 44, 104, 130, 131, 139, 176, 178, 182, 187, 197, 198, 201, 300, 308, 310, 311], "infus": [6, 142, 200, 206, 280, 302], "addit": [6, 37, 40, 49, 78, 89, 130, 131, 139, 141, 176, 178, 198, 212, 280, 282, 287, 289, 292, 298, 310, 311, 314], "interdos": 6, "ss": 6, "steadi": [6, 280], "state": [6, 25, 37, 280, 298, 312], "event": [6, 33, 95, 105, 199, 216, 280, 283, 298], "mdv": [6, 111, 280], "miss": [6, 96, 101, 280], "yet": [6, 314], "exactli": 6, "lloq": [6, 168, 190, 212, 242, 280, 282, 302], "blq": [6, 168, 190, 212, 250, 280], "unkown": 6, "hasn": 6, "custom": [6, 37, 40, 42, 187, 282, 298, 307], "physic": [6, 127, 283, 289, 298], "recogn": [6, 195, 283, 298, 304], "without": [6, 9, 57, 58, 83, 84, 86, 87, 88, 108, 117, 123, 172, 260, 278, 280, 282, 285, 290, 298, 300], "static": [6, 10, 18, 265], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 26, 27, 29, 32, 73, 129, 150, 203, 280, 282, 314], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 24, 26, 69, 70, 71, 104, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 280, 300, 302, 304, 314, 316], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 280, 282, 307], "properti": [6, 14, 17, 22, 24, 25, 30, 298, 300], "lag_tim": [7, 9, 280], "bioavail": [7, 9, 35, 97, 160, 280, 314], "compartment": [7, 8, 32, 280, 282, 300], "system": [7, 8, 9, 14, 23, 29, 32, 57, 58, 60, 80, 83, 84, 86, 87, 88, 108, 109, 117, 123, 134, 135, 138, 142, 188, 208, 210, 262, 280, 282, 284, 285, 296, 298, 300, 304], "lag": [7, 9, 43, 110, 167, 280], "enter": [7, 298], "fraction": [7, 175, 278, 293], "bolu": [7, 8, 29, 45, 72, 129, 148, 169, 177, 185, 186, 192, 193, 196, 203, 207, 210, 280, 282, 300, 302], "comp": [7, 8, 280], "a_centr": [7, 8, 29, 38, 72, 80, 109, 129, 148, 180, 188, 192, 193, 198, 207, 300, 302], "depot": [7, 8, 9, 185, 200, 203, 280, 302, 314], "alag": [7, 280], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 314], "builder": [8, 9, 267, 268], "graph": [8, 267, 282, 285], "odesystem": [8, 29, 280, 300], "od": [8, 14, 23, 29, 32, 46, 57, 58, 60, 83, 84, 86, 87, 88, 108, 109, 117, 123, 134, 135, 138, 142, 188, 195, 208, 210, 280, 282], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 203, 314], "k21": [8, 314], "vector": [8, 17, 128, 173, 174, 175, 279, 293, 300], "load_example_model": [8, 10, 15, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 233, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 280, 294, 301, 302], "pprint": [8, 117], "ode_system": [8, 29, 38, 45, 169, 177, 185, 186, 192, 193, 196, 200, 203, 206, 207, 210, 280, 300, 302], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 45, 267, 298], "compartment_nam": 8, "compartmental_matrix": [8, 300], "matrix": [8, 14, 17, 26, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 70, 128, 173, 174, 175, 208, 279, 280, 282, 293, 300, 302], "set_first_order_absorpt": [8, 46, 177, 200, 206, 280, 302], "dosing_compart": 8, "receiv": [8, 298], "equat": [8, 60, 80, 300, 302], "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 9, 71, 128, 142, 143, 150, 188, 200, 206, 207, 208, 280, 297, 302, 303, 305, 314], "set_zero_order_absorpt": [8, 177, 185, 200, 280, 302, 316], "atom": 8, "http": [8, 279, 289, 290, 293, 294, 298, 311], "doc": [8, 285], "org": [8, 279, 281, 289, 293, 298, 311], "latest": [8, 280, 290, 294], "core": [8, 294, 300], "html": [8, 227, 290, 298], "basic": [8, 27, 74, 75, 280, 289, 298, 304, 314, 315], "find_compart": [8, 9, 38], "its": [8, 24, 29, 71, 79, 150, 254, 280, 282, 289, 290, 294, 296, 298, 300, 302, 316], "found": [8, 25, 253, 268, 278, 279, 280, 285, 288, 291, 293, 294, 295, 297, 298, 300, 301, 303, 310, 311, 314, 315, 316], "find_depot": 8, "out": [8, 26, 69, 223, 280, 298, 300, 306, 316], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 24, 26, 211, 216, 229, 248, 253, 256, 258, 280, 282, 290, 293, 298, 314], "distinguish": [8, 298], "get_bidirect": 8, "bidirect": 8, "interest": [8, 60, 283, 287, 298, 307], "get_compartment_inflow": 8, "go": [8, 130, 131, 139, 248, 256, 280, 289, 298, 302], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 225, 226, 258, 262, 263, 282], "ka": [8, 9, 41, 185, 200, 280, 297, 302], "get_n_connect": 8, "connect": [8, 18, 197, 258, 260, 268, 280, 282, 289, 298, 307, 314, 315], "compartmentalsystem": [9, 280], "newli": [9, 26, 297], "move_dos": 9, "move": [9, 223, 280], "anoth": [9, 18, 29, 269, 302], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 160], "set_dos": 9, "previou": [9, 24, 26, 29, 43, 76, 102, 129, 185, 200, 203, 206, 242, 255, 272, 280, 282, 298, 303], "exist": [9, 10, 29, 37, 49, 50, 75, 78, 100, 102, 258, 259, 260, 280, 282, 284, 289, 297, 314], "argument": [9, 39, 83, 84, 86, 87, 88, 183, 228, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 265, 280, 282, 314, 316], "set_input": 9, "set_lag_tim": [9, 280], "force_absolute_path": 10, "sequenc": [10, 15, 25, 26, 29, 76], "metadata": [10, 258, 259, 262, 263, 264, 266, 280], "index": [10, 18, 25, 26, 27, 29, 39, 49, 60, 63, 70, 71, 103, 118, 164, 183, 184, 253, 256, 279, 280, 293, 294, 300, 302, 312, 316], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 79], "idv_column": 10, "apgr": [10, 29, 34, 37, 72, 81, 82, 96, 101, 113, 129, 132, 147, 148, 149, 150, 155, 156, 199, 218, 289, 293, 300, 302, 304, 310], "fa1": [10, 81, 82, 96, 147, 155, 156, 199, 289, 302], "fa2": [10, 81, 82, 96, 147, 155, 156, 199, 289, 302], "example_model": 10, "dta": [10, 155, 289, 302, 304], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 280, 298, 302, 316], "read_json": 10, "read": [10, 157, 158, 159, 236, 237, 242, 257, 258, 259, 262, 263, 264, 266, 280, 284, 289, 294, 298, 301, 306, 307, 309, 314, 315], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 27, 289], "recover": 12, "issu": [12, 21, 280, 285, 296, 316], "hashabl": 13, "level": [13, 17, 22, 26, 30, 31, 107, 140, 212, 280, 282, 289, 296, 302, 307, 312, 314, 315], "variabilitylevel": 13, "parameter_nam": [13, 26, 93, 217, 219, 280, 304], "definit": [13, 14, 18, 29, 61, 174, 175, 233, 280, 282, 287, 293, 298, 300, 314], "varianc": [13, 17, 22, 26, 59, 60, 63, 187, 223, 295, 300, 314], "abstract": [13, 23, 28, 262, 266, 279, 281, 290, 296, 300], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 26], "name1": [13, 17, 22, 153], "name2": [13, 17, 22, 153], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 300, 302], "cov": [14, 15, 26, 36, 37, 39, 53, 60, 61, 63, 65, 66, 161, 174, 183, 184, 245, 279, 280, 285, 292, 293, 300, 302], "evalu": [14, 39, 83, 84, 85, 86, 87, 88, 183, 184, 245, 256, 278, 280, 296, 300, 302, 307, 310, 313], "maximum_evalu": [14, 292, 300, 302], "laplac": [14, 39, 183, 184, 280, 282, 292, 300, 302], "isampl": [14, 39, 49, 183, 280, 292, 300, 302], "niter": [14, 39, 49, 183, 280, 292, 300, 302], "auto": [14, 15, 280, 292, 300, 302], "keep_every_nth_it": [14, 15, 280, 292, 300, 302], "residu": [14, 26, 88, 125, 232, 233, 254, 280, 311, 313, 314], "solver": [14, 195, 245, 280, 282, 314], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 39, 49, 183, 300, 302, 314], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 37, 40, 73, 79, 263, 264, 282, 284, 285, 287, 290, 298, 300, 302, 306], "uncertainti": [14, 60, 61, 63, 173, 174, 175, 280, 282, 293, 301], "sandwich": [14, 15, 36, 183, 184, 300], "cross": [14, 298], "product": [14, 283, 292, 298], "gradient": [14, 57, 58, 83, 84, 280], "fim": 14, "epsilon": [14, 26, 57, 58, 83, 84, 156, 187, 197, 205, 212, 224, 280, 282, 290, 302], "calcul": [14, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 85, 99, 235, 278, 279, 280, 293, 295, 296, 297, 303], "deriv": [14, 127, 280, 285, 287, 302], "eta": [14, 26, 29, 40, 42, 57, 58, 59, 61, 76, 83, 84, 86, 150, 154, 155, 156, 159, 165, 166, 187, 211, 213, 214, 215, 280, 282, 290, 293, 295, 297, 300, 304, 310, 314], "preserv": [14, 26, 298], "comput": [14, 285, 286, 287, 298], "sampl": [14, 26, 77, 172, 173, 174, 175, 293], "similar": [14, 278, 292, 298, 303, 311], "em": 14, "result": [14, 18, 26, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 76, 83, 84, 85, 86, 87, 88, 173, 174, 175, 222, 223, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 266, 269, 272, 280, 283, 285, 296, 298, 304, 306, 307, 309, 315], "everi": [14, 289, 298], "nth": 14, "iter": [14, 15, 29, 60, 151, 172, 174, 250, 280, 302, 308, 311], "laplacian": 14, "solv": [14, 280], "advan": [14, 195, 280, 302], "cvode": [14, 195, 282], "advan14": [14, 195, 282], "dgear": [14, 195, 282], "advan8": [14, 195, 282], "dverk": [14, 195, 282], "advan6": [14, 195, 282], "ida": [14, 195, 282], "advan15": [14, 195, 282], "lsoda": [14, 195, 282, 292], "advan13": [14, 195, 282, 302], "lsodi": [14, 195, 282, 292], "advan9": [14, 195, 282], "absolut": [14, 70, 280, 298], "toler": 14, "supported_cov": 14, "frozenset": 14, "cpg": 14, "ofim": 14, "supported_method": [14, 292], "bay": [14, 183, 184, 282], "imp": [14, 39, 183, 184, 245, 280, 282, 292, 302], "impmap": [14, 39, 183, 184, 280, 282], "saem": [14, 39, 183, 184, 245, 280, 282], "supported_solv": [14, 292], "to_datafram": [15, 25, 261], "overview": [15, 261, 278, 282, 291, 300, 312], "estimation_step": [15, 18, 36, 39, 49, 161, 164, 183, 184, 280, 300, 302], "doctest": 15, "ellipsi": 15, "durat": [16, 200, 206, 302], "mutual": [16, 297, 314], "exclus": [16, 298, 314], "d1": [16, 200, 206, 280, 302], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 26, 42, 76, 211, 293, 297, 302], "omega_cl": [17, 22, 26], "omega_v": [17, 26], "corr_cl_v": [17, 26], "omega_cl_v": [17, 26], "dist": [17, 22, 26, 280, 285, 300], "iiv_cl": [17, 22, 26, 302, 304], "iiv_v": [17, 26], "itself": [17, 22, 298], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 26], "random_vari": [18, 76, 211, 300, 302, 316], "dependent_vari": [18, 280, 300], "y": [18, 25, 29, 72, 104, 127, 129, 148, 155, 156, 159, 163, 176, 178, 187, 197, 198, 201, 212, 224, 300, 302, 304], "observation_transform": [18, 280], "estimationstep": [18, 36, 39, 161, 183, 184, 280, 292, 300], "modelfit_result": [18, 233, 256, 280], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 280, 285, 300, 304, 307], "map": [18, 32, 289], "discript": 18, "extens": [18, 258, 260, 289, 298, 300], "model_cod": [18, 280], "modelfit": [18, 230, 248, 256, 258, 262, 263, 278, 280, 282, 315], "parent": [18, 254, 255, 269, 292], "randomvari": [18, 280, 300], "likelihood": [18, 51, 52, 244, 250, 282, 311], "2ll": [18, 51, 52, 280], "log": [18, 37, 38, 40, 52, 150, 176, 178, 180, 181, 198, 280, 289, 293], "record": [18, 83, 84, 85, 86, 87, 88, 89, 151, 168, 190, 280, 285, 304], "would": [18, 31, 150, 278, 287, 293, 298, 302, 304, 307], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 280, 296, 304, 306, 314], "parse_model_from_str": 18, "update_sourc": [18, 280, 304], "g": [18, 26, 72, 78, 166, 249, 280, 285, 289, 292, 293, 295, 297, 303, 307, 311, 314], "dummypath": [18, 302], "write_fil": 18, "forc": [18, 26, 78, 174, 175, 222, 225, 226, 280, 282, 297, 298], "write": [18, 225, 226, 257, 280, 285, 287, 298, 306, 315], "extern": [18, 236, 285, 289, 290, 294, 306, 307], "msg": 20, "syntax": [20, 314], "normal": [22, 26, 31, 42, 62, 68, 150, 293, 297, 298], "init": [24, 25, 37, 47, 94, 189, 220, 223, 282, 293, 300], "inf": [24, 302], "param": [24, 282], "tvcl": [24, 29, 34, 40, 42, 72, 85, 129, 148, 149, 150, 155, 156, 165, 278, 293, 300, 302, 304], "005": 24, "boolean": [24, 25, 89, 93, 94, 172, 181, 187, 219, 220, 231, 232, 233, 289], "constrain": [24, 290, 300], "unfix": [24, 92, 93, 94, 189, 217, 219, 220, 280], "back": [24, 68, 280], "less": 24, "greater": 24, "altern": [24, 214, 285, 298], "constructor": [24, 280], "collect": [25, 26, 293, 298, 314], "usual": [25, 285], "wai": [25, 133, 136, 137, 143, 212, 285, 289, 292, 298, 300, 314, 316], "displai": [25, 80, 176, 293, 298], "summar": [25, 253, 255, 256, 293, 299], "par1": 25, "par2": 25, "pset": 25, "fixed": [25, 92], "nonfix": 25, "set_fix": 25, "set_initial_estim": [25, 280, 302], "eta_level": 26, "epsilon_level": 26, "act": [26, 182], "while": [26, 285, 302, 314, 316], "variabilityhierarchi": 26, "contin": 26, "hierarchi": [26, 30], "rv": [26, 76, 124, 170, 211, 300, 316], "normaldistribut": [26, 300], "covariance_matrix": [26, 53, 60, 63, 65, 66, 174, 278, 280, 301], "nrv": 26, "variance_paramet": 26, "rv1": 26, "rv2": 26, "get_rvs_with_same_dist": 26, "join": [26, 211, 280, 283], "ind": 26, "fill": 26, "name_templ": 26, "param_nam": 26, "taken": [26, 89, 96, 101, 216, 258, 289, 293], "remain": [26, 283, 298], "templat": [26, 37, 40, 75, 284], "overrid": [26, 280, 284, 314], "dist1": 26, "dist2": 26, "_": [26, 255, 279, 293], "unjoin": 26, "nearest_valid_paramet": 26, "parameter_valu": 26, "small": 26, "parameters_sdcorr": 26, "sd": [26, 59, 302, 310, 313], "corr": [26, 55, 64, 310], "assum": [26, 44, 258, 280, 293, 298, 304], "var": [26, 61, 293], "replace_with_sympy_rv": 26, "stat": [26, 29, 314], "std": [26, 302], "rng": [26, 60, 63, 77, 173, 174, 175], "jointnormaldistribut": [26, 300], "validate_paramet": 26, "seri": [26, 55, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 85, 86, 87, 88, 95, 98, 102, 103, 105, 111, 116, 118, 153, 154, 174, 175, 176, 214, 223, 280, 301], "matric": [26, 61, 175, 280, 290, 301], "semidefinit": [26, 280, 290], "use_cach": 26, "symengin": [26, 290, 307], "cach": 26, "__version__": 27, "get_and_reset_index": 27, "attr": 27, "wrapper": [27, 280, 285, 290, 294, 316], "reset": [27, 216, 280], "facilit": 27, "multiindex": [27, 280], "to_csv": 27, "save": [27, 257, 267, 280], "readabl": [27, 260, 262, 289, 298, 307], "print": [27, 69, 155, 156, 234, 280, 302], "lzma": [27, 257], "serial": [27, 280, 289, 307], "compress": [27, 257], "unless": [27, 29, 298], "signific": [29, 71, 246, 247, 249, 280, 298, 312], "after_od": [29, 198], "s\u2081": [29, 34, 72, 129, 148, 149, 150, 156, 198, 300], "eps\u2081": [29, 72, 117, 129, 148, 156, 163, 176, 187, 197, 201, 212, 224, 300], "ipr": [29, 72, 86, 129, 148, 155, 156, 197, 198, 280, 300, 301, 302, 313], "ir": [29, 72, 129, 148, 155, 156, 198, 300, 302], "iwr": [29, 72, 129, 148, 155, 156, 198, 300, 302], "before_od": [29, 34, 37, 149, 150, 213, 214, 215], "btime": [29, 34, 72, 129, 148, 149, 150, 155, 156, 300, 302], "tad": [29, 34, 48, 72, 129, 148, 149, 150, 155, 156, 280, 300, 302, 310], "ptvcl": [29, 34, 37, 47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 92, 93, 94, 126, 129, 148, 149, 150, 155, 156, 174, 175, 189, 191, 204, 209, 213, 214, 215, 217, 219, 220, 223, 230, 300, 301, 302], "tvv": [29, 34, 72, 129, 148, 149, 150, 155, 156, 165, 278, 293, 300, 302, 304], "ptvv": [29, 34, 47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 126, 129, 148, 149, 150, 155, 156, 174, 175, 219, 220, 223, 230, 300, 301, 302], "theta\u2083": [29, 34, 72, 129, 148, 149, 150, 156, 300], "eta\u2081": [29, 34, 72, 76, 117, 129, 148, 149, 150, 156, 211, 300], "\u212f": [29, 34, 46, 72, 129, 148, 149, 150, 187, 300, 302], "eta\u2082": [29, 34, 72, 76, 117, 129, 148, 149, 150, 156, 211, 300], "whole": [29, 282, 289, 298, 314], "s1": [29, 140, 155, 302, 304], "symbol_or_stat": 29, "direct_depend": 29, "direct": [29, 267, 287, 298, 312], "find_assign": [29, 40, 41, 42, 46, 163, 165, 176, 178, 180, 187, 197, 201, 212, 224], "find_assignment_index": 29, "full_express": [29, 37, 213, 214, 215], "expand": [29, 89], "full": [29, 76, 108, 117, 123, 202, 279, 280, 282, 284, 293, 297, 298, 303, 310], "eta_1": [29, 37, 57, 59, 61, 76, 108, 120, 124, 150, 173, 211, 213, 214, 215, 293, 300, 301, 302], "reassign": 29, "sypmpi": 29, "remove_symbol_definit": 29, "elsewher": 29, "longer": [29, 280], "make": [29, 72, 149, 163, 171, 172, 244, 280, 285, 290, 297, 298, 300, 303, 314, 316], "sure": [29, 171, 280, 298, 303, 316], "func": [32, 265], "presenc": [33, 95, 98], "correctli": [33, 95, 280], "get_admid": 33, "get_cmt": [33, 280, 302], "p": [34, 235, 244, 250, 278, 279, 280, 282, 287, 293, 302, 311, 312], "allometri": [34, 241, 242, 280, 314], "allo_cl": 34, "allo_v": 34, "add_paramet": [35, 280], "logit_transform": 35, "logit": [35, 40, 280], "remove_bioavail": [35, 280], "set_estimation_step": [36, 39, 49, 161, 164, 184, 280, 302, 316], "add_estimation_step": [36, 49, 161, 164, 183, 184, 280, 302], "remove_estimation_step": [36, 39, 49, 161, 183, 184, 302], "append_estimation_step_opt": [36, 39, 161, 164, 183, 184, 280, 302], "remove_covariance_step": [36, 39, 49, 164, 183, 184, 280, 302], "set_evaluation_step": [36, 39, 49, 161, 164, 183, 302], "allow_nest": [37, 280], "linear": [37, 38, 121, 134, 135, 144, 180, 278, 279, 280, 290, 300, 302, 307, 309], "lin": 37, "coveff": [37, 78], "median": [37, 60, 63, 278, 280, 302, 307], "001": [37, 71, 223, 302, 312], "equal": [37, 42, 172, 187, 282, 285], "minimum": [37, 290], "000": [37, 301], "frac": [37, 38, 176, 178, 180, 279, 300, 302, 313], "min": [37, 176, 178, 278, 302], "piecewis": [37, 280], "hockei": 37, "stick": 37, "piece_lin": 37, "theta1": [37, 302], "theta2": [37, 302], "pow": [37, 302], "mai": [37, 295, 297, 298, 302, 303, 314], "abbrevi": [37, 40, 280, 282, 285, 304], "multipli": [37, 40, 187, 278, 282, 302], "alreadi": [37, 75, 182, 188, 208, 280, 282, 285, 297, 298], "pop_clapgr": 37, "implement": [38, 180, 258, 260, 262, 263, 298, 300, 307, 314], "baselin": [38, 96, 101, 146, 180, 280, 293], "e_0": [38, 180], "slope": [38, 121, 180], "cdot": [38, 45, 169, 180, 293, 300, 302], "emax": [38, 180], "e_": [38, 180], "ec_": [38, 180], "50": [38, 61, 96, 101, 116, 180, 233, 278, 279, 299, 301, 302, 303, 308, 310, 313], "biggl": [38, 180], "lbrace": [38, 180], "quad": [38, 180], "leq": [38, 180, 293], "atop": [38, 180], "els": [38, 69, 180, 280, 302], "sigmoid": [38, 180], "c_0": [38, 180], "loglin": [38, 180], "a_effect": 38, "ke0": 38, "idx": [39, 49, 164, 183, 184, 316], "pass": [39, 77, 183, 228, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 269, 298], "opt": [39, 49, 183, 284], "1000": [39, 49, 85, 183, 293], "len": [39, 49, 164, 168], "add_covariance_step": [39, 49, 161, 164, 183, 184, 280, 302], "initial_estim": [40, 46], "09": [40, 46, 178, 187, 198, 287, 295, 302, 303, 304, 308], "eta_nam": [40, 42, 187, 282], "prop": [40, 302], "rescal": 40, "re_log": 40, "user": [40, 100, 280, 289, 290, 295, 297, 298, 300, 301, 302, 303, 304], "remove_iiv": [40, 42, 46, 166, 280, 302, 304], "add_pk_iiv": [40, 42, 165, 166, 280, 302, 303], "add_iov": [40, 46, 165, 166, 280, 302], "remove_iov": [40, 42, 46, 165, 280, 302], "pop_ka": [41, 47], "occ": [42, 247, 282, 287, 297], "disjoint": [42, 297], "accept": [42, 114, 115, 116, 282, 298], "explicit": [42, 280, 282, 283, 297, 314], "copi": [42, 119, 125, 126, 280, 295, 297, 298, 302, 314], "add_iiv": [42, 46, 165, 166, 280, 302, 304], "set_transit_compart": [43, 167, 280, 302], "remove_lag_tim": [43, 280, 302], "drug_dvid": 44, "metabolit": 44, "unidirect": 44, "drug": [44, 202, 307], "parameter": 45, "qpn": 45, "vpn": 45, "volumn": 45, "mathsf": [45, 169], "qp1": [45, 169, 280, 302], "vp1": [45, 169, 302], "qp2": [45, 169, 280], "vp2": [45, 169], "peripheral1": [45, 169, 196, 302], "v1": [45, 169, 196, 302], "v2": [45, 169, 196, 302], "set_peripheral_compart": [45, 169, 280, 302], "remove_peripheral_compart": [45, 196, 280, 302], "Will": [46, 258, 259, 260], "pop_mat": [46, 302, 304], "eta_mat": [46, 302], "004693": [47, 62, 126, 293, 300], "1000000": [47, 92, 93, 94, 126, 189, 191, 217, 220, 300], "009160": [47, 126, 300], "theta_3": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 126, 174, 175, 219, 220, 223, 230, 300, 301, 302], "100000": [47, 126, 292, 300, 302], "99": [47, 126, 155, 223, 278, 287, 300, 302], "ivcl": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 76, 119, 155, 156, 174, 175, 211, 220, 223, 230, 278, 293, 300, 301, 302, 304], "030963": [47, 119, 293, 300], "ivv": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 76, 119, 155, 156, 174, 175, 211, 220, 223, 230, 278, 293, 300, 301, 302], "031128": [47, 119, 155, 223, 293, 300, 302, 304], "sigma_1_1": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 71, 125, 174, 175, 220, 223, 230, 300, 301, 302], "013241": [47, 125, 155, 223, 230, 293, 300, 301, 302], "append": [49, 280], "increas": [50, 285], "until": [50, 256, 298, 316], "do": [50, 174, 278, 280, 282, 285, 293, 298, 304, 311, 316], "noth": [50, 168, 212, 298], "next": [50, 280, 298, 302, 303, 304, 311], "run2": [50, 194, 302], "run3": [50, 302], "n_estimated_paramet": [51, 52], "fit": [51, 52, 154, 212, 234, 248, 254, 256, 262, 280, 298, 300, 302, 311, 315, 316], "variat": 52, "n_random_paramet": 52, "n_individu": 52, "n_fixed_paramet": 52, "n_observ": 52, "n_individ": 52, "n_estimated_iiv_omega_paramet": 52, "load_example_modelfit_result": [52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 83, 84, 85, 86, 87, 88, 173, 174, 175, 222, 223, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 280], "611": 52, "7071686183284": 52, "616": [52, 280, 301], "536606983396": 52, "610": 52, "7412809453149": 52, "594": 52, "431131169692": 52, "411510e": [53, 56, 65, 66, 301], "08": [53, 55, 56, 65, 66, 287, 301], "010000e": [53, 56, 65, 66, 301], "000002": [53, 55, 56, 65, 66, 301], "538630e": [53, 55, 56, 65, 66, 301], "07": [53, 54, 55, 56, 64, 65, 66, 67, 278, 287, 295, 297, 301, 310, 312], "178090e": [53, 56, 65, 66, 301], "233530e": [53, 56, 65, 66, 301], "04": [53, 54, 55, 56, 64, 65, 66, 67, 278, 287, 297, 301, 310, 312], "000804": [53, 55, 56, 65, 66, 287, 301], "000050": [53, 55, 56, 65, 66, 278, 301], "171840e": [53, 56, 65, 66, 301], "461760e": [53, 56, 65, 66, 301], "665010e": [53, 56, 65, 66, 301], "040250e": [53, 56, 65, 66, 301], "007016": [53, 55, 56, 65, 66, 301], "000108": [53, 55, 56, 65, 66, 301], "944800e": [53, 56, 65, 66, 301], "932950e": [53, 56, 65, 66, 301], "093430e": [53, 56, 65, 66, 301], "981380e": [53, 55, 56, 65, 66, 301], "000180": [53, 55, 56, 65, 66, 301], "856650e": [53, 56, 65, 66, 301], "867230e": [53, 56, 65, 66, 301], "000039": [53, 55, 56, 65, 66, 301], "000019": [53, 55, 56, 65, 66, 301], "589820e": [53, 55, 56, 65, 66, 301], "685650e": [53, 56, 65, 66, 301], "000029": [53, 55, 56, 65, 66, 301], "000005": [53, 55, 56, 65, 66, 301], "195640e": [53, 56, 65, 66, 301], "007099": [53, 54, 55, 64, 301], "094640": [53, 54, 55, 64, 301], "388059": [53, 54, 55, 64, 70], "097981": [53, 54, 55, 64, 301], "170820": [53, 54, 55, 64, 301], "356899": [53, 54, 55, 64, 70], "138062": [53, 54, 55, 64, 301], "356662": [53, 54, 55, 64, 70, 301], "238441": [53, 54, 55, 64], "096515": [53, 54, 55, 64], "062991": [53, 54, 55, 64, 301], "153616": [53, 54, 55, 64, 301], "185111": [53, 54, 55, 64, 301], "159170": [53, 54, 55, 64, 301], "027495": [53, 54, 55, 64, 301], "calculate_se_from_cov": [53, 54, 55, 56, 64, 65, 67, 280], "calculate_se_from_prec": [53, 54, 55, 56, 64, 65, 66], "precis": [53, 54, 55, 56, 64, 65, 66, 67, 280, 298], "calculate_cov_from_prec": [53, 54, 55, 64, 65, 66, 67], "calculate_cov_from_corrs": [53, 54, 56, 64, 65, 66, 67, 280], "calculate_prec_from_cov": [53, 54, 55, 56, 64, 66, 67], "calculate_prec_from_corrs": [53, 54, 55, 56, 65, 66, 67], "calculate_corr_from_prec": [53, 55, 56, 64, 65, 66, 67], "precision_matrix": [54, 56, 67, 301], "prec": [54, 56, 67], "995567e": [54, 56, 65, 67], "22660": [54, 56, 64, 65, 67, 301], "028196": [54, 56, 65, 67], "16057": [54, 56, 64, 65, 67, 301], "855248": [54, 56, 65, 67], "203511": [54, 56, 64, 65, 67, 301], "614428": [54, 56, 65, 67], "39474": [54, 56, 64, 65, 67, 301], "250514": [54, 56, 65, 67], "820118": [54, 56, 65, 67], "299536": [54, 56, 65, 67], "266003e": [54, 56, 65, 67], "2129": [54, 56, 64, 65, 67, 301], "904642": [54, 56, 65, 67], "260": [54, 56, 64, 65, 67, 301], "176234": [54, 56, 65, 67], "375": [54, 56, 64, 65, 67, 301], "266233": [54, 56, 65, 67], "2800": [54, 56, 64, 65, 67, 301], "816246": [54, 56, 65, 67], "7718": [54, 56, 64, 65, 67, 301], "769557": [54, 56, 65, 67], "605786e": [54, 56, 65, 67], "187": [54, 56, 64, 65, 67, 301], "038903": [54, 56, 65, 67], "177": [54, 56, 64, 65, 67, 280, 301, 312], "207683": [54, 56, 65, 67], "205": [54, 56, 64, 65, 67, 301], "808480": [54, 56, 65, 67], "2225": [54, 56, 64, 65, 67, 301], "150449": [54, 56, 65, 67], "035116e": [54, 56, 65, 67], "7527": [54, 56, 64, 65, 67, 301], "530027": [54, 56, 65, 67], "2462": [54, 56, 64, 65, 67, 301], "974821": [54, 56, 65, 67], "9977": [54, 56, 64, 65, 67, 301], "488860": [54, 56, 65, 67], "947425e": [54, 56, 65, 67], "22343": [54, 56, 64, 65, 67, 301], "198618": [54, 56, 65, 67], "9370": [54, 56, 64, 65, 67, 301], "758371": [54, 56, 65, 67], "201183e": [54, 56, 65, 67], "249847": [54, 56, 65, 67, 301], "177845": [54, 56, 65, 67], "calculate_corr_from_cov": [54, 55, 56, 64, 65, 66, 67, 280], "se": [55, 64, 286, 287, 301], "correlation_matrix": [55, 64, 70, 301], "standard_error": [55, 64, 301], "411512e": 55, "009998e": 55, "178111e": 55, "233518e": 55, "171834e": 55, "461762e": 55, "665011e": 55, "040245e": 55, "944801e": 55, "932957e": 55, "093431e": 55, "856651e": 55, "867245e": 55, "685661e": 55, "195664e": 55, "pheno_linear": [57, 58, 83, 84, 86, 87, 88, 108, 117, 123, 144, 148, 230, 235], "d_eps1": [57, 117], "d_epseta1_1": [57, 117], "oeta1": [57, 108, 123], "d_epseta1_2": [57, 117], "eta_2": [57, 59, 61, 76, 108, 173, 211, 301, 302], "oeta2": [57, 108, 123], "calculate_eta_gradient_express": [57, 280], "d_eta1": [58, 108, 117, 123], "d_eta2": [58, 108, 117, 123], "calculate_epsilon_gradient_express": [58, 280], "parameter_estim": [59, 60, 61, 63, 71, 85, 87, 88, 154, 174, 175, 223, 230, 278, 280, 300, 301], "individual_estim": [59, 76, 83, 84, 86, 154, 173, 222, 280, 301], "shrinkag": [59, 61], "deviat": [59, 224, 278, 293, 299, 301, 302, 310, 313], "pe": [59, 60, 61, 63, 85, 87, 174, 175], "ie": [59, 173, 222], "720481": 59, "240295": 59, "471305": 59, "128389": 59, "calculate_individual_shrinkag": [59, 280], "expr_or_expr": 60, "expect": [60, 63, 283, 284, 298, 310], "arbitrari": [60, 63], "solut": [60, 210], "th": [60, 279, 293], "95": [60, 278, 293], "percentil": [60, 278, 293], "previous": [60, 63, 152, 154, 280, 304], "seed": [60, 63, 77, 173, 175, 282], "create_rng": [60, 63, 173, 174, 175], "k": [60, 279, 280, 285, 287, 293], "stderr": [60, 63, 278, 314], "p5": [60, 63, 293], "004234": [60, 63], "001138": [60, 63], "004907": [60, 63], "001247": [60, 63], "p95": [60, 63, 293], "individual_estimates_covari": [61, 173, 280, 301], "ieta_shr": 61, "847789": 61, "256473": 61, "796643": 61, "210669": 61, "755025": 61, "226957": 61, "764541": 61, "216405": 61, "816192": 61, "203974": 61, "778108": 61, "210992": 61, "659420": 61, "236875": 61, "668551": 61, "240097": 61, "260056": 61, "200374": 61, "725190": 61, "226563": 61, "972110": 61, "421852": 61, "249640": 61, "254119": 61, "730294": 61, "364932": 61, "165785": 61, "194464": 61, "813399": 61, "313554": 61, "797328": 61, "213211": 61, "769059": 61, "278079": 61, "098506": 61, "176778": 61, "749022": 61, "235386": 61, "742181": 61, "222932": 61, "317956": 61, "264473": 61, "943950": 61, "232732": 61, "707183": 61, "259077": 61, "553787": 61, "247717": 61, "826349": 61, "114302": 61, "854777": 61, "341384": 61, "820829": 61, "263235": 61, "999942": 61, "319986": 61, "967084": 61, "432760": 61, "404773": 61, "325215": 61, "999980": 61, "318421": 61, "925283": 61, "167667": 61, "913706": 61, "242106": 61, "875554": 61, "249197": 61, "35": [61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 311, 313], "849135": 61, "294294": 61, "172206": [61, 313], "246422": 61, "747380": 61, "278340": 61, "187440": 61, "231249": 61, "237805": 61, "254485": 61, "999925": 61, "189793": 61, "41": [61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 310, 313], "941906": 61, "170998": 61, "42": [61, 63, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 303, 312, 313], "923801": 61, "244046": 61, "43": [61, 96, 101, 116, 233, 278, 279, 287, 292, 299, 301, 302, 312, 313], "999928": 61, "320403": 61, "237637": 61, "260453": 61, "869540": 61, "194503": 61, "46": [61, 96, 101, 116, 233, 278, 279, 292, 299, 301, 302, 313], "999949": 61, "319750": 61, "983782": 61, "393234": 61, "48": [61, 96, 101, 103, 116, 233, 278, 279, 287, 299, 301, 302, 311, 312, 313], "698267": 61, "169337": 61, "49": [61, 96, 101, 116, 233, 278, 279, 299, 301, 302, 313], "776674": 61, "214962": 61, "688847": 61, "192608": 61, "822213": 61, "202534": 61, "511489": 61, "273601": 61, "53": [61, 96, 101, 116, 233, 278, 279, 287, 299, 301, 302, 308, 310, 313], "964757": 61, "223448": 61, "762153": 61, "181648": 61, "965657": 61, "435741": 61, "995278": 61, "354798": 61, "813382": 61, "263372": 61, "727295": 61, "232867": 61, "738777": 61, "224742": 61, "calculate_eta_shrinkag": [61, 280], "ucp": [62, 68], "ucpscal": [62, 68], "calculate_ucp_scal": [62, 280], "00916": [62, 155, 223, 293, 300, 302, 304], "0309626": [62, 155, 223, 300, 302, 304], "031127999999999996": 62, "013241000000000001": 62, "convers": [62, 280, 296], "pharmacokinet": [63, 212, 302], "pre": 63, "t_half_elim": 63, "173": 63, "337164": 63, "1769": 63, "493756": 63, "843398": 63, "149": [63, 297], "567842": 63, "1317": [63, 287], "474199": 63, "233070": 63, "k_e": 63, "calculate_individual_parameter_statist": [63, 280], "995565e": 64, "041788": 64, "848052": 64, "410335": 64, "240358": 64, "820116": [64, 301], "179011": 64, "266004e": 64, "908225": 64, "176399": 64, "266263": 64, "818557": 64, "757955": 64, "605785e": 64, "038825": 64, "207512": 64, "808434": 64, "144772": 64, "035114e": 64, "518562": 64, "972906": 64, "457873": 64, "947424e": 64, "197906": 64, "736254": 64, "201162e": 64, "249846": 64, "006431": 64, "000210": [66, 67, 301], "026895": [66, 67, 301], "083762": [66, 67, 301], "013415": [66, 67, 301], "007477": [66, 67, 301], "002279": [66, 67, 301], "unconstrain": 68, "calculate_parameters_from_ucp": [68, 280], "verbos": 69, "consist": [69, 287, 298, 314], "across": [69, 280, 298], "consol": 69, "fail": [69, 280, 298, 307], "cor": [70, 285], "highli": 70, "high": [70, 289, 290, 307], "zero_limit": 71, "significant_digit": [71, 280], "close": [71, 223, 280, 293, 298, 299], "distanc": [71, 79, 313], "logic": 71, "cleanup": 72, "what": [72, 298, 304, 307], "inlin": 72, "clean": 72, "might": [72, 298, 307, 314, 316], "certain": [72, 104, 151, 280, 284, 297, 298, 306, 314], "requir": [72, 280, 282, 287, 294, 298, 310], "to_format": 73, "inplac": 73, "nlmixr": [73, 248, 280, 285, 301, 302], "rxode": [73, 280, 301], "underli": [73, 112, 155, 300], "converted_model": 73, "applic": [74, 257, 272, 298, 307, 314], "config": [75, 100, 280, 284, 285, 305], "configur": [75, 280, 294, 301, 304, 314, 315], "overwritten": [75, 258], "block": [76, 165, 197, 280, 282, 293, 295, 302, 303, 310, 314], "iiv_cl_iiv_v": [76, 211], "split_joint_distribut": [76, 280, 302], "through": [77, 282, 283, 284, 287, 298, 300, 302, 314], "numpi": [77, 289, 290, 300], "standard_norm": 77, "5532605888887387": 77, "stem": 78, "force_numb": 78, "coveff1": 78, "temp": 78, "temp1": 78, "cl1": 78, "df": [79, 84, 255, 280, 289, 308, 310], "date_column": 79, "deidentifi": [79, 280], "year": [79, 280, 285, 298], "earliest": 79, "maintain": [79, 283, 285, 286, 296, 298, 306, 307], "leap": 79, "1901": 79, "1902": 79, "1903": 79, "1904": 79, "closest": 79, "preceed": 79, "ordinari": [80, 300], "differenti": [80, 300], "odedisplay": 80, "display": 80, "dt": [80, 302], "column_nam": [81, 218], "mark": [81, 82, 89, 218, 282, 298], "drop_dropped_column": [81, 218, 280, 302], "undrop_column": [81, 280, 302], "undrop": [81, 218], "drop_column": [82, 218, 280, 302], "them": [82, 172, 283, 295, 297, 298, 303, 304, 311, 314], "dy": 83, "deps_1": 83, "771084": [83, 86], "881859": [83, 86], "441728": [83, 86], "113050": [83, 86], "783055": [83, 86], "150": [83, 84, 86, 87, 88, 301], "375041": [83, 86], "833395": [83, 86], "152": [83, 84, 86, 87, 88], "876707": [83, 86], "153": [83, 84, 86, 87, 88, 288], "905095": [83, 86], "154": [83, 84, 86, 87, 88], "099690": [83, 86], "155": [83, 84, 86, 87, 88, 115, 118, 301, 302], "evaluate_eta_gradi": [83, 280], "deta_1": 84, "deta_2": 84, "159537": 84, "609116": 84, "325893": 84, "562289": 84, "104417": 84, "346161": 84, "452951": 84, "682310": 84, "838840": 84, "981836": 84, "424423": 84, "973013": 84, "497185": 84, "344797": 84, "198714": 84, "697161": 84, "987731": 84, "941806": 84, "817067": 84, "309945": 84, "evaluate_epsilon_gradi": [84, 280], "573770": 85, "739": [85, 102, 147, 199, 289, 302], "165105": 85, "741": [85, 102, 147, 199, 278, 289, 302], "742": [85, 102, 147, 199, 278, 289, 302], "743": [85, 102, 147, 199, 289, 302], "evaluate_population_predict": [86, 280], "529739": 87, "179910": [87, 299], "688648": 87, "798916": 87, "023225": 87, "459036": 87, "223295": 87, "217288": 87, "472888": 87, "226455": 87, "evaluate_individual_predict": [87, 280], "wre": [88, 280], "313859": 88, "675721": 88, "544240": 88, "921720": 88, "517677": 88, "223935": 88, "053334": 88, "007023": 88, "931252": 88, "778389": 88, "flag": [89, 280, 302, 313, 314], "origin": [89, 225, 258, 262, 263, 278, 279, 283, 285, 293, 298, 313], "care": [89, 258], "00469307": [92, 93, 94, 155, 191, 204, 217, 223, 300, 302, 304], "fix_paramet": [92, 94, 219, 220, 302], "unfix_paramat": [92, 93, 94, 220], "fix_paramaters_to": [92, 220], "unfix_paramaters_to": [92, 93, 94, 189, 219], "fix_or_unfix_paramet": [93, 94, 219, 220, 302], "fix_parameters_to": [93, 189, 219, 302], "present": [95, 98, 105, 282, 289, 293, 298, 314], "extract": [95, 98, 105, 280, 282, 296, 300], "directli": [99, 258, 262, 263, 280, 282, 290, 298, 300, 302, 307, 314], "cmax": [99, 280, 302], "tmax": [99, 280, 302], "cmin": [99, 280, 302], "tmin": [99, 280, 302], "doseid": [99, 102, 302], "589": [99, 103, 302], "get_baselin": [101, 280, 302], "set_covari": [101, 302], "period": [102, 302], "108": [103, 147, 199, 289, 301, 302], "132": [103, 147, 199, 289, 301, 302, 308], "144": [103, 147, 199, 289, 301, 302, 312], "retriev": [106, 107, 114, 115, 120, 121, 122, 124, 239, 240, 258, 262, 263, 280, 300, 301, 302, 315], "get_pk_paramet": [107, 120, 121, 124, 280], "get_rv_paramet": [107, 120, 122, 140, 280], "has_random_effect": [107, 120, 124, 280], "opr": [108, 117, 123], "get_population_prediction_express": [108, 280], "epress": [108, 123], "condit": [109, 188, 280, 293, 298, 311], "item": [113, 284, 298], "activ": [114, 115, 116, 285, 298], "get_number_of_observ": [114, 118, 280, 302], "get_number_of_observations_per_individu": [114, 115, 118, 280, 302], "total": [115, 280, 302], "get_number_of_individu": [115, 116, 280, 302], "observation_count": 116, "accord": [117, 280, 298, 303, 314], "oeta\u2082": 117, "oeta\u2081": 117, "135": [118, 301, 302, 308, 310], "131": [118, 301, 302], "146": [118, 147, 199, 287, 289, 297, 301, 302], "get_theta": [119, 125, 280], "get_sigma": [119, 126, 280], "var_typ": 120, "get_individual_paramet": [120, 122, 124, 140, 280], "set_direct_effect": [121, 280], "e0": 121, "get_individual_prediction_express": [123, 280], "get_omega": [125, 126, 280], "structur": [126, 242, 260, 280, 282, 289, 297, 300, 303, 314], "00": [126, 293, 300, 301, 302, 308, 310, 312, 314], "olumn": 127, "milligram": [127, 289], "liter": [127, 289], "kilogram": [127, 289], "named_subscript": 129, "greek": 129, "subscript": 129, "cleanup_model": [129, 280], "\u03b8\u2081": 129, "\u03b8\u2082": 129, "\u03b8\u2083": 129, "\u03b7\u2081": 129, "\u03b7\u2082": 129, "\u03b5\u2081": 129, "mani": [130, 131, 139, 174, 280, 302], "has_proportional_error_model": [130, 131, 141, 280], "has_combined_error_model": [130, 139, 141, 280], "has_weighted_error_model": [130, 131, 139, 280], "has_additive_error_model": [131, 139, 141, 280], "reli": [133, 136, 137, 143, 298], "heurist": [133, 136, 137, 143], "abl": [133, 136, 137, 143, 280, 292, 294, 306, 307], "detect": [133, 136, 137, 143, 280, 294, 300, 306, 316], "has_od": [134, 135, 280], "has_linear_odes_with_real_eigenvalu": [134, 138, 280], "eigenvalu": 135, "has_linear_od": [135, 138, 280], "micha": [136, 137, 192, 193, 282, 314], "menten": [136, 137, 192, 193, 282, 314], "set_michaelis_menten_elimin": [136, 186, 193, 207, 280, 302], "michali": 137, "set_mixed_mm_fo_elimin": [137, 302], "set_zero_order_elimin": [143, 186, 192, 193, 280, 302], "determin": [144, 145, 172, 295, 297, 298, 303], "model1": [144, 280], "model2": 144, "constraint": [145, 191, 204, 209, 217, 219, 280, 290], "get_covariate_baselin": [146, 280, 302], "load": [147, 148, 230, 294], "unload_dataset": [147, 280], "statment": 149, "mu": [150, 293], "referenc": 150, "theta_1": [150, 300], "mu_1": [150, 293], "\u03bc\u2081": 150, "\u03bc\u2082": 150, "dataset_or_model": [151, 172], "name_pattern": [151, 172], "omitted_": 151, "omiss": 151, "omit": [151, 282, 287], "placehold": [151, 172], "plot": [152, 153, 154, 280, 293, 299, 307], "alt": [152, 153, 154, 278, 293, 299], "chart": [152, 153, 154, 278], "iofv1": 153, "iofv2": 153, "against": [153, 298], "iofv": [153, 255, 278, 280, 299, 301, 313], "scatterplot": 153, "problem": [155, 159, 280, 287, 292, 295, 297, 298, 299, 302, 304], "subroutin": [155, 280, 298, 302, 304], "advan1": [155, 302, 304], "trans2": [155, 302, 304], "IF": [155, 280, 298, 302], "gt": [155, 302], "lt": [155, 302], "uncondit": [155, 302], "cwre": [155, 254, 255, 301, 302, 310, 311], "npde": [155, 302], "noappend": [155, 302], "noprint": [155, 302], "onehead": [155, 302], "sigma\u2081": [156, 300], "\u2081": [156, 300], "home": [158, 280, 289, 300], "run1": [158, 240, 302], "mod": [158, 258, 260, 280, 282, 289, 300, 301, 302, 314], "read_model_from_databas": [158, 159, 280], "databas": [158, 159, 238, 258, 259, 260, 262, 263, 264, 266, 272, 277, 280], "read_model_from_str": [158, 280, 302], "err": [159, 302], "has_covariate_effect": [162, 280], "unrun": 163, "to_remov": [165, 166, 282], "eta_iov_1_1": 166, "add_lag_tim": [167, 203, 280, 302], "uloq": 168, "alq": 168, "loq": [168, 242, 282], "consecut": 168, "736": 168, "set_lloq_data": [168, 212, 280], "add_peripheral_compart": [169, 196, 280, 302], "new_nam": [171, 194], "renam": [171, 280], "clash": [171, 258, 260], "occur": [171, 197, 292, 295, 297, 298], "resampl": [172, 243], "stratifi": [172, 282], "sample_s": [172, 282], "resample_": 172, "randomli": [172, 175], "renumb": [172, 282], "upward": 172, "stratif": [172, 282], "valueerror": 172, "rais": [172, 223, 280], "strata": 172, "suppli": [172, 295, 297, 303, 310], "control": [172, 285, 297, 298, 300], "pattern": [172, 298], "samples_per_id": 173, "pool": [173, 295], "iec": 173, "127941": 173, "037273": 173, "065492": 173, "182851": 173, "263323": 173, "265849": 173, "295883": 173, "060346": 173, "012108": 173, "219967": 173, "034279": 173, "040988": 173, "187879": 173, "143184": 173, "088845": 173, "034655": 173, "187779": 173, "014214": 173, "019953": 173, "151151": 173, "sample_parameters_from_covariance_matrix": [173, 175, 280], "sample_parameters_uniformli": [173, 174, 280], "uniform": [173, 174, 175], "force_posdef_sampl": [174, 175, 282], "force_posdef_covmatrix": [174, 282], "never": [174, 303], "005069": 174, "974989": 174, "204629": 174, "024756": 174, "012088": 174, "012943": 174, "004690": 174, "958431": 174, "233231": 174, "038866": 174, "029000": 174, "012516": 174, "004902": 174, "950778": 174, "128388": 174, "019020": 174, "023866": 174, "013413": 174, "sample_individual_estim": [174, 175, 280], "estiat": [174, 175], "reject": 175, "004878": 175, "908216": 175, "149441": 175, "029179": 175, "025472": 175, "012947": 175, "004828": 175, "014444": 175, "149958": 175, "028853": 175, "027653": 175, "013348": 175, "004347": 175, "053837": 175, "165804": 175, "028465": 175, "026798": 175, "013727": 175, "data_tran": [176, 178, 198, 280], "series_term": 176, "\u00b2": [176, 178], "epsilon_1": [176, 178, 198], "expans": 176, "approxim": [176, 298], "\u03b5\u2090": [176, 178, 302], "set_proportional_error_model": [176, 178, 280, 302], "set_combined_error_model": [176, 198, 280, 302, 311], "epsilon_2": 178, "remove_error_model": [178, 198, 280, 302], "\u03b5\u209a": [178, 198, 302], "set_additive_error_model": [178, 198, 280, 302], "e\u2080": 180, "fix_to_log": 181, "dynam": [181, 269, 298], "lambda": [181, 213, 214, 308, 310], "zeta": [181, 308, 310], "emul": 181, "set_bolus_order_absorpt": [185, 200, 206], "list_of_ep": [187, 197], "same_eta": [187, 282], "chosen": [187, 280, 295, 302, 314], "eta_rv1": 187, "set_power_on_ruv": [187, 280, 302, 311], "get_initial_condit": [188, 280], "remove_loq_data": [190, 212, 280, 302], "set_upper_bound": [191, 217, 302], "unconstrain_paramet": [191, 204, 219, 302], "clmm": [192, 193, 207, 302], "km": [192, 193, 207, 280, 302], "set_first_order_elimin": [192, 193, 207, 280, 302], "prefer": [195, 298], "q2": 196, "q3": 196, "v3": 196, "peripheral2": 196, "lower_limit": 197, "zero_protect": [197, 198, 280], "said": 197, "regardless": [197, 283, 298, 300], "autodetect": 197, "protect": [197, 198, 280, 298], "power\u2081": 197, "set_iiv_on_ruv": [197, 280, 302, 311], "225e": [198, 302], "ipredadj": [198, 302], "ref": [199, 316], "sequenti": [200, 280, 282, 303, 314], "quantil": [201, 278, 280], "time_vari": [201, 310, 311], "target": [202, 312], "mediat": 202, "disposit": 202, "ib": 202, "cr": 202, "crib": 202, "qss": 202, "wagner": 202, "mmapp": 202, "tmdd": [202, 251, 280], "keep_depot": [203, 280], "transit1": 203, "transit2": 203, "k23": 203, "transit3": 203, "k34": 203, "k40": 203, "set_lower_bound": [204, 217, 302], "use_thetas_for_error_stdev": [205, 280, 302], "smallest": [207, 302], "get_zero_order_input": [208, 280], "simplifi": [209, 280, 281, 290, 302, 307], "ab": [209, 214, 282, 302], "analyt": 210, "becom": [211, 280, 282, 307], "create_joint_distribut": [211, 280, 302], "m4": [212, 302], "m1": [212, 280, 312], "m3": [212, 302], "m5": [212, 280], "m6": [212, 280], "m7": [212, 280], "overridden": 212, "beal": 212, "sl": 212, "pharmacodyn": 212, "2001": 212, "oct": 212, "481": 212, "504": 212, "doi": [212, 214, 293, 311], "1023": 212, "1012299115260": 212, "erratum": 212, "2002": 212, "jun": 212, "309": 212, "pmid": 212, "11768292": 212, "cumd": [212, 302], "cumdz": [212, 302], "list_of_eta": [213, 214, 215], "boxcox": [213, 280], "lambda1": [213, 214], "transform_etas_tdist": [213, 214, 280, 302], "transform_etas_john_drap": [213, 215, 280, 302], "john": [214, 280, 282], "draper": [214, 280, 282], "spelect": 214, "1980": 214, "famili": [214, 298], "journal": [214, 311], "royal": 214, "societi": 214, "190": [214, 308], "197": 214, "2307": 214, "2986305": 214, "transform_etas_boxcox": [214, 215, 280, 302], "degre": [215, 310], "freedom": [215, 298, 310], "df1": 215, "translat": [216, 280], "hour": [216, 289], "caution": 216, "account": 216, "unfix_paramet": [217, 280, 302], "unload": 221, "had": [222, 298, 302], "move_est_close_to_bound": 223, "00469555": 223, "984258": [223, 230, 301], "15892": 223, "0293508": [223, 300], "027906": [223, 230, 300, 301], "sd_eps_1": 224, "set_weighted_error_model": [224, 280, 302], "whose": [225, 298], "suffix": 225, "overwrit": [225, 226], "newdataset": 225, "report": [227, 280, 285, 296, 307], "recalcul": 228, "frem_dir1": 228, "read_result": [228, 239, 280, 314], "model_or_model": [229, 248], "run_tool": [229, 242, 254, 280], "004696": [230, 301], "158920": [230, 301], "029351": [230, 301], "machin": [231, 232, 233, 258, 262, 263, 289, 294, 298], "learn": [231, 232, 233, 294], "threshold": [231, 232, 233, 282, 287], "signal": [231, 232, 299], "raw": [231, 232, 233, 255, 278, 280, 289], "delta": [231, 278, 280, 299], "tell": [231, 233, 298], "predict_influential_outli": [231, 233, 280], "predict_outli": [231, 232, 280], "outlier_cutoff": 232, "influential_cutoff": 232, "singal": [232, 233], "influential_outli": 232, "predict_influential_individu": [232, 233, 280], "simev": [233, 280, 309], "281443": 233, "057392": 233, "119105": 233, "846849": 233, "600540": 233, "014008": 233, "750734": 233, "247175": 233, "117002": 233, "835389": 233, "529582": 233, "035670": 233, "292333": 233, "303278": 233, "565949": 233, "078192": 233, "291295": 233, "466421": 233, "402343": 233, "699996": 233, "567987": 233, "526776": 233, "303918": 233, "177588": 233, "272142": 233, "390000": 233, "775876": 233, "501528": 233, "700951": 233, "352599": 233, "294196": 233, "744014": 233, "215364": [233, 312], "208691": 233, "713130": 233, "300293": 233, "810736": 233, "459877": 233, "675125": 233, "563835": 233, "526945": 233, "449199": 233, "720714": 233, "792248": 233, "860923": 233, "731858": 233, "247131": 233, "894190": 233, "282737": 233, "153398": 233, "200546": 233, "902774": 233, "586427": 233, "183329": 233, "036930": 233, "639868": 233, "765279": 233, "209665": 233, "225693": 233, "errors_allow": [235, 280], "bic_typ": 235, "rounding_error": 235, "maxevals_exceed": 235, "lrt": 235, "denot": [235, 293, 302], "model_1": [235, 293], "model_2": [235, 293], "create_result": [237, 280], "resum": [238, 242, 272, 282, 314], "resmod_dir1": 238, "retrieve_model": [239, 258, 262, 263, 280, 314], "tooldatabas": [240, 259, 264, 269, 272], "modeldatabas": [240, 258, 260, 266], "tooldir_path": 240, "retrieve_final_model": [240, 280], "allometryresult": 241, "amd": [242, 280, 314], "reult": 242, "search": [242, 244, 249, 280, 282, 287, 297, 307, 314], "runord": [242, 282], "compon": [242, 282, 290, 294, 298, 300, 310], "run_iiv": [242, 280], "bootstrap": [243, 280, 309], "bootstrapresult": [243, 280], "500": 243, "try": [244, 282, 292, 307, 316], "mode": [244, 245, 247, 249, 251, 280, 293, 298], "covsearchresult": 244, "estmethod": [245, 280, 314], "exhaust": [245, 249, 280], "exhaustive_with_upd": [245, 292], "exhaustive_only_ev": [245, 280, 292], "estmethodresult": 245, "reduc": [245, 280, 292, 312], "no_add": [246, 249, 280, 295, 303], "iivsearch": [246, 280, 314], "brute_force_no_of_eta": [246, 295], "brute_force_block_structur": [246, 295], "strategi": [246, 249, 280, 295, 303], "add_diagon": [246, 249, 280, 295, 303], "kee": 246, "iivsearchresult": 246, "iovsearch": [247, 280, 314], "iovsearchresult": 247, "modelsearchresult": 249, "max_it": [250, 280], "bin": [250, 310, 316], "attempt": [250, 287, 298], "assess": [250, 311], "ruvsearchresult": 250, "emax_init": 251, "ec50_init": 251, "structsearch": [251, 280], "pkpd": [251, 280], "e_max": 251, "ec_50": 251, "structsearchresult": 251, "model_typ": 251, "arg": 252, "kei": [254, 262, 298, 311], "fit_result": 254, "mathrm": [255, 313], "veebar": 255, "least": [255, 298, 314], "outli": [255, 313], "criteria": [255, 280, 282, 287, 295, 297, 303, 311], "include_all_estimation_step": 256, "runtim": [256, 280, 292], "wasn": [256, 280], "estmat": 256, "586": [256, 299, 301], "276056": [256, 299], "again": [257, 316], "Not": [257, 289, 298], "file_extens": [258, 260], "nontransactionalmodeldatabas": [258, 263], "local": [258, 259, 260, 262, 263, 264, 266, 285, 295, 298], "store": [258, 259, 260, 262, 263, 264, 266, 280, 304, 314], "modelnam": 258, "recommend": [258, 316], "localmodeldirectorydatabas": 258, "retrieve_fil": [258, 262, 263], "filesystem": [258, 262, 263], "model_nam": [258, 260, 262, 263, 293], "retrieve_local_fil": [258, 262, 263], "destination_path": [258, 262, 263], "retrieve_modelfit_result": [258, 262, 263], "store_local_fil": [258, 259, 262, 263, 264, 266], "new_filenam": [258, 262, 263], "store_metadata": [258, 259, 262, 263, 264, 266], "store_model": [258, 262, 263], "store_modelfit_result": [258, 262, 263], "toolnam": [259, 264, 266, 314], "exist_ok": 259, "read_metadata": [259, 264, 266], "source_path": [259, 264, 266], "store_result": [259, 264, 266], "transactionalmodeldatabas": 260, "subdirectori": [260, 314], "list_model": 260, "snapshot": [260, 262], "context": [260, 262, 298, 307], "transact": [260, 262, 298], "writabl": [260, 262], "timestamp": 261, "log_error": 261, "log_warn": 261, "abc": [262, 266], "baseclass": 262, "primari": 262, "center": 262, "around": [262, 283], "belong": 262, "dummi": [263, 264], "anyth": [263, 264, 285, 295, 298], "task_input": 265, "model_databas": 266, "workflowbas": [267, 268], "acycl": 267, "task": [267, 268, 280, 306, 307], "node": [267, 269], "edg": 267, "as_dask_dict": 267, "dask": [267, 269, 280, 307], "plot_dask": 267, "visual": 267, "add_task": 268, "predecessor": [268, 298], "insert_workflow": 268, "replace_task": 268, "new_task": 268, "wf": 269, "unique_nam": 269, "db": 269, "whatev": [269, 298], "alia": [270, 271], "localdirectorydatabas": [270, 277], "localdirectorytooldatabas": [271, 277, 314], "dispatch": [272, 277, 280, 314], "execut": [272, 280, 298], "executiondispatch": 272, "default_dispatch": 277, "local_dask": [277, 314], "default_model_databas": 277, "default_tool_databas": 277, "psn": [278, 279, 280, 282, 288, 293, 299, 308, 310, 312, 313, 314, 315], "parameter_statist": 278, "bia": [278, 280], "rse": [278, 301], "divid": [278, 282, 304], "005856": 278, "005820": 278, "000038": 278, "000487": 278, "083167": 278, "455435": 278, "443165": 278, "009885": 278, "099305": 278, "068231": 278, "141376": 278, "109797": 278, "030323": 278, "114986": 278, "813337": 278, "195880": 278, "195844": 278, "005646": 278, "046548": 278, "237634": 278, "015546": 278, "015112": 278, "000872": 278, "003434": 278, "220871": 278, "parameter_distribut": 278, "lowest": [278, 293], "highest": [278, 280, 293, 304], "interpol": 278, "fall": [278, 280], "x_0": 278, "x_1": 278, "np": [278, 289, 300], "004762": 278, "004767": [278, 287], "004805": 278, "004974": 278, "005120": 278, "211220": 278, "214364": 278, "242657": 278, "290449": 278, "307106": 278, "000011": 278, "012961": 278, "100104": 278, "100376": 278, "102825": 278, "116900": 278, "125456": 278, "007812": 278, "007857": 278, "008261": 278, "009741": 278, "011116": 278, "97": [278, 287], "006669": 278, "006685": 278, "007429": 278, "007593": 278, "007612": 278, "613679": 278, "646879": 278, "726604": 278, "730551": 278, "730990": 278, "338957": 278, "371005": 278, "536153": 278, "545316": 278, "546334": 278, "281203": 278, "300874": 278, "306057": 278, "306101": 278, "306106": 278, "021677": 278, "023708": 278, "025429": 278, "026581": 278, "026710": 278, "parameter_estimates_histogram": 278, "histogram": [278, 280], "repeatchart": 278, "005298": 278, "30730": 278, "074931": 278, "136423": 278, "011374": 278, "006048": 278, "38692": 278, "029844": 278, "189763": 278, "019143": 278, "005624": 278, "53224": 278, "118806": 278, "219550": 278, "019831": 278, "005771": [278, 287], "40115": 278, "034322": 278, "150905": 278, "012287": 278, "005933": 278, "42119": 278, "074050": 278, "171158": 278, "017394": 278, "005275": 278, "59087": 278, "289793": 278, "248009": 278, "016396": 278, "005847": 278, "44711": 278, "109860": 278, "206296": 278, "016346": 278, "005939": 278, "52688": 278, "040057": 278, "210552": 278, "013631": 278, "005998": 278, "41948": 278, "192046": 278, "175269": 278, "013485": 278, "005479": 278, "43956": 278, "109733": 278, "197253": 278, "011771": 278, "ofv_statist": 278, "bootstrap_bootdata_ofv": 278, "original_bootdata_ofv": 278, "sum": [278, 288], "bootstrap_origdata_ofv": 278, "boostrap": 278, "original_origdata_ofv": 278, "delta_bootdata": 278, "delta_origdata": 278, "722": 278, "220925": 278, "386171": 278, "134966": 278, "245796": 278, "929008": 278, "620085": 278, "523805": 278, "737": 278, "632473": 278, "951710": 278, "024871": 278, "110934": 278, "218525": 278, "629078": 278, "737746": 278, "ofv_distribut": 278, "parameter_distriut": 278, "601": 278, "007583": 278, "602": 278, "266529": 278, "613": 278, "597036": 278, "641": 278, "950291": 278, "621": 278, "273905": 278, "622": 278, "073513": 278, "629": 278, "269987": 278, "806391": 278, "915431": 278, "955989": 278, "731": 278, "321004": 278, "879050": 278, "021463": 278, "059207": 278, "398901": 278, "299364": 278, "020705": 278, "061262": 278, "426277": 278, "984323": 278, "879224": 278, "788": 278, "101562": 278, "803": 278, "869362": 278, "661": 278, "714778": 278, "121734": 278, "810": [278, 301], "417314": 278, "732": 278, "165644": 278, "757": 278, "877092": 278, "369737": 278, "671690": 278, "375800": 278, "162811": 278, "270917": 278, "982365": 278, "475010": 278, "828": 278, "178008": 278, "839": 278, "691272": 278, "840": [278, 308], "970524": 278, "836": 278, "395339": 278, "846": 278, "981350": 278, "848": 278, "157573": 278, "859": 278, "964343": 278, "893": [278, 295], "228440": 278, "896": [278, 293], "924451": 278, "443675": 278, "246668": 278, "558111": 278, "129": 278, "069616": 278, "162": 278, "333713": 278, "166": 278, "029724": 278, "ofv_plot": 278, "layerchart": [278, 299], "dofv_quantiles_plot": 278, "show": [278, 282, 293, 298, 310, 313], "metric": [278, 279, 301], "chi": 278, "squar": 278, "907310": 278, "911844": 278, "750": 278, "388987": 278, "670": 278, "684132": 278, "675": 278, "846450": 278, "738": 278, "099607": 278, "248779": 278, "734": 278, "876739": 278, "733": [278, 311], "182039": 278, "626": 278, "440820": 278, "637": 278, "427606": 278, "748": 278, "285576": 278, "239599": 278, "025253": 278, "519551": 278, "781": 278, "380852": 278, "793": 278, "303365": 278, "994494": 278, "754": 278, "666705": 278, "688168": 278, "664": 278, "288159": 278, "671": 278, "883942": 278, "255718": 278, "974215": 278, "332959": 278, "052283": 278, "689": 278, "940217": 278, "693": 278, "963948": 278, "735": 278, "763734": 278, "004534": 278, "494261": 278, "162318": 278, "204881": 278, "627961": 278, "287312": 278, "986786": 278, "390849": 278, "785654": 278, "624824": 278, "922512": 278, "099768": 278, "595783": 278, "360991": 278, "358744": 278, "157557": 278, "023731": 278, "869007": 278, "372000e": 278, "000015": 278, "000003": 278, "098000e": 278, "462220e": 278, "009862": 278, "002316": 278, "002320": 278, "320640e": 278, "531300e": 278, "013222": 278, "000146": 278, "961337e": 278, "572900e": 278, "002167": 278, "014550e": 278, "000033": 278, "000196": 278, "178980e": 278, "included_individu": 278, "case_result": [279, 280], "cook_scor": 279, "jackknife_cook_scor": 279, "delta_ofv": 279, "dofv_influenti": 279, "130159": 279, "121389": 279, "015207": 279, "348263": 279, "336159": 279, "144045": 279, "192433": 279, "181125": 279, "031030": 279, "163095": 279, "155901": 279, "026142": 279, "422651": 279, "404915": 279, "190732": 279, "374312": 279, "343311": 279, "097063": 279, "169869": 279, "163883": 279, "026223": 279, "263865": 279, "254943": 279, "058123": 279, "757098": 279, "673587": 279, "477910": 279, "150161": 279, "144191": 279, "023623": 279, "361646": 279, "352901": 279, "217902": 279, "255533": 279, "215005": 279, "035375": 279, "191848": 279, "187019": 279, "038199": 279, "376365": 279, "337975": 279, "096680": 279, "142806": 279, "137340": 279, "014709": 279, "193393": 279, "179744": 279, "031711": 279, "131746": 279, "122842": 279, "020637": 279, "176644": 279, "932149": 279, "036787": 279, "128197": 279, "120498": 279, "019030": 279, "141093": 279, "138101": 279, "029021": 279, "176582": 279, "153583": 279, "035291": 279, "104396": 279, "100064": 279, "015499": 279, "552071": 279, "501458": 279, "278595": 279, "242334": 279, "217068": 279, "047627": 279, "792099": 279, "715951": 279, "798775": 279, "135247": 279, "133493": 279, "021356": 279, "442779": 279, "424958": 279, "125763": 279, "132903": 279, "127188": 279, "010157": 279, "081122": 279, "076790": 279, "005443": 279, "183624": 279, "168501": 279, "027707": 279, "113959": 279, "111168": 279, "012363": 279, "532749": 279, "515747": 279, "325048": 279, "094133": 279, "091212": 279, "014747": 279, "447798": 279, "406737": 279, "194457": 279, "364978": 279, "352973": 279, "124295": 279, "270838": 279, "252922": 279, "063675": 279, "129553": 279, "121963": 279, "014043": 279, "254914": 279, "243250": 279, "064025": 279, "207529": 279, "194633": 279, "046887": 279, "239182": 279, "218112": 279, "044252": 279, "181986": 279, "173826": 279, "020285": 279, "604112": 279, "584208": 279, "604211": 279, "407717": 279, "369648": 279, "154161": 279, "215722": 279, "196744": 279, "043742": 279, "214167": 279, "200091": 279, "036238": 279, "094284": 279, "089002": 279, "007506": 279, "074174": 279, "072365": 279, "007535": 279, "743323": 279, "717468": 279, "654313": 279, "153971": 279, "147360": 279, "014502": 279, "284706": 279, "278460": 279, "072960": 279, "331587": 279, "309374": 279, "116933": 279, "447965": 279, "421612": 279, "129593": 279, "184872": 279, "175196": 279, "029896": 279, "430382": 279, "415446": 279, "141657": 279, "409307": 279, "369197": 279, "189729": 279, "084764": 279, "079718": 279, "007416": 279, "107600": 279, "103145": 279, "013947": 279, "154672": 279, "150761": 279, "028236": 279, "155632": 279, "150461": 279, "034848": 279, "covariance_ratio": 279, "skipped_individu": 279, "050505": 279, "963884": 279, "058896": 279, "087449": 279, "985403": 279, "029066": 279, "101636": 279, "086424": 279, "017369": 279, "094799": 279, "849310": 279, "121111": 279, "049151": 279, "096456": 279, "070088": 279, "040691": 279, "065881": 279, "606158": 279, "205007": 279, "099191": 279, "143483": 279, "050691": 279, "086007": 279, "156273": 279, "919336": 279, "056714": 279, "999221": 279, "029600": 279, "034017": 279, "108785": 279, "038495": 279, "954054": 279, "053618": 279, "096334": 279, "943556": 279, "125423": 279, "086167": 279, "145822": 279, "113939": 279, "114399": 279, "057664": 279, "788608": 279, "063991": 279, "115559": 279, "160549": 279, "034685": 279, "035618": 279, "714976": 279, "092664": 279, "089158": 279, "054565": 279, "002555": 279, "032356": 279, "003056": 279, "936719": 279, "122771": 279, "078285": 279, "096841": 279, "068821": 279, "sqrt": [279, 302], "p_i": 279, "p_": 279, "orig": 279, "operatornam": [279, 293, 313], "sum_": 279, "overlin": [279, 293], "_j": 279, "_k": [279, 293], "det": 279, "Then": [279, 293, 302], "ofv_": 279, "iofv_": 279, "iofv_k": 279, "ofv_k": 279, "case_column": 279, "rikard": [279, 281, 286, 307, 311], "nordgren": [279, 281, 286, 307, 311], "sebastian": [279, 281, 286], "ueckert": [279, 281, 286], "svetlana": 279, "freiberga": 279, "karlsson": [279, 281, 286, 293, 311], "faster": [279, 280, 307], "2018": [279, 298, 311], "abstr": [279, 281], "8683": 279, "www": [279, 281, 298], "meet": [279, 281, 283, 298, 307], "load_dataset": 280, "blqdv": 280, "better": [280, 303, 311], "usag": [280, 282], "set_reference_valu": 280, "create_basic_pk_model": [280, 302], "add_bioavail": 280, "autogener": 280, "typ": 280, "add_effect_compart": 280, "reorgan": 280, "saddl": 280, "llq": 280, "preced": 280, "reorder": 280, "incorrectli": 280, "ofv_iter": 280, "parameter_estimates_iter": 280, "caus": [280, 298, 307], "model4": 280, "frem": [280, 300, 309, 310], "create_report": 280, "write_model": [280, 300, 302, 304], "did": [280, 312], "dadt": [280, 302], "de": [280, 302], "complex": [280, 285, 294], "set_zero_order_input": 280, "set_tmdd": 280, "plugin": [280, 285, 290, 291, 296], "generate_model_cod": 280, "get_model_cod": 280, "advan7": 280, "didn": 280, "header": 280, "is_linear": 280, "plot_transformed_eta_distribut": 280, "create_config_templ": [280, 284], "get_dv_symbol": 280, "set_initial_condit": 280, "abbr": [280, 302, 304], "add_metabolit": 280, "set_dvid": [280, 302], "regress": 280, "defdos": [280, 302], "sometim": 280, "wrong": 280, "bad": 280, "1551": 280, "is_real": 280, "advan5": 280, "copy_model": 280, "nlmixr2": [280, 296, 302], "display_od": 280, "rework": 280, "run_covsearch": [280, 287], "explicitodesystem": 280, "eval": 280, "successfulli": [280, 316], "round": [280, 289], "subtool": [280, 314], "proxi": [280, 298], "1314": 280, "1355": [280, 287], "1378": [280, 295], "typo": 280, "1377": 280, "1381": 280, "1064": [280, 295], "afd7707": 280, "1139": 280, "1394": 280, "too": [280, 298], "1117": 280, "timeout": 280, "loop": 280, "wait": 280, "lst": [280, 314], "much": 280, "phi": [280, 285, 302, 314], "ncomp": 280, "deidentify_data": [280, 302], "cli": 280, "anonym": 280, "setter": 280, "multivari": 280, "1293": 280, "1302": [280, 287], "1303": [280, 303], "last20": 280, "run_modelsearch": [280, 303, 314], "run_iovsearch": [280, 297], "run_ruvsearch": [280, 311], "run_iivsearch": [280, 295], "nomem": 280, "rh": 280, "1180": 280, "1162": 280, "1032": 280, "add_covariate_effect": [280, 302], "1004": 280, "remove_covariate_effect": [280, 302], "1181": 280, "9fd701521": 280, "best_model": 280, "final_model_nam": 280, "a7fbcbfe2": 280, "update_initial_individual_estim": 280, "modelsearch_candidate1": [280, 303, 314], "modifi": [280, 289, 298, 305, 315], "wors": 280, "calculate_b": [280, 295, 297, 303], "calculate_a": 280, "check_parameters_near_bound": 280, "check_high_correl": 280, "plot_iofv_vs_iofv": 280, "plot_individual_predict": 280, "evaluate_express": 280, "evaluate_weighted_residu": 280, "parameter_esimt": 280, "calculate_pk_parameters_statist": 280, "update_init": [280, 302], "predict_": 280, "print_fit_summari": 280, "write_result": 280, "rank_model": 280, "speedup": 280, "297a64041": 280, "individual_ofv": [280, 301], "1101": 280, "57fc4fee8": 280, "fd417aaf": 280, "convert_model": [280, 302], "d5458e36": 280, "keyerror": 280, "localmodeldirectori": 280, "filenotfounderror": 280, "1193bd39": 280, "unus": 280, "submodul": 280, "bb96a13c": 280, "update_paramet": 280, "0ca786c5": 280, "dd056da3": 280, "915bc9c7": 280, "get_config_path": [280, 284], "disabl": [280, 283, 284], "82b32278": 280, "unwant": 280, "debug": 280, "1131a610": 280, "ebfafb45": 280, "1173": 280, "fb070ee1": 280, "1049": [280, 295], "pyreadr": 280, "easier": [280, 290, 300], "instal": [280, 282, 284, 298, 315], "mac": [280, 285], "get_evid": [280, 302], "resmod": [280, 309], "916": 280, "strict": [280, 298], "1055": 280, "attibut": 280, "1092": 280, "exlud": 280, "unreport": 280, "1076": 280, "988": 280, "1c65359": 280, "42fe72f": 280, "1001": 280, "lead": 280, "uneven": 280, "branch": [280, 285], "stepwis": [280, 287, 312, 314], "694": 280, "properli": 280, "708": 280, "comment": [280, 304], "790": 280, "974": [280, 308], "produc": [280, 298], "1017": 280, "989": 280, "71f4cf23": 280, "dsl": 280, "932": 280, "973": 280, "cfc09bad": 280, "975": 280, "917": 280, "977": 280, "908": 280, "fd564168": 280, "088a046a": 280, "c76fa476": 280, "430f1d2e": 280, "make_declar": 280, "greekify_model": 280, "find_clearance_paramet": 280, "find_volume_paramet": 280, "vp": 280, "newer": 280, "820": [280, 301], "seprat": 280, "sporad": 280, "race": [280, 283], "lazi": 280, "duplic": 280, "745": 280, "1st": 280, "3rd": 280, "710": 280, "licens": [280, 284], "advanx": 280, "add_time_after_dos": [280, 302], "intercompartment": 280, "defob": 280, "choos": [280, 295, 298, 303, 304, 305], "gl": 280, "solve_ode_system": 280, "meta": 280, "switch": [280, 307], "read_dataset_from_datainfo": [280, 302], "addl": 280, "linalgerror": 280, "656": [280, 295], "tflite": [280, 294], "649": 280, "mdt": [280, 302], "654": 280, "expand_additional_dos": [280, 302], "modelsyntaxerror": 280, "588": 280, "625": [280, 295], "578": 280, "vc1": 280, "577": 280, "success": [280, 283, 287, 292, 295, 297], "632": [280, 308], "636": 280, "590": 280, "gl_real": 280, "sampled_iofv": [280, 313], "version": [280, 282, 294, 298, 314], "subblock": 280, "check_dataset": [280, 302], "tensorflow": 280, "modelbuild": 280, "add_mdt_iiv": 280, "three": [280, 290, 298, 304], "add_eta": [280, 310], "etas_as_fullblock": 280, "iiv_as_fullblock": 280, "add_mdt_eta": 280, "wip": 280, "don": 280, "calculate_se_from_inf": 280, "calculate_cov_from_inf": 280, "calculate_inf_from_cov": 280, "calculate_inf_from_corrs": 280, "calculate_corr_from_inf": 280, "528": 280, "457": 280, "translate_nmtran_tim": [280, 302], "print_model_cod": [280, 294, 302], "has_michaelis_menten_elimin": 280, "has_zero_order_elimin": 280, "has_first_order_elimin": 280, "has_mixed_mm_fo_elimin": 280, "2c": 280, "1c": 280, "timevari": 280, "create_symbol": 280, "remove_unused_parameters_and_rv": 280, "mu_reference_model": 280, "simplify_express": 280, "bump_model_numb": 280, "get_doseid": [280, 302], "get_unit_of": 280, "get_concentration_parameters_from_data": [280, 302], "write_csv": 280, "resample_data": 280, "omit_data": 280, "get_observation_express": 280, "get_individu": 280, "get_dos": [280, 302], "list_time_varying_covari": [280, 302], "estmeth": 280, "optim": [280, 290, 300, 307], "incorrect": 280, "add_allometri": [280, 302], "insert_aft": 280, "modelstat": 280, "power_on_ruv": 280, "estimationmethod": 280, "guard": 280, "avoid": [280, 290, 298, 316], "cdd": 280, "bipp": [280, 282], "5000": 280, "shift": 280, "nest": 280, "due": [280, 311], "set_dtbs_error_model": [280, 302], "dure": [280, 285, 316], "logger": 280, "parametr": 280, "broken": 280, "parallel": [280, 314], "print_model_symbol": 280, "get_observ": [280, 302], "parameter_sampl": 280, "api": [280, 290, 302, 306, 307, 315], "improv": [280, 310], "eta_shrinkag": 280, "summarize_model": 280, "window": [280, 285, 294, 298], "rstudio": [280, 307, 316], "zero_order_absorpt": 280, "first_order_absorpt": 280, "bolus_absorpt": 280, "set_bolus_absorpt": [280, 302], "seq_zo_fo_absorpt": 280, "set_seq_zo_fo_absorpt": [280, 302], "have_zero_order_absorpt": 280, "has_zero_order_absorpt": 280, "individual_shrinkag": 280, "individual_parameter_statist": 280, "pk_paramet": 280, "create_rv_block": 280, "split_rv_block": 280, "nind": 280, "nob": 280, "nobsi": 280, "remove_error": 280, "additive_error": 280, "proportional_error": 280, "combined_error": 280, "has_additive_error": 280, "has_proportional_error": 280, "has_combined_error": 280, "theta_as_stdev": 280, "set_dtbs_error": 280, "tdist": [280, 308], "john_drap": 280, "add_individual_paramet": 280, "first_order_elimin": 280, "zero_order_elimin": 280, "michaelis_menten_elimin": 280, "mixed_mm_fo_elimin": 280, "revert": 280, "thread": [280, 283], "site": 280, "crossval": [280, 309], "qa": [280, 309], "plain": [280, 284, 285], "sdcorr": 280, "data_transform": 280, "evalut": 280, "dependent_variable_symbol": 280, "releas": [280, 298, 316], "claus": 280, "interfac": [280, 290, 294, 296, 298, 300, 302, 307, 315, 316], "com": 280, "stdin": 280, "123": [280, 287, 295, 297, 301, 303, 311], "clearer": 280, "prioriti": [280, 304], "aggregatedmodelfitresult": 280, "priorit": [280, 304], "half": [280, 308, 310], "life": [280, 308, 310], "set_nam": 280, "parameter_init": 280, "base_parameter_chang": [280, 293], "parameter_vari": [280, 293, 310], "coeffici": 280, "frem_result": 280, "simevalresult": 280, "nonfixed_init": 280, "parameterset": 280, "migrat": 280, "github": [280, 285, 294, 296, 307, 316], "action": [280, 282, 283, 285, 298, 307], "columntyp": 280, "to_base_model": 280, "comined_mm_fo_elimin": 280, "absorption_r": 280, "pretti": 280, "qaresult": 280, "nmtranparseerror": 280, "error_model": 280, "pharmpyconfigpath": [280, 284], "environ": [280, 283, 315, 316], "linearizeresult": 280, "reset_indic": 280, "multiindic": 280, "functionsadd_lag_tim": 280, "yaml": 280, "view": [280, 298, 312], "assumpt": [280, 298], "0th": [280, 282], "parser": 280, "individul": 280, "extend": [280, 298, 310, 312], "postprocess": [280, 309], "librari": [280, 294, 296, 298, 307, 316], "stella": [281, 286, 307], "belin": [281, 286, 307], "gunnar": [281, 286], "yngman": [281, 286, 293], "simon": [281, 286], "carter": [281, 286], "buatoi": [281, 286], "jo\u00e3o": [281, 286], "abrant": [281, 286], "andrew": [281, 286], "hooker": [281, 286], "assemblerr": 281, "novel": 281, "process": [281, 285, 311], "2021": [281, 293], "9656": 281, "subcommand": 282, "top": [282, 289, 314], "often": [282, 285, 300, 312], "help": [282, 283, 287, 302, 307, 314, 316], "verb": 282, "particular": [282, 283, 285, 289, 298, 299], "welcom": [282, 283, 285, 298], "exit": 282, "program": [282, 283, 294, 298], "pheno_r": [282, 289, 300, 301, 302], "prettyprint": 282, "output_fil": 282, "idcol": 282, "datecol": 282, "match": 282, "pager": 282, "stdout": [282, 314], "datasetsmultipl": 282, "1th": 282, "quot": 282, "comb": 282, "elimini": 282, "propot": 282, "error_typ": 282, "givenbi": 282, "cov_sampl": 282, "posdef": 282, "non_fix": 282, "input_path": 282, "pk_oral": 282, "pk_iv": 282, "particip": 283, "project": [283, 285, 296, 298, 316], "made": [283, 298, 300], "member": 283, "globe": 283, "divers": 283, "skill": [283, 307], "person": [283, 298], "experi": 283, "growth": 283, "everyon": [283, 285, 298], "guidelin": 283, "insid": [283, 298], "goal": 283, "inclus": [283, 298, 310], "grow": 283, "pledg": 283, "treat": [283, 285, 298], "peopl": 283, "harass": 283, "bulli": 283, "sexual": 283, "orient": 283, "gender": 283, "ident": 283, "appear": [283, 316], "nation": [283, 286], "ethnic": 283, "religion": 283, "imageri": 283, "sexist": 283, "racist": 283, "exclusionari": 283, "joke": 283, "acknowledg": [283, 298], "citat": 283, "request": [283, 285], "author": [283, 298], "own": [283, 284, 290, 298], "cite": 283, "those": [283, 298, 302, 314], "realiz": 283, "varieti": 283, "opinion": 283, "background": 283, "serv": [283, 298, 307], "enrich": 283, "discuss": 283, "pro": 283, "con": 283, "technologi": 283, "proactiv": 283, "ensur": [283, 298], "heard": 283, "feel": [283, 307], "confid": 283, "freeli": 283, "question": 283, "answer": 283, "respectfulli": 283, "pai": 283, "attent": 283, "feedback": 283, "forum": 283, "especi": 283, "contribut": [283, 296, 298], "conscienti": 283, "percept": 283, "wider": 283, "respond": 283, "strive": 283, "behavior": 283, "encourag": [283, 285, 290, 296], "debat": 283, "disagr": 283, "entir": [283, 285, 298, 314], "silent": 283, "violat": [283, 298], "contact": [283, 298], "talk": 283, "privat": [283, 298], "situat": 283, "onlin": 283, "offlin": 283, "mail": [283, 298], "social": 283, "media": 283, "confer": 283, "associ": [283, 297, 298], "adapt": [283, 298], "astropi": 283, "global": [284, 316], "nonmen": 284, "conf": 284, "ini": [284, 302], "default_nonmem_path": 284, "nmfe751": 284, "licfil": 284, "rpath": 284, "temporarili": 284, "pharmpyconfigfil": 284, "your": [285, 294, 296, 298, 304, 314, 316], "bug": 285, "appreci": 285, "suggest": [285, 296], "suitabl": [285, 307], "student": [285, 307], "commun": [285, 298], "aspir": 285, "conduct": [285, 303], "foster": 285, "linux": [285, 294], "maco": [285, 294], "ll": [285, 302], "badg": 285, "pip": [285, 294], "python3": 285, "pip3": 285, "guid": [285, 289, 300, 302], "former": 285, "ubuntu": 285, "apt": 285, "url": [285, 294], "render": [285, 298, 307], "On": [285, 307], "sudo": 285, "brew": 285, "unnecessari": [285, 298], "thing": [285, 298], "instruct": [285, 294, 301, 314], "black": 285, "formatt": 285, "flake8": 285, "linter": 285, "isort": 285, "lint": 285, "reformat": 285, "py39": 285, "test_paramet": 285, "py": [285, 294], "test_get_theta": 285, "apart": 285, "suit": 285, "purpos": [285, 298], "test_modelsearch": 285, "test_summary_individu": 285, "pull": 285, "manag": 285, "contributor": [285, 298], "emploi": 285, "commit": [285, 298], "push": 285, "name_of_branch": 285, "deploy": 285, "setup": 285, "pypi": [285, 294], "io": [285, 290, 294], "trigger": [285, 300], "tag": 285, "disturb": 285, "checkout": 285, "rebas": 285, "changelog": 285, "bump": 285, "good": [285, 298], "semant": 285, "bumpvers": 285, "cfg": 285, "sh": 285, "patch": 285, "minor": 285, "major": [285, 298], "copyright": 285, "necessari": [285, 298], "coi": 285, "stream": [285, 300], "verbatim": [285, 298], "farmaci": 286, "uu": 286, "kajsa": 286, "harl": 286, "zhe": [286, 307], "huang": [286, 307], "aurelien": 286, "oom": 286, "johan": 286, "borg": 286, "antonia": 286, "hufnagl": 286, "piyanan": 286, "assawasuwannakit": 286, "xiaomei": 286, "chen": 286, "alzahra": 286, "hamdan": 286, "osama": 286, "qutishat": 286, "shijun": 286, "wang": 286, "tianwu": 286, "yang": 286, "keqi": 286, "shi": 286, "xuanlin": 286, "liu": 286, "samia": 286, "moham": 286, "yersultan": 286, "mirasbekov": 286, "warm": 286, "thank": 286, "sponsor": 286, "hoffman": 286, "la": 286, "roch": 286, "ltd": 286, "pharmetheu": 286, "uppsala": [286, 296], "univers": [286, 296], "enabl": [286, 298], "resourc": 286, "swedish": 286, "infrastructur": 286, "snic": 286, "uppmax": 286, "research": [286, 307], "council": 286, "inter": [287, 295, 302], "five": 287, "sentenc": 287, "manual": [287, 289, 314], "rewritten": 287, "notic": [287, 298], "semicolon": 287, "mox2": [287, 292, 295, 297, 303, 314], "covsearch_run7": 287, "covsearch_run8": 287, "covsearch_run9": 287, "covsearch_run10": 287, "covsearch_run11": 287, "covsearch_run12": 287, "covsearch_run13": 287, "covsearch_run14": 287, "covsearch_run15": 287, "covsearch_run16": 287, "covsearch_run17": 287, "covsearch_run18": 287, "covsearch_run19": 287, "covsearch_run20": 287, "covsearch_run21": 287, "covsearch_run22": 287, "covsearch_run23": 287, "covsearch_run24": 287, "covsearch_run25": 287, "covsearch_run26": 287, "covsearch_run27": 287, "covsearch_run28": 287, "covsearch_run29": 287, "covsearch_run30": 287, "covsearch_run31": 287, "covsearch_run32": 287, "covsearch_run33": 287, "covsearch_run34": 287, "covsearch_run35": 287, "covsearch_run36": 287, "covsearch_run37": 287, "covsearch_run38": 287, "covsearch_run39": 287, "covsearch_run40": 287, "covsearch_run41": 287, "covsearch_run42": 287, "covsearch_run43": 287, "covsearch_run44": 287, "covsearch_run45": 287, "covsearch_run46": 287, "covsearch_run47": 287, "covsearch_run48": 287, "covsearch_run49": 287, "covsearch_run50": 287, "covsearch_run51": 287, "covsearch_run52": 287, "covsearch_run53": 287, "covsearch_run54": 287, "pvalu": [287, 312], "goal_pvalu": [287, 312], "is_backward": [287, 312], "047127e": 287, "710000e": 287, "568110e": 287, "494490e": 287, "498453e": 287, "459287e": 287, "280678e": 287, "923500e": 287, "003390e": 287, "984500e": 287, "372293e": 287, "176965e": 287, "207550e": 287, "626878e": 287, "564495e": 287, "539960e": 287, "762000e": 287, "823200e": 287, "417058e": 287, "759040e": 287, "469024e": 287, "811054e": 287, "642452e": 287, "840779e": 287, "261720e": 287, "651215e": 287, "954671e": 287, "163414e": 287, "926594e": 287, "491049e": 287, "423998e": 287, "706676e": 287, "374390e": 287, "054865e": 287, "105347e": 287, "300000e": 287, "029682e": 287, "641559e": 287, "748923e": 287, "363918e": 287, "203548e": 287, "052323e": 287, "567877e": 287, "507358e": 287, "510000e": 287, "1292": [287, 292, 295, 297, 303], "186761": [287, 292, 295, 297, 303], "742325": 287, "929085": 287, "315057": 287, "1346": 287, "501817": 287, "978215": 287, "1332": 287, "164976": 287, "062682": 287, "1312": 287, "249442": 287, "061671": 287, "248431": 287, "056538": 287, "1313": [287, 303], "243298": 287, "732689": 287, "919450": 287, "651626": 287, "1335": 287, "838386": 287, "814832": 287, "1334": 287, "001593": 287, "363759": 287, "550520": 287, "989077": 287, "175838": 287, "136326": 287, "323087": 287, "387950": 287, "1316": 287, "574711": 287, "961688": 287, "148448": 287, "743393": 287, "930153": 287, "617998": 287, "1340": 287, "804759": 287, "641996": 287, "1345": 287, "828756": 287, "288366": 287, "1357": 287, "475127": 287, "263168": 287, "1343": [287, 295], "449928": 287, "814686": 287, "1319": 287, "001446": 287, "181808": 287, "368568": 287, "957602": 287, "144362": 287, "567343": 287, "1347": 287, "754104": 287, "426389": 287, "613149": 287, "324567": 287, "1358": [287, 302], "511327": 287, "446030": 287, "632790": 287, "549224": 287, "1326": 287, "735985": 287, "997342": 287, "184102": 287, "617389": 287, "1351": 287, "804150": 287, "900404": 287, "1350": 287, "087164": 287, "566615": 287, "1391": 287, "753375": 287, "929659": 287, "1352": 287, "116420": 287, "990522": 287, "177283": 287, "217267": 287, "404028": 287, "62": [287, 308], "729333": 287, "1354": 287, "916093": 287, "379219": 287, "1393": 287, "565980": 287, "67": [287, 310, 312], "670588": 287, "1359": 287, "857348": 287, "016040": 287, "202801": 287, "926496": 287, "113256": 287, "139": 287, "462177": 287, "1431": 287, "648937": 287, "83": [287, 308, 310], "706655": 287, "1375": 287, "893415": 287, "798603": 287, "1367": 287, "985364": 287, "801019": 287, "1438": 287, "987780": 287, "92": 287, "443408": 287, "1384": 287, "630169": 287, "997461": 287, "1439": 287, "184221": 287, "322869": 287, "509630": 287, "925020": 287, "111781": 287, "142": 287, "814402": 287, "1435": 287, "001163": 287, "862830": 287, "049591": 287, "449696": 287, "636456": 287, "801017": 287, "987778": 287, "89": [287, 303], "86": 287, "1414": 287, "872375": 287, "93": [287, 292], "810457": 287, "76": 287, "630168": 287, "68": 287, "5328": [287, 292, 295, 297, 303], "2300": [287, 292, 295, 303], "433676": [287, 292, 295, 297, 303], "2632": 287, "2400": 287, "447194": 287, "8757": 287, "106": [287, 295, 308, 310, 311], "2690": 287, "429235": 287, "4824": 287, "0490": 287, "435646": 287, "1536": 287, "7690": 287, "430342": 287, "9763": 287, "102": 287, "8640": 287, "428158": 287, "9807": 287, "1030": 287, "505090": 287, "3823": 287, "4790": 287, "453248": 287, "3323": 287, "5279": 287, "434088": 287, "7087": 287, "109": [287, 303], "1750": 287, "459561": 287, "8501": 287, "4740": 287, "428178": 287, "4821": 287, "0270": 287, "435683": 287, "1635": 287, "5920": 287, "433194": 287, "0931": 287, "1120": 287, "435607": 287, "1216": 287, "2180": 287, "519385": 287, "3873": 287, "4580": 287, "453399": 287, "4279": 287, "6231": 287, "442192": 287, "9115": 287, "9240": 287, "466270": 287, "7337": 287, "9590": 287, "409478": 287, "3781": 287, "415011": 287, "1007": 287, "5110": 287, "446059": 287, "1211": 287, "8490": 287, "522201": 287, "2833": 287, "7400": 287, "430777": 287, "3688": 287, "9010": 287, "444906": 287, "9130": 287, "7450": 287, "468161": 287, "8124": 287, "7120": 287, "407766": 287, "3789": 287, "2080": 287, "416694": 287, "1985": 287, "6770": 287, "441794": 287, "2994": 287, "94": 287, "1796": 287, "587939": 287, "4692": 287, "3027": 287, "440385": 287, "0941": 287, "6170": 287, "463834": 287, "6693": 287, "2570": 287, "413923": 287, "3618": 287, "427491": 287, "2658": 287, "5620": 287, "521096": 287, "4546": 287, "9522": 287, "446657": 287, "0732": 287, "0130": 287, "454492": 287, "7145": 287, "9771": 287, "451302": 287, "3318": 287, "9710": 287, "477444": 287, "4944": 287, "3068": 287, "502124": 287, "0790": 287, "7890": 287, "462595": 287, "7389": 287, "8006": 287, "491811": 287, "6677": 287, "7770": 287, "477864": 287, "6488": 287, "0460": 287, "472418": 287, "9834": 287, "9929": 287, "474434": 287, "0359": 287, "2120": 287, "478021": 287, "0706": 287, "1991": 287, "474688": 287, "0336": 287, "8083": 287, "475373": 287, "0636": 287, "2525": 287, "473063": 287, "0292": 287, "8033": 287, "473542": 287, "0651": 287, "9375": 287, "483644": 287, "0661": 287, "5310": 287, "462817": 287, "0432": 287, "1300": [287, 297], "446808": 287, "7913": 287, "90": 287, "1894": 287, "489466": 287, "9838": 287, "9945": 287, "474441": 287, "0361": 287, "478038": 287, "ruv_prop_estim": [287, 292, 297, 311], "209972": [287, 292, 295, 297, 303], "197452": 287, "005338": 287, "192852": 287, "199549": 287, "193411": 287, "195608": 287, "192557": 287, "198783": 287, "191425": 287, "192934": 287, "192682": 287, "000659": 287, "199545": 287, "000303": 287, "193747": 287, "000956": 287, "197305": 287, "006150": 287, "194664": 287, "005918": 287, "198812": 287, "000334": 287, "192753": 287, "006503": 287, "194238": 287, "009567": 287, "189160": 287, "005291": 287, "195766": 287, "003125": 287, "195730": 287, "195098": 287, "006600": 287, "195843": 287, "001364": 287, "189330": 287, "003100": 287, "193116": 287, "008094": 287, "189540": 287, "006380": 287, "196038": 287, "002606": 287, "197429": 287, "000340": 287, "204599": 287, "002549": 287, "190442": 287, "000522": 287, "195705": 287, "005726": 287, "192398": 287, "002984": 287, "196915": 287, "000299": 287, "198387": 287, "001229": 287, "190453": 287, "000216": 287, "197082": 287, "005988": 287, "191512": 287, "002433": 287, "194217": 287, "000649": 287, "191075": 287, "001918": 287, "197129": 287, "005915": 287, "183751": 287, "001489": 287, "187999": 287, "001004": 287, "194026": 287, "005955": 287, "187663": 287, "002481": 287, "193344": 287, "009365": 287, "187822": 287, "002901": 287, "187730": 287, "187425": 287, "002946": 287, "184713": 287, "006622": 287, "187724": 287, "002919": 287, "187525": 287, "003050": 287, "192812": 287, "005142": 287, "183104": 287, "001493": 287, "187672": 287, "002483": 287, "193349": 287, "009366": 287, "pop_clwt_estim": 287, "382904": 287, "010536": 287, "387669": 287, "010497": 287, "396947": 287, "010523": 287, "385807": 287, "010703": 287, "554417": 287, "011851": 287, "519989": 287, "012179": 287, "808497": 287, "011109": 287, "737404": [287, 313], "007109": 287, "709206": 287, "000803": 287, "736659": 287, "000429": 287, "706752": 287, "000822": 287, "662625": 287, "002097": 287, "709124": 287, "000793": 287, "704774": 287, "427285": 287, "003711": 287, "779125": 287, "001087": 287, "007108": 287, "059279": 287, "517590": 287, "056724": 287, "520520": 287, "063392": 287, "057943": 287, "019268": 287, "348000": 287, "008419": 287, "040813": 287, "045624": 287, "023159": 287, "057041": 287, "059912": 287, "003577": 287, "495110": 287, "070972": 287, "033397": 287, "013863": 287, "012482": 287, "367050": 287, "020109": 287, "442940": 287, "030354": 287, "491875": 287, "038044": 287, "224276": 287, "001885": 287, "848782": 287, "017435": 287, "646840": 287, "585757": 287, "000169": 287, "367142": 287, "002221": 287, "737357": 287, "009685": 287, "033267": 287, "009238": 287, "267484": 287, "012667": 287, "165471": 287, "005033": 287, "094740": 287, "010833": 287, "065816": 287, "004749": 287, "096523": 287, "005557": 287, "098655": 287, "107862": 287, "012020": 287, "118838": 287, "005781": 287, "002862": 287, "222520": 287, "005160": 287, "361570": 287, "008017": 287, "030930": 287, "005034": 287, "094706": 287, "010829": 287, "065876": 287, "pop_matwt_estim": 287, "019706": 287, "014651": 287, "020136": 287, "014954": 287, "022336": 287, "011936": 287, "005508": 287, "002344": 287, "013967": 287, "034213": 287, "034044": 287, "009672": 287, "008593": 287, "017124": 287, "000315": 287, "022223": 287, "019316": 287, "009542": 287, "010323": 287, "008652": 287, "018053": 287, "019211": 287, "001906": 287, "014021": 287, "011399": 287, "003565": 287, "010903": 287, "014331": 287, "013699": 287, "015830": 287, "000202": [287, 313], "002078": 287, "009019": 287, "005773": 287, "012366": 287, "002607": 287, "002247": 287, "005768": 287, "011567": 287, "006160": 287, "014272": 287, "004566": 287, "010938": 287, "002378": 287, "007473": 287, "011606": 287, "010672": 287, "000456": 287, "009445": 287, "014649": 287, "012169": 287, "002248": 287, "pop_vcwt_estim": 287, "953372": 287, "013320": 287, "984897": 287, "012092": 287, "972469": 287, "011946": 287, "954734": 287, "010781": 287, "009540": 287, "009922": 287, "989687": 287, "009576": 287, "986758": 287, "869150": 287, "632058": 287, "008418": 287, "751771": 287, "007571": 287, "416489": 287, "013879": 287, "724866": 287, "008196": 287, "746265": 287, "007399": 287, "727224": 287, "008331": 287, "666572": 287, "010074": 287, "751144": 287, "008031": 287, "711725": 287, "008833": 287, "012851": 287, "967468": 287, "751794": 287, "007573": 287, "416464": 287, "013880": 287, "1403": [287, 295, 297, 303, 311], "1404": [287, 295, 297, 303, 311], "1405": [287, 295, 297, 303, 311], "1406": [287, 295, 297, 303, 311], "1407": [287, 295, 297, 303, 311], "757118": [287, 295, 297, 303], "659694": [287, 295, 297, 303], "302503": [287, 295, 297, 303], "464327": [287, 295, 297, 303], "034898": [287, 295, 297, 303], "482240": 287, "223632": 287, "357442": 287, "119299": 287, "565277": 287, "696443": 287, "062486": 287, "234841": 287, "088594": 287, "953572": 287, "857979": 287, "193305": 287, "003283": 287, "861988": 287, "188718": 287, "005806": 287, "962325": 287, "455479": 287, "289527": 287, "216857": 287, "4015": 287, "2022": [287, 292, 295, 297, 303, 314], "462": 287, "nhowev": [287, 292, 297], "reduced_ofv": [287, 312], "extended_ofv": [287, 312], "ofv_drop": [287, 312], "extended_st": [287, 312], "621435": 287, "246753": 287, "394001": 287, "645626": 287, "219363": 287, "001068": 287, "875674": 287, "899671": 287, "152040": 287, "126842": 287, "678359": 287, "045482": 287, "821275": 287, "431017": 287, "290062": 287, "366965": 287, "488428": 287, "591623": 287, "039740": 287, "659788": 287, "942802": 287, "017391": 287, "380435": 287, "441298": 287, "668043": 287, "180108": 287, "388697": 287, "680065": 287, "025518": 287, "935973": 287, "446136": 287, "690615": 287, "782563": 287, "002416": 287, "644805": 287, "554053": 287, "674591": 287, "072441": 287, "183059": 287, "134631": 287, "547765": 287, "311846": 287, "373764": 287, "196444": 287, "delta_df": [287, 312], "extended_signific": [287, 312], "covariate_effect": [287, 293, 310, 312], "ofv_summari": [287, 312], "candidate_summari": [287, 312], "n_test": [287, 312], "n_ok": [287, 312], "n_localmin": [287, 312], "n_fail": [287, 312], "stepinclud": [287, 312], "estimation_ofv": 288, "prediction_ofv": 288, "545": 288, "863847": 288, "186": 288, "192727": 288, "512": 288, "953185": 288, "694832": 288, "547": 288, "843632": 288, "184": [288, 308, 312], "022535": 288, "579": 288, "109635": 288, "596550": 288, "prediction_ofv_sum": 288, "747": 288, "506644594254": 288, "read_raw_dataset": 289, "sever": [289, 294, 302, 310], "examin": [289, 292, 294, 315], "di": 289, "role": 289, "identif": [289, 311], "mostli": [289, 290, 307], "steven": 289, "typologi": 289, "en": [289, 290, 293], "wikipedia": 289, "wiki": [289, 298], "level_of_measur": 289, "annot": 289, "kg": 289, "mg": 289, "l": 289, "low": [289, 302, 315], "understand": [289, 306], "accompani": [289, 298], "runner": 289, "testdata": [289, 301], "arrai": [289, 300, 302, 314], "And": [289, 298, 302, 314], "under": [290, 296, 298, 312, 316], "construct": [290, 306], "complet": 290, "four": 290, "distinct": 290, "layer": [290, 303, 305], "worklow": 290, "higher": [290, 296, 300, 302, 313], "coupl": 290, "mathemat": [290, 300, 307], "concid": 290, "live": 290, "namespac": 290, "mutablesequ": 290, "scalar": [290, 300], "element": [290, 301, 316], "concern": [290, 298], "expos": 290, "numpydoc": 290, "readthedoc": 290, "ecosystem": 290, "thu": [290, 295, 298, 300, 314], "wrap": 290, "share": [290, 298, 305], "leak": 290, "third": [290, 298], "parti": [290, 298], "break": 290, "run_estmethod": 292, "chapter": [292, 303], "few": 292, "cartesian": 292, "addition": [292, 303, 314], "9999": 292, "runtime_estim": 292, "estmethod_run2": 292, "2422": 292, "465718": 292, "81": [292, 295, 301], "estmethod_run1": 292, "2271": 292, "769243": 292, "run_typ": 292, "1299": [292, 297], "696027": 292, "2420": 292, "117263": 292, "145": 292, "2702": 292, "1840": 292, "3241": 292, "6578": 292, "iiv_cl_estim": [292, 297, 311], "iiv_vc_estim": [292, 297, 311], "481858": [292, 295, 297, 303], "593654": [292, 295, 297, 303], "439589": 292, "483291": 292, "598179": 292, "901289": 292, "419533": 292, "408292": 292, "iiv_mat_estim": [292, 297, 311], "000130": [292, 297, 303], "322572": 292, "197647": 292, "865979": 292, "105366": 292, "10000": 292, "787": 292, "WITH": [292, 295, 297, 298], "THE": [292, 295, 297, 298], "creation": 293, "model_3b": 293, "u": [293, 302], "eta_i": 293, "n_": 293, "par": [293, 300], "eta_k": 293, "bmatrix": 293, "vdot": 293, "eta_": [293, 300, 302], "sim": [293, 300, 302, 313], "mathcal": [293, 300, 302], "mu_2": 293, "omega_": [293, 300], "n1": 293, "n2": 293, "ddot": 293, "latter": 293, "partit": 293, "5th": 293, "630859": 293, "868770": 293, "176754": 293, "95th": 293, "925602": 293, "082310": 293, "244607": 293, "569077": 293, "600360": 293, "632538": 293, "532478": 293, "824355": 293, "138312": 293, "577861": 293, "761430": 293, "991915": 293, "003863": 293, "148763": 293, "297579": 293, "600771": 293, "631260": 293, "661025": 293, "315965": 293, "549669": 293, "811532": 293, "margin": 293, "ij": 293, "ijk": 293, "omega_k": 293, "sigma_1": 293, "sigma_2": 293, "sigma_i": 293, "turn": [293, 300], "percent": 293, "red": 293, "figur": 293, "vconcatchart": 293, "sigma_": [293, 300], "020503": 293, "628814": 293, "009309": 293, "544459": 293, "026950": 293, "613127": 293, "050396": 293, "551581": 293, "individual_effect": 293, "913307": 293, "899565": 293, "923297": 293, "939015": 293, "926632": 293, "948404": 293, "933506": 293, "894967": 293, "970755": 293, "010192": 293, "973823": 293, "047109": 293, "992728": 293, "986142": 293, "999404": 293, "361911": 293, "322628": 293, "418737": 293, "894772": 293, "868658": 293, "917333": 293, "947797": 293, "923656": 293, "969732": 293, "771958": 293, "748072": 293, "790423": 293, "790120": 293, "768277": 293, "806911": 293, "percentu": 293, "unexplained_vari": 293, "sd_observ": 293, "sd_5th": 293, "sd_95th": 293, "469535": 293, "359934": 293, "547612": 293, "465490": 293, "352335": 293, "538174": 293, "165502": 293, "141580": 293, "190726": 293, "159149": 293, "134989": 293, "183613": 293, "420471": 293, "327104": 293, "490419": 293, "404440": 293, "306148": 293, "467046": 293, "143317": 293, "122348": 293, "166012": 293, "141826": 293, "120282": 293, "163610": 293, "percetil": 293, "025328": 293, "022571": 293, "020115": 293, "216681": 293, "188254": 293, "163572": 293, "027391": 293, "021634": 293, "020540": 293, "intermedi": 293, "model_4": [293, 300], "parameter_inits_and_estim": 293, "model_3": 293, "115195": 293, "007066": 293, "209016": 293, "125999": 293, "020191": 293, "224959": 293, "126000": 293, "007084": 293, "38635": 293, "220463": 293, "195326": 293, "176796": 293, "bsv_apgr": [293, 300], "010583": 293, "107027": 293, "000008": 293, "171529": 293, "404278": 293, "012042": 293, "115427": 293, "000032": 293, "208475": 293, "415588": 293, "000030": 293, "062712": 293, "117271": 293, "039930": 293, "446939": 293, "402075": 293, "bsv_wgt": [293, 300], "244579": 293, "244448": 293, "002173": 293, "002170": 293, "244080": 293, "007763": 293, "007760": 293, "249237": 293, "034610": 293, "015250": 293, "relative_chang": 293, "773218": 293, "095327": 293, "520526": 293, "271369": 293, "110618": 293, "974324": 293, "657803": 293, "852": 293, "803483": 293, "753": 293, "302743": 293, "themselv": 293, "ideal": 293, "estimated_covari": 293, "stdev": 293, "423728": 293, "237640": 293, "525424": 293, "704565": [293, 302], "nyberg": 293, "hb": 293, "jonsson": 293, "mo": 293, "introduct": 293, "cpt": 293, "pharmacometr": [293, 296, 298, 314], "syst": 293, "pharmacol": 293, "1002": 293, "psp4": 293, "12741": 293, "plan": 294, "stabl": 294, "googl": [294, 307], "coral": 294, "repo": 294, "tflite_runtim": 294, "nonlinear": 294, "read_model_result": 295, "aspect": [295, 302, 310, 314], "explor": [295, 307], "naiv": 295, "minima": 295, "\u03b4ofv": [295, 297, 303], "\u03b4aic": [295, 297, 303], "\u03b4bic": [295, 297, 303], "iivsearch_no_of_etas_candidate3": 295, "282024": 295, "iivsearch_no_of_etas_candidate2": 295, "217": 295, "691571": 295, "iivsearch_no_of_etas_candidate6": 295, "385": 295, "641987": 295, "iivsearch_no_of_etas_candidate1": 295, "631": 295, "871991": 295, "iivsearch_no_of_etas_candidate5": 295, "633": [295, 301], "419500": 295, "iivsearch_no_of_etas_candidate4": 295, "815": 295, "076729": 295, "iivsearch_no_of_etas_candidate7": 295, "834": 295, "249063": 295, "iivsearch_block_structure_candidate1": 295, "971960": 295, "1283": 295, "597406": 295, "1279": 295, "315382": 295, "1061": 295, "623812": 295, "673395": 295, "443392": 295, "645": 295, "895882": 295, "464": 295, "238653": 295, "066319": 295, "1365": 295, "569365": 295, "178325": 295, "1280": 295, "1278": [295, 303], "1070": 295, "204731": 295, "1058": 295, "897": 295, "963854": 295, "024311": 295, "644": 295, "650": 295, "186341": 295, "640": 295, "468": 295, "529112": 295, "458": 295, "437": 295, "440744": 295, "1364": 295, "1261": [295, 297], "189012": 295, "1259": [295, 303], "530267": [295, 303], "1039": 295, "215418": [295, 312], "641723": 295, "034998": 295, "620": 295, "864210": 295, "206982": 295, "417": 295, "411370": 295, "160972": 295, "5333": 295, "0366": 295, "1164": 295, "2929": 295, "8058": 295, "9055": 295, "2270": 295, "9424": 295, "1360": 295, "239": 295, "1090": 295, "234": 295, "6680": 295, "9380": 295, "6690": 295, "9880": 295, "433544": 295, "114210": 295, "347648": 295, "316164": 295, "310155": 295, "922906": 295, "434563": 295, "436279": 295, "481830": 295, "594777": 295, "396159": 295, "516927": 295, "593578": 295, "414690": 295, "247930": 295, "656304": 295, "00013": 295, "31998": 295, "08352": 295, "43473": 295, "209975": 295, "401593": 295, "574966": 295, "736398": 295, "750954": 295, "744891": 295, "810669": 295, "215885": 295, "iiv_cl_iiv_vc_estim": 295, "498114": 295, "965311": 295, "348227": 295, "596114": 295, "524856": 295, "831038": 295, "973037": 295, "826292": 295, "168816": 295, "275494": 295, "612863": 295, "081253": 295, "444919": 295, "093815": 295, "067016": 295, "554482": 295, "103963": 295, "060027": 295, "670815": 295, "108198": 295, "049148": 295, "371": 295, "rxode2": [296, 302], "post": [296, 311], "sens": 297, "brute": 297, "approach": 297, "nonzero": 297, "constant": 297, "540508": 297, "1265": 297, "694052": 297, "230772": 297, "384316": 297, "230394": 297, "383938": 297, "1262": 297, "153544": 297, "750000": 297, "403544": 297, "750400": 297, "403145": 297, "060114": 297, "093431": 297, "043077": 297, "1257": 297, "110467": 297, "782429": 297, "1115": 297, "911624": 297, "015062": 297, "707566": 297, "017679": 297, "017280": 297, "707992": 297, "707614": 297, "017728": 297, "1145": 297, "944840": 297, "230": 297, "1954": 297, "242": [297, 308, 310], "440613": 297, "665": 297, "439784": 297, "1951": 297, "241": 297, "1950": 297, "440611": 297, "1402": 297, "439785": 297, "439783": 297, "2313": 297, "438628": 297, "474140": 297, "586866": 297, "311861": 297, "472835": 297, "590422": 297, "320387": 297, "474125": 297, "586859": 297, "311859": 297, "474111": 297, "586860": 297, "311903": 297, "590425": 297, "320393": 297, "472840": 297, "590424": 297, "320395": 297, "572627": 297, "290631": 297, "194680": 297, "002735": 297, "195532": 297, "194676": 297, "194675": 297, "195531": 297, "197005": 297, "483460": 297, "000006": 297, "000000e": [297, 312], "241921": 297, "119820": 297, "001912": 297, "068405": 297, "121866": 297, "620420": 297, "271367": 297, "291396": 297, "230854": 297, "051358": 297, "936871": 297, "267222": 297, "042977": 297, "050766": 297, "059323": 297, "250083": 297, "291876": 297, "187631": 297, "020838": 297, "612880": 297, "660334": 297, "657": 297, "279": [297, 308], "adopt": 298, "wikimedia": 298, "bowl_of_hygieia_by_david": 298, "svg": 298, "cc": 298, "BY": 298, "sa": 298, "font": 298, "pt": 298, "san": 298, "relicens": 298, "lgpl": 298, "know": 298, "maintaint": 298, "softwar": [298, 300, 301, 302, 307, 314], "redistribut": 298, "publish": 298, "foundat": 298, "hope": 298, "warranti": 298, "impli": 298, "merchant": 298, "FOR": 298, "modif": [298, 310], "permit": 298, "retain": 298, "disclaim": 298, "reproduc": 298, "materi": 298, "holder": 298, "AND": 298, "AS": 298, "OR": 298, "BUT": 298, "NOT": 298, "TO": 298, "OF": 298, "IN": 298, "shall": 298, "BE": 298, "liabl": 298, "indirect": 298, "incident": 298, "exemplari": 298, "consequenti": 298, "damag": 298, "procur": 298, "servic": 298, "loss": 298, "profit": 298, "busi": 298, "interrupt": 298, "ON": 298, "theori": [298, 300], "liabil": 298, "contract": 298, "tort": 298, "neglig": 298, "aris": 298, "advis": 298, "SUCH": 298, "june": 298, "2007": 298, "inc": 298, "fsf": 298, "preambl": 298, "copyleft": 298, "practic": 298, "design": [298, 300, 307, 314], "awai": 298, "contrast": 298, "guarante": 298, "speak": 298, "price": 298, "charg": 298, "wish": 298, "piec": 298, "prevent": 298, "deni": 298, "ask": [298, 316], "surrend": 298, "therefor": 298, "respons": 298, "grati": 298, "fee": 298, "recipi": 298, "gpl": 298, "assert": 298, "offer": [298, 302], "permiss": 298, "clearli": 298, "sake": 298, "erron": 298, "devic": 298, "although": 298, "manufactur": 298, "fundament": 298, "incompat": 298, "aim": [298, 310], "systemat": 298, "abus": 298, "area": [298, 307], "unaccept": 298, "prohibit": 298, "substanti": 298, "domain": [298, 305, 314], "stand": 298, "readi": 298, "provis": 298, "futur": 298, "threaten": 298, "constantli": 298, "patent": 298, "danger": 298, "proprietari": 298, "assur": 298, "law": 298, "semiconductor": 298, "mask": 298, "license": 298, "address": 298, "organ": [298, 300], "fashion": 298, "exact": 298, "earlier": 298, "cover": [298, 303, 304, 306, 315], "unmodifi": 298, "propag": 298, "secondarili": 298, "infring": 298, "countri": 298, "convei": 298, "mere": 298, "network": 298, "transfer": 298, "extent": 298, "conveni": [298, 300], "promin": 298, "visibl": 298, "menu": 298, "criterion": 298, "offici": 298, "wide": 298, "among": 298, "essenti": 298, "kernel": 298, "script": [298, 314], "link": [298, 311], "subprogram": 298, "intim": 298, "regener": 298, "grant": 298, "irrevoc": 298, "affirm": 298, "unlimit": 298, "constitut": 298, "fair": 298, "equival": [298, 314], "sole": 298, "facil": 298, "compli": 298, "behalf": 298, "relationship": [298, 312], "circumst": 298, "sublicens": 298, "anti": 298, "circumvent": 298, "deem": 298, "technolog": 298, "fulfil": 298, "oblig": 298, "articl": 298, "wipo": 298, "treati": 298, "decemb": 298, "1996": 298, "waiv": 298, "forbid": 298, "exercis": 298, "intent": 298, "enforc": 298, "medium": [298, 307], "conspicu": 298, "intact": 298, "absenc": 298, "along": 298, "relev": [298, 304, 314], "anyon": 298, "who": [298, 304], "possess": 298, "invalid": 298, "natur": 298, "storag": 298, "aggreg": 298, "beyond": 298, "embodi": 298, "durabl": 298, "customarili": 298, "interchang": 298, "spare": 298, "reason": [298, 307], "cost": 298, "server": 298, "occasion": 298, "noncommerci": 298, "subsect": 298, "6b": 298, "further": [298, 300], "clear": [298, 316], "sai": [298, 304], "host": 298, "satisfi": 298, "peer": 298, "transmiss": 298, "6d": 298, "portion": 298, "consum": 298, "tangibl": 298, "household": 298, "sold": 298, "incorpor": 298, "dwell": 298, "doubt": 298, "resolv": [298, 305], "favor": 298, "coverag": 298, "typic": [298, 314], "commerci": 298, "industri": 298, "procedur": 298, "suffic": 298, "interf": 298, "perpetu": 298, "character": 298, "But": 298, "nor": 298, "abil": 298, "rom": 298, "advers": 298, "protocol": 298, "publicli": 298, "password": 298, "unpack": 298, "supplement": 298, "govern": 298, "notwithstand": 298, "misrepresent": 298, "licensor": 298, "declin": 298, "trademark": 298, "trade": 298, "indemnif": 298, "contractu": 298, "impos": 298, "surviv": 298, "termin": 298, "expressli": 298, "void": 298, "paragraph": 298, "ceas": 298, "reinstat": 298, "provision": 298, "perman": 298, "notifi": 298, "prior": 298, "dai": 298, "cessat": 298, "moreov": 298, "cure": 298, "receipt": 298, "qualifi": 298, "ancillari": 298, "consequ": 298, "likewis": 298, "downstream": 298, "complianc": 298, "entiti": 298, "asset": 298, "subdivid": 298, "plu": 298, "effort": 298, "royalti": 298, "litig": 298, "claim": 298, "counterclaim": 298, "lawsuit": 298, "alleg": 298, "sell": 298, "sale": 298, "acquir": 298, "hereaft": 298, "manner": [298, 303], "worldwid": 298, "agreement": 298, "denomin": 298, "coven": 298, "sue": 298, "knowingli": 298, "readili": 298, "arrang": 298, "depriv": 298, "yourself": 298, "benefit": [298, 307], "knowledg": 298, "believ": 298, "pursuant": 298, "convey": 298, "discriminatori": 298, "scope": 298, "payment": 298, "primarili": 298, "march": 298, "constru": 298, "defens": 298, "court": 298, "contradict": 298, "excus": 298, "simultan": [298, 303], "pertin": 298, "agre": 298, "whom": 298, "refrain": 298, "affero": 298, "revis": 298, "Such": 298, "spirit": 298, "ever": 298, "THERE": 298, "qualiti": 298, "prove": 298, "defect": 298, "repair": 298, "WILL": 298, "inabl": 298, "BEING": 298, "inaccur": 298, "sustain": 298, "failur": [298, 307], "review": 298, "waiver": 298, "civil": 298, "greatest": 298, "achiev": 298, "attach": 298, "safest": 298, "pointer": 298, "brief": 298, "idea": [298, 307], "electron": 298, "paper": 298, "hypothet": 298, "Of": 298, "cours": 298, "gui": 298, "box": [298, 310], "employ": 298, "programm": 298, "school": 298, "philosophi": 298, "why": 298, "7b2feb6f20b626a559d3150f6638c111f20b5213": 298, "lin_evalu": 299, "lin_estim": 299, "268756": 299, "problemat": 299, "947354": 299, "939053": 299, "008301": 299, "970582": 299, "012053": 299, "041471": 299, "982345": 299, "979456": 299, "002889": 299, "457096": 299, "435700": 299, "021396": 299, "839445": 299, "838391": 299, "001054": 299, "257222": 299, "278016": 299, "020794": 299, "098344": 299, "077164": 299, "021179": 299, "538623": 299, "520111": 299, "018512": 299, "647972": 299, "673400": 299, "025427": 299, "394648": 299, "373180": 299, "021468": 299, "480163": 299, "505680": 299, "025517": 299, "650236": 299, "629298": 299, "020938": 299, "991406": [299, 301], "988587": 299, "002820": 299, "378873": 299, "372846": 299, "006028": 299, "739906": 299, "725640": 299, "014265": 299, "328801": 299, "326482": 299, "002319": 299, "113286": 299, "104515": 299, "008771": 299, "212076": 299, "325127": 299, "113051": 299, "334048": 299, "321306": 299, "012742": 299, "327782": 299, "306287": 299, "021495": 299, "821537": 299, "795371": 299, "026165": 299, "631283": 299, "620311": 299, "010972": 299, "861666": 299, "855927": 299, "005739": 299, "915260": 299, "913348": 299, "001913": 299, "988972": 299, "024483": 299, "035512": 299, "279274": 299, "269277": 299, "009997": 299, "733179": 299, "729199": 299, "003980": 299, "830055": 299, "827764": 299, "002290": 299, "851725": 299, "847176": 299, "004549": 299, "212098": 299, "192122": 299, "019976": 299, "774789": 299, "773559": 299, "001230": 299, "352292": 299, "351131": 299, "001162": 299, "172644": 299, "165200": 299, "007443": 299, "427375": 299, "420258": 299, "007117": 299, "381438": 299, "412378": 299, "030941": 299, "624011": 299, "614613": 299, "009397": 299, "970630": 299, "955216": 299, "015414": 299, "177025": 299, "002885": 299, "206543": 299, "180626": 299, "025916": 299, "955033": 299, "945036": 299, "982451": 299, "972114": 299, "010337": 299, "051495": 299, "098643": 299, "047147": 299, "424500": 299, "425925": 299, "001425": 299, "734347": 299, "702764": 299, "031583": 299, "018483": 299, "997957": 299, "020526": 299, "810285": [299, 301], "807205": 299, "003080": 299, "279257": 299, "276411": 299, "002846": 299, "168465": 299, "267932": 299, "099467": 299, "190512": 299, "178815": 299, "011697": 299, "749138": 299, "727859": 299, "021278": 299, "598562": 299, "616685": 299, "018123": 299, "237457": 299, "251607": 299, "014150": 299, "568928": 299, "581417": 299, "012489": 299, "800065": 299, "795239": 299, "004826": 299, "098027": 299, "103873": 299, "005846": 299, "586253": [299, 301], "582931": 299, "003323": 299, "663950": 299, "650298": 299, "013652": 299, "850995": 299, "833333": 299, "017662": 299, "605848": 299, "592551": 299, "013297": 299, "iofv_plot": 299, "At": 300, "heart": 300, "li": [300, 314], "subclass": 300, "principl": 300, "mymodel": [300, 302], "parset": 300, "displaystyl": [300, 302], "eps_": 300, "similarli": [300, 316], "theta_": 300, "s_": 300, "a_": [300, 302], "quit": 300, "flexibl": 300, "cumbersom": 300, "easili": 300, "unimport": 300, "frem_path": 300, "frem_model": 300, "frem_model_result": 300, "omega\u2082": 300, "omega\u2083": 300, "omega\u2084": 300, "\u2082": 300, "eta\u2083": 300, "\u2083": 300, "eta\u2084": 300, "eps\u2082": 300, "epscov": 300, "bsv_": 300, "omega_2_1": 300, "omega_3_1": 300, "omega_4_1": 300, "omega_3_2": 300, "omega_4_2": 300, "omega_4_3": 300, "000286193": 300, "0676481": 300, "0256033": 300, "0235094": 300, "00161838": 300, "24458": 300, "omega_est": 300, "0393482": 300, "0168369": 300, "0442286": 300, "0426757": 300, "0259374": 300, "0654878": 300, "00168063": 300, "983027": 300, "240423": 300, "98305": 300, "choleski": 300, "198363807182661": 300, "0848788911603008": 300, "136868454493349": 300, "222967085720797": 300, "616745467855979": 300, "743597812371906": 300, "215138540674925": 300, "145697201390566": 300, "508675383095755": 300, "810424017694199": 300, "pure": 300, "astyp": 300, "numeric64": 300, "linalg": 300, "19836381": 300, "08487889": 300, "13686845": 300, "22296709": 300, "61674547": 300, "74359781": 300, "21513854": 300, "1456972": 300, "50867538": 300, "81042402": 300, "esim": 301, "2760562818805": 301, "parameter_estimates_sdcorr": 301, "171321": 301, "167051": 301, "115069": 301, "Or": 301, "standard_errors_sdcorr": 301, "039153": 301, "022378": 301, "009904": 301, "relative_standard_error": 301, "044731": 301, "027325": 301, "527072": 301, "457068": 301, "267918": 301, "172147": 301, "proper": 301, "388058": 301, "356900": 301, "238442": 301, "096516": 301, "invers": 301, "29955600": 301, "400": 301, "910": 301, "267": 301, "039": 301, "809": 301, "520": 301, "980": 301, "200": 301, "450": 301, "947352": 301, "970591": 301, "982342": 301, "457091": 301, "839437": 301, "257230": 301, "098338": 301, "538621": 301, "647969": 301, "394643": 301, "480164": 301, "650233": 301, "378880": 301, "739902": 301, "328800": 301, "113284": 301, "212096": 301, "334047": 301, "327778": 301, "821533": 301, "631281": 301, "861669": 301, "915261": 301, "988977": 301, "279273": 301, "733181": 301, "830053": 301, "851724": 301, "212095": 301, "774791": 301, "352283": 301, "172643": 301, "427376": 301, "381444": 301, "624014": 301, "970627": 301, "177028": 301, "206540": 301, "955029": 301, "982447": 301, "051499": 301, "424503": 301, "734342": 301, "018477": 301, "279258": 301, "168486": 301, "190508": 301, "749134": 301, "598565": 301, "237467": 301, "568934": 301, "800062": 301, "098025": 301, "663948": 301, "850993": 301, "605845": 301, "143": 301, "045": [301, 308], "971": 301, "881": 301, "575": 301, "080": 301, "063": 301, "427": 301, "668": 301, "543": 301, "662": 301, "478": 301, "667": 301, "253": 301, "495": 301, "918": 301, "67071": 301, "401100": 301, "35080": 301, "587770": 301, "36360": 301, "278800": 301, "19730": 301, "670700": 301, "21710": 301, "352600": 301, "86050": 301, "067200": 301, "35060": 301, "059269": 301, "72100": 301, "036754": 301, "10860": 301, "814140": 301, "28180": 301, "699410": 301, "eb": 301, "043861": 301, "005430": 301, "166321": 301, "131833": 301, "095934": 301, "130868": 301, "009154": 301, "017388": 301, "102019": 301, "283500": 301, "019417": 301, "099839": 301, "045946": 301, "059072": 301, "024270": 301, "189351": 301, "248536": 301, "091872": 301, "009545": 301, "012052": 301, "066151": 301, "293685": 301, "030236": 301, "074789": 301, "094502": 301, "147433": 301, "076820": 301, "105604": 301, "020051": 301, "066265": 301, "086035": 301, "023260": 301, "067138": 301, "030859": 301, "337255": 301, "035532": 301, "032579": 301, "028410": 301, "003589": 301, "080613": 301, "060233": 301, "052854": 301, "004469": 301, "057344": 301, "051992": 301, "212941": 301, "137510": 301, "004111": 301, "023282": 301, "302636": 301, "039069": 301, "119442": 301, "044956": 301, "263320": 301, "000776": 301, "083231": 301, "003150": 301, "012752": 301, "049654": 301, "080932": 301, "000555": 301, "099614": 301, "061864": 301, "332738": 301, "038156": 301, "067641": 301, "038017": 301, "184137": 301, "156617": 301, "208753": 301, "114558": 301, "053036": 301, "008405": 301, "026004": 301, "144920": 301, "081646": 301, "083320": 301, "015380": 301, "000392": 301, "078062": 301, "018966": 301, "112030": 301, "112715": 301, "383786": 301, "001730": 301, "167583": 301, "042068": 301, "066598": 301, "037600": 301, "000093": 301, "010662": 301, "009775": 301, "058306": 301, "229005": 301, "033958": 301, "008959": 301, "092312": 301, "050987": 301, "192569": 301, "002727": 301, "225657": 301, "115824": 301, "204269": 301, "054792": 301, "066334": 301, "123689": 301, "239678": 301, "047215": 301, "186615": 301, "000949": 301, "010812": 301, "015929": 301, "017213": 301, "005234": 301, "122552": 301, "076677": 301, "095696": 301, "024883": 301, "002999": 301, "007157": 301, "inspect": [302, 315], "model_nlmixr": 302, "diff": [302, 307], "add_error": 302, "prop_error": 302, "focei": 302, "model_start": 302, "eta_vc": 302, "pop_vc": 302, "pop_": 302, "225": 302, "epsilon_": 302, "iiv_cl_iiv_vc": 302, "iiv_vc": 302, "\u03c3": 302, "iiv_mat": 302, "iiv_": 302, "advan2": 302, "THEN": 302, "22500000000000e": 302, "cond": 302, "maxev": 302, "99999": 302, "cipredi": 302, "mytab": 302, "tlag": 302, "alag1": 302, "pop_mdt": 302, "advan3": 302, "trans4": 302, "pop_qp1": 302, "pop_vp1": 302, "run4": 302, "tol": 302, "pop_clmm": 302, "pop_km": 302, "iiv_clmm": 302, "iiv_clmm_iiv_vc": 302, "iiv_cl_iiv_mat": 302, "iiv_vc_iiv_mat": 302, "0094868": 302, "onto": 302, "wgt_median": 302, "30000": 302, "clwgt": 302, "pop_clwgt": 302, "user_effect": 302, "wgt_std": 302, "add_population_paramet": 302, "unfix_parameters_to": 302, "\u03b5\u209a\u2081": 302, "p1": 302, "set_time_varying_error_model": [302, 311], "100000000000000": 302, "f_flag": 302, "f_": 302, "geq": 302, "get_id": 302, "get_mdv": 302, "largest": 302, "ser": 302, "delai": [303, 314], "grammar": 303, "exhaustive_stepwis": 303, "obtain": 303, "basi": 303, "subsequ": [303, 304, 314], "modelsearch_candidate2": [303, 314], "594608": 303, "1272": 303, "124874": 303, "modelsearch_candidate3": [303, 314], "558028": 303, "088295": 303, "modelsearch_candidate4": [303, 314], "956313": 303, "1270": 303, "486580": 303, "287000": 303, "1260": 303, "817266": 303, "362287": 303, "1327": 303, "153182": 303, "1325": 303, "551467": 303, "1307": 303, "301235": 303, "1295": 303, "1305": 303, "1289": 303, "2927": 303, "4334": 303, "7778": 303, "0058": 303, "1640": 303, "260324": 303, "7646": 303, "824443": 303, "5477": 303, "607839": 303, "1147": 303, "842498": 303, "470974": 303, "595276": 303, "526185": 303, "930160": 303, "495109": 303, "322680": 303, "470531": 303, "515250": 303, "312692": 303, "194221": 303, "202201": 303, "207885": 303, "232322": 303, "199750": 303, "205369": 303, "193439": 303, "pop_qp1_estim": 303, "pop_vp1_estim": 303, "pop_mdt_estim": 303, "155413": 303, "4192": 303, "6100": 303, "172730": 303, "3977": 303, "4562": 303, "158070": 303, "8042": 303, "8517": 303, "iiv_mdt_estim": 303, "156289": 303, "192020": 303, "092419": 303, "262429": 303, "720369": 303, "464263": 303, "127061": 303, "906722": 303, "053781": 303, "923055": 303, "795863": 303, "030658": 303, "661330": 303, "168680": 303, "833073": 303, "041529": 303, "205858": 303, "064930": 303, "609673": 303, "396329": 303, "928556": 303, "365": 303, "330": 303, "topic": 304, "scheme": 304, "theta_cl": 304, "mention": 304, "ve": 304, "despit": 304, "write_etas_in_abbr": 304, "altair": [305, 307], "vega": 305, "lite": 305, "ggplot": 305, "editor": 305, "clamp": 305, "vconcat": 305, "spec": 305, "inten": 306, "export": 306, "strictli": 306, "necessesari": 306, "detect_model": 306, "summer": 307, "master": 307, "thesi": 307, "internship": 307, "email": 307, "team": 307, "tox": 307, "pytest": 307, "sphinx": 307, "wise": 307, "known": 307, "trial": 307, "involv": 307, "outcom": 307, "350h": 307, "difficulti": 307, "mentor": 307, "scipi": 307, "focu": 307, "proof": 307, "concept": 307, "algebra": 307, "simul": [307, 313], "scratch": 307, "almost": 307, "compat": 307, "benefici": 307, "175h": 307, "easi": 307, "potenti": 307, "eas": 307, "jupyt": 307, "holoview": 307, "bokeh": 307, "monitor": 307, "ongo": 307, "veri": 307, "happen": [307, 316], "converg": 307, "sort": [307, 314], "dashboard": 307, "complement": 307, "realtim": 307, "restart": [307, 316], "middl": 307, "worflow": 307, "cv": [308, 310], "772": [308, 310], "700": 308, "042": [308, 310], "sdeps_0": [308, 310], "t1": 308, "298": 308, "sdeps_t1": 308, "t2": 308, "886": 308, "sdeps_t2": 308, "t3": 308, "272": 308, "sdeps_t3": 308, "t4": 308, "716": 308, "sdeps_t4": 308, "t5": 308, "218": 308, "sdeps_t5": 308, "t6": 308, "928": 308, "sdeps_t6": 308, "t7": 308, "092": 308, "sdeps_t7": 308, "t8": 308, "914": 308, "sdeps_t8": 308, "t9": 308, "sdeps_t9": 308, "390": [308, 310], "159": [308, 310], "t0": [308, 310], "271": [308, 310], "sdeps_t0": [308, 310], "956": [308, 310], "717": 308, "014": 308, "983": 308, "884": 308, "017": 308, "955": 308, "958": 308, "969": 308, "933": 308, "022": 308, "819": 308, "007": 308, "755": 308, "982": 308, "387": 308, "th_0": 308, "257": 308, "867": 308, "th_t1": 308, "211": 308, "th_t2": 308, "277": 308, "761": 308, "th_t3": 308, "033": 308, "th_t4": 308, "367": 308, "th_t5": 308, "204": 308, "170": 308, "th_t6": 308, "078": 308, "th_t7": 308, "841": 308, "th_t8": 308, "th_t9": 308, "030": 308, "124": 308, "289": 308, "386": 308, "203": 308, "019": 308, "delta_pow": [308, 310], "037": [308, 310], "autocorrel": [308, 310], "dtb": [308, 310], "91": [308, 310], "idv_varying_ruv": 308, "idv_varying_ruv_cutoff0": 308, "idv_varying_ruv_cutoff1": 308, "idv_varying_ruv_cutoff2": 308, "idv_varying_ruv_cutoff3": 308, "idv_varying_ruv_cutoff4": 308, "idv_varying_ruv_cutoff5": 308, "idv_varying_ruv_cutoff6": 308, "idv_varying_ruv_cutoff7": 308, "idv_varying_ruv_cutoff8": 308, "idv_varying_combin": 308, "idv_varying_theta": 308, "sdep": 308, "delet": 309, "diagnost": 309, "impact": 310, "improement": 310, "592698": 310, "197887": 310, "007493": 310, "521171": 310, "et1apgr": 310, "487930": 310, "residual_error_model": 310, "910000": 310, "030000": 310, "diagnos": 310, "structural_bia": 310, "cpred": 310, "binmin": 310, "binmax": 310, "binid": 310, "258": 310, "strutur": 310, "mdel": 310, "fullblock_paramet": 310, "183463": 310, "171306": 310, "554610": 310, "154408": 310, "167053": 310, "cox": 310, "boxcox_paramet": 310, "shape": 310, "new_sd": 310, "old_sd": 310, "922083": 310, "182037": 310, "332800": 310, "166021": 310, "tdist_paramet": 310, "79": 310, "9997": 310, "168477": 310, "9986": 310, "166469": 310, "residual_error": 310, "additional_paramet": 310, "coeff": 310, "48793": 310, "033334": 310, "48218": 310, "052342": 310, "59034": 310, "008371": 310, "00887": 310, "003273": 310, "ibrahim": 311, "quickli": [311, 314], "inde": 311, "cwres_model": 311, "479721": 311, "385268": 311, "002792": 311, "time_varying1": 311, "117041": 311, "555154": 311, "time_varying3": 311, "336641": 311, "091207": 311, "065738": 311, "654562": 311, "046578": 311, "519115": 311, "612710": 311, "643741": 311, "027766": 311, "sigma_add": 311, "000367": 311, "sigma_prop": 311, "967365": 311, "00123": 311, "0976": 311, "12252": 311, "14299": 311, "000337": 311, "05242": 311, "006105": 311, "10545": 311, "12659": 311, "15573": 311, "00054": 311, "04769": 311, "030825": 311, "mox3": 311, "2460": 311, "704469": 311, "957378": 311, "2473": 311, "661847": 311, "269102": 311, "2495": 311, "973571": 311, "2444": 311, "2455": 311, "2475": 311, "2423": 311, "757516": 311, "2435": 311, "047712": 311, "2453": 311, "068976": 311, "707": 311, "5434": 311, "531596": 311, "794": 311, "3091": 311, "528620": 311, "3094": 311, "532547": 311, "iiv_vc_iiv_cl_estim": 311, "077743": 311, "038888": 311, "076793": 311, "039924": 311, "071628": 311, "038470": 311, "072309": 311, "704770": 311, "093311": 311, "074889": 311, "707665": 311, "081095": 311, "075048": 311, "705429": 311, "044311": 311, "iiv_ruv1_estim": 311, "time_varying_estim": 311, "039675": 311, "040734": 311, "42509": 311, "215727": 311, "655144": 311, "708324": 311, "762729": 311, "236530": 311, "229762": 311, "715966": 311, "423148": 311, "419741": 311, "774540": 311, "164274": 311, "450202": 311, "195425": 311, "960585": 311, "090461": 311, "848498": 311, "052021": 311, "239462": 311, "065148": 311, "571348": 311, "244582": 311, "161981": 311, "509910": 311, "373696": 311, "084489": 311, "647643": 311, "344772": 311, "083776": 311, "259395": 311, "101415": 311, "024651": 311, "443542": 311, "124023": 311, "183089": 311, "977222": 311, "219": 311, "moustafa": 311, "m": 311, "maria": 311, "kjellsson": 311, "aap": 311, "1208": 311, "s12248": 311, "018": 311, "0240": 311, "pha": 312, "219210": 312, "90878": 312, "219167": 312, "36222": 312, "bmi": 312, "219171": 312, "47564": 312, "cycll": 312, "219203": 312, "94536": 312, "diag": 312, "219206": 312, "01527": 312, "disdur": 312, "219032": 312, "86056": 312, "215321": 312, "70954": 312, "215306": 312, "67698": 312, "phia": 312, "men": 312, "215407": 312, "40295": 312, "phib": 312, "georeg": 312, "215373": 312, "77800": 312, "216968": 312, "25989": 312, "slp": 312, "215359": 312, "18150": 312, "54656": 312, "140000e": 312, "43314": 312, "390000e": 312, "96342": 312, "319000e": 312, "89351": 312, "695800e": 312, "178": 312, "04822": 312, "290000e": 312, "03256": 312, "060000e": 312, "72597": 312, "10102": 312, "580000e": 312, "1661": 312, "58291": 312, "50452": 312, "phaag": 312, "phabmi": 312, "phacycl": 312, "phadiag": 312, "phadisdur": 312, "backward_scm_dir1": 312, "phawt": 312, "phiamen": 312, "phibgeoreg": 312, "phibmen": 312, "slpgeoreg": 312, "304": 312, "beween": 312, "slightli": 312, "215961": 312, "46277": 312, "3249": 312, "44601": 312, "215748": 312, "07194": 312, "213": 312, "39083": 312, "215570": 312, "57352": 312, "49842": 312, "215486": 312, "23440": 312, "33912": 312, "87007": 312, "36433": 312, "215357": 312, "74693": 312, "61": 312, "12314": 312, "215337": 312, "95044": 312, "79649": 312, "24090": 312, "215332": 312, "91461": 312, "23763": 312, "67861": 312, "00163": 312, "215450": 312, "74783": 312, "07085": 312, "215491": 312, "11568": 312, "43870": 312, "500000e": 312, "700000e": 312, "170000e": 312, "260000e": 312, "360000e": 312, "600000e": 312, "020000e": 312, "620000e": 312, "430000e": 312, "200000e": 312, "lbest": 312, "cpl": 312, "165042": 313, "995045": 313, "575351": 313, "921633": 313, "488686": 313, "230120": 313, "083424": 313, "482883": 313, "300884": 313, "946876": 313, "824880": 313, "027733": 313, "180960": 313, "005653": 313, "928279": 313, "604188": 313, "916884": 313, "654589": 313, "364078": 313, "098483": 313, "795252": 313, "467337": 313, "638247": 313, "370783": 313, "351839": 313, "706108": 313, "078494": 313, "472019": 313, "136159": 313, "957716": 313, "221459": 313, "916754": 313, "823449": 313, "318875": 313, "151210": 313, "664634": 313, "135159": 313, "136767": 313, "405150": 313, "526828": 313, "551158": 313, "527835": 313, "562788": 313, "488282": 313, "406903": 313, "293600": 313, "796073": 313, "615899": 313, "328937": 313, "736463": 313, "892761": 313, "376893": 313, "486179": 313, "818812": 313, "929665": 313, "061750": 313, "849137": 313, "114640": 313, "121901": 313, "446579": 313, "247238": 313, "925921": 313, "423537": 313, "408347": 313, "512627": 313, "615092": 313, "484284": 313, "962122": 313, "705806": 313, "867625": 313, "842566": 313, "018308": 313, "114753": 313, "086333": 313, "056381": 313, "078385": 313, "638560": 313, "664954": 313, "178961": 313, "603301": 313, "449888": 313, "882876": 313, "622712": 313, "282087": 313, "238692": 313, "748996": 313, "138213": 313, "037941": 313, "361556": 313, "678095": 313, "713778": 313, "272954": 313, "929655": 313, "708577": 313, "422555": 313, "166879": 313, "335429": 313, "421235": 313, "563473": 313, "989005": 313, "266944": 313, "567697": 313, "461262": 313, "480043": 313, "959843": 313, "621329": 313, "212573": 313, "388393": 313, "501489": 313, "300601": 313, "811596": 313, "110075": 313, "003027": 313, "277388": 313, "219194": 313, "570879": 313, "786560": 313, "905147": 313, "380865": 313, "366018": 313, "630512": 313, "351180": 313, "612812": 313, "534496": 313, "546036": 313, "961895": 313, "816485": 313, "806204": 313, "584818": 313, "900845": 313, "682987": 313, "231970": 313, "776532": 313, "998400": 313, "892200": 313, "749003": 313, "802797": 313, "988276": 313, "015416": 313, "225727": 313, "018880": 313, "196823": 313, "662582": 313, "725509": 313, "838099": 313, "348921": 313, "250063": 313, "851698": 313, "488859": 313, "212538": 313, "297823": 313, "382526": 313, "944073": 313, "429352": 313, "743671": 313, "140249": 313, "409142": 313, "857266": 313, "485191": 313, "191840": 313, "880881": 313, "659430": 313, "755737": 313, "002572": 313, "733704": 313, "956378": 313, "630846": 313, "775355": 313, "851982": 313, "151243": 313, "707700": 313, "668763": 313, "483346": 313, "794788": 313, "401748": 313, "931900": 313, "538437": 313, "455902": 313, "793645": 313, "382384": 313, "926835": 313, "376121": 313, "196475": 313, "425364": 313, "928532": 313, "498709": 313, "985533": 313, "372391": 313, "848184": 313, "030662": 313, "366585": 313, "497867": 313, "551558": 313, "826862": 313, "572217": 313, "662370": 313, "551208": 313, "565811": 313, "042324": 313, "119652": 313, "298009": 313, "580405": 313, "552114": 313, "630121": 313, "406685": 313, "134650": 313, "361844": 313, "275622": 313, "040276": 313, "035731": 313, "496993": 313, "266702": 313, "169391": 313, "155311": 313, "515088": 313, "957232": 313, "454421": 313, "868679": 313, "106708": 313, "363698": 313, "751915": 313, "361498": 313, "889492": 313, "982047": 313, "904024": 313, "434510": 313, "952586": 313, "024682": 313, "835458": 313, "169297": 313, "840067": 313, "073635": 313, "073683": 313, "575363": 313, "819836": 313, "856403": 313, "884553": 313, "169888": 313, "879430": 313, "253049": 313, "285544": 313, "118999": 313, "893425": 313, "564632": 313, "178975": 313, "497236": 313, "277992": 313, "509070": 313, "046265": 313, "695028": 313, "264764": 313, "765897": 313, "688954": 313, "324755": 313, "684344": 313, "516160": 313, "572606": 313, "586789": 313, "841335": 313, "394438": 313, "493584": 313, "916145": 313, "244786": 313, "249772": 313, "253768": 313, "119216": 313, "933397": 313, "744242": 313, "416676": 313, "659481": 313, "731451": 313, "448507": 313, "178177": 313, "269584": 313, "069317": 313, "936980": 313, "746436": 313, "518105": 313, "477206": 313, "716822": 313, "605768": 313, "763155": 313, "320820": 313, "408266": 313, "132983": 313, "125029": 313, "980420": 313, "686115": 313, "180204": 313, "337790": 313, "105503": 313, "583418": 313, "811144": 313, "043157": 313, "457112": 313, "195385": 313, "850645": 313, "363551": 313, "031564": 313, "225458": 313, "814145": 313, "016286": 313, "052073": 313, "892175": 313, "525306": 313, "699366": 313, "602344": 313, "846592": 313, "435102": 313, "242420": 313, "404922": 313, "509957": 313, "451814": 313, "243399": 313, "589215": 313, "512603": 313, "815026": 313, "481351": 313, "866250": 313, "933824": 313, "923185": 313, "175264": 313, "926077": 313, "495039": 313, "087071": 313, "824234": 313, "194473": 313, "944302": 313, "344235": 313, "573838": 313, "611250": 313, "903583": 313, "550825": 313, "735586": 313, "308617": 313, "749030": 313, "860290": 313, "501681": 313, "875052": 313, "556035": 313, "631308": 313, "941132": 313, "153441": 313, "372005": 313, "432371": 313, "874004": 313, "758791": 313, "193338": 313, "054769": 313, "357159": 313, "323449": 313, "133006": 313, "215148": 313, "853273": 313, "885525": 313, "860736": 313, "993262": 313, "533799": 313, "080061": 313, "568383": 313, "905658": 313, "322738": 313, "276361": 313, "376218": 313, "313336": 313, "546277": 313, "489785": 313, "898802": 313, "542369": 313, "058260": 313, "968860": 313, "773450": 313, "873918": 313, "775938": 313, "210594": 313, "600450": 313, "899285": 313, "793703": 313, "639544": 313, "104682": 313, "230477": 313, "330868": 313, "185132": 313, "354616": 313, "479966": 313, "438225": 313, "720261": 313, "884839": 313, "432346": 313, "924846": 313, "436720": 313, "367480": 313, "694969": 313, "024193": 313, "341680": 313, "054791": 313, "387386": 313, "548598": 313, "759167": 313, "864669": 313, "853355": 313, "424024": 313, "317393": 313, "280139": 313, "695800": 313, "413680": 313, "331177": 313, "631655": 313, "541680": 313, "704503": 313, "371773": 313, "758919": 313, "316351": 313, "026935": 313, "966413": 313, "814952": 313, "937635": 313, "009725": 313, "878300": 313, "715708": 313, "462408": 313, "459161": 313, "868224": 313, "383043": 313, "179394": 313, "260472": 313, "933191": 313, "676905": 313, "218010": 313, "398492": 313, "585174": 313, "956306": 313, "051986": 313, "191401": 313, "726349": 313, "445912": 313, "767349": 313, "553003": 313, "099846": 313, "876780": 313, "822404": 313, "846457": 313, "991350": 313, "924166": 313, "565671": 313, "207434": 313, "326447": 313, "115117": 313, "341361": 313, "434087": 313, "782192": 313, "806515": 313, "086788": 313, "599116": 313, "574493": 313, "296737": 313, "516464": 313, "831345": 313, "994987": 313, "574667": 313, "793265": 313, "901408": 313, "072216": 313, "874349": 313, "912201": 313, "693935": 313, "711150": 313, "676572": 313, "069326": 313, "905528": 313, "800871": 313, "954047": 313, "077897": 313, "186642": 313, "748099": 313, "731336": 313, "819544": 313, "773375": 313, "247095": 313, "504667": 313, "843029": 313, "762211": 313, "765259": 313, "455400": 313, "187278": 313, "056323": 313, "257409": 313, "502366": 313, "802175": 313, "370226": 313, "360000": 313, "305631": 313, "639042": 313, "597045": 313, "716192": 313, "544260": 313, "977219": 313, "400720": 313, "676934": 313, "022410": 313, "641421": 313, "974785": 313, "597599": 313, "424237": 313, "853009": 313, "886356": 313, "087082": 313, "098997": 313, "374133": 313, "712658": 313, "151935": 313, "963905": 313, "415675": 313, "044583": 313, "567520": 313, "351619": 313, "396594": 313, "360173": 313, "999275": 313, "255630": 313, "358567": 313, "414926": 313, "899880": 313, "408061": 313, "496109": 313, "907778": 313, "473731": 313, "297200": 313, "222423": 313, "362886": 313, "864820": 313, "606428": 313, "206488": 313, "988252": 313, "862927": 313, "693535": 313, "911020": 313, "517867": 313, "965455": 313, "764024": 313, "453899": 313, "346212": 313, "500103": 313, "133073": 313, "783555": 313, "462547": 313, "585654": 313, "027851": 313, "972480": 313, "036534": 313, "960296": 313, "402983": 313, "723710": 313, "378125": 313, "587323": 313, "032512": 313, "408322": 313, "269137": 313, "950516": 313, "788249": 313, "159667": 313, "448461": 313, "884049": 313, "777419": 313, "625663": 313, "541949": 313, "601504": 313, "416254": 313, "907322": 313, "371639": 313, "487277": 313, "418469": 313, "606033": 313, "663661": 313, "547459": 313, "675347": 313, "584165": 313, "500411": 313, "247584": 313, "271405": 313, "824837": 313, "881148": 313, "804622": 313, "876965": 313, "348849": 313, "366355": 313, "319025": 313, "885439": 313, "iofv_summari": 313, "orgin": 313, "ob": 313, "sampled_mean": 313, "sampled_stdev": 313, "residual_q1": 313, "743042": 313, "219056": 313, "682820": 313, "550173": 313, "035912": 313, "049484": 313, "184218": 313, "853744": 313, "006216": 313, "975298": 313, "041599": 313, "817153": 313, "833045": 313, "781196": 313, "154061": 313, "813525": 313, "398238": 313, "645044": 313, "535071": 313, "205425": 313, "092618": 313, "104527": 313, "106160": 313, "955250": 313, "058617": 313, "344659": 313, "355728": 313, "480441": 313, "205000": 313, "804075": 313, "093249": 313, "372011": 313, "653334": 313, "076303": 313, "579270": 313, "515891": 313, "726464": 313, "480796": 313, "226795": 313, "894556": 313, "321253": 313, "216333": 313, "282456": 313, "045968": 313, "751381": 313, "998817": 313, "568506": 313, "544129": 313, "725055": 313, "084491": 313, "216676": 313, "724839": 313, "269729": 313, "664468": 313, "086120": 313, "099508": 313, "844053": 313, "234199": 313, "780837": 313, "277342": 313, "322169": 313, "051428": 313, "923117": 313, "660772": 313, "466385": 313, "260479": 313, "909214": 313, "004430": 313, "115441": 313, "597439": 313, "671231": 313, "358037": 313, "499079": 313, "674971": 313, "086542": 313, "331370": 313, "633905": 313, "558617": 313, "085015": 313, "554653": 313, "936751": 313, "068515": 313, "800265": 313, "310055": 313, "124015": 313, "712276": 313, "729628": 313, "167439": 313, "715703": 313, "274087": 313, "019852": 313, "305414": 313, "613668": 313, "109257": 313, "443973": 313, "056317": 313, "238664": 313, "161298": 313, "229080": 313, "385458": 313, "248420": 313, "105258": 313, "155784": 313, "539027": 313, "615940": 313, "605320": 313, "132029": 313, "756164": 313, "869343": 313, "544161": 313, "814910": 313, "779158": 313, "268737": 313, "897306": 313, "707535": 313, "453306": 313, "105961": 313, "531367": 313, "507478": 313, "179203": 313, "964192": 313, "235433": 313, "534690": 313, "029698": 313, "870557": 313, "187065": 313, "049483": 313, "611648": 313, "535116": 313, "053927": 313, "077425": 313, "840121": 313, "621227": 313, "470444": 313, "449597": 313, "941064": 313, "849583": 313, "418397": 313, "769517": 313, "495183": 313, "074840": 313, "265168": 313, "489546": 313, "543569": 313, "924754": 313, "255799": 313, "423379": 313, "792450": 313, "651388": 313, "107140": 313, "103779": 313, "709601": 313, "655290": 313, "365991": 313, "222470": 313, "908651": 313, "744590": 313, "726324": 313, "426971": 313, "126409": 313, "743926": 313, "055593": 313, "673502": 313, "381335": 313, "618133": 313, "047349": 313, "322600": 313, "222872": 313, "042834": 313, "180077": 313, "430602": 313, "209284": 313, "495631": 313, "189252": 313, "623118": 313, "780755": 313, "405726": 313, "643222": 313, "836788": 313, "746180": 313, "378962": 313, "498420": 313, "745719": 313, "565835": 313, "016391": 313, "193803": 313, "882538": 313, "054206": 313, "416539": 313, "288743": 313, "598975": 313, "649295": 313, "743847": 313, "028856": 313, "860963": 313, "709391": 313, "906579": 313, "841825": 313, "571912": 313, "121771": 313, "219260": 313, "791821": 313, "756310": 313, "933335": 313, "360735": 313, "121911": 313, "657069": 313, "952413": 313, "311206": 313, "124618": 313, "229621": 313, "945504": 313, "493299": 313, "630288": 313, "415407": 313, "756085": 313, "131488": 313, "213636": 313, "050337": 313, "463633": 313, "980475": 313, "118333": 313, "749123": 313, "229958": 313, "025404": 313, "813878": 313, "738522": 313, "668408": 313, "112740": 313, "972107": 313, "235064": 313, "396011": 313, "934618": 313, "518106": 313, "392308": 313, "216396": 313, "339562": 313, "024801": 313, "793238": 313, "057118": 313, "556378": 313, "796045": 313, "776264": 313, "019010": 313, "430617": 313, "431370": 313, "731493": 313, "527208": 313, "010968": 313, "724711": 313, "959211": 313, "448445": 313, "131466": 313, "302385": 313, "264697": 313, "597597": 313, "779232": 313, "494133": 313, "292477": 313, "639161": 313, "067293": 313, "167700": 313, "637834": 313, "067793": 313, "249132": 313, "314731": 313, "969084": 313, "239401": 313, "359860": 313, "215238": 313, "477740": 313, "578842": 313, "053376": 313, "340902": 313, "021182": 313, "172446": 313, "684367": 313, "059050": 313, "515114": 313, "245427": 313, "197044": 313, "787564": 313, "106919": 313, "970391": 313, "379183": 313, "982728": 313, "807580": 313, "296212": 313, "639192": 313, "874018": 313, "032032": 313, "252364": 313, "047063": 313, "residual_q3": 313, "residual_outli": 313, "832458": 313, "136329": 313, "090316": 313, "021748": 313, "766581": 313, "001176": 313, "238974": 313, "071653": 313, "388881": 313, "584759": 313, "780298": 313, "680349": 313, "043355": 313, "691710": 313, "827298": 313, "317850": 313, "008777": 313, "291308": 313, "498512": 313, "312807": 313, "178997": 313, "306182": 313, "116610": 313, "468439": 313, "007865": 313, "384037": 313, "344744": 313, "151930": 313, "790639": 313, "416342": 313, "637759": 313, "153920": 313, "135334": 313, "038095": 313, "705065": 313, "359915": 313, "588440": 313, "151899": 313, "730945": 313, "514178": 313, "784304": 313, "977290": 313, "707253": 313, "982678": 313, "384237": 313, "576792": 313, "302778": 313, "342653": 313, "313826": 313, "775998": 313, "274818": 313, "191111": 313, "817604": 313, "421290": 313, "461701": 313, "940801": 313, "437023": 313, "207477": 313, "755739": 313, "individual_predictions_plot": 313, "trim": 314, "modelsearch_dir1": 314, "hash": 314, "mytab_mox1": 314, "subfold": 314, "temporari": 314, "finish": 314, "recreat": 314, "frame": 314, "programmat": 314, "pharmpy_vers": 314, "tool_nam": 314, "start_tim": 314, "22t14": 314, "312240": 314, "end_tim": 314, "592109": 314, "common_opt": 314, "tmp": 314, "tool_result": 314, "concis": 314, "newlin": 314, "semi": 314, "colon": 314, "endpoint": 314, "wildcard": 314, "nodepot": 314, "autom": 314, "gotcha": 315, "cran": 316, "rapid": 316, "remot": 316, "install_github": 316, "install_pharmpi": 316, "session": 316, "packagevers": 316, "print_pharmpy_vers": 316, "reticul": 316, "miniconda": 316, "py_discover_config": 316, "conda_cr": 316, "python_vers": 316, "virtual": 316, "libpython": 316, "lib": 316, "libpython3": 316, "mirror": 316, "pipe": 316, "magrittr": 316}, "objects": {"pharmpy": [[274, 0, 0, "-", "model"], [275, 0, 0, "-", "modeling"], [276, 0, 0, "-", "tools"], [277, 0, 0, "-", "workflows"], [282, 6, 1, "cmdoption-pharmpy-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-version", "--version"], [282, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "ODESystem"], [24, 1, 1, "", "Parameter"], [25, 1, 1, "", "Parameters"], [26, 1, 1, "", "RandomVariables"], [27, 1, 1, "", "Results"], [28, 1, 1, "", "Statement"], [29, 1, 1, "", "Statements"], [30, 1, 1, "", "VariabilityHierarchy"], [31, 1, 1, "", "VariabilityLevel"], [32, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "admid"], [5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_covs"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "admid"], [16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "init"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "name"], [24, 2, 1, "", "replace"], [24, 3, 1, "", "symbol"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "fixed"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "inits"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "names"], [25, 3, 1, "", "nonfixed"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "set_fix"], [25, 2, 1, "", "set_initial_estimates"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[26, 3, 1, "", "covariance_matrix"], [26, 2, 1, "", "create"], [26, 3, 1, "", "epsilon_levels"], [26, 3, 1, "", "epsilons"], [26, 3, 1, "", "eta_levels"], [26, 3, 1, "", "etas"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_rvs_with_same_dist"], [26, 3, 1, "", "iiv"], [26, 3, 1, "", "iov"], [26, 2, 1, "", "join"], [26, 3, 1, "", "names"], [26, 2, 1, "", "nearest_valid_parameters"], [26, 3, 1, "", "nrvs"], [26, 3, 1, "", "parameter_names"], [26, 2, 1, "", "parameters_sdcorr"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "replace_with_sympy_rvs"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "unjoin"], [26, 2, 1, "", "validate_parameters"], [26, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_and_reset_index"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[28, 3, 1, "", "free_symbols"], [28, 3, 1, "", "rhs_symbols"], [28, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[29, 3, 1, "", "after_odes"], [29, 3, 1, "", "before_odes"], [29, 2, 1, "", "dependencies"], [29, 2, 1, "", "direct_dependencies"], [29, 3, 1, "", "error"], [29, 2, 1, "", "find_assignment"], [29, 2, 1, "", "find_assignment_index"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "full_expression"], [29, 3, 1, "", "ode_system"], [29, 2, 1, "", "reassign"], [29, 2, 1, "", "remove_symbol_definitions"], [29, 2, 1, "", "subs"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "levels"], [30, 3, 1, "", "names"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[31, 2, 1, "", "create"], [31, 2, 1, "", "from_dict"], [31, 3, 1, "", "group"], [31, 3, 1, "", "name"], [31, 3, 1, "", "reference"], [31, 2, 1, "", "replace"], [31, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[33, 5, 1, "", "add_admid"], [34, 5, 1, "", "add_allometry"], [35, 5, 1, "", "add_bioavailability"], [36, 5, 1, "", "add_covariance_step"], [37, 5, 1, "", "add_covariate_effect"], [38, 5, 1, "", "add_effect_compartment"], [39, 5, 1, "", "add_estimation_step"], [40, 5, 1, "", "add_iiv"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_peripheral_compartment"], [46, 5, 1, "", "add_pk_iiv"], [47, 5, 1, "", "add_population_parameter"], [48, 5, 1, "", "add_time_after_dose"], [49, 5, 1, "", "append_estimation_step_options"], [50, 5, 1, "", "bump_model_number"], [51, 5, 1, "", "calculate_aic"], [52, 5, 1, "", "calculate_bic"], [53, 5, 1, "", "calculate_corr_from_cov"], [54, 5, 1, "", "calculate_corr_from_prec"], [55, 5, 1, "", "calculate_cov_from_corrse"], [56, 5, 1, "", "calculate_cov_from_prec"], [57, 5, 1, "", "calculate_epsilon_gradient_expression"], [58, 5, 1, "", "calculate_eta_gradient_expression"], [59, 5, 1, "", "calculate_eta_shrinkage"], [60, 5, 1, "", "calculate_individual_parameter_statistics"], [61, 5, 1, "", "calculate_individual_shrinkage"], [62, 5, 1, "", "calculate_parameters_from_ucp"], [63, 5, 1, "", "calculate_pk_parameters_statistics"], [64, 5, 1, "", "calculate_prec_from_corrse"], [65, 5, 1, "", "calculate_prec_from_cov"], [66, 5, 1, "", "calculate_se_from_cov"], [67, 5, 1, "", "calculate_se_from_prec"], [68, 5, 1, "", "calculate_ucp_scale"], [69, 5, 1, "", "check_dataset"], [70, 5, 1, "", "check_high_correlations"], [71, 5, 1, "", "check_parameters_near_bounds"], [72, 5, 1, "", "cleanup_model"], [73, 5, 1, "", "convert_model"], [74, 5, 1, "", "create_basic_pk_model"], [75, 5, 1, "", "create_config_template"], [76, 5, 1, "", "create_joint_distribution"], [77, 5, 1, "", "create_rng"], [78, 5, 1, "", "create_symbol"], [79, 5, 1, "", "deidentify_data"], [80, 5, 1, "", "display_odes"], [81, 5, 1, "", "drop_columns"], [82, 5, 1, "", "drop_dropped_columns"], [83, 5, 1, "", "evaluate_epsilon_gradient"], [84, 5, 1, "", "evaluate_eta_gradient"], [85, 5, 1, "", "evaluate_expression"], [86, 5, 1, "", "evaluate_individual_prediction"], [87, 5, 1, "", "evaluate_population_prediction"], [88, 5, 1, "", "evaluate_weighted_residuals"], [89, 5, 1, "", "expand_additional_doses"], [90, 5, 1, "", "find_clearance_parameters"], [91, 5, 1, "", "find_volume_parameters"], [92, 5, 1, "", "fix_or_unfix_parameters"], [93, 5, 1, "", "fix_parameters"], [94, 5, 1, "", "fix_parameters_to"], [95, 5, 1, "", "get_admid"], [96, 5, 1, "", "get_baselines"], [97, 5, 1, "", "get_bioavailability"], [98, 5, 1, "", "get_cmt"], [99, 5, 1, "", "get_concentration_parameters_from_data"], [100, 5, 1, "", "get_config_path"], [101, 5, 1, "", "get_covariate_baselines"], [102, 5, 1, "", "get_doseid"], [103, 5, 1, "", "get_doses"], [104, 5, 1, "", "get_dv_symbol"], [105, 5, 1, "", "get_evid"], [106, 5, 1, "", "get_ids"], [107, 5, 1, "", "get_individual_parameters"], [108, 5, 1, "", "get_individual_prediction_expression"], [109, 5, 1, "", "get_initial_conditions"], [110, 5, 1, "", "get_lag_times"], [111, 5, 1, "", "get_mdv"], [112, 5, 1, "", "get_model_code"], [113, 5, 1, "", "get_model_covariates"], [114, 5, 1, "", "get_number_of_individuals"], [115, 5, 1, "", "get_number_of_observations"], [116, 5, 1, "", "get_number_of_observations_per_individual"], [117, 5, 1, "", "get_observation_expression"], [118, 5, 1, "", "get_observations"], [119, 5, 1, "", "get_omegas"], [120, 5, 1, "", "get_parameter_rv"], [121, 5, 1, "", "get_pd_parameters"], [122, 5, 1, "", "get_pk_parameters"], [123, 5, 1, "", "get_population_prediction_expression"], [124, 5, 1, "", "get_rv_parameters"], [125, 5, 1, "", "get_sigmas"], [126, 5, 1, "", "get_thetas"], [127, 5, 1, "", "get_unit_of"], [128, 5, 1, "", "get_zero_order_inputs"], [129, 5, 1, "", "greekify_model"], [130, 5, 1, "", "has_additive_error_model"], [131, 5, 1, "", "has_combined_error_model"], [132, 5, 1, "", "has_covariate_effect"], [133, 5, 1, "", "has_first_order_elimination"], [134, 5, 1, "", "has_linear_odes"], [135, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [136, 5, 1, "", "has_michaelis_menten_elimination"], [137, 5, 1, "", "has_mixed_mm_fo_elimination"], [138, 5, 1, "", "has_odes"], [139, 5, 1, "", "has_proportional_error_model"], [140, 5, 1, "", "has_random_effect"], [141, 5, 1, "", "has_weighted_error_model"], [142, 5, 1, "", "has_zero_order_absorption"], [143, 5, 1, "", "has_zero_order_elimination"], [144, 5, 1, "", "is_linearized"], [145, 5, 1, "", "is_real"], [146, 5, 1, "", "list_time_varying_covariates"], [147, 5, 1, "", "load_dataset"], [148, 5, 1, "", "load_example_model"], [149, 5, 1, "", "make_declarative"], [150, 5, 1, "", "mu_reference_model"], [151, 5, 1, "", "omit_data"], [152, 5, 1, "", "plot_individual_predictions"], [153, 5, 1, "", "plot_iofv_vs_iofv"], [154, 5, 1, "", "plot_transformed_eta_distributions"], [155, 5, 1, "", "print_model_code"], [156, 5, 1, "", "print_model_symbols"], [157, 5, 1, "", "read_dataset_from_datainfo"], [158, 5, 1, "", "read_model"], [159, 5, 1, "", "read_model_from_string"], [160, 5, 1, "", "remove_bioavailability"], [161, 5, 1, "", "remove_covariance_step"], [162, 5, 1, "", "remove_covariate_effect"], [163, 5, 1, "", "remove_error_model"], [164, 5, 1, "", "remove_estimation_step"], [165, 5, 1, "", "remove_iiv"], [166, 5, 1, "", "remove_iov"], [167, 5, 1, "", "remove_lag_time"], [168, 5, 1, "", "remove_loq_data"], [169, 5, 1, "", "remove_peripheral_compartment"], [170, 5, 1, "", "remove_unused_parameters_and_rvs"], [171, 5, 1, "", "rename_symbols"], [172, 5, 1, "", "resample_data"], [173, 5, 1, "", "sample_individual_estimates"], [174, 5, 1, "", "sample_parameters_from_covariance_matrix"], [175, 5, 1, "", "sample_parameters_uniformly"], [176, 5, 1, "", "set_additive_error_model"], [177, 5, 1, "", "set_bolus_absorption"], [178, 5, 1, "", "set_combined_error_model"], [179, 5, 1, "", "set_covariates"], [180, 5, 1, "", "set_direct_effect"], [181, 5, 1, "", "set_dtbs_error_model"], [182, 5, 1, "", "set_dvid"], [183, 5, 1, "", "set_estimation_step"], [184, 5, 1, "", "set_evaluation_step"], [185, 5, 1, "", "set_first_order_absorption"], [186, 5, 1, "", "set_first_order_elimination"], [187, 5, 1, "", "set_iiv_on_ruv"], [188, 5, 1, "", "set_initial_condition"], [189, 5, 1, "", "set_initial_estimates"], [190, 5, 1, "", "set_lloq_data"], [191, 5, 1, "", "set_lower_bounds"], [192, 5, 1, "", "set_michaelis_menten_elimination"], [193, 5, 1, "", "set_mixed_mm_fo_elimination"], [194, 5, 1, "", "set_name"], [195, 5, 1, "", "set_ode_solver"], [196, 5, 1, "", "set_peripheral_compartments"], [197, 5, 1, "", "set_power_on_ruv"], [198, 5, 1, "", "set_proportional_error_model"], [199, 5, 1, "", "set_reference_values"], [200, 5, 1, "", "set_seq_zo_fo_absorption"], [201, 5, 1, "", "set_time_varying_error_model"], [202, 5, 1, "", "set_tmdd"], [203, 5, 1, "", "set_transit_compartments"], [204, 5, 1, "", "set_upper_bounds"], [205, 5, 1, "", "set_weighted_error_model"], [206, 5, 1, "", "set_zero_order_absorption"], [207, 5, 1, "", "set_zero_order_elimination"], [208, 5, 1, "", "set_zero_order_input"], [209, 5, 1, "", "simplify_expression"], [210, 5, 1, "", "solve_ode_system"], [211, 5, 1, "", "split_joint_distribution"], [212, 5, 1, "", "transform_blq"], [213, 5, 1, "", "transform_etas_boxcox"], [214, 5, 1, "", "transform_etas_john_draper"], [215, 5, 1, "", "transform_etas_tdist"], [216, 5, 1, "", "translate_nmtran_time"], [217, 5, 1, "", "unconstrain_parameters"], [218, 5, 1, "", "undrop_columns"], [219, 5, 1, "", "unfix_parameters"], [220, 5, 1, "", "unfix_parameters_to"], [221, 5, 1, "", "unload_dataset"], [222, 5, 1, "", "update_initial_individual_estimates"], [223, 5, 1, "", "update_inits"], [224, 5, 1, "", "use_thetas_for_error_stdev"], [225, 5, 1, "", "write_csv"], [226, 5, 1, "", "write_model"]], "pharmpy.tools": [[227, 5, 1, "", "create_report"], [228, 5, 1, "", "create_results"], [229, 5, 1, "", "fit"], [230, 5, 1, "", "load_example_modelfit_results"], [231, 5, 1, "", "predict_influential_individuals"], [232, 5, 1, "", "predict_influential_outliers"], [233, 5, 1, "", "predict_outliers"], [234, 5, 1, "", "print_fit_summary"], [235, 5, 1, "", "rank_models"], [236, 5, 1, "", "read_modelfit_results"], [237, 5, 1, "", "read_results"], [238, 5, 1, "", "resume_tool"], [239, 5, 1, "", "retrieve_final_model"], [240, 5, 1, "", "retrieve_models"], [241, 5, 1, "", "run_allometry"], [242, 5, 1, "", "run_amd"], [243, 5, 1, "", "run_bootstrap"], [244, 5, 1, "", "run_covsearch"], [245, 5, 1, "", "run_estmethod"], [246, 5, 1, "", "run_iivsearch"], [247, 5, 1, "", "run_iovsearch"], [248, 5, 1, "", "run_modelfit"], [249, 5, 1, "", "run_modelsearch"], [250, 5, 1, "", "run_ruvsearch"], [251, 5, 1, "", "run_structsearch"], [252, 5, 1, "", "run_tool"], [253, 5, 1, "", "summarize_errors"], [254, 5, 1, "", "summarize_individuals"], [255, 5, 1, "", "summarize_individuals_count_table"], [256, 5, 1, "", "summarize_modelfit_results"], [257, 5, 1, "", "write_results"]], "pharmpy.workflows": [[258, 1, 1, "", "LocalDirectoryDatabase"], [259, 1, 1, "", "LocalDirectoryToolDatabase"], [260, 1, 1, "", "LocalModelDirectoryDatabase"], [261, 1, 1, "", "Log"], [262, 1, 1, "", "ModelDatabase"], [263, 1, 1, "", "NullModelDatabase"], [264, 1, 1, "", "NullToolDatabase"], [265, 1, 1, "", "Task"], [266, 1, 1, "", "ToolDatabase"], [267, 1, 1, "", "Workflow"], [268, 1, 1, "", "WorkflowBuilder"], [269, 5, 1, "", "call_workflow"], [270, 3, 1, "", "default_model_database"], [271, 3, 1, "", "default_tool_database"], [272, 5, 1, "", "execute_workflow"], [273, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[258, 2, 1, "", "retrieve_file"], [258, 2, 1, "", "retrieve_local_files"], [258, 2, 1, "", "retrieve_model"], [258, 2, 1, "", "retrieve_modelfit_results"], [258, 2, 1, "", "store_local_file"], [258, 2, 1, "", "store_metadata"], [258, 2, 1, "", "store_model"], [258, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[259, 2, 1, "", "from_dict"], [259, 2, 1, "", "read_metadata"], [259, 2, 1, "", "store_local_file"], [259, 2, 1, "", "store_metadata"], [259, 2, 1, "", "store_results"], [259, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[260, 2, 1, "", "list_models"], [260, 2, 1, "", "snapshot"], [260, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[261, 2, 1, "", "from_dict"], [261, 3, 1, "", "log"], [261, 2, 1, "", "log_error"], [261, 2, 1, "", "log_warning"], [261, 2, 1, "", "to_dataframe"], [261, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[262, 2, 1, "", "retrieve_file"], [262, 2, 1, "", "retrieve_local_files"], [262, 2, 1, "", "retrieve_model"], [262, 2, 1, "", "retrieve_modelfit_results"], [262, 2, 1, "", "snapshot"], [262, 2, 1, "", "store_local_file"], [262, 2, 1, "", "store_metadata"], [262, 2, 1, "", "store_model"], [262, 2, 1, "", "store_modelfit_results"], [262, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[263, 2, 1, "", "retrieve_file"], [263, 2, 1, "", "retrieve_local_files"], [263, 2, 1, "", "retrieve_model"], [263, 2, 1, "", "retrieve_modelfit_results"], [263, 2, 1, "", "store_local_file"], [263, 2, 1, "", "store_metadata"], [263, 2, 1, "", "store_model"], [263, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[264, 2, 1, "", "read_metadata"], [264, 2, 1, "", "store_local_file"], [264, 2, 1, "", "store_metadata"], [264, 2, 1, "", "store_results"]], "pharmpy.workflows.Task": [[265, 2, 1, "", "create"], [265, 3, 1, "", "function"], [265, 3, 1, "", "name"], [265, 2, 1, "", "replace"], [265, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[266, 3, 1, "", "model_database"], [266, 3, 1, "", "path"], [266, 2, 1, "", "read_metadata"], [266, 2, 1, "", "store_local_file"], [266, 2, 1, "", "store_metadata"], [266, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[267, 2, 1, "", "as_dask_dict"], [267, 2, 1, "", "create"], [267, 3, 1, "", "name"], [267, 2, 1, "", "plot_dask"], [267, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[268, 2, 1, "", "add_task"], [268, 2, 1, "", "insert_workflow"], [268, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[282, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [282, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[282, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[282, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [282, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[282, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [282, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[282, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [282, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [282, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [282, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [282, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [282, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [282, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[282, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[282, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[282, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[282, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[282, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[282, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[282, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [282, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[282, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[282, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [282, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[282, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[282, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [282, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [282, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[282, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[282, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [282, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [282, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [282, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [282, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[282, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[282, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[282, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[282, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [282, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [282, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [282, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[282, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[282, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[282, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[282, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[282, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[282, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[282, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[282, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[282, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[282, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[282, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[282, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [282, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [282, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [282, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [282, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [282, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [282, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [282, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [282, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [282, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [282, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [282, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[282, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [282, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[282, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[282, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [282, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [282, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [282, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[282, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[282, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [282, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[282, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[282, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [282, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [282, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[282, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [282, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 284, 304], "dataset": [0, 289, 300, 302, 314], "overview": [0, 306, 310], "pars": 0, "translat": 0, "step": [0, 300, 302, 312], "nm": 0, "tran": 0, "comment": 0, "line": [0, 282], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 302], "date": 0, "id": 0, "check": [0, 285], "tabl": 0, "file": [0, 284, 289], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 285], "all": 0, "zero": 0, "individu": [0, 278, 279, 293, 299, 301, 313], "control": 0, "stream": 0, "gener": [0, 298], "option": [0, 277, 314], "problem": 0, "data": [0, 277, 282], "eta": [0, 302], "code": [0, 283, 285], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 27, 278, 279, 282, 287, 288, 292, 293, 295, 297, 299, 301, 303, 308, 310, 311, 312, 313, 314], "spars": 0, "matrix": [0, 278, 301], "allometri": [1, 2, 282, 302], "run": [1, 2, 282, 285, 287, 292, 295, 297, 303, 311, 314], "argument": [1, 2, 287, 292, 295, 297, 303, 311], "procedur": [1, 311], "The": [1, 278, 279, 282, 284, 288, 290, 292, 293, 295, 299, 300, 303, 308, 310, 311, 312, 313], "automat": 2, "model": [2, 18, 274, 275, 282, 289, 290, 295, 300, 301, 302, 303, 304, 308, 311, 314], "develop": [2, 285, 286, 291], "amd": [2, 282], "input": [2, 286], "search": [2, 295, 303], "space": [2, 303], "order": 2, "subtool": 2, "structur": [2, 295, 302, 310], "iivsearch": [2, 282, 295], "iovsearch": [2, 282, 297], "residu": [2, 301, 310], "covari": [2, 278, 279, 293, 295, 301, 302, 310], "api": 3, "refer": [3, 279, 293], "assign": 4, "bolu": 5, "columninfo": [6, 289], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 289, 300], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 297, 300, 302], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "odesystem": 23, "paramet": [24, 25, 278, 290, 293, 300, 301, 302, 304], "randomvari": [26, 290], "statement": [28, 29, 290, 300], "variabilityhierarchi": 30, "variabilitylevel": 31, "to_compartmental_system": 32, "add_admid": 33, "add_allometri": 34, "add_bioavail": 35, "add_covariance_step": 36, "add_covariate_effect": 37, "add_effect_compart": 38, "add_estimation_step": 39, "add_iiv": [40, 282], "add_individual_paramet": 41, "add_iov": [42, 282], "add_lag_tim": 43, "add_metabolit": 44, "add_peripheral_compart": 45, "add_pk_iiv": 46, "add_population_paramet": 47, "add_time_after_dos": 48, "append_estimation_step_opt": 49, "bump_model_numb": 50, "calculate_a": 51, "calculate_b": 52, "calculate_corr_from_cov": 53, "calculate_corr_from_prec": 54, "calculate_cov_from_corrs": 55, "calculate_cov_from_prec": 56, "calculate_epsilon_gradient_express": 57, "calculate_eta_gradient_express": 58, "calculate_eta_shrinkag": 59, "calculate_individual_parameter_statist": 60, "calculate_individual_shrinkag": 61, "calculate_parameters_from_ucp": 62, "calculate_pk_parameters_statist": 63, "calculate_prec_from_corrs": 64, "calculate_prec_from_cov": 65, "calculate_se_from_cov": 66, "calculate_se_from_prec": 67, "calculate_ucp_scal": 68, "check_dataset": 69, "check_high_correl": 70, "check_parameters_near_bound": 71, "cleanup_model": 72, "convert_model": 73, "create_basic_pk_model": 74, "create_config_templ": 75, "create_joint_distribut": [76, 282], "create_rng": 77, "create_symbol": 78, "deidentify_data": 79, "display_od": 80, "drop_column": 81, "drop_dropped_column": 82, "evaluate_epsilon_gradi": 83, "evaluate_eta_gradi": 84, "evaluate_express": 85, "evaluate_individual_predict": 86, "evaluate_population_predict": 87, "evaluate_weighted_residu": 88, "expand_additional_dos": 89, "find_clearance_paramet": 90, "find_volume_paramet": 91, "fix_or_unfix_paramet": 92, "fix_paramet": 93, "fix_parameters_to": 94, "get_admid": 95, "get_baselin": 96, "get_bioavail": 97, "get_cmt": 98, "get_concentration_parameters_from_data": 99, "get_config_path": 100, "get_covariate_baselin": 101, "get_doseid": 102, "get_dos": 103, "get_dv_symbol": 104, "get_evid": 105, "get_id": 106, "get_individual_paramet": 107, "get_individual_prediction_express": 108, "get_initial_condit": 109, "get_lag_tim": 110, "get_mdv": 111, "get_model_cod": 112, "get_model_covari": 113, "get_number_of_individu": 114, "get_number_of_observ": 115, "get_number_of_observations_per_individu": 116, "get_observation_express": 117, "get_observ": 118, "get_omega": 119, "get_parameter_rv": 120, "get_pd_paramet": 121, "get_pk_paramet": 122, "get_population_prediction_express": 123, "get_rv_paramet": 124, "get_sigma": 125, "get_theta": 126, "get_unit_of": 127, "get_zero_order_input": 128, "greekify_model": 129, "has_additive_error_model": 130, "has_combined_error_model": 131, "has_covariate_effect": 132, "has_first_order_elimin": 133, "has_linear_od": 134, "has_linear_odes_with_real_eigenvalu": 135, "has_michaelis_menten_elimin": 136, "has_mixed_mm_fo_elimin": 137, "has_od": 138, "has_proportional_error_model": 139, "has_random_effect": 140, "has_weighted_error_model": 141, "has_zero_order_absorpt": 142, "has_zero_order_elimin": 143, "is_linear": 144, "is_real": 145, "list_time_varying_covari": 146, "load_dataset": 147, "load_example_model": 148, "make_declar": 149, "mu_reference_model": 150, "omit_data": 151, "plot_individual_predict": 152, "plot_iofv_vs_iofv": 153, "plot_transformed_eta_distribut": 154, "print_model_cod": 155, "print_model_symbol": 156, "read_dataset_from_datainfo": 157, "read_model": 158, "read_model_from_str": 159, "remove_bioavail": 160, "remove_covariance_step": 161, "remove_covariate_effect": 162, "remove_error_model": 163, "remove_estimation_step": 164, "remove_iiv": [165, 282], "remove_iov": [166, 282], "remove_lag_tim": 167, "remove_loq_data": 168, "remove_peripheral_compart": 169, "remove_unused_parameters_and_rv": 170, "rename_symbol": 171, "resample_data": 172, "sample_individual_estim": 173, "sample_parameters_from_covariance_matrix": 174, "sample_parameters_uniformli": 175, "set_additive_error_model": 176, "set_bolus_absorpt": 177, "set_combined_error_model": 178, "set_covari": 179, "set_direct_effect": 180, "set_dtbs_error_model": 181, "set_dvid": 182, "set_estimation_step": 183, "set_evaluation_step": 184, "set_first_order_absorpt": 185, "set_first_order_elimin": 186, "set_iiv_on_ruv": 187, "set_initial_condit": 188, "set_initial_estim": 189, "set_lloq_data": 190, "set_lower_bound": 191, "set_michaelis_menten_elimin": 192, "set_mixed_mm_fo_elimin": 193, "set_nam": 194, "set_ode_solv": 195, "set_peripheral_compart": 196, "set_power_on_ruv": 197, "set_proportional_error_model": 198, "set_reference_valu": 199, "set_seq_zo_fo_absorpt": 200, "set_time_varying_error_model": 201, "set_tmdd": 202, "set_transit_compart": 203, "set_upper_bound": 204, "set_weighted_error_model": 205, "set_zero_order_absorpt": 206, "set_zero_order_elimin": 207, "set_zero_order_input": 208, "simplify_express": 209, "solve_ode_system": 210, "split_joint_distribut": 211, "transform_blq": 212, "transform_etas_boxcox": 213, "transform_etas_john_drap": 214, "transform_etas_tdist": 215, "translate_nmtran_tim": 216, "unconstrain_paramet": 217, "undrop_column": 218, "unfix_paramet": 219, "unfix_parameters_to": 220, "unload_dataset": 221, "update_initial_individual_estim": 222, "update_init": [223, 282], "use_thetas_for_error_stdev": 224, "write_csv": 225, "write_model": 226, "create_report": 227, "create_result": 228, "fit": [229, 301], "load_example_modelfit_result": 230, "predict_influential_individu": 231, "predict_influential_outli": 232, "predict_outli": 233, "print_fit_summari": 234, "rank_model": 235, "read_modelfit_result": 236, "read_result": 237, "resume_tool": 238, "retrieve_final_model": 239, "retrieve_model": 240, "run_allometri": 241, "run_amd": 242, "run_bootstrap": 243, "run_covsearch": 244, "run_estmethod": 245, "run_iivsearch": 246, "run_iovsearch": 247, "run_modelfit": 248, "run_modelsearch": 249, "run_ruvsearch": 250, "run_structsearch": 251, "run_tool": 252, "summarize_error": 253, "summarize_individu": 254, "summarize_individuals_count_t": 255, "summarize_modelfit_result": 256, "write_result": 257, "localdirectorydatabas": 258, "localdirectorytooldatabas": 259, "localmodeldirectorydatabas": 260, "log": 261, "modeldatabas": 262, "nullmodeldatabas": 263, "nulltooldatabas": 264, "task": 265, "tooldatabas": 266, "workflow": [267, 277, 285], "workflowbuild": 268, "call_workflow": 269, "default_model_databas": 270, "default_tool_databas": 271, "execute_workflow": 272, "split_common_opt": 273, "pharmpi": [274, 275, 276, 277, 281, 282, 283, 284, 285, 289, 290, 296, 300, 305, 309, 314, 316], "packag": [274, 275, 276, 277], "function": [274, 275, 276, 277, 302], "class": [274, 277, 290], "tool": [276, 309, 314], "modul": [277, 290], "bootstrap": [278, 282], "postprocess": [278, 293], "statist": 278, "ofv": [278, 279, 282, 288, 293, 299, 301, 312, 313], "includ": 278, "case": 279, "delet": 279, "diagnost": 279, "cdd": [279, 282], "cook": 279, "score": 279, "jackknif": 279, "cookscor": 279, "ratio": 279, "delta": 279, "skip": 279, "column": 279, "changelog": 280, "0": 280, "101": 280, "2023": 280, "09": 280, "01": 280, "new": [280, 297, 304], "featur": [280, 303, 314], "100": 280, "08": 280, "25": 280, "chang": [280, 305], "99": 280, "23": 280, "bugfix": 280, "98": 280, "07": 280, "21": 280, "97": 280, "06": 280, "28": 280, "96": 280, "05": 280, "26": 280, "95": 280, "22": 280, "94": 280, "04": 280, "93": 280, "19": 280, "92": 280, "91": 280, "03": 280, "90": 280, "02": 280, "24": 280, "89": 280, "88": 280, "2022": 280, "12": 280, "87": 280, "14": 280, "86": 280, "11": 280, "30": 280, "85": 280, "18": 280, "84": 280, "1": 280, "13": 280, "bug": 280, "fix": 280, "83": 280, "82": 280, "10": 280, "81": 280, "80": 280, "79": 280, "16": 280, "78": 280, "20": 280, "77": 280, "76": 280, "75": 280, "74": 280, "73": 280, "72": 280, "71": 280, "70": 280, "17": 280, "69": 280, "29": 280, "68": 280, "27": 280, "67": 280, "66": 280, "65": 280, "64": 280, "63": 280, "62": 280, "61": 280, "31": 280, "59": 280, "58": 280, "4": 280, "57": 280, "56": 280, "55": 280, "54": 280, "53": 280, "52": 280, "51": 280, "50": 280, "49": 280, "48": 280, "47": 280, "46": 280, "45": 280, "44": 280, "43": 280, "42": 280, "41": 280, "2021": 280, "40": 280, "39": 280, "15": 280, "38": 280, "37": 280, "36": 280, "35": 280, "34": 280, "3": 280, "2": [280, 298], "33": 280, "32": 280, "2020": 280, "9": 280, "8": 280, "7": 280, "6": 280, "5": 280, "2018": 280, "citat": 281, "how": 281, "cite": 281, "pharmr": [281, 316], "command": 282, "interfac": 282, "append": 282, "deidentifi": 282, "filter": 282, "print": 282, "resampl": 282, "write": [282, 300, 302, 304], "info": 282, "absorption_r": 282, "add_cov_effect": 282, "boxcox": [282, 310], "elimination_r": 282, "error": [282, 301, 302, 310, 316], "iiv_on_ruv": 282, "john_drap": 282, "peripheral_compart": 282, "power_on_ruv": 282, "sampl": [282, 313], "tdist": [282, 310], "transit_compart": 282, "frem": [282, 293], "linear": [282, 299], "qa": [282, 310], "report": 282, "ruvsearch": [282, 311], "scm": [282, 312], "simev": [282, 313], "summari": [282, 312, 313], "covsearch": [282, 287], "estmethod": [282, 292], "execut": 282, "modelsearch": [282, 303], "commun": 283, "conduct": 283, "configur": 284, "avail": 284, "plugin": [284, 304, 306], "nlmixr": 284, "rxode": 284, "environ": [284, 285], "variabl": [284, 293, 300, 302, 304], "contribut": 285, "set": [285, 305], "up": 285, "support": 285, "platform": 285, "instal": [285, 294, 316], "python": [285, 316], "git": 285, "fork": 285, "clone": 285, "repositori": 285, "tox": 285, "graphviz": 285, "us": [285, 304, 316], "build": 285, "document": [285, 291], "unit": [285, 289], "test": 285, "integr": 285, "usabl": 285, "virtual": 285, "standard": [285, 301], "releas": 285, "version": [285, 316], "inform": [285, 302], "contributor": 286, "scientif": 286, "fund": 286, "effect": [287, 293, 310], "wildcard": 287, "algorithm": [287, 292, 295, 297, 303], "crossval": 288, "crossvalid": 288, "retriev": 289, "from": 289, "updat": [289, 292], "type": [289, 314], "scale": 289, "continu": 289, "categori": 289, "drop": 289, "datatyp": 289, "descriptor": 289, "design": 290, "principl": 290, "level": [290, 300], "architectur": 290, "heart": 290, "docstr": 290, "depend": [290, 300], "exhaust": [292, 303], "onli": 292, "evalu": 292, "method": 292, "solver": 292, "coeffici": 293, "unexplain": 293, "estim": [293, 300, 301, 302], "valu": 293, "get": 294, "start": [294, 295], "A": 294, "first": 294, "exampl": [294, 302, 314], "brute": 295, "forc": 295, "number": 295, "iiv": [295, 303], "full": 295, "ad": [295, 300, 302, 303], "compar": [295, 297, 303], "rank": [295, 297, 303], "candid": [295, 297, 303, 312], "welcom": 296, "iov": 297, "licens": 298, "logo": 298, "copyright": 298, "bsd": 298, "claus": 298, "gnu": 298, "lesser": 298, "public": 298, "read": [300, 302, 304], "inspect": 300, "attribut": 300, "name": [300, 304], "descript": [300, 314], "random": [300, 304], "low": 300, "manipul": 300, "object": 300, "creat": [300, 302], "substitut": 300, "symbol": [300, 314], "numer": 300, "modelfit": 301, "final": 301, "rel": 301, "correl": 301, "precis": 301, "indiviud": 301, "predict": [301, 313], "basic": 302, "load": 302, "convert": 302, "transform": 302, "absorpt": 302, "rate": 302, "delai": 302, "elimin": 302, "remov": 302, "popul": 302, "blq": 302, "examin": 302, "modifi": 302, "subject": 302, "observ": 302, "dose": 302, "extract": 302, "group": 302, "after": 302, "concentr": 302, "common": [303, 314], "behaviour": 303, "between": [303, 316], "combin": 303, "exclus": 303, "stepwis": 303, "reduc": 303, "dure": 303, "plot": [305, 313], "theme": 305, "axi": 305, "project": 307, "suggest": 307, "resmod": 308, "psn": 309, "connect": 309, "bia": 310, "fullblock": 310, "databas": 314, "directori": 314, "metadata": 314, "languag": 314, "mfl": 314, "describ": 314, "interv": 314, "redund": 314, "user": 315, "guid": 315, "r": 316, "troubl": 316, "shoot": 316, "wrong": 316, "when": 316, "conda": 316, "import": 316, "mismatch": 316, "gotcha": 316, "list": 316, "indic": 316}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"add_lag_time": [[43, "add-lag-time"]], "create_joint_distribution": [[76, "create-joint-distribution"]], "calculate_prec_from_cov": [[65, "calculate-prec-from-cov"]], "add_estimation_step": [[39, "add-estimation-step"]], "calculate_cov_from_corrse": [[55, "calculate-cov-from-corrse"]], "add_population_parameter": [[47, "add-population-parameter"]], "calculate_aic": [[51, "calculate-aic"]], "convert_model": [[73, "convert-model"]], "calculate_eta_shrinkage": [[59, "calculate-eta-shrinkage"]], "add_pk_iiv": [[46, "add-pk-iiv"]], "calculate_cov_from_prec": [[56, "calculate-cov-from-prec"]], "calculate_se_from_prec": [[67, "calculate-se-from-prec"]], "cleanup_model": [[72, "cleanup-model"]], "add_iiv": [[40, "add-iiv"]], "create_basic_pk_model": [[74, "create-basic-pk-model"]], "append_estimation_step_options": [[49, "append-estimation-step-options"]], "bump_model_number": [[50, "bump-model-number"]], "calculate_ucp_scale": [[68, "calculate-ucp-scale"]], "calculate_eta_gradient_expression": [[58, "calculate-eta-gradient-expression"]], "calculate_pk_parameters_statistics": [[63, "calculate-pk-parameters-statistics"]], "create_config_template": [[75, "create-config-template"]], "check_parameters_near_bounds": [[71, "check-parameters-near-bounds"]], "check_dataset": [[69, "check-dataset"]], "check_high_correlations": [[70, "check-high-correlations"]], "add_metabolite": [[44, "add-metabolite"]], "add_time_after_dose": [[48, "add-time-after-dose"]], "calculate_bic": [[52, "calculate-bic"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "calculate_epsilon_gradient_expression": [[57, "calculate-epsilon-gradient-expression"]], "calculate_prec_from_corrse": [[64, "calculate-prec-from-corrse"]], "calculate_se_from_cov": [[66, "calculate-se-from-cov"]], "calculate_corr_from_prec": [[54, "calculate-corr-from-prec"]], "calculate_parameters_from_ucp": [[62, "calculate-parameters-from-ucp"]], "calculate_corr_from_cov": [[53, "calculate-corr-from-cov"]], "add_peripheral_compartment": [[45, "add-peripheral-compartment"]], "create_rng": [[77, "create-rng"]], "calculate_individual_parameter_statistics": [[60, "calculate-individual-parameter-statistics"]], "calculate_individual_shrinkage": [[61, "calculate-individual-shrinkage"]], "add_iov": [[42, "add-iov"]], "Assignment": [[4, "assignment"]], "Parameter": [[24, "parameter"]], "add_effect_compartment": [[38, "add-effect-compartment"]], "to_compartmental_system": [[32, "to-compartmental-system"]], "Results": [[27, "results"], [2, "results"], [314, "results"], [287, "results"], [297, "results"]], "EstimationSteps": [[15, "estimationsteps"]], "ColumnInfo": [[6, "columninfo"], [289, "columninfo"]], "Model": [[18, "model"]], "EstimationStep": [[14, "estimationstep"]], "add_bioavailability": [[35, "add-bioavailability"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [287, "running"], [295, "running"], [311, "running"], [297, "running"], [292, "running"], [303, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [287, "arguments"], [295, "arguments"], [311, "arguments"], [297, "arguments"], [292, "arguments"], [303, "arguments"]], "Procedure": [[1, "procedure"], [311, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "DataInfo": [[10, "datainfo"], [289, "datainfo"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "Compartment": [[7, "compartment"]], "Parameters": [[25, "parameters"], [300, "parameters"]], "API Reference": [[3, "api-reference"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "add_admid": [[33, "add-admid"]], "Statement": [[28, "statement"]], "VariabilityLevel": [[31, "variabilitylevel"]], "add_covariate_effect": [[37, "add-covariate-effect"]], "ODESystem": [[23, "odesystem"]], "Statements": [[29, "statements"], [300, "statements"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Distribution": [[13, "distribution"], [302, "distribution"]], "DatasetWarning": [[12, "datasetwarning"]], "RandomVariables": [[26, "randomvariables"]], "add_covariance_step": [[36, "add-covariance-step"]], "Infusion": [[16, "infusion"]], "DatasetError": [[11, "dataseterror"]], "ModelError": [[19, "modelerror"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Bolus": [[5, "bolus"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [295, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [297, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "NormalDistribution": [[22, "normaldistribution"]], "add_allometry": [[34, "add-allometry"]], "VariabilityHierarchy": [[30, "variabilityhierarchy"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "User guide": [[315, "user-guide"]], "scm": [[312, "scm"]], "The scm results": [[312, "the-scm-results"]], "Steps": [[312, "steps"]], "OFV Summary": [[312, "ofv-summary"]], "Candidate Summary": [[312, "candidate-summary"]], "Tools": [[314, "tools"]], "Tools in Pharmpy": [[314, "tools-in-pharmpy"]], "Common options": [[314, "common-options"]], "Common features": [[314, "common-features"]], "Tool database": [[314, "tool-database"]], "Running directory": [[314, "running-directory"]], "Metadata": [[314, "metadata"]], "Datasets": [[314, "datasets"]], "Model feature language (MFL)": [[314, "model-feature-language-mfl"]], "Option types": [[314, "option-types"]], "Model features": [[314, "model-features"]], "Symbols": [[314, "symbols"]], "Describe intervals": [[314, "describe-intervals"]], "Redundant descriptions": [[314, "redundant-descriptions"]], "Examples": [[314, "examples"]], "Simeval": [[313, "simeval"]], "The simeval results": [[313, "the-simeval-results"]], "Sampled Individual OFVs": [[313, "sampled-individual-ofvs"]], "Individual OFV summary": [[313, "individual-ofv-summary"]], "Individual prediction plot": [[313, "individual-prediction-plot"]], "Pharmpy in R": [[316, "pharmpy-in-r"]], "Installing pharmr": [[316, "installing-pharmr"]], "Trouble shooting": [[316, "trouble-shooting"]], "Wrong Python version when using conda": [[316, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[316, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[316, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[316, "using-pharmr"]], "Gotchas": [[316, "gotchas"]], "List indices": [[316, "list-indices"]], "resume_tool": [[238, "resume-tool"]], "summarize_individuals": [[254, "summarize-individuals"]], "run_tool": [[252, "run-tool"]], "default_model_database": [[270, "default-model-database"]], "summarize_individuals_count_table": [[255, "summarize-individuals-count-table"]], "read_modelfit_results": [[236, "read-modelfit-results"]], "run_iovsearch": [[247, "run-iovsearch"]], "retrieve_models": [[240, "retrieve-models"]], "ModelDatabase": [[262, "modeldatabase"]], "NullToolDatabase": [[264, "nulltooldatabase"]], "run_estmethod": [[245, "run-estmethod"]], "default_tool_database": [[271, "default-tool-database"]], "run_bootstrap": [[243, "run-bootstrap"]], "run_modelfit": [[248, "run-modelfit"]], "call_workflow": [[269, "call-workflow"]], "read_results": [[237, "read-results"]], "LocalDirectoryDatabase": [[258, "localdirectorydatabase"]], "retrieve_final_model": [[239, "retrieve-final-model"]], "run_allometry": [[241, "run-allometry"]], "write_results": [[257, "write-results"]], "LocalDirectoryToolDatabase": [[259, "localdirectorytooldatabase"]], "print_fit_summary": [[234, "print-fit-summary"]], "summarize_modelfit_results": [[256, "summarize-modelfit-results"]], "Log": [[261, "log"]], "execute_workflow": [[272, "execute-workflow"]], "run_modelsearch": [[249, "run-modelsearch"]], "LocalModelDirectoryDatabase": [[260, "localmodeldirectorydatabase"]], "summarize_errors": [[253, "summarize-errors"]], "NullModelDatabase": [[263, "nullmodeldatabase"]], "rank_models": [[235, "rank-models"]], "Task": [[265, "task"]], "run_structsearch": [[251, "run-structsearch"]], "run_iivsearch": [[246, "run-iivsearch"]], "WorkflowBuilder": [[268, "workflowbuilder"]], "run_amd": [[242, "run-amd"]], "run_covsearch": [[244, "run-covsearch"]], "ToolDatabase": [[266, "tooldatabase"]], "run_ruvsearch": [[250, "run-ruvsearch"]], "Workflow": [[267, "workflow"]], "use_thetas_for_error_stdev": [[224, "use-thetas-for-error-stdev"]], "split_joint_distribution": [[211, "split-joint-distribution"]], "set_power_on_ruv": [[197, "set-power-on-ruv"]], "set_proportional_error_model": [[198, "set-proportional-error-model"]], "transform_etas_boxcox": [[213, "transform-etas-boxcox"]], "transform_blq": [[212, "transform-blq"]], "set_zero_order_elimination": [[207, "set-zero-order-elimination"]], "simplify_expression": [[209, "simplify-expression"]], "set_time_varying_error_model": [[201, "set-time-varying-error-model"]], "set_tmdd": [[202, "set-tmdd"]], "transform_etas_john_draper": [[214, "transform-etas-john-draper"]], "unload_dataset": [[221, "unload-dataset"]], "create_report": [[227, "create-report"]], "load_example_modelfit_results": [[230, "load-example-modelfit-results"]], "set_zero_order_absorption": [[206, "set-zero-order-absorption"]], "set_seq_zo_fo_absorption": [[200, "set-seq-zo-fo-absorption"]], "transform_etas_tdist": [[215, "transform-etas-tdist"]], "set_transit_compartments": [[203, "set-transit-compartments"]], "set_weighted_error_model": [[205, "set-weighted-error-model"]], "unfix_parameters": [[219, "unfix-parameters"]], "predict_influential_outliers": [[232, "predict-influential-outliers"]], "unfix_parameters_to": [[220, "unfix-parameters-to"]], "solve_ode_system": [[210, "solve-ode-system"]], "unconstrain_parameters": [[217, "unconstrain-parameters"]], "translate_nmtran_time": [[216, "translate-nmtran-time"]], "fit": [[229, "fit"]], "update_initial_individual_estimates": [[222, "update-initial-individual-estimates"]], "set_ode_solver": [[195, "set-ode-solver"]], "write_model": [[226, "write-model"]], "create_results": [[228, "create-results"]], "predict_outliers": [[233, "predict-outliers"]], "update_inits": [[223, "update-inits"]], "set_zero_order_input": [[208, "set-zero-order-input"]], "predict_influential_individuals": [[231, "predict-influential-individuals"]], "set_reference_values": [[199, "set-reference-values"]], "set_upper_bounds": [[204, "set-upper-bounds"]], "undrop_columns": [[218, "undrop-columns"]], "write_csv": [[225, "write-csv"]], "set_peripheral_compartments": [[196, "set-peripheral-compartments"]], "set_additive_error_model": [[176, "set-additive-error-model"]], "read_model_from_string": [[159, "read-model-from-string"]], "remove_lag_time": [[167, "remove-lag-time"]], "remove_unused_parameters_and_rvs": [[170, "remove-unused-parameters-and-rvs"]], "sample_parameters_from_covariance_matrix": [[174, "sample-parameters-from-covariance-matrix"]], "set_estimation_step": [[183, "set-estimation-step"]], "set_initial_estimates": [[189, "set-initial-estimates"]], "print_model_symbols": [[156, "print-model-symbols"]], "remove_iiv": [[165, "remove-iiv"]], "set_name": [[194, "set-name"]], "set_lower_bounds": [[191, "set-lower-bounds"]], "set_mixed_mm_fo_elimination": [[193, "set-mixed-mm-fo-elimination"]], "set_iiv_on_ruv": [[187, "set-iiv-on-ruv"]], "rename_symbols": [[171, "rename-symbols"]], "set_bolus_absorption": [[177, "set-bolus-absorption"]], "set_covariates": [[179, "set-covariates"]], "set_dtbs_error_model": [[181, "set-dtbs-error-model"]], "set_direct_effect": [[180, "set-direct-effect"]], "remove_error_model": [[163, "remove-error-model"]], "remove_bioavailability": [[160, "remove-bioavailability"]], "remove_loq_data": [[168, "remove-loq-data"]], "remove_iov": [[166, "remove-iov"]], "remove_covariance_step": [[161, "remove-covariance-step"]], "set_michaelis_menten_elimination": [[192, "set-michaelis-menten-elimination"]], "remove_peripheral_compartment": [[169, "remove-peripheral-compartment"]], "read_model": [[158, "read-model"]], "set_lloq_data": [[190, "set-lloq-data"]], "set_dvid": [[182, "set-dvid"]], "set_combined_error_model": [[178, "set-combined-error-model"]], "sample_parameters_uniformly": [[175, "sample-parameters-uniformly"]], "set_first_order_elimination": [[186, "set-first-order-elimination"]], "sample_individual_estimates": [[173, "sample-individual-estimates"]], "set_evaluation_step": [[184, "set-evaluation-step"]], "set_initial_condition": [[188, "set-initial-condition"]], "remove_covariate_effect": [[162, "remove-covariate-effect"]], "set_first_order_absorption": [[185, "set-first-order-absorption"]], "resample_data": [[172, "resample-data"]], "remove_estimation_step": [[164, "remove-estimation-step"]], "read_dataset_from_datainfo": [[157, "read-dataset-from-datainfo"]], "get_population_prediction_expression": [[123, "get-population-prediction-expression"]], "has_first_order_elimination": [[133, "has-first-order-elimination"]], "is_real": [[145, "is-real"]], "make_declarative": [[149, "make-declarative"]], "has_weighted_error_model": [[141, "has-weighted-error-model"]], "get_rv_parameters": [[124, "get-rv-parameters"]], "mu_reference_model": [[150, "mu-reference-model"]], "get_pd_parameters": [[121, "get-pd-parameters"]], "has_covariate_effect": [[132, "has-covariate-effect"]], "has_linear_odes_with_real_eigenvalues": [[135, "has-linear-odes-with-real-eigenvalues"]], "has_additive_error_model": [[130, "has-additive-error-model"]], "list_time_varying_covariates": [[146, "list-time-varying-covariates"]], "load_dataset": [[147, "load-dataset"]], "has_proportional_error_model": [[139, "has-proportional-error-model"]], "greekify_model": [[129, "greekify-model"]], "has_combined_error_model": [[131, "has-combined-error-model"]], "has_zero_order_absorption": [[142, "has-zero-order-absorption"]], "has_linear_odes": [[134, "has-linear-odes"]], "plot_iofv_vs_iofv": [[153, "plot-iofv-vs-iofv"]], "get_observation_expression": [[117, "get-observation-expression"]], "get_zero_order_inputs": [[128, "get-zero-order-inputs"]], "get_sigmas": [[125, "get-sigmas"]], "get_pk_parameters": [[122, "get-pk-parameters"]], "get_observations": [[118, "get-observations"]], "is_linearized": [[144, "is-linearized"]], "plot_individual_predictions": [[152, "plot-individual-predictions"]], "has_mixed_mm_fo_elimination": [[137, "has-mixed-mm-fo-elimination"]], "has_random_effect": [[140, "has-random-effect"]], "has_michaelis_menten_elimination": [[136, "has-michaelis-menten-elimination"]], "get_unit_of": [[127, "get-unit-of"]], "load_example_model": [[148, "load-example-model"]], "omit_data": [[151, "omit-data"]], "get_parameter_rv": [[120, "get-parameter-rv"]], "print_model_code": [[155, "print-model-code"]], "has_odes": [[138, "has-odes"]], "get_thetas": [[126, "get-thetas"]], "has_zero_order_elimination": [[143, "has-zero-order-elimination"]], "plot_transformed_eta_distributions": [[154, "plot-transformed-eta-distributions"]], "get_omegas": [[119, "get-omegas"]], "get_individual_prediction_expression": [[108, "get-individual-prediction-expression"]], "drop_dropped_columns": [[82, "drop-dropped-columns"]], "get_bioavailability": [[97, "get-bioavailability"]], "expand_additional_doses": [[89, "expand-additional-doses"]], "get_doses": [[103, "get-doses"]], "get_number_of_observations_per_individual": [[116, "get-number-of-observations-per-individual"]], "evaluate_epsilon_gradient": [[83, "evaluate-epsilon-gradient"]], "get_cmt": [[98, "get-cmt"]], "get_evid": [[105, "get-evid"]], "fix_or_unfix_parameters": [[92, "fix-or-unfix-parameters"]], "get_model_covariates": [[113, "get-model-covariates"]], "get_concentration_parameters_from_data": [[99, "get-concentration-parameters-from-data"]], "get_number_of_observations": [[115, "get-number-of-observations"]], "get_config_path": [[100, "get-config-path"]], "find_volume_parameters": [[91, "find-volume-parameters"]], "fix_parameters": [[93, "fix-parameters"]], "get_ids": [[106, "get-ids"]], "drop_columns": [[81, "drop-columns"]], "deidentify_data": [[79, "deidentify-data"]], "evaluate_individual_prediction": [[86, "evaluate-individual-prediction"]], "evaluate_eta_gradient": [[84, "evaluate-eta-gradient"]], "get_dv_symbol": [[104, "get-dv-symbol"]], "find_clearance_parameters": [[90, "find-clearance-parameters"]], "get_baselines": [[96, "get-baselines"]], "get_mdv": [[111, "get-mdv"]], "get_covariate_baselines": [[101, "get-covariate-baselines"]], "get_model_code": [[112, "get-model-code"]], "fix_parameters_to": [[94, "fix-parameters-to"]], "get_number_of_individuals": [[114, "get-number-of-individuals"]], "get_lag_times": [[110, "get-lag-times"]], "evaluate_weighted_residuals": [[88, "evaluate-weighted-residuals"]], "get_doseid": [[102, "get-doseid"]], "evaluate_population_prediction": [[87, "evaluate-population-prediction"]], "get_admid": [[95, "get-admid"]], "get_initial_conditions": [[109, "get-initial-conditions"]], "evaluate_expression": [[85, "evaluate-expression"]], "display_odes": [[80, "display-odes"]], "create_symbol": [[78, "create-symbol"]], "get_individual_parameters": [[107, "get-individual-parameters"]], "Project suggestions": [[307, "project-suggestions"]], "pharmpy.workflows Package": [[277, "module-pharmpy.workflows"]], "Options for the data module": [[277, "id1"]], "Functions": [[277, "functions"], [276, "functions"], [275, "functions"], [274, "functions"]], "Classes": [[277, "classes"], [274, "classes"]], "Documentation for developers": [[291, "documentation-for-developers"]], "Plots in Pharmpy": [[305, "plots-in-pharmpy"]], "Setting themes": [[305, "setting-themes"]], "Changing axis of plots": [[305, "changing-axis-of-plots"]], "The Pharmpy command line interface": [[282, "the-pharmpy-command-line-interface"]], "pharmpy": [[282, "pharmpy"]], "pharmpy data": [[282, "pharmpy-data"]], "pharmpy data append": [[282, "pharmpy-data-append"]], "pharmpy data deidentify": [[282, "pharmpy-data-deidentify"]], "pharmpy data filter": [[282, "pharmpy-data-filter"]], "pharmpy data print": [[282, "pharmpy-data-print"]], "pharmpy data resample": [[282, "pharmpy-data-resample"]], "pharmpy data write": [[282, "pharmpy-data-write"]], "pharmpy info": [[282, "pharmpy-info"]], "pharmpy model": [[282, "pharmpy-model"]], "pharmpy model absorption_rate": [[282, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[282, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[282, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[282, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[282, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[282, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[282, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[282, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[282, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[282, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[282, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[282, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[282, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[282, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[282, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[282, "pharmpy-model-sample"]], "pharmpy model tdist": [[282, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[282, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[282, "pharmpy-model-update-inits"]], "pharmpy results": [[282, "pharmpy-results"]], "pharmpy results bootstrap": [[282, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[282, "pharmpy-results-cdd"]], "pharmpy results frem": [[282, "pharmpy-results-frem"]], "pharmpy results linearize": [[282, "pharmpy-results-linearize"]], "pharmpy results ofv": [[282, "pharmpy-results-ofv"]], "pharmpy results print": [[282, "pharmpy-results-print"]], "pharmpy results qa": [[282, "pharmpy-results-qa"]], "pharmpy results report": [[282, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[282, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[282, "pharmpy-results-scm"]], "pharmpy results simeval": [[282, "pharmpy-results-simeval"]], "pharmpy results summary": [[282, "pharmpy-results-summary"]], "pharmpy run": [[282, "pharmpy-run"]], "pharmpy run allometry": [[282, "pharmpy-run-allometry"]], "pharmpy run amd": [[282, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[282, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[282, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[282, "pharmpy-run-estmethod"]], "pharmpy run execute": [[282, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[282, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[282, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[282, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[282, "pharmpy-run-ruvsearch"]], "Welcome to Pharmpy": [[296, "welcome-to-pharmpy"]], "The Pharmpy model": [[300, "the-pharmpy-model"]], "Reading in a model": [[300, "reading-in-a-model"], [304, "reading-in-a-model"]], "Writing a model": [[300, "writing-a-model"], [304, "writing-a-model"]], "Inspecting the model attributes": [[300, "inspecting-the-model-attributes"]], "Name and description": [[300, "name-and-description"]], "Random variables": [[300, "random-variables"]], "Dataset and datainfo": [[300, "dataset-and-datainfo"]], "Estimation steps": [[300, "estimation-steps"], [302, "estimation-steps"]], "Dependent variables": [[300, "dependent-variables"]], "Low level manipulations of the model object": [[300, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[300, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[300, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Resmod": [[308, "resmod"]], "The resmod results": [[308, "the-resmod-results"]], "Resmod models": [[308, "resmod-models"]], "Linearize": [[299, "linearize"]], "The linearize results": [[299, "the-linearize-results"]], "OFVs": [[299, "ofvs"]], "Individual OFVs": [[299, "individual-ofvs"]], "COVsearch": [[287, "covsearch"]], "Effects": [[287, "effects"]], "Wildcards": [[287, "wildcards"]], "Algorithm": [[287, "algorithm"], [297, "algorithm"]], "Case deletion diagnostics": [[279, "case-deletion-diagnostics"]], "The cdd results": [[279, "the-cdd-results"]], "Case results": [[279, "case-results"]], "Cook score": [[279, "cook-score"]], "Jackknife cookscore": [[279, "jackknife-cookscore"]], "Covariance ratio": [[279, "covariance-ratio"]], "Delta OFV": [[279, "delta-ofv"]], "Skipped individuals": [[279, "skipped-individuals"]], "Case column": [[279, "case-column"]], "References": [[279, "references"], [293, "references"]], "Algorithms": [[295, "algorithms"], [292, "algorithms"], [303, "algorithms"]], "Brute force search for number of IIVs": [[295, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[295, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[295, "full-brute-force-search"]], "Adding IIV to the start model": [[295, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[295, "comparing-and-ranking-candidates"], [297, "comparing-and-ranking-candidates"], [303, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[295, "the-iivsearch-results"]], "ruvsearch": [[311, "ruvsearch"]], "Models": [[311, "models"]], "The RUVsearch results": [[311, "the-ruvsearch-results"]], "pharmpy.tools Package": [[276, "module-pharmpy.tools"]], "Citation": [[281, "citation"]], "How to cite Pharmpy and pharmr": [[281, "how-to-cite-pharmpy-and-pharmr"]], "PsN with Pharmpy": [[309, "psn-with-pharmpy"]], "Tools connected to PsN": [[309, "tools-connected-to-psn"]], "Design principles": [[290, "design-principles"]], "Levels of the architecture": [[290, "levels-of-the-architecture"]], "The Heart, The Model Class": [[290, "the-heart-the-model-class"]], "pharmpy.Parameters": [[290, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[290, "pharmpy-randomvariables"]], "pharmpy.Statements": [[290, "pharmpy-statements"]], "The pharmpy.modeling module": [[290, "the-pharmpy-modeling-module"]], "Docstrings": [[290, "docstrings"]], "Dependencies": [[290, "dependencies"]], "Distribution of new IOVs": [[297, "distribution-of-new-iovs"]], "Crossval": [[288, "crossval"]], "The crossval results": [[288, "the-crossval-results"]], "Crossvalidation OFVs": [[288, "crossvalidation-ofvs"]], "Changelog": [[280, "changelog"]], "0.101.0 (2023-09-01)": [[280, "id1"]], "New features": [[280, "new-features"], [280, "id3"], [280, "id5"], [280, "id8"], [280, "id11"], [280, "id15"], [280, "id21"], [280, "id25"], [280, "id29"], [280, "id32"], [280, "id36"], [280, "id39"], [280, "id42"], [280, "id55"], [280, "id65"], [280, "id72"], [280, "id83"], [280, "id87"], [280, "id94"], [280, "id97"], [280, "id101"], [280, "id107"], [280, "id111"], [280, "id117"], [280, "id122"], [280, "id126"], [280, "id129"], [280, "id137"], [280, "id141"], [280, "id147"], [280, "id156"], [280, "id160"], [280, "id163"], [280, "id167"], [280, "id169"], [280, "id174"], [280, "id177"], [280, "id181"]], "0.100.0 (2023-08-25)": [[280, "id2"]], "Changes": [[280, "changes"], [280, "id6"], [280, "id9"], [280, "id12"], [280, "id14"], [280, "id18"], [280, "id22"], [280, "id26"], [280, "id33"], [280, "id37"], [280, "id40"], [280, "id43"], [280, "id45"], [280, "id47"], [280, "id50"], [280, "id53"], [280, "id56"], [280, "id58"], [280, "id61"], [280, "id66"], [280, "id69"], [280, "id73"], [280, "id76"], [280, "id79"], [280, "id84"], [280, "id88"], [280, "id91"], [280, "id95"], [280, "id98"], [280, "id102"], [280, "id108"], [280, "id112"], [280, "id123"], [280, "id127"], [280, "id132"], [280, "id138"], [280, "id148"], [280, "id153"], [280, "id157"], [280, "id164"], [280, "id170"], [280, "id175"], [280, "id178"], [280, "id182"]], "0.99.0 (2023-08-23)": [[280, "id4"]], "Bugfixes": [[280, "bugfixes"], [280, "id16"], [280, "id19"], [280, "id23"], [280, "id27"], [280, "id30"], [280, "id34"], [280, "id48"], [280, "id51"], [280, "id77"], [280, "id81"], [280, "id85"], [280, "id89"], [280, "id92"], [280, "id99"], [280, "id103"], [280, "id105"], [280, "id109"], [280, "id113"], [280, "id115"], [280, "id118"], [280, "id120"], [280, "id124"], [280, "id130"], [280, "id133"], [280, "id135"], [280, "id139"], [280, "id143"], [280, "id145"], [280, "id149"], [280, "id151"], [280, "id154"], [280, "id158"], [280, "id161"], [280, "id165"], [280, "id172"], [280, "id179"], [280, "id183"]], "0.98.0 (2023-07-21)": [[280, "id7"]], "0.97.0 (2023-06-28)": [[280, "id10"]], "0.96.0 (2023-05-26)": [[280, "id13"]], "0.95.0 (2023-05-22)": [[280, "id17"]], "0.94.0 (2023-04-26)": [[280, "id20"]], "0.93.0 (2023-04-19)": [[280, "id24"]], "0.92.0 (2023-04-05)": [[280, "id28"]], "0.91.0 (2023-03-03)": [[280, "id31"]], "0.90.0 (2023-02-24)": [[280, "id35"]], "0.89.0 (2023-01-26)": [[280, "id38"]], "0.88.0 (2022-12-21)": [[280, "id41"]], "0.87.0 (2022-12-14)": [[280, "id44"]], "0.86.0 (2022-11-30)": [[280, "id46"]], "0.85.0 (2022-11-18)": [[280, "id49"]], "0.84.1 (2022-11-13)": [[280, "id52"]], "Bug fixes": [[280, "bug-fixes"], [280, "id59"], [280, "id63"], [280, "id67"], [280, "id70"], [280, "id74"]], "0.84.0 (2022-11-09)": [[280, "id54"]], "0.83.0 (2022-11-01)": [[280, "id57"]], "0.82.0 (2022-10-24)": [[280, "id60"]], "0.81.1 (2022-10-24)": [[280, "id62"]], "0.81.0 (2022-10-21)": [[280, "id64"]], "0.80.0 (2022-10-19)": [[280, "id68"]], "0.79.0 (2022-10-16)": [[280, "id71"]], "0.78.0 (2022-09-20)": [[280, "id75"]], "0.77.0 (2022-09-08)": [[280, "id78"]], "0.76.1 (2022-09-06)": [[280, "id80"]], "0.76.0 (2022-09-05)": [[280, "id82"]], "0.75.0 (2022-08-10)": [[280, "id86"]], "0.74.0 (2022-07-18)": [[280, "id90"]], "0.73.0 (2022-06-21)": [[280, "id93"]], "0.72.0 (2022-06-08)": [[280, "id96"]], "0.71.0 (2022-05-24)": [[280, "id100"]], "0.70.1 (2022-05-17)": [[280, "id104"]], "0.70.0 (2022-05-13)": [[280, "id106"]], "0.69.0 (2022-04-29)": [[280, "id110"]], "0.68.0 (2022-04-27)": [[280, "id114"]], "0.67.0 (2022-04-25)": [[280, "id116"]], "0.66.0 (2022-04-20)": [[280, "id119"]], "0.65.0 (2022-04-14)": [[280, "id121"]], "0.64.0 (2022-04-12)": [[280, "id125"]], "0.63.0 (2022-04-07)": [[280, "id128"]], "0.62.0 (2022-04-04)": [[280, "id131"]], "New feature": [[280, "new-feature"]], "0.61.1 (2022-03-31)": [[280, "id134"]], "0.61.0 (2022-03-29)": [[280, "id136"]], "0.59.0 (2022-03-25)": [[280, "id140"]], "0.58.4 (2022-03-24)": [[280, "id142"]], "0.58.1 (2022-03-22)": [[280, "id144"]], "0.58.0 (2022-03-22)": [[280, "id146"]], "0.57.0 (2022-03-21)": [[280, "id150"]], "0.56.0 (2022-03-17)": [[280, "id152"]], "0.55.0 (2022-03-16)": [[280, "id155"]], "0.54.0 (2022-03-08)": [[280, "id159"]], "0.53.0 (2022-03-04)": [[280, "id162"]], "0.52.0 (2022-02-25)": [[280, "id166"]], "0.51.0 (2022-02-24)": [[280, "id168"]], "0.50.1 (2022-02-16)": [[280, "id171"]], "0.50.0 (2022-02-16)": [[280, "id173"]], "0.49.0 (2022-02-10)": [[280, "id176"]], "0.48.0 (2022-02-04)": [[280, "id180"]], "0.47.0 (2022-01-28)": [[280, "id184"]], "0.46.0 (2022-01-27)": [[280, "id185"]], "0.45.0 (2022-01-21)": [[280, "id186"]], "0.44.0 (2022-01-20)": [[280, "id187"]], "0.43.0 (2022-01-12)": [[280, "id188"]], "0.42.0 (2022-01-11)": [[280, "id189"]], "0.41.0 (2021-12-21)": [[280, "id190"]], "0.40.0 (2021-12-16)": [[280, "id191"]], "0.39.0 (2021-12-15)": [[280, "id192"]], "0.38.0 (2021-12-08)": [[280, "id193"]], "0.37.1 (2021-11-26)": [[280, "id194"]], "0.37.0 (2021-11-24)": [[280, "id195"]], "0.36.0 (2021-11-11)": [[280, "id196"]], "0.35.0 (2021-11-02)": [[280, "id197"]], "0.34.3 (2021-10-28)": [[280, "id198"]], "0.34.2 (2021-10-26)": [[280, "id199"]], "0.34.1 (2021-10-20)": [[280, "id200"]], "0.34.0 (2021-10-14)": [[280, "id201"]], "0.33.0 (2021-10-11)": [[280, "id202"]], "0.32.0 (2021-09-28)": [[280, "id203"]], "0.31.0 (2021-09-21)": [[280, "id204"]], "0.30.0 (2021-09-06)": [[280, "id205"]], "0.29.0 (2021-08-25)": [[280, "id206"]], "0.28.0 (2021-08-24)": [[280, "id207"]], "0.27.0 (2021-08-09)": [[280, "id208"]], "0.26.1 (2021-08-04)": [[280, "id209"]], "0.26.0 (2021-07-13)": [[280, "id210"]], "0.25.1 (2021-07-08)": [[280, "id211"]], "0.25.0 (2021-06-24)": [[280, "id212"]], "0.24.0 (2021-05-25)": [[280, "id213"]], "0.23.4 (2021-05-03)": [[280, "id214"]], "0.23.3 (2021-04-29)": [[280, "id215"]], "0.23.2 (2021-04-28)": [[280, "id216"]], "0.23.1 (2021-04-28)": [[280, "id217"]], "0.23.0 (2021-04-28)": [[280, "id218"]], "0.22.0 (2021-03-29)": [[280, "id219"]], "0.21.0 (2021-03-22)": [[280, "id220"]], "0.20.1 (2021-03-11)": [[280, "id221"]], "0.20.0 (2021-03-11)": [[280, "id222"]], "0.19.0 (2021-03-02)": [[280, "id223"]], "0.18.0 (2021-03-01)": [[280, "id224"]], "0.17.0 (2021-02-15)": [[280, "id225"]], "0.16.0 (2021-02-08)": [[280, "id226"]], "0.15.0 (2021-02-01)": [[280, "id227"]], "0.14.0 (2021-01-25)": [[280, "id228"]], "0.13.0 (2021-01-18)": [[280, "id229"]], "0.12.0 (2020-12-18)": [[280, "id230"]], "0.11.0 (2020-11-20)": [[280, "id231"]], "0.10.0 (2020-11-16)": [[280, "id232"]], "0.9.0 (2020-10-26)": [[280, "id233"]], "0.8.0 (2020-10-08)": [[280, "id234"]], "0.7.0 (2020-09-28)": [[280, "id235"]], "0.6.0 (2020-09-18)": [[280, "id236"]], "0.5.0 (2020-09-04)": [[280, "id237"]], "0.4.0 (2020-07-24)": [[280, "id238"]], "0.3.0 (2020-06-16)": [[280, "id239"]], "0.2.0 (2020-03-27)": [[280, "id240"]], "0.1.0 (2018-07-22)": [[280, "id241"]], "split_common_options": [[273, "split-common-options"]], "Contribute": [[285, "contribute"]], "Set up the development environment": [[285, "set-up-the-development-environment"]], "Supported platforms": [[285, "supported-platforms"]], "Install Python": [[285, "install-python"]], "Install git": [[285, "install-git"]], "Fork and clone the code repository": [[285, "fork-and-clone-the-code-repository"]], "Install tox": [[285, "install-tox"]], "Install graphviz used for building the documentation": [[285, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[285, "using-the-development-environment"]], "Running tox": [[285, "running-tox"]], "Check code formatting": [[285, "check-code-formatting"]], "Run the unit tests": [[285, "run-the-unit-tests"]], "Build and test the documentation": [[285, "build-and-test-the-documentation"]], "Run the integration tests": [[285, "run-the-integration-tests"]], "Build a usable virtual environment": [[285, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[285, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[285, "releasing-pharmpy-and-documentation"]], "Version": [[285, "version"]], "Information for developers": [[285, "information-for-developers"]], "Contributors": [[286, "authors"]], "Development": [[286, "development"]], "Scientific input": [[286, "scientific-input"]], "Funding": [[286, "funding"]], "QA": [[310, "qa"]], "The qa results": [[310, "the-qa-results"]], "Overview": [[310, "overview"]], "Structural bias": [[310, "structural-bias"]], "Fullblock": [[310, "fullblock"]], "Boxcox": [[310, "boxcox"]], "Tdist": [[310, "tdist"]], "Residual error": [[310, "residual-error"]], "Covariate effects": [[310, "covariate-effects"], [293, "covariate-effects"]], "Bootstrap": [[278, "bootstrap"]], "The Bootstrap postprocessing and results": [[278, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[278, "parameter-statistics"]], "OFV statistics": [[278, "ofv-statistics"]], "Covariance matrix": [[278, "covariance-matrix"], [301, "covariance-matrix"]], "Included individuals": [[278, "included-individuals"]], "Datasets in Pharmpy": [[289, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[289, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[289, "update-the-dataset-of-a-model"]], "type": [[289, "type"]], "scale": [[289, "scale"]], "continuous": [[289, "continuous"]], "categories": [[289, "categories"]], "unit": [[289, "unit"]], "drop": [[289, "drop"]], "datatype": [[289, "datatype"]], "descriptor": [[289, "descriptor"]], "datainfo file": [[289, "datainfo-file"]], "Estmethod": [[292, "estmethod"]], "Exhaustive": [[292, "exhaustive"]], "Exhaustive (with update)": [[292, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[292, "exhaustive-only-evaluation"]], "Methods": [[292, "methods"]], "Solvers": [[292, "solvers"]], "The Estmethod results": [[292, "the-estmethod-results"]], "Configuration": [[284, "configuration"]], "The configuration file": [[284, "the-configuration-file"]], "Available configurations": [[284, "available-configurations"]], "pharmpy.plugins.nonmem": [[284, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[284, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[284, "pharmpy-plugins-rxode"]], "Environment variables": [[284, "environment-variables"]], "Model estimation and results": [[301, "model-estimation-and-results"]], "Fitting a model": [[301, "fitting-a-model"]], "Modelfit results": [[301, "modelfit-results"]], "Final OFV": [[301, "final-ofv"]], "Parameter estimates": [[301, "parameter-estimates"], [293, "parameter-estimates"]], "Standard errors of parameter estimates": [[301, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[301, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[301, "correlation-matrix"]], "Precision Matrix": [[301, "precision-matrix"]], "Indiviudal OFV": [[301, "indiviudal-ofv"]], "Predictions": [[301, "predictions"]], "Residuals": [[301, "residuals"]], "Individual estimates": [[301, "individual-estimates"]], "Getting started": [[294, "getting-started"]], "Installation": [[294, "installation"]], "A first example": [[294, "a-first-example"]], "License": [[298, "license"]], "Logo": [[298, "logo"]], "Copyright": [[298, "copyright"]], "BSD 2-clause License": [[298, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[298, "gnu-lesser-general-public-license"]], "Plugins": [[306, "plugins"]], "Overview of a plugin": [[306, "overview-of-a-plugin"]], "Modeling": [[302, "modeling"]], "Basic functions": [[302, "basic-functions"]], "Reading and writing models": [[302, "reading-and-writing-models"]], "Loading example models": [[302, "loading-example-models"]], "Converting models": [[302, "converting-models"]], "Create basic models": [[302, "create-basic-models"]], "Modeling transformations": [[302, "modeling-transformations"]], "Structural model": [[302, "structural-model"]], "Absorption rate": [[302, "absorption-rate"]], "Absorption delay": [[302, "absorption-delay"]], "Elimination": [[302, "elimination"]], "Parameter variability model": [[302, "parameter-variability-model"]], "Adding and removing parameter variability": [[302, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[302, "adding-and-removing-covariance"]], "Eta transformations": [[302, "eta-transformations"]], "Covariates and allometry": [[302, "covariates-and-allometry"]], "Population parameters": [[302, "population-parameters"]], "Error model": [[302, "error-model"]], "BLQ transformations": [[302, "blq-transformations"]], "Examining and modifying dataset": [[302, "examining-and-modifying-dataset"]], "Subjects": [[302, "subjects"]], "Observations": [[302, "observations"]], "Dosing": [[302, "dosing"]], "Extract dosing information": [[302, "extract-dosing-information"]], "Dose grouping": [[302, "dose-grouping"]], "Time after dose": [[302, "time-after-dose"]], "Concentration parameters": [[302, "concentration-parameters"]], "Modelsearch": [[303, "modelsearch"]], "The search space": [[303, "the-search-space"]], "Common behaviours between algorithms": [[303, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[303, "feature-combination-exclusions"]], "Exhaustive search": [[303, "exhaustive-search"]], "Exhaustive stepwise search": [[303, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[303, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[303, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[303, "the-modelsearch-results"]], "Using the NONMEM plugin": [[304, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[304, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[304, "new-parameters-and-random-variables"]], "Pharmpy Community Code of Conduct": [[283, "pharmpy-community-code-of-conduct"]], "pharmpy.modeling Package": [[275, "module-pharmpy.modeling"]], "FREM": [[293, "frem"]], "The FREM postprocessing and results": [[293, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[293, "parameter-covariate-coefficients"]], "Individual covariate effects": [[293, "individual-covariate-effects"]], "Unexplained variability": [[293, "unexplained-variability"]], "OFV": [[293, "ofv"]], "Estimated covariate values": [[293, "estimated-covariate-values"]], "pharmpy.model Package": [[274, "module-pharmpy.model"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "admid (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.admid"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_covs (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_covs"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "admid (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.admid"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[23, "pharmpy.model.ODESystem"]], "parameter (class in pharmpy.model)": [[24, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[25, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[26, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[27, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[27, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[28, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[28, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[29, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[29, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[32, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_bioavailability"]], "add_covariance_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.has_first_order_elimination"]], "has_linear_odes() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_odes"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_random_effect"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.remove_bioavailability"]], "remove_covariance_step() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_initial_estimates"]], "set_lloq_data() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[227, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[228, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[229, "pharmpy.tools.fit"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[230, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[231, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[232, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[233, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[234, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[235, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[236, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[237, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[238, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[239, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[240, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[241, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[242, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[243, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[244, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[245, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[246, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[247, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[248, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[249, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[250, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[251, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[252, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[253, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[254, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[255, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[256, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[257, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[258, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[258, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[259, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[260, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[260, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[260, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[260, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[261, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[261, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[261, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[261, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[261, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[261, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[261, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[262, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[262, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[263, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[263, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[264, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[264, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[264, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[264, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[264, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[265, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[265, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[265, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[265, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[265, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[265, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[266, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[266, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[266, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[266, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[266, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[266, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[266, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[267, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[267, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[267, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[267, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[267, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[267, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[268, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[268, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[268, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[268, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[269, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[270, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[271, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[272, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[273, "pharmpy.workflows.split_common_options"]], "module": [[274, "module-pharmpy.model"], [275, "module-pharmpy.modeling"], [276, "module-pharmpy.tools"], [277, "module-pharmpy.workflows"]], "pharmpy.model": [[274, "module-pharmpy.model"]], "pharmpy.modeling": [[275, "module-pharmpy.modeling"]], "pharmpy.tools": [[276, "module-pharmpy.tools"]], "pharmpy.workflows": [[277, "module-pharmpy.workflows"]], "--algorithm": [[282, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[282, "cmdoption-pharmpy-run-allometry-allometric_variable"], [282, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[282, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[282, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[282, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[282, "cmdoption-pharmpy-run-iivsearch-cutoff"], [282, "cmdoption-pharmpy-run-iovsearch-cutoff"], [282, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[282, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[282, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[282, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[282, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [282, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[282, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[282, "cmdoption-pharmpy-model-add_iov-eta_names"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[282, "cmdoption-pharmpy-model-add_iov-etas"], [282, "cmdoption-pharmpy-model-boxcox-etas"], [282, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [282, "cmdoption-pharmpy-model-john_draper-etas"], [282, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[282, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[282, "cmdoption-pharmpy-data-append-f"], [282, "cmdoption-pharmpy-data-deidentify-f"], [282, "cmdoption-pharmpy-data-filter-f"], [282, "cmdoption-pharmpy-data-write-f"], [282, "cmdoption-pharmpy-model-absorption_rate-f"], [282, "cmdoption-pharmpy-model-add_cov_effect-f"], [282, "cmdoption-pharmpy-model-add_iiv-f"], [282, "cmdoption-pharmpy-model-add_iov-f"], [282, "cmdoption-pharmpy-model-boxcox-f"], [282, "cmdoption-pharmpy-model-create_joint_distribution-f"], [282, "cmdoption-pharmpy-model-elimination_rate-f"], [282, "cmdoption-pharmpy-model-error-f"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [282, "cmdoption-pharmpy-model-john_draper-f"], [282, "cmdoption-pharmpy-model-peripheral_compartments-f"], [282, "cmdoption-pharmpy-model-power_on_ruv-f"], [282, "cmdoption-pharmpy-model-remove_iiv-f"], [282, "cmdoption-pharmpy-model-remove_iov-f"], [282, "cmdoption-pharmpy-model-tdist-f"], [282, "cmdoption-pharmpy-model-transit_compartments-f"], [282, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[282, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[282, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[282, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[282, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[282, "cmdoption-pharmpy-data-append-h"], [282, "cmdoption-pharmpy-data-deidentify-h"], [282, "cmdoption-pharmpy-data-filter-h"], [282, "cmdoption-pharmpy-data-h"], [282, "cmdoption-pharmpy-data-print-h"], [282, "cmdoption-pharmpy-data-resample-h"], [282, "cmdoption-pharmpy-data-write-h"], [282, "cmdoption-pharmpy-h"], [282, "cmdoption-pharmpy-info-h"], [282, "cmdoption-pharmpy-model-absorption_rate-h"], [282, "cmdoption-pharmpy-model-add_cov_effect-h"], [282, "cmdoption-pharmpy-model-add_iiv-h"], [282, "cmdoption-pharmpy-model-add_iov-h"], [282, "cmdoption-pharmpy-model-boxcox-h"], [282, "cmdoption-pharmpy-model-create_joint_distribution-h"], [282, "cmdoption-pharmpy-model-elimination_rate-h"], [282, "cmdoption-pharmpy-model-error-h"], [282, "cmdoption-pharmpy-model-h"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [282, "cmdoption-pharmpy-model-john_draper-h"], [282, "cmdoption-pharmpy-model-peripheral_compartments-h"], [282, "cmdoption-pharmpy-model-power_on_ruv-h"], [282, "cmdoption-pharmpy-model-print-h"], [282, "cmdoption-pharmpy-model-remove_iiv-h"], [282, "cmdoption-pharmpy-model-remove_iov-h"], [282, "cmdoption-pharmpy-model-sample-h"], [282, "cmdoption-pharmpy-model-tdist-h"], [282, "cmdoption-pharmpy-model-transit_compartments-h"], [282, "cmdoption-pharmpy-model-update_inits-h"], [282, "cmdoption-pharmpy-results-bootstrap-h"], [282, "cmdoption-pharmpy-results-cdd-h"], [282, "cmdoption-pharmpy-results-frem-h"], [282, "cmdoption-pharmpy-results-h"], [282, "cmdoption-pharmpy-results-linearize-h"], [282, "cmdoption-pharmpy-results-ofv-h"], [282, "cmdoption-pharmpy-results-print-h"], [282, "cmdoption-pharmpy-results-qa-h"], [282, "cmdoption-pharmpy-results-report-h"], [282, "cmdoption-pharmpy-results-ruvsearch-h"], [282, "cmdoption-pharmpy-results-scm-h"], [282, "cmdoption-pharmpy-results-simeval-h"], [282, "cmdoption-pharmpy-results-summary-h"], [282, "cmdoption-pharmpy-run-allometry-h"], [282, "cmdoption-pharmpy-run-amd-h"], [282, "cmdoption-pharmpy-run-bootstrap-h"], [282, "cmdoption-pharmpy-run-covsearch-h"], [282, "cmdoption-pharmpy-run-estmethod-h"], [282, "cmdoption-pharmpy-run-execute-h"], [282, "cmdoption-pharmpy-run-h"], [282, "cmdoption-pharmpy-run-iivsearch-h"], [282, "cmdoption-pharmpy-run-iovsearch-h"], [282, "cmdoption-pharmpy-run-modelsearch-h"], [282, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[282, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[282, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [282, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[282, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[282, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[282, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[282, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[282, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[282, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[282, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[282, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[282, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[282, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[282, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[282, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[282, "cmdoption-pharmpy-model-add_cov_effect-operation"], [282, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[282, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[282, "cmdoption-pharmpy-data-append-o"], [282, "cmdoption-pharmpy-data-deidentify-o"], [282, "cmdoption-pharmpy-data-filter-o"], [282, "cmdoption-pharmpy-data-write-o"], [282, "cmdoption-pharmpy-model-absorption_rate-o"], [282, "cmdoption-pharmpy-model-add_cov_effect-o"], [282, "cmdoption-pharmpy-model-add_iiv-o"], [282, "cmdoption-pharmpy-model-add_iov-o"], [282, "cmdoption-pharmpy-model-boxcox-o"], [282, "cmdoption-pharmpy-model-create_joint_distribution-o"], [282, "cmdoption-pharmpy-model-elimination_rate-o"], [282, "cmdoption-pharmpy-model-error-o"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [282, "cmdoption-pharmpy-model-john_draper-o"], [282, "cmdoption-pharmpy-model-peripheral_compartments-o"], [282, "cmdoption-pharmpy-model-power_on_ruv-o"], [282, "cmdoption-pharmpy-model-remove_iiv-o"], [282, "cmdoption-pharmpy-model-remove_iov-o"], [282, "cmdoption-pharmpy-model-tdist-o"], [282, "cmdoption-pharmpy-model-transit_compartments-o"], [282, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[282, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[282, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[282, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[282, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[282, "cmdoption-pharmpy-run-allometry-path"], [282, "cmdoption-pharmpy-run-amd-path"], [282, "cmdoption-pharmpy-run-covsearch-path"], [282, "cmdoption-pharmpy-run-estmethod-path"], [282, "cmdoption-pharmpy-run-iivsearch-path"], [282, "cmdoption-pharmpy-run-iovsearch-path"], [282, "cmdoption-pharmpy-run-modelsearch-path"], [282, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[282, "cmdoption-pharmpy-run-iivsearch-rank_type"], [282, "cmdoption-pharmpy-run-iovsearch-rank_type"], [282, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[282, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[282, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[282, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[282, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[282, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[282, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[282, "cmdoption-pharmpy-model-sample-samples"], [282, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[282, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[282, "cmdoption-pharmpy-data-resample-seed"], [282, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[282, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[282, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[282, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[282, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[282, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[282, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[282, "cmdoption-pharmpy-version"]], "-f": [[282, "cmdoption-pharmpy-data-append-f"], [282, "cmdoption-pharmpy-data-deidentify-f"], [282, "cmdoption-pharmpy-data-filter-f"], [282, "cmdoption-pharmpy-data-write-f"], [282, "cmdoption-pharmpy-model-absorption_rate-f"], [282, "cmdoption-pharmpy-model-add_cov_effect-f"], [282, "cmdoption-pharmpy-model-add_iiv-f"], [282, "cmdoption-pharmpy-model-add_iov-f"], [282, "cmdoption-pharmpy-model-boxcox-f"], [282, "cmdoption-pharmpy-model-create_joint_distribution-f"], [282, "cmdoption-pharmpy-model-elimination_rate-f"], [282, "cmdoption-pharmpy-model-error-f"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [282, "cmdoption-pharmpy-model-john_draper-f"], [282, "cmdoption-pharmpy-model-peripheral_compartments-f"], [282, "cmdoption-pharmpy-model-power_on_ruv-f"], [282, "cmdoption-pharmpy-model-remove_iiv-f"], [282, "cmdoption-pharmpy-model-remove_iov-f"], [282, "cmdoption-pharmpy-model-tdist-f"], [282, "cmdoption-pharmpy-model-transit_compartments-f"], [282, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[282, "cmdoption-pharmpy-data-append-h"], [282, "cmdoption-pharmpy-data-deidentify-h"], [282, "cmdoption-pharmpy-data-filter-h"], [282, "cmdoption-pharmpy-data-h"], [282, "cmdoption-pharmpy-data-print-h"], [282, "cmdoption-pharmpy-data-resample-h"], [282, "cmdoption-pharmpy-data-write-h"], [282, "cmdoption-pharmpy-h"], [282, "cmdoption-pharmpy-info-h"], [282, "cmdoption-pharmpy-model-absorption_rate-h"], [282, "cmdoption-pharmpy-model-add_cov_effect-h"], [282, "cmdoption-pharmpy-model-add_iiv-h"], [282, "cmdoption-pharmpy-model-add_iov-h"], [282, "cmdoption-pharmpy-model-boxcox-h"], [282, "cmdoption-pharmpy-model-create_joint_distribution-h"], [282, "cmdoption-pharmpy-model-elimination_rate-h"], [282, "cmdoption-pharmpy-model-error-h"], [282, "cmdoption-pharmpy-model-h"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [282, "cmdoption-pharmpy-model-john_draper-h"], [282, "cmdoption-pharmpy-model-peripheral_compartments-h"], [282, "cmdoption-pharmpy-model-power_on_ruv-h"], [282, "cmdoption-pharmpy-model-print-h"], [282, "cmdoption-pharmpy-model-remove_iiv-h"], [282, "cmdoption-pharmpy-model-remove_iov-h"], [282, "cmdoption-pharmpy-model-sample-h"], [282, "cmdoption-pharmpy-model-tdist-h"], [282, "cmdoption-pharmpy-model-transit_compartments-h"], [282, "cmdoption-pharmpy-model-update_inits-h"], [282, "cmdoption-pharmpy-results-bootstrap-h"], [282, "cmdoption-pharmpy-results-cdd-h"], [282, "cmdoption-pharmpy-results-frem-h"], [282, "cmdoption-pharmpy-results-h"], [282, "cmdoption-pharmpy-results-linearize-h"], [282, "cmdoption-pharmpy-results-ofv-h"], [282, "cmdoption-pharmpy-results-print-h"], [282, "cmdoption-pharmpy-results-qa-h"], [282, "cmdoption-pharmpy-results-report-h"], [282, "cmdoption-pharmpy-results-ruvsearch-h"], [282, "cmdoption-pharmpy-results-scm-h"], [282, "cmdoption-pharmpy-results-simeval-h"], [282, "cmdoption-pharmpy-results-summary-h"], [282, "cmdoption-pharmpy-run-allometry-h"], [282, "cmdoption-pharmpy-run-amd-h"], [282, "cmdoption-pharmpy-run-bootstrap-h"], [282, "cmdoption-pharmpy-run-covsearch-h"], [282, "cmdoption-pharmpy-run-estmethod-h"], [282, "cmdoption-pharmpy-run-execute-h"], [282, "cmdoption-pharmpy-run-h"], [282, "cmdoption-pharmpy-run-iivsearch-h"], [282, "cmdoption-pharmpy-run-iovsearch-h"], [282, "cmdoption-pharmpy-run-modelsearch-h"], [282, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[282, "cmdoption-pharmpy-data-append-o"], [282, "cmdoption-pharmpy-data-deidentify-o"], [282, "cmdoption-pharmpy-data-filter-o"], [282, "cmdoption-pharmpy-data-write-o"], [282, "cmdoption-pharmpy-model-absorption_rate-o"], [282, "cmdoption-pharmpy-model-add_cov_effect-o"], [282, "cmdoption-pharmpy-model-add_iiv-o"], [282, "cmdoption-pharmpy-model-add_iov-o"], [282, "cmdoption-pharmpy-model-boxcox-o"], [282, "cmdoption-pharmpy-model-create_joint_distribution-o"], [282, "cmdoption-pharmpy-model-elimination_rate-o"], [282, "cmdoption-pharmpy-model-error-o"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [282, "cmdoption-pharmpy-model-john_draper-o"], [282, "cmdoption-pharmpy-model-peripheral_compartments-o"], [282, "cmdoption-pharmpy-model-power_on_ruv-o"], [282, "cmdoption-pharmpy-model-remove_iiv-o"], [282, "cmdoption-pharmpy-model-remove_iov-o"], [282, "cmdoption-pharmpy-model-tdist-o"], [282, "cmdoption-pharmpy-model-transit_compartments-o"], [282, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[282, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [282, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [282, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[282, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[282, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[282, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[282, "cmdoption-pharmpy-data-append-arg-expression"], [282, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[282, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[282, "cmdoption-pharmpy-data-append-arg-file"], [282, "cmdoption-pharmpy-data-deidentify-arg-file"], [282, "cmdoption-pharmpy-data-filter-arg-file"], [282, "cmdoption-pharmpy-data-print-arg-file"], [282, "cmdoption-pharmpy-data-resample-arg-file"], [282, "cmdoption-pharmpy-data-write-arg-file"], [282, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [282, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [282, "cmdoption-pharmpy-model-add_iiv-arg-file"], [282, "cmdoption-pharmpy-model-add_iov-arg-file"], [282, "cmdoption-pharmpy-model-boxcox-arg-file"], [282, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [282, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [282, "cmdoption-pharmpy-model-error-arg-file"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [282, "cmdoption-pharmpy-model-john_draper-arg-file"], [282, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [282, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [282, "cmdoption-pharmpy-model-print-arg-file"], [282, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [282, "cmdoption-pharmpy-model-remove_iov-arg-file"], [282, "cmdoption-pharmpy-model-sample-arg-file"], [282, "cmdoption-pharmpy-model-tdist-arg-file"], [282, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [282, "cmdoption-pharmpy-model-update_inits-arg-file"], [282, "cmdoption-pharmpy-results-ofv-arg-file"], [282, "cmdoption-pharmpy-results-print-arg-file"], [282, "cmdoption-pharmpy-results-summary-arg-file"], [282, "cmdoption-pharmpy-run-allometry-arg-file"], [282, "cmdoption-pharmpy-run-bootstrap-arg-file"], [282, "cmdoption-pharmpy-run-covsearch-arg-file"], [282, "cmdoption-pharmpy-run-estmethod-arg-file"], [282, "cmdoption-pharmpy-run-execute-arg-file"], [282, "cmdoption-pharmpy-run-iivsearch-arg-file"], [282, "cmdoption-pharmpy-run-iovsearch-arg-file"], [282, "cmdoption-pharmpy-run-modelsearch-arg-file"], [282, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[282, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[282, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[282, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [282, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[282, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[282, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [282, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[282, "cmdoption-pharmpy-h"], [282, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[282, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[282, "cmdoption-pharmpy-data-append-arg-expression"], [282, "cmdoption-pharmpy-data-append-arg-file"], [282, "cmdoption-pharmpy-data-append-f"], [282, "cmdoption-pharmpy-data-append-h"], [282, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[282, "cmdoption-pharmpy-data-deidentify-arg-file"], [282, "cmdoption-pharmpy-data-deidentify-datecols"], [282, "cmdoption-pharmpy-data-deidentify-f"], [282, "cmdoption-pharmpy-data-deidentify-h"], [282, "cmdoption-pharmpy-data-deidentify-idcol"], [282, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[282, "cmdoption-pharmpy-data-filter-arg-expressions"], [282, "cmdoption-pharmpy-data-filter-arg-file"], [282, "cmdoption-pharmpy-data-filter-f"], [282, "cmdoption-pharmpy-data-filter-h"], [282, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[282, "cmdoption-pharmpy-data-print-arg-file"], [282, "cmdoption-pharmpy-data-print-columns"], [282, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[282, "cmdoption-pharmpy-data-resample-arg-file"], [282, "cmdoption-pharmpy-data-resample-group"], [282, "cmdoption-pharmpy-data-resample-h"], [282, "cmdoption-pharmpy-data-resample-replace"], [282, "cmdoption-pharmpy-data-resample-resamples"], [282, "cmdoption-pharmpy-data-resample-sample_size"], [282, "cmdoption-pharmpy-data-resample-seed"], [282, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[282, "cmdoption-pharmpy-data-write-arg-file"], [282, "cmdoption-pharmpy-data-write-f"], [282, "cmdoption-pharmpy-data-write-h"], [282, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[282, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[282, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[282, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [282, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [282, "cmdoption-pharmpy-model-absorption_rate-f"], [282, "cmdoption-pharmpy-model-absorption_rate-h"], [282, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[282, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [282, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [282, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [282, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [282, "cmdoption-pharmpy-model-add_cov_effect-f"], [282, "cmdoption-pharmpy-model-add_cov_effect-h"], [282, "cmdoption-pharmpy-model-add_cov_effect-o"], [282, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[282, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [282, "cmdoption-pharmpy-model-add_iiv-arg-file"], [282, "cmdoption-pharmpy-model-add_iiv-arg-param"], [282, "cmdoption-pharmpy-model-add_iiv-eta_name"], [282, "cmdoption-pharmpy-model-add_iiv-f"], [282, "cmdoption-pharmpy-model-add_iiv-h"], [282, "cmdoption-pharmpy-model-add_iiv-o"], [282, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[282, "cmdoption-pharmpy-model-add_iov-arg-file"], [282, "cmdoption-pharmpy-model-add_iov-arg-occ"], [282, "cmdoption-pharmpy-model-add_iov-eta_names"], [282, "cmdoption-pharmpy-model-add_iov-etas"], [282, "cmdoption-pharmpy-model-add_iov-f"], [282, "cmdoption-pharmpy-model-add_iov-h"], [282, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[282, "cmdoption-pharmpy-model-boxcox-arg-file"], [282, "cmdoption-pharmpy-model-boxcox-etas"], [282, "cmdoption-pharmpy-model-boxcox-f"], [282, "cmdoption-pharmpy-model-boxcox-h"], [282, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[282, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [282, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [282, "cmdoption-pharmpy-model-create_joint_distribution-f"], [282, "cmdoption-pharmpy-model-create_joint_distribution-h"], [282, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[282, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [282, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [282, "cmdoption-pharmpy-model-elimination_rate-f"], [282, "cmdoption-pharmpy-model-elimination_rate-h"], [282, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[282, "cmdoption-pharmpy-model-error-arg-error_type"], [282, "cmdoption-pharmpy-model-error-arg-file"], [282, "cmdoption-pharmpy-model-error-f"], [282, "cmdoption-pharmpy-model-error-h"], [282, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[282, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [282, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[282, "cmdoption-pharmpy-model-john_draper-arg-file"], [282, "cmdoption-pharmpy-model-john_draper-etas"], [282, "cmdoption-pharmpy-model-john_draper-f"], [282, "cmdoption-pharmpy-model-john_draper-h"], [282, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[282, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [282, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [282, "cmdoption-pharmpy-model-peripheral_compartments-f"], [282, "cmdoption-pharmpy-model-peripheral_compartments-h"], [282, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[282, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [282, "cmdoption-pharmpy-model-power_on_ruv-eps"], [282, "cmdoption-pharmpy-model-power_on_ruv-f"], [282, "cmdoption-pharmpy-model-power_on_ruv-h"], [282, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[282, "cmdoption-pharmpy-model-print-arg-file"], [282, "cmdoption-pharmpy-model-print-explicit-odes"], [282, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[282, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [282, "cmdoption-pharmpy-model-remove_iiv-f"], [282, "cmdoption-pharmpy-model-remove_iiv-h"], [282, "cmdoption-pharmpy-model-remove_iiv-o"], [282, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[282, "cmdoption-pharmpy-model-remove_iov-arg-file"], [282, "cmdoption-pharmpy-model-remove_iov-f"], [282, "cmdoption-pharmpy-model-remove_iov-h"], [282, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[282, "cmdoption-pharmpy-model-sample-arg-file"], [282, "cmdoption-pharmpy-model-sample-h"], [282, "cmdoption-pharmpy-model-sample-samples"], [282, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[282, "cmdoption-pharmpy-model-tdist-arg-file"], [282, "cmdoption-pharmpy-model-tdist-etas"], [282, "cmdoption-pharmpy-model-tdist-f"], [282, "cmdoption-pharmpy-model-tdist-h"], [282, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[282, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [282, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [282, "cmdoption-pharmpy-model-transit_compartments-f"], [282, "cmdoption-pharmpy-model-transit_compartments-h"], [282, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[282, "cmdoption-pharmpy-model-update_inits-arg-file"], [282, "cmdoption-pharmpy-model-update_inits-f"], [282, "cmdoption-pharmpy-model-update_inits-h"], [282, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[282, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[282, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [282, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[282, "cmdoption-pharmpy-results-cdd-arg-psn"], [282, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[282, "cmdoption-pharmpy-results-frem-arg-psn"], [282, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [282, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [282, "cmdoption-pharmpy-results-frem-h"], [282, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[282, "cmdoption-pharmpy-results-linearize-arg-psn"], [282, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[282, "cmdoption-pharmpy-results-ofv-arg-file"], [282, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[282, "cmdoption-pharmpy-results-print-arg-file"], [282, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[282, "cmdoption-pharmpy-results-qa-arg-psn"], [282, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[282, "cmdoption-pharmpy-results-report-arg-psn"], [282, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[282, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [282, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[282, "cmdoption-pharmpy-results-scm-arg-psn"], [282, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[282, "cmdoption-pharmpy-results-simeval-arg-psn"], [282, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[282, "cmdoption-pharmpy-results-summary-arg-file"], [282, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[282, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[282, "cmdoption-pharmpy-run-allometry-allometric_variable"], [282, "cmdoption-pharmpy-run-allometry-arg-file"], [282, "cmdoption-pharmpy-run-allometry-h"], [282, "cmdoption-pharmpy-run-allometry-initials"], [282, "cmdoption-pharmpy-run-allometry-lower_bounds"], [282, "cmdoption-pharmpy-run-allometry-non_fixed"], [282, "cmdoption-pharmpy-run-allometry-parameters"], [282, "cmdoption-pharmpy-run-allometry-path"], [282, "cmdoption-pharmpy-run-allometry-reference_value"], [282, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[282, "cmdoption-pharmpy-run-amd-allometric_variable"], [282, "cmdoption-pharmpy-run-amd-arg-input_path"], [282, "cmdoption-pharmpy-run-amd-cl_init"], [282, "cmdoption-pharmpy-run-amd-h"], [282, "cmdoption-pharmpy-run-amd-lloq_limit"], [282, "cmdoption-pharmpy-run-amd-lloq_method"], [282, "cmdoption-pharmpy-run-amd-mat_init"], [282, "cmdoption-pharmpy-run-amd-modeltype"], [282, "cmdoption-pharmpy-run-amd-occasion"], [282, "cmdoption-pharmpy-run-amd-order"], [282, "cmdoption-pharmpy-run-amd-path"], [282, "cmdoption-pharmpy-run-amd-resume"], [282, "cmdoption-pharmpy-run-amd-search_space"], [282, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[282, "cmdoption-pharmpy-run-bootstrap-arg-file"], [282, "cmdoption-pharmpy-run-bootstrap-h"], [282, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[282, "cmdoption-pharmpy-run-covsearch-algorithm"], [282, "cmdoption-pharmpy-run-covsearch-arg-file"], [282, "cmdoption-pharmpy-run-covsearch-effects"], [282, "cmdoption-pharmpy-run-covsearch-h"], [282, "cmdoption-pharmpy-run-covsearch-max_steps"], [282, "cmdoption-pharmpy-run-covsearch-p_backward"], [282, "cmdoption-pharmpy-run-covsearch-p_forward"], [282, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[282, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [282, "cmdoption-pharmpy-run-estmethod-arg-file"], [282, "cmdoption-pharmpy-run-estmethod-h"], [282, "cmdoption-pharmpy-run-estmethod-methods"], [282, "cmdoption-pharmpy-run-estmethod-path"], [282, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[282, "cmdoption-pharmpy-run-execute-arg-file"], [282, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[282, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [282, "cmdoption-pharmpy-run-iivsearch-arg-file"], [282, "cmdoption-pharmpy-run-iivsearch-cutoff"], [282, "cmdoption-pharmpy-run-iivsearch-h"], [282, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [282, "cmdoption-pharmpy-run-iivsearch-path"], [282, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[282, "cmdoption-pharmpy-run-iovsearch-arg-file"], [282, "cmdoption-pharmpy-run-iovsearch-column"], [282, "cmdoption-pharmpy-run-iovsearch-cutoff"], [282, "cmdoption-pharmpy-run-iovsearch-distribution"], [282, "cmdoption-pharmpy-run-iovsearch-h"], [282, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [282, "cmdoption-pharmpy-run-iovsearch-path"], [282, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[282, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [282, "cmdoption-pharmpy-run-modelsearch-arg-file"], [282, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [282, "cmdoption-pharmpy-run-modelsearch-cutoff"], [282, "cmdoption-pharmpy-run-modelsearch-h"], [282, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [282, "cmdoption-pharmpy-run-modelsearch-path"], [282, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[282, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [282, "cmdoption-pharmpy-run-ruvsearch-groups"], [282, "cmdoption-pharmpy-run-ruvsearch-h"], [282, "cmdoption-pharmpy-run-ruvsearch-p_value"], [282, "cmdoption-pharmpy-run-ruvsearch-path"], [282, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[282, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [282, "cmdoption-pharmpy-results-cdd-arg-psn"], [282, "cmdoption-pharmpy-results-frem-arg-psn"], [282, "cmdoption-pharmpy-results-linearize-arg-psn"], [282, "cmdoption-pharmpy-results-qa-arg-psn"], [282, "cmdoption-pharmpy-results-report-arg-psn"], [282, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [282, "cmdoption-pharmpy-results-scm-arg-psn"], [282, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[282, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [282, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})