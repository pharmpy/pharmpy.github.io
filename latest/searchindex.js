Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "amd_drug_metabolite", "amd_pk", "amd_pkpd", "amd_tmdd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.SimulationStep", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_cmt", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_predictions", "api/pharmpy.modeling.add_residuals", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bin_observations", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_central_volume_and_clearance", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_covariate_effects", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_dv_vs_pred", "api/pharmpy.modeling.plot_eta_distributions", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_predictions", "api/pharmpy.modeling.remove_residuals", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.replace_non_random_rvs", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_baseline_effect", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dataset", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_simulation", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.vpc_plot", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.is_strictness_fulfilled", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_retries", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_simulation", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.ModelEntry", "api/pharmpy.workflows.ModelfitResults", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Results", "api/pharmpy.workflows.SimulationResults", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "common_features", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "drug_metabolite", "estmethod", "frem", "general", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "mfl", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "pkpd", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "retries", "ruvsearch", "scm", "simeval", "strictness", "structsearch", "tmdd", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "amd_drug_metabolite.rst", "amd_pk.rst", "amd_pkpd.rst", "amd_tmdd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.SimulationStep.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_cmt.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_predictions.rst", "api/pharmpy.modeling.add_residuals.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bin_observations.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_central_volume_and_clearance.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_covariate_effects.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_dv_vs_pred.rst", "api/pharmpy.modeling.plot_eta_distributions.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_predictions.rst", "api/pharmpy.modeling.remove_residuals.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.replace_non_random_rvs.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_baseline_effect.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dataset.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_simulation.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.vpc_plot.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.is_strictness_fulfilled.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_retries.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_simulation.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.ModelEntry.rst", "api/pharmpy.workflows.ModelfitResults.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Results.rst", "api/pharmpy.workflows.SimulationResults.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "common_features.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "drug_metabolite.rst", "estmethod.rst", "frem.rst", "general.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "mfl.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "pkpd.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "retries.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "strictness.rst", "structsearch.rst", "tmdd.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "AMD - Drug metabolite", "AMD - PK", "AMD - PKPD", "AMD - TMDD", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "SimulationStep", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_cmt", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_predictions", "add_residuals", "add_time_after_dose", "append_estimation_step_options", "bin_observations", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_central_volume_and_clearance", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_covariate_effects", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_abs_cwres_vs_ipred", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_dv_vs_pred", "plot_eta_distributions", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_predictions", "remove_residuals", "remove_unused_parameters_and_rvs", "rename_symbols", "replace_non_random_rvs", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_baseline_effect", "set_combined_error_model", "set_covariates", "set_dataset", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_simulation", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "vpc_plot", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "is_strictness_fulfilled", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_retries", "run_ruvsearch", "run_simulation", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "ModelEntry", "ModelfitResults", "NullModelDatabase", "NullToolDatabase", "Results", "SimulationResults", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "Command line interface", "Pharmpy Community Code of Conduct", "Common features", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Dataset", "Design principles", "Documentation for developers", "Drug metabolite", "Estmethod", "FREM", "General", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "Model feature language (MFL)", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "PKPD", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "Retries", "ruvsearch", "scm", "Simeval", "Strictness", "Structsearch", "TMDD", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 19, 22, 27, 28, 29, 32, 34, 39, 66, 67, 81, 86, 90, 91, 92, 93, 95, 96, 97, 98, 105, 109, 117, 120, 126, 127, 128, 131, 137, 141, 148, 152, 153, 161, 185, 197, 202, 204, 226, 239, 241, 245, 252, 280, 288, 292, 296, 298, 299, 300, 317, 318, 320, 321, 322, 323, 324, 326, 328, 329, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 358, 359, 360, 362, 363], "section": [0, 3, 4, 5, 6, 322, 323, 326, 339, 342, 353, 361], "i": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 18, 22, 27, 28, 29, 32, 34, 36, 37, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 59, 61, 68, 69, 78, 80, 81, 82, 85, 86, 88, 90, 92, 93, 95, 96, 97, 105, 106, 109, 112, 116, 117, 119, 121, 125, 126, 127, 128, 143, 144, 145, 150, 151, 156, 162, 163, 165, 168, 169, 187, 188, 192, 198, 199, 200, 202, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 220, 221, 224, 225, 226, 228, 230, 231, 232, 235, 236, 237, 240, 241, 242, 243, 244, 250, 252, 254, 255, 256, 260, 261, 263, 265, 267, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 290, 292, 296, 297, 299, 300, 301, 307, 316, 317, 318, 320, 321, 322, 323, 324, 326, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 363], "document": [0, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 265, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 318, 322, 336, 339, 344, 349, 350, 355, 361], "The": [0, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 18, 22, 27, 28, 29, 32, 37, 40, 44, 46, 48, 51, 58, 69, 77, 83, 85, 88, 92, 93, 94, 95, 96, 97, 113, 119, 136, 141, 144, 145, 156, 157, 159, 180, 198, 202, 204, 215, 218, 226, 237, 241, 254, 257, 260, 270, 274, 276, 277, 282, 283, 288, 298, 318, 320, 321, 322, 324, 325, 326, 328, 335, 338, 339, 341, 343, 344, 346, 347, 349, 350, 358, 360, 361, 362, 363], "inform": [0, 1, 2, 5, 6, 10, 12, 141, 241, 254, 274, 318, 320, 322, 326, 328, 329, 331, 332, 334, 336, 337, 338, 339, 342, 345, 347, 350, 354, 355, 356, 359, 360, 362], "intend": [0, 322, 339, 342], "non": [0, 28, 80, 85, 94, 109, 240, 318, 328, 329, 333, 339, 341, 342, 344, 350, 358], "hard": [0, 350], "find": [0, 2, 12, 32, 59, 100, 101, 119, 141, 197, 272, 290, 318, 337, 339, 354, 359, 360, 362, 363], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 26, 27, 28, 29, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 301, 324, 326, 328, 331, 332, 335, 336, 338, 339, 342, 343, 344, 345, 347, 354, 355, 359, 360], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 359, 360, 362], "develop": [0, 3, 4, 5, 6, 274, 318, 339, 349, 350, 361, 363], "remov": [0, 2, 13, 29, 32, 90, 126, 127, 128, 165, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 215, 219, 233, 246, 248, 250, 274, 317, 318, 320, 326, 329, 336, 338, 339, 346], "row": [0, 2, 28, 92, 93, 99, 106, 110, 112, 165, 199, 200, 206, 227, 241, 289, 316, 318, 320, 326, 328, 333, 343, 344, 354, 356], "split": [0, 2, 85, 240, 311, 318, 320, 342, 361], "drop": [0, 10, 22, 90, 91, 247, 318, 350, 356], "column": [0, 2, 3, 4, 5, 6, 10, 12, 14, 22, 28, 34, 36, 39, 46, 56, 69, 88, 90, 91, 92, 93, 94, 98, 99, 105, 109, 110, 112, 117, 165, 169, 175, 179, 190, 198, 199, 205, 206, 209, 218, 227, 230, 241, 245, 247, 254, 263, 264, 265, 274, 279, 288, 289, 316, 318, 320, 322, 326, 328, 333, 338, 342, 343, 344, 354, 356], "error": [0, 2, 3, 5, 6, 15, 23, 24, 27, 29, 32, 62, 63, 64, 65, 69, 72, 73, 74, 75, 76, 139, 144, 145, 156, 159, 178, 185, 202, 204, 225, 226, 230, 234, 241, 253, 283, 287, 290, 295, 298, 316, 318, 326, 332, 336, 338, 345, 346, 354, 355, 356, 358, 361], "handl": [0, 2, 7, 98, 239, 241, 318, 328, 329, 333, 350], "valid": [0, 2, 29, 116, 201, 274, 318, 336, 339], "some": [0, 2, 3, 4, 5, 6, 12, 14, 72, 85, 185, 197, 202, 241, 294, 316, 318, 320, 322, 324, 326, 328, 339, 340, 344, 345, 349, 350, 355, 361], "rule": [0, 78, 339], "These": [0, 2, 3, 4, 5, 6, 322, 324, 329, 333, 339, 340, 344, 349, 350], "were": [0, 29, 32, 287, 316, 317, 318, 322, 328, 332, 333, 339, 343, 345, 363], "test": [0, 2, 3, 4, 6, 61, 146, 163, 276, 277, 279, 281, 283, 285, 318, 320, 325, 326, 331, 332, 335, 338, 341, 343, 345, 347, 350, 355, 359], "7": [0, 2, 40, 58, 62, 64, 65, 70, 74, 75, 93, 99, 106, 112, 128, 132, 165, 206, 227, 265, 316, 317, 326, 328, 333, 336, 338, 339, 340, 343, 344, 347, 351, 353, 355, 356, 357, 360], "4": [0, 1, 2, 3, 4, 5, 6, 10, 58, 62, 64, 65, 70, 74, 75, 92, 93, 94, 95, 96, 97, 99, 106, 110, 112, 114, 128, 165, 170, 171, 172, 173, 175, 206, 227, 244, 254, 265, 283, 290, 316, 317, 326, 327, 328, 332, 333, 336, 338, 339, 340, 342, 343, 344, 345, 347, 351, 353, 354, 355, 356, 357, 358, 360], "3": [0, 2, 3, 4, 6, 10, 32, 62, 63, 64, 65, 70, 73, 74, 75, 76, 79, 92, 93, 94, 95, 96, 97, 99, 106, 110, 112, 114, 115, 118, 128, 132, 165, 175, 178, 192, 199, 200, 201, 206, 227, 232, 241, 242, 243, 244, 254, 263, 264, 265, 283, 289, 316, 317, 326, 327, 328, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 353, 354, 355, 356, 357, 360, 363], "delimet": 0, "between": [0, 12, 13, 29, 36, 85, 105, 241, 277, 288, 298, 307, 316, 317, 318, 320, 332, 333, 338, 339, 346, 350, 353, 355], "comma": [0, 320, 341], "space": [0, 77, 274, 281, 285, 318, 320, 322, 341, 354, 361], "tab": [0, 178, 318, 344, 348], "befor": [0, 6, 32, 200, 201, 251, 318, 320, 326, 340, 354], "after": [0, 10, 32, 126, 127, 128, 230, 272, 287, 290, 294, 317, 318, 320, 327, 328, 333, 336, 339, 340, 342, 345, 350, 351, 353, 356, 357, 363], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 18, 28, 29, 32, 41, 42, 43, 46, 52, 69, 83, 85, 88, 109, 110, 125, 144, 145, 156, 166, 187, 188, 190, 195, 197, 201, 203, 204, 207, 210, 211, 225, 231, 240, 241, 245, 252, 261, 262, 267, 274, 276, 280, 292, 294, 297, 316, 318, 320, 321, 322, 324, 326, 328, 329, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 354, 356, 358, 359, 360, 361, 363], "give": [0, 28, 119, 125, 168, 201, 225, 292, 296, 299, 316, 318, 320, 333, 338, 339, 342, 354, 356], "sic": 0, "begin": [0, 2, 333, 342, 344], "end": [0, 42, 59, 322, 333, 339, 342, 344], "insert": [0, 306, 318], "each": [0, 2, 10, 12, 29, 37, 39, 40, 68, 69, 70, 92, 93, 94, 95, 96, 97, 106, 112, 114, 128, 167, 175, 176, 190, 198, 201, 212, 214, 225, 227, 294, 298, 316, 317, 318, 320, 322, 323, 326, 328, 329, 331, 332, 333, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 356, 357, 360, 363], "can": [0, 1, 2, 3, 4, 5, 6, 10, 14, 22, 28, 29, 32, 38, 39, 44, 61, 69, 77, 86, 94, 141, 198, 239, 241, 254, 260, 272, 277, 280, 294, 297, 299, 300, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 355, 358, 359, 360, 361, 362, 363], "onli": [0, 2, 3, 4, 5, 6, 7, 12, 14, 18, 29, 40, 66, 67, 78, 81, 90, 92, 93, 95, 96, 97, 99, 116, 119, 120, 131, 137, 144, 145, 156, 167, 198, 202, 204, 212, 214, 225, 226, 227, 230, 231, 239, 241, 251, 267, 280, 283, 285, 290, 297, 307, 318, 320, 321, 322, 326, 336, 338, 339, 341, 342, 345, 347, 349, 354, 359, 360, 361], "numer": [0, 10, 33, 92, 93, 95, 96, 316, 318, 328, 350, 358], "e": [0, 2, 6, 10, 18, 22, 29, 41, 43, 54, 55, 61, 81, 87, 126, 127, 128, 168, 188, 203, 207, 208, 231, 316, 318, 324, 328, 332, 333, 336, 338, 339, 341, 342, 344, 345, 346, 347, 350, 355, 358, 359, 360], "other": [0, 2, 3, 4, 5, 6, 11, 13, 22, 29, 32, 48, 82, 176, 280, 306, 311, 316, 318, 321, 324, 329, 336, 339, 350], "charact": [0, 14, 328], "than": [0, 3, 4, 5, 6, 27, 28, 318, 336, 339, 345, 358], "ee": 0, "0123456789": 0, "allow": [0, 2, 6, 10, 18, 29, 40, 231, 267, 274, 282, 292, 293, 296, 299, 310, 318, 320, 322, 326, 339, 341, 342, 345, 350, 354, 358, 359, 360, 361], "except": [0, 3, 4, 15, 16, 23, 24, 25, 43, 69, 198, 241, 318, 339], "ii": [0, 10], "datx": [0, 318], "fortran": 0, "short": [0, 324, 339], "form": [0, 29, 198, 318, 339], "exponenti": [0, 40, 43, 52, 214, 326, 333], "notat": 0, "2": [0, 1, 2, 3, 4, 5, 6, 10, 22, 32, 37, 40, 42, 47, 51, 53, 57, 60, 61, 62, 63, 64, 65, 70, 73, 74, 75, 76, 80, 92, 93, 94, 95, 96, 97, 99, 106, 110, 112, 114, 118, 128, 132, 165, 175, 178, 192, 199, 200, 201, 202, 204, 206, 212, 216, 220, 221, 224, 226, 227, 228, 231, 232, 235, 241, 243, 244, 254, 265, 273, 283, 288, 316, 317, 320, 324, 326, 327, 328, 331, 332, 333, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 353, 354, 355, 356, 357, 358, 360], "1": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 18, 20, 21, 22, 26, 28, 29, 30, 32, 37, 38, 40, 41, 42, 43, 44, 48, 51, 53, 54, 55, 61, 62, 63, 64, 65, 70, 71, 73, 74, 75, 76, 81, 83, 88, 92, 93, 94, 95, 96, 97, 99, 106, 110, 112, 114, 115, 116, 118, 128, 132, 140, 143, 165, 166, 167, 168, 169, 175, 178, 182, 192, 193, 194, 198, 199, 200, 201, 206, 207, 211, 212, 213, 214, 217, 220, 221, 224, 225, 227, 228, 229, 230, 231, 232, 235, 236, 239, 241, 242, 243, 244, 252, 254, 265, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 288, 316, 317, 320, 322, 323, 324, 326, 327, 328, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 363], "mean": [0, 2, 3, 4, 5, 6, 17, 21, 22, 26, 69, 72, 83, 168, 199, 200, 231, 274, 292, 296, 316, 317, 318, 320, 322, 333, 336, 339, 342, 343, 344, 345, 347, 350, 353, 357, 358, 359, 360], "2e": 0, "2e1": 0, "A": [0, 2, 3, 4, 5, 6, 9, 12, 19, 21, 22, 27, 28, 29, 32, 34, 58, 69, 71, 72, 77, 88, 89, 94, 100, 101, 119, 125, 133, 134, 135, 136, 138, 139, 140, 141, 169, 175, 180, 197, 198, 199, 200, 202, 204, 216, 219, 226, 230, 233, 260, 261, 271, 280, 283, 287, 290, 292, 296, 297, 298, 299, 307, 316, 317, 319, 320, 324, 325, 328, 329, 331, 336, 338, 339, 340, 341, 342, 344, 345, 349, 350, 354, 355, 356, 358, 361], "d": [0, 5, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 89, 293, 295, 301, 311, 339, 344, 360], "instead": [0, 2, 13, 51, 78, 94, 125, 224, 241, 282, 292, 317, 318, 320, 328, 329, 331, 332, 333, 339, 350, 354], "lone": 0, "an": [0, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 19, 20, 22, 28, 29, 32, 35, 36, 37, 39, 41, 44, 45, 46, 57, 58, 61, 77, 105, 109, 114, 117, 144, 145, 146, 150, 151, 154, 156, 159, 163, 166, 168, 184, 198, 202, 207, 215, 241, 243, 257, 260, 262, 263, 264, 265, 287, 288, 290, 293, 295, 318, 320, 322, 323, 324, 326, 328, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 350, 353, 354, 356, 357, 358, 359, 360, 361, 363], "0": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 21, 22, 26, 27, 28, 29, 32, 37, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 57, 58, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 85, 86, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 106, 110, 112, 114, 115, 121, 132, 133, 139, 140, 142, 143, 165, 166, 167, 168, 178, 182, 186, 190, 191, 192, 197, 199, 200, 201, 204, 206, 207, 208, 210, 211, 214, 215, 216, 218, 219, 225, 226, 227, 229, 230, 233, 240, 241, 242, 243, 246, 249, 252, 254, 262, 264, 265, 273, 274, 276, 278, 279, 281, 282, 283, 285, 289, 290, 298, 301, 302, 316, 317, 320, 322, 324, 326, 328, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 363], "dot": 0, "most": [0, 10, 40, 239, 320, 329, 339, 353, 354], "24": [0, 2, 70, 99, 106, 112, 115, 128, 132, 165, 206, 227, 265, 316, 317, 326, 328, 332, 336, 338, 340, 343, 344, 345, 353, 357], "long": [0, 318, 339, 350], "count": [0, 114, 241, 289, 296, 318, 345], "delimit": 0, "wa": [0, 2, 288, 298, 301, 316, 318, 325, 336, 339, 340, 355, 356, 358], "eaten": 0, "empti": [0, 2, 22, 29, 287, 323, 354], "blankok": 0, "set": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 18, 20, 22, 29, 32, 36, 38, 39, 47, 51, 59, 61, 78, 85, 90, 102, 103, 104, 105, 121, 132, 192, 200, 202, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 246, 248, 249, 251, 252, 267, 301, 318, 320, 321, 323, 328, 331, 332, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 359, 360, 361, 363], "As": [0, 2, 3, 4, 5, 6, 29, 321, 322, 341, 344, 345, 346, 354], "contain": [0, 2, 6, 7, 29, 58, 88, 94, 170, 171, 172, 173, 254, 261, 263, 264, 265, 316, 317, 320, 322, 326, 327, 328, 329, 331, 332, 336, 338, 339, 342, 343, 345, 347, 351, 353, 354, 355, 356, 357, 359, 360], "drope": 0, "input": [0, 5, 11, 12, 13, 14, 29, 32, 40, 41, 43, 46, 75, 76, 86, 91, 142, 146, 147, 157, 178, 182, 200, 214, 237, 260, 261, 274, 282, 288, 289, 303, 306, 318, 320, 326, 328, 331, 332, 336, 338, 344, 345, 346, 347, 350, 354, 355, 359, 360, 361], "ani": [0, 2, 3, 4, 5, 6, 10, 13, 22, 57, 69, 80, 119, 195, 272, 277, 289, 303, 307, 322, 324, 326, 328, 335, 336, 338, 339, 341, 342, 343, 344, 346, 350, 354, 360, 361, 363], "limit": [0, 2, 10, 79, 190, 218, 225, 241, 274, 318, 320, 338, 339, 348, 354], "length": [0, 58, 94, 95, 96, 97, 114, 115, 132, 318, 344], "If": [0, 2, 3, 4, 5, 6, 12, 14, 22, 32, 37, 38, 40, 48, 51, 59, 61, 69, 84, 85, 86, 94, 105, 109, 114, 116, 117, 155, 187, 188, 192, 198, 200, 212, 214, 215, 224, 225, 231, 237, 240, 241, 242, 243, 244, 245, 252, 267, 274, 278, 281, 290, 306, 316, 320, 322, 324, 326, 328, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 354, 358, 360, 361, 363], "ha": [0, 2, 6, 12, 22, 29, 44, 85, 94, 106, 112, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 254, 316, 318, 320, 321, 322, 324, 326, 328, 329, 331, 332, 336, 338, 339, 342, 344, 345, 347, 352, 354, 355, 356, 358, 360, 363], "more": [0, 2, 5, 6, 12, 28, 241, 254, 273, 276, 278, 279, 281, 283, 285, 318, 320, 322, 326, 331, 332, 335, 336, 337, 339, 342, 344, 345, 347, 350, 353, 359, 362], "extra": [0, 6, 22, 285, 318, 359, 360], "consid": [0, 109, 278, 279, 281, 318, 326, 329, 332, 336, 338, 339, 345, 355], "start": [0, 2, 3, 4, 5, 6, 12, 42, 57, 114, 169, 186, 198, 278, 285, 318, 320, 322, 324, 326, 331, 332, 333, 338, 339, 342, 343, 344, 345, 347, 354, 355, 356, 359, 360, 361, 363], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 26, 27, 28, 29, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 299, 301, 302, 307, 316, 318, 320, 321, 322, 324, 326, 329, 331, 332, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 350, 354, 355, 357, 358, 359, 360, 361, 362, 363], "been": [0, 2, 3, 4, 5, 6, 10, 162, 321, 322, 326, 328, 339, 344, 354, 363], "provid": [0, 29, 200, 225, 320, 321, 325, 326, 328, 336, 338, 339, 345, 363], "default": [0, 1, 3, 4, 5, 6, 10, 11, 13, 18, 22, 27, 29, 34, 37, 40, 42, 43, 44, 50, 52, 59, 61, 68, 85, 86, 90, 116, 119, 121, 125, 134, 136, 143, 144, 145, 156, 157, 187, 188, 198, 199, 200, 202, 204, 210, 211, 214, 215, 225, 226, 230, 231, 240, 242, 243, 244, 254, 255, 256, 259, 260, 267, 273, 274, 276, 278, 279, 281, 282, 290, 292, 296, 299, 310, 315, 318, 320, 323, 326, 331, 336, 338, 341, 342, 344, 345, 346, 347, 348, 354, 355, 358, 359, 360, 363], "where": [0, 2, 37, 51, 241, 267, 272, 316, 317, 318, 321, 322, 323, 326, 328, 332, 333, 338, 339, 344, 345, 346, 350, 354, 358, 363], "rexex": 0, "": [0, 3, 4, 5, 6, 12, 14, 18, 77, 113, 182, 318, 320, 326, 328, 331, 333, 339, 346, 351, 354], "za": 0, "z": [0, 37], "either": [0, 2, 43, 44, 88, 116, 274, 281, 282, 336, 339, 341, 342, 344, 347, 358, 359, 363], "surround": 0, "two": [0, 2, 3, 5, 12, 13, 29, 32, 88, 176, 316, 318, 319, 320, 322, 326, 331, 339, 341, 350, 355, 360, 361], "By": [0, 18, 22, 29, 119, 144, 145, 156, 338, 339, 342], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 3, 4, 5, 6, 13, 18, 29, 32, 59, 77, 169, 184, 199, 231, 241, 257, 278, 279, 280, 281, 282, 283, 296, 316, 317, 318, 320, 322, 323, 326, 331, 332, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 354, 355, 356, 359, 360, 363], "interpret": [0, 2, 318, 339, 363], "us": [0, 1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 17, 18, 19, 22, 28, 29, 32, 36, 37, 46, 49, 58, 61, 69, 77, 85, 86, 88, 92, 93, 94, 95, 96, 97, 105, 113, 119, 125, 132, 143, 168, 169, 195, 198, 199, 200, 201, 202, 204, 212, 214, 223, 225, 226, 234, 241, 245, 251, 253, 254, 255, 259, 263, 264, 265, 267, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 292, 293, 294, 296, 299, 300, 301, 304, 306, 310, 316, 317, 318, 320, 322, 323, 326, 328, 329, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 356, 360, 362], "chang": [0, 13, 22, 28, 29, 42, 88, 210, 212, 216, 217, 219, 225, 228, 229, 233, 235, 241, 249, 320, 324, 326, 339, 342, 344, 345, 346, 354, 355, 363], "howev": [0, 2, 12, 336, 339, 341, 345, 346, 354, 363], "one": [0, 2, 6, 10, 12, 13, 14, 18, 26, 27, 28, 29, 30, 40, 48, 81, 83, 90, 94, 103, 144, 145, 156, 179, 198, 200, 209, 212, 214, 234, 241, 245, 247, 248, 253, 254, 259, 280, 283, 287, 289, 292, 296, 298, 299, 304, 318, 320, 321, 322, 324, 328, 329, 331, 332, 333, 336, 338, 339, 341, 342, 344, 345, 346, 350, 354, 358, 360], "legal": [0, 339], "ones": [0, 13, 119, 326, 333], "9": [0, 10, 51, 58, 70, 79, 93, 96, 99, 106, 110, 112, 128, 132, 252, 265, 316, 317, 326, 328, 338, 339, 340, 343, 344, 353, 355, 356, 357], "sinc": [0, 10, 215, 318, 328, 329, 333, 336, 344, 345, 346, 350, 363], "number": [0, 2, 10, 12, 18, 26, 27, 30, 39, 46, 58, 59, 61, 69, 72, 80, 86, 87, 88, 126, 127, 128, 129, 130, 132, 169, 170, 171, 172, 173, 190, 198, 199, 200, 201, 202, 214, 224, 229, 232, 254, 274, 275, 276, 280, 282, 283, 288, 289, 298, 316, 318, 320, 326, 328, 331, 336, 339, 341, 344, 353, 354, 355, 356, 358, 363], "valu": [0, 1, 2, 10, 14, 22, 27, 28, 29, 37, 43, 50, 52, 53, 61, 69, 71, 72, 79, 80, 92, 93, 94, 95, 96, 97, 102, 104, 106, 110, 112, 113, 133, 139, 140, 163, 190, 197, 198, 201, 218, 227, 230, 241, 249, 267, 273, 276, 278, 279, 281, 282, 283, 290, 298, 315, 316, 318, 320, 324, 326, 328, 332, 336, 340, 342, 344, 345, 354, 355, 356, 357], "met": [0, 3, 285, 331, 339, 341], "doubl": 0, "big": 0, "warn": [0, 2, 16, 260, 287, 295, 298, 318, 326, 332, 336, 338, 345, 354, 363], "larger": [0, 339], "pad": 0, "filter": [0, 3, 5, 6, 99, 126, 127, 128, 318, 326, 328, 345], "so": [0, 6, 27, 99, 198, 294, 321, 324, 329, 339, 345, 346, 353, 363], "characterscannot": 0, "neither": [0, 339], "perform": [0, 2, 18, 81, 88, 201, 320, 326, 339, 342, 344, 345, 346, 354, 360], "order": [0, 2, 12, 13, 29, 32, 36, 83, 142, 147, 148, 153, 158, 160, 161, 198, 212, 213, 221, 228, 235, 236, 237, 318, 320, 322, 328, 335, 336, 339, 341, 342, 343, 344, 345, 350, 360, 361], "given": [0, 2, 3, 4, 5, 6, 13, 29, 42, 83, 87, 92, 93, 95, 96, 97, 103, 104, 134, 135, 136, 138, 146, 157, 163, 165, 180, 187, 188, 199, 200, 201, 206, 230, 238, 241, 248, 249, 258, 260, 267, 274, 282, 292, 294, 296, 299, 306, 318, 320, 324, 328, 332, 333, 336, 338, 339, 345, 346, 353, 354, 355, 359], "critic": [0, 321], "case": [0, 2, 12, 39, 83, 85, 98, 144, 145, 156, 198, 241, 290, 318, 326, 331, 336, 338, 339, 342, 344, 345, 347, 352, 360, 362], "illeg": 0, "get": [0, 2, 8, 9, 10, 11, 12, 14, 20, 29, 32, 36, 39, 105, 107, 108, 109, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 137, 139, 140, 142, 164, 274, 289, 318, 328, 333, 338, 339, 342, 343, 350, 354, 360, 363], "need": [0, 2, 22, 43, 81, 98, 141, 318, 323, 324, 325, 329, 331, 333, 335, 336, 339, 342, 343, 345, 349, 361, 363], "becaus": [0, 12, 318, 339], "later": [0, 2, 335, 339], "comparison": [0, 277, 345, 350], "It": [0, 2, 22, 292, 321, 322, 323, 324, 328, 329, 335, 336, 337, 339, 341, 342, 343, 344, 348, 353, 354, 363], "possibl": [0, 2, 5, 10, 12, 29, 119, 148, 152, 153, 161, 239, 297, 318, 322, 323, 324, 328, 331, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 353, 359, 360, 361, 363], "done": [0, 1, 5, 81, 82, 88, 92, 93, 95, 96, 97, 198, 321, 326, 342, 345, 348, 355], "eq": [0, 12, 35, 344], "ne": 0, "text": [0, 22, 40, 41, 44, 207, 342, 344, 350, 360], "otherwis": [0, 6, 10, 32, 37, 38, 40, 43, 47, 81, 85, 105, 109, 117, 132, 143, 144, 145, 156, 159, 162, 166, 167, 168, 198, 212, 225, 226, 228, 230, 232, 235, 241, 298, 321, 326, 328, 339, 342, 344, 350, 360], "appropri": [0, 321, 339], "letter": [0, 143], "alphanum": 0, "underscor": 0, "real": [0, 151, 163, 328, 329], "special": [0, 10, 245, 324, 328, 329, 339], "digit": [0, 80, 318, 358], "enclos": 0, "ok": [0, 329], "w": [0, 32, 81, 143, 166, 178, 179, 185, 202, 214, 226, 230, 234, 241, 253, 326, 339, 342, 344], "o": [0, 317, 319, 320, 325, 355], "With": [0, 341, 354], "eqn": 0, "ge": [0, 344], "etc": [0, 7, 318, 322, 344, 346, 356], "maximum": [0, 18, 40, 80, 241, 276, 320, 326, 354, 358], "have": [0, 2, 3, 4, 5, 6, 10, 12, 22, 29, 32, 40, 43, 88, 113, 119, 147, 158, 160, 231, 245, 254, 279, 289, 294, 296, 318, 320, 322, 323, 324, 325, 326, 328, 329, 332, 335, 336, 338, 339, 342, 343, 345, 346, 348, 350, 354, 358, 360, 361, 363], "12": [0, 2, 70, 99, 106, 110, 112, 114, 115, 128, 165, 206, 227, 254, 265, 316, 317, 326, 328, 331, 332, 333, 335, 336, 338, 339, 340, 343, 344, 345, 351, 353, 355, 356, 357, 360], "must": [0, 2, 6, 27, 46, 85, 198, 214, 292, 317, 320, 339, 342, 358], "decreas": [0, 282, 329, 354], "within": [0, 2, 113, 198, 321, 326, 339, 341], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 2, 3, 4, 6, 22, 29, 32, 225, 316, 321, 324, 326, 329, 339, 345, 346, 363], "affect": [0, 119, 125, 212, 225, 241, 318, 339, 346], "even": [0, 27, 87, 91, 106, 112, 119, 323, 339, 346], "still": [0, 339, 346, 363], "cannot": [0, 3, 4, 6, 12, 69, 85, 260, 291, 318, 326, 328, 339, 341], "both": [0, 1, 2, 3, 4, 5, 6, 12, 22, 46, 158, 208, 241, 289, 318, 321, 326, 328, 331, 332, 336, 338, 339, 343, 345, 354, 355, 359, 360, 361], "reenter": 0, "think": 0, "risk": [0, 339], "being": [0, 2, 3, 4, 10, 29, 39, 48, 69, 149, 155, 201, 202, 204, 226, 317, 318, 323, 331, 332, 333, 339, 346, 350, 356], "truncat": 0, "encod": [0, 234, 253, 318, 328, 348], "here": [0, 2, 3, 4, 5, 6, 125, 328, 329, 330, 332, 334, 335, 336, 343, 344, 345, 350, 361, 362], "possibli": [0, 350], "partial": [0, 325, 350], "list": [0, 2, 6, 10, 12, 14, 17, 18, 21, 28, 29, 32, 35, 37, 43, 46, 54, 55, 58, 85, 88, 90, 91, 100, 101, 103, 104, 113, 118, 119, 125, 134, 135, 136, 138, 164, 175, 187, 188, 193, 194, 198, 199, 205, 214, 225, 240, 242, 243, 244, 246, 247, 248, 249, 259, 267, 272, 273, 274, 277, 278, 279, 280, 283, 287, 288, 289, 290, 298, 305, 306, 316, 317, 318, 320, 321, 324, 326, 328, 332, 336, 338, 339, 341, 342, 344, 347, 353, 354, 355, 356, 359, 360], "decid": [0, 2, 48, 157, 336, 338, 339, 345, 355], "whether": [0, 2, 27, 37, 40, 43, 61, 85, 146, 155, 157, 198, 214, 261, 263, 265, 274, 277, 290, 293, 310, 318, 320, 336, 339, 341, 345, 360, 361], "put": [0, 12, 169, 198, 318, 329, 333, 336], "up": [0, 18, 318, 321, 323, 326, 335, 343, 361, 363], "written": [0, 318, 322, 339, 342, 344, 346], "scientif": [0, 329], "14": [0, 2, 70, 93, 106, 112, 128, 265, 316, 317, 326, 336, 338, 339, 340, 343, 344, 353, 356, 357, 360], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 3, 114, 215, 316, 344, 354], "describ": [0, 2, 29, 32, 69, 147, 148, 149, 152, 153, 158, 160, 161, 316, 326, 328, 336, 338, 342, 347, 354], "output": [0, 12, 22, 289, 306, 318, 320, 322, 324, 339, 342, 344], "alwai": [0, 197, 200, 318, 328, 341, 344, 345, 354, 359], "synonym": [0, 318], "name": [0, 1, 2, 6, 10, 11, 12, 13, 14, 17, 18, 21, 22, 26, 27, 28, 29, 33, 34, 35, 39, 40, 41, 43, 44, 45, 46, 51, 53, 58, 59, 69, 80, 82, 85, 87, 88, 90, 95, 96, 97, 103, 107, 113, 114, 115, 119, 122, 125, 128, 132, 134, 135, 136, 138, 143, 144, 145, 146, 156, 164, 166, 169, 170, 171, 172, 173, 176, 184, 187, 188, 190, 192, 196, 198, 202, 203, 204, 205, 207, 209, 214, 215, 218, 222, 224, 225, 226, 227, 230, 237, 240, 242, 243, 244, 247, 248, 254, 262, 267, 272, 273, 274, 276, 279, 282, 286, 287, 290, 292, 293, 294, 296, 298, 299, 302, 303, 304, 305, 306, 307, 315, 317, 318, 320, 323, 326, 328, 331, 336, 338, 339, 341, 343, 344, 345, 347, 349, 354, 355, 356, 359, 360], "avail": [0, 1, 2, 10, 37, 47, 58, 69, 141, 166, 212, 228, 232, 235, 241, 262, 267, 274, 316, 320, 322, 326, 332, 333, 336, 338, 339, 341, 342, 343, 344, 345, 346, 350, 354, 355, 357, 359, 360, 362, 363], "carri": [0, 339], "over": [0, 132, 169, 198, 230, 263, 264, 265, 316, 317, 318, 322, 331, 333, 338], "onc": [0, 3, 4, 6, 167, 326, 336, 346, 354], "covari": [0, 3, 4, 5, 6, 10, 14, 18, 21, 29, 37, 40, 62, 63, 64, 65, 69, 70, 72, 73, 74, 75, 76, 85, 112, 113, 125, 146, 164, 178, 184, 199, 200, 201, 205, 241, 274, 276, 298, 318, 320, 326, 328, 329, 336, 338, 341, 350, 354, 356, 358, 361], "final": [0, 6, 49, 191, 271, 274, 282, 298, 318, 326, 331, 332, 333, 336, 338, 339, 344, 345, 346, 347, 354, 355, 356, 358, 359, 360], "estim": [0, 1, 2, 3, 4, 5, 6, 7, 18, 19, 22, 27, 28, 37, 40, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 68, 69, 70, 72, 79, 80, 83, 85, 94, 102, 103, 104, 174, 176, 177, 178, 182, 186, 191, 192, 193, 194, 199, 200, 201, 202, 204, 210, 211, 212, 216, 220, 221, 225, 226, 228, 232, 234, 235, 236, 241, 242, 243, 244, 248, 249, 251, 252, 253, 259, 262, 273, 274, 277, 282, 285, 290, 298, 316, 317, 318, 320, 322, 326, 327, 329, 336, 337, 338, 340, 345, 347, 349, 350, 353, 354, 355, 358, 359, 360, 361, 362], "oppos": [0, 354], "ext": [0, 318, 322], "per": [0, 10, 18, 28, 81, 126, 127, 128, 132, 199, 200, 225, 230, 289, 326, 360], "est": [0, 42, 49, 57, 186, 191, 342, 344], "first": [0, 2, 3, 5, 29, 38, 40, 47, 83, 87, 106, 112, 116, 144, 145, 147, 148, 153, 156, 158, 176, 183, 202, 204, 210, 212, 213, 214, 221, 226, 228, 230, 232, 235, 241, 298, 318, 320, 322, 326, 333, 336, 338, 339, 341, 344, 345, 346, 350, 363], "call": [0, 289, 307, 318, 323, 324, 339, 346, 363], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310, 311, 317, 318, 320, 326, 336, 338, 341, 345, 347, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361], "theta": [0, 1, 32, 37, 40, 43, 133, 139, 140, 178, 179, 182, 225, 234, 253, 318, 336, 344, 345, 346, 350, 354, 355, 358], "sigma": [0, 1, 2, 133, 139, 140, 178, 179, 182, 202, 204, 226, 318, 333, 336, 344, 345, 346, 354, 358], "omega": [0, 1, 26, 29, 70, 133, 139, 140, 178, 179, 182, 318, 333, 336, 342, 344, 345, 346, 353, 354, 355, 358], "fix": [0, 1, 3, 4, 6, 27, 28, 37, 48, 53, 61, 85, 102, 103, 104, 133, 139, 140, 197, 208, 216, 219, 233, 240, 246, 248, 249, 273, 320, 336, 339, 341, 342, 344, 350], "offdiagon": 0, "could": [0, 22, 318, 328, 336, 339, 344, 349, 350], "part": [0, 2, 3, 5, 22, 29, 87, 241, 316, 318, 320, 324, 325, 326, 339, 342, 345, 346, 350, 361], "NO": [0, 339], "probabl": [0, 241], "same": [0, 2, 3, 4, 5, 6, 12, 14, 22, 29, 32, 46, 59, 80, 81, 102, 103, 104, 114, 160, 214, 216, 225, 248, 249, 255, 274, 279, 292, 294, 296, 317, 318, 320, 321, 322, 326, 328, 331, 332, 333, 336, 338, 339, 341, 342, 344, 345, 354, 360, 363], "type": [0, 3, 4, 5, 6, 10, 12, 14, 22, 31, 32, 39, 40, 61, 83, 109, 113, 134, 136, 175, 180, 206, 231, 260, 267, 274, 278, 279, 281, 285, 315, 318, 320, 324, 326, 331, 333, 335, 336, 338, 339, 342, 345, 347, 350, 358, 361], "now": [0, 3, 4, 5, 6, 318, 324, 344, 346], "investig": 0, "follow": [0, 2, 3, 4, 5, 6, 18, 40, 43, 168, 240, 254, 316, 318, 320, 321, 324, 325, 326, 328, 329, 331, 332, 335, 336, 338, 339, 341, 342, 344, 345, 346, 347, 349, 360, 363], "like": [0, 29, 322, 328, 331, 339, 346, 350], "One": [0, 2, 29, 169, 175, 298, 303, 306, 320, 350, 363], "last": [0, 12, 32, 36, 105, 211, 290], "left": [0, 8, 69, 326, 342, 344, 345, 349], "justifi": 0, "size": [0, 10, 17, 198, 241, 318, 321, 350], "13": [0, 1, 2, 70, 106, 110, 112, 114, 128, 265, 316, 317, 326, 332, 336, 339, 340, 343, 344, 351, 353, 356, 357, 360], "subject_id": 0, "model": [0, 1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 296, 297, 298, 299, 302, 304, 315, 316, 317, 318, 319, 321, 322, 323, 324, 326, 332, 333, 334, 335, 337, 338, 339, 340, 349, 350, 353, 354, 356, 357, 358, 361, 362, 363], "n": [0, 10, 21, 26, 29, 30, 41, 44, 51, 85, 88, 192, 200, 201, 207, 224, 229, 232, 240, 243, 254, 280, 284, 316, 317, 318, 333, 336, 342, 344, 358], "flatten": [0, 318], "triangular": 0, "correl": [0, 18, 62, 63, 64, 65, 73, 74, 75, 76, 79, 85, 252, 298, 318, 336, 353], "abov": [0, 37, 40, 43, 79, 190, 241, 316, 317, 326, 331, 333, 339, 344, 347, 354, 363], "off": [0, 2, 3, 4, 6, 318, 341, 345, 360], "diagon": [0, 178, 318, 336, 343, 344, 345], "obj": 0, "right": [0, 8, 12, 339, 342, 344, 363], "also": [0, 5, 29, 38, 91, 119, 198, 318, 322, 323, 324, 326, 328, 329, 331, 332, 333, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 350, 354, 355, 359, 360, 363], "22": [0, 2, 70, 92, 93, 95, 96, 106, 112, 128, 132, 265, 316, 317, 326, 333, 340, 343, 344, 357], "integ": [0, 10, 143, 318, 320, 341], "5": [0, 2, 3, 4, 6, 32, 37, 40, 62, 64, 65, 69, 70, 74, 75, 81, 93, 94, 99, 104, 106, 110, 112, 115, 128, 132, 143, 165, 166, 167, 168, 175, 178, 206, 227, 241, 244, 249, 265, 282, 288, 289, 316, 317, 326, 328, 333, 336, 338, 339, 340, 342, 343, 344, 345, 347, 351, 353, 354, 356, 357, 360], "expon": [0, 1, 37, 273, 320], "regular": [0, 14, 331, 337], "take": [0, 2, 27, 29, 86, 261, 298, 318, 321, 328, 332, 336, 338, 339, 345, 347, 350, 359], "19": [0, 70, 93, 106, 112, 128, 265, 316, 317, 340, 343, 344, 353, 356, 357], "posit": [0, 29, 200, 201, 241, 318, 320, 321, 329, 354], "neg": [0, 341], "For": [0, 2, 3, 4, 5, 6, 12, 40, 43, 126, 127, 128, 168, 197, 227, 231, 241, 245, 273, 274, 276, 278, 279, 281, 283, 285, 316, 317, 320, 322, 323, 324, 326, 331, 332, 333, 335, 336, 339, 341, 342, 345, 346, 347, 350, 354, 359, 363], "20": [0, 70, 96, 99, 106, 112, 128, 254, 265, 316, 317, 326, 339, 340, 343, 344, 351, 353, 354, 356, 357], "In": [0, 2, 3, 4, 5, 6, 12, 39, 85, 98, 321, 322, 324, 326, 335, 336, 338, 339, 342, 343, 344, 345, 347, 350, 354, 358, 360, 361, 363], "observ": [0, 6, 10, 18, 22, 47, 58, 114, 126, 127, 128, 131, 132, 212, 228, 231, 232, 235, 236, 241, 288, 289, 316, 318, 333, 347, 350, 353, 357, 360], "em": [0, 18], "algorithm": [0, 3, 4, 5, 6, 274, 276, 277, 278, 281, 288, 318, 320, 322, 331, 350, 361], "insead": 0, "calcul": [0, 18, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 85, 94, 110, 267, 316, 317, 318, 333, 336, 337, 338, 345], "phi_1": 0, "mu_1": [0, 168, 333], "eta_1": [0, 32, 40, 66, 68, 70, 85, 120, 134, 138, 168, 199, 240, 242, 243, 244, 333, 342, 343, 344], "mu": [0, 168, 318, 333], "referenc": [0, 168, 318], "mu_i": 0, "implicitli": 0, "equival": [0, 339, 341, 360], "random": [0, 2, 3, 4, 5, 6, 7, 17, 21, 22, 26, 29, 30, 46, 61, 69, 72, 86, 88, 119, 134, 138, 141, 157, 197, 199, 200, 201, 229, 274, 282, 318, 320, 329, 333, 338, 344, 353, 354, 363], "operatornam": [0, 317, 333, 357], "var": [0, 29, 70, 333], "phi_i": 0, "eta_i": [0, 333], "j": [0, 241, 243, 317, 333], "phi_j": 0, "mu_j": 0, "eta_j": 0, "byte": 0, "evid": [0, 117, 318], "toward": [0, 114, 318], "token": [0, 341], "whitespac": 0, "parenthes": [0, 341], "multipl": [0, 2, 6, 8, 12, 29, 32, 39, 61, 109, 144, 145, 156, 212, 231, 274, 285, 287, 306, 318, 326, 329, 341, 342, 344, 355, 356, 360, 361], "open": [0, 321, 324, 337, 339, 348], "keyword": [0, 320], "kept": [0, 98, 132, 318, 320, 336], "exampl": [0, 1, 8, 9, 10, 11, 12, 13, 14, 20, 21, 26, 27, 28, 29, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 318, 320, 322, 323, 324, 326, 328, 329, 331, 332, 336, 338, 339, 342, 345, 346, 348, 349, 350, 354, 355, 359, 361, 363], "csv": [0, 2, 182, 255, 291, 301, 318, 320, 322, 326, 328, 331, 332, 336, 338, 344, 345, 347, 354, 355, 359, 360], "wgt": [0, 2, 3, 4, 8, 10, 14, 32, 37, 40, 81, 90, 91, 99, 106, 112, 125, 141, 143, 165, 166, 167, 168, 170, 171, 172, 173, 178, 179, 184, 206, 227, 242, 243, 244, 247, 273, 328, 333, 341, 342, 344, 346, 350, 353], "23": [0, 2, 69, 70, 72, 86, 93, 106, 112, 128, 199, 200, 201, 254, 265, 316, 317, 326, 340, 343, 344, 356, 357], "titl": 0, "crash": [0, 318], "nmtran": [0, 10, 18], "There": [0, 2, 294, 326, 332, 344, 354, 360], "72": [0, 2], "includ": [0, 2, 7, 21, 26, 29, 52, 175, 241, 290, 317, 318, 321, 326, 331, 336, 337, 338, 339, 341, 343, 344, 345, 347, 353, 354, 356, 359, 360], "come": [0, 241, 324, 339], "filenam": [0, 22, 292, 296, 299, 305, 342], "repres": [0, 8, 10, 27, 28, 29, 38, 320, 326, 328, 329, 331, 333, 339, 342, 347], "rel": [0, 298, 318, 333, 354, 358], "path": [0, 1, 2, 3, 4, 5, 6, 14, 22, 59, 83, 111, 180, 181, 206, 254, 255, 256, 257, 258, 259, 268, 269, 270, 272, 274, 291, 292, 293, 294, 296, 299, 300, 301, 304, 305, 310, 318, 320, 322, 323, 326, 328, 331, 332, 335, 336, 338, 342, 343, 344, 345, 347, 354, 355, 356, 359, 360, 361, 363], "work": [0, 298, 318, 321, 324, 332, 339, 342, 350], "directori": [0, 258, 259, 272, 292, 293, 294, 318, 320, 323, 324, 342, 356], "when": [0, 2, 3, 4, 5, 6, 18, 36, 40, 81, 105, 197, 282, 318, 321, 322, 324, 328, 331, 332, 336, 338, 339, 342, 346, 347, 353, 354, 356, 360], "invok": 0, "nmfe": 0, "content": [0, 2, 288, 289, 326, 328, 332, 336, 338, 339, 345, 354], "simpli": [0, 27, 324, 331, 332, 346], "seen": [0, 2, 3, 4, 5, 6, 328, 332, 336, 345, 354], "54": [0, 70, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 345, 351, 353, 357], "doe": [0, 59, 87, 111, 190, 241, 292, 293, 294, 299, 300, 318, 329, 332, 336, 338, 339, 345, 346, 353], "pk": [0, 2, 3, 5, 6, 10, 45, 52, 83, 119, 136, 178, 241, 318, 326, 336, 341, 344, 345, 346, 347, 359, 360, 361], "pred": [0, 54, 96, 173, 178, 182, 318, 343, 344, 353, 357], "simpl": [0, 1, 178, 239, 290, 344, 346, 354], "merg": [0, 318, 324, 339], "placement": [0, 323], "place": [0, 2, 323, 339], "seem": 0, "restrict": [0, 294, 339], "automat": [0, 18, 37, 274, 318, 324, 326, 335, 339, 341, 355, 361], "creat": [0, 2, 5, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 33, 34, 36, 39, 48, 81, 83, 84, 86, 87, 105, 109, 110, 117, 132, 187, 203, 214, 225, 254, 257, 258, 260, 272, 282, 288, 289, 292, 293, 294, 295, 296, 297, 301, 303, 305, 307, 310, 316, 317, 318, 320, 322, 323, 324, 326, 327, 328, 331, 332, 333, 336, 340, 345, 347, 350, 351, 353, 354, 355, 356, 357, 360, 361, 362], "continu": [0, 2, 3, 4, 5, 6, 10, 22, 40, 318, 321, 324, 326, 333, 339, 341, 350], "factor": [0, 350], "compil": [0, 339], "11138": 0, "445": [0, 336], "though": [0, 339], "outsid": [0, 318, 321, 339], "standard": [0, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 253, 257, 298, 316, 318, 329, 333, 339, 344, 346, 350, 353, 355, 357, 358], "gfortran": 0, "8": [0, 2, 10, 58, 62, 63, 64, 65, 70, 73, 74, 75, 76, 99, 106, 112, 115, 128, 132, 165, 170, 171, 172, 173, 206, 227, 254, 265, 316, 317, 326, 328, 331, 336, 338, 339, 340, 343, 344, 351, 353, 354, 355, 356, 357, 360, 363], "hh": 0, "nep": 0, "h": [0, 320], "second": [0, 3, 176, 320, 331, 346], "f": [0, 32, 44, 81, 143, 166, 178, 179, 185, 202, 204, 214, 225, 226, 230, 241, 253, 316, 318, 320, 325, 339, 342, 344, 346], "respect": [0, 2, 318, 321, 332, 333, 339, 344, 345, 346, 359], "ep": [0, 32, 178, 318, 344, 346], "implicit": [0, 318], "kind": [0, 10, 12, 136, 326, 339], "dpsize": 0, "main": [0, 297, 320, 324, 350, 363], "function": [0, 7, 14, 18, 29, 37, 40, 41, 44, 66, 67, 86, 91, 92, 93, 95, 96, 97, 102, 103, 104, 120, 131, 137, 148, 152, 153, 161, 197, 202, 203, 204, 207, 216, 225, 226, 239, 245, 248, 249, 252, 258, 267, 278, 281, 298, 303, 316, 318, 320, 322, 323, 324, 328, 329, 336, 338, 339, 342, 343, 345, 346, 349, 350, 353, 354, 355, 356, 362, 363], "fsub": 0, "variabl": [0, 1, 2, 7, 8, 10, 12, 17, 21, 22, 26, 29, 33, 34, 37, 46, 58, 69, 87, 94, 119, 133, 134, 138, 139, 141, 144, 145, 156, 157, 179, 197, 201, 202, 204, 214, 225, 226, 230, 273, 274, 298, 302, 318, 320, 326, 328, 329, 336, 343, 350, 353, 362, 363], "doesn": [0, 32, 296, 318, 336], "t": [0, 10, 11, 12, 32, 37, 41, 81, 89, 121, 143, 166, 207, 220, 221, 226, 236, 244, 290, 296, 303, 305, 317, 318, 333, 336, 342, 344, 351, 353, 360], "declar": [0, 2, 81, 167, 326, 341], "assign": [0, 10, 32, 81, 318, 320, 342], "stop": [0, 336], "entri": [0, 241, 292, 295, 296, 299], "symbol": [0, 8, 9, 11, 12, 13, 20, 21, 22, 26, 27, 28, 29, 32, 66, 67, 81, 87, 108, 116, 120, 125, 131, 137, 141, 167, 179, 196, 225, 274, 318, 326, 329, 344, 350], "separ": [0, 2, 3, 4, 5, 6, 14, 85, 98, 168, 198, 240, 274, 294, 297, 318, 320, 324, 326, 328, 329, 333, 339, 341, 350, 360], "thnn": 0, "nn": [0, 333], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 2, 10, 27, 29, 48, 190, 218, 241, 254, 261, 318, 339, 344, 347], "ad": [0, 2, 3, 4, 5, 6, 13, 22, 37, 38, 40, 43, 51, 61, 98, 224, 278, 279, 281, 306, 318, 320, 326, 331, 338, 339, 341, 346, 355, 356, 361], "x": [0, 2, 28, 37, 81, 92, 93, 99, 110, 165, 199, 206, 227, 316, 326, 328, 333, 343, 344, 348, 354, 356], "xxe": 0, "xx": 0, "string": [0, 2, 10, 14, 22, 29, 32, 119, 125, 180, 181, 182, 260, 274, 281, 282, 301, 318, 328, 344, 345, 354, 358, 359], "tool": [1, 2, 3, 4, 5, 6, 7, 18, 22, 57, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 92, 93, 94, 95, 96, 97, 170, 171, 172, 173, 174, 175, 176, 185, 199, 200, 201, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 300, 304, 310, 315, 316, 318, 319, 320, 324, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 345, 347, 349, 350, 354, 355, 358, 359, 360, 362, 363], "add": [1, 13, 18, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 81, 98, 121, 207, 224, 225, 226, 306, 318, 326, 331, 336, 339, 341, 344, 345, 346, 348, 361], "allometr": [1, 2, 37, 273, 318, 320, 361], "scale": [1, 2, 10, 22, 37, 68, 71, 77, 201, 273, 282, 298, 318, 320, 333, 348, 361], "pharmr": [1, 2, 7, 318, 324, 326, 329, 332, 335, 336, 337, 338, 345, 354, 355, 359, 360, 362], "command": [1, 318, 324, 326, 332, 335, 336, 337, 338, 339, 344, 345, 355, 362], "line": [1, 81, 318, 326, 332, 335, 336, 337, 338, 339, 344, 345, 355, 362], "To": [1, 2, 323, 324, 326, 332, 335, 336, 338, 339, 341, 343, 344, 345, 347, 348, 354, 355, 363], "initi": [1, 2, 3, 4, 5, 6, 19, 22, 27, 28, 37, 43, 46, 47, 50, 51, 52, 53, 83, 85, 86, 94, 102, 103, 104, 121, 192, 202, 204, 212, 214, 215, 216, 220, 221, 225, 226, 228, 232, 235, 236, 242, 243, 244, 248, 249, 251, 252, 273, 274, 282, 285, 305, 318, 320, 326, 331, 332, 333, 336, 338, 339, 342, 344, 345, 347, 354, 355, 359, 360, 361], "python": [1, 2, 3, 4, 5, 6, 170, 171, 172, 173, 174, 175, 176, 317, 318, 320, 322, 326, 328, 329, 331, 332, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 359, 360, 362], "r": [1, 2, 3, 4, 5, 6, 18, 44, 170, 171, 172, 173, 174, 175, 176, 301, 317, 318, 322, 323, 326, 328, 329, 331, 332, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 354, 355, 359, 360, 362], "read_model": [1, 2, 3, 4, 5, 6, 182, 318, 326, 328, 331, 332, 336, 338, 342, 344, 345, 347, 354, 355, 359, 360, 363], "read_modelfit_result": [1, 2, 6, 318, 326, 331, 332, 336, 338, 342, 343, 345, 347, 354, 355, 359, 360], "run_allometri": [1, 318], "start_model": [1, 2, 3, 4, 5, 6, 288, 322, 326, 331, 332, 336, 338, 345, 347, 354, 355, 359, 360], "start_model_result": [1, 322, 326, 331, 332, 336, 338, 345, 347, 354, 355, 359, 360], "re": [1, 2, 3, 4, 5, 6, 55, 170, 171, 172, 173, 174, 175, 258, 261, 269, 270, 271, 275, 276, 286, 293, 300, 304, 317, 322, 326, 331, 332, 336, 338, 343, 345, 347, 354, 355, 357, 359, 360], "code": [1, 3, 4, 5, 6, 18, 22, 24, 81, 124, 125, 141, 148, 152, 153, 161, 178, 182, 225, 226, 256, 318, 325, 326, 331, 332, 336, 337, 338, 339, 344, 345, 346, 347, 349, 350, 355, 359, 360, 363], "redefin": [1, 326, 332, 336, 338, 345, 355], "accordingli": [1, 2, 326, 332, 336, 338, 345, 346, 355], "descript": [1, 2, 3, 4, 5, 6, 10, 22, 33, 58, 288, 289, 290, 298, 302, 315, 316, 318, 322, 323, 326, 328, 331, 332, 336, 338, 345, 347, 354, 355, 356, 358, 359, 360, 361], "modelfitresult": [1, 2, 25, 259, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 297, 318, 326, 331, 332, 336, 338, 345, 347, 354, 355, 359, 360], "allometric_vari": [1, 2, 3, 4, 6, 37, 273, 274, 320], "wt": [1, 32, 273, 274, 276, 326, 356], "reference_valu": [1, 3, 4, 6, 37, 273, 320], "refer": [1, 34, 37, 81, 88, 160, 227, 271, 273, 274, 290, 318, 326, 339, 344, 346, 347, 359, 362, 363], "70": [1, 3, 4, 6, 37, 106, 273, 344, 353], "appli": [1, 2, 22, 38, 202, 204, 214, 225, 226, 242, 243, 244, 273, 318, 320, 321, 328, 333, 336, 339, 341, 344, 345, 353, 354], "all": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 22, 28, 29, 31, 32, 33, 37, 43, 48, 50, 52, 58, 78, 81, 85, 88, 90, 98, 103, 104, 107, 110, 112, 113, 115, 118, 119, 122, 133, 136, 139, 140, 142, 143, 148, 152, 153, 157, 161, 164, 174, 175, 177, 179, 187, 188, 193, 194, 197, 199, 200, 214, 219, 225, 227, 231, 233, 240, 241, 242, 243, 244, 246, 247, 248, 249, 272, 273, 277, 278, 279, 281, 290, 292, 296, 298, 299, 301, 306, 311, 316, 317, 318, 320, 321, 322, 324, 326, 327, 328, 329, 332, 333, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 358, 359, 360, 361, 363], "cl": [1, 2, 4, 8, 12, 28, 32, 37, 40, 43, 46, 51, 69, 81, 83, 87, 89, 100, 108, 119, 134, 136, 138, 143, 146, 157, 163, 166, 167, 168, 178, 179, 184, 187, 192, 212, 213, 217, 220, 221, 224, 228, 235, 239, 242, 243, 244, 273, 274, 276, 278, 318, 326, 333, 336, 338, 342, 344, 346, 360], "q": [1, 2, 37, 51, 192, 273, 318, 344], "v": [1, 2, 12, 28, 32, 37, 41, 69, 81, 83, 89, 101, 108, 119, 136, 141, 143, 166, 167, 168, 170, 171, 172, 173, 178, 179, 187, 207, 212, 213, 217, 220, 221, 228, 235, 236, 239, 273, 276, 324, 326, 333, 338, 341, 342, 344, 346, 357, 360], "75": [1, 37, 273, 326, 332], "lower_bound": [1, 3, 4, 6, 37, 273, 320], "lower": [1, 2, 10, 27, 28, 37, 40, 53, 79, 102, 103, 104, 133, 139, 140, 190, 216, 218, 219, 225, 233, 246, 249, 273, 274, 320, 329, 336, 342, 344, 354], "bound": [1, 27, 28, 37, 53, 80, 201, 219, 233, 242, 243, 244, 246, 252, 273, 292, 296, 299, 318, 320, 342, 354, 358], "upper_bound": [1, 3, 4, 6, 37, 273, 320], "upper": [1, 27, 28, 37, 40, 53, 102, 103, 104, 133, 139, 140, 190, 216, 219, 233, 246, 249, 254, 273, 318, 320, 342, 344, 354], "should": [1, 2, 10, 27, 37, 40, 43, 46, 53, 132, 198, 214, 254, 273, 278, 279, 281, 318, 320, 321, 323, 324, 326, 329, 333, 336, 338, 339, 340, 341, 345, 350, 355], "true": [1, 2, 10, 13, 14, 19, 22, 28, 37, 38, 44, 49, 61, 68, 78, 87, 90, 98, 102, 103, 104, 121, 125, 132, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 184, 191, 200, 206, 208, 210, 211, 214, 225, 226, 232, 247, 248, 249, 250, 251, 256, 261, 265, 273, 277, 290, 291, 298, 318, 326, 328, 332, 336, 338, 342, 344, 345, 346, 348, 354, 355, 356, 357, 358, 363], "No": [1, 2, 10, 241, 299, 300, 339, 345], "select": [1, 2, 198, 227, 242, 244, 289, 316, 318, 320, 326, 331, 336, 338, 342, 345, 347, 348, 354, 355, 356, 358, 359, 360, 361], "see": [1, 2, 3, 4, 5, 6, 10, 12, 22, 40, 43, 241, 254, 265, 273, 274, 276, 278, 279, 281, 283, 285, 320, 321, 322, 323, 324, 326, 328, 329, 331, 332, 336, 338, 339, 340, 342, 344, 345, 346, 350, 354, 355, 359], "about": [1, 2, 3, 4, 5, 6, 10, 321, 322, 326, 328, 332, 334, 335, 336, 338, 339, 344, 345, 354, 355, 359], "actual": [1, 2, 27, 168, 197, 326, 332, 336, 338, 339, 345, 354, 355], "minim": [1, 2, 318, 326, 332, 336, 338, 345, 354, 355, 358], "statu": [1, 2, 298, 318, 326, 329, 332, 336, 338, 339, 345, 354, 355], "time": [1, 2, 3, 4, 5, 6, 10, 11, 13, 14, 28, 32, 37, 46, 47, 58, 81, 83, 90, 91, 99, 106, 114, 115, 122, 132, 143, 164, 165, 166, 167, 168, 169, 178, 179, 182, 189, 206, 212, 215, 227, 228, 230, 232, 235, 245, 274, 283, 318, 320, 322, 326, 328, 332, 333, 336, 338, 339, 341, 342, 343, 345, 346, 347, 350, 353, 354, 355, 357, 359], "you": [1, 2, 323, 324, 326, 332, 335, 336, 337, 338, 339, 343, 344, 345, 346, 350, 354, 355, 361, 362, 363], "look": [1, 2, 32, 59, 119, 157, 322, 326, 331, 332, 336, 338, 345, 346, 347, 354, 355], "summary_model": [1, 2, 318, 322, 326, 332, 336, 338, 345, 354, 355], "tabl": [1, 2, 3, 4, 5, 6, 68, 178, 202, 241, 289, 298, 302, 316, 317, 318, 322, 324, 326, 327, 331, 332, 333, 336, 338, 340, 344, 345, 347, 351, 353, 354, 355, 356, 357, 359, 360], "gener": [1, 10, 36, 69, 72, 82, 86, 105, 169, 198, 199, 200, 201, 274, 282, 303, 305, 318, 320, 322, 326, 328, 332, 333, 336, 337, 338, 344, 345, 349, 350, 354, 355, 360, 361], "summarize_modelfit_result": [1, 2, 318, 326, 332, 336, 338, 345, 354, 355], "minimization_success": [1, 2, 261, 267, 274, 276, 278, 279, 281, 282, 283, 285, 290, 298, 326, 331, 332, 336, 338, 345, 347, 354, 355, 358, 359, 360], "errors_found": [1, 2, 326, 332, 336, 338, 345, 354, 355], "pheno": [1, 12, 14, 19, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 87, 89, 90, 91, 94, 99, 100, 101, 102, 103, 104, 106, 108, 110, 112, 114, 115, 116, 118, 119, 121, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 262, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 335, 342, 343, 344, 346, 354], "phenobarb": [1, 178, 290, 344, 354], "scaled_model": [1, 2], "warnings_found": [1, 2, 326, 332, 336, 338, 345, 354, 355], "ofv": [1, 2, 61, 176, 263, 267, 277, 278, 279, 281, 288, 289, 290, 298, 318, 326, 332, 336, 338, 345, 353, 354, 355], "aic": [1, 60, 267, 278, 279, 281, 318, 336, 338, 345, 355], "bic": [1, 2, 3, 4, 5, 6, 61, 267, 278, 279, 281, 318, 320, 322, 326, 331, 336, 338, 345, 347, 355, 360], "730": [1, 316, 333, 340], "894727": [1, 333, 340], "740": [1, 94, 99, 114, 165, 206, 227, 328, 344], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 290, 298, 326, 332, 336, 338, 345, 354, 355], "estimation_runtim": [1, 2, 298, 326, 332, 336, 338, 345, 354, 355], "_estim": [1, 336, 345], "32": [1, 2, 10, 70, 106, 112, 128, 265, 316, 317, 320, 326, 332, 340, 343, 344, 353, 354, 357], "005818": [1, 333], "121955": 1, "44555": [1, 333], "111053": [1, 333], "201526": [1, 333], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 333], "014030": 1, "fulli": [2, 5, 322], "best": [2, 3, 5, 6, 318, 326, 331, 336, 338, 339, 345, 347, 354, 355, 358, 359, 360, 361], "dataset": [2, 3, 4, 5, 6, 14, 15, 16, 22, 36, 37, 39, 56, 58, 69, 78, 83, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 109, 110, 114, 117, 118, 123, 126, 127, 128, 132, 141, 160, 165, 169, 180, 190, 198, 205, 206, 227, 241, 245, 250, 254, 255, 274, 279, 317, 318, 320, 324, 333, 337, 338, 347, 357, 362], "combin": [2, 8, 85, 144, 145, 156, 159, 202, 204, 226, 240, 241, 274, 280, 283, 318, 331, 332, 333, 336, 339, 341, 344, 355], "modelsearch": [2, 3, 4, 6, 281, 288, 318, 322, 331, 360, 361], "structsearch": [2, 3, 5, 6, 285, 318, 361], "ruvsearch": [2, 283, 286, 318, 361], "covsearch": [2, 274, 276, 318, 361], "On": [2, 324, 350], "page": [2, 7, 317, 319, 324, 332, 345, 346, 359], "regard": [2, 3, 5, 331, 339, 345, 347, 354], "workflow": [2, 3, 5, 7, 270, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 318, 322, 335, 337, 339, 345, 350], "found": [2, 3, 5, 6, 12, 28, 119, 287, 306, 316, 317, 318, 324, 327, 330, 333, 334, 335, 336, 338, 339, 342, 343, 345, 353, 354, 355, 359, 361, 362, 363], "current": [2, 5, 29, 42, 43, 66, 67, 81, 82, 92, 93, 95, 96, 97, 120, 131, 137, 147, 160, 166, 203, 210, 211, 212, 217, 228, 239, 241, 245, 260, 262, 276, 280, 285, 296, 298, 307, 317, 318, 320, 322, 324, 326, 327, 331, 333, 335, 337, 338, 339, 340, 341, 342, 347, 349, 350, 351, 353, 354, 355, 356, 357, 359], "few": [2, 332], "differ": [2, 3, 4, 5, 6, 7, 22, 29, 61, 288, 290, 297, 316, 317, 318, 321, 322, 323, 326, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 359, 360, 363], "pleas": [2, 5, 322, 324, 331, 335, 336, 339, 342, 344, 359, 363], "drug": [2, 6, 12, 48, 155, 231, 318, 341, 350, 359, 360, 361], "metabolit": [2, 12, 48, 155, 318, 341, 359, 361], "run_amd": [2, 3, 4, 5, 6, 318], "modeltyp": [2, 3, 4, 5, 6, 274, 320], "basic_pk": [2, 4, 5, 274, 320], "administr": [2, 3, 4, 6, 9, 10, 20, 83, 105, 274, 318, 320, 331, 344], "oral": [2, 3, 4, 6, 83, 212, 274, 318, 320, 331, 341, 344], "cl_init": [2, 3, 4, 6, 83, 274, 320, 344], "vc_init": [2, 3, 4, 6, 83, 274, 320, 344], "mat_init": [2, 3, 4, 6, 83, 274, 320, 344], "search_spac": [2, 3, 4, 5, 6, 274, 276, 281, 285, 318, 320, 322, 326, 331, 345, 347, 359], "let": [2, 18, 22, 88, 318, 326, 333, 341, 344, 346], "categor": [2, 3, 4, 5, 6, 10, 40, 318, 326, 328, 333, 341], "sex": [2, 321, 326, 341, 350], "ag": [2, 10, 276, 326, 341, 356], "occas": [2, 3, 4, 5, 6, 46, 274, 279, 318, 320, 338, 344], "visi": [2, 3, 4, 338], "specifi": [2, 3, 4, 6, 10, 13, 32, 37, 43, 51, 91, 102, 104, 180, 190, 192, 202, 204, 224, 225, 226, 231, 241, 249, 257, 277, 318, 323, 326, 331, 332, 336, 338, 339, 342, 343, 347, 358, 359, 360], "iiv": [2, 3, 4, 5, 6, 21, 26, 29, 34, 43, 46, 50, 52, 61, 85, 119, 134, 157, 187, 214, 240, 278, 279, 281, 318, 320, 326, 338, 341, 342, 344, 361], "we": [2, 321, 324, 326, 333, 335, 336, 337, 339, 342, 344, 346, 350, 363], "our": [2, 321, 324, 325, 339, 350], "object": [2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 22, 23, 28, 29, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 66, 67, 71, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 98, 99, 102, 103, 104, 110, 120, 131, 133, 137, 139, 140, 141, 143, 166, 167, 168, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 258, 261, 262, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 307, 310, 316, 318, 320, 322, 323, 326, 328, 329, 331, 332, 336, 338, 339, 344, 345, 346, 347, 350, 354, 355, 359, 360, 362, 363], "build": [2, 3, 4, 5, 6, 274, 319, 320, 329, 341, 344], "g": [2, 6, 22, 29, 54, 55, 81, 87, 188, 231, 318, 324, 328, 332, 333, 336, 338, 341, 345, 350, 355, 358, 359, 360], "drug_metabolit": [2, 3, 274, 285, 331, 341, 359], "rout": [2, 274], "iv": [2, 3, 4, 6, 83, 212, 274, 318, 320, 331, 341], "ivor": [2, 83, 274, 320, 331], "popul": [2, 3, 4, 6, 22, 32, 53, 94, 95, 96, 120, 137, 143, 252, 274, 298, 318, 320, 356], "clearanc": [2, 3, 4, 5, 6, 37, 83, 100, 108, 274, 318, 320, 326, 336, 338, 346], "central": [2, 3, 4, 6, 11, 12, 13, 32, 48, 51, 81, 83, 129, 143, 147, 149, 155, 166, 192, 212, 213, 215, 217, 220, 221, 224, 228, 232, 235, 236, 237, 239, 274, 318, 320, 324, 329, 342, 344, 360], "compart": [2, 3, 4, 6, 10, 12, 13, 35, 38, 39, 41, 47, 48, 51, 83, 107, 109, 122, 129, 130, 142, 147, 149, 183, 189, 192, 212, 215, 224, 232, 237, 274, 318, 320, 331, 341, 344, 345, 347, 360], "volum": [2, 3, 4, 6, 37, 51, 83, 101, 108, 274, 318, 320, 326, 338, 339], "absorpt": [2, 3, 4, 6, 83, 136, 147, 149, 158, 160, 212, 217, 228, 232, 235, 260, 274, 281, 288, 318, 320, 322, 331, 336, 338, 341, 345], "b_init": [2, 5, 274, 285, 347, 359], "baselin": [2, 5, 41, 44, 106, 112, 164, 203, 207, 274, 285, 318, 333, 347, 359], "effect": [2, 3, 4, 5, 6, 37, 40, 41, 43, 44, 61, 113, 119, 146, 157, 184, 187, 203, 207, 225, 267, 274, 276, 318, 320, 326, 329, 335, 339, 341, 342, 344, 347, 350, 356, 359], "emax_init": [2, 5, 274, 285, 347, 359], "emax": [2, 5, 41, 44, 50, 207, 341, 347], "ec50_init": [2, 5, 274, 285, 347, 359], "ec50": [2, 5], "met_init": [2, 5, 274, 285, 347, 359], "equilibr": [2, 5, 274, 347, 359], "dv_type": [2, 6, 231, 274, 285, 360], "dictionari": [2, 6, 9, 14, 18, 20, 21, 26, 28, 29, 33, 92, 93, 95, 96, 97, 107, 113, 122, 198, 216, 219, 231, 233, 274, 285, 292, 293, 296, 299, 300, 301, 304, 305, 311, 342, 360], "dv": [2, 5, 6, 10, 14, 32, 81, 90, 91, 99, 106, 116, 119, 132, 143, 144, 145, 156, 165, 166, 172, 173, 175, 178, 179, 182, 202, 204, 206, 214, 218, 220, 221, 225, 226, 227, 230, 231, 241, 254, 274, 283, 285, 318, 328, 342, 344, 346, 357], "target": [2, 6, 231, 356, 360], "none": [2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 18, 19, 20, 22, 27, 28, 29, 30, 32, 33, 34, 37, 42, 43, 46, 49, 51, 53, 59, 69, 72, 83, 85, 86, 88, 92, 93, 94, 95, 96, 97, 111, 116, 119, 144, 145, 156, 163, 165, 170, 171, 172, 173, 175, 180, 187, 188, 190, 191, 192, 194, 198, 199, 200, 201, 202, 204, 206, 214, 218, 223, 224, 225, 226, 229, 230, 231, 240, 241, 242, 243, 244, 250, 254, 255, 259, 267, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 292, 293, 296, 297, 298, 299, 301, 302, 305, 306, 310, 318, 320, 322, 323, 328, 333, 336, 338, 342, 344, 345, 347, 360], "defin": [2, 3, 4, 5, 6, 12, 72, 125, 141, 147, 149, 158, 160, 168, 179, 241, 318, 326, 329, 339, 341, 342, 357], "subtool": [2, 3, 4, 5, 6, 318, 322, 358], "mfl": [2, 260, 274, 276, 288, 318, 320, 326, 331, 334, 345, 347, 359, 361], "depend": [2, 3, 4, 6, 10, 22, 32, 36, 39, 69, 85, 88, 105, 109, 119, 144, 145, 156, 202, 204, 214, 225, 226, 230, 318, 322, 323, 326, 328, 336, 346, 359, 360, 363], "lloq_limit": [2, 274, 320], "quantif": [2, 10, 190, 218, 241, 274, 320], "lloq_method": [2, 274, 320], "method": [2, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 42, 49, 58, 178, 182, 210, 211, 241, 254, 274, 277, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 317, 318, 320, 326, 329, 339, 342, 344, 350, 354, 361, 363], "transform_blq": [2, 190, 218, 274, 318, 320, 344], "bodi": [2, 10, 14, 37, 321, 328, 339, 350], "weight": [2, 10, 14, 37, 97, 144, 145, 156, 159, 234, 253, 326, 328, 350, 355], "strict": [2, 3, 5, 6, 261, 267, 274, 276, 278, 279, 281, 282, 283, 285, 318, 326, 331, 334, 336, 338, 339, 345, 347, 354, 355, 359, 360, 361], "criteria": [2, 6, 261, 267, 274, 276, 278, 282, 285, 289, 318, 320, 326, 331, 336, 338, 345, 347, 354, 355, 358, 359, 360], "rounding_error": [2, 261, 274, 276, 278, 279, 281, 282, 283, 285, 298, 326, 331, 336, 338, 345, 347, 354, 355, 358, 359, 360], "sigdig": [2, 274, 276, 278, 279, 281, 282, 283, 285, 326, 331, 336, 338, 345, 347, 354, 355, 358, 359, 360], "mechanistic_covari": [2, 274], "priorit": [2, 318, 346], "element": [2, 329, 343, 363], "tupl": [2, 10, 11, 12, 29, 113, 169, 198, 274, 303, 311], "associ": [2, 12, 321, 338, 339], "extract": [2, 3, 4, 5, 6, 37, 105, 109, 113, 117, 260, 274, 318, 320, 337, 342], "retries_strategi": [2, 274], "how": [2, 5, 7, 18, 200, 274, 278, 281, 318, 320, 321, 324, 326, 328, 331, 335, 336, 338, 339, 342, 344, 345, 346, 354, 356, 362], "option": [2, 3, 4, 5, 10, 13, 18, 22, 29, 40, 43, 46, 57, 61, 83, 85, 92, 93, 95, 96, 97, 119, 198, 201, 206, 241, 254, 260, 267, 274, 282, 285, 292, 296, 297, 299, 311, 316, 318, 320, 322, 331, 339, 342, 344, 359, 362, 363], "skip": [2, 3, 4, 5, 6, 274, 278, 283, 318, 320, 326, 336, 355], "all_fin": [2, 274], "seed": [2, 30, 69, 72, 86, 199, 200, 201, 229, 274, 282, 320, 354], "step": [2, 3, 4, 5, 6, 18, 19, 22, 30, 41, 42, 44, 49, 54, 55, 57, 186, 191, 193, 194, 207, 210, 211, 229, 276, 290, 297, 298, 318, 320, 324, 326, 332, 335, 336, 338, 339, 345, 350, 354, 355, 363], "sampl": [2, 18, 29, 86, 197, 198, 199, 200, 201, 333, 354], "parameter_uncertainty_method": [2, 18, 19, 42, 49, 191, 210, 211, 274, 277, 318, 332, 342, 344], "uncertainti": [2, 18, 49, 69, 70, 72, 191, 199, 200, 201, 274, 277, 318, 320, 333, 343, 361], "implement": [2, 18, 41, 203, 207, 231, 292, 294, 296, 299, 331, 339, 342, 347, 350, 358, 360, 361], "sandwich": [2, 18, 19, 49, 210, 211, 274, 277, 342], "smat": [2, 18, 274, 277], "rmat": [2, 18, 274, 277], "efim": [2, 18, 274, 318], "ignore_datainfo_fallback": [2, 274, 318], "wether": [2, 48], "connect": [2, 3, 5, 6, 12, 22, 48, 113, 129, 225, 282, 292, 294, 297, 306, 318, 320, 328, 331, 339, 347, 350, 361, 362], "datainfo": [2, 22, 36, 39, 91, 165, 180, 205, 206, 255, 274, 318, 322, 362], "infer": 2, "explicitli": [2, 318, 320, 338, 339], "user": [2, 3, 4, 5, 6, 43, 111, 274, 318, 328, 329, 336, 338, 339, 342, 343, 344, 345, 346], "varibl": 2, "fals": [2, 10, 13, 17, 18, 21, 22, 26, 27, 28, 34, 38, 40, 42, 44, 48, 53, 61, 68, 78, 80, 87, 90, 98, 102, 103, 104, 121, 125, 132, 133, 139, 140, 143, 144, 145, 146, 152, 153, 156, 157, 159, 160, 161, 162, 163, 184, 198, 200, 208, 216, 219, 225, 232, 233, 246, 248, 249, 251, 252, 255, 260, 261, 265, 274, 282, 290, 291, 293, 298, 301, 310, 317, 326, 328, 332, 342, 344, 346, 348, 356, 357, 358], "absenc": [2, 339], "correspond": [2, 13, 18, 22, 223, 317, 322, 339, 341, 342, 357], "file": [2, 14, 22, 59, 84, 111, 178, 180, 181, 182, 255, 256, 257, 268, 269, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 305, 318, 320, 322, 324, 326, 331, 332, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 354, 355, 359, 360, 361, 362], "attribut": [2, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 295, 297, 298, 301, 302, 303, 304, 305, 318, 323, 326, 328, 339, 343, 344, 345, 362], "elimin": [2, 3, 4, 6, 83, 136, 148, 152, 153, 161, 213, 220, 221, 236, 260, 318, 331, 341, 345], "vc": [2, 51, 192, 318, 326, 336, 338, 344], "mat": [2, 52, 83, 317, 318, 319, 325, 326, 336, 338, 344, 346, 355], "proport": [2, 43, 144, 145, 156, 159, 198, 202, 204, 225, 226, 241, 318, 344], "foce": [2, 18, 19, 42, 49, 191, 210, 211, 277, 318, 320, 332, 342, 344], "interact": [2, 18, 19, 42, 49, 178, 191, 210, 211, 318, 321, 322, 332, 339, 342, 344, 350, 363], "requir": [2, 3, 5, 81, 318, 320, 326, 335, 339, 347, 353, 354], "cmt": [2, 36, 39, 105, 109, 318], "dose": [2, 9, 10, 11, 12, 13, 20, 36, 38, 39, 47, 98, 105, 107, 109, 114, 115, 121, 125, 149, 160, 183, 189, 212, 227, 230, 318, 328], "creation": [2, 333, 345], "easili": [2, 342], "differenti": [2, 89, 342], "id": [2, 9, 10, 14, 20, 58, 70, 88, 90, 91, 99, 106, 110, 112, 114, 115, 118, 128, 132, 165, 178, 179, 182, 199, 206, 227, 265, 317, 318, 320, 328, 333, 340, 343, 344, 346, 357], "admid": [2, 9, 10, 11, 12, 13, 20, 32, 36, 39, 51, 81, 105, 109, 143, 166, 192, 212, 213, 217, 220, 221, 224, 228, 232, 235, 236, 239, 342, 344], "data": [2, 3, 6, 10, 22, 34, 92, 93, 94, 95, 96, 97, 112, 125, 178, 179, 182, 190, 202, 204, 208, 218, 226, 241, 254, 274, 289, 316, 318, 322, 328, 333, 338, 339, 341, 342, 344, 346, 350], "well": [2, 69, 155, 241, 322, 326, 331, 332, 336, 338, 339, 341, 344, 345, 347, 353, 354, 355, 359, 360, 362], "anoth": [2, 5, 13, 22, 32, 147, 307, 344], "assum": [2, 3, 5, 29, 43, 48, 292, 318, 333, 339, 346], "correct": [2, 14, 318, 339, 344, 363], "along": [2, 339], "wai": [2, 28, 43, 148, 152, 153, 161, 241, 318, 322, 324, 328, 332, 339, 341, 342, 354, 363], "featur": [2, 6, 260, 324, 326, 331, 332, 334, 336, 337, 338, 339, 347, 355, 359, 360, 361], "base": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 46, 58, 105, 267, 278, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 318, 325, 326, 331, 333, 336, 338, 339, 340, 342, 344, 345, 346, 347, 348, 353, 354, 355, 356, 359, 360], "check": [2, 10, 22, 27, 29, 78, 79, 80, 116, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 318, 322, 342, 344, 346, 347, 354, 363], "what": [2, 81, 339, 346, 350], "languag": [2, 124, 178, 260, 321, 326, 329, 334, 339, 345, 359, 361], "fo": [2, 3, 4, 6, 18, 42, 210, 211, 277, 318, 320, 331, 332, 341, 345, 350], "zo": [2, 3, 4, 6, 281, 288, 318, 322, 341, 345], "seq": [2, 3, 4, 6, 341, 345], "lagtim": [2, 3, 4, 6, 217, 228, 260, 318, 322, 341, 345], "ON": [2, 3, 4, 6, 339, 341, 345], "transit": [2, 3, 4, 6, 12, 130, 147, 224, 232, 260, 318, 341, 345], "10": [2, 3, 4, 6, 28, 46, 58, 70, 85, 93, 106, 110, 112, 114, 128, 190, 215, 218, 219, 229, 233, 237, 241, 243, 265, 282, 284, 316, 317, 326, 328, 331, 332, 333, 335, 336, 338, 339, 340, 341, 343, 344, 345, 353, 354, 355, 356, 357, 360, 363], "peripher": [2, 3, 4, 6, 12, 51, 129, 192, 224, 260, 281, 288, 318, 322, 331, 341, 344, 345, 360], "cat": [2, 3, 4, 5, 6, 40, 326, 341], "note": [2, 3, 4, 5, 6, 8, 10, 27, 39, 81, 82, 110, 119, 126, 127, 128, 225, 241, 290, 291, 292, 296, 299, 316, 328, 331, 336, 338, 343, 344, 346, 347, 356, 360], "overriden": 2, "ignor": [2, 13, 126, 127, 128, 178, 274, 318, 320, 344, 346], "soon": 2, "stai": [2, 29], "vice": 2, "versa": 2, "instanc": [2, 3, 4, 6, 146, 184, 274, 326, 341, 354], "below": [2, 3, 4, 5, 6, 10, 190, 218, 241, 254, 323, 324, 331, 332, 336, 338, 339, 345, 347, 354, 355, 359, 360], "might": [2, 6, 81, 322, 339, 350, 354, 363], "applic": [2, 83, 291, 310, 322, 339, 341, 350], "detail": [2, 241, 273, 276, 278, 279, 281, 283, 285, 322, 332, 339, 342, 345, 347, 353, 355, 359, 362], "singl": [2, 12, 14, 27, 29, 197, 240, 245, 259, 280, 287, 290, 292, 318, 320, 326, 329, 331, 333, 336, 339, 341], "manual": [2, 326, 328, 341], "execut": [2, 310, 318, 339], "outlin": 2, "exact": [2, 339], "henc": [2, 5], "visual": [2, 305], "extens": [2, 22, 292, 294, 328, 339, 342], "principl": [2, 5, 342], "question": [2, 321], "becom": [2, 240, 318, 320, 331, 350], "relat": [2, 7, 292, 296, 297, 299, 318, 321, 356], "acronym": 2, "determin": [2, 3, 5, 6, 162, 163, 198, 260, 278, 282, 336, 338, 339, 345, 354], "complet": [2, 5, 329], "chosen": [2, 214, 318, 331, 336, 344, 361], "number_of_candid": [2, 282, 354], "fraction": [2, 11, 201, 282, 316, 333, 354], "ucp": [2, 71, 77, 201, 282], "use_initial_estim": [2, 282, 354], "prefix_nam": [2, 282, 354], "previous": [2, 69, 72, 174, 175, 177, 318, 346], "usual": [2, 28, 324], "aim": [2, 339, 353], "oftentim": 2, "system": [2, 11, 12, 13, 32, 35, 66, 67, 69, 89, 92, 93, 95, 96, 97, 120, 121, 131, 137, 147, 149, 150, 151, 154, 155, 158, 160, 215, 237, 239, 296, 318, 320, 323, 324, 331, 337, 339, 342, 346], "rather": [2, 3, 4, 5, 6], "forcefulli": [2, 326], "pow": [2, 4, 40, 344], "power": [2, 40, 225, 241, 283, 339, 344, 350, 351, 353, 355], "due": [2, 3, 4, 6, 318, 355, 358], "miss": [2, 3, 4, 5, 6, 10, 106, 112, 318], "while": [2, 3, 4, 5, 6, 29, 322, 324, 326, 331, 344, 347, 361, 363], "statement": [2, 3, 4, 5, 6, 7, 8, 12, 22, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 81, 143, 166, 167, 168, 185, 187, 192, 195, 202, 203, 204, 207, 212, 213, 214, 217, 220, 221, 224, 225, 226, 228, 230, 232, 235, 236, 239, 241, 242, 243, 244, 253, 261, 318, 320, 326, 331, 339, 344, 350, 358], "exploratori": [2, 3, 4, 5, 6, 326, 341], "explor": [2, 3, 4, 5, 6, 336, 350], "heavili": 2, "analyz": 2, "pd": [2, 5, 10, 19, 41, 44, 50, 58, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 85, 88, 92, 93, 94, 95, 96, 97, 105, 106, 109, 110, 112, 114, 115, 117, 119, 123, 128, 132, 135, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 198, 199, 200, 201, 206, 207, 251, 252, 254, 263, 264, 265, 267, 287, 288, 289, 290, 295, 298, 302, 318, 328, 341, 347], "iov": [2, 29, 46, 119, 134, 157, 188, 279, 318, 320, 344, 353, 361], "tri": [2, 320, 345], "stage": [2, 326], "suggest": [2, 324, 337], "mechanist": [2, 3, 4, 5, 6, 318], "would": [2, 22, 34, 168, 316, 326, 331, 333, 336, 339, 344, 346, 350], "evalu": [2, 18, 42, 92, 93, 94, 95, 96, 97, 210, 211, 261, 277, 290, 298, 316, 318, 337, 342, 344, 350, 353, 357, 358], "avoid": [2, 318, 329, 339, 363], "them": [2, 91, 197, 198, 321, 336, 338, 339, 341, 345, 346, 355], "dure": [2, 3, 4, 6, 318, 324, 361, 363], "variou": [2, 81, 241, 288, 289, 298, 318, 320, 321, 324, 326, 329, 331, 332, 336, 337, 338, 345, 347, 350, 354, 355, 359, 360], "summari": [2, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 266, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 316, 318, 322, 326, 331, 332, 333, 336, 338, 345, 347, 351, 354, 355, 359, 360], "access": [2, 322, 326, 328, 331, 332, 336, 338, 339, 342, 344, 345, 346, 347, 354, 355, 359, 360, 363], "json": [2, 14, 269, 271, 291, 301, 318, 320, 322, 326, 328, 331, 332, 336, 338, 345, 347, 354, 355, 359, 360], "format": [2, 22, 82, 254, 318, 320, 323, 326, 329, 331, 332, 335, 336, 337, 338, 339, 342, 344, 345, 347, 349, 354, 355, 359, 360], "summary_tool": [2, 318, 326, 331, 332, 336, 338, 345, 347, 354, 355, 360], "candid": [2, 277, 281, 282, 318, 320, 322, 326, 331, 332, 347, 354, 355, 360, 361], "compar": [2, 267, 277, 316, 318, 326, 331, 332, 347, 350, 354, 355, 360, 361], "rank": [2, 6, 267, 278, 279, 281, 318, 320, 326, 331, 347, 354, 355, 358, 360, 361], "selected_model": 2, "nan": [2, 110, 252, 316, 318, 326, 331, 332, 333, 336, 338, 344, 345, 353, 354, 355, 356, 358, 360], "modelsearch_run7": 2, "depot": [2, 11, 12, 13, 48, 147, 155, 212, 228, 232, 318, 341, 344, 345], "2364": 2, "853749": 2, "iivsearch_run34": 2, "mdt": [2, 318, 344], "2397": 2, "309843": 2, "best_ruvsearch_2": [2, 355], "time_varying2": [2, 355], "iiv_on_ruv": [2, 283, 318, 351, 353, 355], "2496": 2, "804117": 2, "iovsearch_run6": [2, 338], "2619": 2, "709509": 2, "2645": 2, "684455": 2, "dofv": [2, 263, 264, 288, 316, 317, 318, 326, 351, 353, 354, 355], "n_param": [2, 326, 331, 338, 347, 354, 355, 360], "d_param": [2, 326, 331, 338, 347, 354, 355, 360], "000000": [2, 53, 62, 63, 64, 73, 326, 333, 336, 338, 343, 345, 347, 355, 360], "456094": 2, "11": [2, 70, 92, 93, 95, 106, 110, 112, 114, 128, 265, 316, 317, 322, 326, 333, 335, 336, 338, 339, 340, 343, 344, 345, 353, 356, 357, 360, 363], "99": [2, 53, 140, 178, 252, 316, 326, 342, 344], "494274": 2, "122": 2, "905392": 2, "25": [2, 70, 92, 95, 96, 99, 106, 112, 115, 128, 165, 206, 265, 316, 317, 326, 328, 336, 340, 343, 344, 345, 351, 353, 354, 357], "974946": 2, "modelsearch_run1": [2, 318], "modelsearch_run2": 2, "modelsearch_run3": 2, "modelsearch_run4": 2, "retries_run1": [2, 354], "retries_run2": [2, 354], "retries_run3": [2, 354], "retries_run4": [2, 354], "retries_run5": [2, 354], "2272": 2, "860804": 2, "35": [2, 70, 99, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 355, 357], "2091": 2, "335594": 2, "332746": 2, "516": 2, "332840": 2, "1089": 2, "2032": 2, "002236": 2, "2700": 2, "2530": 2, "976558": 2, "1663": 2, "2476": 2, "102607": 2, "2178": 2, "2600": 2, "287460": 2, "3740": 2, "2123": 2, "583364": 2, "2210": 2, "pop_cl_estim": [2, 326, 332, 338, 355], "40": [2, 70, 99, 106, 110, 112, 128, 132, 165, 190, 206, 227, 265, 316, 317, 328, 332, 340, 343, 344, 354, 356, 357], "63140": 2, "91": [2, 351, 353], "36500": 2, "505": 2, "27": [2, 70, 106, 112, 128, 132, 265, 316, 317, 326, 340, 343, 344, 345, 347, 355, 357], "36780": 2, "1078": 2, "46": [2, 70, 99, 106, 112, 128, 265, 316, 317, 332, 340, 343, 344, 357], "37230": 2, "2687": 2, "82": 2, "91807": 2, "1651": 2, "66": [2, 326, 351], "09260": 2, "2166": 2, "09": [2, 43, 50, 52, 204, 214, 226, 326, 336, 344, 345, 346, 347, 351], "88190": 2, "3728": 2, "76": [2, 58, 326], "26100": 2, "2196": 2, "26": [2, 70, 106, 112, 128, 265, 316, 317, 326, 338, 340, 343, 344, 353, 356, 357], "26170": 2, "pop_cl_s": 2, "pop_cl_rs": 2, "pop_vcage_rs": 2, "pop_clsex_estim": [2, 326], "pop_clsex_s": 2, "pop_clsex_rs": 2, "pop_mdtsex_estim": 2, "pop_mdtsex_s": 2, "pop_mdtsex_rs": 2, "pop_vcsex_estim": [2, 326], "pop_vcsex_s": 2, "pop_vcsex_rs": 2, "127": [2, 10, 336], "summary_error": [2, 326, 332, 336, 338, 345, 354], "summarize_error": [2, 318, 326, 332, 336, 338, 345, 354], "datafram": [2, 10, 19, 22, 28, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 85, 88, 92, 93, 95, 96, 97, 106, 110, 112, 169, 170, 171, 172, 173, 174, 175, 177, 180, 198, 199, 200, 201, 206, 251, 254, 263, 264, 265, 267, 287, 288, 289, 290, 295, 298, 301, 302, 318, 328, 350, 354], "messag": [2, 295, 318, 320, 326, 332, 336, 338, 345, 354], "index": [2, 14, 22, 28, 29, 32, 42, 57, 58, 69, 72, 79, 80, 115, 132, 186, 210, 211, 254, 276, 287, 290, 301, 317, 318, 333, 335, 342, 344, 354, 356, 363], "categori": [2, 10, 22, 40, 46, 179, 287, 326, 331, 332, 336, 338, 341, 345, 347, 354], "error_no": [2, 326, 332, 336, 338, 345, 354], "plot": [2, 170, 171, 172, 173, 174, 175, 176, 177, 254, 318, 333, 340, 350], "report": [2, 257, 318, 324, 337, 350], "panda": [2, 10, 14, 318, 328, 329, 350], "io": [2, 324, 329, 335], "style": 2, "styler": 2, "0x7f66c07aed50": 2, "nbsp": 2, "rse": [2, 316, 343, 358], "pop_cl": [2, 8, 316, 344], "0637": 2, "pop_vc": [2, 344], "6158": 2, "pop_mat": [2, 52, 344, 346], "0313": 2, "pop_qp1": [2, 344], "108": [2, 99, 115, 165, 206, 227, 328, 343, 344], "3610": 2, "pop_vp1": [2, 344], "2972": 2, "pop_mdt": [2, 344], "9278": 2, "time_vari": [2, 230, 283, 353, 355], "2106": 2, "iiv_vc": [2, 344], "1818": 2, "iiv_cl": [2, 21, 26, 29, 344, 346], "2668": 2, "iiv_cl_iiv_mdt": 2, "1068": 2, "iiv_mdt": 2, "3711": 2, "iiv_ruv1": 2, "1777": 2, "omega_iov_2": 2, "1395": 2, "1436": 2, "alt": [2, 170, 171, 172, 173, 174, 175, 176, 177, 254, 316, 333, 340], "layerchart": [2, 170, 171, 172, 173, 176, 316, 340], "run_structsearch": [2, 6, 331, 347, 354, 359, 360], "complex": [2, 6, 318, 324, 335, 360], "dvid": [2, 3, 5, 6, 10, 22, 48, 99, 116, 119, 144, 145, 156, 202, 204, 209, 214, 225, 226, 230, 318, 331, 342, 347, 351, 353, 355], "directeffect": [2, 5, 341, 347, 359], "Will": [3, 4, 5, 6, 52, 292, 293, 294, 354], "basic": [3, 5, 12, 29, 83, 84, 301, 318, 328, 331, 339, 341, 346, 362], "psc": [3, 318, 331], "addit": [3, 4, 5, 6, 10, 40, 43, 57, 61, 87, 98, 144, 145, 156, 159, 202, 204, 226, 241, 318, 326, 328, 332, 336, 339, 353, 355, 360, 361], "common": [3, 4, 5, 6, 10, 40, 72, 311, 334, 339, 362], "cover": [3, 4, 5, 6, 339, 345, 346, 349, 362], "aspect": [3, 4, 5, 6, 322, 336, 344, 353], "specif": [3, 4, 5, 6, 18, 22, 28, 57, 91, 198, 225, 258, 261, 318, 320, 326, 328, 336, 339, 341, 342, 345, 350, 359, 361], "directli": [3, 4, 6, 48, 110, 149, 292, 296, 299, 318, 320, 322, 329, 339, 342, 344, 350], "next": [3, 4, 6, 59, 318, 336, 339, 344, 345, 346, 355], "without": [3, 4, 6, 10, 13, 66, 67, 92, 93, 95, 96, 97, 120, 131, 137, 198, 294, 316, 318, 320, 324, 329, 331, 339, 342], "out": [3, 12, 29, 44, 78, 252, 318, 339, 342, 349, 354, 363], "rest": 3, "full": [3, 32, 85, 120, 131, 137, 231, 317, 318, 323, 333, 336, 338, 339, 345, 353], "reduced_stepwis": [3, 4, 6, 281, 288, 318, 322, 345], "iiv_strategi": [3, 4, 5, 6, 278, 281, 318, 320, 322, 336, 345], "absorption_delai": [3, 4, 6, 281, 318, 322, 345], "rank_typ": [3, 4, 5, 6, 267, 278, 279, 281, 320, 322, 336, 338, 345], "mix": [3, 4, 6, 46, 61, 153, 221, 267, 318, 329, 335, 338, 341, 342, 345, 350], "cutoff": [3, 4, 5, 6, 230, 263, 264, 265, 267, 278, 279, 281, 318, 320, 322, 336, 338, 345], "rerun": [3, 4, 5, 6, 361], "top_down_exhaust": [3, 4, 5, 6, 278, 336], "fullblock": [3, 4, 6, 278, 281, 318, 336, 345], "no_add": [3, 4, 5, 6, 278, 281, 318, 336, 345], "mbic": [3, 5, 6, 61, 278, 279, 281, 318], "keep": [3, 4, 5, 6, 18, 27, 190, 198, 278, 292, 318, 321, 329, 336, 339, 341], "twice": 3, "remain": [3, 4, 5, 6, 29, 99, 241, 321, 336, 339], "group": [3, 4, 5, 6, 28, 34, 169, 175, 198, 283, 320, 337, 355], "p_valu": [3, 4, 5, 6, 283, 320, 355], "05": [3, 4, 5, 6, 51, 62, 63, 64, 65, 73, 74, 75, 76, 192, 316, 320, 326, 343, 344, 353, 356], "list_of_paramet": [3, 4, 5, 6, 43, 46, 279, 320, 338], "distribut": [3, 4, 5, 6, 21, 26, 29, 46, 51, 69, 72, 85, 136, 168, 174, 177, 192, 197, 199, 200, 201, 240, 244, 279, 307, 316, 318, 320, 333, 339, 341, 345, 353, 354, 361], "p_forward": [3, 4, 5, 6, 276, 320, 326], "p_backward": [3, 4, 5, 6, 276, 320, 326], "01": [3, 4, 5, 6, 21, 29, 40, 83, 225, 252, 276, 320, 326, 344, 353, 356], "max_step": [3, 4, 5, 6, 276, 320, 326], "scm": [3, 4, 5, 6, 276, 318, 326, 350, 352], "forward": [3, 4, 5, 6, 276, 318, 320, 326, 356], "backward": [3, 4, 5, 6, 276, 290, 318, 320, 326, 356], "exp": [3, 4, 5, 6, 32, 40, 43, 178, 242, 243, 244, 276, 326, 344, 346], "earlier": [3, 4, 6, 339], "mechanisit": [3, 4, 5, 6], "dataset_path": [3, 4, 6, 83, 206, 344], "behind": 5, "ppp": 5, "fixat": 5, "Then": [5, 317, 333, 344], "result": [5, 6, 18, 29, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 85, 92, 93, 94, 95, 96, 97, 199, 200, 201, 251, 252, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 302, 304, 307, 310, 318, 321, 324, 337, 339, 346, 349, 350, 352, 358, 361, 362], "origin": [5, 6, 58, 98, 132, 255, 292, 296, 299, 316, 317, 318, 321, 324, 333, 339, 357], "attach": [5, 297, 339], "set_dataset": [5, 318], "expect": [5, 18, 61, 69, 72, 318, 321, 323, 339, 353], "recommend": [5, 292, 336, 363], "program": [5, 6, 320, 321, 335, 339], "till": [5, 6], "rais": [5, 6, 198, 252, 318, 354], "effectcomp": [5, 341, 347], "indirecteffect": [5, 341, 347], "pd_fullblock": [5, 278], "pd_iiv": [5, 341], "linear": [5, 40, 41, 44, 135, 150, 151, 162, 176, 207, 316, 317, 318, 329, 341, 342, 344, 347, 350, 352], "kei": [6, 113, 231, 267, 288, 296, 339, 355, 360], "drug_tot": [6, 231, 360], "target_tot": [6, 360], "treat": [6, 231, 321, 324, 339, 360], "mm": [6, 318, 341, 345], "smaller": [6, 358], "replac": [6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 33, 34, 39, 59, 197, 198, 209, 227, 239, 241, 303, 305, 306, 318, 320, 328, 329, 344, 346], "again": [6, 291, 363], "highest": [6, 316, 318, 333, 346], "overal": 6, "exist": [6, 13, 14, 32, 37, 39, 40, 57, 59, 84, 87, 111, 114, 241, 292, 293, 294, 318, 320, 323, 328, 338, 360, 361], "regardless": [6, 18, 225, 321, 339, 342], "less": [6, 27, 318, 360], "extra_model": [6, 285, 359, 360], "pass": [6, 42, 86, 210, 258, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 307, 339], "extra_model_reult": 6, "modelfit": [6, 262, 267, 280, 290, 292, 296, 297, 298, 299, 316, 318, 320, 362], "public": [7, 329], "modul": [7, 12, 318, 323, 328, 342, 344, 349, 363], "class": [7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 318, 322, 328, 335, 339, 342, 344], "transform": [7, 22, 38, 177, 202, 204, 208, 226, 241, 242, 243, 244, 318, 335, 345, 346, 353, 354, 362], "manipul": [7, 28, 328, 337, 344, 346, 362], "built": [7, 166, 262, 320, 324, 331, 337], "run": [7, 85, 174, 175, 177, 190, 225, 258, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 296, 304, 316, 317, 318, 327, 335, 337, 339, 340, 343, 349, 350, 353, 356, 357, 361, 363], "packag": [7, 320, 329, 335, 337, 339, 348, 363], "express": [8, 9, 11, 12, 13, 14, 20, 21, 26, 29, 32, 43, 66, 67, 69, 94, 99, 107, 120, 122, 131, 137, 141, 163, 202, 204, 215, 225, 226, 237, 238, 318, 320, 321, 339, 342, 350, 357], "sourc": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 321, 324, 337, 339, 342], "represent": [8, 260, 305, 328, 335, 346], "togeth": [8, 29, 217, 228, 324, 329, 333, 340, 355, 363], "expr": [8, 13, 29, 32, 41, 44, 99, 119, 131, 144, 145, 156, 163, 202, 203, 204, 207, 214, 215, 218, 225, 226, 230, 237, 238, 318], "free_symbol": [8, 9, 11, 12, 17, 20, 21, 26, 29, 31, 32], "free": [8, 9, 10, 11, 12, 20, 21, 22, 26, 29, 32, 231, 321, 339, 350, 360], "hand": [8, 12, 69], "side": [8, 12, 69, 208], "eta_cl": [8, 43, 46, 344, 346], "rhs_symbol": [8, 12, 31], "classmethod": [8, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 293, 295, 297, 301, 303, 305], "from_dict": [8, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 293, 295, 301], "kwarg": [8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 33, 34, 42, 210, 258, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 300, 301, 303, 305, 318], "sub": [8, 9, 11, 12, 17, 20, 21, 26, 29, 31, 32, 342], "substitut": [8, 9, 11, 12, 20, 21, 26, 29, 31, 32, 339, 344], "dict": [8, 9, 10, 14, 20, 21, 26, 28, 29, 32, 57, 71, 92, 93, 95, 96, 97, 102, 104, 107, 121, 122, 177, 196, 216, 219, 227, 231, 233, 249, 267, 274, 285, 292, 293, 296, 299, 300, 304, 305, 311, 328, 342], "old": [8, 32, 196, 318, 353], "new": [8, 10, 13, 14, 18, 21, 26, 27, 28, 29, 30, 32, 33, 38, 43, 46, 50, 52, 53, 82, 86, 87, 98, 102, 103, 104, 132, 196, 197, 198, 202, 204, 206, 214, 216, 218, 222, 225, 226, 248, 249, 252, 306, 307, 320, 321, 324, 326, 328, 336, 339, 341, 344, 345, 349, 353, 354, 355, 361], "pair": [8, 9, 12, 20, 21, 26, 29, 32, 40, 79, 227, 288, 320], "return": [8, 10, 12, 13, 14, 19, 22, 28, 29, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 299, 301, 305, 307, 310, 311, 318, 339, 344, 354, 359], "updat": [8, 13, 14, 22, 28, 32, 206, 215, 237, 251, 252, 255, 282, 318, 320, 324, 336, 337, 339, 344, 345, 346, 350, 355, 362, 363], "b": [8, 41, 44, 135, 203, 207, 339, 345, 358], "to_dict": [8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 293, 295, 301], "amount": [9, 10, 11, 12, 20, 41, 121, 318, 328, 331, 342, 345], "immut": [9, 10, 14, 17, 19, 20, 22, 27, 28, 29, 31, 32, 33, 34, 297, 301, 303, 305, 318, 344], "int": [9, 12, 13, 20, 32, 37, 42, 48, 57, 58, 61, 69, 72, 80, 86, 114, 116, 119, 126, 127, 129, 130, 144, 145, 156, 170, 171, 172, 173, 186, 190, 198, 199, 200, 201, 202, 204, 210, 211, 214, 224, 225, 226, 229, 230, 232, 254, 274, 275, 276, 280, 282, 283, 287, 298, 360], "amt": [9, 11, 12, 14, 20, 32, 37, 51, 81, 90, 91, 99, 106, 115, 121, 143, 165, 166, 167, 168, 178, 179, 192, 206, 212, 213, 217, 220, 221, 224, 227, 228, 232, 235, 236, 239, 328, 342, 344, 346], "unknown": [10, 163, 328], "unit": [10, 22, 141, 354], "ratio": [10, 276, 283, 318, 320, 328, 355], "datatyp": [10, 22, 180, 206], "float64": [10, 14, 68, 75, 76, 79, 94, 95, 96, 97, 115, 132, 262, 328, 342, 343, 344], "descriptor": [10, 14, 22, 37], "str": [10, 11, 12, 14, 21, 22, 26, 27, 29, 32, 34, 37, 40, 43, 45, 46, 49, 51, 53, 58, 69, 83, 87, 88, 90, 94, 99, 103, 111, 116, 119, 124, 134, 135, 136, 138, 141, 144, 145, 146, 156, 157, 163, 166, 169, 170, 171, 172, 173, 176, 177, 180, 181, 182, 184, 187, 188, 190, 192, 193, 194, 198, 201, 202, 203, 204, 206, 209, 214, 215, 218, 222, 224, 225, 226, 230, 231, 237, 238, 240, 241, 242, 243, 244, 247, 248, 254, 255, 256, 258, 259, 260, 261, 262, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 318], "colum": 10, "measur": [10, 321, 328, 339], "bool": [10, 13, 22, 27, 34, 37, 38, 40, 44, 48, 53, 61, 68, 78, 80, 87, 90, 98, 121, 125, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 198, 200, 214, 225, 226, 232, 251, 252, 255, 256, 261, 273, 274, 277, 282, 290, 291, 293, 298, 301, 310], "discret": [10, 328, 338], "union": [10, 116, 119, 144, 145, 156, 177, 202, 204, 214, 215, 225, 226, 230, 237], "label": [10, 318], "bar": [10, 333], "dtype": [10, 14, 58, 68, 71, 75, 76, 79, 80, 94, 95, 96, 97, 114, 115, 128, 132, 262, 328, 343, 344], "nomin": [10, 328], "ordin": [10, 328], "rang": [10, 88, 301, 341], "na": [10, 241], "int8": 10, "sign": [10, 243, 339], "bit": 10, "128": 10, "int16": 10, "16": [10, 58, 70, 93, 106, 112, 128, 226, 244, 265, 316, 317, 326, 336, 338, 339, 340, 343, 344, 351, 353, 356, 357, 360], "768": 10, "767": 10, "int32": [10, 14, 328], "147": 10, "483": 10, "648": 10, "647": [10, 336], "int64": [10, 58, 128, 344], "64": [10, 58], "223": [10, 327], "372": 10, "036": 10, "854": 10, "775": 10, "808": 10, "807": 10, "uint8": 10, "unsign": 10, "256": 10, "uint16": 10, "65": [10, 326], "535": 10, "uint32": 10, "294": 10, "967": 10, "295": 10, "uint64": 10, "18": [10, 70, 93, 99, 106, 112, 128, 265, 316, 317, 326, 336, 338, 340, 343, 344, 351, 353, 357], "446": 10, "744": [10, 94, 99, 114, 165, 206, 227, 328, 343, 344], "073": 10, "709": 10, "551": 10, "615": 10, "float16": 10, "binari": [10, 339], "float": [10, 27, 37, 43, 50, 52, 53, 60, 61, 79, 80, 83, 177, 190, 201, 218, 225, 230, 241, 254, 263, 264, 265, 267, 273, 274, 276, 278, 279, 281, 282, 283, 285, 298, 318], "6": [10, 70, 94, 99, 106, 112, 128, 132, 165, 206, 227, 265, 316, 317, 326, 328, 333, 336, 338, 339, 340, 343, 344, 345, 347, 353, 354, 355, 356, 357, 360], "55": [10, 70, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 345, 353, 357], "10\u2074": 10, "ye": 10, "float32": 10, "10\u00b3\u2078": 10, "10\u00b3\u2070\u2078": 10, "float128": 10, "10\u2074\u2079\u00b3\u00b2": 10, "nm": [10, 91, 245, 318, 320, 342], "tran": [10, 91, 245, 318, 320, 342], "date": [10, 88, 91, 245, 318, 320, 339, 363], "birth": 10, "human": [10, 301, 350], "lean": 10, "mass": 10, "fat": 10, "plasma": [10, 328, 350], "concentr": [10, 44, 110, 328, 350], "substanc": 10, "blood": 10, "subject": [10, 18, 106, 118, 289, 328, 339], "identifi": [10, 34, 326, 328, 336, 339, 353, 361], "uniqu": [10, 34, 59, 87, 198, 292, 307, 318, 320, 322, 344], "statist": [10, 69, 72, 243, 328, 333, 342], "interv": [10, 254, 328, 329], "ration": 10, "individu": [10, 22, 45, 68, 69, 70, 72, 85, 95, 96, 119, 120, 126, 127, 128, 132, 137, 174, 175, 176, 177, 187, 199, 200, 201, 251, 263, 264, 265, 288, 289, 298, 318, 326, 336, 339, 344, 350, 353], "max": [10, 40, 41, 44, 207, 220, 221, 316, 344, 347, 359], "idv": [10, 14, 58, 132, 171, 230, 328, 353], "independ": [10, 12, 58, 328, 339, 342, 344, 348, 353, 361], "rate": [10, 12, 13, 20, 44, 51, 83, 160, 212, 217, 228, 232, 235, 318, 322, 341], "infus": [10, 160, 228, 235, 318, 344], "interdos": 10, "ss": 10, "steadi": [10, 231, 318, 360], "state": [10, 28, 40, 231, 318, 331, 339, 347, 356, 358, 359, 360], "event": [10, 36, 105, 117, 227, 245, 318, 321, 339], "mdv": [10, 123, 318], "yet": [10, 322], "exactli": 10, "lloq": [10, 190, 218, 241, 274, 318, 320, 344], "blq": [10, 190, 218, 241, 283, 318], "unkown": 10, "hasn": 10, "custom": [10, 40, 43, 46, 214, 339, 350], "sympi": [10, 12, 21, 26, 29, 108, 116, 142, 163, 318, 329, 342, 350], "physic": [10, 141, 321, 328, 339], "recogn": [10, 223, 321, 339, 346], "static": [10, 14, 22, 303], "convert_datatype_to_pd_dtyp": 10, "convert": [10, 14, 19, 29, 32, 35, 82, 143, 168, 232, 301, 318, 320], "convert_pd_dtype_to_datatyp": 10, "get_all_categori": 10, "is_categor": 10, "is_numer": 10, "col1": 10, "col2": 10, "is_integ": 10, "integr": [10, 318, 320, 350], "properti": [10, 18, 21, 26, 27, 28, 30, 33, 339, 342], "lag_tim": [11, 13, 318], "bioavail": [11, 13, 38, 107, 183, 318, 341], "compartmentbas": 11, "compartment": [11, 12, 35, 318, 320, 342], "lag": [11, 13, 47, 122, 189, 318], "enter": [11, 339], "bolu": [11, 12, 32, 51, 81, 143, 166, 192, 212, 213, 217, 220, 221, 224, 232, 236, 239, 318, 342, 344], "comp": [11, 12, 318], "a_centr": [11, 12, 32, 41, 81, 89, 121, 143, 166, 207, 215, 220, 221, 226, 236, 342, 344], "alag": [11, 318], "a_depot": [11, 12], "builder": [12, 13, 305, 306], "graph": [12, 305, 320, 324, 331], "od": [12, 32, 35, 52, 66, 67, 69, 92, 93, 95, 96, 97, 120, 121, 131, 137, 147, 149, 150, 151, 154, 158, 160, 215, 223, 237, 239, 318, 320], "descib": 12, "compartmentalsystembuild": 12, "cb": [12, 13], "add_compart": [12, 13], "add_flow": [12, 13], "k12": [12, 232, 341], "k21": [12, 341], "vector": [12, 21, 142, 199, 200, 201, 317, 333, 342], "load_example_model": [12, 14, 19, 32, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 81, 82, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 110, 112, 114, 115, 116, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 261, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 318, 335, 343, 344], "pprint": 12, "ode_system": [12, 32, 41, 51, 192, 212, 213, 217, 220, 221, 224, 228, 232, 235, 236, 239, 318, 342, 344], "central_compart": 12, "outward": 12, "flow": [12, 13, 48, 51, 147, 155, 305, 339, 345], "support": [12, 18, 22, 32, 42, 43, 66, 67, 82, 83, 92, 93, 95, 96, 97, 120, 131, 137, 144, 145, 156, 210, 211, 212, 217, 228, 241, 276, 283, 307, 318, 320, 322, 326, 328, 329, 331, 332, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 354, 359, 361], "compartment_nam": 12, "compartmental_matrix": [12, 342], "matrix": [12, 18, 21, 29, 62, 63, 64, 65, 69, 72, 73, 74, 75, 76, 79, 142, 199, 200, 201, 298, 317, 318, 320, 333, 342, 344, 354, 358], "set_first_order_absorpt": [12, 52, 217, 228, 235, 318, 344], "dosing_compart": 12, "receiv": [12, 339], "equat": [12, 69, 89, 342, 344], "zero_order_input": 12, "zero": [12, 13, 80, 142, 158, 160, 161, 168, 215, 228, 235, 236, 237, 318, 322, 338, 341, 344, 345, 348, 358], "set_zero_order_absorpt": [12, 212, 217, 228, 318, 344, 363], "atom": 12, "http": [12, 317, 328, 329, 333, 335, 339, 355], "doc": [12, 324], "org": [12, 317, 319, 328, 333, 339, 355], "latest": [12, 318, 329, 335], "core": [12, 335, 342], "html": [12, 257, 329, 339], "find_compart": [12, 13, 41], "its": [12, 27, 32, 80, 88, 168, 288, 318, 320, 326, 328, 329, 335, 336, 337, 339, 342, 344, 358, 363], "find_compartment_or_rais": 12, "find_depot": 12, "outflow": 12, "unidirect": [12, 48, 147], "find_peripheral_compart": 12, "perihper": 12, "find_transit_compart": 12, "chain": 12, "distinguish": [12, 339], "get_bidirect": 12, "bidirect": 12, "interest": [12, 69, 321, 326, 339, 350], "get_compartment_inflow": 12, "go": [12, 144, 145, 156, 280, 290, 318, 328, 339, 344], "inflow": 12, "get_compartment_outflow": 12, "get_flow": 12, "destin": [12, 13, 255, 256, 292, 296, 299, 320], "ka": [12, 13, 45, 212, 228, 318, 338, 344], "get_n_connect": 12, "c": [13, 41, 44, 175, 207, 243, 319, 325, 332, 333, 338, 339, 344, 346, 355, 358], "compartmentalsystem": [13, 32, 318, 342], "newli": [13, 29, 338], "move_dos": 13, "move": [13, 252, 318], "remove_compart": 13, "remove_flow": 13, "set_bioavail": [13, 183], "set_dos": 13, "previou": [13, 27, 29, 32, 47, 85, 114, 143, 212, 228, 232, 235, 274, 289, 310, 318, 320, 339, 345, 360], "argument": [13, 42, 92, 93, 95, 96, 97, 119, 210, 258, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 297, 303, 318, 320, 331, 341, 358, 361, 363], "set_input": 13, "set_lag_tim": [13, 318], "force_absolute_path": 14, "sequenc": [14, 19, 28, 29, 32, 85], "metadata": [14, 292, 293, 296, 299, 300, 304, 318], "columninfo": 14, "regexp": 14, "descriptorix": 14, "dv_column": 14, "id_column": [14, 88], "idv_column": 14, "apgr": [14, 32, 37, 40, 81, 90, 91, 99, 106, 112, 125, 143, 146, 165, 166, 167, 168, 178, 179, 206, 227, 247, 328, 333, 342, 344, 346, 353], "fa1": [14, 90, 91, 99, 106, 165, 178, 179, 206, 227, 328, 344], "fa2": [14, 90, 91, 99, 106, 165, 178, 179, 206, 227, 328, 344], "intern": [14, 22, 318, 324, 342, 346, 350], "example_model": 14, "dta": [14, 178, 344, 346], "typeix": 14, "from_json": 14, "get_dtype_dict": 14, "read_json": 14, "read": [14, 180, 181, 182, 268, 269, 274, 291, 292, 293, 296, 299, 300, 304, 318, 322, 323, 328, 335, 339, 343, 349, 350, 352, 362], "set_column": 14, "col": 14, "set_dv_column": 14, "set_id_column": 14, "set_idv_column": 14, "set_typ": 14, "broadcast": 14, "to_json": [14, 301, 328], "recover": 16, "issu": [16, 25, 318, 324, 337, 363], "hashabl": 17, "level": [17, 21, 26, 29, 33, 34, 119, 157, 241, 318, 320, 322, 328, 337, 344, 350, 356, 362], "variabilitylevel": 17, "parameter_nam": [17, 29, 103, 246, 248, 318, 346], "definit": [17, 18, 22, 30, 32, 70, 200, 201, 265, 318, 320, 326, 333, 339, 341, 342, 354], "varianc": [17, 21, 26, 29, 68, 69, 72, 197, 214, 252, 336, 342, 354, 361], "abstract": [17, 31, 296, 304, 317, 319, 329, 337, 342], "evalf": [17, 21, 26], "get_covari": [17, 21, 26, 29], "name1": [17, 21, 26, 176], "name2": [17, 21, 26, 176], "get_vari": [17, 21, 26], "latex_str": [17, 21, 26], "align": [17, 21, 26, 342, 344], "maximum_evalu": [18, 332, 342, 344], "laplac": [18, 42, 210, 211, 277, 318, 320, 332, 342, 344], "isampl": [18, 42, 57, 210, 318, 332, 342, 344], "niter": [18, 42, 57, 210, 318, 332, 342, 344], "auto": [18, 19, 318, 332, 342, 344], "keep_every_nth_it": [18, 19, 318, 332, 342, 344], "residu": [18, 29, 54, 55, 97, 139, 170, 171, 193, 194, 264, 265, 288, 298, 318, 355, 357, 361], "predict": [18, 22, 54, 55, 95, 96, 120, 125, 137, 170, 172, 173, 175, 193, 194, 263, 264, 265, 288, 298, 318, 327, 353], "solver": [18, 30, 223, 229, 277, 318, 320, 361], "solver_rtol": [18, 30, 229], "solver_atol": [18, 30, 229], "tool_opt": [18, 19, 30, 42, 57, 210, 229, 322, 342, 344], "eta_deriv": 18, "epsilon_deriv": 18, "oper": [18, 30, 40, 43, 82, 88, 113, 298, 299, 300, 302, 320, 323, 324, 326, 329, 339, 342, 344, 349, 358], "epsilon": [18, 29, 66, 67, 92, 93, 179, 214, 225, 234, 241, 253, 318, 329, 344], "deriv": [18, 30, 141, 318, 324, 326, 344, 347], "eta": [18, 29, 32, 43, 46, 66, 67, 68, 70, 85, 92, 93, 95, 168, 174, 177, 178, 179, 182, 187, 188, 214, 240, 242, 243, 244, 298, 318, 329, 333, 336, 338, 341, 342, 346, 353], "preserv": [18, 29, 339], "comput": [18, 324, 325, 326, 339, 354], "similar": [18, 316, 332, 339, 345, 354, 355], "everi": [18, 241, 328, 339], "nth": 18, "iter": [18, 19, 32, 69, 169, 198, 200, 278, 283, 298, 318, 336, 344, 351, 354, 355], "laplacian": 18, "cross": [18, 339], "product": [18, 44, 321, 332, 339, 341, 347], "gradient": [18, 66, 67, 92, 93, 298, 318, 358], "fim": 18, "design": [18, 325, 339, 341, 342, 350], "append": [18, 57, 318], "uncondit": [18, 178, 344], "termin": [18, 298, 339, 358], "print": [18, 78, 131, 178, 179, 266, 301, 318, 344], "eigenvalu": [18, 151], "precond": 18, "precondit": 18, "cycl": 18, "supported_method": [18, 332], "frozenset": 18, "bay": [18, 42, 210, 211, 277, 320], "imp": [18, 42, 210, 211, 277, 318, 320, 332, 344], "impmap": [18, 42, 210, 211, 277, 318, 320], "ITS": [18, 42, 210, 211, 277, 318, 320, 338, 345], "saem": [18, 42, 210, 211, 277, 318, 320], "supported_parameter_uncertainty_method": 18, "to_datafram": [19, 28, 295], "overview": [19, 295, 316, 320, 330, 342, 356], "estimation_step": [19, 22, 42, 49, 54, 55, 57, 186, 191, 193, 194, 210, 211, 229, 318, 342, 344], "doctest": 19, "ellipsi": 19, "durat": [20, 228, 235, 344], "mutual": [20, 338, 341], "exclus": [20, 339, 341], "d1": [20, 228, 235, 318, 344], "r1": 20, "symbolc": 20, "dur": 20, "joint": [21, 29, 46, 85, 240, 279, 333, 338, 344], "omega_cl": [21, 26, 29], "omega_v": [21, 29], "corr_cl_v": [21, 29], "omega_cl_v": [21, 29], "dist": [21, 26, 29, 318, 324, 342], "iiv_v": [21, 29], "itself": [21, 26, 339], "omega1": 21, "omega2": 21, "omega_new": [21, 26, 29], "random_vari": [22, 85, 240, 342, 344, 363], "dependent_vari": [22, 318, 342], "y": [22, 28, 32, 81, 116, 141, 143, 166, 178, 179, 182, 185, 202, 204, 214, 225, 226, 230, 241, 253, 342, 344, 346], "observation_transform": [22, 318], "estimationstep": [22, 42, 49, 191, 210, 211, 318, 332, 342], "parent_model": [22, 318, 326, 331, 332, 336, 338, 345, 347, 354, 355, 360], "initial_individual_estim": 22, "filename_extens": 22, "value_typ": 22, "map": [22, 35, 328], "model_cod": [22, 318], "parent": [22, 267, 288, 289, 297, 307, 331, 332], "randomvari": [22, 318, 342], "likelihood": [22, 60, 61, 241, 276, 283, 320, 355], "2ll": [22, 60, 61, 318], "log": [22, 40, 41, 43, 61, 168, 202, 204, 207, 208, 226, 297, 298, 318, 328, 333], "record": [22, 58, 92, 93, 94, 95, 96, 97, 98, 169, 190, 218, 298, 318, 324, 346], "has_same_dataset_a": 22, "parse_model": 22, "pars": [22, 318, 337, 346, 349, 361], "parse_model_from_str": 22, "update_sourc": [22, 318, 346], "nonmem": [22, 81, 82, 91, 126, 127, 128, 206, 223, 280, 318, 319, 322, 324, 335, 337, 342, 343, 344, 350, 361], "dummypath": [22, 344], "write_fil": 22, "forc": [22, 29, 87, 200, 201, 251, 255, 256, 318, 320, 336, 338, 339], "write": [22, 255, 256, 291, 318, 324, 325, 326, 339, 349, 362], "extern": [22, 268, 324, 328, 329, 335, 349, 350], "msg": 24, "syntax": [24, 318, 341], "normal": [26, 29, 34, 46, 71, 77, 168, 197, 201, 282, 333, 338, 339], "init": [27, 28, 40, 53, 104, 216, 249, 252, 320, 333, 342, 354], "inf": [27, 344], "param": 27, "tvcl": [27, 32, 37, 43, 46, 81, 94, 143, 166, 167, 168, 178, 179, 187, 333, 342, 344, 346], "005": 27, "boolean": [27, 28, 98, 103, 104, 198, 208, 214, 248, 249, 263, 264, 265, 328, 358], "constrain": [27, 329, 342], "unfix": [27, 102, 103, 104, 216, 246, 248, 249, 318], "back": [27, 77, 318], "greater": [27, 358], "altern": [27, 243, 324, 339], "constructor": [27, 318], "collect": [28, 29, 322, 333, 339], "displai": [28, 89, 202, 318, 333, 339], "summar": [28, 287, 289, 290, 333, 340], "par1": 28, "par2": 28, "pset": 28, "fixed": [28, 102], "nonfix": 28, "set_fix": 28, "set_initial_estim": [28, 318, 344], "100": [28, 40, 42, 57, 199, 210, 244, 254, 316, 320, 326, 331, 343, 344, 348, 356], "eta_level": 29, "epsilon_level": 29, "act": [29, 209], "variabilityhierarchi": 29, "contin": 29, "hierarchi": [29, 33], "rv": [29, 85, 138, 195, 240, 342, 363], "normaldistribut": [29, 342], "covariance_matrix": [29, 62, 69, 72, 74, 75, 200, 298, 316, 318, 343], "nrv": 29, "variance_paramet": 29, "rv1": 29, "rv2": 29, "get_rvs_with_same_dist": 29, "join": [29, 240, 318, 321], "ind": 29, "fill": [29, 318], "name_templ": 29, "param_nam": 29, "cov": [29, 40, 62, 69, 70, 72, 74, 75, 200, 317, 318, 324, 332, 333, 344], "taken": [29, 98, 106, 112, 245, 292, 328, 331, 333, 354], "templat": [29, 40, 43, 84, 323], "overrid": [29, 318, 323, 341], "dist1": 29, "dist2": 29, "_": [29, 289, 317, 333], "unjoin": 29, "nearest_valid_paramet": 29, "parameter_valu": 29, "small": 29, "parameters_sdcorr": 29, "sd": [29, 68, 344, 353, 357], "corr": [29, 64, 73, 353], "replace_with_sympy_rv": 29, "stat": [29, 32, 322], "std": [29, 344], "rng": [29, 69, 72, 86, 199, 200, 201, 274, 282], "jointnormaldistribut": [29, 342], "validate_paramet": 29, "seri": [29, 58, 64, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 94, 95, 96, 97, 105, 109, 114, 115, 117, 123, 128, 132, 176, 177, 200, 201, 202, 241, 243, 252, 298, 318, 343], "matric": [29, 70, 201, 318, 329, 343], "semidefinit": [29, 318, 329, 354], "64206": [30, 229], "simul": [30, 229, 254, 284, 297, 302, 318, 350, 357], "replic": [30, 229], "signific": [32, 80, 278, 279, 281, 318, 339, 356, 358], "after_od": [32, 226], "s\u2081": [32, 37, 81, 143, 166, 167, 168, 179, 226, 342], "eps\u2081": [32, 81, 131, 143, 166, 179, 185, 202, 214, 225, 230, 241, 253, 342], "ipr": [32, 54, 81, 95, 143, 166, 170, 172, 178, 179, 225, 226, 318, 342, 343, 344, 357], "ir": [32, 81, 143, 166, 178, 179, 226, 342, 344], "iwr": [32, 81, 143, 166, 178, 179, 226, 342, 344], "before_od": [32, 37, 40, 167, 168, 242, 243, 244], "btime": [32, 37, 81, 143, 166, 167, 168, 178, 179, 342, 344], "tad": [32, 37, 56, 81, 143, 166, 167, 168, 178, 179, 318, 342, 344, 353], "ptvcl": [32, 37, 40, 53, 62, 63, 64, 65, 71, 73, 74, 75, 76, 79, 80, 81, 102, 103, 104, 140, 143, 166, 167, 168, 178, 179, 200, 201, 216, 219, 233, 238, 242, 243, 244, 246, 248, 249, 252, 262, 342, 343, 344], "tvv": [32, 37, 81, 143, 166, 167, 168, 178, 179, 187, 333, 342, 344, 346], "ptvv": [32, 37, 53, 62, 63, 64, 65, 71, 73, 74, 75, 76, 79, 80, 81, 140, 143, 166, 167, 168, 178, 179, 200, 201, 248, 249, 252, 262, 342, 343, 344], "theta\u2083": [32, 37, 81, 143, 166, 167, 168, 179, 342], "eta\u2081": [32, 37, 81, 85, 131, 143, 166, 167, 168, 179, 240, 342], "\u212f": [32, 37, 50, 52, 81, 143, 166, 167, 168, 214, 342, 344], "eta\u2082": [32, 37, 81, 85, 131, 143, 166, 167, 168, 179, 240, 342], "whole": [32, 320, 322, 328, 339], "s1": [32, 157, 178, 344, 346], "symbol_or_stat": 32, "direct_depend": 32, "direct": [32, 305, 326, 339, 341, 347, 356, 359], "find_assign": [32, 43, 45, 46, 50, 52, 185, 187, 202, 203, 204, 207, 214, 225, 230, 241, 253], "find_assignment_index": 32, "full_express": [32, 40, 242, 243, 244], "expand": [32, 98], "reassign": 32, "sypmpi": 32, "remove_symbol_definit": 32, "elsewher": 32, "longer": [32, 318], "make": [32, 81, 119, 167, 185, 196, 198, 276, 318, 324, 329, 338, 339, 341, 342, 345, 361, 363], "sure": [32, 196, 318, 339, 363], "unless": [32, 301, 326, 339], "func": [35, 303], "presenc": [36, 39, 105, 109], "correctli": [36, 39, 105, 318], "get_admid": [36, 39], "get_cmt": [36, 39, 318, 344], "p": [37, 267, 276, 283, 316, 317, 318, 320, 326, 333, 344, 355, 356], "alreadi": [37, 40, 84, 209, 215, 237, 318, 320, 324, 326, 338, 339, 345], "noth": [37, 59, 190, 241, 339], "texpr": [37, 94, 238], "allometri": [37, 273, 274, 318, 361], "remove_covariate_effect": [37, 318, 344], "allo_cl": 37, "allo_v": 37, "add_paramet": [38, 318], "logit_transform": 38, "logit": [38, 43, 318], "remove_bioavail": [38, 318], "allow_nest": [40, 318], "lin": 40, "coveff": [40, 87], "median": [40, 69, 72, 316, 318, 344, 350], "001": [40, 80, 252, 276, 283, 318, 326, 344, 355, 356, 358], "equal": [40, 46, 58, 198, 214, 324, 358], "minimum": [40, 329, 347], "000": [40, 254, 343], "frac": [40, 41, 44, 202, 204, 207, 317, 342, 344, 357, 360], "min": [40, 202, 204, 316, 344], "piecewis": [40, 318], "hockei": 40, "stick": 40, "piece_lin": 40, "theta1": [40, 344], "theta2": [40, 344], "mai": [40, 241, 322, 336, 338, 339, 344, 345], "abbrevi": [40, 43, 318, 320, 324, 346], "multipli": [40, 43, 214, 316, 344], "pop_clapgr": 40, "cdot": [41, 43, 44, 51, 192, 207, 333, 342, 344, 360], "slope": [41, 44, 135, 207], "bigg": [41, 207], "e_": [41, 44, 207], "ec_": [41, 44, 207], "50": [41, 44, 70, 106, 112, 128, 207, 265, 316, 317, 340, 343, 344, 345, 347, 353, 357, 359], "biggl": [41, 207, 360], "lbrace": [41, 207], "quad": [41, 207], "leq": [41, 207, 333], "atop": [41, 207], "els": [41, 78, 207, 241, 318, 344, 358], "sigmoid": [41, 44, 207], "bigl": [41, 207, 360], "c_0": [41, 207], "loglin": [41, 207], "a_effect": 41, "ke0": 41, "idx": [42, 57, 186, 210, 211, 363], "opt": [42, 57, 210, 323], "1000": [42, 57, 94, 210, 333], "len": [42, 57, 186, 190], "set_estimation_step": [42, 49, 54, 55, 57, 186, 191, 193, 194, 211, 318, 344, 363], "remove_estimation_step": [42, 49, 54, 55, 57, 191, 193, 194, 210, 211, 344], "append_estimation_step_opt": [42, 49, 54, 55, 186, 191, 193, 194, 210, 211, 318, 344], "add_parameter_uncertainty_step": [42, 54, 55, 57, 186, 191, 193, 194, 210, 211, 344], "remove_parameter_uncertainty_step": [42, 49, 54, 55, 57, 186, 193, 194, 210, 211, 344], "set_evaluation_step": [42, 49, 57, 186, 191, 210, 344], "initial_estim": [43, 50, 52], "eta_nam": [43, 46, 214], "prop": [43, 344], "rescal": 43, "re_log": 43, "phi": [43, 318, 322, 324, 344], "remove_iiv": [43, 46, 50, 52, 188, 318, 344, 346], "add_pk_iiv": [43, 46, 187, 188, 318, 344, 345], "add_iov": [43, 50, 52, 187, 188, 318, 344], "remove_iov": [43, 46, 50, 52, 187, 318, 344], "prod": 44, "indirect": [44, 339, 341, 347], "turnov": 44, "c_c": 44, "impact": [44, 353], "degrad": [44, 341, 347], "respons": [44, 339], "dr": 44, "dt": [44, 89, 344, 360], "k_": [44, 360], "inhibit": 44, "stimul": 44, "r_0": [44, 360], "pop_ka": [45, 53], "occ": [46, 279, 320, 326, 338], "disjoint": [46, 279, 338], "accept": [46, 126, 127, 128, 320, 339], "explicit": [46, 279, 318, 320, 321, 338, 341], "copi": [46, 133, 139, 140, 318, 322, 336, 338, 339, 344], "add_iiv": [46, 50, 52, 187, 188, 318, 344, 346], "set_transit_compart": [47, 189, 318, 344], "remove_lag_tim": [47, 318, 344], "drug_dvid": 48, "presystem": [48, 155, 318, 331], "present": [48, 105, 109, 117, 320, 326, 328, 331, 333, 339, 345, 361], "presystemet": 48, "add_estimation_step": [49, 54, 55, 57, 186, 191, 193, 194, 210, 211, 318, 344], "set_direct_effect": [50, 135, 318], "ec_50": [50, 274, 285], "ec\u2085\u2080": 50, "pop_ec_50": 50, "eta_ec_50": 50, "parameter": 51, "qpn": 51, "vpn": 51, "volumn": 51, "mathsf": [51, 192], "qp1": [51, 192, 318, 344], "vp1": [51, 192, 344], "qp2": [51, 192, 318], "vp2": [51, 192], "peripheral1": [51, 192, 224, 344], "v1": [51, 192, 224, 344], "v2": [51, 192, 224, 344], "set_peripheral_compart": [51, 192, 318, 344], "remove_peripheral_compart": [51, 224, 318, 344], "eta_mat": [52, 344], "004693": [53, 71, 140, 333, 342], "009160": [53, 140, 342], "theta_3": [53, 62, 63, 64, 65, 71, 73, 74, 75, 76, 79, 80, 140, 200, 201, 248, 249, 252, 262, 342, 343, 344], "100000": [53, 140, 332, 342, 344], "ivcl": [53, 62, 63, 64, 65, 71, 73, 74, 75, 76, 79, 80, 85, 133, 178, 179, 200, 201, 240, 249, 252, 262, 316, 333, 342, 343, 344, 346], "030963": [53, 133, 333, 342], "ivv": [53, 62, 63, 64, 65, 71, 73, 74, 75, 76, 79, 80, 85, 133, 178, 179, 200, 201, 240, 249, 252, 262, 316, 333, 342, 343, 344], "031128": [53, 133, 178, 252, 333, 342, 344, 346], "sigma_1_1": [53, 62, 63, 64, 65, 71, 73, 74, 75, 76, 80, 139, 200, 201, 249, 252, 262, 316, 342, 343, 344], "013241": [53, 139, 178, 252, 262, 333, 342, 343, 344, 354], "cipredi": [54, 344], "remove_predict": [54, 55], "remove_residu": [54, 55], "cwre": [55, 170, 171, 178, 288, 289, 343, 344, 353, 355], "nbin": [58, 254], "bin": [58, 170, 171, 172, 173, 254, 283, 353, 363], "equal_width": [58, 254], "width": 58, "equal_numb": [58, 254], "want": [58, 321, 324, 326, 336, 337, 338, 339, 344, 345, 346, 349], "edg": [58, 305], "boundari": [58, 318, 338, 345, 358], "421": 58, "527": 58, "118": [58, 199, 318, 333], "135": [58, 132, 343, 344, 353], "512": [58, 327], "203": 58, "475": 58, "510": 58, "133": 58, "267": [58, 343], "155": [58, 92, 93, 95, 96, 97, 127, 132, 343, 344], "arrai": [58, 328, 341, 342, 344], "39": [58, 70, 106, 112, 128, 265, 316, 317, 326, 338, 340, 343, 344, 353, 356, 357], "88": 58, "78": 58, "117": 58, "156": 58, "52": [58, 70, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 345, 356, 357], "195": 58, "234": [58, 336], "28": [58, 70, 92, 95, 96, 106, 112, 128, 241, 254, 265, 316, 317, 326, 336, 339, 340, 343, 344, 347, 353, 357], "273": 58, "312": 58, "04": [58, 62, 63, 64, 65, 73, 74, 75, 76, 316, 326, 338, 343, 353, 356], "350": 58, "92": [58, 326], "389": 58, "increas": [59, 282, 324, 354], "until": [59, 290, 339, 363], "do": [59, 200, 316, 318, 320, 324, 333, 339, 346, 355, 358, 363], "run2": [59, 222, 344], "run3": [59, 344], "n_estimated_paramet": [60, 61], "fit": [60, 61, 177, 241, 266, 280, 288, 290, 296, 318, 339, 342, 344, 354, 355, 362, 363], "multiple_test": 61, "mult_test_p": [61, 267], "mult_test_": 61, "variat": 61, "n_random_paramet": 61, "n_individu": 61, "n_fixed_paramet": 61, "n_observ": 61, "n_estimated_iiv_omega_paramet": 61, "penalti": 61, "n_predictor": 61, "n_expected_model": 61, "mult_test": 61, "load_example_modelfit_result": [61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 92, 93, 94, 95, 96, 97, 170, 171, 172, 173, 174, 175, 176, 199, 200, 201, 251, 252, 261, 265, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 290, 318], "611": 61, "7071686183284": 61, "616": [61, 318, 343], "536606983396": 61, "610": 61, "7412809453149": 61, "594": 61, "431131169692": 61, "411510e": [62, 65, 74, 75, 343], "08": [62, 64, 65, 74, 75, 326, 343], "010000e": [62, 65, 74, 75, 343], "000002": [62, 64, 65, 74, 75, 316, 343], "000001": [62, 64, 65, 69, 72, 74, 75, 316, 338, 343, 345], "538630e": [62, 64, 65, 74, 75, 343], "07": [62, 63, 64, 65, 73, 74, 75, 76, 316, 326, 336, 338, 343, 353, 354, 356], "178090e": [62, 65, 74, 75, 343], "233530e": [62, 65, 74, 75, 343], "000804": [62, 64, 65, 74, 75, 326, 343], "000050": [62, 64, 65, 74, 75, 343], "171840e": [62, 65, 74, 75, 343], "461760e": [62, 65, 74, 75, 343], "665010e": [62, 65, 74, 75, 343], "06": [62, 64, 65, 74, 75, 316, 322, 326, 336, 338, 343, 353, 356], "040250e": [62, 65, 74, 75, 343], "007016": [62, 64, 65, 74, 75, 343], "000108": [62, 64, 65, 74, 75, 343], "944800e": [62, 65, 74, 75, 343], "932950e": [62, 65, 74, 75, 343], "093430e": [62, 65, 74, 75, 343], "981380e": [62, 64, 65, 74, 75, 343], "000180": [62, 64, 65, 74, 75, 343], "856650e": [62, 65, 74, 75, 343], "867230e": [62, 65, 74, 75, 343], "000039": [62, 64, 65, 74, 75, 343], "000019": [62, 64, 65, 74, 75, 343], "589820e": [62, 64, 65, 74, 75, 343], "685650e": [62, 65, 74, 75, 343], "000029": [62, 64, 65, 74, 75, 343], "000005": [62, 64, 65, 74, 75, 343], "195640e": [62, 65, 74, 75, 343], "007099": [62, 63, 64, 73, 343], "094640": [62, 63, 64, 73, 343], "388059": [62, 63, 64, 73, 79], "097981": [62, 63, 64, 73, 343], "170820": [62, 63, 64, 73, 343], "356899": [62, 63, 64, 73, 79], "138062": [62, 63, 64, 73, 343], "356662": [62, 63, 64, 73, 79, 343], "238441": [62, 63, 64, 73], "096515": [62, 63, 64, 73], "062991": [62, 63, 64, 73, 343], "153616": [62, 63, 64, 73, 343], "185111": [62, 63, 64, 73, 343], "159170": [62, 63, 64, 73, 343], "027495": [62, 63, 64, 73, 343], "calculate_se_from_cov": [62, 63, 64, 65, 73, 74, 76, 318], "calculate_se_from_prec": [62, 63, 64, 65, 73, 74, 75], "precis": [62, 63, 64, 65, 73, 74, 75, 76, 298, 318, 339], "calculate_cov_from_prec": [62, 63, 64, 73, 74, 75, 76], "calculate_cov_from_corrs": [62, 63, 65, 73, 74, 75, 76, 318], "calculate_prec_from_cov": [62, 63, 64, 65, 73, 75, 76], "calculate_prec_from_corrs": [62, 63, 64, 65, 74, 75, 76], "calculate_corr_from_prec": [62, 64, 65, 73, 74, 75, 76], "precision_matrix": [63, 65, 76, 298, 343], "prec": [63, 65, 76], "995567e": [63, 65, 74, 76], "22660": [63, 65, 73, 74, 76, 343], "028196": [63, 65, 74, 76], "16057": [63, 65, 73, 74, 76, 343], "855248": [63, 65, 74, 76], "203511": [63, 65, 73, 74, 76, 343], "614428": [63, 65, 74, 76], "39474": [63, 65, 73, 74, 76, 343], "250514": [63, 65, 74, 76], "820118": [63, 65, 74, 76], "299536": [63, 65, 74, 76], "266003e": [63, 65, 74, 76], "2129": [63, 65, 73, 74, 76, 343], "904642": [63, 65, 74, 76], "260": [63, 65, 73, 74, 76, 343], "176234": [63, 65, 74, 76], "375": [63, 65, 73, 74, 76, 343], "266233": [63, 65, 74, 76], "2800": [63, 65, 73, 74, 76, 343], "816246": [63, 65, 74, 76], "7718": [63, 65, 73, 74, 76, 343], "769557": [63, 65, 74, 76], "605786e": [63, 65, 74, 76], "187": [63, 65, 73, 74, 76, 343], "038903": [63, 65, 74, 76], "177": [63, 65, 73, 74, 76, 318, 343, 356], "207683": [63, 65, 74, 76], "205": [63, 65, 73, 74, 76, 343], "808480": [63, 65, 74, 76], "2225": [63, 65, 73, 74, 76, 343], "150449": [63, 65, 74, 76], "035116e": [63, 65, 74, 76], "7527": [63, 65, 73, 74, 76, 343], "530027": [63, 65, 74, 76], "2462": [63, 65, 73, 74, 76, 343], "974821": [63, 65, 74, 76], "9977": [63, 65, 73, 74, 76, 343], "488860": [63, 65, 74, 76], "947425e": [63, 65, 74, 76], "22343": [63, 65, 73, 74, 76, 343], "198618": [63, 65, 74, 76], "9370": [63, 65, 73, 74, 76, 343], "758371": [63, 65, 74, 76], "201183e": [63, 65, 74, 76], "249847": [63, 65, 74, 76, 343], "177845": [63, 65, 74, 76], "calculate_corr_from_cov": [63, 64, 65, 73, 74, 75, 76, 318], "se": [64, 73, 325, 326, 343], "correlation_matrix": [64, 73, 79, 298, 343], "standard_error": [64, 73, 298, 343], "411512e": 64, "009998e": 64, "178111e": 64, "233518e": 64, "171834e": 64, "461762e": 64, "665011e": 64, "040245e": 64, "944801e": 64, "932957e": 64, "093431e": 64, "856651e": 64, "867245e": 64, "685661e": 64, "195664e": 64, "pheno_linear": [66, 67, 92, 93, 95, 96, 97, 120, 131, 137, 162, 166, 176, 262, 267], "d_eps1": [66, 131], "d_epseta1_1": [66, 131], "oeta1": [66, 120, 137], "d_epseta1_2": [66, 131], "eta_2": [66, 68, 70, 85, 120, 199, 240, 343, 344], "oeta2": [66, 120, 137], "calculate_eta_gradient_express": [66, 318], "d_eta1": [67, 120, 131, 137], "d_eta2": [67, 120, 131, 137], "calculate_epsilon_gradient_express": [67, 318], "parameter_estim": [68, 69, 70, 72, 80, 94, 96, 97, 177, 200, 201, 252, 262, 298, 316, 318, 342, 343], "individual_estim": [68, 85, 92, 93, 95, 174, 177, 199, 251, 298, 318, 343], "shrinkag": [68, 70], "deviat": [68, 253, 298, 316, 333, 340, 343, 344, 353, 357], "pe": [68, 69, 70, 72, 94, 96, 200, 201], "ie": [68, 199, 251], "720481": 68, "240295": 68, "471305": 68, "128389": 68, "calculate_individual_shrinkag": [68, 318], "expr_or_expr": 69, "arbitrari": [69, 72], "solut": [69, 239], "th": [69, 317, 333], "95": [69, 254, 316, 333, 344], "percentil": [69, 316, 333], "create_rng": [69, 72, 199, 200, 201], "k": [69, 317, 318, 324, 326, 333], "stderr": [69, 72, 316, 322], "p5": [69, 72, 333], "004234": [69, 72], "001138": [69, 72], "004907": [69, 72], "001247": [69, 72], "p95": [69, 72, 333], "individual_estimates_covari": [70, 199, 298, 318, 343], "ieta_shr": 70, "847789": 70, "256473": 70, "796643": 70, "210669": 70, "755025": 70, "226957": 70, "764541": 70, "216405": 70, "816192": 70, "203974": 70, "778108": 70, "210992": 70, "659420": 70, "236875": 70, "668551": 70, "240097": 70, "260056": 70, "200374": 70, "725190": 70, "226563": 70, "972110": 70, "421852": 70, "249640": 70, "254119": 70, "730294": 70, "364932": 70, "165785": 70, "194464": 70, "15": [70, 93, 106, 112, 128, 265, 316, 317, 326, 336, 339, 340, 343, 344, 356, 357], "813399": 70, "313554": 70, "797328": 70, "213211": 70, "17": [70, 92, 93, 95, 96, 99, 106, 110, 112, 128, 132, 165, 206, 227, 265, 316, 317, 326, 328, 336, 338, 339, 340, 343, 344, 351, 353, 357], "769059": 70, "278079": 70, "098506": 70, "176778": 70, "749022": 70, "235386": 70, "742181": 70, "222932": 70, "21": [70, 92, 95, 106, 112, 128, 265, 316, 317, 326, 332, 333, 340, 343, 344, 351, 353, 354, 357], "317956": 70, "264473": 70, "943950": 70, "232732": 70, "707183": 70, "259077": 70, "553787": 70, "247717": 70, "826349": 70, "114302": 70, "854777": 70, "341384": 70, "820829": 70, "263235": 70, "999942": 70, "319986": 70, "29": [70, 92, 95, 96, 106, 112, 128, 241, 243, 254, 265, 316, 317, 319, 326, 331, 336, 339, 340, 343, 344, 347, 353, 357], "967084": 70, "432760": 70, "30": [70, 106, 112, 128, 265, 316, 317, 326, 332, 339, 340, 343, 344, 353, 357], "404773": 70, "325215": 70, "31": [70, 92, 95, 106, 112, 128, 132, 254, 265, 316, 317, 322, 326, 340, 343, 344, 351, 353, 357, 360], "999980": 70, "318421": 70, "925283": 70, "167667": 70, "33": [70, 106, 112, 128, 132, 265, 317, 326, 340, 343, 344, 345, 356, 357], "913706": 70, "242106": 70, "34": [70, 96, 106, 112, 128, 132, 254, 265, 316, 317, 326, 340, 343, 344, 351, 353, 357], "875554": 70, "249197": 70, "849135": 70, "294294": 70, "36": [70, 72, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 353, 357], "172206": [70, 357], "246422": 70, "37": [70, 99, 106, 112, 115, 128, 165, 206, 227, 265, 317, 326, 328, 340, 343, 344, 357], "747380": 70, "278340": 70, "38": [70, 92, 95, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 357], "187440": 70, "231249": 70, "237805": 70, "254485": 70, "999925": 70, "189793": 70, "41": [70, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 353, 357], "941906": 70, "170998": 70, "42": [70, 72, 99, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 345, 356, 357], "923801": 70, "244046": 70, "43": [70, 99, 106, 112, 128, 265, 316, 317, 326, 332, 340, 343, 344, 356, 357], "999928": 70, "320403": 70, "44": [70, 99, 106, 112, 128, 265, 316, 317, 340, 343, 344, 357], "237637": 70, "260453": 70, "45": [70, 99, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 357], "869540": 70, "194503": 70, "999949": 70, "319750": 70, "47": [70, 106, 112, 128, 132, 265, 316, 317, 340, 343, 344, 345, 353, 357], "983782": 70, "393234": 70, "48": [70, 106, 112, 115, 128, 265, 316, 317, 326, 340, 343, 344, 356, 357], "698267": 70, "169337": 70, "49": [70, 106, 112, 128, 265, 316, 317, 340, 343, 344, 357], "776674": 70, "214962": 70, "688847": 70, "192608": 70, "51": [70, 106, 112, 128, 265, 316, 317, 322, 326, 340, 343, 344, 357], "822213": 70, "202534": 70, "511489": 70, "273601": 70, "53": [70, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 351, 353, 357], "964757": 70, "223448": 70, "762153": 70, "181648": 70, "965657": 70, "435741": 70, "56": [70, 106, 112, 128, 265, 316, 317, 326, 340, 343, 344, 357], "995278": 70, "354798": 70, "57": [70, 106, 112, 118, 128, 199, 265, 316, 317, 326, 332, 333, 340, 343, 344, 357], "813382": 70, "263372": 70, "58": [70, 106, 112, 118, 128, 132, 199, 265, 316, 317, 333, 340, 343, 344, 356, 357], "727295": 70, "232867": 70, "59": [70, 99, 106, 110, 112, 115, 118, 126, 128, 132, 165, 199, 206, 227, 265, 316, 317, 326, 328, 332, 333, 340, 343, 344, 345, 357], "738777": 70, "224742": 70, "calculate_eta_shrinkag": [70, 318], "ucpscal": [71, 77], "calculate_ucp_scal": [71, 318], "00916": [71, 178, 252, 333, 342, 344, 346], "0309626": [71, 178, 252, 342, 344, 346], "031127999999999996": 71, "013241000000000001": 71, "convers": [71, 318, 331, 337], "pharmacokinet": [72, 241, 344], "pre": [72, 155, 331], "t_half_elim": 72, "173": 72, "337164": 72, "1769": 72, "493756": 72, "843398": 72, "149": [72, 338], "567842": 72, "1317": [72, 326], "474199": 72, "233070": 72, "k_e": 72, "calculate_individual_parameter_statist": [72, 318], "995565e": 73, "041788": 73, "848052": 73, "410335": 73, "240358": 73, "820116": [73, 343], "179011": 73, "266004e": 73, "908225": 73, "176399": 73, "266263": 73, "818557": 73, "757955": 73, "605785e": 73, "038825": 73, "207512": 73, "808434": 73, "144772": 73, "035114e": 73, "518562": 73, "972906": 73, "457873": 73, "947424e": 73, "197906": 73, "736254": 73, "201162e": 73, "249846": 73, "006431": 73, "000210": [75, 76, 343], "026895": [75, 76, 343], "083762": [75, 76, 343], "013415": [75, 76, 343, 354], "007477": [75, 76, 343, 354], "002279": [75, 76, 343, 354], "unconstrain": [77, 354], "calculate_parameters_from_ucp": [77, 318], "verbos": 78, "consist": [78, 322, 326, 339, 341, 358], "across": [78, 318, 339], "consol": 78, "fail": [78, 318, 339, 350], "cor": [79, 324], "highli": 79, "high": [79, 328, 329, 350], "absolut": [79, 318, 339], "zero_limit": 80, "significant_digit": [80, 298, 318], "close": [80, 252, 318, 333, 339, 340], "subset": [80, 199, 342, 347], "distanc": [80, 88, 357, 358], "logic": [80, 318, 345, 358], "cleanup": 81, "inlin": 81, "clean": 81, "certain": [81, 116, 119, 169, 318, 323, 326, 336, 338, 339, 341, 349], "to_format": 82, "inplac": 82, "nlmixr": [82, 280, 318, 324, 343, 344], "rxode": [82, 280, 318], "underli": [82, 124, 178, 342], "converted_model": 82, "delai": [83, 341, 345], "config": [84, 111, 318, 323, 324, 348], "configur": [84, 318, 335, 343, 346, 361, 362], "overwritten": [84, 292], "block": [85, 187, 225, 278, 318, 331, 333, 336, 341, 344, 345, 353], "iiv_cl_iiv_v": [85, 240], "split_joint_distribut": [85, 318, 344], "through": [86, 320, 321, 323, 326, 331, 339, 341, 342, 344, 354], "numpi": [86, 328, 329, 342], "standard_norm": 86, "5532605888887387": 86, "stem": 87, "force_numb": 87, "coveff1": 87, "temp": 87, "temp1": 87, "cl1": 87, "df": [88, 93, 289, 290, 318, 328, 351, 353], "date_column": 88, "deidentifi": [88, 318], "year": [88, 318, 324, 339], "earliest": 88, "maintain": [88, 321, 324, 325, 337, 339, 349, 350], "leap": 88, "1901": 88, "1902": 88, "1903": 88, "1904": 88, "closest": 88, "preceed": 88, "ordinari": [89, 342], "odedisplay": 89, "display": 89, "column_nam": [90, 247], "mark": [90, 91, 98, 247, 320, 339], "drop_dropped_column": [90, 247, 318, 344], "undrop_column": [90, 318, 344], "undrop": [90, 247], "drop_column": [91, 247, 318, 344], "dy": 92, "deps_1": 92, "771084": [92, 95], "881859": [92, 95], "441728": [92, 95], "113050": [92, 95], "783055": [92, 95], "150": [92, 93, 95, 96, 97, 343], "375041": [92, 95], "151": [92, 93, 95, 96, 97], "833395": [92, 95], "152": [92, 93, 95, 96, 97], "876707": [92, 95], "153": [92, 93, 95, 96, 97, 327], "905095": [92, 95], "154": [92, 93, 95, 96, 97], "099690": [92, 95], "evaluate_eta_gradi": [92, 318], "deta_1": 93, "deta_2": 93, "159537": 93, "609116": 93, "325893": 93, "562289": 93, "104417": 93, "346161": 93, "452951": 93, "682310": 93, "838840": 93, "981836": 93, "424423": 93, "973013": 93, "497185": 93, "344797": 93, "198714": 93, "697161": 93, "987731": 93, "941806": 93, "817067": 93, "309945": 93, "evaluate_epsilon_gradi": [93, 318], "573770": 94, "739": [94, 99, 114, 165, 206, 227, 328, 344], "165105": 94, "741": [94, 99, 114, 165, 206, 227, 328, 344], "742": [94, 99, 114, 165, 206, 227, 328, 344], "743": [94, 99, 114, 165, 206, 227, 328, 344], "evaluate_population_predict": [95, 318], "529739": 96, "179910": 96, "688648": 96, "798916": 96, "023225": 96, "459036": 96, "223295": 96, "217288": 96, "472888": 96, "226455": 96, "evaluate_individual_predict": [96, 318], "wre": [97, 318], "313859": 97, "675721": 97, "544240": 97, "921720": 97, "517677": 97, "223935": 97, "053334": 97, "007023": 97, "931252": 97, "778389": 97, "flag": [98, 318, 344, 357, 361], "care": [98, 292], "accord": [99, 131, 318, 339, 345, 359, 361], "queri": 99, "120": [99, 115, 165, 206, 227, 328, 343, 344], "132": [99, 115, 165, 206, 227, 328, 343, 344], "144": [99, 115, 165, 206, 227, 328, 343, 344, 356], "146": [99, 132, 165, 206, 227, 326, 328, 343, 344], "400": [99, 343], "00469307": [102, 103, 104, 178, 219, 233, 246, 252, 342, 344, 346], "fix_paramet": [102, 104, 248, 249, 344], "unfix_paramat": [102, 103, 104, 249], "fix_paramaters_to": [102, 249], "unfix_paramaters_to": [102, 103, 104, 216, 248], "fix_or_unfix_paramet": [103, 104, 248, 249, 344], "fix_parameters_to": [103, 216, 248, 344], "60": [106, 326, 339, 344, 351], "63": [106, 132, 343, 344, 353], "cmax": [110, 318, 344], "tmax": [110, 318, 344], "cmin": [110, 318, 344], "tmin": [110, 318, 344], "doseid": [110, 114, 344], "589": [110, 115, 344], "get_baselin": [112, 318, 344], "set_covari": [112, 344], "period": [114, 344], "96": [115, 244, 316, 326, 344, 345], "retriev": [118, 119, 126, 127, 134, 135, 136, 138, 271, 272, 292, 296, 299, 318, 342, 343, 344, 362], "those": [119, 321, 339, 344, 361], "pkpd": [119, 274, 285, 318, 359, 361], "often": [119, 320, 324, 342, 356], "get_pd_paramet": 119, "get_pk_paramet": [119, 134, 135, 138, 318], "get_rv_paramet": [119, 134, 136, 157, 318], "has_random_effect": [119, 134, 138, 318], "opr": [120, 131, 137], "get_population_prediction_express": [120, 318], "epress": [120, 137], "condit": [121, 215, 318, 333, 339, 355, 358], "item": [125, 323, 339], "exclud": [125, 288, 336, 338, 339, 345, 358], "activ": [126, 127, 128, 324, 339], "get_number_of_observ": [126, 132, 318, 344], "get_number_of_observations_per_individu": [126, 127, 132, 318, 344], "total": [127, 231, 298, 318, 344, 360], "get_number_of_individu": [127, 128, 318, 344], "observation_count": 128, "unicod": 131, "oeta\u2082": 131, "oeta\u2081": 131, "keep_index": [132, 318], "112": [132, 343, 344, 353], "131": [132, 343, 344], "73": [132, 322, 343, 344, 355], "get_theta": [133, 139, 318], "get_sigma": [133, 140, 318], "var_typ": 134, "get_individual_paramet": [134, 136, 138, 157, 318], "get_individual_prediction_express": [137, 318], "get_omega": [139, 140, 318], "structur": [140, 274, 278, 294, 318, 320, 326, 328, 336, 338, 341, 342, 345, 359, 361], "00": [140, 322, 333, 342, 343, 344, 351, 353, 354, 356], "olumn": 141, "milligram": [141, 328], "liter": [141, 328], "kilogram": [141, 328], "named_subscript": 143, "greek": 143, "subscript": 143, "cleanup_model": [143, 318], "\u03b8\u2081": 143, "\u03b8\u2082": 143, "\u03b8\u2083": 143, "\u03b7\u2081": 143, "\u03b7\u2082": 143, "\u03b5\u2081": 143, "mani": [144, 145, 156, 200, 318, 344, 354], "has_proportional_error_model": [144, 145, 159, 318], "has_combined_error_model": [144, 156, 159, 318], "has_weighted_error_model": [144, 145, 156, 318], "has_additive_error_model": [145, 156, 159, 318], "reli": [148, 152, 153, 161, 339], "heurist": [148, 152, 153, 161], "abl": [148, 152, 153, 161, 318, 332, 335, 349, 350, 358], "detect": [148, 152, 153, 161, 318, 335, 342, 349, 363], "instantan": [149, 217, 341], "has_od": [150, 151, 318], "has_linear_odes_with_real_eigenvalu": [150, 154, 318], "has_linear_od": [151, 154, 318], "micha": [152, 153, 220, 221, 231, 341, 360], "menten": [152, 153, 220, 221, 231, 341, 360], "set_michaelis_menten_elimin": [152, 213, 221, 236, 318, 344], "michali": 153, "set_mixed_mm_fo_elimin": [153, 344], "add_metabolit": [155, 318], "sequenti": [158, 228, 318, 341, 345], "dpharmpi": 158, "has_zero_order_absorpt": [158, 318], "has_first_order_absorpt": 158, "set_zero_order_elimin": [161, 213, 220, 221, 318, 344], "model1": [162, 318], "model2": 162, "constraint": [163, 219, 233, 238, 246, 248, 318, 329], "vari": [164, 230, 283, 318, 320, 355], "get_covariate_baselin": [164, 318, 344], "load": [165, 166, 206, 262, 335], "unload_dataset": [165, 206, 318], "statment": 167, "theta_1": [168, 342], "\u03bc\u2081": 168, "\u03bc\u2082": 168, "dataset_or_model": [169, 198], "name_pattern": [169, 198], "omitted_": 169, "omiss": 169, "omit": [169, 326, 360], "placehold": [169, 198], "yield": [169, 197, 198], "stratify_on": [170, 171, 172, 173, 254], "stratif": [170, 171, 172, 173, 198, 254, 320], "chart": [170, 171, 172, 173, 174, 175, 176, 177, 254, 316], "facetchart": [170, 171, 172, 173, 174, 175], "plot_dv_vs_ipr": [173, 318], "iofv1": 176, "iofv2": 176, "against": [176, 339], "iofv": [176, 289, 316, 318, 340, 343, 357], "scatterplot": 176, "res1": 176, "res2": 176, "individual_ofv": [176, 298, 318, 343], "nonlin": 176, "problem": [178, 182, 318, 326, 332, 336, 338, 339, 340, 344, 346], "subroutin": [178, 318, 339, 344, 346], "advan1": [178, 344, 346], "trans2": [178, 344, 346], "IF": [178, 318, 339, 344], "gt": [178, 344], "lt": [178, 344], "npde": [178, 344], "noappend": [178, 344], "noprint": [178, 344], "onehead": [178, 344], "sigma\u2081": [179, 342], "\u2081": [179, 342], "home": [181, 318, 342], "run1": [181, 272, 344], "mod": [181, 292, 294, 318, 320, 322, 328, 342, 343, 344], "read_model_from_databas": [181, 182, 318], "databas": [181, 182, 270, 292, 293, 294, 296, 299, 300, 304, 310, 315, 318, 361], "read_model_from_str": [181, 318, 344], "err": [182, 344], "has_covariate_effect": [184, 318], "unrun": 185, "to_remov": [187, 188, 193, 194], "eta_iov_1_1": 188, "add_lag_tim": [189, 232, 318, 344], "uloq": 190, "alq": 190, "loq": [190, 274, 320], "consecut": [190, 241], "736": 190, "set_lloq_data": [190, 241, 318], "add_peripheral_compart": [192, 224, 318, 344], "add_predict": [193, 194], "add_residu": [193, 194], "new_nam": [196, 222], "renam": [196, 318], "clash": [196, 292, 294], "occur": [196, 225, 332, 336, 338, 339], "constant": [197, 203, 231, 338, 360], "resampl": [198, 275], "stratifi": [198, 320], "sample_s": [198, 320], "resample_": 198, "randomli": [198, 201, 354], "renumb": [198, 320], "upward": 198, "valueerror": 198, "strata": 198, "stratum": 198, "suppli": [198, 336, 338, 345, 353], "control": [198, 324, 338, 339, 342], "pattern": [198, 339], "samples_per_id": 199, "pool": [199, 336], "iec": 199, "127941": 199, "037273": 199, "065492": 199, "182851": 199, "263323": 199, "265849": 199, "295883": 199, "060346": 199, "012108": 199, "219967": 199, "034279": 199, "040988": 199, "187879": 199, "143184": 199, "088845": 199, "034655": 199, "187779": 199, "014214": 199, "019953": 199, "151151": 199, "sample_parameters_from_covariance_matrix": [199, 201, 318], "sample_parameters_uniformli": [199, 200, 318], "uniform": [199, 200, 201, 354], "force_posdef_sampl": [200, 201, 320], "force_posdef_covmatrix": [200, 320], "never": [200, 345], "005069": 200, "974989": 200, "204629": 200, "024756": 200, "012088": 200, "012943": 200, "004690": 200, "958431": 200, "233231": 200, "038866": 200, "029000": 200, "012516": 200, "004902": [200, 316], "950778": 200, "128388": 200, "019020": 200, "023866": 200, "013413": [200, 354], "sample_individual_estim": [200, 201, 318], "estiat": [200, 201], "reject": 201, "004878": 201, "908216": 201, "149441": 201, "029179": 201, "025472": 201, "012947": 201, "004828": 201, "014444": 201, "149958": 201, "028853": 201, "027653": 201, "013348": 201, "004347": 201, "053837": 201, "165804": 201, "028465": 201, "026798": 201, "013727": 201, "data_tran": [202, 204, 226, 318], "series_term": 202, "\u00b2": [202, 204], "epsilon_1": [202, 204, 226], "expans": 202, "approxim": [202, 231, 339, 360], "term": [202, 318, 336, 339], "\u03b5\u2090": [202, 204, 344], "set_proportional_error_model": [202, 204, 318, 344], "set_combined_error_model": [202, 226, 318, 344, 355], "const": 203, "epsilon_2": 204, "remove_error_model": [204, 226, 318, 344], "\u03b5\u209a": [204, 226, 344], "set_additive_error_model": [204, 226, 318, 344], "path_or_df": 206, "load_dataset": [206, 318], "fix_to_log": 208, "dynam": [208, 307, 339], "lambda": [208, 242, 243, 351, 353], "zeta": [208, 351, 353], "emul": 208, "set_instantaneous_absorpt": [212, 228, 235], "list_of_ep": [214, 225], "same_eta": 214, "ruv": 214, "eta_rv1": 214, "set_power_on_ruv": [214, 318, 344, 355], "get_initial_condit": [215, 318], "remove_loq_data": [218, 241, 318, 344], "set_upper_bound": [219, 246, 344], "unconstrain_paramet": [219, 233, 248, 344], "clmm": [220, 221, 236, 344], "km": [220, 221, 236, 318, 344], "set_first_order_elimin": [220, 221, 236, 318, 344], "advan": [223, 318, 344], "cvode": [223, 277, 320, 332], "advan14": [223, 320], "dgear": [223, 277, 320, 332], "advan8": [223, 320], "dverk": [223, 277, 320, 332], "advan6": [223, 320], "ida": [223, 277, 320, 332], "advan15": [223, 320], "lsoda": [223, 277, 320, 332], "advan13": [223, 320, 344], "lsodi": [223, 277, 320, 332], "advan9": [223, 320], "prefer": [223, 339], "q2": 224, "q3": 224, "v3": 224, "peripheral2": 224, "lower_limit": 225, "zero_protect": [225, 226, 318], "said": 225, "autodetect": 225, "protect": [225, 226, 318, 339], "power\u2081": 225, "set_iiv_on_ruv": [225, 318, 344, 355], "225e": [226, 344], "ipredadj": [226, 344], "ref": [227, 363], "1234": 229, "simulationstep": 229, "quantil": [230, 254, 316, 318], "mediat": [231, 360], "disposit": [231, 360], "tmdd": [231, 274, 285, 318, 359, 361], "irrevers": [231, 360], "bind": [231, 360], "ib": 231, "receptor": [231, 360], "cr": 231, "quasi": [231, 360], "qss": 231, "wagner": 231, "mmapp": 231, "keep_depot": [232, 318], "transit1": 232, "transit2": 232, "k23": 232, "transit3": 232, "k34": 232, "k40": 232, "set_lower_bound": [233, 246, 344], "use_thetas_for_error_stdev": [234, 318, 344], "smallest": [236, 344], "get_zero_order_input": [237, 318], "simplifi": [238, 318, 319, 329, 344, 350], "ab": [238, 243, 320, 344], "analyt": 239, "create_joint_distribut": [240, 318, 344], "m4": [241, 344], "m1": [241, 318, 356], "m3": [241, 344], "m5": [241, 318], "m6": [241, 318], "m7": [241, 318], "explain": [241, 326, 331, 339, 350, 361], "overridden": 241, "shown": [241, 331], "discard": 241, "modifi": [241, 318, 328, 339, 348, 362], "beal": 241, "sl": 241, "pharmacodyn": 241, "2001": 241, "oct": 241, "481": 241, "504": 241, "doi": [241, 243, 333, 355], "1023": 241, "1012299115260": 241, "erratum": 241, "2002": 241, "jun": 241, "309": 241, "pmid": 241, "11768292": 241, "cumd": [241, 344], "cumdz": [241, 344], "list_of_eta": [242, 243, 244], "boxcox": [242, 318], "lambda1": [242, 243], "transform_etas_tdist": [242, 243, 318, 344], "transform_etas_john_drap": [242, 244, 318, 344], "john": [243, 318], "draper": [243, 318], "spelect": 243, "1980": 243, "famili": [243, 339], "journal": [243, 355], "royal": 243, "societi": 243, "190": 243, "197": 243, "2307": 243, "2986305": 243, "transform_etas_boxcox": [243, 244, 318, 344], "degre": [244, 353], "freedom": [244, 339, 353], "80": [244, 326, 343, 353, 355], "df1": 244, "translat": [245, 318], "hour": [245, 328], "caution": 245, "reset": [245, 301, 318], "account": 245, "unfix_paramet": [246, 318, 344], "unload": 250, "had": [251, 339, 344], "move_est_close_to_bound": 252, "00469555": 252, "984258": [252, 262, 343], "15892": 252, "0293508": [252, 342], "027906": [252, 262, 342, 343, 354], "sd_eps_1": 253, "set_weighted_error_model": [253, 318, 344], "qi": 254, "ci": 254, "vpc": [254, 318], "sim": [254, 333, 342, 344, 357], "confid": [254, 321], "080": [254, 343], "858": 254, "157": 254, "834": [254, 336], "342": 254, "983": [254, 351], "set_simul": [254, 284], "run_simul": [254, 318], "sim_model": 254, "sim_data": 254, "whose": [255, 339], "suffix": 255, "overwrit": [255, 256], "newdataset": 255, "recalcul": 258, "frem_dir1": 258, "read_result": [258, 271, 318, 322], "model_or_model": [259, 280], "run_tool": [259, 274, 288, 318], "supress_warn": 260, "choos": [260, 318, 336, 339, 345, 346, 348], "supress": 260, "fulfil": [261, 339, 358], "004696": [262, 343, 354], "158920": [262, 343], "029351": [262, 343, 354], "84": [263, 264, 289, 336, 338, 345, 354, 356], "influenti": [263, 264, 289, 318], "machin": [263, 264, 265, 292, 296, 299, 328, 335, 339], "learn": [263, 264, 265, 335], "threshold": [263, 264, 265, 320, 326], "signal": [263, 264, 340], "raw": [263, 264, 265, 289, 316, 318, 328], "delta": [263, 316, 318, 340], "tell": [263, 265, 339], "predict_influential_outli": [263, 265, 318], "predict_outli": [263, 264, 318], "outlier_cutoff": 264, "influential_cutoff": 264, "outlier": [264, 265, 289, 318, 357], "influential_outli": 264, "predict_influential_individu": [264, 265, 318], "simev": [265, 318, 352], "singal": 265, "281443": 265, "057392": 265, "119105": 265, "846849": 265, "600540": 265, "014008": 265, "750734": 265, "247175": 265, "117002": 265, "835389": 265, "529582": 265, "035670": 265, "292333": 265, "303278": 265, "565949": 265, "078192": 265, "291295": 265, "466421": 265, "402343": 265, "699996": 265, "567987": 265, "526776": 265, "303918": 265, "177588": 265, "272142": 265, "390000": 265, "775876": 265, "501528": 265, "700951": 265, "352599": 265, "294196": 265, "744014": 265, "215364": [265, 356], "208691": 265, "713130": 265, "300293": 265, "810736": 265, "459877": 265, "675125": 265, "563835": 265, "526945": 265, "449199": 265, "720714": 265, "792248": 265, "860923": 265, "731858": 265, "247131": 265, "894190": 265, "282737": 265, "153398": 265, "200546": 265, "902774": 265, "586427": 265, "183329": 265, "036930": 265, "639868": 265, "765279": 265, "209665": 265, "225693": 265, "modelfit_result": [266, 297, 318], "base_model": 267, "base_model_r": 267, "models_r": [267, 288, 289], "parent_dict": 267, "bic_typ": 267, "child": 267, "relev": [267, 322, 339, 346], "lrt": [267, 278, 279, 281], "denot": [267, 333, 344], "model_1": [267, 333], "model_2": [267, 333], "create_result": [269, 318], "resum": [270, 274, 310, 320, 361], "resmod_dir1": 270, "retrieve_model": [271, 292, 296, 299, 318, 322], "tooldatabas": [272, 293, 300, 307, 310], "modeldatabas": [272, 292, 294, 304], "tooldir_path": 272, "retrieve_final_model": [272, 318], "allometryresult": 273, "strategi": [274, 318, 336, 345, 361], "amd": [274, 318, 322, 331, 358, 360, 361], "reult": 274, "procedur": [274, 339, 361], "reevalu": [274, 318], "e_max": [274, 285], "search": [274, 276, 281, 285, 318, 320, 322, 338, 341, 350, 361], "proiorit": 274, "crcl": 274, "retri": [274, 282, 318, 361], "run_iiv": [274, 318], "bootstrap": [275, 318, 352], "bootstrapresult": [275, 318], "500": 275, "naming_index_offset": 276, "try": [276, 320, 332, 350, 354, 363], "offset": 276, "covsearchresult": 276, "compare_ofv": 277, "estmethod": [277, 318, 361], "exhaust": [277, 281, 318, 331], "exhaustive_with_upd": [277, 332], "exhaustive_only_ev": [277, 318, 332], "made": [277, 321, 326, 339, 342, 354], "mode": [277, 284, 318, 333, 339], "estmethodresult": 277, "reduc": [277, 318, 332, 356], "correlation_algorithm": [278, 318, 336], "iivsearch": [278, 318, 361], "bottom_up_stepwis": [278, 336], "add_diagon": [278, 281, 318, 336, 345], "pd_add_diagon": 278, "argumen": 278, "iivsearchresult": 278, "td_brute_forc": [278, 336], "iovsearch": [279, 318, 361], "criteri": [279, 281, 283], "iovsearchresult": 279, "modelfeatur": 281, "exhaustive_stepwis": [281, 345], "modelsearchresult": 281, "prefix": [282, 354], "retriesresult": 282, "max_it": [283, 318], "attempt": [283, 326, 339, 354], "assess": [283, 355], "ruvsearchresult": 283, "simulationresult": 284, "extra_model_result": [285, 359, 360], "structsearchresult": 285, "model_typ": 285, "arg": 286, "outlier_count": 288, "dofv_vs_par": 288, "predicted_dofv": [288, 289], "predicted_residu": [288, 289], "fit_result": 288, "inf_select": 289, "mathrm": [289, 357], "veebar": 289, "inf_param": 289, "out_ob": 289, "least": [289, 322, 339, 345, 358], "outli": [289, 357], "out_ind": 289, "inf_outli": 289, "summarize_individu": [289, 318], "include_all_estimation_step": 290, "runtim": [290, 298, 318, 332], "wasn": [290, 318], "estmat": 290, "586": [290, 343, 354], "276056": [290, 354], "lzma": [291, 301], "compress": [291, 301], "Not": [291, 328, 339, 345], "save": [291, 301, 305, 318], "file_extens": [292, 294], "nontransactionalmodeldatabas": [292, 299], "local": [292, 293, 294, 296, 299, 300, 304, 324, 336, 339], "store": [292, 293, 294, 296, 299, 300, 304, 318, 322, 346], "modelnam": 292, "localmodeldirectorydatabas": 292, "retrieve_fil": [292, 296, 299], "filesystem": [292, 296, 299], "model_nam": [292, 294, 296, 299, 333], "retrieve_local_fil": [292, 296, 299], "destination_path": [292, 296, 299], "retrieve_model_entri": [292, 296, 299], "modelentri": [292, 294, 296, 299], "retrieve_modelfit_result": [292, 296, 299], "store_local_fil": [292, 293, 296, 299, 300, 304], "new_filenam": [292, 296, 299], "store_metadata": [292, 293, 296, 299, 300, 304], "store_model": [292, 296, 299], "store_model_entri": [292, 296, 299], "model_entri": [292, 296, 299], "transact": [292, 294, 296, 299, 339], "store_modelfit_result": [292, 296, 299], "toolnam": [293, 300, 304, 322], "exist_ok": 293, "read_metadata": [293, 300, 304], "source_path": [293, 300, 304], "store_result": [293, 300, 304], "transactionalmodeldatabas": 294, "subdirectori": [294, 322], "list_model": 294, "snapshot": [294, 296], "readabl": [294, 296, 301, 328, 339, 350], "context": [294, 296, 339, 350], "model_or_model_entri": [294, 296], "writabl": [294, 296], "timestamp": 295, "log_error": 295, "log_warn": 295, "abc": [296, 304], "baseclass": 296, "primari": 296, "center": [296, 354], "around": [296, 321], "belong": 296, "simulation_result": 297, "attach_result": 297, "__version__": [298, 301, 302], "109": [298, 301, 302, 326, 345], "ofv_iter": [298, 318], "parameter_estimates_sdcorr": [298, 343], "parameter_estimates_iter": [298, 318], "standard_errors_sdcorr": [298, 343], "relative_standard_error": [298, 343], "minimization_successful_iter": 298, "estimation_runtime_iter": 298, "termination_caus": 298, "termination_cause_iter": 298, "function_evalu": 298, "function_evaluations_iter": 298, "significant_digits_iter": 298, "log_likelihood": 298, "covstep_success": 298, "gradients_iter": 298, "evaluation_ofv": 298, "classic": 298, "caus": [298, 318, 339, 350], "prematur": 298, "maxevals_exceed": [298, 358], "dummi": [299, 300], "anyth": [299, 300, 324, 336, 339], "desir": [299, 300], "get_and_reset_index": 301, "attr": 301, "wrapper": [301, 318, 324, 329, 335, 363], "facilit": 301, "multiindex": [301, 318], "to_csv": 301, "serial": [301, 318, 328, 350], "resutl": 302, "task_input": 303, "model_databas": 304, "workflowbas": [305, 306], "acycl": 305, "task": [305, 306, 318, 349, 350], "node": [305, 307], "as_dask_dict": 305, "dask": [305, 307, 318, 350], "plot_dask": 305, "add_task": 306, "predecessor": [306, 339], "insert_workflow": 306, "replace_task": 306, "new_task": 306, "wf": 307, "unique_nam": 307, "db": 307, "whatev": [307, 339], "alia": [308, 309], "localdirectorydatabas": [308, 315], "localdirectorytooldatabas": [309, 315, 322], "dispatch": [310, 315, 318, 322], "executiondispatch": 310, "default_dispatch": 315, "local_dask": [315, 322], "default_model_databas": 315, "default_tool_databas": 315, "psn": [316, 317, 318, 320, 327, 333, 340, 351, 353, 354, 356, 357, 361, 362], "parameter_statist": 316, "bia": [316, 318], "divid": [316, 320, 346], "005890": 316, "005891": 316, "000460": 316, "078170": 316, "pop_v": 316, "431004": 316, "422850": 316, "073015": 316, "051024": 316, "149260": 316, "124740": 316, "112645": 316, "754686": 316, "189801": 316, "185916": 316, "045563": 316, "240056": 316, "015470": 316, "015184": 316, "003553": 316, "229641": 316, "parameter_distribut": 316, "lowest": [316, 333], "interpol": 316, "fall": [316, 318], "x_0": 316, "x_1": 316, "np": [316, 328, 342], "004851": 316, "004857": 316, "005031": 316, "005149": 316, "277810": 316, "278405": 316, "283765": 316, "309488": 316, "326434": 316, "000011": 316, "000097": 316, "000869": 316, "006275": 316, "013558": 316, "079940": 316, "080472": 316, "085258": 316, "101225": 316, "119080": 316, "007645": 316, "007719": 316, "008382": 316, "009481": 316, "009956": 316, "97": [316, 326, 360], "006659": 316, "006846": 316, "007353": 316, "007460": 316, "007472": 316, "547333": 316, "582182": 316, "631219": 316, "644090": 316, "645520": 316, "353679": 316, "367954": 316, "416361": 316, "433175": 316, "435043": 316, "265224": 316, "282926": 316, "290666": 316, "291792": 316, "291917": 316, "021341": 316, "022691": 316, "025584": 316, "027052": 316, "027215": 316, "parameter_estimates_histogram": 316, "histogram": [316, 318], "repeatchart": 316, "006755": 316, "52531": 316, "108662": 316, "258316": 316, "011408": 316, "005424": 316, "43599": 316, "270899": 316, "156400": 316, "014023": 316, "006585": 316, "38641": 316, "226891": 316, "162075": 316, "010971": 316, "005757": 316, "47090": 316, "193243": 316, "019133": 316, "006875": 316, "50111": 316, "345382": 316, "176756": 316, "009135": 316, "005683": 316, "34027": 316, "163931": 316, "159868": 316, "010816": 316, "005795": 316, "34379": 316, "075865": 316, "194188": 316, "018041": 316, "006078": 316, "35172": 316, "040387": 316, "214176": 316, "015683": 316, "98": [316, 326, 333, 336], "005353": 316, "44898": 316, "155477": 316, "258743": 316, "020128": 316, "006247": 316, "49069": 316, "125491": 316, "219146": 316, "018971": 316, "ofv_statist": 316, "bootstrap_bootdata_ofv": 316, "original_bootdata_ofv": 316, "sum": [316, 327], "bootstrap_origdata_ofv": 316, "boostrap": 316, "original_origdata_ofv": 316, "delta_bootdata": 316, "delta_origdata": 316, "08165": 316, "729": 316, "644638": 316, "737749": 316, "ofv_distribut": 316, "parameter_distriut": 316, "593": 316, "389406": 316, "972104": 316, "599": 316, "216391": 316, "654": [316, 318], "548507": 316, "660": 316, "573965": 316, "795": 316, "776225": 316, "803": 316, "946508": 316, "816": 316, "836314": 316, "820": [316, 318, 343], "873796": 316, "821": 316, "322405": 316, "ofv_plot": 316, "dofv_quantiles_plot": 316, "show": [316, 320, 331, 333, 339, 347, 353, 354, 357], "metric": [316, 317, 343], "chi": 316, "squar": [316, 331], "664": 316, "272157": 316, "749": 316, "459450": 316, "061103": 316, "725470": 316, "679": 316, "585721": 316, "702": 316, "481949": 316, "748": 316, "074871": 316, "710": [316, 318], "203812": 316, "787": [316, 332], "180418": 316, "771": 316, "202034": 316, "119974e": 316, "491440e": 316, "096413e": 316, "005331": 316, "000922": 316, "001519": 316, "460998e": 316, "365879e": 316, "012689": 316, "000981": 316, "760432e": 316, "331894e": 316, "002076": 316, "755294e": 316, "000035": 316, "000176": 316, "000078": 316, "262063e": 316, "included_individu": 316, "case_result": [317, 318], "cook_scor": 317, "jackknife_cook_scor": 317, "delta_ofv": 317, "dofv_influenti": 317, "130159": 317, "121389": 317, "015207": 317, "348263": 317, "336159": 317, "144045": 317, "192433": 317, "181125": 317, "031030": 317, "163095": 317, "155901": 317, "026142": 317, "422651": 317, "404915": 317, "190732": 317, "374312": 317, "343311": 317, "097063": 317, "169869": 317, "163883": 317, "026223": 317, "263865": 317, "254943": 317, "058123": 317, "757098": 317, "673587": 317, "477910": 317, "150161": 317, "144191": 317, "023623": 317, "361646": 317, "352901": 317, "217902": 317, "255533": 317, "215005": 317, "035375": 317, "191848": 317, "187019": 317, "038199": 317, "376365": 317, "337975": 317, "096680": 317, "142806": 317, "137340": 317, "014709": 317, "193393": 317, "179744": 317, "031711": 317, "131746": 317, "122842": 317, "020637": 317, "176644": 317, "932149": 317, "036787": 317, "128197": 317, "120498": 317, "019030": 317, "141093": 317, "138101": 317, "029021": 317, "176582": 317, "153583": 317, "035291": 317, "104396": 317, "100064": 317, "015499": 317, "552071": 317, "501458": 317, "278595": 317, "242334": 317, "217068": 317, "047627": 317, "792099": 317, "715951": 317, "798775": 317, "135247": 317, "133493": 317, "021356": 317, "442779": 317, "424958": 317, "125763": 317, "132903": 317, "127188": 317, "010157": 317, "081122": 317, "076790": 317, "005443": 317, "183624": 317, "168501": 317, "027707": 317, "113959": 317, "111168": 317, "012363": 317, "532749": 317, "515747": 317, "325048": 317, "094133": 317, "091212": 317, "014747": 317, "447798": 317, "406737": 317, "194457": 317, "364978": 317, "352973": 317, "124295": 317, "270838": 317, "252922": 317, "063675": 317, "129553": 317, "121963": 317, "014043": 317, "254914": 317, "243250": 317, "064025": 317, "207529": 317, "194633": 317, "046887": 317, "239182": 317, "218112": 317, "044252": 317, "181986": 317, "173826": 317, "020285": 317, "604112": 317, "584208": 317, "604211": 317, "407717": 317, "369648": 317, "154161": 317, "215722": 317, "196744": 317, "043742": 317, "214167": 317, "200091": 317, "036238": 317, "094284": 317, "089002": 317, "007506": 317, "074174": 317, "072365": 317, "007535": 317, "743323": 317, "717468": 317, "654313": 317, "153971": 317, "147360": 317, "014502": 317, "284706": 317, "278460": 317, "072960": 317, "331587": 317, "309374": 317, "116933": 317, "447965": 317, "421612": 317, "129593": 317, "184872": 317, "175196": 317, "029896": 317, "430382": 317, "415446": 317, "141657": 317, "409307": 317, "369197": 317, "189729": 317, "084764": 317, "079718": 317, "007416": 317, "107600": 317, "103145": 317, "013947": 317, "154672": 317, "150761": 317, "028236": 317, "155632": 317, "150461": 317, "034848": 317, "covariance_ratio": 317, "skipped_individu": 317, "050505": 317, "963884": 317, "058896": 317, "087449": 317, "985403": 317, "029066": 317, "101636": 317, "086424": 317, "017369": 317, "094799": 317, "849310": 317, "121111": 317, "049151": 317, "096456": 317, "070088": 317, "040691": 317, "065881": 317, "606158": 317, "205007": 317, "099191": 317, "143483": 317, "050691": 317, "086007": 317, "156273": 317, "919336": 317, "056714": 317, "999221": 317, "029600": 317, "034017": 317, "108785": 317, "038495": 317, "954054": 317, "053618": 317, "096334": 317, "943556": 317, "125423": 317, "086167": 317, "145822": 317, "113939": 317, "114399": 317, "057664": 317, "788608": 317, "063991": 317, "115559": 317, "160549": 317, "034685": 317, "035618": 317, "714976": 317, "092664": 317, "089158": 317, "054565": 317, "002555": 317, "032356": 317, "003056": 317, "936719": 317, "122771": 317, "078285": 317, "096841": 317, "068821": 317, "sqrt": [317, 344], "p_i": 317, "p_": 317, "orig": 317, "sum_": 317, "overlin": [317, 333], "_j": 317, "_k": [317, 333], "det": 317, "ofv_": 317, "iofv_": 317, "iofv_k": 317, "ofv_k": 317, "case_column": 317, "rikard": [317, 319, 325, 350, 355], "nordgren": [317, 319, 325, 350, 355], "sebastian": [317, 319, 325], "ueckert": [317, 319, 325], "svetlana": 317, "freiberga": 317, "karlsson": [317, 319, 325, 333, 355], "faster": [317, 318, 350], "2018": [317, 339, 355], "abstr": [317, 319], "8683": 317, "www": [317, 319, 339], "meet": [317, 319, 321, 339, 350], "deafault": 318, "broken": 318, "sructsearch": 318, "add_predictions_residu": 318, "remove_predictions_residu": 318, "mandatori": [318, 359], "unus": 318, "bottom": 318, "symengin": [318, 329, 350], "fallback": 318, "invalid": [318, 339], "filter_dataset": 318, "dir_nam": 318, "edit": 318, "get_central_volume_and_clear": 318, "phc": 318, "write_csv": 318, "frem": [318, 342, 352, 353], "postprocess": [318, 352], "bin_observ": 318, "plot_dv_vs_pr": 318, "plot_abs_cwres_vs_ipr": 318, "stagewis": 318, "clearenc": 318, "replace_non_random_rv": 318, "get_observ": [318, 344], "is_strictness_fulfil": 318, "properli": 318, "calculate_b": [318, 336, 338, 345], "incorrectli": 318, "final_model": 318, "plot_cwres_vs_idv": 318, "add_indirect_effect": 318, "circul": 318, "version": [318, 320, 322, 335, 339], "blqdv": 318, "better": [318, 336, 345, 354, 355], "usag": [318, 320], "set_reference_valu": 318, "create_basic_pk_model": [318, 344], "add_bioavail": 318, "autogener": 318, "typ": 318, "add_effect_compart": 318, "reorgan": 318, "saddl": 318, "llq": 318, "preced": 318, "reorder": 318, "model4": 318, "create_report": 318, "write_model": [318, 342, 344, 346], "did": [318, 356], "dadt": [318, 344], "de": [318, 344], "set_zero_order_input": 318, "set_tmdd": 318, "plugin": [318, 324, 329, 330, 337], "generate_model_cod": 318, "get_model_cod": 318, "advan7": 318, "didn": 318, "header": 318, "is_linear": 318, "plot_transformed_eta_distribut": 318, "create_config_templ": [318, 323], "get_dv_symbol": 318, "set_initial_condit": 318, "abbr": [318, 344, 346], "set_dvid": [318, 344], "regress": 318, "defdos": [318, 344], "sometim": 318, "wrong": 318, "bad": 318, "1551": 318, "is_real": 318, "advan5": 318, "copy_model": 318, "nlmixr2": [318, 337, 343, 344], "display_od": 318, "rework": 318, "run_covsearch": [318, 326], "explicitodesystem": 318, "eval": 318, "successfulli": [318, 354, 363], "round": [318, 328, 358], "proxi": [318, 339], "1314": 318, "1355": [318, 326], "1378": [318, 336], "typo": 318, "1377": 318, "1381": 318, "1064": [318, 336], "afd7707": 318, "1139": 318, "1394": 318, "too": [318, 339], "1117": 318, "timeout": 318, "loop": 318, "wait": 318, "lst": [318, 322], "much": 318, "ncomp": 318, "deidentify_data": [318, 344], "cli": 318, "anonym": 318, "setter": 318, "multivari": 318, "1293": 318, "1302": [318, 326], "1303": [318, 345], "last20": 318, "run_modelsearch": [318, 322, 345], "run_iovsearch": [318, 338], "run_ruvsearch": [318, 355], "run_iivsearch": [318, 336], "nomem": 318, "rh": 318, "1180": 318, "887": [318, 336, 338], "1162": 318, "1032": 318, "add_covariate_effect": [318, 344], "1004": 318, "1181": 318, "9fd701521": 318, "best_model": 318, "final_model_nam": 318, "a7fbcbfe2": 318, "update_initial_individual_estim": 318, "modelsearch_candidate1": [318, 322, 345], "wors": 318, "calculate_a": 318, "check_parameters_near_bound": 318, "check_high_correl": 318, "plot_iofv_vs_iofv": 318, "plot_individual_predict": 318, "evaluate_express": 318, "evaluate_weighted_residu": 318, "parameter_esimt": 318, "calculate_pk_parameters_statist": 318, "update_init": [318, 344], "predict_": 318, "summarize_individuals_count_t": 318, "print_fit_summari": 318, "write_result": 318, "rank_model": 318, "speedup": 318, "297a64041": 318, "1101": 318, "57fc4fee8": 318, "fd417aaf": 318, "convert_model": [318, 344], "d5458e36": 318, "keyerror": 318, "localmodeldirectori": 318, "filenotfounderror": 318, "1193bd39": 318, "submodul": 318, "bb96a13c": 318, "update_paramet": 318, "0ca786c5": 318, "dd056da3": 318, "915bc9c7": 318, "get_config_path": [318, 323], "disabl": [318, 321, 323], "82b32278": 318, "unwant": 318, "debug": 318, "1131a610": 318, "ebfafb45": 318, "1173": 318, "fb070ee1": 318, "1049": [318, 336], "pyreadr": 318, "easier": [318, 329, 342], "instal": [318, 320, 323, 339, 362], "mac": [318, 324], "get_evid": [318, 344], "resmod": [318, 352], "916": 318, "errors_allow": 318, "1055": 318, "attibut": 318, "1092": 318, "exlud": 318, "unreport": 318, "1076": 318, "988": 318, "1c65359": 318, "42fe72f": 318, "1001": 318, "lead": 318, "uneven": 318, "branch": [318, 324], "stepwis": [318, 322, 326, 331, 356], "694": 318, "708": 318, "comment": [318, 346], "790": 318, "974": 318, "produc": [318, 339], "1017": 318, "989": 318, "71f4cf23": 318, "dsl": 318, "932": 318, "973": 318, "cfc09bad": 318, "975": 318, "917": 318, "977": 318, "908": 318, "fd564168": 318, "088a046a": 318, "c76fa476": 318, "430f1d2e": 318, "make_declar": 318, "greekify_model": 318, "find_clearance_paramet": 318, "find_volume_paramet": 318, "vp": 318, "newer": 318, "seprat": 318, "brute_forc": 318, "solv": 318, "sporad": 318, "race": [318, 321], "lazi": 318, "duplic": 318, "745": 318, "1st": 318, "3rd": 318, "licens": [318, 323], "advanx": 318, "add_time_after_dos": [318, 344], "intercompartment": 318, "695": 318, "defob": 318, "gl": 318, "solve_ode_system": 318, "meta": 318, "switch": [318, 350], "read_dataset_from_datainfo": [318, 344], "addl": 318, "linalgerror": 318, "656": [318, 336], "summary_individu": 318, "tflite": [318, 335], "649": 318, "expand_additional_dos": [318, 344], "dbic": [318, 331, 336, 338, 345, 347, 360], "modelsyntaxerror": 318, "588": 318, "625": [318, 336], "578": 318, "vc1": 318, "577": 318, "success": [318, 321, 326, 332, 336, 338, 358], "632": 318, "636": 318, "590": 318, "gl_real": 318, "sampled_iofv": [318, 357], "subblock": 318, "check_dataset": [318, 344], "tensorflow": 318, "modelbuild": 318, "add_mdt_iiv": 318, "three": [318, 329, 339, 346], "add_eta": [318, 353], "etas_as_fullblock": 318, "iiv_as_fullblock": 318, "add_mdt_eta": 318, "wip": 318, "don": 318, "via": [318, 320, 322, 323, 324, 335, 337, 341, 342, 344, 346, 363], "130": 318, "calculate_se_from_inf": 318, "calculate_cov_from_inf": 318, "calculate_inf_from_cov": 318, "calculate_inf_from_corrs": 318, "calculate_corr_from_inf": 318, "528": 318, "457": 318, "translate_nmtran_tim": [318, 344], "print_model_cod": [318, 335, 344], "has_michaelis_menten_elimin": 318, "has_zero_order_elimin": 318, "has_first_order_elimin": 318, "has_mixed_mm_fo_elimin": 318, "2c": 318, "1c": 318, "timevari": 318, "create_symbol": 318, "remove_unused_parameters_and_rv": 318, "mu_reference_model": 318, "simplify_express": 318, "bump_model_numb": 318, "get_doseid": [318, 344], "get_unit_of": 318, "get_concentration_parameters_from_data": [318, 344], "resample_data": 318, "omit_data": 318, "get_observation_express": 318, "get_individu": 318, "get_dos": [318, 344], "list_time_varying_covari": [318, 344], "estmeth": 318, "optim": [318, 329, 342, 350], "incorrect": 318, "add_allometri": [318, 344], "add_covariance_step": 318, "remove_covariance_step": 318, "insert_aft": 318, "modelstat": 318, "power_on_ruv": 318, "estimationmethod": 318, "guard": 318, "cdd": 318, "bipp": [318, 320], "5000": 318, "shift": 318, "nest": 318, "set_dtbs_error_model": [318, 344], "logger": 318, "parametr": 318, "parallel": [318, 354, 361], "print_model_symbol": 318, "parameter_sampl": 318, "api": [318, 329, 344, 349, 350, 362], "improv": [318, 353], "eta_shrinkag": 318, "summarize_model": 318, "window": [318, 324, 335, 339], "rstudio": [318, 350, 363], "zero_order_absorpt": 318, "first_order_absorpt": 318, "bolus_absorpt": 318, "set_bolus_absorpt": [318, 344], "seq_zo_fo_absorpt": 318, "set_seq_zo_fo_absorpt": [318, 344], "have_zero_order_absorpt": 318, "individual_shrinkag": 318, "individual_parameter_statist": 318, "pk_paramet": 318, "create_rv_block": 318, "split_rv_block": 318, "nind": 318, "nob": 318, "nobsi": 318, "remove_error": 318, "additive_error": 318, "proportional_error": 318, "combined_error": 318, "has_additive_error": 318, "has_proportional_error": 318, "has_combined_error": 318, "theta_as_stdev": 318, "set_dtbs_error": 318, "tdist": [318, 351], "john_drap": 318, "add_individual_paramet": 318, "first_order_elimin": 318, "zero_order_elimin": 318, "michaelis_menten_elimin": 318, "mixed_mm_fo_elimin": 318, "revert": 318, "thread": [318, 321], "site": 318, "crossval": [318, 352], "qa": [318, 352], "plain": [318, 323, 324], "sdcorr": 318, "data_transform": 318, "evalut": 318, "dependent_variable_symbol": 318, "releas": [318, 339, 363], "claus": 318, "interfac": [318, 329, 335, 337, 339, 342, 344, 350, 362, 363], "com": 318, "stdin": 318, "123": [318, 343], "clearer": 318, "prioriti": [318, 346], "aggregatedmodelfitresult": 318, "half": [318, 351, 353], "life": [318, 351, 353], "set_nam": 318, "parameter_init": 318, "base_parameter_chang": [318, 333], "parameter_vari": [318, 333, 353], "coeffici": 318, "frem_result": 318, "simevalresult": 318, "odesystem": 318, "nonfixed_init": 318, "parameterset": 318, "migrat": 318, "github": [318, 324, 335, 337, 350, 363], "action": [318, 320, 321, 324, 339, 350], "columntyp": 318, "to_base_model": 318, "comined_mm_fo_elimin": 318, "absorption_r": 318, "pretti": 318, "qaresult": 318, "nmtranparseerror": 318, "error_model": 318, "pharmpyconfigpath": [318, 323], "environ": [318, 321, 362, 363], "linearizeresult": 318, "reset_indic": 318, "multiindic": 318, "functionsadd_lag_tim": 318, "yaml": 318, "view": [318, 339, 356], "assumpt": [318, 339], "0th": 318, "parser": 318, "individul": 318, "extend": [318, 339, 353, 356], "librari": [318, 335, 337, 339, 350, 363], "stella": [319, 325, 350], "belin": [319, 325, 350], "gunnar": [319, 325], "yngman": [319, 325, 333], "simon": [319, 325], "carter": [319, 325], "buatoi": [319, 325], "jo\u00e3o": [319, 325], "abrant": [319, 325], "andrew": [319, 325], "hooker": [319, 325], "assemblerr": 319, "novel": 319, "process": [319, 324, 355], "2021": [319, 333], "9656": 319, "subcommand": 320, "top": [320, 322, 328], "help": [320, 321, 326, 341, 344, 350, 363], "verb": 320, "particular": [320, 321, 324, 328, 339, 340], "welcom": [320, 321, 324, 339], "exit": 320, "pheno_r": [320, 328, 342, 343, 344], "prettyprint": 320, "output_fil": 320, "idcol": 320, "datecol": 320, "match": 320, "pager": 320, "stdout": [320, 322], "colnam": 320, "datasetsmultipl": 320, "givenbi": 320, "cov_sampl": 320, "posdef": 320, "non_fix": 320, "input_path": 320, "runord": 320, "compon": [320, 329, 335, 339, 342, 353, 361], "quot": 320, "particip": 321, "project": [321, 324, 337, 339, 363], "member": 321, "globe": 321, "divers": 321, "skill": [321, 350], "person": [321, 339], "experi": 321, "growth": 321, "everyon": [321, 324, 339], "guidelin": 321, "insid": [321, 339, 360], "goal": 321, "inclus": [321, 339, 353], "grow": 321, "pledg": 321, "peopl": 321, "harass": 321, "bulli": 321, "sexual": 321, "orient": 321, "gender": 321, "ident": 321, "appear": [321, 363], "nation": [321, 325], "ethnic": 321, "religion": 321, "imageri": 321, "sexist": 321, "racist": 321, "exclusionari": 321, "joke": 321, "acknowledg": [321, 339], "citat": 321, "request": [321, 324], "author": [321, 339], "own": [321, 323, 329, 339], "cite": 321, "realiz": 321, "varieti": 321, "opinion": 321, "background": 321, "serv": [321, 339, 347, 350], "enrich": 321, "discuss": 321, "pro": 321, "con": 321, "technologi": 321, "proactiv": 321, "ensur": [321, 339, 354], "heard": 321, "feel": [321, 350], "freeli": 321, "answer": 321, "respectfulli": 321, "pai": 321, "attent": 321, "feedback": 321, "forum": 321, "especi": 321, "contribut": [321, 325, 337, 339], "conscienti": 321, "percept": 321, "wider": 321, "respond": 321, "strive": 321, "behavior": 321, "encourag": [321, 324, 329, 337], "debat": 321, "disagr": 321, "entir": [321, 324, 339, 341, 354], "silent": 321, "violat": [321, 339], "contact": [321, 339], "talk": 321, "privat": [321, 339], "situat": 321, "onlin": 321, "offlin": 321, "mail": [321, 339], "social": 321, "media": 321, "confer": 321, "adapt": [321, 339], "astropi": 321, "modelsearch_dir1": 322, "hash": 322, "modelsearch_candidate2": [322, 345], "mytab_mox1": 322, "modelsearch_candidate3": [322, 345], "modelsearch_candidate4": [322, 345], "subfold": 322, "softwar": [322, 339, 342, 343, 344, 350, 361], "temporari": 322, "finish": 322, "your": [322, 324, 335, 337, 339, 346, 363], "script": [322, 339], "null": [322, 328, 336, 338, 345, 363], "addition": [322, 332, 345], "quickli": [322, 355], "recreat": 322, "frame": 322, "programmat": 322, "pharmpy_vers": 322, "tool_nam": 322, "start_tim": 322, "2022": [322, 326, 332, 336, 338, 345], "22t14": 322, "312240": 322, "02": [322, 326, 353, 356], "end_tim": 322, "592109": 322, "mox2": [322, 326, 332, 336, 338, 345], "common_opt": 322, "tmp": 322, "tool_result": 322, "subsequ": [322, 345, 346], "thu": [322, 329, 336, 339, 342], "locat": 322, "global": [323, 363], "nonmen": 323, "conf": 323, "ini": [323, 344], "default_nonmem_path": 323, "nmfe751": 323, "licfil": 323, "rpath": 323, "temporarili": 323, "pharmpyconfigfil": 323, "bug": 324, "appreci": 324, "suitabl": [324, 350], "student": [324, 350], "commun": [324, 339], "aspir": 324, "conduct": [324, 345], "foster": 324, "linux": [324, 335], "maco": [324, 335], "ll": [324, 344], "badg": 324, "pip": [324, 335], "python3": 324, "pip3": 324, "guid": [324, 328, 342, 344], "former": 324, "ubuntu": 324, "apt": 324, "url": [324, 335], "render": [324, 339, 350], "sudo": 324, "brew": 324, "unnecessari": [324, 339], "thing": [324, 339], "instruct": [324, 335, 343, 361], "black": 324, "formatt": 324, "flake8": 324, "linter": 324, "isort": 324, "lint": 324, "reformat": 324, "py39": 324, "test_paramet": 324, "py": [324, 335], "test_get_theta": 324, "apart": 324, "suit": 324, "purpos": [324, 339], "test_modelsearch": 324, "test_summary_individu": 324, "pull": 324, "manag": 324, "contributor": [324, 339], "emploi": 324, "commit": [324, 339], "push": 324, "name_of_branch": 324, "deploy": 324, "setup": 324, "pypi": [324, 335], "trigger": [324, 342], "tag": 324, "disturb": 324, "checkout": 324, "rebas": 324, "changelog": 324, "bump": 324, "good": [324, 339], "semant": 324, "bumpvers": 324, "cfg": 324, "sh": 324, "patch": 324, "minor": 324, "major": [324, 339], "copyright": 324, "necessari": [324, 339], "coi": 324, "stream": [324, 342], "verbatim": [324, 339], "farmaci": 325, "uu": 325, "johan": 325, "borg": 325, "antonia": 325, "hufnagl": 325, "kajsa": 325, "harl": 325, "zhe": [325, 350], "huang": [325, 350], "aurelien": 325, "oom": 325, "viktor": 325, "rogn\u00e5": 325, "piyanan": 325, "assawasuwannakit": 325, "xiaomei": 325, "chen": 325, "alzahra": 325, "hamdan": 325, "osama": 325, "qutishat": 325, "shijun": 325, "wang": 325, "tianwu": 325, "yang": 325, "keqi": 325, "shi": 325, "xuanlin": 325, "liu": 325, "samia": 325, "moham": 325, "yersultan": 325, "mirasbekov": 325, "warm": 325, "thank": 325, "sponsor": 325, "hoffman": 325, "la": 325, "roch": 325, "ltd": 325, "pharmetheu": 325, "uppsala": [325, 337], "univers": [325, 337], "enabl": [325, 339], "resourc": 325, "swedish": 325, "infrastructur": 325, "snic": 325, "uppmax": 325, "research": [325, 350], "council": 325, "inter": [326, 336, 344], "five": [326, 360], "sai": [326, 339, 346], "rewritten": 326, "notic": [326, 339], "semicolon": 326, "sentenc": 326, "filtrat": [326, 345], "filtered_input_model": 326, "reflect": 326, "covsearch_run1": 326, "covsearch_run2": 326, "covsearch_run3": 326, "covsearch_run4": 326, "covsearch_run5": 326, "covsearch_run6": 326, "covsearch_run7": 326, "covsearch_run8": 326, "covsearch_run9": 326, "covsearch_run10": 326, "covsearch_run11": 326, "covsearch_run12": 326, "covsearch_run13": 326, "covsearch_run14": 326, "covsearch_run15": 326, "covsearch_run16": 326, "covsearch_run17": 326, "covsearch_run18": 326, "covsearch_run19": 326, "covsearch_run20": 326, "covsearch_run21": 326, "covsearch_run22": 326, "covsearch_run23": 326, "covsearch_run24": 326, "covsearch_run25": 326, "covsearch_run26": 326, "covsearch_run27": 326, "covsearch_run28": 326, "covsearch_run29": 326, "covsearch_run30": 326, "covsearch_run31": 326, "covsearch_run32": 326, "covsearch_run33": 326, "covsearch_run34": 326, "covsearch_run35": 326, "covsearch_run36": 326, "covsearch_run37": 326, "covsearch_run38": 326, "covsearch_run39": 326, "covsearch_run40": 326, "covsearch_run41": 326, "covsearch_run42": 326, "covsearch_run43": 326, "covsearch_run44": 326, "covsearch_run45": 326, "covsearch_run46": 326, "covsearch_run47": 326, "covsearch_run48": 326, "covsearch_run49": 326, "covsearch_run50": 326, "covsearch_run51": 326, "covsearch_run52": 326, "covsearch_run53": 326, "covsearch_run54": 326, "pvalu": [326, 356], "goal_pvalu": [326, 356], "is_backward": [326, 356], "047127e": 326, "03": [326, 351, 353, 356], "710000e": 326, "568110e": 326, "494490e": 326, "498453e": 326, "459287e": 326, "280678e": 326, "923500e": 326, "003390e": 326, "984500e": 326, "372293e": 326, "176965e": 326, "207550e": 326, "626878e": 326, "564495e": 326, "539960e": 326, "762000e": 326, "823200e": 326, "417058e": 326, "759040e": 326, "469024e": 326, "811054e": 326, "642452e": 326, "840779e": 326, "261720e": 326, "651215e": 326, "954671e": 326, "163414e": 326, "926594e": 326, "491049e": 326, "423998e": 326, "706676e": 326, "374390e": 326, "054865e": 326, "105347e": 326, "300000e": 326, "029682e": 326, "641559e": 326, "748923e": 326, "363918e": 326, "203548e": 326, "052323e": 326, "567877e": 326, "507358e": 326, "510000e": 326, "1292": [326, 332, 336, 338, 345], "186761": [326, 332, 336, 338, 345], "742325": 326, "929085": 326, "315057": 326, "1346": 326, "501817": 326, "978215": 326, "1332": 326, "164976": 326, "062682": 326, "1312": 326, "249442": 326, "061671": 326, "248431": 326, "056538": 326, "1313": [326, 345], "243298": 326, "732689": 326, "919450": 326, "651626": 326, "1335": 326, "838386": 326, "814832": 326, "1334": 326, "001593": 326, "363759": 326, "550520": 326, "989077": 326, "175838": 326, "136326": 326, "323087": 326, "387950": 326, "1316": 326, "574711": 326, "961688": 326, "148448": 326, "743393": 326, "930153": 326, "617998": 326, "1340": 326, "804759": 326, "641996": 326, "1345": 326, "828756": 326, "288366": 326, "1357": 326, "475127": 326, "263168": 326, "1343": [326, 336], "449928": 326, "814686": 326, "1319": 326, "001446": 326, "181808": 326, "368568": 326, "957602": 326, "144362": 326, "567343": 326, "1347": 326, "754104": 326, "426389": 326, "613149": 326, "324567": 326, "1358": 326, "511327": 326, "446030": 326, "632790": 326, "549224": 326, "1326": 326, "735985": 326, "997342": 326, "184102": 326, "617389": 326, "1351": 326, "804150": 326, "900404": 326, "1350": 326, "087164": 326, "566615": 326, "1391": 326, "753375": 326, "929659": 326, "1352": 326, "116420": 326, "990522": 326, "177283": 326, "217267": 326, "404028": 326, "62": [326, 351], "729333": 326, "1354": 326, "916093": 326, "101": [326, 344], "379219": 326, "1393": 326, "565980": 326, "67": [326, 353, 356], "670588": 326, "1359": 326, "857348": 326, "016040": 326, "202801": 326, "926496": 326, "113256": 326, "139": 326, "462177": 326, "1431": 326, "648937": 326, "83": [326, 353], "706655": 326, "1375": 326, "893415": 326, "798603": 326, "1367": 326, "985364": 326, "801019": 326, "1438": 326, "987780": 326, "443408": 326, "1384": 326, "630169": 326, "997461": 326, "1439": 326, "184221": 326, "322869": 326, "509630": 326, "925020": 326, "111781": 326, "142": 326, "814402": 326, "1435": 326, "001163": [326, 340], "862830": 326, "049591": 326, "449696": 326, "636456": 326, "801017": 326, "987778": 326, "89": [326, 345, 354], "86": 326, "1414": 326, "872375": 326, "93": [326, 332], "810457": 326, "630168": 326, "68": 326, "pop_vc_estim": [326, 332, 338, 355], "pop_mat_estim": [326, 332, 338, 355], "5328": [326, 332, 336, 338, 345], "104": [326, 332, 336, 338, 345], "2300": [326, 332, 336, 345], "433676": [326, 332, 336, 338, 345], "2632": 326, "103": [326, 336, 360], "2400": 326, "447194": 326, "8757": 326, "106": [326, 336, 351, 353, 355], "2690": 326, "429235": 326, "4824": 326, "0490": 326, "435646": 326, "1536": 326, "7690": 326, "430342": 326, "9763": 326, "102": 326, "8640": 326, "428158": 326, "9807": 326, "1030": 326, "505090": 326, "3823": 326, "4790": 326, "453248": 326, "3323": 326, "5279": 326, "434088": 326, "7087": 326, "1750": 326, "459561": 326, "8501": 326, "4740": 326, "428178": 326, "4821": 326, "0270": 326, "435683": 326, "1635": 326, "5920": 326, "433194": 326, "0931": 326, "1120": 326, "435607": 326, "1216": 326, "2180": 326, "519385": 326, "3873": 326, "4580": 326, "453399": 326, "4279": 326, "6231": 326, "442192": 326, "9115": 326, "9240": 326, "466270": 326, "7337": 326, "9590": 326, "409478": 326, "3781": 326, "2760": 326, "415011": 326, "1007": 326, "5110": 326, "446059": 326, "1211": 326, "8490": 326, "522201": 326, "2833": 326, "7400": 326, "430777": 326, "3688": 326, "9010": 326, "444906": 326, "9130": 326, "7450": 326, "468161": 326, "8124": 326, "7120": 326, "407766": 326, "3789": 326, "2080": 326, "416694": 326, "1985": 326, "6770": 326, "441794": 326, "2994": 326, "94": 326, "1796": 326, "587939": 326, "4692": 326, "3027": 326, "440385": 326, "0941": 326, "6170": 326, "463834": 326, "6693": 326, "2570": 326, "413923": 326, "3618": 326, "427491": 326, "2658": 326, "5620": 326, "521096": 326, "4546": 326, "9522": 326, "446657": 326, "0732": 326, "105": [326, 332, 355], "0130": 326, "454492": 326, "7145": 326, "9771": 326, "451302": 326, "3318": 326, "9710": 326, "477444": 326, "4944": 326, "3068": 326, "502124": 326, "0790": 326, "7890": 326, "462595": 326, "7389": 326, "8006": 326, "491811": 326, "6677": 326, "7770": 326, "477864": 326, "6488": 326, "0460": 326, "472418": 326, "9834": 326, "9929": 326, "474434": 326, "0359": 326, "2120": 326, "478021": 326, "0706": 326, "1991": 326, "474688": 326, "0336": 326, "8083": 326, "475373": 326, "0636": 326, "2525": 326, "473063": 326, "0292": 326, "8033": 326, "473542": 326, "0651": 326, "9375": 326, "483644": 326, "0661": 326, "5310": 326, "462817": 326, "0432": 326, "1300": [326, 338], "446808": 326, "7913": 326, "90": 326, "1894": 326, "489466": 326, "9838": 326, "9945": 326, "474441": 326, "0361": 326, "478038": 326, "ruv_prop_estim": [326, 332, 338, 355], "pop_clage_estim": 326, "209972": [326, 332, 336, 338, 345], "197452": 326, "005338": 326, "192852": 326, "199549": 326, "193411": 326, "195608": 326, "192557": 326, "198783": 326, "191425": 326, "192934": 326, "192682": 326, "000659": 326, "199545": 326, "000303": 326, "193747": 326, "000956": 326, "197305": 326, "006150": 326, "194664": 326, "005918": 326, "198812": 326, "000334": 326, "192753": 326, "006503": 326, "194238": 326, "009567": 326, "189160": 326, "005291": 326, "195766": 326, "003125": 326, "195730": 326, "004767": 326, "195098": 326, "006600": 326, "195843": 326, "001364": 326, "189330": 326, "003100": 326, "193116": 326, "008094": 326, "189540": 326, "006380": 326, "196038": 326, "002606": 326, "197429": 326, "000340": 326, "204599": 326, "002549": 326, "190442": 326, "000522": 326, "195705": 326, "005726": 326, "192398": 326, "002984": 326, "196915": 326, "000299": 326, "198387": 326, "001229": 326, "190453": 326, "000216": 326, "197082": 326, "005988": 326, "191512": 326, "002433": 326, "194217": 326, "000649": 326, "191075": 326, "001918": 326, "197129": 326, "005915": 326, "183751": 326, "001489": 326, "187999": 326, "001004": 326, "194026": 326, "005955": 326, "187663": 326, "002481": 326, "193344": 326, "009365": 326, "187822": 326, "002901": 326, "187730": 326, "187425": 326, "002946": 326, "184713": 326, "006622": 326, "187724": 326, "002919": 326, "187525": 326, "003050": 326, "192812": 326, "005142": 326, "183104": 326, "001493": 326, "187672": 326, "002483": 326, "193349": 326, "009366": 326, "pop_clwt_estim": 326, "382904": 326, "010536": 326, "387669": 326, "010497": 326, "396947": 326, "010523": 326, "385807": 326, "010703": 326, "554417": 326, "011851": 326, "519989": 326, "012179": 326, "808497": 326, "011109": 326, "737404": [326, 357], "007109": 326, "709206": 326, "000803": 326, "736659": 326, "000429": 326, "706752": 326, "000822": 326, "662625": 326, "002097": 326, "709124": 326, "000793": 326, "704774": 326, "427285": 326, "003711": 326, "779125": 326, "001087": 326, "007108": 326, "pop_matage_estim": 326, "pop_matsex_estim": 326, "059279": 326, "517590": 326, "056724": 326, "520520": 326, "063392": 326, "057943": 326, "019268": 326, "348000": 326, "008419": 326, "040813": 326, "045624": 326, "023159": 326, "057041": 326, "059912": 326, "003577": 326, "495110": 326, "070972": 326, "033397": 326, "013863": 326, "012482": 326, "367050": 326, "020109": 326, "442940": 326, "030354": 326, "491875": 326, "038044": 326, "224276": 326, "001885": 326, "848782": 326, "017435": 326, "646840": 326, "585757": 326, "000169": 326, "367142": 326, "002221": 326, "737357": 326, "009685": 326, "033267": 326, "009238": 326, "267484": 326, "012667": 326, "165471": 326, "005033": 326, "094740": 326, "010833": 326, "065816": 326, "004749": 326, "096523": 326, "005557": 326, "098655": 326, "107862": 326, "012020": 326, "118838": 326, "005781": 326, "002862": 326, "222520": 326, "005160": 326, "361570": 326, "008017": 326, "030930": 326, "005034": 326, "094706": 326, "010829": 326, "065876": 326, "pop_matwt_estim": 326, "pop_vcage_estim": 326, "019706": 326, "014651": 326, "020136": 326, "014954": 326, "022336": 326, "011936": 326, "005508": 326, "002344": 326, "013967": 326, "034213": 326, "034044": 326, "009672": 326, "008593": 326, "017124": 326, "000315": 326, "022223": 326, "019316": 326, "009542": 326, "010323": 326, "008652": 326, "018053": 326, "019211": 326, "001906": 326, "014021": 326, "011399": 326, "003565": 326, "010903": 326, "014331": 326, "013699": 326, "015830": 326, "000202": [326, 357], "002078": 326, "009019": 326, "005773": 326, "012366": 326, "002607": 326, "002247": 326, "005768": 326, "011567": 326, "006160": 326, "014272": 326, "004566": 326, "010938": 326, "002378": 326, "007473": 326, "011606": 326, "010672": 326, "000456": 326, "009445": 326, "014649": 326, "012169": 326, "005771": 326, "002248": 326, "pop_vcwt_estim": 326, "953372": 326, "013320": 326, "984897": 326, "012092": 326, "972469": 326, "011946": 326, "954734": 326, "010781": 326, "009540": 326, "009922": 326, "989687": 326, "009576": 326, "986758": 326, "869150": 326, "632058": 326, "008418": 326, "751771": 326, "007571": 326, "416489": 326, "013879": 326, "724866": 326, "008196": 326, "746265": 326, "007399": 326, "727224": 326, "008331": 326, "666572": 326, "010074": 326, "751144": 326, "008031": 326, "711725": 326, "008833": 326, "012851": 326, "967468": 326, "751794": 326, "007573": 326, "416464": 326, "013880": 326, "462": 326, "nhowev": [326, 332, 338], "reduced_ofv": [326, 356], "extended_ofv": [326, 356], "ofv_drop": [326, 356], "extended_st": [326, 356], "621435": 326, "246753": 326, "394001": 326, "645626": 326, "219363": 326, "001068": 326, "875674": 326, "899671": 326, "152040": 326, "126842": 326, "678359": 326, "045482": 326, "821275": 326, "431017": 326, "290062": 326, "366965": 326, "488428": 326, "591623": 326, "039740": 326, "659788": 326, "942802": 326, "017391": 326, "380435": 326, "441298": 326, "668043": 326, "180108": 326, "388697": 326, "680065": 326, "025518": 326, "935973": 326, "77": 326, "446136": 326, "690615": 326, "782563": 326, "71": [326, 355], "002416": 326, "644805": 326, "554053": 326, "674591": 326, "072441": 326, "183059": 326, "134631": 326, "547765": 326, "311846": 326, "373764": 326, "196444": 326, "delta_df": [326, 356], "extended_signific": [326, 356], "covariate_effect": [326, 333, 353, 356], "ofv_summari": [326, 356], "candidate_summari": [326, 356], "n_test": [326, 356], "n_ok": [326, 356], "n_localmin": [326, 356], "n_fail": [326, 356], "stepinclud": [326, 356], "estimation_ofv": 327, "prediction_ofv": 327, "545": 327, "863847": 327, "186": 327, "192727": 327, "953185": 327, "694832": 327, "547": 327, "843632": 327, "184": [327, 356], "022535": 327, "579": 327, "109635": 327, "596550": 327, "prediction_ofv_sum": 327, "747": 327, "506644594254": 327, "read_raw_dataset": 328, "sever": [328, 335, 344, 353], "examin": [328, 332, 335, 345, 362], "di": 328, "role": 328, "identif": [328, 355], "mostli": [328, 329, 350], "steven": 328, "typologi": 328, "en": [328, 329, 333], "wikipedia": 328, "wiki": [328, 339], "level_of_measur": 328, "annot": 328, "kg": 328, "mg": 328, "l": 328, "low": [328, 344, 362], "understand": [328, 349], "accompani": [328, 339], "And": [328, 339, 341, 344], "under": [329, 337, 339, 356, 363], "construct": [329, 349], "four": 329, "distinct": 329, "layer": [329, 345, 348], "worklow": 329, "higher": [329, 337, 342, 344, 357], "coupl": 329, "mathemat": [329, 342, 350], "concid": 329, "live": 329, "namespac": 329, "mutablesequ": 329, "scalar": [329, 342], "concern": [329, 339], "expos": 329, "numpydoc": 329, "readthedoc": 329, "ecosystem": 329, "wrap": 329, "share": [329, 339, 348, 354], "leak": 329, "third": [329, 339], "parti": [329, 339], "break": 329, "reason": [331, 339, 350], "fewewst": 331, "But": [331, 339], "structsearch_run1": [331, 347, 360], "metabolite_bas": 331, "structsearch_run2": [331, 347, 360], "metabolite_psc": 331, "structsearch_run3": [331, 347, 360], "structsearch_run4": [331, 360], "305346": 331, "run_estmethod": 332, "chapter": [332, 345], "cartesian": 332, "9999": 332, "runtime_estim": 332, "estmethod_run2": 332, "2422": 332, "465718": 332, "81": [332, 336, 343], "estmethod_run1": 332, "2271": 332, "769243": 332, "run_typ": 332, "1299": [332, 338], "696027": 332, "2420": 332, "117263": 332, "145": 332, "2702": 332, "1840": 332, "3241": 332, "6578": 332, "iiv_cl_estim": [332, 338, 355], "iiv_vc_estim": [332, 338, 355], "481858": [332, 336, 338, 345], "593654": [332, 336, 338, 345], "439589": 332, "483291": 332, "598179": 332, "901289": 332, "419533": 332, "408292": 332, "iiv_mat_estim": [332, 338, 355], "000130": [332, 338, 345], "322572": 332, "197647": 332, "865979": 332, "105366": 332, "10000": 332, "WITH": [332, 336, 338, 339], "THE": [332, 336, 338, 339], "model_3b": 333, "u": [333, 344], "n_": 333, "par": [333, 342], "eta_k": 333, "bmatrix": 333, "vdot": 333, "eta_": [333, 342, 344], "mathcal": [333, 342, 344], "mu_2": 333, "omega_": [333, 342], "n1": 333, "n2": 333, "ddot": 333, "latter": 333, "partit": 333, "5th": 333, "630859": 333, "868770": 333, "176754": 333, "95th": 333, "925602": 333, "082310": 333, "244607": 333, "569077": 333, "600360": 333, "632538": 333, "532478": 333, "824355": 333, "138312": 333, "577861": 333, "761430": 333, "991915": 333, "003863": 333, "148763": 333, "297579": 333, "600771": 333, "631260": 333, "661025": 333, "315965": 333, "549669": 333, "811532": 333, "margin": 333, "ij": 333, "ijk": 333, "omega_k": 333, "sigma_1": 333, "sigma_2": 333, "sigma_i": 333, "turn": [333, 342], "percent": 333, "red": 333, "figur": [333, 347], "vconcatchart": 333, "sigma_": [333, 342], "020503": 333, "628814": 333, "009309": 333, "544459": 333, "026950": 333, "613127": 333, "050396": 333, "551581": 333, "individual_effect": 333, "913307": 333, "899565": 333, "923297": 333, "939015": 333, "926632": 333, "948404": 333, "933506": 333, "894967": 333, "970755": 333, "010192": 333, "973823": 333, "047109": 333, "992728": 333, "986142": 333, "999404": 333, "361911": 333, "322628": 333, "418737": 333, "894772": 333, "868658": 333, "917333": 333, "947797": 333, "923656": 333, "969732": 333, "771958": 333, "748072": 333, "790423": 333, "790120": 333, "768277": 333, "806911": 333, "percentu": 333, "unexplained_vari": 333, "sd_observ": 333, "sd_5th": 333, "sd_95th": 333, "469535": 333, "359934": 333, "547612": 333, "465490": 333, "352335": 333, "538174": 333, "165502": 333, "141580": 333, "190726": 333, "159149": 333, "134989": 333, "183613": 333, "420471": 333, "327104": 333, "490419": 333, "404440": 333, "306148": 333, "467046": 333, "143317": 333, "122348": 333, "166012": 333, "141826": 333, "120282": 333, "163610": 333, "percetil": 333, "025328": 333, "022571": 333, "020115": 333, "216681": 333, "188254": 333, "163572": 333, "027391": 333, "021634": 333, "020540": 333, "intermedi": 333, "model_4": [333, 342], "parameter_inits_and_estim": 333, "model_3": 333, "115195": 333, "007066": 333, "209016": 333, "125999": 333, "020191": 333, "224959": 333, "126000": 333, "007084": 333, "38635": 333, "220463": 333, "195326": 333, "176796": 333, "bsv_apgr": [333, 342], "010583": 333, "107027": 333, "000008": 333, "171529": 333, "404278": 333, "000010": 333, "012042": 333, "115427": 333, "000032": 333, "208475": 333, "415588": 333, "000030": 333, "062712": 333, "117271": 333, "039930": 333, "446939": 333, "402075": 333, "bsv_wgt": [333, 342], "244579": 333, "244448": 333, "002173": 333, "002170": 333, "244080": 333, "007763": 333, "007760": 333, "249237": 333, "034610": 333, "015250": 333, "relative_chang": 333, "773218": 333, "095327": 333, "520526": 333, "271369": 333, "110618": 333, "896": 333, "974324": 333, "868": [333, 336], "657803": 333, "852": 333, "803483": 333, "753": 333, "302743": 333, "themselv": 333, "ideal": 333, "estimated_covari": 333, "stdev": 333, "423728": 333, "237640": 333, "525424": 333, "704565": 333, "nyberg": 333, "hb": 333, "jonsson": 333, "mo": 333, "introduct": 333, "cpt": 333, "pharmacometr": [333, 337, 339, 361], "syst": 333, "pharmacol": 333, "1002": 333, "psp4": 333, "12741": 333, "plan": 335, "stabl": 335, "googl": [335, 350], "coral": 335, "repo": 335, "tflite_runtim": 335, "nonlinear": 335, "read_model_result": 336, "brute": [336, 338], "approach": [336, 338], "naiv": 336, "minima": 336, "alphabet": 336, "thusli": 336, "\u03b4ofv": [336, 338, 345], "\u03b4aic": [336, 338, 345], "\u03b4bic": [336, 338, 345], "iivsearch_no_of_etas_candidate3": 336, "282024": 336, "iivsearch_no_of_etas_candidate2": 336, "217": 336, "691571": 336, "iivsearch_no_of_etas_candidate6": 336, "385": 336, "641987": 336, "iivsearch_no_of_etas_candidate1": 336, "631": 336, "871991": 336, "iivsearch_no_of_etas_candidate5": 336, "633": [336, 343], "419500": 336, "iivsearch_no_of_etas_candidate4": 336, "815": 336, "076729": 336, "iivsearch_no_of_etas_candidate7": 336, "249063": 336, "iivsearch_block_structure_candidate1": 336, "971960": 336, "1283": 336, "597406": 336, "1279": 336, "315382": 336, "1061": 336, "623812": 336, "893": 336, "673395": 336, "443392": 336, "645": 336, "895882": 336, "464": 336, "238653": 336, "066319": 336, "1365": 336, "569365": 336, "178325": 336, "1280": 336, "1278": [336, 345], "1070": 336, "204731": 336, "1058": 336, "897": 336, "963854": 336, "024311": 336, "644": 336, "650": 336, "186341": 336, "640": 336, "468": 336, "529112": 336, "458": 336, "437": 336, "440744": 336, "1364": 336, "1261": [336, 338], "189012": 336, "1259": [336, 345], "530267": [336, 345], "1039": 336, "215418": [336, 356], "641723": 336, "034998": 336, "620": 336, "864210": 336, "439": 336, "206982": 336, "417": 336, "411370": 336, "160972": 336, "5333": 336, "0366": 336, "1164": 336, "2929": 336, "8058": 336, "9055": 336, "2270": 336, "9424": 336, "1360": 336, "239": 336, "1090": 336, "6680": 336, "9380": 336, "110": 336, "6690": 336, "9880": 336, "433544": 336, "114210": 336, "347648": 336, "316164": 336, "310155": 336, "922906": 336, "434563": 336, "436279": 336, "481830": 336, "594777": 336, "396159": 336, "516927": 336, "593578": 336, "414690": 336, "247930": 336, "656304": 336, "00013": 336, "31998": 336, "08352": 336, "43473": 336, "209975": 336, "401593": 336, "574966": 336, "736398": 336, "750954": 336, "744891": 336, "810669": 336, "215885": 336, "iiv_cl_iiv_vc_estim": 336, "498114": 336, "371": 336, "rxode2": [337, 343, 344], "post": [337, 355], "sens": 338, "nonzero": 338, "iovsearch_run7": 338, "iovsearch_run5": 338, "iovsearch_run3": 338, "iovsearch_run4": 338, "iovsearch_run2": 338, "iovsearch_run1": 338, "iovsearch_run8": 338, "540508": 338, "1265": 338, "694052": 338, "230772": 338, "384316": 338, "230394": 338, "383938": 338, "1262": 338, "153544": 338, "750000": 338, "403544": 338, "750400": 338, "403145": 338, "060114": 338, "093431": 338, "043077": 338, "1257": 338, "110467": 338, "782429": 338, "1115": 338, "911624": 338, "015062": 338, "707566": 338, "017679": 338, "017280": 338, "707992": 338, "707614": 338, "017728": 338, "1145": 338, "944840": 338, "230": 338, "1954": 338, "242": [338, 351, 353], "440613": 338, "1403": 338, "665": 338, "439784": 338, "1951": 338, "241": 338, "1950": 338, "440611": 338, "1402": 338, "439785": 338, "439783": 338, "2313": 338, "438628": 338, "474140": 338, "586866": 338, "311861": 338, "472835": 338, "590422": 338, "320387": 338, "474125": 338, "586859": 338, "311859": 338, "474111": 338, "586860": 338, "311903": 338, "590425": 338, "320393": 338, "472840": 338, "590424": 338, "320395": 338, "572627": 338, "290631": 338, "omega_iov_1_estim": 338, "194680": 338, "002735": 338, "195532": 338, "194676": 338, "194675": 338, "195531": 338, "197005": 338, "483460": 338, "omega_iov_2_estim": 338, "omega_iov_3_estim": 338, "000006": 338, "000000e": [338, 354, 356], "279": [338, 351], "NEAR": [338, 345], "adopt": 339, "wikimedia": 339, "bowl_of_hygieia_by_david": 339, "svg": 339, "cc": 339, "BY": 339, "sa": 339, "font": 339, "pt": 339, "san": 339, "relicens": 339, "lgpl": 339, "know": 339, "maintaint": 339, "2024": 339, "redistribut": 339, "publish": 339, "foundat": 339, "hope": 339, "warranti": 339, "impli": 339, "merchant": 339, "FOR": 339, "modif": [339, 353], "permit": 339, "retain": 339, "disclaim": 339, "reproduc": 339, "materi": 339, "holder": 339, "AND": 339, "AS": 339, "OR": 339, "BUT": 339, "NOT": 339, "TO": 339, "OF": 339, "IN": 339, "shall": 339, "BE": 339, "liabl": 339, "incident": 339, "exemplari": 339, "consequenti": 339, "damag": 339, "procur": 339, "servic": 339, "loss": 339, "profit": 339, "busi": 339, "interrupt": 339, "theori": [339, 342], "liabil": 339, "contract": 339, "tort": 339, "neglig": 339, "aris": 339, "advis": 339, "SUCH": 339, "june": 339, "2007": 339, "inc": 339, "fsf": 339, "preambl": 339, "copyleft": 339, "practic": 339, "awai": 339, "contrast": 339, "guarante": 339, "speak": 339, "price": 339, "charg": 339, "wish": 339, "piec": 339, "prevent": 339, "deni": 339, "ask": [339, 363], "surrend": 339, "therefor": [339, 358], "grati": 339, "fee": 339, "recipi": 339, "gpl": 339, "assert": 339, "offer": [339, 344], "permiss": 339, "clearli": 339, "sake": 339, "erron": 339, "devic": 339, "although": 339, "manufactur": 339, "fundament": 339, "incompat": 339, "systemat": 339, "abus": 339, "area": [339, 350], "unaccept": 339, "prohibit": 339, "substanti": 339, "domain": [339, 341, 348], "stand": 339, "readi": 339, "provis": 339, "futur": 339, "threaten": 339, "constantli": 339, "patent": 339, "danger": 339, "proprietari": 339, "assur": 339, "law": 339, "semiconductor": 339, "mask": 339, "license": 339, "address": 339, "organ": [339, 342], "fashion": 339, "unmodifi": 339, "propag": 339, "secondarili": 339, "infring": 339, "countri": 339, "convei": 339, "mere": 339, "network": 339, "transfer": 339, "extent": 339, "conveni": [339, 342], "promin": 339, "visibl": 339, "menu": 339, "criterion": [339, 358], "offici": 339, "wide": 339, "among": 339, "essenti": 339, "kernel": 339, "link": [339, 355], "subprogram": 339, "intim": 339, "regener": 339, "grant": 339, "irrevoc": 339, "affirm": 339, "unlimit": 339, "constitut": 339, "fair": 339, "sole": [339, 354], "facil": 339, "compli": 339, "behalf": 339, "relationship": [339, 356], "circumst": 339, "sublicens": 339, "anti": 339, "circumvent": 339, "deem": 339, "technolog": 339, "oblig": 339, "articl": 339, "wipo": 339, "treati": 339, "decemb": 339, "1996": 339, "waiv": 339, "forbid": 339, "exercis": 339, "intent": 339, "enforc": 339, "medium": [339, 350], "conspicu": 339, "intact": 339, "anyon": 339, "who": [339, 346], "possess": 339, "natur": 339, "storag": 339, "aggreg": 339, "beyond": 339, "embodi": 339, "durabl": 339, "customarili": 339, "interchang": 339, "spare": 339, "cost": 339, "server": 339, "occasion": 339, "noncommerci": 339, "subsect": 339, "6b": 339, "further": [339, 342], "clear": [339, 363], "host": 339, "satisfi": 339, "peer": 339, "transmiss": 339, "6d": 339, "portion": 339, "consum": 339, "tangibl": 339, "household": 339, "sold": 339, "incorpor": 339, "dwell": 339, "doubt": 339, "resolv": [339, 348], "favor": 339, "coverag": 339, "typic": [339, 361], "commerci": 339, "industri": 339, "suffic": 339, "interf": 339, "perpetu": 339, "character": 339, "nor": 339, "abil": 339, "rom": 339, "advers": 339, "protocol": 339, "publicli": 339, "password": 339, "unpack": 339, "supplement": 339, "govern": 339, "notwithstand": 339, "misrepresent": 339, "licensor": 339, "declin": 339, "trademark": 339, "trade": 339, "indemnif": 339, "contractu": 339, "impos": 339, "surviv": 339, "expressli": 339, "void": 339, "paragraph": 339, "ceas": 339, "reinstat": 339, "provision": 339, "perman": 339, "notifi": 339, "prior": 339, "dai": 339, "cessat": 339, "moreov": 339, "cure": 339, "receipt": 339, "qualifi": 339, "ancillari": 339, "consequ": 339, "likewis": 339, "downstream": 339, "complianc": 339, "entiti": 339, "asset": 339, "subdivid": 339, "plu": 339, "effort": 339, "royalti": 339, "litig": 339, "claim": 339, "counterclaim": 339, "lawsuit": 339, "alleg": 339, "sell": 339, "sale": 339, "acquir": 339, "hereaft": 339, "manner": [339, 345], "worldwid": 339, "agreement": 339, "denomin": 339, "coven": 339, "sue": 339, "knowingli": 339, "readili": 339, "arrang": [339, 358, 360], "depriv": 339, "yourself": 339, "benefit": [339, 350], "knowledg": 339, "believ": 339, "pursuant": 339, "convey": 339, "discriminatori": 339, "scope": [339, 359], "payment": 339, "primarili": 339, "march": 339, "constru": 339, "defens": 339, "court": 339, "contradict": 339, "excus": 339, "simultan": [339, 345], "pertin": 339, "agre": 339, "whom": 339, "refrain": 339, "affero": 339, "revis": 339, "Such": 339, "spirit": 339, "ever": 339, "THERE": 339, "qualiti": 339, "prove": 339, "defect": 339, "repair": 339, "WILL": 339, "inabl": 339, "BEING": 339, "inaccur": 339, "sustain": 339, "failur": [339, 350], "review": 339, "waiver": 339, "civil": 339, "greatest": 339, "achiev": 339, "safest": 339, "pointer": 339, "brief": 339, "idea": [339, 350], "electron": 339, "paper": 339, "hypothet": 339, "Of": 339, "cours": 339, "gui": 339, "box": [339, 353], "employ": 339, "programm": 339, "school": 339, "philosophi": 339, "why": 339, "7b2feb6f20b626a559d3150f6638c111f20b5213": 339, "lin_evalu": 340, "lin_estim": 340, "847272": 340, "problemat": 340, "742853": 340, "722681": 340, "020172": 340, "049270": 340, "072922": 340, "023652": 340, "042005": 340, "025071": 340, "016933": 340, "812731": 340, "767326": 340, "045405": 340, "092668": 340, "052741": 340, "039927": 340, "345523": 340, "466217": 340, "120694": 340, "092993": 340, "062696": 340, "030297": 340, "515740": 340, "483016": 340, "032724": 340, "320532": 340, "253131": 340, "067401": 340, "998789": 340, "959488": 340, "039301": 340, "216717": 340, "214554": 340, "002163": 340, "099921": 340, "125228": 340, "025306": 340, "321679": 340, "306275": 340, "015405": 340, "261241": 340, "333707": 340, "072466": 340, "671243": 340, "651480": 340, "019763": 340, "330720": 340, "297562": 340, "033158": 340, "936161": 340, "906483": 340, "029678": 340, "714069": 340, "871090": 340, "157021": 340, "019825": 340, "011817": 340, "008008": 340, "056142": 340, "013498": 340, "042644": 340, "248747": 340, "213924": 340, "034823": 340, "605213": 340, "571494": 340, "033719": 340, "815937": 340, "898911": 340, "082974": 340, "454128": 340, "483765": 340, "029637": 340, "964631": 340, "119373": 340, "154742": 340, "186715": 340, "170103": 340, "016612": 340, "077661": 340, "064019": 340, "013642": 340, "940635": 340, "941894": 340, "001260": 340, "074883": 340, "073446": 340, "001437": 340, "256369": 340, "245489": 340, "010881": 340, "103887": 340, "101956": 340, "001932": 340, "907728": 340, "900485": 340, "007243": 340, "743720": 340, "709980": 340, "033740": 340, "047324": 340, "021009": 340, "026315": 340, "430306": 340, "400894": 340, "029412": 340, "781609": 340, "798011": 340, "016402": 340, "378940": 340, "371430": 340, "007511": 340, "194729": 340, "237151": 340, "042422": 340, "599213": 340, "525654": 340, "073559": 340, "709166": 340, "667521": 340, "041645": 340, "219054": 340, "180075": 340, "038978": 340, "122738": 340, "296506": 340, "173768": 340, "229686": 340, "228531": 340, "001156": 340, "756406": 340, "734272": 340, "022134": 340, "979740": 340, "927830": 340, "051910": 340, "813988": 340, "812185": 340, "001803": 340, "234962": 340, "233799": 340, "389988": 340, "431669": 340, "041681": 340, "057167": 340, "047647": 340, "009521": 340, "429917": 340, "365265": 340, "064652": 340, "011212": 340, "105276": 340, "094064": 340, "302735": 340, "342891": 340, "040156": 340, "292516": 340, "307608": 340, "015092": 340, "067193": 340, "977095": 340, "090098": 340, "359971": 340, "357379": 340, "002592": 340, "340768": 340, "341140": 340, "000372": 340, "515376": 340, "511708": 340, "003668": 340, "970486": 340, "940640": 340, "029846": 340, "638461": 340, "592266": 340, "046195": 340, "iofv_plot": 340, "concis": 341, "newlin": 341, "semi": [341, 354], "colon": 341, "endpoint": 341, "wildcard": 341, "inst": [341, 345], "nodepot": 341, "comprtment": [341, 347], "autom": 341, "li": [341, 342], "pk_iiv": 341, "At": 342, "heart": 342, "subclass": 342, "mymodel": [342, 344], "parset": 342, "eps_": 342, "similarli": [342, 363], "theta_": 342, "s_": 342, "a_": [342, 344, 360], "quit": 342, "flexibl": 342, "cumbersom": 342, "unimport": 342, "frem_path": 342, "frem_model": 342, "frem_model_result": 342, "omega\u2082": 342, "omega\u2083": 342, "omega\u2084": 342, "\u2082": 342, "eta\u2083": 342, "\u2083": 342, "eta\u2084": 342, "eps\u2082": 342, "epscov": 342, "bsv_": 342, "000286193": 342, "0676481": 342, "0256033": 342, "0235094": 342, "00161838": 342, "24458": 342, "omega_est": 342, "0393482": 342, "0168369": 342, "0442286": 342, "0426757": 342, "0259374": 342, "0654878": 342, "00168063": 342, "983027": 342, "240423": 342, "98305": 342, "choleski": 342, "198363807182661": 342, "0848788911603008": 342, "136868454493349": 342, "222967085720797": 342, "616745467855979": 342, "743597812371906": 342, "215138540674925": 342, "145697201390566": 342, "508675383095755": 342, "810424017694199": 342, "pure": 342, "astyp": 342, "numeric64": 342, "linalg": 342, "19836381": 342, "08487889": 342, "13686845": 342, "22296709": 342, "61674547": 342, "74359781": 342, "21513854": 342, "1456972": 342, "50867538": 342, "81042402": 342, "esim": 343, "testdata": 343, "2760562818805": 343, "171321": 343, "167051": 343, "115069": 343, "Or": 343, "039153": 343, "022378": 343, "009904": 343, "044731": [343, 354], "027325": 343, "527072": [343, 354], "457068": [343, 354], "267918": [343, 354], "172147": [343, 354], "proper": 343, "388058": 343, "356900": 343, "238442": 343, "096516": 343, "invers": [343, 354], "29955600": 343, "800": 343, "910": 343, "039": 343, "207": 343, "809": 343, "520": 343, "980": 343, "200": 343, "450": 343, "810": 343, "947352": 343, "970591": 343, "982342": 343, "457091": 343, "839437": 343, "257230": 343, "098338": 343, "538621": 343, "647969": 343, "394643": 343, "480164": 343, "650233": 343, "991406": 343, "378880": 343, "739902": 343, "328800": 343, "113284": 343, "212096": 343, "334047": 343, "327778": 343, "821533": 343, "631281": 343, "861669": 343, "915261": 343, "988977": 343, "279273": 343, "733181": 343, "830053": 343, "851724": 343, "212095": 343, "774791": 343, "352283": 343, "172643": 343, "427376": 343, "381444": 343, "624014": 343, "970627": 343, "177028": 343, "206540": 343, "955029": 343, "982447": 343, "051499": 343, "424503": 343, "734342": 343, "018477": 343, "810285": 343, "279258": 343, "168486": 343, "190508": 343, "749134": 343, "598565": 343, "237467": 343, "568934": 343, "800062": 343, "098025": 343, "586253": 343, "663948": 343, "850993": 343, "605845": 343, "143": 343, "045": 343, "971": 343, "881": 343, "575": 343, "063": 343, "427": 343, "668": 343, "543": 343, "662": 343, "478": 343, "667": 343, "253": 343, "495": 343, "918": 343, "67071": 343, "401100": 343, "35080": 343, "587770": 343, "36360": 343, "278800": 343, "19730": 343, "670700": 343, "21710": 343, "352600": 343, "86050": 343, "067200": 343, "35060": 343, "059269": 343, "72100": 343, "036754": 343, "10860": 343, "814140": 343, "28180": 343, "699410": 343, "eb": 343, "043861": 343, "005430": 343, "166321": 343, "131833": 343, "095934": 343, "130868": 343, "009154": 343, "017388": 343, "102019": 343, "283500": 343, "019417": 343, "099839": 343, "045946": 343, "059072": 343, "024270": 343, "189351": 343, "248536": 343, "091872": 343, "009545": 343, "012052": 343, "066151": 343, "293685": 343, "030236": 343, "074789": 343, "094502": 343, "147433": 343, "076820": 343, "105604": 343, "020051": 343, "066265": 343, "086035": 343, "023260": 343, "067138": 343, "030859": 343, "337255": 343, "035532": 343, "032579": 343, "028410": 343, "003589": 343, "080613": 343, "060233": 343, "052854": 343, "004469": 343, "057344": 343, "051992": 343, "212941": 343, "137510": 343, "004111": 343, "023282": 343, "302636": 343, "039069": 343, "119442": 343, "044956": 343, "263320": 343, "000776": 343, "083231": 343, "003150": 343, "012752": 343, "049654": 343, "080932": 343, "000555": 343, "099614": 343, "061864": 343, "332738": 343, "038156": 343, "067641": 343, "038017": 343, "184137": 343, "156617": 343, "208753": 343, "114558": 343, "053036": 343, "008405": 343, "026004": 343, "144920": 343, "081646": 343, "083320": 343, "015380": 343, "000392": 343, "078062": 343, "018966": 343, "112030": 343, "112715": 343, "383786": 343, "001730": 343, "167583": 343, "042068": 343, "066598": 343, "037600": 343, "000093": 343, "010662": 343, "009775": 343, "058306": 343, "229005": 343, "033958": 343, "008959": 343, "092312": 343, "050987": 343, "192569": 343, "002727": 343, "225657": 343, "115824": 343, "204269": 343, "054792": 343, "066334": 343, "123689": 343, "239678": 343, "047215": 343, "186615": 343, "000949": 343, "010812": 343, "015929": 343, "017213": 343, "005234": 343, "122552": 343, "076677": 343, "095696": 343, "024883": 343, "002999": 343, "007157": 343, "inspect": [344, 362], "model_nlmixr": 344, "diff": [344, 350], "add_error": 344, "prop_error": 344, "focei": 344, "model_start": 344, "eta_vc": 344, "pop_": 344, "225": 344, "epsilon_": 344, "iiv_cl_iiv_vc": 344, "\u03c3": 344, "iiv_mat": 344, "iiv_": 344, "advan2": 344, "THEN": 344, "22500000000000e": 344, "mytab": 344, "cond": 344, "maxev": 344, "99999": 344, "tlag": 344, "alag1": 344, "advan3": 344, "trans4": 344, "run4": 344, "tol": 344, "pop_clmm": 344, "85000000000001": 344, "pop_km": 344, "iiv_clmm": 344, "iiv_clmm_iiv_vc": 344, "iiv_cl_iiv_mat": 344, "iiv_vc_iiv_mat": 344, "0094868": 344, "onto": 344, "wgt_median": 344, "30000000000000": 344, "clwgt": 344, "pop_clwgt": 344, "user_effect": 344, "wgt_std": 344, "704564727537012": 344, "add_population_paramet": 344, "unfix_parameters_to": 344, "\u03b5\u209a\u2081": 344, "p1": 344, "set_time_varying_error_model": [344, 355], "100000000000000": 344, "f_flag": 344, "f_": 344, "geq": 344, "get_id": 344, "get_mdv": 344, "largest": 344, "ser": 344, "grammar": [345, 359], "leav": 345, "obtain": 345, "basi": 345, "594608": 345, "1272": 345, "124874": 345, "558028": 345, "088295": 345, "956313": 345, "1270": 345, "486580": 345, "287000": 345, "1260": 345, "817266": 345, "362287": 345, "1327": 345, "153182": 345, "1325": 345, "551467": 345, "1307": 345, "301235": 345, "1295": 345, "1305": 345, "1289": 345, "2927": 345, "4334": 345, "7778": 345, "0058": 345, "1640": 345, "260324": 345, "7646": 345, "824443": 345, "5477": 345, "607839": 345, "1147": 345, "842498": 345, "470974": 345, "595276": 345, "526185": 345, "930160": 345, "495109": 345, "322680": 345, "470531": 345, "515250": 345, "312692": 345, "194221": 345, "202201": 345, "207885": 345, "232322": 345, "199750": 345, "205369": 345, "193439": 345, "pop_qp1_estim": 345, "pop_vp1_estim": 345, "pop_mdt_estim": 345, "155413": 345, "4192": 345, "6100": 345, "172730": 345, "3977": 345, "4562": 345, "158070": 345, "8042": 345, "8517": 345, "iiv_mdt_estim": 345, "156289": 345, "330": 345, "topic": 346, "scheme": 346, "theta_cl": 346, "mention": 346, "ve": 346, "despit": 346, "write_etas_in_abbr": 346, "ec": [347, 359], "additionali": 347, "effectcomp_linear": 347, "215004": 347, "745013": 347, "direct_emax": 347, "212603": 347, "747413": 347, "baseline_model": 347, "960017": 347, "effectcomp_emax": 347, "984380": 347, "944396": 347, "e_max_init": 347, "altair": [348, 350], "vega": 348, "lite": 348, "ggplot": 348, "editor": 348, "clamp": 348, "vconcat": 348, "spec": 348, "inten": 349, "export": 349, "strictli": 349, "necessesari": 349, "detect_model": 349, "summer": 350, "master": 350, "thesi": 350, "internship": 350, "email": 350, "team": 350, "tox": 350, "pytest": 350, "sphinx": 350, "wise": 350, "known": 350, "trial": 350, "involv": 350, "outcom": 350, "350h": 350, "difficulti": 350, "mentor": 350, "scipi": 350, "focu": 350, "proof": 350, "concept": 350, "algebra": 350, "scratch": 350, "almost": 350, "compat": 350, "benefici": 350, "175h": 350, "easi": 350, "potenti": 350, "eas": 350, "jupyt": 350, "holoview": 350, "bokeh": 350, "monitor": 350, "ongo": 350, "veri": 350, "happen": [350, 363], "converg": 350, "sort": [350, 361], "dashboard": 350, "complement": 350, "realtim": 350, "restart": [350, 363], "middl": 350, "worflow": 350, "autocorrel": [351, 353], "dtb": [351, 353], "idv_varying_ruv": 351, "idv_varying_ruv_cutoff0": 351, "idv_varying_ruv_cutoff1": 351, "idv_varying_ruv_cutoff2": 351, "idv_varying_ruv_cutoff3": 351, "idv_varying_ruv_cutoff4": 351, "idv_varying_ruv_cutoff5": 351, "idv_varying_ruv_cutoff6": 351, "idv_varying_ruv_cutoff7": 351, "idv_varying_ruv_cutoff8": 351, "idv_varying_combin": 351, "idv_varying_theta": 351, "cv": [351, 353], "772": [351, 353], "042": [351, 353], "sdeps_0": [351, 353], "t1": 351, "298": 351, "sdeps_t1": 351, "t2": 351, "886": 351, "t0": [351, 353], "271": [351, 353], "sdeps_t0": [351, 353], "390": [351, 353], "956": [351, 353], "717": 351, "014": 351, "914": 351, "884": 351, "017": 351, "955": 351, "958": 351, "969": 351, "933": 351, "022": 351, "819": 351, "007": 351, "755": 351, "982": 351, "642": 351, "387": 351, "th_0": 351, "257": 351, "sdep": 351, "th_t1": 351, "124": 351, "th_t2": 351, "delta_pow": [351, 353], "037": [351, 353], "delet": 352, "diagnost": 352, "improement": 353, "592698": 353, "197887": 353, "007493": 353, "521171": 353, "et1apgr": 353, "487930": 353, "residual_error_model": 353, "910000": 353, "030000": 353, "diagnos": 353, "structural_bia": 353, "cpred": 353, "binmin": 353, "binmax": 353, "binid": 353, "159": 353, "258": 353, "strutur": 353, "mdel": 353, "fullblock_paramet": 353, "183463": 353, "171306": 353, "554610": 353, "154408": 353, "167053": 353, "cox": 353, "boxcox_paramet": 353, "shape": 353, "new_sd": 353, "old_sd": 353, "922083": 353, "182037": 353, "332800": 353, "166021": 353, "tdist_paramet": 353, "79": 353, "9997": 353, "168477": 353, "9986": 353, "166469": 353, "residual_error": 353, "additional_paramet": 353, "coeff": 353, "48793": 353, "033334": 353, "48218": 353, "052342": 353, "59034": 353, "008371": 353, "00887": 353, "003273": 353, "tweak": [354, 361], "slightli": [354, 356], "instabl": 354, "_retries_run2": 354, "behaviour": 354, "invert": 354, "maxiumum": 354, "took": 354, "number_of_retri": 354, "922734e": 354, "383697e": 354, "302390e": 354, "061417e": 354, "387580e": 354, "276057": 354, "ptvcl_estim": 354, "ptvcl_se": 354, "ptvcl_rse": 354, "00021": 354, "87": 354, "044758": 354, "044716": 354, "044732": 354, "044728": 354, "044669": 354, "theta_3_rs": 354, "ivcl_estim": 354, "ivcl_s": 354, "ivcl_rs": 354, "527096": 354, "029349": 354, "013418": 354, "457176": 354, "527011": 354, "029350": 354, "013416": 354, "457114": 354, "527151": 354, "457044": 354, "527073": 354, "457083": 354, "526863": 354, "457001": 354, "ivv_estim": 354, "ivv_s": 354, "ivv_rs": 354, "sigma_1_1_estim": 354, "007471": 354, "267734": 354, "007475": 354, "267856": 354, "027907": 354, "007476": 354, "267878": 354, "007468": 354, "267603": 354, "267944": 354, "sigma_1_1_s": 354, "sigma_1_1_rs": 354, "002276": 354, "171888": 354, "002280": 354, "172226": 354, "172227": 354, "002281": 354, "172295": 354, "002275": 354, "171784": 354, "ibrahim": 355, "inde": 355, "cwres_model": 355, "479721": 355, "385268": 355, "002792": 355, "time_varying1": 355, "117041": 355, "555154": 355, "time_varying3": 355, "336641": 355, "091207": 355, "065738": 355, "654562": 355, "046578": 355, "519115": 355, "612710": 355, "643741": 355, "027766": 355, "sigma_add": 355, "000367": 355, "sigma_prop": 355, "967365": 355, "00123": 355, "0976": 355, "12252": 355, "14299": 355, "000337": 355, "05242": 355, "006105": 355, "10545": 355, "12659": 355, "15573": 355, "00054": 355, "04769": 355, "030825": 355, "mox3": 355, "best_ruvsearch_1": 355, "2460": 355, "704469": 355, "957378": 355, "2473": 355, "661847": 355, "269102": 355, "2495": 355, "973571": 355, "2444": 355, "2455": 355, "2475": 355, "2423": 355, "757516": 355, "2435": 355, "047712": 355, "2453": 355, "068976": 355, "707": 355, "5434": 355, "531596": 355, "794": 355, "3091": 355, "528620": 355, "733": 355, "3094": 355, "532547": 355, "iiv_vc_iiv_cl_estim": 355, "077743": 355, "038888": 355, "076793": 355, "039924": 355, "071628": 355, "038470": 355, "072309": 355, "704770": 355, "093311": 355, "074889": 355, "707665": 355, "081095": 355, "075048": 355, "705429": 355, "044311": 355, "iiv_ruv1_estim": 355, "time_varying_estim": 355, "039675": 355, "040734": 355, "42509": 355, "moustafa": 355, "m": 355, "maria": 355, "kjellsson": 355, "aap": 355, "1208": 355, "s12248": 355, "018": 355, "0240": 355, "pha": 356, "219210": 356, "90878": 356, "219167": 356, "36222": 356, "bmi": 356, "219171": 356, "47564": 356, "cycll": 356, "219203": 356, "94536": 356, "diag": 356, "219206": 356, "01527": 356, "disdur": 356, "219032": 356, "86056": 356, "215321": 356, "70954": 356, "215306": 356, "67698": 356, "phia": 356, "men": 356, "215407": 356, "40295": 356, "phib": 356, "georeg": 356, "215373": 356, "77800": 356, "216968": 356, "25989": 356, "slp": 356, "215359": 356, "18150": 356, "54656": 356, "140000e": 356, "43314": 356, "390000e": 356, "96342": 356, "319000e": 356, "89351": 356, "695800e": 356, "178": 356, "04822": 356, "290000e": 356, "03256": 356, "060000e": 356, "72597": 356, "10102": 356, "580000e": 356, "1661": 356, "58291": 356, "50452": 356, "phaag": 356, "phabmi": 356, "phacycl": 356, "phadiag": 356, "phadisdur": 356, "backward_scm_dir1": 356, "phawt": 356, "phiamen": 356, "phibgeoreg": 356, "phibmen": 356, "slpgeoreg": 356, "304": 356, "beween": 356, "215961": 356, "46277": 356, "3249": 356, "44601": 356, "215748": 356, "07194": 356, "213": 356, "39083": 356, "215570": 356, "57352": 356, "49842": 356, "215486": 356, "23440": 356, "33912": 356, "87007": 356, "36433": 356, "215357": 356, "74693": 356, "61": 356, "12314": 356, "215337": 356, "95044": 356, "79649": 356, "24090": 356, "215332": 356, "91461": 356, "23763": 356, "67861": 356, "00163": 356, "215450": 356, "74783": 356, "07085": 356, "215491": 356, "11568": 356, "43870": 356, "500000e": 356, "700000e": 356, "170000e": 356, "260000e": 356, "360000e": 356, "600000e": 356, "020000e": 356, "620000e": 356, "430000e": 356, "200000e": 356, "lbest": 356, "cpl": 356, "230120": 357, "995045": 357, "575351": 357, "885525": 357, "860736": 357, "921633": 357, "027733": 357, "482883": 357, "300884": 357, "080061": 357, "568383": 357, "946876": 357, "654589": 357, "005653": 357, "928279": 357, "276361": 357, "376218": 357, "604188": 357, "370783": 357, "098483": 357, "795252": 357, "489785": 357, "898802": 357, "467337": 357, "957716": 357, "706108": 357, "078494": 357, "968860": 357, "773450": 357, "472019": 357, "664634": 357, "916754": 357, "823449": 357, "210594": 357, "600450": 357, "318875": 357, "527835": 357, "136767": 357, "405150": 357, "639544": 357, "104682": 357, "526828": 357, "615899": 357, "488282": 357, "406903": 357, "185132": 357, "354616": 357, "293600": 357, "818812": 357, "736463": 357, "892761": 357, "720261": 357, "884839": 357, "376893": 357, "446579": 357, "061750": 357, "849137": 357, "436720": 357, "367480": 357, "114640": 357, "615092": 357, "925921": 357, "423537": 357, "341680": 357, "054791": 357, "408347": 357, "018308": 357, "962122": 357, "705806": 357, "759167": 357, "864669": 357, "867625": 357, "664954": 357, "086333": 357, "056381": 357, "317393": 357, "280139": 357, "078385": 357, "282087": 357, "603301": 357, "449888": 357, "331177": 357, "631655": 357, "882876": 357, "678095": 357, "748996": 357, "138213": 357, "371773": 357, "758919": 357, "037941": 357, "166879": 357, "272954": 357, "929655": 357, "966413": 357, "814952": 357, "708577": 357, "567697": 357, "421235": 357, "563473": 357, "878300": 357, "715708": 357, "989005": 357, "388393": 357, "480043": 357, "959843": 357, "868224": 357, "383043": 357, "621329": 357, "277388": 357, "300601": 357, "811596": 357, "933191": 357, "676905": 357, "110075": 357, "366018": 357, "570879": 357, "786560": 357, "585174": 357, "956306": 357, "905147": 357, "961895": 357, "351180": 357, "612812": 357, "726349": 357, "445912": 357, "534496": 357, "231970": 357, "806204": 357, "584818": 357, "099846": 357, "876780": 357, "900845": 357, "988276": 357, "998400": 357, "892200": 357, "991350": 357, "924166": 357, "749003": 357, "725509": 357, "225727": 357, "018880": 357, "326447": 357, "115117": 357, "196823": 357, "212538": 357, "348921": 357, "250063": 357, "782192": 357, "806515": 357, "851698": 357, "140249": 357, "382526": 357, "944073": 357, "574493": 357, "296737": 357, "429352": 357, "659430": 357, "857266": 357, "485191": 357, "994987": 357, "574667": 357, "191840": 357, "775355": 357, "002572": 357, "733704": 357, "072216": 357, "874349": 357, "956378": 357, "794788": 357, "151243": 357, "707700": 357, "711150": 357, "676572": 357, "668763": 357, "382384": 357, "931900": 357, "538437": 357, "800871": 357, "954047": 357, "455902": 357, "498709": 357, "376121": 357, "196475": 357, "748099": 357, "731336": 357, "425364": 357, "497867": 357, "372391": 357, "848184": 357, "247095": 357, "504667": 357, "030662": 357, "565811": 357, "826862": 357, "572217": 357, "765259": 357, "455400": 357, "662370": 357, "630121": 357, "119652": 357, "298009": 357, "257409": 357, "502366": 357, "580405": 357, "035731": 357, "134650": 357, "361844": 357, "360000": 357, "305631": 357, "275622": 357, "957232": 357, "266702": 357, "169391": 357, "716192": 357, "544260": 357, "155311": 357, "361498": 357, "868679": 357, "106708": 357, "676934": 357, "022410": 357, "363698": 357, "024682": 357, "982047": 357, "904024": 357, "597599": 357, "424237": 357, "434510": 357, "575363": 357, "169297": 357, "840067": 357, "087082": 357, "098997": 357, "073635": 357, "253049": 357, "856403": 357, "884553": 357, "151935": 357, "963905": 357, "169888": 357, "497236": 357, "118999": 357, "893425": 357, "567520": 357, "351619": 357, "564632": 357, "765897": 357, "509070": 357, "046265": 357, "999275": 357, "255630": 357, "695028": 357, "586789": 357, "324755": 357, "684344": 357, "899880": 357, "408061": 357, "516160": 357, "249772": 357, "394438": 357, "493584": 357, "473731": 357, "297200": 357, "916145": 357, "659481": 357, "119216": 357, "933397": 357, "864820": 357, "606428": 357, "744242": 357, "936980": 357, "448507": 357, "178177": 357, "862927": 357, "693535": 357, "269584": 357, "605768": 357, "518105": 357, "477206": 357, "965455": 357, "764024": 357, "980420": 357, "320820": 357, "408266": 357, "500103": 357, "133073": 357, "132983": 357, "811144": 357, "180204": 357, "337790": 357, "585654": 357, "027851": 357, "105503": 357, "031564": 357, "457112": 357, "195385": 357, "960296": 357, "402983": 357, "850645": 357, "525306": 357, "814145": 357, "016286": 357, "587323": 357, "032512": 357, "052073": 357, "404922": 357, "602344": 357, "846592": 357, "950516": 357, "788249": 357, "435102": 357, "815026": 357, "451814": 357, "243399": 357, "884049": 357, "777419": 357, "589215": 357, "926077": 357, "866250": 357, "933824": 357, "601504": 357, "416254": 357, "923185": 357, "944302": 357, "495039": 357, "087071": 357, "487277": 357, "418469": 357, "824234": 357, "735586": 357, "573838": 357, "611250": 357, "547459": 357, "675347": 357, "903583": 357, "556035": 357, "749030": 357, "860290": 357, "247584": 357, "271405": 357, "501681": 357, "874004": 357, "941132": 357, "153441": 357, "804622": 357, "876965": 357, "372005": 357, "133006": 357, "193338": 357, "054769": 357, "319025": 357, "885439": 357, "357159": 357, "488686": 357, "853273": 357, "165042": 357, "215148": 357, "824880": 357, "533799": 357, "083424": 357, "993262": 357, "916884": 357, "322738": 357, "180960": 357, "905658": 357, "638247": 357, "546277": 357, "364078": 357, "313336": 357, "136159": 357, "058260": 357, "351839": 357, "542369": 357, "151210": 357, "775938": 357, "221459": 357, "873918": 357, "551158": 357, "793703": 357, "135159": 357, "899285": 357, "796073": 357, "330868": 357, "562788": 357, "230477": 357, "486179": 357, "438225": 357, "328937": 357, "479966": 357, "121901": 357, "924846": 357, "929665": 357, "432346": 357, "512627": 357, "024193": 357, "247238": 357, "694969": 357, "842566": 357, "548598": 357, "484284": 357, "387386": 357, "638560": 357, "424024": 357, "114753": 357, "853355": 357, "622712": 357, "413680": 357, "178961": 357, "695800": 357, "361556": 357, "704503": 357, "238692": 357, "541680": 357, "422555": 357, "026935": 357, "713778": 357, "316351": 357, "266944": 357, "009725": 357, "335429": 357, "937635": 357, "212573": 357, "459161": 357, "461262": 357, "462408": 357, "003027": 357, "260472": 357, "501489": 357, "179394": 357, "380865": 357, "398492": 357, "219194": 357, "218010": 357, "546036": 357, "191401": 357, "630512": 357, "051986": 357, "682987": 357, "553003": 357, "816485": 357, "767349": 357, "802797": 357, "846457": 357, "776532": 357, "822404": 357, "662582": 357, "207434": 357, "015416": 357, "565671": 357, "488859": 357, "434087": 357, "838099": 357, "341361": 357, "743671": 357, "599116": 357, "297823": 357, "086788": 357, "880881": 357, "831345": 357, "409142": 357, "516464": 357, "630846": 357, "901408": 357, "755737": 357, "793265": 357, "483346": 357, "693935": 357, "851982": 357, "912201": 357, "793645": 357, "905528": 357, "401748": 357, "069326": 357, "928532": 357, "186642": 357, "926835": 357, "077897": 357, "366585": 357, "773375": 357, "985533": 357, "819544": 357, "551208": 357, "762211": 357, "551558": 357, "843029": 357, "552114": 357, "056323": 357, "042324": 357, "187278": 357, "040276": 357, "370226": 357, "406685": 357, "802175": 357, "515088": 357, "597045": 357, "496993": 357, "639042": 357, "751915": 357, "400720": 357, "454421": 357, "977219": 357, "952586": 357, "974785": 357, "889492": 357, "641421": 357, "073683": 357, "886356": 357, "835458": 357, "853009": 357, "879430": 357, "712658": 357, "819836": 357, "374133": 357, "178975": 357, "044583": 357, "285544": 357, "415675": 357, "264764": 357, "360173": 357, "277992": 357, "396594": 357, "572606": 357, "414926": 357, "688954": 357, "358567": 357, "244786": 357, "907778": 357, "841335": 357, "496109": 357, "416676": 357, "362886": 357, "253768": 357, "222423": 357, "069317": 357, "988252": 357, "731451": 357, "206488": 357, "716822": 357, "517867": 357, "746436": 357, "911020": 357, "125029": 357, "346212": 357, "763155": 357, "453899": 357, "583418": 357, "462547": 357, "686115": 357, "783555": 357, "363551": 357, "036534": 357, "043157": 357, "972480": 357, "892175": 357, "378125": 357, "225458": 357, "723710": 357, "242420": 357, "269137": 357, "699366": 357, "408322": 357, "512603": 357, "448461": 357, "509957": 357, "159667": 357, "175264": 357, "541949": 357, "481351": 357, "625663": 357, "194473": 357, "371639": 357, "907322": 357, "550825": 357, "663661": 357, "344235": 357, "606033": 357, "875052": 357, "500411": 357, "308617": 357, "584165": 357, "432371": 357, "881148": 357, "631308": 357, "824837": 357, "323449": 357, "366355": 357, "758791": 357, "348849": 357, "iofv_summari": 357, "orgin": 357, "ob": 357, "sampled_mean": 357, "sampled_stdev": 357, "residual_q1": 357, "743042": 357, "219056": 357, "682820": 357, "550173": 357, "035912": 357, "049484": 357, "184218": 357, "853744": 357, "006216": 357, "975298": 357, "041599": 357, "817153": 357, "833045": 357, "781196": 357, "154061": 357, "813525": 357, "398238": 357, "645044": 357, "535071": 357, "205425": 357, "092618": 357, "104527": 357, "106160": 357, "955250": 357, "058617": 357, "344659": 357, "355728": 357, "480441": 357, "205000": 357, "804075": 357, "093249": 357, "372011": 357, "653334": 357, "076303": 357, "579270": 357, "515891": 357, "726464": 357, "480796": 357, "226795": 357, "894556": 357, "321253": 357, "216333": 357, "282456": 357, "045968": 357, "751381": 357, "998817": 357, "568506": 357, "544129": 357, "725055": 357, "084491": 357, "216676": 357, "724839": 357, "269729": 357, "664468": 357, "086120": 357, "099508": 357, "844053": 357, "234199": 357, "780837": 357, "277342": 357, "322169": 357, "051428": 357, "923117": 357, "660772": 357, "466385": 357, "260479": 357, "909214": 357, "004430": 357, "115441": 357, "597439": 357, "671231": 357, "358037": 357, "499079": 357, "674971": 357, "086542": 357, "331370": 357, "633905": 357, "558617": 357, "085015": 357, "554653": 357, "936751": 357, "068515": 357, "800265": 357, "310055": 357, "124015": 357, "712276": 357, "729628": 357, "167439": 357, "715703": 357, "274087": 357, "019852": 357, "305414": 357, "613668": 357, "109257": 357, "443973": 357, "056317": 357, "238664": 357, "161298": 357, "229080": 357, "385458": 357, "248420": 357, "105258": 357, "155784": 357, "539027": 357, "615940": 357, "605320": 357, "132029": 357, "756164": 357, "869343": 357, "544161": 357, "814910": 357, "779158": 357, "268737": 357, "897306": 357, "707535": 357, "453306": 357, "105961": 357, "531367": 357, "507478": 357, "179203": 357, "964192": 357, "235433": 357, "534690": 357, "029698": 357, "870557": 357, "187065": 357, "049483": 357, "611648": 357, "535116": 357, "053927": 357, "077425": 357, "840121": 357, "621227": 357, "470444": 357, "449597": 357, "941064": 357, "849583": 357, "418397": 357, "769517": 357, "495183": 357, "074840": 357, "265168": 357, "489546": 357, "543569": 357, "924754": 357, "255799": 357, "423379": 357, "792450": 357, "651388": 357, "107140": 357, "103779": 357, "709601": 357, "655290": 357, "365991": 357, "222470": 357, "908651": 357, "744590": 357, "726324": 357, "426971": 357, "126409": 357, "743926": 357, "055593": 357, "673502": 357, "381335": 357, "618133": 357, "047349": 357, "322600": 357, "222872": 357, "042834": 357, "180077": 357, "430602": 357, "209284": 357, "495631": 357, "189252": 357, "623118": 357, "780755": 357, "405726": 357, "643222": 357, "836788": 357, "746180": 357, "378962": 357, "498420": 357, "745719": 357, "565835": 357, "016391": 357, "193803": 357, "882538": 357, "054206": 357, "416539": 357, "288743": 357, "598975": 357, "649295": 357, "743847": 357, "028856": 357, "860963": 357, "709391": 357, "906579": 357, "841825": 357, "571912": 357, "121771": 357, "219260": 357, "791821": 357, "756310": 357, "933335": 357, "360735": 357, "121911": 357, "657069": 357, "952413": 357, "311206": 357, "124618": 357, "229621": 357, "945504": 357, "493299": 357, "630288": 357, "415407": 357, "756085": 357, "131488": 357, "213636": 357, "050337": 357, "463633": 357, "980475": 357, "118333": 357, "749123": 357, "229958": 357, "025404": 357, "813878": 357, "738522": 357, "668408": 357, "112740": 357, "972107": 357, "235064": 357, "396011": 357, "934618": 357, "518106": 357, "392308": 357, "216396": 357, "339562": 357, "024801": 357, "793238": 357, "057118": 357, "556378": 357, "796045": 357, "776264": 357, "019010": 357, "430617": 357, "431370": 357, "731493": 357, "527208": 357, "010968": 357, "724711": 357, "959211": 357, "448445": 357, "131466": 357, "302385": 357, "264697": 357, "597597": 357, "779232": 357, "494133": 357, "292477": 357, "639161": 357, "067293": 357, "167700": 357, "637834": 357, "067793": 357, "249132": 357, "314731": 357, "969084": 357, "239401": 357, "359860": 357, "215238": 357, "477740": 357, "578842": 357, "053376": 357, "340902": 357, "021182": 357, "172446": 357, "684367": 357, "059050": 357, "515114": 357, "245427": 357, "197044": 357, "787564": 357, "106919": 357, "970391": 357, "379183": 357, "982728": 357, "807580": 357, "296212": 357, "639192": 357, "874018": 357, "032032": 357, "252364": 357, "047063": 357, "residual_q3": 357, "residual_outli": 357, "832458": 357, "136329": 357, "090316": 357, "021748": 357, "766581": 357, "001176": 357, "238974": 357, "071653": 357, "388881": 357, "584759": 357, "780298": 357, "680349": 357, "043355": 357, "691710": 357, "827298": 357, "317850": 357, "008777": 357, "291308": 357, "498512": 357, "312807": 357, "178997": 357, "306182": 357, "116610": 357, "468439": 357, "007865": 357, "384037": 357, "344744": 357, "151930": 357, "790639": 357, "416342": 357, "637759": 357, "153920": 357, "135334": 357, "038095": 357, "705065": 357, "359915": 357, "588440": 357, "151899": 357, "730945": 357, "514178": 357, "784304": 357, "977290": 357, "707253": 357, "982678": 357, "384237": 357, "576792": 357, "302778": 357, "342653": 357, "313826": 357, "775998": 357, "274818": 357, "191111": 357, "817604": 357, "421290": 357, "461701": 357, "940801": 357, "437023": 357, "207477": 357, "755739": 357, "individual_predictions_plot": 357, "exceed": 358, "rse_theta": 358, "rse_omega": 358, "rse_sigma": 358, "condition_numb": 358, "final_zero_gradi": 358, "final_zero_gradient_theta": 358, "final_zero_gradient_omega": 358, "final_zero_gradient_sigma": 358, "estimate_near_boundari": 358, "estimate_near_boundary_theta": 358, "estimate_near_boundary_omega": 358, "estimate_near_boundary_sigma": 358, "da_": 360, "deg": 360, "syn": 360, "lafre": 360, "mc": 360, "entral": 360, "kint": 360, "specifii": 360, "standalon": 360, "minu": 360, "full1": 360, "679076": 360, "4243": 360, "302405": 360, "full2": 360, "679069": 360, "302412": 360, "structsearch_run5": 360, "cr1": 360, "987197": 360, "4246": 360, "994284": 360, "qss2": 360, "4257": 360, "981481": 360, "structsearch_run11": 360, "897162": 360, "4289": 360, "878642": 360, "structsearch_run9": 360, "ib1": 360, "201724": 360, "4355": 360, "183204": 360, "structsearch_run7": 360, "201728": 360, "183209": 360, "structsearch_run12": 360, "284581": 360, "4361": 360, "266061": 360, "full3": 360, "full4": 360, "structsearch_run6": 360, "cr2": 360, "structsearch_run8": 360, "ib2": 360, "structsearch_run10": 360, "trim": 361, "gotcha": 362, "cran": 363, "rapid": 363, "remot": 363, "install_github": 363, "install_pharmpi": 363, "session": 363, "packagevers": 363, "print_pharmpy_vers": 363, "reticul": 363, "miniconda": 363, "py_discover_config": 363, "conda_cr": 363, "python_vers": 363, "virtual": 363, "libpython": 363, "lib": 363, "libpython3": 363, "mirror": 363, "pipe": 363, "magrittr": 363}, "objects": {"pharmpy": [[312, 0, 0, "-", "model"], [313, 0, 0, "-", "modeling"], [314, 0, 0, "-", "tools"], [315, 0, 0, "-", "workflows"], [320, 6, 1, "cmdoption-pharmpy-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-version", "--version"], [320, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[8, 1, 1, "", "Assignment"], [9, 1, 1, "", "Bolus"], [10, 1, 1, "", "ColumnInfo"], [11, 1, 1, "", "Compartment"], [12, 1, 1, "", "CompartmentalSystem"], [13, 1, 1, "", "CompartmentalSystemBuilder"], [14, 1, 1, "", "DataInfo"], [15, 4, 1, "", "DatasetError"], [16, 4, 1, "", "DatasetWarning"], [17, 1, 1, "", "Distribution"], [18, 1, 1, "", "EstimationStep"], [19, 1, 1, "", "EstimationSteps"], [20, 1, 1, "", "Infusion"], [21, 1, 1, "", "JointNormalDistribution"], [22, 1, 1, "", "Model"], [23, 4, 1, "", "ModelError"], [24, 4, 1, "", "ModelSyntaxError"], [25, 4, 1, "", "ModelfitResultsError"], [26, 1, 1, "", "NormalDistribution"], [27, 1, 1, "", "Parameter"], [28, 1, 1, "", "Parameters"], [29, 1, 1, "", "RandomVariables"], [30, 1, 1, "", "SimulationStep"], [31, 1, 1, "", "Statement"], [32, 1, 1, "", "Statements"], [33, 1, 1, "", "VariabilityHierarchy"], [34, 1, 1, "", "VariabilityLevel"], [35, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[8, 2, 1, "", "create"], [8, 3, 1, "", "expression"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "symbol"], [8, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[9, 3, 1, "", "amount"], [9, 2, 1, "", "create"], [9, 3, 1, "", "free_symbols"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "replace"], [9, 2, 1, "", "subs"], [9, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[10, 3, 1, "", "categories"], [10, 3, 1, "", "continuous"], [10, 2, 1, "", "convert_datatype_to_pd_dtype"], [10, 2, 1, "", "convert_pd_dtype_to_datatype"], [10, 2, 1, "", "create"], [10, 3, 1, "", "datatype"], [10, 3, 1, "", "descriptor"], [10, 3, 1, "", "drop"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "get_all_categories"], [10, 2, 1, "", "is_categorical"], [10, 2, 1, "", "is_integer"], [10, 2, 1, "", "is_numerical"], [10, 3, 1, "", "name"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "scale"], [10, 2, 1, "", "to_dict"], [10, 3, 1, "", "type"], [10, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[11, 3, 1, "", "amount"], [11, 3, 1, "", "bioavailability"], [11, 2, 1, "", "create"], [11, 3, 1, "", "doses"], [11, 3, 1, "", "free_symbols"], [11, 2, 1, "", "from_dict"], [11, 3, 1, "", "input"], [11, 3, 1, "", "lag_time"], [11, 3, 1, "", "name"], [11, 2, 1, "", "replace"], [11, 2, 1, "", "subs"], [11, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[12, 3, 1, "", "amounts"], [12, 2, 1, "", "atoms"], [12, 3, 1, "", "central_compartment"], [12, 3, 1, "", "compartment_names"], [12, 3, 1, "", "compartmental_matrix"], [12, 2, 1, "", "create"], [12, 3, 1, "", "dosing_compartments"], [12, 3, 1, "", "eqs"], [12, 2, 1, "", "find_compartment"], [12, 2, 1, "", "find_compartment_or_raise"], [12, 2, 1, "", "find_depot"], [12, 2, 1, "", "find_peripheral_compartments"], [12, 2, 1, "", "find_transit_compartments"], [12, 3, 1, "", "free_symbols"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "get_bidirectionals"], [12, 2, 1, "", "get_compartment_inflows"], [12, 2, 1, "", "get_compartment_outflows"], [12, 2, 1, "", "get_flow"], [12, 2, 1, "", "get_n_connected"], [12, 2, 1, "", "replace"], [12, 3, 1, "", "rhs_symbols"], [12, 2, 1, "", "subs"], [12, 3, 1, "", "t"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[13, 2, 1, "", "add_compartment"], [13, 2, 1, "", "add_flow"], [13, 2, 1, "", "find_compartment"], [13, 2, 1, "", "move_dose"], [13, 2, 1, "", "remove_compartment"], [13, 2, 1, "", "remove_flow"], [13, 2, 1, "", "set_bioavailability"], [13, 2, 1, "", "set_dose"], [13, 2, 1, "", "set_input"], [13, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[14, 2, 1, "", "create"], [14, 3, 1, "", "descriptorix"], [14, 3, 1, "", "dv_column"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "from_json"], [14, 2, 1, "", "get_dtype_dict"], [14, 3, 1, "", "id_column"], [14, 3, 1, "", "idv_column"], [14, 3, 1, "", "names"], [14, 3, 1, "", "path"], [14, 2, 1, "", "read_json"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "separator"], [14, 2, 1, "", "set_column"], [14, 2, 1, "", "set_dv_column"], [14, 2, 1, "", "set_id_column"], [14, 2, 1, "", "set_idv_column"], [14, 2, 1, "", "set_types"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "to_json"], [14, 3, 1, "", "typeix"], [14, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 3, 1, "", "parameter_names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[18, 3, 1, "", "auto"], [18, 2, 1, "", "create"], [18, 3, 1, "", "epsilon_derivatives"], [18, 3, 1, "", "eta_derivatives"], [18, 3, 1, "", "evaluation"], [18, 2, 1, "", "from_dict"], [18, 3, 1, "", "interaction"], [18, 3, 1, "", "isample"], [18, 3, 1, "", "keep_every_nth_iter"], [18, 3, 1, "", "laplace"], [18, 3, 1, "", "maximum_evaluations"], [18, 3, 1, "", "method"], [18, 3, 1, "", "niter"], [18, 3, 1, "", "parameter_uncertainty_method"], [18, 3, 1, "", "predictions"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "residuals"], [18, 3, 1, "", "supported_methods"], [18, 3, 1, "", "supported_parameter_uncertainty_methods"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[19, 2, 1, "", "create"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "replace"], [19, 2, 1, "", "to_dataframe"], [19, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[20, 3, 1, "", "amount"], [20, 2, 1, "", "create"], [20, 3, 1, "", "duration"], [20, 3, 1, "", "free_symbols"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "rate"], [20, 2, 1, "", "replace"], [20, 2, 1, "", "subs"], [20, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[21, 2, 1, "", "create"], [21, 2, 1, "", "evalf"], [21, 3, 1, "", "free_symbols"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "get_covariance"], [21, 2, 1, "", "get_variance"], [21, 2, 1, "", "latex_string"], [21, 3, 1, "", "level"], [21, 3, 1, "", "mean"], [21, 3, 1, "", "names"], [21, 2, 1, "", "replace"], [21, 2, 1, "", "subs"], [21, 2, 1, "", "to_dict"], [21, 3, 1, "", "variance"]], "pharmpy.model.Model": [[22, 2, 1, "", "create"], [22, 3, 1, "", "datainfo"], [22, 3, 1, "", "dataset"], [22, 3, 1, "", "dependent_variables"], [22, 3, 1, "", "description"], [22, 3, 1, "", "estimation_steps"], [22, 3, 1, "", "filename_extension"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "has_same_dataset_as"], [22, 3, 1, "", "initial_individual_estimates"], [22, 3, 1, "", "internals"], [22, 3, 1, "", "model_code"], [22, 3, 1, "", "name"], [22, 3, 1, "", "observation_transformation"], [22, 3, 1, "", "parameters"], [22, 3, 1, "", "parent_model"], [22, 2, 1, "", "parse_model"], [22, 2, 1, "", "parse_model_from_string"], [22, 3, 1, "", "random_variables"], [22, 2, 1, "", "replace"], [22, 3, 1, "", "statements"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "update_source"], [22, 3, 1, "", "value_type"], [22, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[26, 2, 1, "", "create"], [26, 2, 1, "", "evalf"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_variance"], [26, 2, 1, "", "latex_string"], [26, 3, 1, "", "level"], [26, 3, 1, "", "mean"], [26, 3, 1, "", "names"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[27, 2, 1, "", "create"], [27, 3, 1, "", "fix"], [27, 2, 1, "", "from_dict"], [27, 3, 1, "", "init"], [27, 3, 1, "", "lower"], [27, 3, 1, "", "name"], [27, 2, 1, "", "replace"], [27, 3, 1, "", "symbol"], [27, 2, 1, "", "to_dict"], [27, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[28, 2, 1, "", "create"], [28, 3, 1, "", "fix"], [28, 3, 1, "", "fixed"], [28, 2, 1, "", "from_dict"], [28, 3, 1, "", "inits"], [28, 3, 1, "", "lower"], [28, 3, 1, "", "names"], [28, 3, 1, "", "nonfixed"], [28, 2, 1, "", "replace"], [28, 2, 1, "", "set_fix"], [28, 2, 1, "", "set_initial_estimates"], [28, 3, 1, "", "symbols"], [28, 2, 1, "", "to_dataframe"], [28, 2, 1, "", "to_dict"], [28, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[29, 3, 1, "", "covariance_matrix"], [29, 2, 1, "", "create"], [29, 3, 1, "", "epsilon_levels"], [29, 3, 1, "", "epsilons"], [29, 3, 1, "", "eta_levels"], [29, 3, 1, "", "etas"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "get_covariance"], [29, 2, 1, "", "get_rvs_with_same_dist"], [29, 3, 1, "", "iiv"], [29, 3, 1, "", "iov"], [29, 2, 1, "", "join"], [29, 3, 1, "", "names"], [29, 2, 1, "", "nearest_valid_parameters"], [29, 3, 1, "", "nrvs"], [29, 3, 1, "", "parameter_names"], [29, 2, 1, "", "parameters_sdcorr"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "replace_with_sympy_rvs"], [29, 2, 1, "", "sample"], [29, 2, 1, "", "subs"], [29, 3, 1, "", "symbols"], [29, 2, 1, "", "to_dict"], [29, 2, 1, "", "unjoin"], [29, 2, 1, "", "validate_parameters"], [29, 3, 1, "", "variance_parameters"]], "pharmpy.model.SimulationStep": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "n"], [30, 2, 1, "", "replace"], [30, 3, 1, "", "seed"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.Statement": [[31, 3, 1, "", "free_symbols"], [31, 3, 1, "", "rhs_symbols"], [31, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[32, 3, 1, "", "after_odes"], [32, 3, 1, "", "before_odes"], [32, 2, 1, "", "dependencies"], [32, 2, 1, "", "direct_dependencies"], [32, 3, 1, "", "error"], [32, 2, 1, "", "find_assignment"], [32, 2, 1, "", "find_assignment_index"], [32, 3, 1, "", "free_symbols"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "full_expression"], [32, 3, 1, "", "ode_system"], [32, 2, 1, "", "reassign"], [32, 2, 1, "", "remove_symbol_definitions"], [32, 2, 1, "", "subs"], [32, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[33, 2, 1, "", "create"], [33, 2, 1, "", "from_dict"], [33, 3, 1, "", "levels"], [33, 3, 1, "", "names"], [33, 2, 1, "", "replace"], [33, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[34, 2, 1, "", "create"], [34, 2, 1, "", "from_dict"], [34, 3, 1, "", "group"], [34, 3, 1, "", "name"], [34, 3, 1, "", "reference"], [34, 2, 1, "", "replace"], [34, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[36, 5, 1, "", "add_admid"], [37, 5, 1, "", "add_allometry"], [38, 5, 1, "", "add_bioavailability"], [39, 5, 1, "", "add_cmt"], [40, 5, 1, "", "add_covariate_effect"], [41, 5, 1, "", "add_effect_compartment"], [42, 5, 1, "", "add_estimation_step"], [43, 5, 1, "", "add_iiv"], [44, 5, 1, "", "add_indirect_effect"], [45, 5, 1, "", "add_individual_parameter"], [46, 5, 1, "", "add_iov"], [47, 5, 1, "", "add_lag_time"], [48, 5, 1, "", "add_metabolite"], [49, 5, 1, "", "add_parameter_uncertainty_step"], [50, 5, 1, "", "add_pd_iiv"], [51, 5, 1, "", "add_peripheral_compartment"], [52, 5, 1, "", "add_pk_iiv"], [53, 5, 1, "", "add_population_parameter"], [54, 5, 1, "", "add_predictions"], [55, 5, 1, "", "add_residuals"], [56, 5, 1, "", "add_time_after_dose"], [57, 5, 1, "", "append_estimation_step_options"], [58, 5, 1, "", "bin_observations"], [59, 5, 1, "", "bump_model_number"], [60, 5, 1, "", "calculate_aic"], [61, 5, 1, "", "calculate_bic"], [62, 5, 1, "", "calculate_corr_from_cov"], [63, 5, 1, "", "calculate_corr_from_prec"], [64, 5, 1, "", "calculate_cov_from_corrse"], [65, 5, 1, "", "calculate_cov_from_prec"], [66, 5, 1, "", "calculate_epsilon_gradient_expression"], [67, 5, 1, "", "calculate_eta_gradient_expression"], [68, 5, 1, "", "calculate_eta_shrinkage"], [69, 5, 1, "", "calculate_individual_parameter_statistics"], [70, 5, 1, "", "calculate_individual_shrinkage"], [71, 5, 1, "", "calculate_parameters_from_ucp"], [72, 5, 1, "", "calculate_pk_parameters_statistics"], [73, 5, 1, "", "calculate_prec_from_corrse"], [74, 5, 1, "", "calculate_prec_from_cov"], [75, 5, 1, "", "calculate_se_from_cov"], [76, 5, 1, "", "calculate_se_from_prec"], [77, 5, 1, "", "calculate_ucp_scale"], [78, 5, 1, "", "check_dataset"], [79, 5, 1, "", "check_high_correlations"], [80, 5, 1, "", "check_parameters_near_bounds"], [81, 5, 1, "", "cleanup_model"], [82, 5, 1, "", "convert_model"], [83, 5, 1, "", "create_basic_pk_model"], [84, 5, 1, "", "create_config_template"], [85, 5, 1, "", "create_joint_distribution"], [86, 5, 1, "", "create_rng"], [87, 5, 1, "", "create_symbol"], [88, 5, 1, "", "deidentify_data"], [89, 5, 1, "", "display_odes"], [90, 5, 1, "", "drop_columns"], [91, 5, 1, "", "drop_dropped_columns"], [92, 5, 1, "", "evaluate_epsilon_gradient"], [93, 5, 1, "", "evaluate_eta_gradient"], [94, 5, 1, "", "evaluate_expression"], [95, 5, 1, "", "evaluate_individual_prediction"], [96, 5, 1, "", "evaluate_population_prediction"], [97, 5, 1, "", "evaluate_weighted_residuals"], [98, 5, 1, "", "expand_additional_doses"], [99, 5, 1, "", "filter_dataset"], [100, 5, 1, "", "find_clearance_parameters"], [101, 5, 1, "", "find_volume_parameters"], [102, 5, 1, "", "fix_or_unfix_parameters"], [103, 5, 1, "", "fix_parameters"], [104, 5, 1, "", "fix_parameters_to"], [105, 5, 1, "", "get_admid"], [106, 5, 1, "", "get_baselines"], [107, 5, 1, "", "get_bioavailability"], [108, 5, 1, "", "get_central_volume_and_clearance"], [109, 5, 1, "", "get_cmt"], [110, 5, 1, "", "get_concentration_parameters_from_data"], [111, 5, 1, "", "get_config_path"], [112, 5, 1, "", "get_covariate_baselines"], [113, 5, 1, "", "get_covariate_effects"], [114, 5, 1, "", "get_doseid"], [115, 5, 1, "", "get_doses"], [116, 5, 1, "", "get_dv_symbol"], [117, 5, 1, "", "get_evid"], [118, 5, 1, "", "get_ids"], [119, 5, 1, "", "get_individual_parameters"], [120, 5, 1, "", "get_individual_prediction_expression"], [121, 5, 1, "", "get_initial_conditions"], [122, 5, 1, "", "get_lag_times"], [123, 5, 1, "", "get_mdv"], [124, 5, 1, "", "get_model_code"], [125, 5, 1, "", "get_model_covariates"], [126, 5, 1, "", "get_number_of_individuals"], [127, 5, 1, "", "get_number_of_observations"], [128, 5, 1, "", "get_number_of_observations_per_individual"], [129, 5, 1, "", "get_number_of_peripheral_compartments"], [130, 5, 1, "", "get_number_of_transit_compartments"], [131, 5, 1, "", "get_observation_expression"], [132, 5, 1, "", "get_observations"], [133, 5, 1, "", "get_omegas"], [134, 5, 1, "", "get_parameter_rv"], [135, 5, 1, "", "get_pd_parameters"], [136, 5, 1, "", "get_pk_parameters"], [137, 5, 1, "", "get_population_prediction_expression"], [138, 5, 1, "", "get_rv_parameters"], [139, 5, 1, "", "get_sigmas"], [140, 5, 1, "", "get_thetas"], [141, 5, 1, "", "get_unit_of"], [142, 5, 1, "", "get_zero_order_inputs"], [143, 5, 1, "", "greekify_model"], [144, 5, 1, "", "has_additive_error_model"], [145, 5, 1, "", "has_combined_error_model"], [146, 5, 1, "", "has_covariate_effect"], [147, 5, 1, "", "has_first_order_absorption"], [148, 5, 1, "", "has_first_order_elimination"], [149, 5, 1, "", "has_instantaneous_absorption"], [150, 5, 1, "", "has_linear_odes"], [151, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [152, 5, 1, "", "has_michaelis_menten_elimination"], [153, 5, 1, "", "has_mixed_mm_fo_elimination"], [154, 5, 1, "", "has_odes"], [155, 5, 1, "", "has_presystemic_metabolite"], [156, 5, 1, "", "has_proportional_error_model"], [157, 5, 1, "", "has_random_effect"], [158, 5, 1, "", "has_seq_zo_fo_absorption"], [159, 5, 1, "", "has_weighted_error_model"], [160, 5, 1, "", "has_zero_order_absorption"], [161, 5, 1, "", "has_zero_order_elimination"], [162, 5, 1, "", "is_linearized"], [163, 5, 1, "", "is_real"], [164, 5, 1, "", "list_time_varying_covariates"], [165, 5, 1, "", "load_dataset"], [166, 5, 1, "", "load_example_model"], [167, 5, 1, "", "make_declarative"], [168, 5, 1, "", "mu_reference_model"], [169, 5, 1, "", "omit_data"], [170, 5, 1, "", "plot_abs_cwres_vs_ipred"], [171, 5, 1, "", "plot_cwres_vs_idv"], [172, 5, 1, "", "plot_dv_vs_ipred"], [173, 5, 1, "", "plot_dv_vs_pred"], [174, 5, 1, "", "plot_eta_distributions"], [175, 5, 1, "", "plot_individual_predictions"], [176, 5, 1, "", "plot_iofv_vs_iofv"], [177, 5, 1, "", "plot_transformed_eta_distributions"], [178, 5, 1, "", "print_model_code"], [179, 5, 1, "", "print_model_symbols"], [180, 5, 1, "", "read_dataset_from_datainfo"], [181, 5, 1, "", "read_model"], [182, 5, 1, "", "read_model_from_string"], [183, 5, 1, "", "remove_bioavailability"], [184, 5, 1, "", "remove_covariate_effect"], [185, 5, 1, "", "remove_error_model"], [186, 5, 1, "", "remove_estimation_step"], [187, 5, 1, "", "remove_iiv"], [188, 5, 1, "", "remove_iov"], [189, 5, 1, "", "remove_lag_time"], [190, 5, 1, "", "remove_loq_data"], [191, 5, 1, "", "remove_parameter_uncertainty_step"], [192, 5, 1, "", "remove_peripheral_compartment"], [193, 5, 1, "", "remove_predictions"], [194, 5, 1, "", "remove_residuals"], [195, 5, 1, "", "remove_unused_parameters_and_rvs"], [196, 5, 1, "", "rename_symbols"], [197, 5, 1, "", "replace_non_random_rvs"], [198, 5, 1, "", "resample_data"], [199, 5, 1, "", "sample_individual_estimates"], [200, 5, 1, "", "sample_parameters_from_covariance_matrix"], [201, 5, 1, "", "sample_parameters_uniformly"], [202, 5, 1, "", "set_additive_error_model"], [203, 5, 1, "", "set_baseline_effect"], [204, 5, 1, "", "set_combined_error_model"], [205, 5, 1, "", "set_covariates"], [206, 5, 1, "", "set_dataset"], [207, 5, 1, "", "set_direct_effect"], [208, 5, 1, "", "set_dtbs_error_model"], [209, 5, 1, "", "set_dvid"], [210, 5, 1, "", "set_estimation_step"], [211, 5, 1, "", "set_evaluation_step"], [212, 5, 1, "", "set_first_order_absorption"], [213, 5, 1, "", "set_first_order_elimination"], [214, 5, 1, "", "set_iiv_on_ruv"], [215, 5, 1, "", "set_initial_condition"], [216, 5, 1, "", "set_initial_estimates"], [217, 5, 1, "", "set_instantaneous_absorption"], [218, 5, 1, "", "set_lloq_data"], [219, 5, 1, "", "set_lower_bounds"], [220, 5, 1, "", "set_michaelis_menten_elimination"], [221, 5, 1, "", "set_mixed_mm_fo_elimination"], [222, 5, 1, "", "set_name"], [223, 5, 1, "", "set_ode_solver"], [224, 5, 1, "", "set_peripheral_compartments"], [225, 5, 1, "", "set_power_on_ruv"], [226, 5, 1, "", "set_proportional_error_model"], [227, 5, 1, "", "set_reference_values"], [228, 5, 1, "", "set_seq_zo_fo_absorption"], [229, 5, 1, "", "set_simulation"], [230, 5, 1, "", "set_time_varying_error_model"], [231, 5, 1, "", "set_tmdd"], [232, 5, 1, "", "set_transit_compartments"], [233, 5, 1, "", "set_upper_bounds"], [234, 5, 1, "", "set_weighted_error_model"], [235, 5, 1, "", "set_zero_order_absorption"], [236, 5, 1, "", "set_zero_order_elimination"], [237, 5, 1, "", "set_zero_order_input"], [238, 5, 1, "", "simplify_expression"], [239, 5, 1, "", "solve_ode_system"], [240, 5, 1, "", "split_joint_distribution"], [241, 5, 1, "", "transform_blq"], [242, 5, 1, "", "transform_etas_boxcox"], [243, 5, 1, "", "transform_etas_john_draper"], [244, 5, 1, "", "transform_etas_tdist"], [245, 5, 1, "", "translate_nmtran_time"], [246, 5, 1, "", "unconstrain_parameters"], [247, 5, 1, "", "undrop_columns"], [248, 5, 1, "", "unfix_parameters"], [249, 5, 1, "", "unfix_parameters_to"], [250, 5, 1, "", "unload_dataset"], [251, 5, 1, "", "update_initial_individual_estimates"], [252, 5, 1, "", "update_inits"], [253, 5, 1, "", "use_thetas_for_error_stdev"], [254, 5, 1, "", "vpc_plot"], [255, 5, 1, "", "write_csv"], [256, 5, 1, "", "write_model"]], "pharmpy.tools": [[257, 5, 1, "", "create_report"], [258, 5, 1, "", "create_results"], [259, 5, 1, "", "fit"], [260, 5, 1, "", "get_model_features"], [261, 5, 1, "", "is_strictness_fulfilled"], [262, 5, 1, "", "load_example_modelfit_results"], [263, 5, 1, "", "predict_influential_individuals"], [264, 5, 1, "", "predict_influential_outliers"], [265, 5, 1, "", "predict_outliers"], [266, 5, 1, "", "print_fit_summary"], [267, 5, 1, "", "rank_models"], [268, 5, 1, "", "read_modelfit_results"], [269, 5, 1, "", "read_results"], [270, 5, 1, "", "resume_tool"], [271, 5, 1, "", "retrieve_final_model"], [272, 5, 1, "", "retrieve_models"], [273, 5, 1, "", "run_allometry"], [274, 5, 1, "", "run_amd"], [275, 5, 1, "", "run_bootstrap"], [276, 5, 1, "", "run_covsearch"], [277, 5, 1, "", "run_estmethod"], [278, 5, 1, "", "run_iivsearch"], [279, 5, 1, "", "run_iovsearch"], [280, 5, 1, "", "run_modelfit"], [281, 5, 1, "", "run_modelsearch"], [282, 5, 1, "", "run_retries"], [283, 5, 1, "", "run_ruvsearch"], [284, 5, 1, "", "run_simulation"], [285, 5, 1, "", "run_structsearch"], [286, 5, 1, "", "run_tool"], [287, 5, 1, "", "summarize_errors"], [288, 5, 1, "", "summarize_individuals"], [289, 5, 1, "", "summarize_individuals_count_table"], [290, 5, 1, "", "summarize_modelfit_results"], [291, 5, 1, "", "write_results"]], "pharmpy.workflows": [[292, 1, 1, "", "LocalDirectoryDatabase"], [293, 1, 1, "", "LocalDirectoryToolDatabase"], [294, 1, 1, "", "LocalModelDirectoryDatabase"], [295, 1, 1, "", "Log"], [296, 1, 1, "", "ModelDatabase"], [297, 1, 1, "", "ModelEntry"], [298, 1, 1, "", "ModelfitResults"], [299, 1, 1, "", "NullModelDatabase"], [300, 1, 1, "", "NullToolDatabase"], [301, 1, 1, "", "Results"], [302, 1, 1, "", "SimulationResults"], [303, 1, 1, "", "Task"], [304, 1, 1, "", "ToolDatabase"], [305, 1, 1, "", "Workflow"], [306, 1, 1, "", "WorkflowBuilder"], [307, 5, 1, "", "call_workflow"], [308, 3, 1, "", "default_model_database"], [309, 3, 1, "", "default_tool_database"], [310, 5, 1, "", "execute_workflow"], [311, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[292, 2, 1, "", "retrieve_file"], [292, 2, 1, "", "retrieve_local_files"], [292, 2, 1, "", "retrieve_model"], [292, 2, 1, "", "retrieve_model_entry"], [292, 2, 1, "", "retrieve_modelfit_results"], [292, 2, 1, "", "store_local_file"], [292, 2, 1, "", "store_metadata"], [292, 2, 1, "", "store_model"], [292, 2, 1, "", "store_model_entry"], [292, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[293, 2, 1, "", "from_dict"], [293, 2, 1, "", "read_metadata"], [293, 2, 1, "", "store_local_file"], [293, 2, 1, "", "store_metadata"], [293, 2, 1, "", "store_results"], [293, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[294, 2, 1, "", "list_models"], [294, 2, 1, "", "snapshot"], [294, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[295, 3, 1, "", "errors"], [295, 2, 1, "", "from_dict"], [295, 2, 1, "", "log_error"], [295, 2, 1, "", "log_warning"], [295, 2, 1, "", "to_dataframe"], [295, 2, 1, "", "to_dict"], [295, 3, 1, "", "warnings"]], "pharmpy.workflows.ModelDatabase": [[296, 2, 1, "", "retrieve_file"], [296, 2, 1, "", "retrieve_local_files"], [296, 2, 1, "", "retrieve_model"], [296, 2, 1, "", "retrieve_model_entry"], [296, 2, 1, "", "retrieve_modelfit_results"], [296, 2, 1, "", "snapshot"], [296, 2, 1, "", "store_local_file"], [296, 2, 1, "", "store_metadata"], [296, 2, 1, "", "store_model"], [296, 2, 1, "", "store_model_entry"], [296, 2, 1, "", "store_modelfit_results"], [296, 2, 1, "", "transaction"]], "pharmpy.workflows.ModelEntry": [[297, 2, 1, "", "attach_results"], [297, 2, 1, "", "create"], [297, 3, 1, "", "log"], [297, 3, 1, "", "model"], [297, 3, 1, "", "modelfit_results"], [297, 3, 1, "", "parent"], [297, 3, 1, "", "simulation_results"]], "pharmpy.workflows.ModelfitResults": [[298, 3, 1, "", "correlation_matrix"], [298, 3, 1, "", "covariance_matrix"], [298, 3, 1, "", "covstep_successful"], [298, 3, 1, "", "description"], [298, 3, 1, "", "estimation_runtime"], [298, 3, 1, "", "estimation_runtime_iterations"], [298, 3, 1, "", "evaluation"], [298, 3, 1, "", "function_evaluations"], [298, 3, 1, "", "function_evaluations_iterations"], [298, 3, 1, "", "gradients"], [298, 3, 1, "", "gradients_iterations"], [298, 3, 1, "", "individual_estimates"], [298, 3, 1, "", "individual_estimates_covariance"], [298, 3, 1, "", "individual_ofv"], [298, 3, 1, "", "log"], [298, 3, 1, "", "log_likelihood"], [298, 3, 1, "", "minimization_successful"], [298, 3, 1, "", "minimization_successful_iterations"], [298, 3, 1, "", "name"], [298, 3, 1, "", "ofv"], [298, 3, 1, "", "ofv_iterations"], [298, 3, 1, "", "parameter_estimates"], [298, 3, 1, "", "parameter_estimates_iterations"], [298, 3, 1, "", "parameter_estimates_sdcorr"], [298, 3, 1, "", "precision_matrix"], [298, 3, 1, "", "predictions"], [298, 3, 1, "", "relative_standard_errors"], [298, 3, 1, "", "residuals"], [298, 3, 1, "", "runtime_total"], [298, 3, 1, "", "significant_digits"], [298, 3, 1, "", "significant_digits_iterations"], [298, 3, 1, "", "standard_errors"], [298, 3, 1, "", "standard_errors_sdcorr"], [298, 3, 1, "", "termination_cause"], [298, 3, 1, "", "termination_cause_iterations"], [298, 3, 1, "", "warnings"]], "pharmpy.workflows.NullModelDatabase": [[299, 2, 1, "", "retrieve_file"], [299, 2, 1, "", "retrieve_local_files"], [299, 2, 1, "", "retrieve_model"], [299, 2, 1, "", "retrieve_model_entry"], [299, 2, 1, "", "retrieve_modelfit_results"], [299, 2, 1, "", "store_local_file"], [299, 2, 1, "", "store_metadata"], [299, 2, 1, "", "store_model"], [299, 2, 1, "", "store_model_entry"], [299, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[300, 2, 1, "", "read_metadata"], [300, 2, 1, "", "store_local_file"], [300, 2, 1, "", "store_metadata"], [300, 2, 1, "", "store_results"]], "pharmpy.workflows.Results": [[301, 2, 1, "", "from_dict"], [301, 2, 1, "", "get_and_reset_index"], [301, 2, 1, "", "to_csv"], [301, 2, 1, "", "to_dict"], [301, 2, 1, "", "to_json"]], "pharmpy.workflows.SimulationResults": [[302, 3, 1, "", "description"], [302, 3, 1, "", "name"], [302, 3, 1, "", "table"]], "pharmpy.workflows.Task": [[303, 2, 1, "", "create"], [303, 3, 1, "", "function"], [303, 3, 1, "", "name"], [303, 2, 1, "", "replace"], [303, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[304, 3, 1, "", "model_database"], [304, 3, 1, "", "path"], [304, 2, 1, "", "read_metadata"], [304, 2, 1, "", "store_local_file"], [304, 2, 1, "", "store_metadata"], [304, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[305, 2, 1, "", "as_dask_dict"], [305, 2, 1, "", "create"], [305, 3, 1, "", "name"], [305, 2, 1, "", "plot_dask"], [305, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[306, 2, 1, "", "add_task"], [306, 2, 1, "", "insert_workflow"], [306, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[320, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [320, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [320, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [320, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [320, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [320, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[320, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [320, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[320, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [320, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [320, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [320, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [320, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [320, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[320, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [320, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[320, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [320, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [320, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [320, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [320, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [320, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[320, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [320, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [320, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [320, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [320, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [320, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [320, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[320, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [320, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [320, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [320, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [320, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[320, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[320, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-print": [[320, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [320, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-sample": [[320, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [320, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [320, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-update_inits": [[320, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [320, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [320, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [320, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [320, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[320, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[320, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[320, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[320, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [320, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [320, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [320, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[320, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[320, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[320, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[320, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[320, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[320, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[320, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[320, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[320, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[320, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[320, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[320, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [320, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [320, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [320, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [320, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [320, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [320, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [320, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [320, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [320, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [320, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [320, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [320, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[320, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [320, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[320, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[320, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [320, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [320, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [320, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[320, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[320, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [320, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[320, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[320, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [320, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [320, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[320, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [320, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 323, 346], "dataset": [0, 322, 328, 342, 344], "overview": [0, 349, 353], "pars": 0, "translat": 0, "step": [0, 342, 344, 356], "nm": 0, "tran": 0, "comment": 0, "line": [0, 320], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 344], "date": 0, "id": 0, "check": [0, 324], "tabl": 0, "file": [0, 323, 328], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 324], "all": [0, 325], "zero": 0, "individu": [0, 316, 317, 333, 340, 343, 357], "phc": 0, "control": 0, "stream": 0, "gener": [0, 2, 334, 339], "option": [0, 1, 6, 315, 326, 332, 336, 338, 341, 345, 347, 355, 360, 361], "problem": 0, "data": [0, 315, 320], "eta": [0, 344], "code": [0, 321, 324], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 301, 316, 317, 320, 322, 326, 327, 331, 332, 333, 336, 338, 340, 343, 345, 347, 351, 353, 354, 355, 356, 357, 359, 360], "spars": 0, "matrix": [0, 316, 343], "allometri": [1, 2, 3, 4, 5, 6, 320, 344], "run": [1, 2, 3, 4, 5, 6, 320, 322, 324, 326, 331, 332, 336, 338, 345, 347, 354, 355, 359, 360], "argument": [1, 2, 3, 4, 5, 6, 326, 332, 336, 338, 345, 347, 354, 355, 359, 360], "mandatori": [1, 3, 4, 5, 6, 326, 332, 336, 338, 345, 347, 355, 360], "procedur": [1, 355], "The": [1, 316, 317, 323, 327, 329, 331, 332, 333, 336, 340, 342, 345, 351, 353, 354, 355, 356, 357, 359], "automat": 2, "model": [2, 3, 4, 6, 22, 312, 313, 320, 328, 329, 331, 336, 341, 342, 343, 344, 345, 346, 347, 351, 355, 359, 360], "develop": [2, 324, 325, 330], "amd": [2, 3, 4, 5, 6, 320], "support": [2, 324], "type": [2, 328, 341, 359, 360], "specif": 2, "input": [2, 3, 4, 6, 325], "search": [2, 3, 4, 5, 6, 326, 331, 336, 345, 347, 359], "space": [2, 3, 4, 5, 6, 326, 331, 345, 347, 359], "exampl": [2, 3, 4, 5, 6, 335, 341, 344, 347, 358, 360], "strategi": [2, 3, 4, 5, 6], "default": 2, "reevalu": 2, "sir": 2, "sri": 2, "rsi": 2, "retri": [2, 354], "compon": [2, 3, 4, 5, 6], "structur": [2, 3, 4, 5, 6, 344, 353], "iivsearch": [2, 3, 4, 5, 6, 320, 336], "residu": [2, 3, 4, 5, 6, 343, 353], "iovsearch": [2, 3, 4, 5, 6, 320, 338], "covari": [2, 316, 317, 333, 343, 344, 353], "final": [2, 343], "tmdd": [2, 6, 360], "pkpd": [2, 5, 347], "drug": [3, 331], "metabolit": [3, 331], "covsearch": [3, 4, 5, 6, 320, 326], "minim": [3, 4, 5, 6], "pk": 4, "specifi": 5, "api": 7, "refer": [7, 317, 320, 333], "assign": 8, "bolu": 9, "columninfo": [10, 328], "compart": 11, "compartmentalsystem": 12, "compartmentalsystembuild": 13, "datainfo": [14, 328, 342], "dataseterror": 15, "datasetwarn": 16, "distribut": [17, 338, 342, 344], "estimationstep": [18, 19], "infus": 20, "jointnormaldistribut": 21, "modelerror": 23, "modelsyntaxerror": 24, "modelfitresultserror": 25, "normaldistribut": 26, "paramet": [27, 28, 316, 329, 332, 333, 342, 343, 344, 346], "randomvari": [29, 329], "simulationstep": 30, "statement": [31, 32, 329, 342], "variabilityhierarchi": 33, "variabilitylevel": 34, "to_compartmental_system": 35, "add_admid": 36, "add_allometri": 37, "add_bioavail": 38, "add_cmt": 39, "add_covariate_effect": 40, "add_effect_compart": 41, "add_estimation_step": 42, "add_iiv": 43, "add_indirect_effect": 44, "add_individual_paramet": 45, "add_iov": 46, "add_lag_tim": 47, "add_metabolit": 48, "add_parameter_uncertainty_step": 49, "add_pd_iiv": 50, "add_peripheral_compart": 51, "add_pk_iiv": 52, "add_population_paramet": 53, "add_predict": 54, "add_residu": 55, "add_time_after_dos": 56, "append_estimation_step_opt": 57, "bin_observ": 58, "bump_model_numb": 59, "calculate_a": 60, "calculate_b": 61, "calculate_corr_from_cov": 62, "calculate_corr_from_prec": 63, "calculate_cov_from_corrs": 64, "calculate_cov_from_prec": 65, "calculate_epsilon_gradient_express": 66, "calculate_eta_gradient_express": 67, "calculate_eta_shrinkag": 68, "calculate_individual_parameter_statist": 69, "calculate_individual_shrinkag": 70, "calculate_parameters_from_ucp": 71, "calculate_pk_parameters_statist": 72, "calculate_prec_from_corrs": 73, "calculate_prec_from_cov": 74, "calculate_se_from_cov": 75, "calculate_se_from_prec": 76, "calculate_ucp_scal": 77, "check_dataset": 78, "check_high_correl": 79, "check_parameters_near_bound": 80, "cleanup_model": 81, "convert_model": 82, "create_basic_pk_model": 83, "create_config_templ": 84, "create_joint_distribut": 85, "create_rng": 86, "create_symbol": 87, "deidentify_data": 88, "display_od": 89, "drop_column": 90, "drop_dropped_column": 91, "evaluate_epsilon_gradi": 92, "evaluate_eta_gradi": 93, "evaluate_express": 94, "evaluate_individual_predict": 95, "evaluate_population_predict": 96, "evaluate_weighted_residu": 97, "expand_additional_dos": 98, "filter_dataset": 99, "find_clearance_paramet": 100, "find_volume_paramet": 101, "fix_or_unfix_paramet": 102, "fix_paramet": 103, "fix_parameters_to": 104, "get_admid": 105, "get_baselin": 106, "get_bioavail": 107, "get_central_volume_and_clear": 108, "get_cmt": 109, "get_concentration_parameters_from_data": 110, "get_config_path": 111, "get_covariate_baselin": 112, "get_covariate_effect": 113, "get_doseid": 114, "get_dos": 115, "get_dv_symbol": 116, "get_evid": 117, "get_id": 118, "get_individual_paramet": 119, "get_individual_prediction_express": 120, "get_initial_condit": 121, "get_lag_tim": 122, "get_mdv": 123, "get_model_cod": 124, "get_model_covari": 125, "get_number_of_individu": 126, "get_number_of_observ": 127, "get_number_of_observations_per_individu": 128, "get_number_of_peripheral_compart": 129, "get_number_of_transit_compart": 130, "get_observation_express": 131, "get_observ": 132, "get_omega": 133, "get_parameter_rv": 134, "get_pd_paramet": 135, "get_pk_paramet": 136, "get_population_prediction_express": 137, "get_rv_paramet": 138, "get_sigma": 139, "get_theta": 140, "get_unit_of": 141, "get_zero_order_input": 142, "greekify_model": 143, "has_additive_error_model": 144, "has_combined_error_model": 145, "has_covariate_effect": 146, "has_first_order_absorpt": 147, "has_first_order_elimin": 148, "has_instantaneous_absorpt": 149, "has_linear_od": 150, "has_linear_odes_with_real_eigenvalu": 151, "has_michaelis_menten_elimin": 152, "has_mixed_mm_fo_elimin": 153, "has_od": 154, "has_presystemic_metabolit": 155, "has_proportional_error_model": 156, "has_random_effect": 157, "has_seq_zo_fo_absorpt": 158, "has_weighted_error_model": 159, "has_zero_order_absorpt": 160, "has_zero_order_elimin": 161, "is_linear": 162, "is_real": 163, "list_time_varying_covari": 164, "load_dataset": 165, "load_example_model": 166, "make_declar": 167, "mu_reference_model": 168, "omit_data": 169, "plot_abs_cwres_vs_ipr": 170, "plot_cwres_vs_idv": 171, "plot_dv_vs_ipr": 172, "plot_dv_vs_pr": 173, "plot_eta_distribut": 174, "plot_individual_predict": 175, "plot_iofv_vs_iofv": 176, "plot_transformed_eta_distribut": 177, "print_model_cod": 178, "print_model_symbol": 179, "read_dataset_from_datainfo": 180, "read_model": 181, "read_model_from_str": 182, "remove_bioavail": 183, "remove_covariate_effect": 184, "remove_error_model": 185, "remove_estimation_step": 186, "remove_iiv": 187, "remove_iov": 188, "remove_lag_tim": 189, "remove_loq_data": 190, "remove_parameter_uncertainty_step": 191, "remove_peripheral_compart": 192, "remove_predict": 193, "remove_residu": 194, "remove_unused_parameters_and_rv": 195, "rename_symbol": 196, "replace_non_random_rv": 197, "resample_data": 198, "sample_individual_estim": 199, "sample_parameters_from_covariance_matrix": 200, "sample_parameters_uniformli": 201, "set_additive_error_model": 202, "set_baseline_effect": 203, "set_combined_error_model": 204, "set_covari": 205, "set_dataset": 206, "set_direct_effect": 207, "set_dtbs_error_model": 208, "set_dvid": 209, "set_estimation_step": 210, "set_evaluation_step": 211, "set_first_order_absorpt": 212, "set_first_order_elimin": 213, "set_iiv_on_ruv": 214, "set_initial_condit": 215, "set_initial_estim": 216, "set_instantaneous_absorpt": 217, "set_lloq_data": 218, "set_lower_bound": 219, "set_michaelis_menten_elimin": 220, "set_mixed_mm_fo_elimin": 221, "set_nam": 222, "set_ode_solv": 223, "set_peripheral_compart": 224, "set_power_on_ruv": 225, "set_proportional_error_model": 226, "set_reference_valu": 227, "set_seq_zo_fo_absorpt": 228, "set_simul": 229, "set_time_varying_error_model": 230, "set_tmdd": 231, "set_transit_compart": 232, "set_upper_bound": 233, "set_weighted_error_model": 234, "set_zero_order_absorpt": 235, "set_zero_order_elimin": 236, "set_zero_order_input": 237, "simplify_express": 238, "solve_ode_system": 239, "split_joint_distribut": 240, "transform_blq": 241, "transform_etas_boxcox": 242, "transform_etas_john_drap": 243, "transform_etas_tdist": 244, "translate_nmtran_tim": 245, "unconstrain_paramet": 246, "undrop_column": 247, "unfix_paramet": 248, "unfix_parameters_to": 249, "unload_dataset": 250, "update_initial_individual_estim": 251, "update_init": [252, 320], "use_thetas_for_error_stdev": 253, "vpc_plot": 254, "write_csv": 255, "write_model": 256, "create_report": 257, "create_result": 258, "fit": [259, 343], "get_model_featur": 260, "is_strictness_fulfil": 261, "load_example_modelfit_result": 262, "predict_influential_individu": 263, "predict_influential_outli": 264, "predict_outli": 265, "print_fit_summari": 266, "rank_model": 267, "read_modelfit_result": 268, "read_result": 269, "resume_tool": 270, "retrieve_final_model": 271, "retrieve_model": 272, "run_allometri": 273, "run_amd": 274, "run_bootstrap": 275, "run_covsearch": 276, "run_estmethod": 277, "run_iivsearch": 278, "run_iovsearch": 279, "run_modelfit": 280, "run_modelsearch": 281, "run_retri": 282, "run_ruvsearch": 283, "run_simul": 284, "run_structsearch": 285, "run_tool": 286, "summarize_error": 287, "summarize_individu": 288, "summarize_individuals_count_t": 289, "summarize_modelfit_result": 290, "write_result": 291, "localdirectorydatabas": 292, "localdirectorytooldatabas": 293, "localmodeldirectorydatabas": 294, "log": 295, "modeldatabas": 296, "modelentri": 297, "modelfitresult": 298, "nullmodeldatabas": 299, "nulltooldatabas": 300, "simulationresult": 302, "task": 303, "tooldatabas": 304, "workflow": [305, 315, 324, 331, 347, 360], "workflowbuild": 306, "call_workflow": 307, "default_model_databas": 308, "default_tool_databas": 309, "execute_workflow": 310, "split_common_opt": 311, "pharmpi": [312, 313, 314, 315, 319, 320, 321, 323, 324, 329, 337, 342, 348, 352, 361, 363], "packag": [312, 313, 314, 315], "function": [312, 313, 314, 315, 344], "class": [312, 315, 329], "tool": [314, 322, 352, 361], "modul": [315, 329], "bootstrap": [316, 320], "postprocess": [316, 333], "statist": 316, "ofv": [316, 317, 320, 327, 333, 340, 343, 356, 357], "includ": 316, "case": 317, "delet": 317, "diagnost": 317, "cdd": [317, 320], "cook": 317, "score": 317, "jackknif": 317, "cookscor": 317, "ratio": 317, "delta": 317, "skip": 317, "column": 317, "changelog": 318, "0": 318, "109": 318, "2024": 318, "04": 318, "10": 318, "new": [318, 338, 346], "featur": [318, 322, 341, 345], "chang": [318, 348], "bugfix": 318, "108": 318, "03": 318, "18": 318, "107": 318, "106": 318, "01": 318, "11": 318, "105": 318, "2023": 318, "12": 318, "07": 318, "104": 318, "06": 318, "103": 318, "102": 318, "09": 318, "28": 318, "101": 318, "100": 318, "08": 318, "25": 318, "99": 318, "23": 318, "98": 318, "21": 318, "97": 318, "96": 318, "05": 318, "26": 318, "95": 318, "22": 318, "94": 318, "93": 318, "19": 318, "92": 318, "91": 318, "90": 318, "02": 318, "24": 318, "89": 318, "88": 318, "2022": 318, "87": 318, "14": 318, "86": 318, "30": 318, "85": 318, "84": 318, "1": 318, "13": 318, "bug": 318, "fix": 318, "83": 318, "82": 318, "81": 318, "80": 318, "79": 318, "16": 318, "78": 318, "20": 318, "77": 318, "76": 318, "75": 318, "74": 318, "73": 318, "72": 318, "71": 318, "70": 318, "17": 318, "69": 318, "29": 318, "68": 318, "27": 318, "67": 318, "66": 318, "65": 318, "64": 318, "63": 318, "62": 318, "61": 318, "31": 318, "59": 318, "58": 318, "4": 318, "57": 318, "56": 318, "55": 318, "54": 318, "53": 318, "52": 318, "51": 318, "50": 318, "49": 318, "48": 318, "47": 318, "46": 318, "45": 318, "44": 318, "43": 318, "42": 318, "41": 318, "2021": 318, "40": 318, "39": 318, "15": 318, "38": 318, "37": 318, "36": 318, "35": 318, "34": 318, "3": 318, "2": [318, 339], "33": 318, "32": 318, "2020": 318, "9": 318, "8": 318, "7": 318, "6": 318, "5": 318, "2018": 318, "citat": 319, "how": 319, "cite": 319, "pharmr": [319, 363], "command": 320, "interfac": 320, "append": 320, "deidentifi": 320, "filter": 320, "print": 320, "resampl": 320, "write": [320, 342, 344, 346], "info": 320, "sampl": [320, 357], "frem": [320, 333], "linear": [320, 340], "qa": [320, 353], "report": 320, "ruvsearch": [320, 355], "scm": [320, 356], "simev": [320, 357], "summari": [320, 356, 357], "estmethod": [320, 332], "execut": 320, "modelsearch": [320, 345], "commun": 321, "conduct": 321, "common": [322, 345, 361], "databas": 322, "directori": 322, "metadata": 322, "configur": 323, "avail": 323, "plugin": [323, 346, 349], "nlmixr": 323, "rxode": 323, "environ": [323, 324], "variabl": [323, 333, 342, 344, 346], "contribut": 324, "set": [324, 348], "up": [324, 336], "platform": 324, "instal": [324, 335, 363], "python": [324, 363], "git": 324, "fork": 324, "clone": 324, "repositori": 324, "tox": 324, "graphviz": 324, "us": [324, 346, 363], "build": 324, "document": [324, 330], "unit": [324, 328], "test": 324, "integr": 324, "usabl": 324, "virtual": 324, "standard": [324, 343], "releas": 324, "version": [324, 363], "inform": [324, 344], "contributor": 325, "current": 325, "team": 325, "past": 325, "present": 325, "scientif": 325, "fund": 325, "wildcard": 326, "algorithm": [326, 332, 336, 338, 345], "crossval": 327, "crossvalid": 327, "retriev": 328, "from": 328, "updat": [328, 332], "scale": [328, 354], "continu": 328, "categori": 328, "drop": 328, "datatyp": 328, "descriptor": 328, "design": 329, "principl": 329, "level": [329, 342], "architectur": 329, "heart": 329, "docstr": 329, "depend": [329, 342], "structsearch": [331, 347, 359, 360], "exhaust": [332, 336, 345], "onli": 332, "evalu": 332, "estim": [332, 333, 342, 343, 344], "method": 332, "solver": 332, "uncertainti": 332, "effect": [333, 353], "coeffici": 333, "unexplain": 333, "valu": 333, "get": 335, "start": [335, 336], "A": 335, "first": 335, "top": 336, "down": 336, "bottom": 336, "stepwis": [336, 345], "ad": [336, 342, 344, 345], "iiv": [336, 345], "compar": [336, 338, 345], "rank": [336, 338, 345], "candid": [336, 338, 345, 356], "welcom": 337, "iov": 338, "licens": 339, "logo": 339, "copyright": 339, "bsd": 339, "claus": 339, "gnu": 339, "lesser": 339, "public": 339, "languag": 341, "mfl": 341, "symbol": [341, 342], "describ": 341, "interv": 341, "redund": 341, "descript": [341, 342], "read": [342, 344, 346], "inspect": 342, "attribut": 342, "name": [342, 346], "random": [342, 346], "low": 342, "manipul": 342, "object": 342, "creat": [342, 344], "substitut": 342, "numer": 342, "modelfit": 343, "error": [343, 344, 353, 363], "rel": 343, "correl": 343, "precis": 343, "indiviud": 343, "predict": [343, 357], "basic": 344, "load": 344, "convert": 344, "transform": 344, "absorpt": 344, "rate": 344, "delai": 344, "elimin": 344, "remov": 344, "popul": 344, "blq": 344, "examin": 344, "modifi": 344, "subject": 344, "observ": 344, "dose": 344, "extract": 344, "group": 344, "after": 344, "concentr": 344, "behaviour": 345, "between": [345, 363], "combin": 345, "exclus": 345, "reduc": 345, "dure": 345, "plot": [348, 357], "theme": 348, "axi": 348, "project": 350, "suggest": 350, "resmod": 351, "psn": 352, "connect": 352, "bia": 353, "fullblock": 353, "boxcox": 353, "tdist": 353, "normal": 354, "ucp": 354, "strict": 358, "full": 360, "ib": 360, "cr": 360, "qss": 360, "wagner": 360, "mmapp": 360, "dv": 360, "user": 362, "guid": 362, "r": 363, "troubl": 363, "shoot": 363, "wrong": 363, "when": 363, "conda": 363, "import": 363, "mismatch": 363, "gotcha": 363, "list": 363, "indic": 363}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"get_bioavailability": [[107, "get-bioavailability"]], "get_cmt": [[109, "get-cmt"]], "get_config_path": [[111, "get-config-path"]], "fix_parameters_to": [[104, "fix-parameters-to"]], "get_concentration_parameters_from_data": [[110, "get-concentration-parameters-from-data"]], "find_volume_parameters": [[101, "find-volume-parameters"]], "get_admid": [[105, "get-admid"]], "evaluate_expression": [[94, "evaluate-expression"]], "filter_dataset": [[99, "filter-dataset"]], "evaluate_eta_gradient": [[93, "evaluate-eta-gradient"]], "get_doses": [[115, "get-doses"]], "get_covariate_baselines": [[112, "get-covariate-baselines"]], "get_baselines": [[106, "get-baselines"]], "expand_additional_doses": [[98, "expand-additional-doses"]], "get_ids": [[118, "get-ids"]], "evaluate_individual_prediction": [[95, "evaluate-individual-prediction"]], "get_doseid": [[114, "get-doseid"]], "get_dv_symbol": [[116, "get-dv-symbol"]], "evaluate_epsilon_gradient": [[92, "evaluate-epsilon-gradient"]], "get_evid": [[117, "get-evid"]], "find_clearance_parameters": [[100, "find-clearance-parameters"]], "get_covariate_effects": [[113, "get-covariate-effects"]], "drop_columns": [[90, "drop-columns"]], "get_central_volume_and_clearance": [[108, "get-central-volume-and-clearance"]], "evaluate_weighted_residuals": [[97, "evaluate-weighted-residuals"]], "fix_parameters": [[103, "fix-parameters"]], "evaluate_population_prediction": [[96, "evaluate-population-prediction"]], "fix_or_unfix_parameters": [[102, "fix-or-unfix-parameters"]], "drop_dropped_columns": [[91, "drop-dropped-columns"]], "get_individual_parameters": [[119, "get-individual-parameters"]], "calculate_parameters_from_ucp": [[71, "calculate-parameters-from-ucp"]], "check_dataset": [[78, "check-dataset"]], "cleanup_model": [[81, "cleanup-model"]], "calculate_pk_parameters_statistics": [[72, "calculate-pk-parameters-statistics"]], "calculate_se_from_cov": [[75, "calculate-se-from-cov"]], "calculate_epsilon_gradient_expression": [[66, "calculate-epsilon-gradient-expression"]], "calculate_aic": [[60, "calculate-aic"]], "calculate_ucp_scale": [[77, "calculate-ucp-scale"]], "calculate_eta_shrinkage": [[68, "calculate-eta-shrinkage"]], "calculate_cov_from_corrse": [[64, "calculate-cov-from-corrse"]], "create_rng": [[86, "create-rng"]], "calculate_cov_from_prec": [[65, "calculate-cov-from-prec"]], "create_joint_distribution": [[85, "create-joint-distribution"]], "create_basic_pk_model": [[83, "create-basic-pk-model"]], "calculate_individual_shrinkage": [[70, "calculate-individual-shrinkage"]], "calculate_prec_from_cov": [[74, "calculate-prec-from-cov"]], "calculate_corr_from_prec": [[63, "calculate-corr-from-prec"]], "create_config_template": [[84, "create-config-template"]], "check_parameters_near_bounds": [[80, "check-parameters-near-bounds"]], "calculate_se_from_prec": [[76, "calculate-se-from-prec"]], "deidentify_data": [[88, "deidentify-data"]], "calculate_eta_gradient_expression": [[67, "calculate-eta-gradient-expression"]], "create_symbol": [[87, "create-symbol"]], "calculate_bic": [[61, "calculate-bic"]], "calculate_prec_from_corrse": [[73, "calculate-prec-from-corrse"]], "convert_model": [[82, "convert-model"]], "check_high_correlations": [[79, "check-high-correlations"]], "calculate_individual_parameter_statistics": [[69, "calculate-individual-parameter-statistics"]], "display_odes": [[89, "display-odes"]], "calculate_corr_from_cov": [[62, "calculate-corr-from-cov"]], "VariabilityHierarchy": [[33, "variabilityhierarchy"]], "VariabilityLevel": [[34, "variabilitylevel"]], "add_peripheral_compartment": [[51, "add-peripheral-compartment"]], "add_metabolite": [[48, "add-metabolite"]], "add_effect_compartment": [[41, "add-effect-compartment"]], "add_predictions": [[54, "add-predictions"]], "add_indirect_effect": [[44, "add-indirect-effect"]], "add_bioavailability": [[38, "add-bioavailability"]], "add_estimation_step": [[42, "add-estimation-step"]], "append_estimation_step_options": [[57, "append-estimation-step-options"]], "add_individual_parameter": [[45, "add-individual-parameter"]], "add_pk_iiv": [[52, "add-pk-iiv"]], "add_lag_time": [[47, "add-lag-time"]], "add_covariate_effect": [[40, "add-covariate-effect"]], "bump_model_number": [[59, "bump-model-number"]], "add_parameter_uncertainty_step": [[49, "add-parameter-uncertainty-step"]], "to_compartmental_system": [[35, "to-compartmental-system"]], "SimulationStep": [[30, "simulationstep"]], "bin_observations": [[58, "bin-observations"]], "add_pd_iiv": [[50, "add-pd-iiv"]], "add_iiv": [[43, "add-iiv"]], "add_population_parameter": [[53, "add-population-parameter"]], "add_admid": [[36, "add-admid"]], "add_residuals": [[55, "add-residuals"]], "add_allometry": [[37, "add-allometry"]], "add_iov": [[46, "add-iov"]], "add_cmt": [[39, "add-cmt"]], "add_time_after_dose": [[56, "add-time-after-dose"]], "Statements": [[32, "statements"], [342, "statements"]], "Statement": [[31, "statement"]], "User guide": [[362, "user-guide"]], "TMDD": [[360, "tmdd"], [2, "tmdd"]], "Running": [[360, "running"], [5, "running"], [6, "running"], [1, "running"], [2, "running"], [3, "running"], [4, "running"], [326, "running"], [347, "running"], [332, "running"], [355, "running"], [338, "running"], [336, "running"], [354, "running"], [359, "running"], [331, "running"], [345, "running"]], "Arguments": [[360, "arguments"], [5, "arguments"], [6, "arguments"], [1, "arguments"], [2, "arguments"], [3, "arguments"], [4, "arguments"], [326, "arguments"], [347, "arguments"], [332, "arguments"], [355, "arguments"], [338, "arguments"], [336, "arguments"], [354, "arguments"], [359, "arguments"], [345, "arguments"]], "Mandatory": [[360, "mandatory"], [5, "mandatory"], [6, "mandatory"], [1, "mandatory"], [3, "mandatory"], [4, "mandatory"], [326, "mandatory"], [347, "mandatory"], [332, "mandatory"], [355, "mandatory"], [338, "mandatory"], [336, "mandatory"], [345, "mandatory"]], "Optional": [[360, "optional"], [6, "optional"], [1, "optional"], [326, "optional"], [347, "optional"], [332, "optional"], [355, "optional"], [338, "optional"], [336, "optional"], [345, "optional"]], "Models": [[360, "models"], [347, "models"], [355, "models"], [331, "models"]], "Full model:": [[360, "full-model"]], "IB model:": [[360, "ib-model"]], "CR model:": [[360, "cr-model"]], "CR + IB model:": [[360, "cr-ib-model"]], "QSS model:": [[360, "qss-model"]], "Wagner model:": [[360, "wagner-model"]], "MMAPP model:": [[360, "mmapp-model"]], "DV types": [[360, "dv-types"]], "Structsearch workflow": [[360, "structsearch-workflow"], [347, "structsearch-workflow"], [331, "structsearch-workflow"]], "Results": [[360, "results"], [2, "results"], [326, "results"], [322, "results"], [301, "results"], [347, "results"], [338, "results"], [359, "results"], [331, "results"]], "Examples": [[360, "examples"], [5, "examples"], [6, "examples"], [2, "examples"], [3, "examples"], [4, "examples"], [347, "examples"], [358, "examples"], [341, "examples"]], "Pharmpy in R": [[363, "pharmpy-in-r"]], "Installing pharmr": [[363, "installing-pharmr"]], "Trouble shooting": [[363, "trouble-shooting"]], "Wrong Python version when using conda": [[363, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[363, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[363, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[363, "using-pharmr"]], "Gotchas": [[363, "gotchas"]], "List indices": [[363, "list-indices"]], "Tools": [[361, "tools"]], "Tools in Pharmpy": [[361, "tools-in-pharmpy"]], "Common options": [[361, "common-options"]], "run_retries": [[282, "run-retries"]], "run_bootstrap": [[275, "run-bootstrap"]], "retrieve_final_model": [[271, "retrieve-final-model"]], "write_results": [[291, "write-results"]], "ModelEntry": [[297, "modelentry"]], "summarize_errors": [[287, "summarize-errors"]], "run_allometry": [[273, "run-allometry"]], "LocalDirectoryDatabase": [[292, "localdirectorydatabase"]], "run_iivsearch": [[278, "run-iivsearch"]], "summarize_individuals_count_table": [[289, "summarize-individuals-count-table"]], "run_covsearch": [[276, "run-covsearch"]], "run_estmethod": [[277, "run-estmethod"]], "Log": [[295, "log"]], "summarize_modelfit_results": [[290, "summarize-modelfit-results"]], "run_structsearch": [[285, "run-structsearch"]], "run_iovsearch": [[279, "run-iovsearch"]], "LocalDirectoryToolDatabase": [[293, "localdirectorytooldatabase"]], "NullModelDatabase": [[299, "nullmodeldatabase"]], "run_modelsearch": [[281, "run-modelsearch"]], "run_amd": [[274, "run-amd"]], "run_simulation": [[284, "run-simulation"]], "run_ruvsearch": [[283, "run-ruvsearch"]], "ModelDatabase": [[296, "modeldatabase"]], "retrieve_models": [[272, "retrieve-models"]], "run_modelfit": [[280, "run-modelfit"]], "ModelfitResults": [[298, "modelfitresults"]], "run_tool": [[286, "run-tool"]], "LocalModelDirectoryDatabase": [[294, "localmodeldirectorydatabase"]], "resume_tool": [[270, "resume-tool"]], "summarize_individuals": [[288, "summarize-individuals"]], "unfix_parameters": [[248, "unfix-parameters"]], "unload_dataset": [[250, "unload-dataset"]], "update_inits": [[252, "update-inits"]], "translate_nmtran_time": [[245, "translate-nmtran-time"]], "print_fit_summary": [[266, "print-fit-summary"]], "transform_etas_tdist": [[244, "transform-etas-tdist"]], "write_csv": [[255, "write-csv"]], "create_report": [[257, "create-report"]], "predict_outliers": [[265, "predict-outliers"]], "transform_etas_john_draper": [[243, "transform-etas-john-draper"]], "predict_influential_individuals": [[263, "predict-influential-individuals"]], "undrop_columns": [[247, "undrop-columns"]], "rank_models": [[267, "rank-models"]], "vpc_plot": [[254, "vpc-plot"]], "predict_influential_outliers": [[264, "predict-influential-outliers"]], "create_results": [[258, "create-results"]], "use_thetas_for_error_stdev": [[253, "use-thetas-for-error-stdev"]], "write_model": [[256, "write-model"]], "fit": [[259, "fit"]], "is_strictness_fulfilled": [[261, "is-strictness-fulfilled"]], "read_modelfit_results": [[268, "read-modelfit-results"]], "split_joint_distribution": [[240, "split-joint-distribution"]], "update_initial_individual_estimates": [[251, "update-initial-individual-estimates"]], "unconstrain_parameters": [[246, "unconstrain-parameters"]], "unfix_parameters_to": [[249, "unfix-parameters-to"]], "transform_etas_boxcox": [[242, "transform-etas-boxcox"]], "transform_blq": [[241, "transform-blq"]], "load_example_modelfit_results": [[262, "load-example-modelfit-results"]], "read_results": [[269, "read-results"]], "get_model_features": [[260, "get-model-features"]], "set_initial_estimates": [[216, "set-initial-estimates"]], "set_ode_solver": [[223, "set-ode-solver"]], "set_first_order_absorption": [[212, "set-first-order-absorption"]], "set_estimation_step": [[210, "set-estimation-step"]], "set_mixed_mm_fo_elimination": [[221, "set-mixed-mm-fo-elimination"]], "set_lloq_data": [[218, "set-lloq-data"]], "set_weighted_error_model": [[234, "set-weighted-error-model"]], "simplify_expression": [[238, "simplify-expression"]], "set_tmdd": [[231, "set-tmdd"]], "set_iiv_on_ruv": [[214, "set-iiv-on-ruv"]], "set_initial_condition": [[215, "set-initial-condition"]], "solve_ode_system": [[239, "solve-ode-system"]], "set_transit_compartments": [[232, "set-transit-compartments"]], "set_evaluation_step": [[211, "set-evaluation-step"]], "set_lower_bounds": [[219, "set-lower-bounds"]], "set_michaelis_menten_elimination": [[220, "set-michaelis-menten-elimination"]], "set_seq_zo_fo_absorption": [[228, "set-seq-zo-fo-absorption"]], "set_peripheral_compartments": [[224, "set-peripheral-compartments"]], "set_power_on_ruv": [[225, "set-power-on-ruv"]], "set_simulation": [[229, "set-simulation"]], "set_name": [[222, "set-name"]], "set_zero_order_elimination": [[236, "set-zero-order-elimination"]], "set_zero_order_input": [[237, "set-zero-order-input"]], "set_proportional_error_model": [[226, "set-proportional-error-model"]], "set_first_order_elimination": [[213, "set-first-order-elimination"]], "set_upper_bounds": [[233, "set-upper-bounds"]], "set_time_varying_error_model": [[230, "set-time-varying-error-model"]], "set_zero_order_absorption": [[235, "set-zero-order-absorption"]], "set_reference_values": [[227, "set-reference-values"]], "set_instantaneous_absorption": [[217, "set-instantaneous-absorption"]], "remove_iov": [[188, "remove-iov"]], "set_dvid": [[209, "set-dvid"]], "read_model": [[181, "read-model"]], "remove_predictions": [[193, "remove-predictions"]], "rename_symbols": [[196, "rename-symbols"]], "remove_unused_parameters_and_rvs": [[195, "remove-unused-parameters-and-rvs"]], "remove_residuals": [[194, "remove-residuals"]], "replace_non_random_rvs": [[197, "replace-non-random-rvs"]], "read_model_from_string": [[182, "read-model-from-string"]], "set_covariates": [[205, "set-covariates"]], "set_direct_effect": [[207, "set-direct-effect"]], "set_additive_error_model": [[202, "set-additive-error-model"]], "remove_parameter_uncertainty_step": [[191, "remove-parameter-uncertainty-step"]], "sample_parameters_uniformly": [[201, "sample-parameters-uniformly"]], "read_dataset_from_datainfo": [[180, "read-dataset-from-datainfo"]], "remove_estimation_step": [[186, "remove-estimation-step"]], "remove_covariate_effect": [[184, "remove-covariate-effect"]], "remove_iiv": [[187, "remove-iiv"]], "sample_individual_estimates": [[199, "sample-individual-estimates"]], "remove_lag_time": [[189, "remove-lag-time"]], "remove_loq_data": [[190, "remove-loq-data"]], "set_dtbs_error_model": [[208, "set-dtbs-error-model"]], "set_dataset": [[206, "set-dataset"]], "remove_peripheral_compartment": [[192, "remove-peripheral-compartment"]], "set_combined_error_model": [[204, "set-combined-error-model"]], "sample_parameters_from_covariance_matrix": [[200, "sample-parameters-from-covariance-matrix"]], "remove_bioavailability": [[183, "remove-bioavailability"]], "set_baseline_effect": [[203, "set-baseline-effect"]], "resample_data": [[198, "resample-data"]], "remove_error_model": [[185, "remove-error-model"]], "AMD - PKPD": [[5, "amd-pkpd"]], "Strategy components": [[5, "strategy-components"], [6, "strategy-components"], [2, "strategy-components"], [3, "strategy-components"], [4, "strategy-components"]], "Structural": [[5, "structural"], [6, "structural"], [2, "structural"], [3, "structural"], [4, "structural"]], "IIVSearch": [[5, "iivsearch"], [6, "iivsearch"], [3, "iivsearch"], [4, "iivsearch"]], "Residual": [[5, "residual"], [6, "residual"], [2, "residual"], [3, "residual"], [4, "residual"]], "IOVSearch": [[5, "iovsearch"], [6, "iovsearch"], [3, "iovsearch"], [4, "iovsearch"]], "Allometry": [[5, "allometry"], [6, "allometry"], [2, "allometry"], [3, "allometry"], [4, "allometry"]], "covsearch": [[5, "covsearch"], [6, "covsearch"], [3, "covsearch"], [4, "covsearch"]], "Minimal": [[5, "minimal"], [6, "minimal"], [3, "minimal"], [4, "minimal"]], "Specifying search space": [[5, "specifying-search-space"]], "API Reference": [[7, "api-reference"]], "JointNormalDistribution": [[21, "jointnormaldistribution"]], "ModelfitResultsError": [[25, "modelfitresultserror"]], "Assignment": [[8, "assignment"]], "ModelError": [[23, "modelerror"]], "CompartmentalSystemBuilder": [[13, "compartmentalsystembuilder"]], "DatasetWarning": [[16, "datasetwarning"]], "Infusion": [[20, "infusion"]], "AMD - TMDD": [[6, "amd-tmdd"]], "Model input and search space": [[6, "model-input-and-search-space"], [3, "model-input-and-search-space"], [4, "model-input-and-search-space"]], "Distribution": [[17, "distribution"], [344, "distribution"]], "EstimationSteps": [[19, "estimationsteps"]], "CompartmentalSystem": [[12, "compartmentalsystem"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [355, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"], [328, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "PHI/PHC": [[0, "phi-phc"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Parameters": [[28, "parameters"], [342, "parameters"]], "ColumnInfo": [[10, "columninfo"], [328, "columninfo"]], "EstimationStep": [[18, "estimationstep"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Supported model types": [[2, "supported-model-types"]], "Model type specific arguments": [[2, "model-type-specific-arguments"]], "General arguments": [[2, "general-arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"], [326, "search-space"], [347, "search-space"]], "Example": [[2, "example"]], "Strategy for running AMD": [[2, "strategy-for-running-amd"]], "default (default)": [[2, "default-default"]], "reevaluation": [[2, "reevaluation"]], "SIR": [[2, "sir"]], "SRI": [[2, "sri"]], "RSI": [[2, "rsi"]], "Retries": [[2, "retries"], [354, "retries"]], "IIVsearch": [[2, "iivsearch"], [336, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [338, "iovsearch"]], "Covariates": [[2, "covariates"]], "Final model": [[2, "final-model"]], "PKPD": [[2, "pkpd"], [347, "pkpd"]], "ModelSyntaxError": [[24, "modelsyntaxerror"]], "DataInfo": [[14, "datainfo"], [328, "datainfo"]], "AMD - Drug metabolite": [[3, "amd-drug-metabolite"]], "Compartment": [[11, "compartment"]], "Parameter": [[27, "parameter"]], "DatasetError": [[15, "dataseterror"]], "Bolus": [[9, "bolus"]], "NormalDistribution": [[26, "normaldistribution"]], "RandomVariables": [[29, "randomvariables"]], "AMD - PK": [[4, "amd-pk"]], "Model": [[22, "model"]], "get_number_of_observations_per_individual": [[128, "get-number-of-observations-per-individual"]], "get_rv_parameters": [[138, "get-rv-parameters"]], "has_first_order_absorption": [[147, "has-first-order-absorption"]], "get_number_of_peripheral_compartments": [[129, "get-number-of-peripheral-compartments"]], "get_number_of_observations": [[127, "get-number-of-observations"]], "get_mdv": [[123, "get-mdv"]], "get_parameter_rv": [[134, "get-parameter-rv"]], "get_pk_parameters": [[136, "get-pk-parameters"]], "get_observation_expression": [[131, "get-observation-expression"]], "has_additive_error_model": [[144, "has-additive-error-model"]], "get_initial_conditions": [[121, "get-initial-conditions"]], "has_first_order_elimination": [[148, "has-first-order-elimination"]], "get_model_covariates": [[125, "get-model-covariates"]], "get_number_of_transit_compartments": [[130, "get-number-of-transit-compartments"]], "get_unit_of": [[141, "get-unit-of"]], "get_pd_parameters": [[135, "get-pd-parameters"]], "get_omegas": [[133, "get-omegas"]], "greekify_model": [[143, "greekify-model"]], "get_population_prediction_expression": [[137, "get-population-prediction-expression"]], "get_number_of_individuals": [[126, "get-number-of-individuals"]], "get_individual_prediction_expression": [[120, "get-individual-prediction-expression"]], "get_thetas": [[140, "get-thetas"]], "get_model_code": [[124, "get-model-code"]], "get_observations": [[132, "get-observations"]], "get_zero_order_inputs": [[142, "get-zero-order-inputs"]], "has_combined_error_model": [[145, "has-combined-error-model"]], "get_lag_times": [[122, "get-lag-times"]], "has_covariate_effect": [[146, "has-covariate-effect"]], "has_instantaneous_absorption": [[149, "has-instantaneous-absorption"]], "get_sigmas": [[139, "get-sigmas"]], "execute_workflow": [[310, "execute-workflow"]], "pharmpy.modeling Package": [[313, "module-pharmpy.modeling"]], "Functions": [[313, "functions"], [314, "functions"], [312, "functions"], [315, "functions"]], "split_common_options": [[311, "split-common-options"]], "Contributors": [[325, "authors"]], "Development": [[325, "development"]], "Current team": [[325, "current-team"]], "All developers past and present": [[325, "all-developers-past-and-present"]], "Scientific input": [[325, "scientific-input"]], "Funding": [[325, "funding"]], "Citation": [[319, "citation"]], "How to cite Pharmpy and pharmr": [[319, "how-to-cite-pharmpy-and-pharmr"]], "Retrieving the dataset from a model": [[328, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[328, "update-the-dataset-of-a-model"]], "type": [[328, "type"]], "scale": [[328, "scale"]], "continuous": [[328, "continuous"]], "categories": [[328, "categories"]], "unit": [[328, "unit"]], "drop": [[328, "drop"]], "datatype": [[328, "datatype"]], "descriptor": [[328, "descriptor"]], "datainfo file": [[328, "datainfo-file"]], "Task": [[303, "task"]], "Bootstrap": [[316, "bootstrap"]], "The Bootstrap postprocessing and results": [[316, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[316, "parameter-statistics"]], "OFV statistics": [[316, "ofv-statistics"]], "Covariance matrix": [[316, "covariance-matrix"], [343, "covariance-matrix"]], "Included individuals": [[316, "included-individuals"]], "Design principles": [[329, "design-principles"]], "Levels of the architecture": [[329, "levels-of-the-architecture"]], "The Heart, The Model Class": [[329, "the-heart-the-model-class"]], "pharmpy.Parameters": [[329, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[329, "pharmpy-randomvariables"]], "pharmpy.Statements": [[329, "pharmpy-statements"]], "The pharmpy.modeling module": [[329, "the-pharmpy-modeling-module"]], "Docstrings": [[329, "docstrings"]], "Dependencies": [[329, "dependencies"]], "Command line interface": [[320, "command-line-interface"]], "pharmpy": [[320, "pharmpy"]], "pharmpy data": [[320, "pharmpy-data"]], "pharmpy data append": [[320, "pharmpy-data-append"]], "pharmpy data deidentify": [[320, "pharmpy-data-deidentify"]], "pharmpy data filter": [[320, "pharmpy-data-filter"]], "pharmpy data print": [[320, "pharmpy-data-print"]], "pharmpy data reference": [[320, "pharmpy-data-reference"]], "pharmpy data resample": [[320, "pharmpy-data-resample"]], "pharmpy data write": [[320, "pharmpy-data-write"]], "pharmpy info": [[320, "pharmpy-info"]], "pharmpy model": [[320, "pharmpy-model"]], "pharmpy model print": [[320, "pharmpy-model-print"]], "pharmpy model sample": [[320, "pharmpy-model-sample"]], "pharmpy model update_inits": [[320, "pharmpy-model-update-inits"]], "pharmpy results": [[320, "pharmpy-results"]], "pharmpy results bootstrap": [[320, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[320, "pharmpy-results-cdd"]], "pharmpy results frem": [[320, "pharmpy-results-frem"]], "pharmpy results linearize": [[320, "pharmpy-results-linearize"]], "pharmpy results ofv": [[320, "pharmpy-results-ofv"]], "pharmpy results print": [[320, "pharmpy-results-print"]], "pharmpy results qa": [[320, "pharmpy-results-qa"]], "pharmpy results report": [[320, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[320, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[320, "pharmpy-results-scm"]], "pharmpy results simeval": [[320, "pharmpy-results-simeval"]], "pharmpy results summary": [[320, "pharmpy-results-summary"]], "pharmpy run": [[320, "pharmpy-run"]], "pharmpy run allometry": [[320, "pharmpy-run-allometry"]], "pharmpy run amd": [[320, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[320, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[320, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[320, "pharmpy-run-estmethod"]], "pharmpy run execute": [[320, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[320, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[320, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[320, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[320, "pharmpy-run-ruvsearch"]], "SimulationResults": [[302, "simulationresults"]], "Pharmpy Community Code of Conduct": [[321, "pharmpy-community-code-of-conduct"]], "default_tool_database": [[309, "default-tool-database"]], "Contribute": [[324, "contribute"]], "Set up the development environment": [[324, "set-up-the-development-environment"]], "Supported platforms": [[324, "supported-platforms"]], "Install Python": [[324, "install-python"]], "Install git": [[324, "install-git"]], "Fork and clone the code repository": [[324, "fork-and-clone-the-code-repository"]], "Install tox": [[324, "install-tox"]], "Install graphviz used for building the documentation": [[324, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[324, "using-the-development-environment"]], "Running tox": [[324, "running-tox"]], "Check code formatting": [[324, "check-code-formatting"]], "Run the unit tests": [[324, "run-the-unit-tests"]], "Build and test the documentation": [[324, "build-and-test-the-documentation"]], "Run the integration tests": [[324, "run-the-integration-tests"]], "Build a usable virtual environment": [[324, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[324, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[324, "releasing-pharmpy-and-documentation"]], "Version": [[324, "version"]], "Information for developers": [[324, "information-for-developers"]], "default_model_database": [[308, "default-model-database"]], "Case deletion diagnostics": [[317, "case-deletion-diagnostics"]], "The cdd results": [[317, "the-cdd-results"]], "Case results": [[317, "case-results"]], "Cook score": [[317, "cook-score"]], "Jackknife cookscore": [[317, "jackknife-cookscore"]], "Covariance ratio": [[317, "covariance-ratio"]], "Delta OFV": [[317, "delta-ofv"]], "Skipped individuals": [[317, "skipped-individuals"]], "Case column": [[317, "case-column"]], "References": [[317, "references"], [333, "references"]], "pharmpy.tools Package": [[314, "module-pharmpy.tools"]], "Workflow": [[305, "workflow"]], "Configuration": [[323, "configuration"]], "The configuration file": [[323, "the-configuration-file"]], "Available configurations": [[323, "available-configurations"]], "pharmpy.plugins.nonmem": [[323, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[323, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[323, "pharmpy-plugins-rxode"]], "Environment variables": [[323, "environment-variables"]], "pharmpy.model Package": [[312, "module-pharmpy.model"]], "Classes": [[312, "classes"], [315, "classes"]], "Crossval": [[327, "crossval"]], "The crossval results": [[327, "the-crossval-results"]], "Crossvalidation OFVs": [[327, "crossvalidation-ofvs"]], "pharmpy.workflows Package": [[315, "module-pharmpy.workflows"]], "Options for the data module": [[315, "id1"]], "ToolDatabase": [[304, "tooldatabase"]], "WorkflowBuilder": [[306, "workflowbuilder"]], "Changelog": [[318, "changelog"]], "0.109.0 (2024-04-10)": [[318, "id1"]], "New features": [[318, "new-features"], [318, "id3"], [318, "id7"], [318, "id11"], [318, "id15"], [318, "id18"], [318, "id24"], [318, "id28"], [318, "id30"], [318, "id33"], [318, "id37"], [318, "id40"], [318, "id44"], [318, "id50"], [318, "id54"], [318, "id58"], [318, "id61"], [318, "id65"], [318, "id68"], [318, "id71"], [318, "id84"], [318, "id94"], [318, "id101"], [318, "id112"], [318, "id116"], [318, "id123"], [318, "id126"], [318, "id130"], [318, "id136"], [318, "id140"], [318, "id146"], [318, "id151"], [318, "id155"], [318, "id158"], [318, "id166"], [318, "id170"], [318, "id176"], [318, "id185"], [318, "id189"], [318, "id192"], [318, "id196"], [318, "id198"], [318, "id203"], [318, "id206"], [318, "id210"]], "Changes": [[318, "changes"], [318, "id4"], [318, "id8"], [318, "id12"], [318, "id16"], [318, "id21"], [318, "id25"], [318, "id31"], [318, "id34"], [318, "id38"], [318, "id41"], [318, "id43"], [318, "id47"], [318, "id51"], [318, "id55"], [318, "id62"], [318, "id66"], [318, "id69"], [318, "id72"], [318, "id74"], [318, "id76"], [318, "id79"], [318, "id82"], [318, "id85"], [318, "id87"], [318, "id90"], [318, "id95"], [318, "id98"], [318, "id102"], [318, "id105"], [318, "id108"], [318, "id113"], [318, "id117"], [318, "id120"], [318, "id124"], [318, "id127"], [318, "id131"], [318, "id137"], [318, "id141"], [318, "id152"], [318, "id156"], [318, "id161"], [318, "id167"], [318, "id177"], [318, "id182"], [318, "id186"], [318, "id193"], [318, "id199"], [318, "id204"], [318, "id207"], [318, "id211"]], "Bugfixes": [[318, "bugfixes"], [318, "id5"], [318, "id9"], [318, "id13"], [318, "id19"], [318, "id22"], [318, "id26"], [318, "id35"], [318, "id45"], [318, "id48"], [318, "id52"], [318, "id56"], [318, "id59"], [318, "id63"], [318, "id77"], [318, "id80"], [318, "id106"], [318, "id110"], [318, "id114"], [318, "id118"], [318, "id121"], [318, "id128"], [318, "id132"], [318, "id134"], [318, "id138"], [318, "id142"], [318, "id144"], [318, "id147"], [318, "id149"], [318, "id153"], [318, "id159"], [318, "id162"], [318, "id164"], [318, "id168"], [318, "id172"], [318, "id174"], [318, "id178"], [318, "id180"], [318, "id183"], [318, "id187"], [318, "id190"], [318, "id194"], [318, "id201"], [318, "id208"], [318, "id212"]], "0.108.0 (2024-03-18)": [[318, "id2"]], "0.107.0 (2024-03-04)": [[318, "id6"]], "0.106.0 (2024-01-11)": [[318, "id10"]], "0.105.0 (2023-12-07)": [[318, "id14"]], "0.104.0 (2023-11-06)": [[318, "id17"]], "0.103.0 (2023-10-12)": [[318, "id20"]], "0.102.0 (2023-09-28)": [[318, "id23"]], "0.101.0 (2023-09-01)": [[318, "id27"]], "0.100.0 (2023-08-25)": [[318, "id29"]], "0.99.0 (2023-08-23)": [[318, "id32"]], "0.98.0 (2023-07-21)": [[318, "id36"]], "0.97.0 (2023-06-28)": [[318, "id39"]], "0.96.0 (2023-05-26)": [[318, "id42"]], "0.95.0 (2023-05-22)": [[318, "id46"]], "0.94.0 (2023-04-26)": [[318, "id49"]], "0.93.0 (2023-04-19)": [[318, "id53"]], "0.92.0 (2023-04-05)": [[318, "id57"]], "0.91.0 (2023-03-03)": [[318, "id60"]], "0.90.0 (2023-02-24)": [[318, "id64"]], "0.89.0 (2023-01-26)": [[318, "id67"]], "0.88.0 (2022-12-21)": [[318, "id70"]], "0.87.0 (2022-12-14)": [[318, "id73"]], "0.86.0 (2022-11-30)": [[318, "id75"]], "0.85.0 (2022-11-18)": [[318, "id78"]], "0.84.1 (2022-11-13)": [[318, "id81"]], "Bug fixes": [[318, "bug-fixes"], [318, "id88"], [318, "id92"], [318, "id96"], [318, "id99"], [318, "id103"]], "0.84.0 (2022-11-09)": [[318, "id83"]], "0.83.0 (2022-11-01)": [[318, "id86"]], "0.82.0 (2022-10-24)": [[318, "id89"]], "0.81.1 (2022-10-24)": [[318, "id91"]], "0.81.0 (2022-10-21)": [[318, "id93"]], "0.80.0 (2022-10-19)": [[318, "id97"]], "0.79.0 (2022-10-16)": [[318, "id100"]], "0.78.0 (2022-09-20)": [[318, "id104"]], "0.77.0 (2022-09-08)": [[318, "id107"]], "0.76.1 (2022-09-06)": [[318, "id109"]], "0.76.0 (2022-09-05)": [[318, "id111"]], "0.75.0 (2022-08-10)": [[318, "id115"]], "0.74.0 (2022-07-18)": [[318, "id119"]], "0.73.0 (2022-06-21)": [[318, "id122"]], "0.72.0 (2022-06-08)": [[318, "id125"]], "0.71.0 (2022-05-24)": [[318, "id129"]], "0.70.1 (2022-05-17)": [[318, "id133"]], "0.70.0 (2022-05-13)": [[318, "id135"]], "0.69.0 (2022-04-29)": [[318, "id139"]], "0.68.0 (2022-04-27)": [[318, "id143"]], "0.67.0 (2022-04-25)": [[318, "id145"]], "0.66.0 (2022-04-20)": [[318, "id148"]], "0.65.0 (2022-04-14)": [[318, "id150"]], "0.64.0 (2022-04-12)": [[318, "id154"]], "0.63.0 (2022-04-07)": [[318, "id157"]], "0.62.0 (2022-04-04)": [[318, "id160"]], "New feature": [[318, "new-feature"]], "0.61.1 (2022-03-31)": [[318, "id163"]], "0.61.0 (2022-03-29)": [[318, "id165"]], "0.59.0 (2022-03-25)": [[318, "id169"]], "0.58.4 (2022-03-24)": [[318, "id171"]], "0.58.1 (2022-03-22)": [[318, "id173"]], "0.58.0 (2022-03-22)": [[318, "id175"]], "0.57.0 (2022-03-21)": [[318, "id179"]], "0.56.0 (2022-03-17)": [[318, "id181"]], "0.55.0 (2022-03-16)": [[318, "id184"]], "0.54.0 (2022-03-08)": [[318, "id188"]], "0.53.0 (2022-03-04)": [[318, "id191"]], "0.52.0 (2022-02-25)": [[318, "id195"]], "0.51.0 (2022-02-24)": [[318, "id197"]], "0.50.1 (2022-02-16)": [[318, "id200"]], "0.50.0 (2022-02-16)": [[318, "id202"]], "0.49.0 (2022-02-10)": [[318, "id205"]], "0.48.0 (2022-02-04)": [[318, "id209"]], "0.47.0 (2022-01-28)": [[318, "id213"]], "0.46.0 (2022-01-27)": [[318, "id214"]], "0.45.0 (2022-01-21)": [[318, "id215"]], "0.44.0 (2022-01-20)": [[318, "id216"]], "0.43.0 (2022-01-12)": [[318, "id217"]], "0.42.0 (2022-01-11)": [[318, "id218"]], "0.41.0 (2021-12-21)": [[318, "id219"]], "0.40.0 (2021-12-16)": [[318, "id220"]], "0.39.0 (2021-12-15)": [[318, "id221"]], "0.38.0 (2021-12-08)": [[318, "id222"]], "0.37.1 (2021-11-26)": [[318, "id223"]], "0.37.0 (2021-11-24)": [[318, "id224"]], "0.36.0 (2021-11-11)": [[318, "id225"]], "0.35.0 (2021-11-02)": [[318, "id226"]], "0.34.3 (2021-10-28)": [[318, "id227"]], "0.34.2 (2021-10-26)": [[318, "id228"]], "0.34.1 (2021-10-20)": [[318, "id229"]], "0.34.0 (2021-10-14)": [[318, "id230"]], "0.33.0 (2021-10-11)": [[318, "id231"]], "0.32.0 (2021-09-28)": [[318, "id232"]], "0.31.0 (2021-09-21)": [[318, "id233"]], "0.30.0 (2021-09-06)": [[318, "id234"]], "0.29.0 (2021-08-25)": [[318, "id235"]], "0.28.0 (2021-08-24)": [[318, "id236"]], "0.27.0 (2021-08-09)": [[318, "id237"]], "0.26.1 (2021-08-04)": [[318, "id238"]], "0.26.0 (2021-07-13)": [[318, "id239"]], "0.25.1 (2021-07-08)": [[318, "id240"]], "0.25.0 (2021-06-24)": [[318, "id241"]], "0.24.0 (2021-05-25)": [[318, "id242"]], "0.23.4 (2021-05-03)": [[318, "id243"]], "0.23.3 (2021-04-29)": [[318, "id244"]], "0.23.2 (2021-04-28)": [[318, "id245"]], "0.23.1 (2021-04-28)": [[318, "id246"]], "0.23.0 (2021-04-28)": [[318, "id247"]], "0.22.0 (2021-03-29)": [[318, "id248"]], "0.21.0 (2021-03-22)": [[318, "id249"]], "0.20.1 (2021-03-11)": [[318, "id250"]], "0.20.0 (2021-03-11)": [[318, "id251"]], "0.19.0 (2021-03-02)": [[318, "id252"]], "0.18.0 (2021-03-01)": [[318, "id253"]], "0.17.0 (2021-02-15)": [[318, "id254"]], "0.16.0 (2021-02-08)": [[318, "id255"]], "0.15.0 (2021-02-01)": [[318, "id256"]], "0.14.0 (2021-01-25)": [[318, "id257"]], "0.13.0 (2021-01-18)": [[318, "id258"]], "0.12.0 (2020-12-18)": [[318, "id259"]], "0.11.0 (2020-11-20)": [[318, "id260"]], "0.10.0 (2020-11-16)": [[318, "id261"]], "0.9.0 (2020-10-26)": [[318, "id262"]], "0.8.0 (2020-10-08)": [[318, "id263"]], "0.7.0 (2020-09-28)": [[318, "id264"]], "0.6.0 (2020-09-18)": [[318, "id265"]], "0.5.0 (2020-09-04)": [[318, "id266"]], "0.4.0 (2020-07-24)": [[318, "id267"]], "0.3.0 (2020-06-16)": [[318, "id268"]], "0.2.0 (2020-03-27)": [[318, "id269"]], "0.1.0 (2018-07-22)": [[318, "id270"]], "NullToolDatabase": [[300, "nulltooldatabase"]], "COVsearch": [[326, "covsearch"]], "Wildcards": [[326, "wildcards"]], "Algorithm": [[326, "algorithm"], [338, "algorithm"]], "Common features": [[322, "common-features"]], "Tool database": [[322, "tool-database"]], "Running directory": [[322, "running-directory"]], "Metadata": [[322, "metadata"]], "Datasets": [[322, "datasets"]], "call_workflow": [[307, "call-workflow"]], "is_real": [[163, "is-real"]], "has_weighted_error_model": [[159, "has-weighted-error-model"]], "has_presystemic_metabolite": [[155, "has-presystemic-metabolite"]], "load_dataset": [[165, "load-dataset"]], "omit_data": [[169, "omit-data"]], "has_mixed_mm_fo_elimination": [[153, "has-mixed-mm-fo-elimination"]], "has_michaelis_menten_elimination": [[152, "has-michaelis-menten-elimination"]], "plot_iofv_vs_iofv": [[176, "plot-iofv-vs-iofv"]], "has_seq_zo_fo_absorption": [[158, "has-seq-zo-fo-absorption"]], "print_model_code": [[178, "print-model-code"]], "plot_dv_vs_ipred": [[172, "plot-dv-vs-ipred"]], "has_proportional_error_model": [[156, "has-proportional-error-model"]], "plot_abs_cwres_vs_ipred": [[170, "plot-abs-cwres-vs-ipred"]], "plot_individual_predictions": [[175, "plot-individual-predictions"]], "has_zero_order_elimination": [[161, "has-zero-order-elimination"]], "plot_dv_vs_pred": [[173, "plot-dv-vs-pred"]], "print_model_symbols": [[179, "print-model-symbols"]], "list_time_varying_covariates": [[164, "list-time-varying-covariates"]], "plot_transformed_eta_distributions": [[177, "plot-transformed-eta-distributions"]], "plot_cwres_vs_idv": [[171, "plot-cwres-vs-idv"]], "plot_eta_distributions": [[174, "plot-eta-distributions"]], "make_declarative": [[167, "make-declarative"]], "has_odes": [[154, "has-odes"]], "is_linearized": [[162, "is-linearized"]], "has_linear_odes_with_real_eigenvalues": [[151, "has-linear-odes-with-real-eigenvalues"]], "load_example_model": [[166, "load-example-model"]], "has_random_effect": [[157, "has-random-effect"]], "has_zero_order_absorption": [[160, "has-zero-order-absorption"]], "has_linear_odes": [[150, "has-linear-odes"]], "mu_reference_model": [[168, "mu-reference-model"]], "The Pharmpy model": [[342, "the-pharmpy-model"]], "Reading in a model": [[342, "reading-in-a-model"], [346, "reading-in-a-model"]], "Writing a model": [[342, "writing-a-model"], [346, "writing-a-model"]], "Inspecting the model attributes": [[342, "inspecting-the-model-attributes"]], "Name and description": [[342, "name-and-description"]], "Random variables": [[342, "random-variables"]], "Dataset and datainfo": [[342, "dataset-and-datainfo"]], "Estimation steps": [[342, "estimation-steps"], [344, "estimation-steps"]], "Dependent variables": [[342, "dependent-variables"]], "Low level manipulations of the model object": [[342, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[342, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[342, "substituting-symbolic-random-variable-distribution-with-numeric"]], "scm": [[356, "scm"]], "The scm results": [[356, "the-scm-results"]], "Steps": [[356, "steps"]], "OFV Summary": [[356, "ofv-summary"]], "Candidate Summary": [[356, "candidate-summary"]], "Model estimation and results": [[343, "model-estimation-and-results"]], "Fitting a model": [[343, "fitting-a-model"]], "Modelfit results": [[343, "modelfit-results"]], "Final OFV": [[343, "final-ofv"]], "Parameter estimates": [[343, "parameter-estimates"], [333, "parameter-estimates"]], "Standard errors of parameter estimates": [[343, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[343, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[343, "correlation-matrix"]], "Precision Matrix": [[343, "precision-matrix"]], "Indiviudal OFV": [[343, "indiviudal-ofv"]], "Predictions": [[343, "predictions"]], "Residuals": [[343, "residuals"]], "Individual estimates": [[343, "individual-estimates"]], "Plots in Pharmpy": [[348, "plots-in-pharmpy"]], "Setting themes": [[348, "setting-themes"]], "Changing axis of plots": [[348, "changing-axis-of-plots"]], "Using the NONMEM plugin": [[346, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[346, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[346, "new-parameters-and-random-variables"]], "Estmethod": [[332, "estmethod"]], "Algorithms": [[332, "algorithms"], [336, "algorithms"], [345, "algorithms"]], "Exhaustive": [[332, "exhaustive"]], "Exhaustive (with update)": [[332, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[332, "exhaustive-only-evaluation"]], "Estimation methods": [[332, "estimation-methods"]], "Solvers": [[332, "solvers"]], "Parameter uncertainty methods": [[332, "parameter-uncertainty-methods"]], "The Estmethod results": [[332, "the-estmethod-results"]], "Documentation for developers": [[330, "documentation-for-developers"]], "PsN with Pharmpy": [[352, "psn-with-pharmpy"]], "Tools connected to PsN": [[352, "tools-connected-to-psn"]], "Simeval": [[357, "simeval"]], "The simeval results": [[357, "the-simeval-results"]], "Sampled Individual OFVs": [[357, "sampled-individual-ofvs"]], "Individual OFV summary": [[357, "individual-ofv-summary"]], "Individual prediction plot": [[357, "individual-prediction-plot"]], "Welcome to Pharmpy": [[337, "welcome-to-pharmpy"]], "Modeling": [[344, "modeling"]], "Basic functions": [[344, "basic-functions"]], "Reading and writing models": [[344, "reading-and-writing-models"]], "Loading example models": [[344, "loading-example-models"]], "Converting models": [[344, "converting-models"]], "Create basic models": [[344, "create-basic-models"]], "Modeling transformations": [[344, "modeling-transformations"]], "Structural model": [[344, "structural-model"]], "Absorption rate": [[344, "absorption-rate"]], "Absorption delay": [[344, "absorption-delay"]], "Elimination": [[344, "elimination"]], "Parameter variability model": [[344, "parameter-variability-model"]], "Adding and removing parameter variability": [[344, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[344, "adding-and-removing-covariance"]], "Eta transformations": [[344, "eta-transformations"]], "Covariates and allometry": [[344, "covariates-and-allometry"]], "Population parameters": [[344, "population-parameters"]], "Error model": [[344, "error-model"]], "BLQ transformations": [[344, "blq-transformations"]], "Examining and modifying dataset": [[344, "examining-and-modifying-dataset"]], "Subjects": [[344, "subjects"]], "Observations": [[344, "observations"]], "Dosing": [[344, "dosing"]], "Extract dosing information": [[344, "extract-dosing-information"]], "Dose grouping": [[344, "dose-grouping"]], "Time after dose": [[344, "time-after-dose"]], "Concentration parameters": [[344, "concentration-parameters"]], "QA": [[353, "qa"]], "The qa results": [[353, "the-qa-results"]], "Overview": [[353, "overview"]], "Structural bias": [[353, "structural-bias"]], "Fullblock": [[353, "fullblock"]], "Boxcox": [[353, "boxcox"]], "Tdist": [[353, "tdist"]], "Residual error": [[353, "residual-error"]], "Covariate effects": [[353, "covariate-effects"], [333, "covariate-effects"]], "ruvsearch": [[355, "ruvsearch"]], "The RUVsearch results": [[355, "the-ruvsearch-results"]], "Project suggestions": [[350, "project-suggestions"]], "Strictness": [[358, "strictness"]], "Distribution of new IOVs": [[338, "distribution-of-new-iovs"]], "Comparing and ranking candidates": [[338, "comparing-and-ranking-candidates"], [336, "comparing-and-ranking-candidates"], [345, "comparing-and-ranking-candidates"]], "Top down exhaustive search": [[336, "top-down-exhaustive-search"]], "Bottom up stepwise search": [[336, "bottom-up-stepwise-search"]], "Adding IIV to the start model": [[336, "adding-iiv-to-the-start-model"]], "The IIVsearch results": [[336, "the-iivsearch-results"]], "Scales": [[354, "scales"]], "Normal": [[354, "normal"]], "UCP": [[354, "ucp"]], "The Retries results": [[354, "the-retries-results"]], "Linearize": [[340, "linearize"]], "The linearize results": [[340, "the-linearize-results"]], "OFVs": [[340, "ofvs"]], "Individual OFVs": [[340, "individual-ofvs"]], "FREM": [[333, "frem"]], "The FREM postprocessing and results": [[333, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[333, "parameter-covariate-coefficients"]], "Individual covariate effects": [[333, "individual-covariate-effects"]], "Unexplained variability": [[333, "unexplained-variability"]], "OFV": [[333, "ofv"]], "Estimated covariate values": [[333, "estimated-covariate-values"]], "Getting started": [[335, "getting-started"]], "Installation": [[335, "installation"]], "A first example": [[335, "a-first-example"]], "License": [[339, "license"]], "Logo": [[339, "logo"]], "Copyright": [[339, "copyright"]], "BSD 2-clause License": [[339, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[339, "gnu-lesser-general-public-license"]], "Structsearch": [[359, "structsearch"]], "The model types": [[359, "the-model-types"]], "The search space": [[359, "the-search-space"], [331, "the-search-space"], [345, "the-search-space"]], "Model feature language (MFL)": [[341, "model-feature-language-mfl"]], "Option types": [[341, "option-types"]], "Model features": [[341, "model-features"]], "Symbols": [[341, "symbols"]], "Describe intervals": [[341, "describe-intervals"]], "Redundant descriptions": [[341, "redundant-descriptions"]], "General": [[334, "general"]], "Plugins": [[349, "plugins"]], "Overview of a plugin": [[349, "overview-of-a-plugin"]], "Drug metabolite": [[331, "drug-metabolite"]], "Modelsearch": [[345, "modelsearch"]], "Common behaviours between algorithms": [[345, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[345, "feature-combination-exclusions"]], "Exhaustive search": [[345, "exhaustive-search"]], "Exhaustive stepwise search": [[345, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[345, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[345, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[345, "the-modelsearch-results"]], "Resmod": [[351, "resmod"]], "The resmod results": [[351, "the-resmod-results"]], "Resmod models": [[351, "resmod-models"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[8, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[8, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[8, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[8, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[8, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[8, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[8, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[8, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[8, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[8, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[9, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[9, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[9, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[9, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[9, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[9, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[9, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[9, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[10, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[10, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[10, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[10, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[10, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[10, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[10, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[10, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[10, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[10, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[10, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[10, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[11, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[11, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[11, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[11, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[11, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[11, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[11, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[12, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[12, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_compartment_or_raise() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.find_compartment_or_raise"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[12, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[12, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[12, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[13, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[13, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[14, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[14, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[14, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[14, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[14, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[14, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[14, "pharmpy.model.DataInfo.types"]], "dataseterror": [[15, "pharmpy.model.DatasetError"]], "datasetwarning": [[16, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[17, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[17, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[17, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[17, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[17, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[17, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[17, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[17, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[18, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[18, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[18, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[18, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.residuals"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "to_dict() (pharmpy.model.estimationstep method)": [[18, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[18, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[19, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[19, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[19, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[19, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[19, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[19, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[20, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[20, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[20, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[20, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[20, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[20, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[20, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[20, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[20, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[20, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[21, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[21, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[21, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[21, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[21, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[21, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[21, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[21, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[21, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[22, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[22, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[22, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[22, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.model_code"]], "name (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[22, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[22, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[22, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[22, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[22, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[22, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[22, "pharmpy.model.Model.write_files"]], "modelerror": [[23, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[24, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[25, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[26, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[26, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[26, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[26, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[26, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[26, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[26, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[26, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[26, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[27, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[27, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[27, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[27, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[27, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[27, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[27, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[27, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[27, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[27, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[27, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[28, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[28, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[28, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[28, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[28, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[28, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[28, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[28, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[28, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[29, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[29, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[29, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.subs"]], "symbols (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.symbols"]], "to_dict() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[29, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[29, "pharmpy.model.RandomVariables.variance_parameters"]], "simulationstep (class in pharmpy.model)": [[30, "pharmpy.model.SimulationStep"]], "create() (pharmpy.model.simulationstep class method)": [[30, "pharmpy.model.SimulationStep.create"]], "from_dict() (pharmpy.model.simulationstep class method)": [[30, "pharmpy.model.SimulationStep.from_dict"]], "n (pharmpy.model.simulationstep attribute)": [[30, "pharmpy.model.SimulationStep.n"]], "replace() (pharmpy.model.simulationstep method)": [[30, "pharmpy.model.SimulationStep.replace"]], "seed (pharmpy.model.simulationstep attribute)": [[30, "pharmpy.model.SimulationStep.seed"]], "to_dict() (pharmpy.model.simulationstep method)": [[30, "pharmpy.model.SimulationStep.to_dict"]], "statement (class in pharmpy.model)": [[31, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[31, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[31, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[31, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[32, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[32, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[32, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[32, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[32, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[32, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[32, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[32, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[33, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[33, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[33, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[33, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[33, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[33, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[33, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[34, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[34, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[34, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[34, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[34, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[34, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[34, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[34, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[35, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_bioavailability"]], "add_cmt() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_cmt"]], "add_covariate_effect() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.add_population_parameter"]], "add_predictions() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.add_predictions"]], "add_residuals() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.add_residuals"]], "add_time_after_dose() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.append_estimation_step_options"]], "bin_observations() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.bin_observations"]], "bump_model_number() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_bioavailability"]], "get_central_volume_and_clearance() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_central_volume_and_clearance"]], "get_cmt() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_covariate_baselines"]], "get_covariate_effects() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_covariate_effects"]], "get_doseid() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.omit_data"]], "plot_abs_cwres_vs_ipred() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.plot_abs_cwres_vs_ipred"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_dv_vs_pred() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.plot_dv_vs_pred"]], "plot_eta_distributions() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.plot_eta_distributions"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_predictions() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.remove_predictions"]], "remove_residuals() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.remove_residuals"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.rename_symbols"]], "replace_non_random_rvs() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.replace_non_random_rvs"]], "resample_data() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_additive_error_model"]], "set_baseline_effect() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_baseline_effect"]], "set_combined_error_model() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_covariates"]], "set_dataset() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_dataset"]], "set_direct_effect() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_simulation() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.set_simulation"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[237, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[238, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[239, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[240, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[241, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[242, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[243, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[244, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[245, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[246, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[247, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[248, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[249, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[250, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[251, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[252, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[253, "pharmpy.modeling.use_thetas_for_error_stdev"]], "vpc_plot() (in module pharmpy.modeling)": [[254, "pharmpy.modeling.vpc_plot"]], "write_csv() (in module pharmpy.modeling)": [[255, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[256, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[257, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[258, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[259, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[260, "pharmpy.tools.get_model_features"]], "is_strictness_fulfilled() (in module pharmpy.tools)": [[261, "pharmpy.tools.is_strictness_fulfilled"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[262, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[263, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[264, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[265, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[266, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[267, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[268, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[269, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[270, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[271, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[272, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[273, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[274, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[275, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[276, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[277, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[278, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[279, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[280, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[281, "pharmpy.tools.run_modelsearch"]], "run_retries() (in module pharmpy.tools)": [[282, "pharmpy.tools.run_retries"]], "run_ruvsearch() (in module pharmpy.tools)": [[283, "pharmpy.tools.run_ruvsearch"]], "run_simulation() (in module pharmpy.tools)": [[284, "pharmpy.tools.run_simulation"]], "run_structsearch() (in module pharmpy.tools)": [[285, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[286, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[287, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[288, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[289, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[290, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[291, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[292, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[292, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[293, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[294, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[294, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[294, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[294, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[295, "pharmpy.workflows.Log"]], "errors (pharmpy.workflows.log attribute)": [[295, "pharmpy.workflows.Log.errors"]], "from_dict() (pharmpy.workflows.log class method)": [[295, "pharmpy.workflows.Log.from_dict"]], "log_error() (pharmpy.workflows.log method)": [[295, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[295, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[295, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[295, "pharmpy.workflows.Log.to_dict"]], "warnings (pharmpy.workflows.log attribute)": [[295, "pharmpy.workflows.Log.warnings"]], "modeldatabase (class in pharmpy.workflows)": [[296, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[296, "pharmpy.workflows.ModelDatabase.transaction"]], "modelentry (class in pharmpy.workflows)": [[297, "pharmpy.workflows.ModelEntry"]], "attach_results() (pharmpy.workflows.modelentry method)": [[297, "pharmpy.workflows.ModelEntry.attach_results"]], "create() (pharmpy.workflows.modelentry class method)": [[297, "pharmpy.workflows.ModelEntry.create"]], "log (pharmpy.workflows.modelentry attribute)": [[297, "pharmpy.workflows.ModelEntry.log"]], "model (pharmpy.workflows.modelentry attribute)": [[297, "pharmpy.workflows.ModelEntry.model"]], "modelfit_results (pharmpy.workflows.modelentry attribute)": [[297, "pharmpy.workflows.ModelEntry.modelfit_results"]], "parent (pharmpy.workflows.modelentry attribute)": [[297, "pharmpy.workflows.ModelEntry.parent"]], "simulation_results (pharmpy.workflows.modelentry attribute)": [[297, "pharmpy.workflows.ModelEntry.simulation_results"]], "modelfitresults (class in pharmpy.workflows)": [[298, "pharmpy.workflows.ModelfitResults"]], "correlation_matrix (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.correlation_matrix"]], "covariance_matrix (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.covariance_matrix"]], "covstep_successful (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.covstep_successful"]], "description (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.description"]], "estimation_runtime (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.estimation_runtime"]], "estimation_runtime_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.estimation_runtime_iterations"]], "evaluation (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.evaluation"]], "function_evaluations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.function_evaluations"]], "function_evaluations_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.function_evaluations_iterations"]], "gradients (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.gradients"]], "gradients_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.gradients_iterations"]], "individual_estimates (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.individual_estimates"]], "individual_estimates_covariance (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.individual_estimates_covariance"]], "individual_ofv (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.individual_ofv"]], "log (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.log"]], "log_likelihood (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.log_likelihood"]], "minimization_successful (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.minimization_successful"]], "minimization_successful_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.minimization_successful_iterations"]], "name (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.name"]], "ofv (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.ofv"]], "ofv_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.ofv_iterations"]], "parameter_estimates (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.parameter_estimates"]], "parameter_estimates_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.parameter_estimates_iterations"]], "parameter_estimates_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.parameter_estimates_sdcorr"]], "precision_matrix (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.precision_matrix"]], "predictions (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.predictions"]], "relative_standard_errors (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.relative_standard_errors"]], "residuals (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.residuals"]], "runtime_total (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.runtime_total"]], "significant_digits (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.significant_digits"]], "significant_digits_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.significant_digits_iterations"]], "standard_errors (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.standard_errors"]], "standard_errors_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.standard_errors_sdcorr"]], "termination_cause (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.termination_cause"]], "termination_cause_iterations (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.termination_cause_iterations"]], "warnings (pharmpy.workflows.modelfitresults attribute)": [[298, "pharmpy.workflows.ModelfitResults.warnings"]], "nullmodeldatabase (class in pharmpy.workflows)": [[299, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[299, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[300, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[300, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[300, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[300, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[300, "pharmpy.workflows.NullToolDatabase.store_results"]], "results (class in pharmpy.workflows)": [[301, "pharmpy.workflows.Results"]], "from_dict() (pharmpy.workflows.results class method)": [[301, "pharmpy.workflows.Results.from_dict"]], "get_and_reset_index() (pharmpy.workflows.results method)": [[301, "pharmpy.workflows.Results.get_and_reset_index"]], "to_csv() (pharmpy.workflows.results method)": [[301, "pharmpy.workflows.Results.to_csv"]], "to_dict() (pharmpy.workflows.results method)": [[301, "pharmpy.workflows.Results.to_dict"]], "to_json() (pharmpy.workflows.results method)": [[301, "pharmpy.workflows.Results.to_json"]], "simulationresults (class in pharmpy.workflows)": [[302, "pharmpy.workflows.SimulationResults"]], "description (pharmpy.workflows.simulationresults attribute)": [[302, "pharmpy.workflows.SimulationResults.description"]], "name (pharmpy.workflows.simulationresults attribute)": [[302, "pharmpy.workflows.SimulationResults.name"]], "table (pharmpy.workflows.simulationresults attribute)": [[302, "pharmpy.workflows.SimulationResults.table"]], "task (class in pharmpy.workflows)": [[303, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[303, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[303, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[303, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[303, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[303, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[304, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[304, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[304, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[304, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[304, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[304, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[304, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[305, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[305, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[305, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[305, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[305, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[305, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[306, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[306, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[306, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[306, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[307, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[308, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[309, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[310, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[311, "pharmpy.workflows.split_common_options"]], "module": [[312, "module-pharmpy.model"], [313, "module-pharmpy.modeling"], [314, "module-pharmpy.tools"], [315, "module-pharmpy.workflows"]], "pharmpy.model": [[312, "module-pharmpy.model"]], "pharmpy.modeling": [[313, "module-pharmpy.modeling"]], "pharmpy.tools": [[314, "module-pharmpy.tools"]], "pharmpy.workflows": [[315, "module-pharmpy.workflows"]], "--administration": [[320, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[320, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[320, "cmdoption-pharmpy-run-allometry-allometric_variable"], [320, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[320, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[320, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[320, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[320, "cmdoption-pharmpy-run-iivsearch-cutoff"], [320, "cmdoption-pharmpy-run-iovsearch-cutoff"], [320, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[320, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[320, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[320, "cmdoption-pharmpy-run-covsearch-effects"]], "--explicit-odes": [[320, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[320, "cmdoption-pharmpy-data-append-f"], [320, "cmdoption-pharmpy-data-deidentify-f"], [320, "cmdoption-pharmpy-data-filter-f"], [320, "cmdoption-pharmpy-data-reference-f"], [320, "cmdoption-pharmpy-data-write-f"], [320, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[320, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[320, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[320, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[320, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[320, "cmdoption-pharmpy-data-append-h"], [320, "cmdoption-pharmpy-data-deidentify-h"], [320, "cmdoption-pharmpy-data-filter-h"], [320, "cmdoption-pharmpy-data-h"], [320, "cmdoption-pharmpy-data-print-h"], [320, "cmdoption-pharmpy-data-reference-h"], [320, "cmdoption-pharmpy-data-resample-h"], [320, "cmdoption-pharmpy-data-write-h"], [320, "cmdoption-pharmpy-h"], [320, "cmdoption-pharmpy-info-h"], [320, "cmdoption-pharmpy-model-h"], [320, "cmdoption-pharmpy-model-print-h"], [320, "cmdoption-pharmpy-model-sample-h"], [320, "cmdoption-pharmpy-model-update_inits-h"], [320, "cmdoption-pharmpy-results-bootstrap-h"], [320, "cmdoption-pharmpy-results-cdd-h"], [320, "cmdoption-pharmpy-results-frem-h"], [320, "cmdoption-pharmpy-results-h"], [320, "cmdoption-pharmpy-results-linearize-h"], [320, "cmdoption-pharmpy-results-ofv-h"], [320, "cmdoption-pharmpy-results-print-h"], [320, "cmdoption-pharmpy-results-qa-h"], [320, "cmdoption-pharmpy-results-report-h"], [320, "cmdoption-pharmpy-results-ruvsearch-h"], [320, "cmdoption-pharmpy-results-scm-h"], [320, "cmdoption-pharmpy-results-simeval-h"], [320, "cmdoption-pharmpy-results-summary-h"], [320, "cmdoption-pharmpy-run-allometry-h"], [320, "cmdoption-pharmpy-run-amd-h"], [320, "cmdoption-pharmpy-run-bootstrap-h"], [320, "cmdoption-pharmpy-run-covsearch-h"], [320, "cmdoption-pharmpy-run-estmethod-h"], [320, "cmdoption-pharmpy-run-execute-h"], [320, "cmdoption-pharmpy-run-h"], [320, "cmdoption-pharmpy-run-iivsearch-h"], [320, "cmdoption-pharmpy-run-iovsearch-h"], [320, "cmdoption-pharmpy-run-modelsearch-h"], [320, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[320, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[320, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [320, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[320, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[320, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[320, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[320, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[320, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[320, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[320, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[320, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[320, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[320, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[320, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[320, "cmdoption-pharmpy-run-amd-occasion"]], "--order": [[320, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[320, "cmdoption-pharmpy-data-append-o"], [320, "cmdoption-pharmpy-data-deidentify-o"], [320, "cmdoption-pharmpy-data-filter-o"], [320, "cmdoption-pharmpy-data-reference-o"], [320, "cmdoption-pharmpy-data-write-o"], [320, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[320, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[320, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[320, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[320, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[320, "cmdoption-pharmpy-run-allometry-path"], [320, "cmdoption-pharmpy-run-amd-path"], [320, "cmdoption-pharmpy-run-covsearch-path"], [320, "cmdoption-pharmpy-run-estmethod-path"], [320, "cmdoption-pharmpy-run-iivsearch-path"], [320, "cmdoption-pharmpy-run-iovsearch-path"], [320, "cmdoption-pharmpy-run-modelsearch-path"], [320, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[320, "cmdoption-pharmpy-run-iivsearch-rank_type"], [320, "cmdoption-pharmpy-run-iovsearch-rank_type"], [320, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[320, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[320, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[320, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[320, "cmdoption-pharmpy-run-amd-resume"]], "--sample_size": [[320, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[320, "cmdoption-pharmpy-model-sample-samples"], [320, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[320, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[320, "cmdoption-pharmpy-data-resample-seed"], [320, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[320, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[320, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[320, "cmdoption-pharmpy-data-resample-stratify"]], "--upper_bounds": [[320, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[320, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[320, "cmdoption-pharmpy-version"]], "-f": [[320, "cmdoption-pharmpy-data-append-f"], [320, "cmdoption-pharmpy-data-deidentify-f"], [320, "cmdoption-pharmpy-data-filter-f"], [320, "cmdoption-pharmpy-data-reference-f"], [320, "cmdoption-pharmpy-data-write-f"], [320, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[320, "cmdoption-pharmpy-data-append-h"], [320, "cmdoption-pharmpy-data-deidentify-h"], [320, "cmdoption-pharmpy-data-filter-h"], [320, "cmdoption-pharmpy-data-h"], [320, "cmdoption-pharmpy-data-print-h"], [320, "cmdoption-pharmpy-data-reference-h"], [320, "cmdoption-pharmpy-data-resample-h"], [320, "cmdoption-pharmpy-data-write-h"], [320, "cmdoption-pharmpy-h"], [320, "cmdoption-pharmpy-info-h"], [320, "cmdoption-pharmpy-model-h"], [320, "cmdoption-pharmpy-model-print-h"], [320, "cmdoption-pharmpy-model-sample-h"], [320, "cmdoption-pharmpy-model-update_inits-h"], [320, "cmdoption-pharmpy-results-bootstrap-h"], [320, "cmdoption-pharmpy-results-cdd-h"], [320, "cmdoption-pharmpy-results-frem-h"], [320, "cmdoption-pharmpy-results-h"], [320, "cmdoption-pharmpy-results-linearize-h"], [320, "cmdoption-pharmpy-results-ofv-h"], [320, "cmdoption-pharmpy-results-print-h"], [320, "cmdoption-pharmpy-results-qa-h"], [320, "cmdoption-pharmpy-results-report-h"], [320, "cmdoption-pharmpy-results-ruvsearch-h"], [320, "cmdoption-pharmpy-results-scm-h"], [320, "cmdoption-pharmpy-results-simeval-h"], [320, "cmdoption-pharmpy-results-summary-h"], [320, "cmdoption-pharmpy-run-allometry-h"], [320, "cmdoption-pharmpy-run-amd-h"], [320, "cmdoption-pharmpy-run-bootstrap-h"], [320, "cmdoption-pharmpy-run-covsearch-h"], [320, "cmdoption-pharmpy-run-estmethod-h"], [320, "cmdoption-pharmpy-run-execute-h"], [320, "cmdoption-pharmpy-run-h"], [320, "cmdoption-pharmpy-run-iivsearch-h"], [320, "cmdoption-pharmpy-run-iovsearch-h"], [320, "cmdoption-pharmpy-run-modelsearch-h"], [320, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[320, "cmdoption-pharmpy-data-append-o"], [320, "cmdoption-pharmpy-data-deidentify-o"], [320, "cmdoption-pharmpy-data-filter-o"], [320, "cmdoption-pharmpy-data-reference-o"], [320, "cmdoption-pharmpy-data-write-o"], [320, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[320, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [320, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [320, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[320, "cmdoption-pharmpy-data-reference-arg-colname"]], "expression": [[320, "cmdoption-pharmpy-data-append-arg-expression"]], "expressions": [[320, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[320, "cmdoption-pharmpy-data-append-arg-file"], [320, "cmdoption-pharmpy-data-deidentify-arg-file"], [320, "cmdoption-pharmpy-data-filter-arg-file"], [320, "cmdoption-pharmpy-data-print-arg-file"], [320, "cmdoption-pharmpy-data-reference-arg-file"], [320, "cmdoption-pharmpy-data-resample-arg-file"], [320, "cmdoption-pharmpy-data-write-arg-file"], [320, "cmdoption-pharmpy-model-print-arg-file"], [320, "cmdoption-pharmpy-model-sample-arg-file"], [320, "cmdoption-pharmpy-model-update_inits-arg-file"], [320, "cmdoption-pharmpy-results-ofv-arg-file"], [320, "cmdoption-pharmpy-results-print-arg-file"], [320, "cmdoption-pharmpy-results-summary-arg-file"], [320, "cmdoption-pharmpy-run-allometry-arg-file"], [320, "cmdoption-pharmpy-run-bootstrap-arg-file"], [320, "cmdoption-pharmpy-run-covsearch-arg-file"], [320, "cmdoption-pharmpy-run-estmethod-arg-file"], [320, "cmdoption-pharmpy-run-execute-arg-file"], [320, "cmdoption-pharmpy-run-iivsearch-arg-file"], [320, "cmdoption-pharmpy-run-iovsearch-arg-file"], [320, "cmdoption-pharmpy-run-modelsearch-arg-file"], [320, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[320, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[320, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "pharmpy command line option": [[320, "cmdoption-pharmpy-h"], [320, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[320, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[320, "cmdoption-pharmpy-data-append-arg-expression"], [320, "cmdoption-pharmpy-data-append-arg-file"], [320, "cmdoption-pharmpy-data-append-f"], [320, "cmdoption-pharmpy-data-append-h"], [320, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[320, "cmdoption-pharmpy-data-deidentify-arg-file"], [320, "cmdoption-pharmpy-data-deidentify-datecols"], [320, "cmdoption-pharmpy-data-deidentify-f"], [320, "cmdoption-pharmpy-data-deidentify-h"], [320, "cmdoption-pharmpy-data-deidentify-idcol"], [320, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[320, "cmdoption-pharmpy-data-filter-arg-expressions"], [320, "cmdoption-pharmpy-data-filter-arg-file"], [320, "cmdoption-pharmpy-data-filter-f"], [320, "cmdoption-pharmpy-data-filter-h"], [320, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[320, "cmdoption-pharmpy-data-print-arg-file"], [320, "cmdoption-pharmpy-data-print-columns"], [320, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[320, "cmdoption-pharmpy-data-reference-arg-colname"], [320, "cmdoption-pharmpy-data-reference-arg-file"], [320, "cmdoption-pharmpy-data-reference-f"], [320, "cmdoption-pharmpy-data-reference-h"], [320, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[320, "cmdoption-pharmpy-data-resample-arg-file"], [320, "cmdoption-pharmpy-data-resample-group"], [320, "cmdoption-pharmpy-data-resample-h"], [320, "cmdoption-pharmpy-data-resample-replace"], [320, "cmdoption-pharmpy-data-resample-resamples"], [320, "cmdoption-pharmpy-data-resample-sample_size"], [320, "cmdoption-pharmpy-data-resample-seed"], [320, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[320, "cmdoption-pharmpy-data-write-arg-file"], [320, "cmdoption-pharmpy-data-write-f"], [320, "cmdoption-pharmpy-data-write-h"], [320, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[320, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[320, "cmdoption-pharmpy-model-h"]], "pharmpy-model-print command line option": [[320, "cmdoption-pharmpy-model-print-arg-file"], [320, "cmdoption-pharmpy-model-print-explicit-odes"], [320, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-sample command line option": [[320, "cmdoption-pharmpy-model-sample-arg-file"], [320, "cmdoption-pharmpy-model-sample-h"], [320, "cmdoption-pharmpy-model-sample-samples"], [320, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-update_inits command line option": [[320, "cmdoption-pharmpy-model-update_inits-arg-file"], [320, "cmdoption-pharmpy-model-update_inits-f"], [320, "cmdoption-pharmpy-model-update_inits-h"], [320, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[320, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[320, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [320, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[320, "cmdoption-pharmpy-results-cdd-arg-psn"], [320, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[320, "cmdoption-pharmpy-results-frem-arg-psn"], [320, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [320, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [320, "cmdoption-pharmpy-results-frem-h"], [320, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[320, "cmdoption-pharmpy-results-linearize-arg-psn"], [320, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[320, "cmdoption-pharmpy-results-ofv-arg-file"], [320, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[320, "cmdoption-pharmpy-results-print-arg-file"], [320, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[320, "cmdoption-pharmpy-results-qa-arg-psn"], [320, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[320, "cmdoption-pharmpy-results-report-arg-psn"], [320, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[320, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [320, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[320, "cmdoption-pharmpy-results-scm-arg-psn"], [320, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[320, "cmdoption-pharmpy-results-simeval-arg-psn"], [320, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[320, "cmdoption-pharmpy-results-summary-arg-file"], [320, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[320, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[320, "cmdoption-pharmpy-run-allometry-allometric_variable"], [320, "cmdoption-pharmpy-run-allometry-arg-file"], [320, "cmdoption-pharmpy-run-allometry-h"], [320, "cmdoption-pharmpy-run-allometry-initials"], [320, "cmdoption-pharmpy-run-allometry-lower_bounds"], [320, "cmdoption-pharmpy-run-allometry-non_fixed"], [320, "cmdoption-pharmpy-run-allometry-parameters"], [320, "cmdoption-pharmpy-run-allometry-path"], [320, "cmdoption-pharmpy-run-allometry-reference_value"], [320, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[320, "cmdoption-pharmpy-run-amd-administration"], [320, "cmdoption-pharmpy-run-amd-allometric_variable"], [320, "cmdoption-pharmpy-run-amd-arg-input_path"], [320, "cmdoption-pharmpy-run-amd-cl_init"], [320, "cmdoption-pharmpy-run-amd-h"], [320, "cmdoption-pharmpy-run-amd-lloq_limit"], [320, "cmdoption-pharmpy-run-amd-lloq_method"], [320, "cmdoption-pharmpy-run-amd-mat_init"], [320, "cmdoption-pharmpy-run-amd-modeltype"], [320, "cmdoption-pharmpy-run-amd-occasion"], [320, "cmdoption-pharmpy-run-amd-order"], [320, "cmdoption-pharmpy-run-amd-path"], [320, "cmdoption-pharmpy-run-amd-resume"], [320, "cmdoption-pharmpy-run-amd-search_space"], [320, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[320, "cmdoption-pharmpy-run-bootstrap-arg-file"], [320, "cmdoption-pharmpy-run-bootstrap-h"], [320, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[320, "cmdoption-pharmpy-run-covsearch-algorithm"], [320, "cmdoption-pharmpy-run-covsearch-arg-file"], [320, "cmdoption-pharmpy-run-covsearch-effects"], [320, "cmdoption-pharmpy-run-covsearch-h"], [320, "cmdoption-pharmpy-run-covsearch-max_steps"], [320, "cmdoption-pharmpy-run-covsearch-p_backward"], [320, "cmdoption-pharmpy-run-covsearch-p_forward"], [320, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[320, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [320, "cmdoption-pharmpy-run-estmethod-arg-file"], [320, "cmdoption-pharmpy-run-estmethod-h"], [320, "cmdoption-pharmpy-run-estmethod-methods"], [320, "cmdoption-pharmpy-run-estmethod-path"], [320, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[320, "cmdoption-pharmpy-run-execute-arg-file"], [320, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[320, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [320, "cmdoption-pharmpy-run-iivsearch-arg-file"], [320, "cmdoption-pharmpy-run-iivsearch-cutoff"], [320, "cmdoption-pharmpy-run-iivsearch-h"], [320, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [320, "cmdoption-pharmpy-run-iivsearch-path"], [320, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[320, "cmdoption-pharmpy-run-iovsearch-arg-file"], [320, "cmdoption-pharmpy-run-iovsearch-column"], [320, "cmdoption-pharmpy-run-iovsearch-cutoff"], [320, "cmdoption-pharmpy-run-iovsearch-distribution"], [320, "cmdoption-pharmpy-run-iovsearch-h"], [320, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [320, "cmdoption-pharmpy-run-iovsearch-path"], [320, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[320, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [320, "cmdoption-pharmpy-run-modelsearch-arg-file"], [320, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [320, "cmdoption-pharmpy-run-modelsearch-cutoff"], [320, "cmdoption-pharmpy-run-modelsearch-h"], [320, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [320, "cmdoption-pharmpy-run-modelsearch-path"], [320, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[320, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [320, "cmdoption-pharmpy-run-ruvsearch-groups"], [320, "cmdoption-pharmpy-run-ruvsearch-h"], [320, "cmdoption-pharmpy-run-ruvsearch-p_value"], [320, "cmdoption-pharmpy-run-ruvsearch-path"], [320, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[320, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [320, "cmdoption-pharmpy-results-cdd-arg-psn"], [320, "cmdoption-pharmpy-results-frem-arg-psn"], [320, "cmdoption-pharmpy-results-linearize-arg-psn"], [320, "cmdoption-pharmpy-results-qa-arg-psn"], [320, "cmdoption-pharmpy-results-report-arg-psn"], [320, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [320, "cmdoption-pharmpy-results-scm-arg-psn"], [320, "cmdoption-pharmpy-results-simeval-arg-psn"]]}})