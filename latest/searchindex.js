Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_proportional_error_model", "has_random_effect", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 18, 24, 25, 26, 29, 31, 55, 56, 70, 75, 79, 80, 81, 82, 84, 85, 86, 87, 95, 102, 105, 111, 112, 113, 114, 118, 122, 128, 131, 132, 138, 156, 169, 171, 190, 201, 207, 213, 238, 244, 248, 252, 253, 254, 268, 269, 271, 272, 273, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 299, 300, 301, 303, 304, 305], "section": [0, 273, 276, 287, 289, 299, 303], "i": [0, 1, 2, 6, 8, 18, 24, 25, 26, 27, 29, 31, 33, 35, 37, 38, 40, 41, 43, 44, 48, 50, 57, 58, 67, 69, 70, 71, 74, 75, 77, 79, 81, 82, 84, 85, 86, 93, 95, 98, 101, 102, 106, 110, 111, 112, 113, 124, 125, 126, 129, 130, 134, 139, 140, 144, 145, 158, 159, 161, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 180, 181, 184, 185, 189, 190, 191, 192, 194, 197, 198, 199, 202, 204, 205, 206, 213, 215, 216, 221, 223, 225, 231, 232, 236, 237, 238, 239, 240, 246, 248, 252, 253, 254, 258, 267, 268, 269, 271, 272, 273, 274, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 305], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 223, 248, 249, 250, 251, 252, 253, 254, 256, 269, 284, 287, 291, 295, 296, 300, 303], "The": [0, 2, 3, 6, 8, 9, 10, 18, 24, 25, 26, 29, 33, 35, 36, 40, 42, 43, 58, 66, 74, 77, 81, 82, 83, 84, 85, 86, 104, 117, 122, 125, 126, 134, 135, 136, 151, 165, 169, 171, 173, 181, 190, 199, 217, 228, 234, 235, 240, 244, 269, 272, 274, 276, 278, 283, 286, 287, 290, 291, 293, 295, 296, 303, 304, 305], "inform": [0, 1, 2, 6, 8, 122, 269, 271, 276, 278, 279, 281, 284, 285, 286, 287, 289, 292, 296, 300, 301, 303, 304], "intend": [0, 287, 289, 303], "non": [0, 25, 69, 74, 83, 202, 269, 278, 279, 282, 287, 289, 291, 296, 303], "hard": [0, 296], "find": [0, 8, 29, 48, 88, 89, 122, 230, 246, 269, 285, 287, 304, 305], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 274, 276, 278, 281, 283, 284, 286, 287, 289, 290, 291, 292, 300], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 275, 276, 277, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 304], "develop": [0, 232, 269, 287, 295, 296, 303, 305], "remov": [0, 2, 9, 26, 29, 79, 111, 112, 113, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 181, 183, 195, 208, 210, 232, 268, 269, 271, 276, 279, 284, 286, 287, 293], "row": [0, 1, 2, 25, 81, 82, 93, 96, 98, 166, 167, 245, 267, 269, 271, 276, 278, 282, 284, 286, 290, 291, 292, 300, 301], "split": [0, 74, 202, 262, 269, 271, 289, 303], "drop": [0, 2, 6, 18, 79, 80, 209, 269, 292, 296, 301], "column": [0, 1, 2, 6, 8, 10, 18, 25, 31, 40, 46, 58, 77, 79, 80, 81, 82, 83, 87, 95, 96, 98, 102, 145, 146, 150, 165, 166, 172, 175, 192, 203, 207, 209, 221, 222, 223, 232, 237, 244, 245, 267, 269, 271, 276, 278, 282, 284, 286, 289, 290, 291, 292, 300, 301, 303], "error": [0, 2, 11, 19, 20, 24, 26, 29, 51, 52, 53, 54, 58, 61, 62, 63, 64, 65, 120, 125, 126, 134, 136, 149, 156, 169, 171, 189, 190, 192, 196, 203, 214, 225, 243, 246, 251, 267, 269, 276, 281, 284, 286, 292, 293, 300, 301, 303], "handl": [0, 3, 87, 201, 269, 278, 279, 282, 296], "valid": [0, 26, 36, 101, 173, 269, 287], "some": [0, 8, 10, 61, 74, 156, 169, 203, 250, 267, 269, 271, 274, 276, 278, 287, 288, 291, 292, 295, 296, 300, 303], "rule": [0, 67, 287], "These": [0, 274, 279, 282, 287, 288, 291, 295, 296, 303], "were": [0, 26, 29, 243, 267, 268, 269, 278, 281, 282, 287, 290, 292, 303, 305], "test": [0, 2, 127, 140, 234, 235, 237, 239, 240, 269, 271, 275, 276, 278, 281, 283, 284, 286, 290, 292, 296, 300], "7": [0, 1, 2, 35, 51, 53, 54, 59, 63, 64, 82, 93, 98, 113, 115, 223, 267, 268, 276, 278, 282, 284, 286, 287, 288, 290, 291, 292, 297, 299, 300, 301, 302], "4": [0, 1, 2, 6, 51, 53, 54, 59, 63, 64, 81, 82, 83, 84, 85, 86, 93, 96, 98, 99, 113, 206, 223, 240, 246, 267, 268, 276, 277, 278, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 297, 299, 300, 301, 302], "3": [0, 1, 2, 6, 29, 51, 52, 53, 54, 59, 62, 63, 64, 65, 68, 81, 82, 83, 84, 85, 86, 93, 96, 98, 99, 100, 103, 113, 115, 149, 162, 166, 167, 168, 194, 203, 204, 205, 206, 221, 222, 223, 240, 245, 267, 268, 276, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 297, 299, 300, 301, 302, 303, 305], "delimet": 0, "between": [0, 8, 9, 26, 74, 203, 244, 258, 267, 268, 269, 271, 281, 282, 286, 287, 293, 296, 299, 300], "comma": [0, 271, 303], "space": [0, 66, 232, 239, 269, 271, 303], "tab": [0, 149, 269, 291, 294], "befor": [0, 2, 29, 167, 168, 212, 269, 271, 288, 292], "after": [0, 6, 29, 111, 112, 113, 192, 230, 243, 246, 250, 268, 269, 271, 277, 278, 282, 287, 288, 289, 292, 296, 297, 299, 301, 302, 305], "ar": [0, 2, 3, 4, 6, 8, 25, 26, 29, 36, 37, 38, 40, 44, 58, 72, 74, 77, 96, 110, 125, 126, 134, 142, 158, 159, 163, 171, 173, 176, 177, 189, 193, 202, 203, 207, 213, 220, 225, 234, 236, 238, 239, 248, 250, 267, 269, 271, 272, 274, 276, 278, 279, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 301, 303, 305], "give": [0, 25, 110, 144, 168, 248, 252, 253, 267, 269, 271, 282, 286, 287, 289, 301], "sic": 0, "begin": [0, 282, 289, 291], "end": [0, 37, 48, 282, 287, 289, 291, 303], "insert": [0, 269], "each": [0, 2, 6, 8, 26, 33, 35, 57, 58, 59, 81, 82, 83, 84, 85, 86, 93, 98, 99, 113, 143, 146, 147, 165, 168, 180, 250, 267, 268, 271, 273, 276, 278, 279, 281, 282, 284, 286, 287, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 305], "can": [0, 1, 2, 6, 10, 18, 25, 26, 29, 36, 50, 58, 66, 75, 83, 122, 165, 173, 201, 230, 235, 238, 250, 253, 254, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 300, 303, 304, 305], "onli": [0, 2, 3, 8, 10, 14, 26, 35, 55, 56, 67, 70, 79, 81, 82, 84, 85, 86, 101, 105, 114, 118, 125, 126, 134, 143, 165, 169, 171, 190, 201, 203, 212, 238, 240, 241, 246, 258, 269, 271, 272, 276, 286, 287, 289, 292, 295, 303], "numer": [0, 6, 14, 30, 81, 82, 84, 85, 267, 269, 278, 296], "e": [0, 6, 18, 26, 36, 70, 76, 111, 112, 113, 144, 159, 173, 174, 239, 267, 269, 274, 278, 281, 282, 284, 286, 287, 289, 291, 292, 293, 296, 300, 303], "other": [0, 7, 9, 18, 26, 29, 42, 71, 147, 238, 262, 267, 269, 272, 274, 279, 284, 287, 296], "charact": [0, 10, 278], "than": [0, 24, 25, 269, 284, 287, 292], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 26, 35, 225, 232, 248, 249, 252, 253, 261, 269, 271, 276, 287, 289, 292, 296, 303], "except": [0, 11, 12, 19, 20, 21, 38, 58, 165, 269, 287], "ii": [0, 6], "datx": [0, 269], "fortran": 0, "short": [0, 274, 287], "form": [0, 23, 26, 165, 269, 287], "exponenti": [0, 35, 38, 44, 180, 271, 276, 282], "notat": 0, "2": [0, 1, 2, 6, 18, 29, 33, 35, 37, 41, 43, 45, 47, 49, 51, 52, 53, 54, 59, 62, 63, 64, 65, 69, 81, 82, 83, 84, 85, 86, 93, 96, 98, 99, 103, 113, 115, 149, 162, 166, 167, 168, 169, 171, 178, 182, 184, 185, 188, 190, 191, 194, 197, 205, 206, 223, 231, 240, 244, 267, 268, 271, 274, 276, 277, 278, 281, 282, 284, 286, 288, 289, 290, 291, 292, 293, 297, 299, 300, 301, 302, 303], "1": [0, 1, 2, 5, 6, 7, 8, 16, 17, 18, 22, 25, 26, 29, 33, 35, 37, 42, 43, 45, 51, 52, 53, 54, 59, 60, 62, 63, 64, 65, 70, 72, 77, 81, 82, 83, 84, 85, 86, 93, 96, 98, 99, 100, 101, 103, 113, 115, 121, 124, 142, 143, 144, 145, 149, 153, 162, 165, 166, 167, 168, 170, 177, 178, 179, 180, 184, 185, 188, 189, 191, 192, 194, 197, 198, 201, 203, 204, 205, 206, 213, 223, 231, 232, 233, 234, 239, 240, 244, 267, 268, 271, 273, 274, 276, 277, 278, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 299, 300, 301, 302, 303, 305], "mean": [0, 2, 13, 17, 18, 22, 58, 61, 72, 144, 166, 167, 232, 248, 252, 267, 268, 269, 271, 282, 284, 287, 289, 290, 291, 292, 296, 299, 302, 303], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 24, 25, 26, 29, 31, 58, 60, 61, 66, 77, 78, 83, 88, 89, 104, 110, 116, 117, 119, 120, 121, 122, 145, 146, 151, 165, 166, 167, 169, 171, 182, 183, 190, 192, 195, 229, 238, 240, 243, 246, 248, 252, 253, 258, 267, 268, 270, 271, 274, 275, 276, 278, 279, 284, 286, 287, 288, 289, 291, 292, 295, 296, 300, 301, 303], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 78, 249, 251, 262, 287, 291], "instead": [0, 67, 83, 110, 248, 268, 269, 271, 278, 279, 281, 282, 287, 296], "lone": 0, "an": [0, 4, 6, 8, 10, 15, 16, 18, 25, 26, 29, 32, 33, 36, 39, 40, 47, 66, 99, 102, 125, 126, 127, 129, 130, 133, 134, 136, 140, 142, 144, 155, 165, 169, 173, 181, 205, 217, 220, 221, 222, 223, 243, 244, 246, 249, 251, 269, 271, 273, 274, 276, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 296, 299, 301, 302, 303, 305], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 43, 44, 45, 47, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 75, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 96, 98, 99, 100, 106, 115, 116, 120, 121, 123, 124, 142, 143, 144, 149, 153, 154, 157, 162, 166, 167, 168, 171, 173, 174, 176, 177, 180, 181, 182, 183, 189, 190, 192, 195, 202, 203, 204, 205, 208, 211, 213, 220, 222, 223, 231, 232, 234, 240, 245, 246, 267, 268, 271, 274, 276, 278, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 297, 299, 300, 301, 302, 303, 305], "dot": 0, "most": [0, 6, 35, 201, 271, 279, 287, 299], "24": [0, 2, 59, 93, 98, 100, 113, 115, 223, 267, 268, 276, 278, 281, 284, 286, 288, 290, 291, 292, 299, 300, 302], "long": [0, 269, 287, 296], "count": [0, 99, 245, 252, 269, 292], "delimit": 0, "wa": [0, 27, 244, 267, 269, 275, 287, 288, 300, 301], "eaten": 0, "empti": [0, 18, 26, 243, 273], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 26, 27, 29, 41, 48, 67, 74, 79, 90, 91, 92, 106, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 208, 210, 211, 212, 213, 269, 271, 272, 273, 278, 281, 283, 284, 285, 286, 289, 290, 291, 292, 293, 303, 305], "As": [0, 26, 272, 291, 293, 303], "contain": [0, 2, 3, 26, 77, 83, 221, 222, 223, 267, 268, 271, 276, 277, 278, 279, 281, 284, 286, 287, 289, 290, 292, 297, 299, 300, 301, 302, 303], "drope": 0, "input": [0, 7, 8, 9, 10, 26, 29, 35, 36, 38, 40, 64, 65, 75, 80, 123, 127, 135, 149, 153, 167, 180, 199, 232, 244, 255, 269, 271, 276, 278, 281, 284, 286, 291, 292, 293, 296, 300], "ani": [0, 2, 6, 9, 18, 47, 58, 69, 163, 230, 235, 245, 255, 258, 274, 278, 283, 284, 286, 287, 289, 290, 291, 293, 296, 303, 305], "limit": [0, 2, 6, 68, 161, 189, 203, 232, 269, 271, 286, 287, 294], "length": [0, 83, 84, 85, 86, 99, 100, 115, 269, 291], "If": [0, 2, 10, 18, 29, 35, 48, 58, 73, 74, 75, 83, 95, 99, 101, 102, 158, 159, 165, 167, 180, 181, 189, 199, 202, 204, 205, 206, 207, 213, 225, 232, 236, 239, 246, 267, 271, 276, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 303, 305], "ha": [0, 2, 8, 18, 26, 74, 83, 93, 98, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 267, 269, 271, 272, 274, 276, 278, 279, 281, 284, 286, 287, 289, 291, 292, 298, 300, 301, 303, 305], "more": [0, 2, 8, 25, 231, 234, 236, 237, 239, 240, 241, 269, 271, 276, 281, 283, 285, 287, 289, 291, 292, 296, 299, 303, 304], "extra": [0, 18, 269], "consid": [0, 2, 236, 237, 239, 269, 276, 279, 281, 284, 286, 287, 292, 300], "start": [0, 2, 8, 37, 47, 99, 145, 157, 165, 236, 241, 269, 271, 274, 276, 281, 282, 286, 287, 289, 290, 291, 292, 300, 301, 303, 305], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 258, 267, 269, 271, 272, 274, 276, 279, 281, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 294, 296, 300, 302, 303, 304, 305], "been": [0, 2, 6, 139, 272, 276, 278, 287, 291, 303, 305], "provid": [0, 26, 167, 189, 271, 272, 275, 276, 278, 284, 286, 287, 292, 305], "default": [0, 1, 2, 6, 7, 18, 24, 26, 31, 33, 35, 37, 38, 44, 48, 50, 57, 74, 75, 79, 101, 104, 106, 110, 117, 124, 125, 126, 134, 135, 158, 159, 161, 165, 166, 167, 169, 171, 176, 177, 180, 181, 189, 190, 192, 202, 204, 205, 206, 215, 216, 219, 225, 231, 236, 237, 239, 246, 248, 252, 253, 261, 266, 269, 271, 273, 276, 284, 286, 289, 291, 292, 293, 294, 300, 305], "where": [0, 2, 33, 43, 230, 267, 268, 269, 272, 273, 276, 278, 281, 282, 286, 287, 291, 292, 293, 296, 303, 305], "rexex": 0, "": [0, 10, 36, 66, 153, 173, 269, 271, 276, 278, 282, 287, 293, 297], "za": 0, "z": [0, 33], "either": [0, 2, 36, 38, 77, 101, 173, 232, 241, 271, 284, 287, 289, 291, 303, 305], "surround": 0, "two": [0, 8, 9, 26, 29, 77, 147, 267, 269, 270, 271, 287, 296, 300, 303], "By": [0, 18, 26, 125, 126, 134, 286, 287, 289], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 26, 29, 48, 66, 145, 155, 166, 203, 217, 236, 237, 238, 239, 252, 267, 268, 269, 271, 273, 276, 281, 284, 286, 287, 289, 290, 291, 292, 293, 294, 296, 300, 301, 303, 305], "interpret": [0, 269, 287, 305], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 25, 26, 27, 29, 33, 40, 50, 58, 66, 74, 75, 77, 81, 82, 83, 84, 85, 86, 110, 124, 144, 145, 163, 165, 166, 167, 168, 169, 171, 178, 180, 187, 189, 190, 196, 203, 207, 212, 214, 215, 219, 221, 222, 223, 225, 231, 232, 234, 235, 236, 237, 238, 239, 240, 248, 249, 250, 252, 253, 254, 256, 261, 267, 268, 269, 271, 273, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 299, 300, 301, 303, 304], "chang": [0, 2, 9, 18, 25, 26, 37, 77, 170, 176, 178, 182, 183, 191, 195, 197, 211, 271, 274, 287, 289, 291, 292, 293, 300, 305], "howev": [0, 284, 287, 293, 303, 305], "one": [0, 2, 6, 8, 9, 10, 14, 22, 24, 25, 26, 35, 70, 79, 83, 91, 125, 126, 134, 150, 165, 167, 175, 180, 196, 207, 209, 210, 214, 219, 238, 240, 243, 245, 248, 252, 253, 256, 269, 271, 272, 274, 278, 279, 281, 282, 286, 287, 289, 291, 292, 293, 296, 303], "legal": [0, 287], "ones": [0, 276, 282], "9": [0, 2, 6, 43, 59, 68, 82, 85, 93, 96, 98, 113, 115, 213, 223, 267, 268, 276, 278, 283, 284, 286, 287, 288, 290, 291, 292, 299, 300, 301, 302, 305], "sinc": [0, 6, 181, 269, 278, 279, 282, 284, 291, 292, 293, 296, 305], "number": [0, 2, 6, 8, 14, 22, 24, 40, 48, 58, 61, 69, 75, 76, 77, 111, 112, 113, 115, 145, 165, 166, 167, 168, 169, 180, 188, 194, 233, 234, 238, 240, 244, 245, 267, 269, 271, 276, 278, 287, 291, 299, 300, 301, 303, 305], "valu": [0, 1, 6, 10, 18, 24, 25, 26, 33, 38, 44, 45, 58, 60, 61, 68, 69, 81, 82, 83, 84, 85, 86, 90, 92, 93, 96, 98, 116, 120, 121, 140, 165, 168, 192, 211, 225, 231, 234, 236, 237, 239, 240, 246, 266, 267, 269, 271, 274, 276, 278, 281, 288, 289, 291, 300, 301, 302], "met": [0, 287], "doubl": 0, "big": 0, "warn": [0, 2, 12, 243, 251, 269, 276, 281, 284, 286, 292, 305], "larger": [0, 287], "pad": 0, "filter": [0, 111, 112, 113, 269, 278], "so": [0, 24, 165, 250, 272, 274, 279, 287, 293, 299, 305], "characterscannot": 0, "neither": [0, 287], "perform": [0, 14, 70, 77, 271, 276, 287, 289, 291, 292, 293], "order": [0, 8, 9, 26, 29, 123, 128, 132, 137, 138, 165, 178, 179, 185, 191, 197, 198, 199, 232, 269, 271, 278, 283, 287, 289, 290, 291, 292, 296, 303], "given": [0, 2, 26, 37, 72, 76, 81, 82, 84, 85, 86, 91, 92, 117, 119, 127, 135, 140, 151, 158, 159, 166, 167, 168, 192, 200, 203, 210, 211, 218, 225, 248, 250, 252, 253, 269, 271, 274, 276, 278, 281, 282, 284, 286, 287, 292, 293, 299, 300], "critic": [0, 272], "case": [0, 2, 74, 87, 125, 126, 134, 165, 246, 269, 276, 284, 286, 287, 289, 291, 292, 298, 304], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 26, 29, 94, 95, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 120, 121, 123, 141, 245, 269, 278, 282, 286, 287, 289, 290, 296, 305], "need": [0, 2, 18, 38, 70, 87, 122, 269, 271, 273, 274, 275, 279, 282, 283, 287, 289, 290, 295, 296, 303, 305], "becaus": [0, 8, 269, 287], "later": [0, 283, 287], "comparison": [0, 292, 296], "It": [0, 18, 248, 272, 273, 274, 278, 279, 283, 284, 285, 287, 289, 290, 291, 294, 299, 303, 305], "possibl": [0, 2, 6, 26, 128, 131, 132, 138, 201, 236, 239, 269, 273, 274, 278, 284, 287, 289, 290, 291, 292, 293, 294, 296, 299, 303, 305], "done": [0, 1, 70, 71, 77, 81, 82, 84, 85, 86, 165, 272, 289, 292, 294, 300], "eq": [0, 8, 32, 291], "ne": 0, "text": [0, 18, 35, 289, 291, 296], "otherwis": [0, 6, 29, 33, 35, 38, 41, 70, 74, 95, 102, 124, 125, 126, 134, 136, 139, 142, 143, 144, 165, 178, 189, 190, 191, 192, 194, 197, 203, 272, 278, 287, 289, 291, 296], "appropri": [0, 272, 287], "letter": [0, 124], "alphanum": 0, "underscor": 0, "real": [0, 130, 140, 278, 279], "special": [0, 6, 207, 278, 279, 287], "digit": [0, 69, 269], "enclos": 0, "ok": [0, 279], "w": [0, 29, 70, 124, 142, 149, 150, 156, 169, 180, 190, 192, 196, 203, 214, 276, 287, 289, 291], "o": [0, 268, 270, 271, 275, 300], "With": [0, 303], "eqn": 0, "ge": [0, 291], "etc": [0, 3, 269, 291, 293, 301, 303], "maximum": [0, 14, 35, 69, 234, 271, 276], "have": [0, 6, 8, 18, 26, 29, 35, 38, 77, 137, 207, 237, 245, 250, 252, 269, 271, 273, 274, 276, 278, 279, 281, 283, 284, 286, 287, 289, 290, 292, 293, 294, 296, 303, 305], "12": [0, 1, 2, 59, 93, 96, 98, 99, 100, 113, 223, 267, 268, 276, 278, 281, 282, 284, 286, 287, 288, 290, 291, 292, 297, 299, 300, 301, 302], "must": [0, 24, 40, 74, 165, 180, 248, 268, 271, 287, 289], "decreas": [0, 279], "within": [0, 165, 272, 287, 303], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 26, 29, 189, 267, 272, 274, 276, 279, 287, 293, 305], "affect": [0, 110, 269, 287, 293], "even": [0, 24, 76, 80, 93, 98, 273, 287, 293], "still": [0, 287, 293, 305], "cannot": [0, 8, 58, 74, 247, 269, 278, 287, 303], "both": [0, 1, 2, 18, 40, 174, 245, 269, 272, 276, 278, 281, 284, 286, 287, 290, 292, 300, 303], "reenter": 0, "think": 0, "risk": [0, 287], "being": [0, 6, 26, 42, 58, 168, 169, 171, 190, 268, 269, 273, 281, 282, 287, 293, 296, 301], "truncat": 0, "encod": [0, 196, 214, 269, 278, 294], "here": [0, 2, 110, 278, 279, 280, 283, 284, 290, 291, 292, 296, 303, 304], "possibli": [0, 296], "partial": [0, 271, 275, 296], "list": [0, 2, 6, 8, 10, 13, 14, 17, 25, 26, 29, 32, 33, 38, 40, 74, 77, 79, 80, 88, 89, 91, 92, 103, 104, 110, 117, 119, 141, 146, 158, 159, 165, 166, 172, 180, 189, 202, 204, 205, 206, 208, 209, 210, 211, 219, 225, 230, 231, 232, 235, 237, 238, 240, 243, 244, 245, 246, 257, 267, 268, 269, 271, 272, 274, 276, 278, 281, 286, 287, 289, 291, 299, 300, 301, 303], "decid": [0, 2, 135, 284, 286, 287, 292, 300], "whether": [0, 24, 33, 35, 38, 74, 127, 135, 165, 180, 221, 223, 232, 246, 249, 261, 269, 271, 284, 287, 292, 303], "put": [0, 145, 165, 269, 279, 282], "up": [0, 272, 273, 276, 283, 290, 303, 305], "written": [0, 269, 287, 289, 291, 293, 303], "scientif": [0, 279], "14": [0, 2, 59, 82, 93, 98, 113, 223, 267, 268, 276, 284, 286, 287, 288, 290, 291, 299, 301, 302], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 99, 181, 267, 291], "describ": [0, 2, 26, 29, 58, 128, 131, 132, 137, 138, 267, 276, 278, 284, 286, 289], "output": [0, 8, 18, 245, 269, 271, 274, 287, 289, 291, 303], "alwai": [0, 167, 269, 278, 291, 292], "synonym": [0, 269], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 24, 25, 26, 30, 31, 32, 35, 36, 38, 39, 40, 45, 48, 58, 69, 71, 74, 76, 77, 79, 84, 85, 86, 91, 94, 99, 100, 104, 107, 110, 113, 115, 117, 119, 124, 125, 126, 127, 134, 141, 142, 145, 147, 155, 158, 159, 164, 165, 169, 171, 172, 173, 175, 180, 181, 186, 189, 190, 199, 202, 204, 205, 206, 209, 210, 220, 225, 230, 231, 232, 237, 242, 243, 246, 248, 249, 250, 252, 253, 255, 256, 257, 258, 266, 268, 269, 271, 273, 276, 278, 284, 286, 287, 290, 291, 292, 295, 300, 301, 303], "avail": [0, 1, 2, 6, 33, 41, 58, 122, 142, 178, 191, 194, 197, 203, 220, 225, 232, 267, 271, 276, 281, 282, 284, 286, 287, 289, 290, 291, 292, 293, 296, 300, 302, 303, 304, 305], "carri": [0, 287], "over": [0, 115, 145, 165, 192, 221, 222, 223, 267, 268, 269, 282, 286, 303], "onc": [0, 143, 276, 293], "covari": [0, 6, 10, 17, 26, 34, 35, 51, 52, 53, 54, 58, 59, 61, 62, 63, 64, 65, 74, 98, 110, 127, 141, 149, 154, 155, 166, 167, 168, 172, 203, 234, 269, 271, 276, 278, 279, 286, 296, 301, 303], "final": [0, 2, 34, 154, 229, 269, 276, 281, 282, 284, 286, 287, 291, 292, 293, 300, 301], "estim": [0, 1, 2, 3, 14, 15, 18, 24, 25, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 47, 57, 58, 59, 61, 68, 69, 72, 74, 83, 90, 91, 92, 147, 148, 149, 153, 154, 157, 162, 166, 167, 168, 169, 171, 176, 177, 178, 182, 184, 185, 189, 190, 191, 194, 196, 197, 198, 204, 205, 206, 210, 211, 212, 213, 214, 219, 220, 231, 232, 235, 246, 267, 268, 269, 271, 276, 277, 279, 281, 284, 285, 286, 288, 292, 295, 296, 299, 300, 303, 304], "oppos": 0, "ext": [0, 269, 303], "per": [0, 6, 14, 25, 70, 111, 112, 113, 115, 166, 167, 192, 245], "est": [0, 34, 37, 47, 154, 157, 289, 291], "first": [0, 2, 26, 35, 41, 76, 93, 98, 101, 125, 126, 128, 132, 134, 147, 169, 171, 176, 178, 179, 185, 190, 191, 194, 197, 269, 271, 276, 282, 284, 286, 287, 291, 293, 296, 303, 305], "call": [0, 245, 258, 269, 273, 274, 287, 293, 305], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 268, 269, 271, 276, 281, 284, 286, 292, 296, 297, 299, 300, 301, 303], "theta": [0, 1, 29, 33, 35, 36, 116, 120, 121, 149, 150, 153, 173, 189, 196, 214, 269, 284, 291, 292, 293, 296, 300], "sigma": [0, 1, 116, 120, 121, 149, 150, 153, 169, 171, 190, 267, 282, 284, 291, 292, 293], "omega": [0, 1, 22, 26, 59, 116, 120, 121, 149, 150, 153, 269, 271, 282, 284, 289, 291, 292, 293, 299, 300], "fix": [0, 1, 2, 24, 25, 33, 45, 50, 74, 90, 91, 92, 116, 120, 121, 174, 182, 183, 195, 202, 208, 210, 211, 231, 271, 284, 287, 289, 291, 296, 303], "offdiagon": 0, "could": [0, 18, 269, 278, 287, 291, 295, 296], "part": [0, 18, 26, 76, 267, 269, 271, 274, 275, 287, 289, 293, 296, 303], "NO": [0, 287], "probabl": 0, "same": [0, 2, 8, 10, 18, 26, 29, 40, 48, 69, 70, 90, 91, 92, 99, 137, 180, 182, 210, 211, 215, 232, 237, 248, 250, 252, 268, 269, 271, 272, 276, 278, 281, 282, 286, 287, 289, 291, 292, 303, 305], "type": [0, 2, 6, 8, 10, 18, 28, 29, 35, 50, 72, 117, 146, 151, 193, 225, 232, 236, 237, 239, 241, 266, 269, 271, 274, 276, 282, 283, 284, 286, 287, 289, 292, 296], "now": [0, 269, 274, 291, 293], "investig": 0, "follow": [0, 2, 35, 144, 202, 267, 269, 271, 272, 274, 276, 278, 279, 281, 283, 284, 286, 287, 289, 291, 292, 293, 295, 303, 305], "like": [0, 26, 278, 287, 293, 296, 303], "One": [0, 26, 145, 146, 255, 296, 305], "last": [0, 29, 177, 246], "left": [0, 4, 58, 289, 291, 295], "justifi": 0, "size": [0, 6, 13, 165, 269, 272, 296], "13": [0, 1, 2, 59, 93, 96, 98, 99, 113, 223, 267, 268, 276, 281, 284, 286, 287, 288, 290, 291, 292, 297, 299, 301, 302], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 253, 256, 266, 267, 268, 269, 270, 272, 273, 274, 276, 281, 282, 283, 285, 286, 287, 288, 295, 296, 299, 301, 302, 304, 305], "n": [0, 6, 17, 22, 26, 36, 43, 74, 77, 162, 167, 168, 173, 188, 194, 202, 205, 238, 267, 268, 269, 271, 282, 284, 289, 291], "flatten": [0, 269], "triangular": 0, "correl": [0, 51, 52, 53, 54, 62, 63, 64, 65, 68, 74, 213, 269, 299], "abov": [0, 33, 35, 38, 68, 267, 268, 276, 282, 287, 291, 305], "off": 0, "diagon": [0, 149, 269, 284, 290, 291, 292], "obj": 0, "right": [0, 4, 8, 287, 289, 291, 305], "also": [0, 2, 26, 80, 165, 269, 273, 274, 276, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 296, 300, 303, 305], "22": [0, 2, 59, 81, 82, 84, 85, 93, 98, 113, 115, 223, 267, 268, 276, 282, 286, 288, 290, 291, 302], "integ": [0, 6, 124, 269, 271, 303], "5": [0, 1, 2, 29, 33, 51, 53, 54, 58, 59, 63, 64, 70, 82, 83, 92, 93, 96, 98, 100, 113, 115, 124, 142, 143, 144, 149, 203, 206, 211, 223, 244, 245, 267, 268, 276, 278, 282, 284, 286, 287, 288, 289, 290, 291, 292, 297, 299, 301, 302], "expon": [0, 1, 33, 231, 271], "regular": [0, 10, 285], "take": [0, 2, 24, 26, 75, 269, 272, 278, 281, 284, 286, 287, 292, 296], "19": [0, 2, 59, 82, 93, 98, 113, 223, 267, 268, 284, 288, 290, 291, 299, 301, 302], "posit": [0, 26, 167, 168, 269, 271, 272, 279], "neg": [0, 303], "For": [0, 2, 8, 35, 38, 111, 112, 113, 144, 207, 231, 234, 236, 237, 239, 240, 241, 267, 268, 271, 273, 274, 276, 281, 282, 283, 287, 289, 292, 293, 296, 303, 305], "20": [0, 2, 59, 85, 93, 98, 113, 223, 267, 268, 276, 287, 288, 290, 291, 297, 299, 300, 301, 302], "In": [0, 74, 87, 272, 274, 276, 283, 284, 286, 287, 289, 290, 291, 296, 303, 305], "observ": [0, 6, 18, 41, 99, 111, 112, 113, 114, 115, 178, 191, 194, 197, 198, 244, 245, 267, 269, 282, 296, 299, 302], "byte": 0, "evid": [0, 102, 269], "toward": [0, 99, 269], "token": [0, 303], "whitespac": 0, "parenthes": [0, 303], "multipl": [0, 4, 26, 29, 125, 126, 134, 243, 269, 276, 279, 289, 291, 300, 301, 303], "open": [0, 272, 274, 285, 287, 294], "keyword": [0, 271], "kept": [0, 87, 269, 271, 284], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 24, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 269, 271, 273, 274, 276, 278, 279, 281, 284, 286, 287, 289, 292, 293, 294, 295, 296, 300, 305], "csv": [0, 2, 27, 153, 215, 247, 269, 271, 276, 278, 281, 284, 286, 291, 292, 300, 303], "wgt": [0, 2, 4, 6, 10, 29, 33, 35, 70, 79, 80, 93, 98, 110, 122, 124, 142, 143, 144, 149, 150, 155, 204, 205, 206, 209, 231, 278, 282, 289, 291, 293, 296, 299, 303], "23": [0, 2, 58, 59, 61, 75, 82, 93, 98, 113, 166, 167, 168, 223, 267, 268, 276, 284, 286, 288, 290, 291, 292, 301, 302], "titl": 0, "crash": [0, 269], "nmtran": [0, 6], "There": [0, 250, 281, 291], "72": 0, "includ": [0, 2, 3, 17, 22, 26, 44, 146, 246, 268, 269, 272, 276, 284, 285, 286, 287, 290, 291, 292, 299, 301, 303], "come": [0, 274, 287], "filenam": [0, 18, 248, 252, 253, 289], "repres": [0, 4, 6, 24, 25, 26, 271, 276, 278, 279, 282, 287, 289], "rel": [0, 14, 269, 282], "path": [0, 1, 2, 10, 18, 27, 48, 72, 97, 151, 152, 215, 216, 217, 218, 226, 227, 228, 230, 232, 247, 248, 249, 250, 252, 253, 254, 256, 261, 269, 271, 273, 276, 278, 281, 283, 284, 286, 289, 290, 291, 292, 300, 301, 303, 305], "work": [0, 269, 272, 274, 278, 281, 287, 289, 296], "directori": [0, 218, 230, 248, 249, 250, 269, 271, 273, 274, 289, 301], "when": [0, 14, 35, 70, 269, 272, 274, 278, 286, 287, 289, 293, 299, 301, 303], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 244, 245, 276, 278, 281, 284, 286, 287, 292, 300], "simpli": [0, 24, 274, 281, 293], "seen": [0, 1, 2, 276, 278, 281, 284, 286, 292, 300], "54": [0, 59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 292, 297, 299, 302], "doe": [0, 2, 48, 76, 97, 161, 203, 248, 249, 250, 253, 254, 269, 279, 281, 284, 286, 287, 292, 293, 299], "pk": [0, 2, 6, 39, 44, 72, 117, 149, 193, 203, 241, 269, 271, 276, 284, 291, 292, 293, 303], "pred": [0, 85, 149, 153, 269, 290, 291, 299, 302], "simpl": [0, 1, 149, 201, 246, 291, 293], "merg": [0, 269, 287], "placement": [0, 273], "place": [0, 2, 273, 287], "seem": 0, "restrict": [0, 250, 287], "automat": [0, 14, 33, 232, 269, 274, 276, 283, 287, 300, 303], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 70, 72, 73, 75, 76, 95, 96, 102, 158, 180, 189, 217, 218, 230, 244, 245, 248, 249, 250, 251, 252, 258, 261, 267, 268, 269, 271, 273, 274, 277, 278, 281, 282, 284, 288, 292, 296, 297, 299, 300, 301, 302, 303, 304], "continu": [0, 2, 6, 18, 35, 269, 272, 274, 276, 282, 287, 296, 303], "factor": [0, 296], "compil": [0, 287], "11138": 0, "445": [0, 284], "though": [0, 287], "outsid": [0, 269, 272, 287], "standard": [0, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 65, 214, 217, 267, 269, 279, 282, 287, 291, 293, 296, 299, 300, 302], "gfortran": 0, "8": [0, 2, 6, 51, 52, 53, 54, 59, 62, 63, 64, 65, 93, 98, 100, 113, 115, 223, 267, 268, 276, 278, 284, 286, 287, 288, 290, 291, 297, 299, 300, 301, 302, 305], "hh": 0, "j": [0, 203, 205, 268, 282], "nep": 0, "h": [0, 271], "second": [0, 147, 271, 293], "f": [0, 29, 70, 124, 142, 149, 150, 156, 169, 171, 180, 189, 190, 192, 203, 214, 267, 269, 271, 275, 287, 289, 291, 293], "respect": [0, 2, 269, 272, 276, 281, 282, 287, 291, 292, 293], "ep": [0, 29, 149, 269, 271, 291, 293], "implicit": [0, 269], "kind": [0, 6, 8, 117, 287], "dpsize": 0, "main": [0, 271, 296, 305], "function": [0, 3, 10, 14, 26, 33, 35, 36, 55, 56, 75, 80, 81, 82, 84, 85, 86, 90, 91, 92, 105, 114, 118, 128, 131, 132, 138, 169, 171, 173, 182, 190, 201, 207, 210, 211, 213, 218, 225, 236, 239, 255, 267, 269, 271, 273, 274, 278, 279, 284, 286, 287, 289, 290, 292, 293, 295, 296, 299, 300, 301, 303, 304, 305], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 26, 30, 31, 40, 58, 76, 83, 104, 116, 119, 120, 122, 125, 126, 134, 135, 150, 168, 169, 171, 190, 231, 232, 269, 271, 276, 278, 279, 284, 290, 296, 299, 304, 305], "doesn": [0, 29, 252, 269, 284], "t": [0, 6, 8, 29, 33, 36, 78, 106, 184, 185, 198, 206, 246, 252, 255, 257, 268, 269, 271, 282, 284, 291, 297, 299], "declar": [0, 2, 70, 143, 276, 303], "assign": [0, 6, 29, 70, 269, 271, 289], "stop": 0, "entri": [0, 251], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 24, 25, 26, 29, 55, 56, 70, 76, 101, 105, 110, 114, 118, 122, 125, 126, 134, 143, 150, 164, 169, 171, 189, 190, 232, 269, 276, 279, 291, 296], "separ": [0, 10, 74, 87, 144, 165, 202, 250, 269, 271, 274, 276, 278, 279, 282, 287, 296, 303], "thnn": 0, "nn": [0, 282], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 24, 26, 269, 287, 291], "ad": [0, 9, 18, 35, 38, 43, 87, 236, 237, 239, 269, 271, 276, 286, 287, 293, 300, 301], "x": [0, 1, 2, 25, 33, 70, 81, 82, 96, 166, 267, 276, 278, 282, 284, 286, 290, 291, 292, 294, 300, 301], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 26, 27, 29, 36, 104, 110, 151, 152, 153, 173, 269, 278, 291, 292], "tool": [1, 2, 3, 14, 18, 47, 50, 51, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 81, 82, 83, 84, 85, 86, 156, 166, 167, 168, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 254, 256, 261, 266, 267, 269, 270, 271, 274, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 295, 296, 300, 304, 305], "add": [1, 9, 14, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 70, 87, 106, 173, 189, 190, 269, 271, 276, 284, 287, 291, 292, 293, 294, 303], "allometr": [1, 2, 33, 231, 269, 271, 303], "scale": [1, 2, 6, 18, 33, 57, 60, 66, 231, 269, 271, 282, 294, 303], "pharmr": [1, 2, 3, 269, 274, 276, 279, 281, 283, 284, 285, 286, 292, 300, 304], "command": [1, 269, 274, 276, 281, 283, 284, 285, 286, 287, 291, 292, 300, 304], "line": [1, 70, 269, 276, 281, 283, 284, 285, 286, 287, 291, 292, 300, 304], "To": [1, 2, 271, 273, 274, 276, 281, 283, 284, 286, 287, 290, 291, 292, 294, 300, 303, 305], "initi": [1, 2, 15, 18, 24, 25, 33, 38, 40, 41, 43, 44, 45, 72, 74, 75, 83, 90, 91, 92, 106, 162, 169, 171, 178, 180, 181, 182, 184, 185, 189, 190, 191, 194, 197, 198, 204, 205, 206, 210, 211, 212, 213, 231, 232, 257, 269, 271, 276, 281, 282, 284, 286, 287, 289, 291, 292, 300], "python": [1, 2, 268, 269, 271, 276, 278, 279, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 300, 303, 304], "r": [1, 2, 27, 268, 269, 273, 276, 278, 279, 281, 283, 284, 285, 286, 289, 290, 291, 292, 293, 300, 303, 304], "read_model": [1, 153, 269, 276, 278, 281, 284, 286, 289, 291, 292, 300, 305], "read_modelfit_result": [1, 269, 276, 281, 284, 286, 289, 290, 292, 300], "run_allometri": [1, 269], "start_model": [1, 244, 276, 281, 284, 286, 292, 300, 303], "start_model_result": [1, 276, 281, 284, 286, 292, 300, 303], "re": [1, 2, 218, 227, 228, 229, 233, 234, 242, 249, 254, 256, 268, 276, 281, 284, 286, 290, 292, 300, 302, 303], "code": [1, 18, 20, 70, 109, 110, 122, 128, 131, 132, 138, 149, 153, 189, 190, 216, 269, 276, 281, 284, 285, 286, 287, 291, 292, 293, 295, 296, 300, 305], "redefin": [1, 276, 281, 284, 286, 292, 300], "accordingli": [1, 276, 281, 284, 286, 292, 293, 300], "descript": [1, 2, 6, 18, 30, 244, 245, 246, 266, 267, 269, 273, 276, 278, 281, 284, 286, 292, 296, 300, 301], "modelfitresult": [1, 2, 21, 219, 220, 221, 222, 223, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 269, 276, 281, 284, 286, 292, 300], "allometric_vari": [1, 2, 33, 231, 232, 271], "wt": [1, 29, 33, 231, 234, 276, 301], "reference_valu": [1, 2, 33, 231, 271], "refer": [1, 31, 33, 70, 77, 137, 229, 231, 232, 246, 269, 271, 276, 287, 291, 293, 304, 305], "70": [1, 2, 33, 93, 231, 291, 299], "appli": [1, 2, 18, 169, 171, 180, 189, 190, 204, 205, 206, 231, 269, 271, 272, 278, 282, 287, 291, 292, 299, 303], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 18, 25, 26, 27, 28, 29, 30, 33, 38, 42, 44, 67, 70, 74, 77, 79, 87, 91, 92, 94, 96, 98, 100, 103, 104, 107, 116, 117, 120, 121, 123, 124, 128, 131, 132, 135, 138, 141, 146, 148, 150, 158, 159, 166, 167, 180, 183, 189, 195, 202, 204, 205, 206, 208, 209, 210, 211, 230, 231, 235, 236, 237, 239, 246, 248, 252, 253, 262, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 279, 281, 282, 284, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 303, 305], "cl": [1, 2, 4, 8, 25, 29, 33, 35, 38, 40, 43, 58, 70, 76, 78, 88, 104, 117, 119, 124, 127, 135, 140, 142, 143, 144, 149, 150, 155, 158, 162, 170, 178, 179, 184, 185, 188, 191, 197, 201, 204, 205, 206, 231, 234, 276, 282, 284, 286, 289, 291, 293], "q": [1, 33, 43, 162, 231, 269, 291], "v": [1, 8, 25, 29, 33, 58, 70, 78, 89, 104, 117, 122, 124, 142, 143, 144, 149, 150, 158, 170, 178, 179, 184, 185, 191, 197, 198, 201, 231, 234, 274, 276, 282, 286, 289, 291, 293, 302, 303], "75": [1, 2, 33, 231, 276, 281], "lower_bound": [1, 2, 33, 231, 271], "lower": [1, 2, 6, 24, 25, 33, 35, 45, 68, 90, 91, 92, 116, 120, 121, 161, 182, 183, 189, 195, 208, 211, 231, 232, 271, 279, 284, 289, 291], "bound": [1, 24, 25, 33, 45, 69, 168, 183, 195, 204, 205, 206, 208, 213, 231, 269, 271, 289], "upper_bound": [1, 2, 33, 231, 271], "upper": [1, 24, 25, 33, 35, 45, 90, 91, 92, 116, 120, 121, 161, 182, 183, 195, 208, 211, 231, 269, 271, 289, 291], "should": [1, 6, 14, 24, 33, 35, 38, 40, 45, 165, 180, 231, 236, 237, 239, 269, 271, 272, 273, 274, 276, 279, 282, 284, 286, 287, 288, 292, 296, 300], "true": [1, 2, 6, 10, 15, 18, 25, 33, 34, 57, 67, 76, 79, 87, 90, 91, 92, 106, 110, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 154, 155, 167, 174, 176, 177, 180, 189, 190, 194, 209, 210, 211, 212, 216, 223, 231, 246, 247, 269, 276, 278, 281, 284, 286, 289, 291, 292, 293, 294, 300, 301, 302, 305], "No": [1, 6, 253, 254, 287, 292], "select": [1, 2, 165, 204, 206, 245, 267, 269, 271, 276, 284, 286, 289, 292, 294, 300, 301, 303], "see": [1, 2, 6, 8, 18, 35, 38, 223, 231, 232, 234, 236, 237, 239, 240, 241, 271, 272, 273, 274, 276, 278, 279, 281, 284, 286, 287, 288, 289, 291, 292, 293, 296, 300, 303], "about": [1, 2, 6, 272, 276, 278, 281, 283, 284, 286, 287, 291, 292, 300, 303], "actual": [1, 2, 24, 144, 276, 281, 284, 286, 287, 292, 300], "minim": [1, 2, 269, 276, 281, 284, 286, 292, 300], "statu": [1, 2, 269, 276, 279, 281, 284, 286, 287, 292, 300], "time": [1, 2, 6, 7, 9, 10, 25, 29, 33, 40, 41, 70, 72, 79, 80, 93, 99, 100, 107, 115, 124, 141, 142, 143, 144, 145, 149, 150, 153, 160, 178, 181, 191, 192, 194, 197, 207, 232, 240, 269, 271, 276, 278, 281, 282, 284, 286, 287, 289, 290, 292, 293, 296, 299, 300, 302, 303], "you": [1, 2, 273, 274, 276, 281, 283, 284, 285, 286, 287, 290, 291, 292, 293, 296, 300, 303, 304, 305], "look": [1, 2, 29, 48, 104, 135, 276, 281, 284, 286, 292, 293, 300, 303], "summary_model": [1, 2, 269, 276, 281, 284, 286, 292, 300, 303], "tabl": [1, 2, 57, 149, 169, 245, 267, 268, 269, 274, 276, 277, 281, 282, 284, 286, 288, 291, 292, 297, 299, 300, 301, 302, 303], "gener": [1, 2, 6, 58, 61, 71, 75, 145, 165, 166, 167, 168, 255, 257, 269, 271, 276, 278, 281, 282, 284, 285, 286, 291, 292, 295, 296, 300, 303], "summarize_modelfit_result": [1, 2, 269, 276, 281, 284, 286, 292, 300], "minimization_success": [1, 2, 246, 276, 281, 284, 286, 292, 300], "errors_found": [1, 2, 276, 281, 284, 286, 292, 300], "pheno": [1, 8, 10, 15, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 76, 78, 79, 80, 83, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 103, 104, 106, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 223, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 278, 283, 289, 290, 291, 293], "phenobarb": [1, 149, 246, 291], "scaled_model": [1, 2], "warnings_found": [1, 2, 276, 281, 284, 286, 292, 300], "ofv": [1, 2, 50, 147, 221, 225, 236, 237, 239, 244, 245, 246, 269, 276, 281, 284, 286, 292, 299, 300], "aic": [1, 49, 225, 236, 237, 239, 269, 284, 286, 292, 300], "bic": [1, 2, 50, 225, 236, 237, 239, 269, 271, 276, 284, 286, 292, 300, 303], "730": [1, 267, 282, 284], "894727": [1, 267, 282], "740": [1, 83, 99, 267, 278, 291], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 246, 276, 281, 284, 286, 292, 300], "estimation_runtim": [1, 2, 276, 281, 284, 286, 292, 300], "_estim": [1, 284, 292], "32": [1, 6, 59, 93, 98, 113, 223, 267, 268, 271, 276, 281, 288, 290, 291, 299, 302], "005818": [1, 282], "121955": 1, "44555": [1, 282], "111053": [1, 282], "201526": [1, 282], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 282], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 224, 244, 248, 249, 250, 251, 252, 253, 254, 256, 267, 269, 276, 281, 282, 284, 286, 292, 297, 300, 303], "predict": [1, 2, 14, 18, 84, 85, 105, 110, 118, 146, 221, 222, 223, 244, 269, 276, 277, 284, 286, 292, 299, 300], "influenti": [1, 2, 221, 222, 245, 269, 276, 284, 286, 292, 300], "individu": [1, 2, 6, 18, 39, 57, 58, 59, 61, 74, 84, 85, 104, 105, 111, 112, 113, 115, 118, 146, 147, 148, 158, 166, 167, 168, 212, 221, 222, 223, 244, 245, 269, 271, 276, 284, 286, 287, 291, 292, 296, 299, 300], "outlier": [1, 2, 222, 223, 245, 269, 276, 284, 286, 292, 300, 302], "summary_individuals_count": [1, 2, 276, 284, 286, 292, 300], "summarize_individuals_count_t": [1, 2, 269, 276, 284, 286, 292, 300], "parent_model": [1, 2, 18, 269, 276, 281, 284, 286, 292, 300], "inf_select": [1, 2, 245, 276, 284, 286, 292, 300], "inf_param": [1, 2, 245, 276, 284, 286, 292, 300], "out_ob": [1, 2, 245, 276, 284, 286, 292, 300], "out_ind": [1, 2, 245, 276, 284, 286, 292, 300], "inf_outli": [1, 2, 245, 276, 284, 286, 292, 300], "differ": [1, 2, 3, 18, 23, 26, 50, 244, 246, 267, 268, 269, 272, 273, 276, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 299, 300, 301, 303, 305], "statist": [1, 6, 58, 61, 205, 276, 278, 282, 284, 286, 289, 292, 300], "summary_individu": [1, 269, 276, 284, 286, 292, 300], "summarize_individu": [1, 245, 269, 276, 284, 286, 292, 300], "outlier_count": [1, 244, 276, 284, 286, 292, 300], "dofv_vs_par": [1, 244, 276, 284, 286, 292, 300], "id": [1, 5, 6, 10, 16, 59, 77, 79, 80, 93, 96, 98, 99, 100, 103, 113, 115, 149, 150, 153, 166, 223, 268, 269, 271, 276, 278, 282, 284, 286, 288, 290, 291, 292, 293, 300, 302], "nan": [1, 2, 96, 213, 269, 276, 281, 282, 284, 286, 291, 292, 299, 300, 301], "742852": 1, "000000": [1, 2, 45, 51, 52, 53, 62, 267, 276, 282, 284, 286, 290, 292, 300], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 25, 40, 59, 74, 82, 93, 96, 98, 99, 113, 161, 181, 183, 195, 199, 203, 205, 223, 267, 268, 276, 278, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 297, 299, 300, 301, 302, 303], "092658": 1, "55": [1, 2, 6, 59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 292, 297, 299, 302], "6": [1, 2, 6, 59, 83, 93, 98, 113, 115, 223, 267, 268, 276, 278, 282, 284, 286, 287, 288, 290, 291, 292, 299, 300, 301, 302], "535711": 1, "175743": 1, "56": [1, 59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 302], "764710": 1, "576072": 1, "57": [1, 2, 59, 93, 98, 103, 113, 166, 223, 267, 268, 276, 281, 282, 288, 290, 291, 302], "975589": 1, "539779": 1, "58": [1, 2, 59, 93, 98, 103, 113, 115, 166, 223, 267, 268, 282, 288, 290, 291, 301, 302], "194798": 1, "775689": 1, "59": [1, 59, 93, 96, 98, 100, 103, 111, 113, 115, 166, 223, 267, 268, 276, 278, 281, 282, 288, 290, 291, 292, 302], "11": [1, 2, 59, 81, 82, 84, 93, 96, 98, 99, 113, 223, 267, 268, 276, 282, 283, 284, 286, 287, 288, 290, 291, 292, 297, 299, 301, 302, 303, 305], "175577": 1, "462889": 1, "predicted_dofv": [1, 244, 245, 276, 284, 286, 292, 300], "predicted_residu": [1, 244, 245, 276, 284, 286, 292, 300], "118": [1, 2, 166, 269, 282], "fulli": [2, 303], "best": [2, 269, 276, 284, 286, 287, 292, 300, 303], "dataset": [2, 10, 11, 12, 18, 46, 58, 67, 72, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 95, 96, 99, 102, 103, 108, 111, 112, 113, 115, 122, 137, 145, 151, 161, 165, 172, 203, 207, 215, 232, 237, 268, 269, 271, 274, 282, 285, 286, 302, 304], "combin": [2, 4, 74, 125, 126, 134, 136, 169, 171, 190, 202, 203, 238, 269, 271, 281, 282, 284, 287, 291, 300, 303], "modelsearch": [2, 232, 239, 244, 269, 303], "ruvsearch": [2, 232, 240, 242, 269, 303], "covsearch": [2, 234, 269, 303], "run_amd": [2, 269], "dataset_path": [2, 72, 291], "modeltyp": [2, 72, 232, 271, 291], "pk_oral": [2, 271], "search_spac": [2, 232, 239, 269, 271, 292, 303], "let": [2, 14, 18, 77, 269, 276, 282, 291, 293, 303], "categor": [2, 6, 35, 269, 276, 278, 282, 303], "sex": [2, 272, 276, 296, 303], "ag": [2, 6, 234, 276, 301, 303], "occas": [2, 40, 232, 237, 269, 271, 286, 291], "visi": [2, 286], "c": [2, 9, 36, 173, 205, 270, 275, 281, 282, 286, 287, 291, 293, 300], "specifi": [2, 6, 29, 38, 80, 90, 92, 151, 161, 169, 171, 188, 190, 211, 217, 235, 269, 271, 273, 276, 281, 286, 287, 289, 290], "oral": [2, 72, 232, 241, 291, 303], "drug": [2, 42, 193, 296], "iiv": [2, 17, 22, 26, 31, 38, 40, 44, 50, 74, 104, 135, 158, 180, 202, 232, 236, 237, 239, 269, 271, 276, 286, 289, 291, 303], "we": [2, 272, 274, 276, 282, 283, 285, 287, 289, 291, 293, 296, 305], "our": [2, 272, 274, 275, 287, 296], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 60, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 87, 90, 91, 92, 96, 105, 114, 116, 118, 120, 121, 122, 124, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 261, 267, 269, 271, 273, 276, 278, 279, 281, 284, 286, 287, 291, 292, 293, 296, 300, 303, 304, 305], "build": [2, 232, 270, 271, 279, 291, 303], "pk_iv": [2, 271], "cl_init": [2, 72, 232, 271, 291], "popul": [2, 18, 29, 45, 83, 84, 85, 105, 118, 124, 213, 232, 269, 271, 301], "clearanc": [2, 33, 72, 88, 232, 269, 271, 276, 286, 293], "01": [2, 17, 26, 35, 72, 189, 213, 232, 234, 271, 276, 291, 299, 301], "vc_init": [2, 72, 232, 271, 291], "central": [2, 7, 8, 9, 29, 42, 43, 70, 72, 124, 142, 162, 170, 178, 179, 181, 184, 185, 188, 191, 194, 197, 198, 199, 201, 232, 271, 274, 279, 289, 291], "compart": [2, 6, 8, 9, 32, 36, 41, 42, 43, 94, 95, 107, 123, 160, 162, 181, 188, 194, 199, 232, 269, 271, 291, 292, 303], "volum": [2, 33, 43, 72, 89, 232, 269, 271, 276, 286, 287], "mat_init": [2, 72, 232, 271, 291], "absorpt": [2, 72, 117, 137, 170, 178, 191, 194, 197, 232, 239, 244, 269, 271, 284, 286, 292, 303], "mfl": [2, 232, 234, 244, 269, 271, 276, 292], "depend": [2, 6, 18, 29, 58, 74, 77, 125, 126, 134, 169, 171, 190, 269, 273, 278, 284, 293, 303, 305], "lloq": [2, 6, 161, 203, 232, 269, 271, 291], "quantif": [2, 6, 161, 203, 232, 271], "loq": [2, 161, 232, 271], "data": [2, 6, 18, 31, 81, 82, 83, 84, 85, 86, 98, 110, 149, 150, 153, 161, 169, 171, 174, 190, 203, 232, 245, 267, 269, 278, 282, 286, 287, 289, 291, 293, 296, 303], "bodi": [2, 6, 10, 272, 278, 287, 296], "weight": [2, 6, 10, 86, 125, 126, 134, 136, 196, 214, 276, 278, 296, 300], "correspond": [2, 14, 18, 187, 268, 287, 289, 302, 303], "datainfo": [2, 18, 80, 151, 172, 215, 269, 303, 304], "file": [2, 10, 18, 27, 48, 73, 97, 149, 151, 152, 153, 215, 216, 217, 226, 227, 247, 248, 249, 250, 252, 253, 254, 256, 269, 271, 274, 276, 281, 283, 284, 286, 287, 289, 290, 291, 292, 293, 295, 296, 300, 303, 304], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 251, 256, 269, 273, 276, 278, 287, 290, 291, 304], "model_typ": [2, 241], "elimin": [2, 117, 128, 131, 132, 138, 179, 184, 185, 198, 269, 271, 292, 303], "vc": [2, 43, 162, 276, 284, 286, 291], "mat": [2, 44, 268, 269, 270, 275, 276, 284, 286, 291, 293, 300], "proport": [2, 38, 125, 126, 134, 136, 165, 169, 171, 189, 190, 203, 269, 271, 291], "step": [2, 15, 18, 34, 36, 37, 47, 154, 157, 173, 176, 177, 234, 246, 269, 271, 274, 276, 281, 283, 284, 286, 287, 292, 296, 300, 305], "foce": [2, 14, 15, 34, 37, 154, 176, 177, 269, 271, 281, 289, 291], "interact": [2, 14, 15, 34, 37, 149, 154, 176, 177, 269, 272, 281, 287, 289, 291, 296, 303, 305], "specif": [2, 14, 18, 25, 47, 80, 165, 218, 269, 271, 276, 278, 287, 289, 292, 296, 303], "support": [2, 8, 14, 18, 29, 37, 38, 55, 56, 71, 72, 81, 82, 84, 85, 86, 105, 114, 118, 125, 126, 134, 170, 176, 177, 191, 193, 203, 234, 240, 258, 269, 271, 276, 278, 279, 281, 285, 287, 289, 290, 291, 292, 293, 295, 296, 298, 303], "nonmem": [2, 14, 18, 70, 71, 80, 111, 112, 113, 187, 238, 269, 270, 274, 278, 283, 285, 289, 290, 291, 296, 303], "cmt": [2, 95, 269, 292], "rate": [2, 6, 8, 9, 16, 43, 137, 170, 178, 191, 194, 197, 269, 271, 303], "via": [2, 269, 271, 273, 274, 283, 285, 289, 291, 293, 303, 305], "exclud": [2, 110, 244, 284, 286, 287, 292], "pleas": [2, 274, 283, 287, 289, 291, 303, 305], "featur": [2, 274, 276, 281, 284, 285, 286, 287, 300, 304], "languag": [2, 109, 149, 272, 276, 279, 287, 292], "how": [2, 3, 167, 232, 236, 239, 269, 271, 272, 274, 276, 278, 283, 284, 286, 287, 289, 291, 292, 293, 301, 304], "defin": [2, 8, 61, 110, 122, 137, 144, 150, 269, 276, 279, 287, 289, 302, 303], "zo": [2, 239, 244, 269, 271, 292, 303], "seq": [2, 271, 292, 303], "fo": [2, 14, 37, 176, 177, 269, 271, 281, 292, 296, 303], "mm": [2, 269, 271, 292, 303], "mix": [2, 40, 50, 132, 185, 225, 269, 279, 283, 286, 289, 292, 296, 303], "lagtim": [2, 170, 191, 292, 303], "transit": [2, 8, 188, 194, 269, 271, 292, 303], "peripher": [2, 8, 43, 162, 188, 239, 244, 269, 271, 291, 292, 303], "cat": [2, 35, 276, 303], "iv": [2, 72, 232, 271, 303], "note": [2, 4, 6, 24, 70, 71, 96, 111, 112, 113, 246, 247, 248, 252, 253, 267, 278, 284, 286, 290, 291, 293, 301], "overriden": 2, "ignor": [2, 111, 112, 113, 149, 269, 271, 291, 293], "soon": 2, "explicitli": [2, 271, 286, 287], "stai": [2, 26], "vice": 2, "versa": 2, "instanc": [2, 127, 155, 276, 303], "effect": [2, 35, 36, 38, 50, 127, 135, 155, 158, 173, 189, 225, 234, 269, 271, 279, 283, 287, 289, 291, 296, 301, 303], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 24, 25, 26, 27, 29, 30, 31, 33, 37, 38, 40, 45, 48, 50, 58, 61, 72, 74, 75, 77, 81, 82, 83, 84, 85, 86, 97, 101, 125, 126, 134, 140, 146, 151, 158, 159, 161, 165, 166, 167, 168, 169, 171, 180, 187, 189, 190, 202, 203, 204, 205, 206, 215, 219, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 248, 249, 252, 253, 257, 261, 269, 271, 273, 278, 282, 284, 286, 289, 291, 292, 303], "null": [2, 278, 284, 286, 292, 303, 305], "yield": [2, 145, 165], "workflow": [2, 3, 228, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 269, 283, 285, 287, 296, 303], "want": [2, 272, 274, 276, 284, 285, 286, 287, 291, 292, 293, 295], "desir": [2, 253, 254], "subset": [2, 69, 166, 289], "algorithm": [2, 234, 235, 236, 239, 244, 269, 271, 296, 303], "six": 2, "below": [2, 6, 203, 273, 274, 281, 284, 286, 287, 292, 300], "detail": [2, 231, 234, 236, 237, 239, 240, 241, 281, 287, 289, 292, 299, 300, 303, 304], "regard": [2, 287, 292], "subhead": 2, "distribut": [2, 17, 22, 26, 40, 43, 58, 61, 74, 117, 144, 148, 162, 166, 167, 168, 202, 206, 237, 258, 267, 269, 271, 282, 287, 292, 299, 303], "term": [2, 169, 269, 284, 287], "keep": [2, 14, 24, 165, 248, 269, 272, 279, 284, 287], "well": [2, 58, 276, 281, 284, 286, 287, 291, 292, 299, 300, 303, 304], "iov": [2, 26, 40, 104, 135, 159, 237, 269, 271, 291, 299, 303], "explain": [2, 276, 287, 296, 303], "ruv": [2, 180, 271], "power": [2, 35, 189, 271, 287, 291, 296, 297, 299, 300], "vari": [2, 141, 192, 240, 269, 271, 300], "identifi": [2, 6, 31, 276, 278, 284, 287, 299, 303], "option": [2, 6, 14, 18, 26, 35, 38, 40, 47, 72, 74, 81, 82, 84, 85, 86, 165, 203, 225, 248, 252, 253, 262, 267, 269, 271, 276, 284, 286, 287, 289, 291, 292, 304, 305], "reduced_stepwis": [2, 244, 269, 292, 303], "iiv_strategi": [2, 236, 239, 269, 271, 284, 292, 303], "absorption_delai": [2, 239, 269, 292, 303], "rank_typ": [2, 225, 236, 237, 239, 271, 284, 286, 292, 303], "cutoff": [2, 192, 221, 222, 223, 225, 236, 237, 239, 269, 271, 284, 286, 292, 303], "brute_forc": [2, 236, 269, 284], "fullblock": [2, 236, 239, 269, 284, 292], "tri": [2, 271, 292], "list_of_paramet": [2, 38, 40, 237, 271, 286], "random": [2, 3, 13, 17, 18, 22, 26, 40, 50, 58, 61, 75, 77, 119, 122, 135, 166, 167, 168, 269, 271, 279, 282, 286, 291, 299, 305], "group": [2, 25, 31, 145, 146, 165, 240, 271, 285, 300], "p_valu": [2, 240, 271, 300], "05": [2, 43, 51, 52, 53, 54, 62, 63, 64, 65, 162, 234, 240, 267, 271, 276, 290, 291, 299, 300, 301], "skip": [2, 240, 271, 276, 300], "p_forward": [2, 234, 271, 276], "p_backward": [2, 234, 271, 276], "max_step": [2, 234, 271, 276], "scm": [2, 234, 269, 276, 296, 298], "forward": [2, 234, 269, 271, 276, 301], "backward": [2, 234, 246, 269, 271, 276, 301], "variou": [2, 70, 244, 245, 269, 271, 272, 274, 276, 279, 281, 284, 285, 286, 292, 296, 300], "access": [2, 276, 278, 281, 284, 286, 287, 289, 291, 292, 293, 300, 303, 305], "json": [2, 10, 27, 227, 229, 247, 269, 271, 276, 278, 281, 284, 286, 292, 300, 303], "format": [2, 18, 71, 269, 271, 273, 276, 279, 281, 283, 284, 285, 286, 287, 289, 291, 292, 295, 300], "summary_tool": [2, 269, 276, 281, 284, 286, 292, 300], "candid": [2, 239, 269, 271, 276, 281, 300, 303], "compar": [2, 225, 267, 269, 276, 281, 296, 300, 303], "rank": [2, 225, 236, 237, 239, 269, 271, 276, 300], "selected_model": 2, "901": 2, "722667": 2, "iivsearch_run9": 2, "2272": 2, "503332": 2, "best_ruvsearch_2": [2, 300], "time_varying2": [2, 300], "iiv_on_ruv": [2, 269, 297, 299, 300], "2431": 2, "413432": 2, "iovsearch_run2": [2, 286], "2579": 2, "021315": 2, "2590": 2, "360161": 2, "covsearch_run6": [2, 276], "2593": 2, "888704": 2, "dofv": [2, 221, 222, 244, 267, 268, 269, 276, 297, 299, 300], "n_param": [2, 276, 286, 300], "d_param": [2, 276, 286, 300], "1370": 2, "780665": 2, "158": 2, "910100": 2, "147": [2, 6], "607883": 2, "338847": 2, "528542": 2, "modelsearch_run1": [2, 269], "base_model": [2, 225], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "best_ruvsearch_1": [2, 300], "iovsearch_run1": [2, 286], "iovsearch_run3": [2, 286], "iovsearch_run4": [2, 286], "iovsearch_run5": [2, 286], "iovsearch_run6": [2, 286], "iovsearch_run7": [2, 286], "iovsearch_run8": [2, 286], "iovsearch_run9": 2, "iovsearch_run10": 2, "covsearch_run1": [2, 276], "exp": [2, 29, 35, 38, 149, 204, 205, 206, 234, 276, 291, 293], "covsearch_run2": [2, 276], "covsearch_run3": [2, 276], "covsearch_run4": [2, 276], "covsearch_run5": [2, 276], "fals": [2, 6, 13, 14, 17, 18, 22, 24, 25, 27, 31, 34, 35, 37, 45, 57, 67, 69, 76, 79, 87, 90, 91, 92, 106, 110, 116, 120, 121, 124, 125, 126, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 154, 155, 165, 167, 174, 182, 183, 189, 194, 195, 208, 210, 211, 212, 213, 215, 223, 232, 246, 247, 249, 261, 268, 276, 278, 281, 289, 291, 293, 294, 301, 302], "19029": 2, "146679": 2, "2091": 2, "335789": 2, "2278": 2, "645238": 2, "1623": 2, "449423": 2, "2187": 2, "714827": 2, "2155": 2, "309747": 2, "1562": 2, "182445": 2, "1544": 2, "578087": 2, "1927": 2, "724795": 2, "1419": 2, "684985": 2, "2260": 2, "091630": 2, "2256": 2, "222388": 2, "2253": 2, "280037": 2, "2421": 2, "414958": 2, "018856": 2, "816993": 2, "2555": 2, "387421": 2, "817090": 2, "387607": 2, "413326": 2, "2524": 2, "580897": 2, "2556": 2, "106887": 2, "2502": 2, "502532": 2, "2591": 2, "473342": 2, "816184": 2, "112946": 2, "565747": 2, "739920": 2, "63": [2, 93, 115, 290, 291, 297, 299], "30": [2, 59, 93, 98, 113, 223, 267, 268, 276, 281, 284, 286, 287, 288, 290, 291, 292, 297, 299, 302], "15": [2, 59, 82, 93, 98, 113, 223, 267, 268, 276, 284, 286, 287, 288, 290, 291, 301, 302], "06": [2, 51, 53, 54, 63, 64, 267, 276, 284, 286, 290, 299, 301, 303], "21": [2, 59, 81, 84, 93, 98, 113, 223, 267, 268, 276, 281, 282, 288, 290, 291, 297, 299, 302], "82": 2, "77": [2, 276], "27": [2, 59, 93, 98, 113, 115, 223, 267, 268, 276, 284, 286, 288, 290, 291, 292, 300, 302], "80": [2, 206, 276, 290, 297, 299, 300], "02": [2, 276, 299, 301, 303], "37": [2, 59, 93, 98, 100, 113, 223, 267, 268, 276, 278, 288, 290, 291, 302], "45": [2, 59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 302], "18": [2, 6, 59, 82, 93, 98, 113, 223, 267, 268, 276, 284, 286, 288, 290, 291, 297, 299, 302], "85": 2, "73": [2, 115, 290, 291, 300, 303], "31": [2, 59, 81, 84, 93, 98, 113, 115, 223, 267, 268, 276, 288, 290, 291, 297, 299, 302, 303], "17": [2, 59, 81, 82, 84, 85, 93, 96, 98, 113, 115, 223, 267, 268, 276, 278, 284, 286, 287, 288, 290, 291, 292, 297, 299, 302], "60": [2, 93, 276, 287, 291, 297], "28": [2, 59, 81, 84, 85, 93, 98, 113, 203, 223, 267, 268, 276, 284, 287, 288, 290, 291, 299, 302], "84": [2, 221, 222, 245, 284, 286, 292, 301], "39": [2, 59, 93, 98, 113, 223, 267, 268, 276, 286, 288, 290, 291, 299, 300, 301, 302], "98": [2, 267, 276, 282, 284], "38": [2, 59, 81, 84, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 302], "96": [2, 100, 206, 267, 276, 291, 292], "52": [2, 59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 292, 301, 302], "33": [2, 59, 93, 98, 113, 115, 223, 267, 268, 276, 288, 290, 291, 292, 301, 302], "40": [2, 59, 93, 96, 98, 113, 115, 161, 223, 267, 268, 278, 281, 288, 290, 291, 301, 302], "44": [2, 59, 93, 98, 113, 223, 267, 268, 288, 290, 291, 302], "26": [2, 59, 93, 98, 113, 223, 267, 268, 276, 286, 288, 290, 291, 299, 301, 302], "66": [2, 276, 297], "36": [2, 59, 61, 93, 98, 113, 223, 267, 268, 276, 284, 286, 288, 290, 291, 292, 299, 302], "25": [2, 59, 81, 84, 85, 93, 98, 100, 113, 223, 267, 268, 276, 278, 284, 288, 290, 291, 292, 297, 299, 300, 302], "65": [2, 6, 276], "29": [2, 59, 81, 84, 85, 93, 98, 113, 203, 205, 223, 267, 268, 270, 276, 284, 287, 288, 290, 291, 299, 302], "64": [2, 6], "78": 2, "88": 2, "51": [2, 59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 302, 303], "47": [2, 59, 93, 98, 113, 115, 223, 267, 268, 288, 290, 291, 292, 297, 299, 302], "34": [2, 59, 85, 93, 98, 113, 115, 223, 267, 268, 276, 288, 290, 291, 297, 299, 302], "pop_cl_estim": [2, 276, 281, 286, 300], "pop_vc_estim": [2, 276, 281, 286, 300], "0100": 2, "100": [2, 25, 35, 37, 47, 166, 176, 206, 267, 269, 271, 276, 290, 291, 294, 301], "3711": 2, "125": 2, "228": 2, "5771": 2, "115": 2, "287": [2, 297], "8759": 2, "119": 2, "581": 2, "2667": 2, "105": [2, 276, 281, 300], "292": 2, "5775": 2, "127": [2, 6, 284], "060": 2, "1654": 2, "121": [2, 276, 284, 286, 292, 300], "364": 2, "9392": 2, "138": 2, "630": 2, "9500": 2, "923": 2, "9735": 2, "137": 2, "648": [2, 6, 267], "5006": 2, "116": 2, "034": 2, "6326": 2, "112": [2, 115, 276, 284, 286, 290, 291, 292, 297, 299, 300], "423": 2, "5612": 2, "416": 2, "5406": 2, "706": 2, "0598": 2, "151": [2, 81, 82, 84, 85, 86, 297], "9031": 2, "117": 2, "208": 2, "0793": 2, "438": 2, "439": [2, 284], "9253": 2, "887": [2, 269, 284, 286], "1390": 2, "114": 2, "800": [2, 267, 290], "9254": 2, "888": 2, "1388": 2, "9033": 2, "207": [2, 290], "9409": 2, "401": 2, "0197": 2, "635": 2, "1751": 2, "113": [2, 276, 284, 286, 292, 300], "681": 2, "2749": 2, "103": [2, 276, 284], "868": [2, 282, 284], "2141": 2, "935": 2, "5390": 2, "943": 2, "2723": 2, "795": 2, "2760": [2, 276], "837": 2, "2727": 2, "104": [2, 276, 281, 284, 286, 292], "085": 2, "2814": 2, "101": [2, 276], "532": 2, "pop_mat_estim": [2, 276, 281, 286, 300], "010000": 2, "000100": 2, "459155": 2, "260127": 2, "563136": 2, "355314": 2, "386862": 2, "284833": 2, "224547": 2, "206026": 2, "463798": 2, "479941": 2, "486550": 2, "483385": 2, "495219": 2, "493621": 2, "463074": 2, "463102": 2, "495548": 2, "474613": 2, "495482": 2, "474620": 2, "493613": 2, "460720": 2, "468861": 2, "491231": 2, "461770": 2, "461787": 2, "462003": 2, "466555": 2, "427683": 2, "460977": 2, "460855": 2, "omega_iov_1_estim": [2, 286], "omega_iov_2_estim": [2, 286], "000010": [2, 282], "027698": 2, "000001": [2, 51, 53, 54, 58, 61, 63, 64, 286, 290, 292], "017913": 2, "109449": 2, "050657": 2, "110465": 2, "026922": 2, "026926": 2, "026951": 2, "026901": 2, "026857": 2, "026982": 2, "026914": 2, "omega_iov_2_3_estim": 2, "018497": 2, "018498": 2, "063509": 2, "046262": 2, "052580": 2, "017330": 2, "017318": 2, "017368": 2, "017319": 2, "017210": 2, "017372": 2, "017494": 2, "omega_iov_3_estim": [2, 286], "pop_clage_estim": [2, 276], "012352": 2, "012353": 2, "003156": 2, "003153": 2, "036852": 2, "043941": 2, "046134": 2, "011155": 2, "011139": 2, "004026": 2, "011192": 2, "011151": 2, "011028": 2, "011185": 2, "011372": 2, "pop_clsex_estim": [2, 276], "pop_matage_estim": [2, 276], "05079": 2, "016829": 2, "pop_matsex_estim": [2, 276], "pop_vcage_estim": [2, 276], "485722": 2, "002138": 2, "pop_vcsex_estim": [2, 276], "143849": 2, "dbic": [2, 269, 284, 286, 292], "059033": 2, "110": [2, 276, 284, 286, 292, 300], "464112": 2, "329": 2, "468146": 2, "642": [2, 297], "324437": 2, "695": [2, 269], "010496": 2, "712": 2, "614854": 2, "833": 2, "217496": 2, "439014": 2, "972689": 2, "493822": 2, "841931": 2, "134": 2, "736504": 2, "130": [2, 269], "443586": 2, "120": [2, 100, 278, 290, 291], "402996": 2, "683715": 2, "393070": 2, "71": [2, 276, 300], "089100": 2, "886801": 2, "290565": 2, "177358": 2, "205585": 2, "113181": 2, "752785": 2, "summary_error": [2, 276, 281, 284, 286, 292], "summarize_error": [2, 269, 276, 281, 284, 286, 292], "categori": [2, 6, 18, 35, 40, 150, 243, 271, 276, 281, 284, 286, 292, 303], "error_no": [2, 276, 281, 284, 286, 292], "2023": [2, 287], "03": [2, 276, 297, 299, 301], "402": 2, "messag": [2, 251, 269, 271, 276, 281, 284, 286, 292], "NEAR": [2, 286, 292], "ITS": [2, 14, 37, 176, 177, 269, 271, 286, 292], "boundari": [2, 269, 286, 292], "page": [3, 268, 270, 274, 281, 292, 293], "public": [3, 279], "modul": [3, 8, 269, 273, 278, 289, 291, 295, 305], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 278, 283, 287, 289, 291, 303], "relat": [3, 248, 252, 253, 269, 272, 301], "statement": [3, 4, 8, 18, 23, 33, 35, 36, 38, 39, 40, 43, 44, 70, 124, 142, 143, 144, 156, 158, 162, 163, 169, 170, 171, 178, 179, 180, 184, 185, 188, 189, 190, 191, 192, 194, 197, 198, 201, 203, 204, 205, 206, 214, 269, 271, 276, 287, 291, 296], "transform": [3, 18, 148, 169, 171, 174, 190, 203, 204, 205, 206, 269, 271, 283, 293, 299, 304], "manipul": [3, 25, 278, 285, 291, 293, 304], "built": [3, 142, 220, 271, 274, 285], "run": [3, 74, 146, 148, 218, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 252, 256, 267, 268, 269, 277, 283, 285, 287, 288, 290, 295, 296, 299, 301, 302, 305], "packag": [3, 271, 279, 283, 285, 287, 294, 296, 305], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 26, 29, 38, 55, 56, 58, 83, 94, 105, 107, 114, 118, 122, 140, 169, 171, 181, 189, 190, 199, 200, 269, 271, 272, 287, 289, 296, 302], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 272, 274, 285, 287, 289], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 225, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 276, 282, 284, 286, 287, 288, 289, 291, 292, 293, 294, 299, 300, 301], "represent": [4, 257, 278, 283, 293], "togeth": [4, 26, 170, 191, 274, 279, 282, 288, 300, 305], "sympi": [4, 6, 8, 17, 22, 26, 29, 33, 58, 83, 101, 114, 122, 123, 125, 126, 134, 140, 169, 171, 181, 190, 199, 279, 289, 296], "str": [4, 6, 7, 8, 10, 17, 18, 22, 24, 26, 27, 29, 31, 33, 35, 36, 37, 38, 39, 40, 45, 50, 58, 71, 72, 76, 77, 79, 83, 91, 97, 101, 104, 109, 117, 119, 122, 125, 126, 127, 134, 135, 140, 142, 145, 147, 148, 151, 152, 153, 155, 158, 159, 165, 169, 171, 173, 175, 176, 180, 181, 186, 187, 189, 190, 192, 193, 199, 202, 203, 204, 205, 206, 209, 210, 215, 216, 218, 219, 220, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 266, 269], "expr": [4, 9, 26, 29, 33, 36, 114, 140, 173, 181, 199, 200], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 37, 149, 153, 176, 177, 203, 232, 235, 248, 249, 250, 251, 252, 253, 254, 256, 268, 269, 271, 276, 279, 287, 289, 291, 296, 303, 305], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 26, 29, 272, 287, 296], "hand": [4, 8, 58], "side": [4, 8, 58, 174], "pop_cl": [4, 291], "eta_cl": [4, 38, 40, 291, 293], "rhs_symbol": [4, 8, 28], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 249, 251], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 249, 251], "replac": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 30, 31, 48, 165, 175, 201, 269, 271, 278, 279, 291, 293], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 37, 176, 218, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 253, 254, 269], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29, 289], "substitut": [4, 5, 7, 8, 16, 17, 22, 26, 28, 29, 287, 291], "dict": [4, 5, 6, 10, 16, 17, 22, 25, 26, 29, 47, 60, 81, 82, 84, 85, 86, 90, 92, 94, 106, 107, 148, 164, 182, 183, 195, 211, 248, 249, 252, 253, 254, 256, 262, 278, 289], "old": [4, 29, 164, 269, 299], "new": [4, 6, 9, 10, 14, 17, 22, 24, 25, 26, 29, 30, 38, 40, 44, 45, 71, 75, 76, 87, 90, 91, 92, 164, 165, 169, 171, 180, 182, 186, 189, 190, 210, 211, 213, 258, 271, 272, 274, 278, 287, 291, 292, 295, 299, 300, 303], "pair": [4, 5, 8, 16, 17, 22, 26, 29, 35, 68, 244], "return": [4, 6, 8, 9, 10, 15, 18, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 258, 261, 262, 269, 287, 291], "updat": [4, 9, 10, 18, 25, 29, 181, 199, 212, 213, 215, 269, 271, 274, 285, 287, 291, 292, 293, 296, 300, 304, 305], "b": [4, 287, 292], "to_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 249, 251], "amount": [5, 6, 7, 8, 16, 36, 106, 269, 278, 289], "admid": [5, 6, 7, 8, 16, 29, 43, 70, 124, 142, 162, 170, 178, 179, 184, 185, 188, 191, 194, 197, 198, 201, 289, 291], "dose": [5, 6, 7, 8, 9, 16, 41, 87, 94, 99, 100, 106, 110, 137, 160, 192, 269, 278], "int": [5, 8, 16, 29, 33, 37, 42, 47, 58, 61, 69, 75, 99, 101, 111, 112, 125, 126, 134, 157, 165, 166, 167, 168, 169, 171, 176, 177, 188, 190, 194, 233, 234, 238, 240, 243], "administr": [5, 6, 16, 232, 241], "amt": [5, 7, 8, 10, 16, 29, 33, 43, 70, 79, 80, 93, 100, 106, 124, 142, 143, 144, 149, 150, 162, 170, 178, 179, 184, 185, 188, 191, 194, 197, 198, 201, 278, 289, 291, 293], "dictionari": [5, 10, 14, 16, 17, 22, 25, 26, 27, 30, 81, 82, 84, 85, 86, 94, 107, 165, 182, 183, 195, 248, 249, 252, 253, 254, 256, 262, 289], "unknown": [6, 140, 278], "unit": [6, 18, 122], "ratio": [6, 234, 240, 269, 271, 278, 300], "datatyp": [6, 18, 151], "float64": [6, 10, 57, 64, 65, 68, 83, 84, 85, 86, 100, 115, 220, 278, 289, 290, 291], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 269, 291], "colum": 6, "measur": [6, 272, 278, 287], "bool": [6, 18, 24, 27, 31, 33, 35, 45, 57, 67, 69, 76, 79, 87, 106, 110, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 165, 167, 180, 189, 190, 194, 212, 213, 215, 216, 231, 232, 246, 247, 249, 261], "discret": [6, 278, 286], "union": [6, 101, 125, 126, 134, 148, 169, 171, 181, 190, 199], "tupl": [6, 8, 26, 145, 165, 262], "label": [6, 269], "bar": [6, 282], "panda": [6, 10, 269, 278, 279, 296], "dtype": [6, 10, 57, 60, 64, 65, 68, 69, 83, 84, 85, 86, 99, 100, 113, 115, 220, 278, 290, 291], "nomin": [6, 278], "ordin": [6, 278], "rang": [6, 27, 77, 303], "na": 6, "int8": 6, "sign": [6, 205, 287], "bit": 6, "128": 6, "int16": 6, "16": [6, 59, 82, 93, 98, 113, 190, 206, 223, 267, 268, 276, 284, 286, 287, 288, 290, 291, 297, 299, 300, 301, 302], "768": 6, "767": 6, "int32": [6, 10, 278], "483": 6, "647": [6, 267, 284], "int64": [6, 113, 291], "223": [6, 277], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 297], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 83, 99, 278, 290, 291], "073": 6, "709": 6, "551": 6, "615": [6, 297], "float16": 6, "binari": [6, 287], "float": [6, 24, 33, 38, 44, 45, 49, 50, 68, 69, 72, 148, 161, 168, 189, 192, 203, 221, 222, 223, 225, 231, 232, 234, 236, 237, 239, 240, 269], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 80, 207, 269, 271, 289], "tran": [6, 80, 207, 269, 271, 289], "date": [6, 77, 80, 207, 269, 271, 287, 305], "common": [6, 35, 61, 262, 287, 304], "birth": 6, "human": [6, 27, 296], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 278, 296], "concentr": [6, 96, 278, 296], "substanc": 6, "blood": 6, "subject": [6, 14, 93, 103, 245, 278, 287], "uniqu": [6, 31, 48, 76, 165, 248, 258, 269, 271, 291, 303], "pd": [6, 15, 36, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 74, 77, 81, 82, 83, 84, 85, 86, 93, 95, 96, 98, 99, 100, 102, 108, 113, 115, 145, 146, 147, 148, 151, 165, 166, 167, 168, 173, 212, 213, 221, 222, 223, 225, 243, 244, 245, 246, 251, 269, 278], "interv": [6, 278, 279], "ration": 6, "max": [6, 35, 184, 185, 267, 291], "datafram": [6, 15, 18, 25, 27, 51, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 74, 77, 81, 82, 84, 85, 86, 93, 96, 98, 145, 146, 148, 151, 165, 166, 167, 168, 212, 221, 222, 223, 225, 243, 244, 245, 246, 251, 269, 278, 296], "idv": [6, 10, 192, 278, 299], "independ": [6, 8, 278, 287, 289, 291, 294, 299, 303], "dv": [6, 10, 29, 70, 79, 80, 93, 101, 115, 124, 125, 126, 134, 142, 146, 149, 150, 153, 169, 171, 184, 185, 190, 203, 269, 278, 289, 291, 293, 302], "dvid": [6, 18, 42, 101, 125, 126, 134, 169, 171, 175, 190, 289, 297, 299, 300], "infus": [6, 137, 191, 197, 269, 291], "addit": [6, 35, 38, 47, 76, 87, 125, 126, 134, 136, 169, 171, 190, 203, 269, 271, 276, 278, 281, 287, 299, 300, 303], "interdos": 6, "ss": 6, "steadi": [6, 269], "state": [6, 25, 35, 269, 287, 301], "event": [6, 102, 207, 269, 272, 287], "mdv": [6, 108, 269], "miss": [6, 93, 98, 269], "yet": [6, 303], "exactli": 6, "blq": [6, 203, 240, 269], "unkown": 6, "hasn": 6, "custom": [6, 35, 38, 40, 180, 271, 287, 296], "physic": [6, 122, 272, 278, 287], "recogn": [6, 187, 272, 287, 293], "without": [6, 9, 55, 56, 81, 82, 84, 85, 86, 105, 114, 118, 165, 250, 267, 269, 271, 274, 279, 287, 289], "static": [6, 10, 18], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 26, 27, 29, 32, 71, 124, 144, 194, 269, 271, 303], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 24, 26, 67, 68, 69, 101, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 269, 289, 291, 293, 303, 305], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 269, 271, 296], "properti": [6, 14, 17, 22, 24, 25, 30, 287, 289], "lag_tim": [7, 9, 269], "bioavail": [7, 9, 94, 269], "compartment": [7, 8, 32, 269, 271, 289], "system": [7, 8, 9, 14, 23, 29, 32, 55, 56, 58, 78, 81, 82, 84, 85, 86, 105, 106, 114, 118, 129, 130, 133, 137, 181, 199, 201, 252, 269, 271, 273, 274, 285, 287, 289, 293], "lag": [7, 9, 41, 107, 160, 269], "enter": [7, 287], "fraction": [7, 168, 267, 282], "bolu": [7, 8, 29, 43, 70, 124, 142, 162, 170, 178, 179, 184, 185, 188, 194, 198, 201, 269, 271, 289, 291], "comp": [7, 8, 269], "a_centr": [7, 8, 29, 36, 70, 78, 106, 124, 142, 181, 184, 185, 190, 198, 289, 291], "depot": [7, 8, 9, 178, 191, 194, 269, 291, 303], "alag": [7, 269], "a_depot": [7, 8], "builder": [8, 9], "graph": [8, 257, 271, 274], "odesystem": [8, 29, 269, 289], "od": [8, 14, 23, 29, 32, 44, 55, 56, 58, 81, 82, 84, 85, 86, 105, 106, 114, 118, 129, 130, 133, 137, 181, 187, 199, 201, 269, 271], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 194, 303], "k21": [8, 303], "vector": [8, 17, 123, 166, 167, 168, 268, 282, 289], "load_example_model": [8, 10, 15, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 223, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 269, 283, 290, 291], "pprint": [8, 114], "ode_system": [8, 29, 36, 43, 162, 170, 178, 179, 184, 185, 188, 191, 194, 197, 198, 201, 269, 289, 291], "central_compart": 8, "outward": 8, "flow": [8, 9, 42, 43, 257, 287], "compartment_nam": 8, "compartmental_matrix": [8, 289], "matrix": [8, 17, 26, 51, 52, 53, 54, 58, 61, 62, 63, 64, 65, 68, 123, 166, 167, 168, 199, 268, 269, 271, 282, 289, 291], "set_first_order_absorpt": [8, 44, 170, 191, 197, 269, 291], "dosing_compart": 8, "receiv": [8, 287], "equat": [8, 58, 78, 289, 291], "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 9, 69, 123, 137, 138, 144, 181, 191, 197, 198, 199, 269, 286, 291, 292, 294, 303], "set_zero_order_absorpt": [8, 170, 178, 191, 269, 291, 305], "atom": 8, "http": [8, 268, 278, 279, 282, 283, 287, 300], "doc": [8, 274], "org": [8, 268, 270, 278, 282, 287, 300], "latest": [8, 269, 279, 283], "core": [8, 283, 289], "html": [8, 217, 279, 287], "basic": [8, 27, 72, 73, 269, 278, 287, 293, 303, 304], "find_compart": [8, 9, 36], "its": [8, 24, 29, 69, 77, 144, 244, 269, 271, 278, 279, 283, 285, 287, 289, 291, 305], "found": [8, 25, 243, 267, 268, 269, 274, 277, 280, 282, 283, 284, 286, 287, 289, 290, 292, 299, 300, 303, 304, 305], "find_depot": 8, "out": [8, 26, 67, 213, 269, 287, 289, 295, 305], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 24, 26, 202, 207, 219, 238, 243, 246, 248, 269, 271, 279, 282, 287, 303], "distinguish": [8, 287], "get_bidirect": 8, "bidirect": 8, "interest": [8, 58, 272, 276, 287, 296], "get_compartment_inflow": 8, "go": [8, 125, 126, 134, 238, 246, 269, 278, 287, 291], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 215, 216, 248, 252, 253, 271], "ka": [8, 9, 39, 178, 191, 269, 286, 291], "get_n_connect": 8, "connect": [8, 18, 248, 250, 269, 271, 278, 287, 296, 303, 304], "compartmentalsystem": [9, 269], "newli": [9, 26, 286], "move_dos": 9, "move": [9, 213, 269], "anoth": [9, 18, 29, 258, 291], "remove_compart": 9, "remove_flow": 9, "set_bioavail": 9, "set_dos": 9, "set_input": 9, "set_lag_tim": [9, 269], "force_absolute_path": 10, "sequenc": [10, 15, 25, 26, 29, 74], "metadata": [10, 248, 249, 252, 253, 254, 256, 269], "index": [10, 18, 25, 26, 27, 29, 37, 47, 58, 61, 68, 69, 100, 115, 157, 176, 177, 243, 246, 268, 269, 282, 283, 289, 291, 301, 305], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 77], "idv_column": 10, "apgr": [10, 29, 33, 35, 70, 79, 80, 93, 98, 110, 124, 127, 142, 143, 144, 149, 150, 209, 278, 282, 289, 291, 293, 299], "fa1": [10, 79, 80, 93, 149, 150, 278, 291], "fa2": [10, 79, 80, 93, 149, 150, 278, 291], "example_model": 10, "dta": [10, 149, 278, 291, 293], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 269, 287, 291, 305], "read_json": 10, "read": [10, 151, 152, 153, 226, 227, 232, 247, 248, 249, 252, 253, 254, 256, 269, 273, 278, 283, 287, 290, 295, 296, 298, 303, 304], "set_column": 10, "col": 10, "exist": [10, 29, 35, 47, 48, 73, 76, 97, 99, 248, 249, 250, 269, 271, 273, 278, 286, 303], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 27, 278], "recover": 12, "issu": [12, 21, 269, 274, 285, 305], "hashabl": 13, "level": [13, 17, 22, 26, 30, 31, 104, 135, 269, 271, 278, 285, 291, 296, 301, 303, 304], "variabilitylevel": 13, "parameter_nam": [13, 26, 91, 208, 210, 269, 293], "definit": [13, 14, 18, 29, 59, 167, 168, 223, 269, 271, 276, 282, 287, 289, 303], "varianc": [13, 17, 22, 26, 57, 58, 61, 180, 213, 284, 289, 303], "abstract": [13, 23, 28, 252, 256, 268, 270, 279, 285, 289], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 26], "name1": [13, 17, 22, 147], "name2": [13, 17, 22, 147], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 289, 291], "cov": [14, 15, 26, 34, 35, 37, 51, 58, 59, 61, 63, 64, 154, 167, 176, 177, 268, 269, 274, 281, 282, 289, 291], "evalu": [14, 37, 81, 82, 83, 84, 85, 86, 176, 177, 246, 267, 269, 285, 289, 291, 296, 299, 302], "maximum_evalu": [14, 281, 289, 291], "laplac": [14, 37, 176, 177, 269, 271, 281, 289, 291], "isampl": [14, 37, 47, 176, 269, 281, 289, 291], "niter": [14, 37, 47, 176, 269, 281, 289, 291], "auto": [14, 15, 269, 281, 289, 291], "keep_every_nth_it": [14, 15, 269, 281, 289, 291], "residu": [14, 26, 86, 120, 222, 223, 244, 269, 300, 302, 303], "solver": [14, 187, 235, 269, 271, 303], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 37, 47, 176, 289, 291, 303], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 38, 71, 77, 253, 254, 271, 273, 274, 276, 279, 287, 289, 291, 295], "uncertainti": [14, 58, 59, 61, 166, 167, 168, 269, 271, 282, 290], "epsilon": [14, 26, 55, 56, 81, 82, 150, 180, 189, 196, 203, 214, 269, 271, 279, 291], "calcul": [14, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 83, 96, 225, 267, 268, 269, 282, 284, 285, 286, 292], "deriv": [14, 122, 269, 274, 276, 291], "eta": [14, 26, 29, 38, 40, 55, 56, 57, 59, 74, 81, 82, 84, 144, 148, 149, 150, 153, 158, 159, 180, 202, 204, 205, 206, 269, 271, 279, 282, 284, 286, 289, 293, 299, 303], "preserv": [14, 26, 287], "comput": [14, 274, 275, 276, 287], "sampl": [14, 26, 75, 165, 166, 167, 168, 282], "similar": [14, 267, 281, 287, 292, 300], "em": 14, "result": [14, 18, 26, 50, 51, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 74, 81, 82, 83, 84, 85, 86, 166, 167, 168, 212, 213, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 253, 254, 256, 258, 261, 269, 272, 274, 285, 287, 293, 295, 296, 298, 304], "everi": [14, 278, 287], "nth": 14, "iter": [14, 15, 29, 58, 145, 165, 167, 240, 269, 291, 297, 300], "laplacian": 14, "solv": [14, 269], "advan": [14, 187, 269, 291], "cvode": [14, 187, 271], "advan14": [14, 187, 271], "dgear": [14, 187, 271], "advan8": [14, 187, 271], "dverk": [14, 187, 271], "advan6": [14, 187, 271], "ida": [14, 187, 271], "advan15": [14, 187, 271], "lsoda": [14, 187, 271, 281], "advan13": [14, 187, 271, 291], "lsodi": [14, 187, 271, 281], "advan9": [14, 187, 271], "absolut": [14, 68, 269, 287], "toler": 14, "supported_method": [14, 281], "frozenset": 14, "bay": [14, 176, 177, 271], "imp": [14, 37, 176, 177, 235, 269, 271, 281, 291], "impmap": [14, 37, 176, 177, 269, 271], "saem": [14, 37, 176, 177, 235, 269, 271], "supported_solv": [14, 281], "to_datafram": [15, 25, 251], "overview": [15, 251, 267, 271, 280, 289, 301], "estimation_step": [15, 18, 34, 37, 47, 154, 157, 176, 177, 269, 289, 291], "doctest": [15, 274], "ellipsi": 15, "durat": [16, 191, 197, 291], "mutual": [16, 286, 303], "exclus": [16, 287, 303], "d1": [16, 191, 197, 269, 291], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 26, 40, 74, 202, 282, 286, 291], "omega_cl": [17, 22, 26], "omega_v": [17, 26], "corr_cl_v": [17, 26], "omega_cl_v": [17, 26], "dist": [17, 22, 26, 269, 274, 289], "iiv_cl": [17, 22, 26, 291, 293], "iiv_v": [17, 26], "itself": [17, 22, 287], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 26], "random_vari": [18, 74, 202, 289, 291, 305], "dependent_vari": [18, 269, 289], "y": [18, 25, 29, 70, 101, 122, 124, 142, 149, 150, 153, 156, 169, 171, 180, 189, 190, 192, 203, 214, 289, 291, 293], "observation_transform": [18, 269], "estimationstep": [18, 34, 37, 154, 176, 177, 269, 281, 289], "modelfit_result": [18, 223, 246, 269], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 274, 289, 293, 296], "map": [18, 32, 278], "discript": 18, "extens": [18, 248, 250, 278, 287, 289], "model_cod": [18, 269], "modelfit": [18, 220, 238, 246, 248, 252, 253, 267, 269, 271, 304], "parent": [18, 244, 245, 258, 281], "randomvari": [18, 269, 289], "likelihood": [18, 49, 50, 234, 240, 271, 300], "2ll": [18, 49, 50, 269], "log": [18, 35, 36, 38, 50, 144, 169, 171, 173, 174, 190, 269, 278, 282], "record": [18, 81, 82, 83, 84, 85, 86, 87, 145, 161, 269, 274, 293], "would": [18, 31, 144, 267, 276, 282, 287, 291, 293, 296], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 269, 285, 293, 295, 296, 303], "parse_model_from_str": 18, "update_sourc": [18, 269, 293], "g": [18, 26, 70, 76, 159, 239, 269, 274, 278, 281, 282, 284, 286, 292, 296, 300, 303], "dummypath": [18, 291], "write_fil": 18, "forc": [18, 26, 76, 167, 168, 212, 215, 216, 269, 271, 286, 287], "write": [18, 215, 216, 247, 269, 274, 276, 287, 295, 304], "extern": [18, 226, 274, 278, 279, 283, 295, 296], "msg": 20, "syntax": [20, 303], "normal": [22, 26, 31, 40, 60, 66, 144, 282, 286, 287], "init": [24, 25, 35, 45, 92, 182, 211, 213, 271, 282, 289], "inf": [24, 291], "param": [24, 271], "tvcl": [24, 29, 33, 38, 40, 70, 83, 124, 142, 143, 144, 149, 150, 158, 267, 282, 289, 291, 293], "005": 24, "boolean": [24, 25, 87, 91, 92, 165, 174, 180, 210, 211, 221, 222, 223, 278], "constrain": [24, 279, 289], "unfix": [24, 90, 91, 92, 182, 208, 210, 211, 269], "back": [24, 66, 269], "previou": [24, 26, 29, 41, 74, 99, 124, 178, 191, 194, 197, 232, 245, 261, 269, 271, 287, 292], "less": 24, "greater": 24, "altern": [24, 205, 274, 287], "constructor": [24, 269], "collect": [25, 26, 282, 287, 303], "usual": [25, 274], "wai": [25, 128, 131, 132, 138, 203, 274, 278, 281, 287, 289, 303, 305], "displai": [25, 78, 169, 282, 287], "summar": [25, 243, 245, 246, 282, 288], "par1": 25, "par2": 25, "pset": 25, "fixed": [25, 90], "nonfix": 25, "set_fix": 25, "set_initial_estim": [25, 269, 291], "eta_level": 26, "epsilon_level": 26, "act": [26, 175], "while": [26, 274, 291, 303, 305], "variabilityhierarchi": 26, "contin": 26, "hierarchi": [26, 30], "rv": [26, 74, 119, 163, 202, 289, 305], "normaldistribut": [26, 289], "covariance_matrix": [26, 51, 58, 61, 63, 64, 167, 267, 269, 290], "nrv": 26, "variance_paramet": 26, "rv1": 26, "rv2": 26, "get_rvs_with_same_dist": 26, "join": [26, 202, 269, 272], "ind": 26, "fill": 26, "name_templ": 26, "param_nam": 26, "taken": [26, 87, 93, 98, 207, 248, 278, 282], "remain": [26, 272, 287], "templat": [26, 35, 38, 73, 273], "overrid": [26, 269, 273, 303], "dist1": 26, "dist2": 26, "_": [26, 245, 268, 282], "unjoin": 26, "nearest_valid_paramet": 26, "parameter_valu": 26, "small": 26, "parameters_sdcorr": 26, "sd": [26, 57, 291, 299, 302], "corr": [26, 53, 62, 299], "assum": [26, 42, 248, 269, 282, 287, 293], "var": [26, 59, 282], "replace_with_sympy_rv": 26, "stat": [26, 29, 303], "std": [26, 291], "rng": [26, 58, 61, 75, 166, 167, 168], "jointnormaldistribut": [26, 289], "validate_paramet": 26, "seri": [26, 53, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 83, 84, 85, 86, 95, 99, 100, 102, 108, 113, 115, 147, 148, 167, 168, 169, 205, 213, 269, 290], "current": [26, 37, 38, 55, 56, 70, 71, 81, 82, 84, 85, 86, 105, 114, 118, 137, 142, 170, 176, 177, 191, 201, 203, 207, 220, 225, 234, 238, 241, 252, 258, 268, 269, 271, 274, 276, 277, 282, 283, 285, 286, 287, 288, 289, 292, 295, 296, 297, 299, 300, 301, 302, 303], "matric": [26, 59, 168, 269, 279, 290], "semidefinit": [26, 269, 279], "use_cach": 26, "symengin": [26, 279, 296], "cach": 26, "__version__": 27, "97": [27, 267, 276], "get_and_reset_index": 27, "attr": 27, "wrapper": [27, 269, 274, 279, 283, 305], "reset": [27, 207, 269], "facilit": 27, "multiindex": [27, 269], "to_csv": 27, "save": [27, 247, 269], "readabl": [27, 250, 252, 278, 287, 296], "print": [27, 67, 149, 150, 224, 269, 291], "lzma": [27, 247], "serial": [27, 269, 278, 296], "compress": [27, 247], "unless": [27, 29, 287], "signific": [29, 69, 236, 237, 239, 269, 287, 301], "after_od": [29, 190], "s\u2081": [29, 33, 70, 124, 142, 143, 144, 150, 190, 289], "eps\u2081": [29, 70, 114, 124, 142, 150, 156, 169, 180, 189, 192, 203, 214, 289], "ipr": [29, 70, 84, 124, 142, 149, 150, 189, 190, 269, 289, 290, 291, 302], "ir": [29, 70, 124, 142, 149, 150, 190, 289, 291], "iwr": [29, 70, 124, 142, 149, 150, 190, 289, 291], "before_od": [29, 33, 35, 143, 144, 204, 205, 206], "btime": [29, 33, 70, 124, 142, 143, 144, 149, 150, 289, 291], "tad": [29, 33, 46, 70, 124, 142, 143, 144, 149, 150, 269, 289, 291, 299], "ptvcl": [29, 33, 35, 45, 51, 52, 53, 54, 60, 62, 63, 64, 65, 68, 69, 70, 90, 91, 92, 121, 124, 142, 143, 144, 149, 150, 167, 168, 182, 183, 195, 200, 204, 205, 206, 208, 210, 211, 213, 220, 289, 290, 291], "tvv": [29, 33, 70, 124, 142, 143, 144, 149, 150, 158, 267, 282, 289, 291, 293], "ptvv": [29, 33, 45, 51, 52, 53, 54, 60, 62, 63, 64, 65, 68, 69, 70, 121, 124, 142, 143, 144, 149, 150, 167, 168, 210, 211, 213, 220, 289, 290, 291], "theta\u2083": [29, 33, 70, 124, 142, 143, 144, 150, 289], "eta\u2081": [29, 33, 70, 74, 114, 124, 142, 143, 144, 150, 202, 289], "\u212f": [29, 33, 44, 70, 124, 142, 143, 144, 180, 289, 291], "eta\u2082": [29, 33, 70, 74, 114, 124, 142, 143, 144, 150, 202, 289], "whole": [29, 271, 278, 287, 303], "s1": [29, 135, 149, 291, 293], "symbol_or_stat": 29, "direct_depend": 29, "direct": [29, 257, 276, 287, 301], "find_assign": [29, 38, 39, 40, 44, 156, 158, 169, 171, 180, 189, 192, 203, 214], "find_assignment_index": 29, "full_express": [29, 35, 204, 205, 206], "expand": [29, 87], "full": [29, 74, 105, 114, 118, 193, 268, 269, 271, 273, 282, 286, 287, 292, 299], "eta_1": [29, 35, 55, 57, 59, 74, 105, 119, 144, 166, 202, 204, 205, 206, 282, 289, 290, 291], "reassign": 29, "sypmpi": 29, "remove_symbol_definit": 29, "elsewher": 29, "longer": [29, 269], "make": [29, 70, 143, 156, 164, 165, 234, 269, 279, 286, 287, 289, 292, 303, 305], "sure": [29, 164, 269, 287, 292, 305], "func": [32, 255], "p": [33, 225, 234, 240, 267, 268, 269, 271, 276, 282, 291, 300, 301], "allometri": [33, 231, 232, 269, 303], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 37, 47, 154, 157, 177, 269, 291, 305], "add_estimation_step": [34, 47, 154, 157, 176, 177, 269, 291], "remove_estimation_step": [34, 37, 47, 154, 176, 177, 291], "append_estimation_step_opt": [34, 37, 154, 157, 176, 177, 269, 291], "remove_covariance_step": [34, 37, 47, 157, 176, 177, 269, 291], "set_evaluation_step": [34, 37, 47, 154, 157, 176, 291], "allow_nest": [35, 269], "linear": [35, 36, 129, 130, 139, 173, 267, 268, 269, 279, 289, 291, 296, 298], "lin": [35, 36, 173], "coveff": [35, 76], "median": [35, 58, 61, 267, 269, 291, 296], "001": [35, 69, 213, 291, 301], "equal": [35, 40, 165, 180, 271, 274], "minimum": [35, 279], "000": [35, 290], "frac": [35, 169, 171, 268, 289, 291, 302], "min": [35, 169, 171, 267, 291], "piecewis": [35, 269], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 291], "theta2": [35, 291], "pow": [35, 291], "mai": [35, 284, 286, 287, 291, 292, 303], "abbrevi": [35, 38, 269, 271, 274, 293], "multipli": [35, 38, 180, 267, 271, 291], "alreadi": [35, 73, 175, 181, 199, 269, 271, 274, 286, 287], "pop_clapgr": 35, "baselin": [36, 93, 98, 141, 173, 269, 282], "e0": [36, 173], "emax": [36, 173], "els": [36, 67, 173, 269, 291], "ec50": [36, 173], "sigmoid": [36, 173], "m": [36, 173, 300], "c0": [36, 173], "loglin": [36, 173], "a_effect": 36, "ke0": 36, "idx": [37, 47, 157, 176, 177, 305], "argument": [37, 81, 82, 84, 85, 86, 176, 218, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 255, 269, 271, 303, 305], "pass": [37, 75, 176, 218, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 258, 287], "opt": [37, 47, 176, 273], "1000": [37, 47, 83, 176, 282], "len": [37, 47, 157, 161], "add_covariance_step": [37, 47, 154, 157, 176, 177, 269, 291], "initial_estim": [38, 44], "09": [38, 44, 171, 180, 190, 276, 284, 291, 292, 293, 297], "eta_nam": [38, 40, 180, 271], "prop": [38, 291], "logit": 38, "user": [38, 97, 269, 278, 279, 284, 286, 287, 289, 290, 291, 292, 293], "remove_iiv": [38, 40, 44, 159, 269, 291, 293], "add_pk_iiv": [38, 40, 158, 159, 269, 291, 292], "add_iov": [38, 44, 158, 159, 269, 291], "remove_iov": [38, 40, 44, 158, 269, 291], "pop_ka": [39, 45], "occ": [40, 237, 271, 276, 286], "disjoint": [40, 286], "accept": [40, 111, 112, 113, 271, 287], "explicit": [40, 269, 271, 272, 286, 303], "copi": [40, 116, 120, 121, 269, 284, 286, 287, 291, 303], "add_iiv": [40, 44, 158, 159, 269, 291, 293], "set_transit_compart": [41, 160, 269, 291], "remove_lag_tim": [41, 269, 291], "drug_dvid": 42, "metabolit": 42, "unidirect": 42, "parameter": 43, "qpn": 43, "vpn": 43, "volumn": 43, "mathsf": [43, 162], "qp1": [43, 162, 269, 291], "vp1": [43, 162, 291], "cdot": [43, 162, 282, 289, 291], "qp2": [43, 162, 269], "vp2": [43, 162], "peripheral1": [43, 162, 188, 291], "v1": [43, 162, 188, 291], "v2": [43, 162, 188, 291], "set_peripheral_compart": [43, 162, 269, 291], "remove_peripheral_compart": [43, 188, 269, 291], "Will": [44, 248, 249, 250], "pop_mat": [44, 291, 293], "eta_mat": [44, 291], "004693": [45, 60, 121, 282, 289], "1000000": [45, 90, 91, 92, 121, 182, 183, 208, 211, 289], "009160": [45, 121, 289], "theta_3": [45, 51, 52, 53, 54, 60, 62, 63, 64, 65, 68, 69, 121, 167, 168, 210, 211, 213, 220, 289, 290, 291], "100000": [45, 121, 281, 289, 291], "99": [45, 121, 149, 213, 267, 269, 276, 289, 291], "ivcl": [45, 51, 52, 53, 54, 60, 62, 63, 64, 65, 68, 69, 74, 116, 149, 150, 167, 168, 202, 211, 213, 220, 267, 282, 289, 290, 291, 293], "030963": [45, 116, 282, 289], "ivv": [45, 51, 52, 53, 54, 60, 62, 63, 64, 65, 68, 69, 74, 116, 149, 150, 167, 168, 202, 211, 213, 220, 267, 282, 289, 290, 291], "031128": [45, 116, 149, 213, 282, 289, 291, 293], "sigma_1_1": [45, 51, 52, 53, 54, 60, 62, 63, 64, 65, 69, 120, 167, 168, 211, 213, 220, 289, 290, 291], "013241": [45, 120, 149, 213, 220, 282, 289, 290, 291], "append": [47, 269], "increas": [48, 274], "until": [48, 246, 287, 305], "do": [48, 167, 267, 269, 271, 282, 287, 293, 300, 305], "noth": [48, 161, 287], "next": [48, 269, 287, 291, 292, 293, 300], "run2": [48, 186, 291], "run3": [48, 291], "n_estimated_paramet": [49, 50], "fit": [49, 50, 148, 203, 224, 238, 244, 246, 252, 269, 287, 289, 291, 300, 304, 305], "variat": 50, "n_random_paramet": 50, "n_individu": 50, "n_fixed_paramet": 50, "n_observ": 50, "n_individ": 50, "n_estimated_iiv_omega_paramet": 50, "load_example_modelfit_result": [50, 51, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 81, 82, 83, 84, 85, 86, 166, 167, 168, 212, 213, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 269], "611": 50, "7071686183284": 50, "616": [50, 269, 290], "536606983396": 50, "610": 50, "7412809453149": 50, "594": 50, "431131169692": 50, "411510e": [51, 54, 63, 64, 290], "08": [51, 53, 54, 63, 64, 276, 290], "010000e": [51, 54, 63, 64, 290], "000002": [51, 53, 54, 63, 64, 290], "538630e": [51, 53, 54, 63, 64, 290], "07": [51, 52, 53, 54, 62, 63, 64, 65, 267, 276, 284, 286, 290, 299, 301], "178090e": [51, 54, 63, 64, 290], "233530e": [51, 54, 63, 64, 290], "04": [51, 52, 53, 54, 62, 63, 64, 65, 267, 276, 286, 290, 299, 301], "000804": [51, 53, 54, 63, 64, 276, 290], "000050": [51, 53, 54, 63, 64, 267, 290], "171840e": [51, 54, 63, 64, 290], "461760e": [51, 54, 63, 64, 290], "665010e": [51, 54, 63, 64, 290], "040250e": [51, 54, 63, 64, 290], "007016": [51, 53, 54, 63, 64, 290], "000108": [51, 53, 54, 63, 64, 290], "944800e": [51, 54, 63, 64, 290], "932950e": [51, 54, 63, 64, 290], "093430e": [51, 54, 63, 64, 290], "981380e": [51, 53, 54, 63, 64, 290], "000180": [51, 53, 54, 63, 64, 290], "856650e": [51, 54, 63, 64, 290], "867230e": [51, 54, 63, 64, 290], "000039": [51, 53, 54, 63, 64, 290], "000019": [51, 53, 54, 63, 64, 290], "589820e": [51, 53, 54, 63, 64, 290], "685650e": [51, 54, 63, 64, 290], "000029": [51, 53, 54, 63, 64, 290], "000005": [51, 53, 54, 63, 64, 290], "195640e": [51, 54, 63, 64, 290], "007099": [51, 52, 53, 62, 290], "094640": [51, 52, 53, 62, 290], "388059": [51, 52, 53, 62, 68], "097981": [51, 52, 53, 62, 290], "170820": [51, 52, 53, 62, 290], "356899": [51, 52, 53, 62, 68], "138062": [51, 52, 53, 62, 290], "356662": [51, 52, 53, 62, 68, 290], "238441": [51, 52, 53, 62], "096515": [51, 52, 53, 62], "062991": [51, 52, 53, 62, 290], "153616": [51, 52, 53, 62, 290], "185111": [51, 52, 53, 62, 290], "159170": [51, 52, 53, 62, 290], "027495": [51, 52, 53, 62, 290], "calculate_se_from_cov": [51, 52, 53, 54, 62, 63, 65, 269], "calculate_se_from_prec": [51, 52, 53, 54, 62, 63, 64], "precis": [51, 52, 53, 54, 62, 63, 64, 65, 269, 287], "calculate_cov_from_prec": [51, 52, 53, 62, 63, 64, 65], "calculate_cov_from_corrs": [51, 52, 54, 62, 63, 64, 65, 269], "calculate_prec_from_cov": [51, 52, 53, 54, 62, 64, 65], "calculate_prec_from_corrs": [51, 52, 53, 54, 63, 64, 65], "calculate_corr_from_prec": [51, 53, 54, 62, 63, 64, 65], "precision_matrix": [52, 54, 65, 290], "prec": [52, 54, 65], "995567e": [52, 54, 63, 65], "22660": [52, 54, 62, 63, 65, 290], "028196": [52, 54, 63, 65], "16057": [52, 54, 62, 63, 65, 290], "855248": [52, 54, 63, 65], "203511": [52, 54, 62, 63, 65, 290], "614428": [52, 54, 63, 65], "39474": [52, 54, 62, 63, 65, 290], "250514": [52, 54, 63, 65], "820118": [52, 54, 63, 65], "299536": [52, 54, 63, 65], "266003e": [52, 54, 63, 65], "2129": [52, 54, 62, 63, 65, 290], "904642": [52, 54, 63, 65], "260": [52, 54, 62, 63, 65, 290], "176234": [52, 54, 63, 65], "375": [52, 54, 62, 63, 65, 290], "266233": [52, 54, 63, 65], "2800": [52, 54, 62, 63, 65, 290], "816246": [52, 54, 63, 65], "7718": [52, 54, 62, 63, 65, 290], "769557": [52, 54, 63, 65], "605786e": [52, 54, 63, 65], "187": [52, 54, 62, 63, 65, 290], "038903": [52, 54, 63, 65], "177": [52, 54, 62, 63, 65, 269, 290, 301], "207683": [52, 54, 63, 65], "205": [52, 54, 62, 63, 65, 290], "808480": [52, 54, 63, 65], "2225": [52, 54, 62, 63, 65, 290], "150449": [52, 54, 63, 65], "035116e": [52, 54, 63, 65], "7527": [52, 54, 62, 63, 65, 290], "530027": [52, 54, 63, 65], "2462": [52, 54, 62, 63, 65, 290], "974821": [52, 54, 63, 65], "9977": [52, 54, 62, 63, 65, 290], "488860": [52, 54, 63, 65], "947425e": [52, 54, 63, 65], "22343": [52, 54, 62, 63, 65, 290], "198618": [52, 54, 63, 65], "9370": [52, 54, 62, 63, 65, 290], "758371": [52, 54, 63, 65], "201183e": [52, 54, 63, 65], "249847": [52, 54, 63, 65, 290], "177845": [52, 54, 63, 65], "calculate_corr_from_cov": [52, 53, 54, 62, 63, 64, 65, 269], "se": [53, 62, 275, 276, 290], "correlation_matrix": [53, 62, 68, 290], "standard_error": [53, 62, 290], "411512e": 53, "009998e": 53, "178111e": 53, "233518e": 53, "171834e": 53, "461762e": 53, "665011e": 53, "040245e": 53, "944801e": 53, "932957e": 53, "093431e": 53, "856651e": 53, "867245e": 53, "685661e": 53, "195664e": 53, "gradient": [55, 56, 81, 82, 269], "pheno_linear": [55, 56, 81, 82, 84, 85, 86, 105, 114, 118, 139, 142, 220, 225], "d_eps1": [55, 114], "d_epseta1_1": [55, 114], "oeta1": [55, 105, 118], "d_epseta1_2": [55, 114], "eta_2": [55, 57, 59, 74, 105, 166, 202, 290, 291], "oeta2": [55, 105, 118], "calculate_eta_gradient_express": [55, 269], "d_eta1": [56, 105, 114, 118], "d_eta2": [56, 105, 114, 118], "calculate_epsilon_gradient_express": [56, 269], "parameter_estim": [57, 58, 59, 61, 69, 83, 85, 86, 148, 167, 168, 213, 220, 267, 269, 289, 290], "individual_estim": [57, 74, 81, 82, 84, 148, 166, 212, 269, 290], "shrinkag": [57, 59], "deviat": [57, 214, 267, 282, 288, 290, 291, 299, 302], "pe": [57, 58, 59, 61, 83, 85, 167, 168], "ie": [57, 166, 212], "720481": 57, "240295": 57, "471305": 57, "128389": 57, "calculate_individual_shrinkag": [57, 269], "expr_or_expr": 58, "expect": [58, 61, 272, 273, 287, 299], "arbitrari": [58, 61], "solut": [58, 201], "th": [58, 268, 282], "95": [58, 267, 282], "percentil": [58, 267, 282], "previous": [58, 61, 146, 148, 269, 293], "seed": [58, 61, 75, 166, 168, 271], "create_rng": [58, 61, 166, 167, 168], "k": [58, 268, 269, 274, 276, 282], "stderr": [58, 61, 267, 303], "p5": [58, 61, 282], "004234": [58, 61], "001138": [58, 61], "004907": [58, 61], "001247": [58, 61], "p95": [58, 61, 282], "individual_estimates_covari": [59, 166, 269, 290], "ieta_shr": 59, "847789": 59, "256473": 59, "796643": 59, "210669": 59, "755025": 59, "226957": 59, "764541": 59, "216405": 59, "816192": 59, "203974": 59, "778108": 59, "210992": 59, "659420": 59, "236875": 59, "668551": 59, "240097": 59, "260056": 59, "200374": 59, "725190": 59, "226563": 59, "972110": 59, "421852": 59, "249640": 59, "254119": 59, "730294": 59, "364932": 59, "165785": 59, "194464": 59, "813399": 59, "313554": 59, "797328": 59, "213211": 59, "769059": 59, "278079": 59, "098506": 59, "176778": 59, "749022": 59, "235386": 59, "742181": 59, "222932": 59, "317956": 59, "264473": 59, "943950": 59, "232732": 59, "707183": 59, "259077": 59, "553787": 59, "247717": 59, "826349": 59, "114302": 59, "854777": 59, "341384": 59, "820829": 59, "263235": 59, "999942": 59, "319986": 59, "967084": 59, "432760": 59, "404773": 59, "325215": 59, "999980": 59, "318421": 59, "925283": 59, "167667": 59, "913706": 59, "242106": 59, "875554": 59, "249197": 59, "35": [59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 300, 302], "849135": 59, "294294": 59, "172206": [59, 302], "246422": 59, "747380": 59, "278340": 59, "187440": 59, "231249": 59, "237805": 59, "254485": 59, "999925": 59, "189793": 59, "41": [59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 299, 302], "941906": 59, "170998": 59, "42": [59, 61, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 292, 301, 302], "923801": 59, "244046": 59, "43": [59, 93, 98, 113, 223, 267, 268, 276, 281, 288, 290, 291, 301, 302], "999928": 59, "320403": 59, "237637": 59, "260453": 59, "869540": 59, "194503": 59, "46": [59, 93, 98, 113, 223, 267, 268, 281, 288, 290, 291, 302], "999949": 59, "319750": 59, "983782": 59, "393234": 59, "48": [59, 93, 98, 100, 113, 223, 267, 268, 276, 288, 290, 291, 300, 301, 302], "698267": 59, "169337": 59, "49": [59, 93, 98, 113, 223, 267, 268, 288, 290, 291, 302], "776674": 59, "214962": 59, "50": [59, 93, 98, 113, 223, 267, 268, 288, 290, 291, 292, 297, 299, 302], "688847": 59, "192608": 59, "822213": 59, "202534": 59, "511489": 59, "273601": 59, "53": [59, 93, 98, 113, 223, 267, 268, 276, 288, 290, 291, 297, 299, 302], "964757": 59, "223448": 59, "762153": 59, "181648": 59, "965657": 59, "435741": 59, "995278": 59, "354798": 59, "813382": 59, "263372": 59, "727295": 59, "232867": 59, "738777": 59, "224742": 59, "calculate_eta_shrinkag": [59, 269], "ucp": [60, 66], "ucpscal": [60, 66], "calculate_ucp_scal": [60, 269], "00916": [60, 149, 213, 282, 289, 291, 293], "0309626": [60, 149, 213, 289, 291, 293], "031127999999999996": 60, "013241000000000001": 60, "convers": [60, 269, 285], "pharmacokinet": [61, 203, 291], "pre": 61, "t_half_elim": 61, "173": 61, "337164": 61, "1769": 61, "493756": 61, "843398": 61, "149": [61, 286], "567842": 61, "1317": [61, 276], "474199": 61, "233070": 61, "k_e": 61, "calculate_individual_parameter_statist": [61, 269], "995565e": 62, "041788": 62, "848052": 62, "410335": 62, "240358": 62, "820116": [62, 290], "179011": 62, "266004e": 62, "908225": 62, "176399": 62, "266263": 62, "818557": 62, "757955": 62, "605785e": 62, "038825": 62, "207512": 62, "808434": 62, "144772": 62, "035114e": 62, "518562": 62, "972906": 62, "457873": 62, "947424e": 62, "197906": 62, "736254": 62, "201162e": 62, "249846": 62, "006431": 62, "000210": [64, 65, 290], "026895": [64, 65, 290], "083762": [64, 65, 290], "013415": [64, 65, 290], "007477": [64, 65, 290], "002279": [64, 65, 290], "unconstrain": 66, "calculate_parameters_from_ucp": [66, 269], "verbos": 67, "consist": [67, 276, 287, 303], "across": [67, 269, 287], "consol": 67, "fail": [67, 269, 287, 296], "cor": [68, 274], "highli": 68, "high": [68, 278, 279, 296], "zero_limit": 69, "significant_digit": [69, 269], "close": [69, 213, 269, 282, 287, 288], "distanc": [69, 77, 302], "logic": 69, "cleanup": 70, "what": [70, 287, 293, 296], "inlin": 70, "clean": 70, "might": [70, 287, 296, 303, 305], "certain": [70, 101, 145, 269, 273, 286, 287, 295, 303], "requir": [70, 269, 271, 276, 283, 287, 299], "to_format": 71, "inplac": 71, "nlmixr": [71, 238, 269, 274, 290, 291], "rxode": [71, 269, 290], "underli": [71, 109, 149, 289], "converted_model": 71, "applic": [72, 247, 261, 287, 296, 303], "config": [73, 97, 269, 273, 274, 294], "configur": [73, 269, 283, 290, 293, 303, 304], "overwritten": [73, 248], "block": [74, 158, 189, 269, 271, 282, 284, 291, 292, 299, 303], "iiv_cl_iiv_v": [74, 202], "split_joint_distribut": [74, 269, 291], "through": [75, 271, 272, 273, 276, 287, 289, 291, 303], "numpi": [75, 278, 279, 289], "standard_norm": 75, "5532605888887387": 75, "stem": 76, "force_numb": 76, "coveff1": 76, "temp": 76, "temp1": 76, "cl1": 76, "df": [77, 82, 245, 269, 278, 297, 299], "date_column": 77, "deidentifi": [77, 269], "year": [77, 269, 274, 287], "earliest": 77, "maintain": [77, 272, 274, 275, 285, 287, 295, 296], "leap": 77, "1901": 77, "1902": 77, "1903": 77, "1904": 77, "closest": 77, "preceed": 77, "ordinari": [78, 289], "differenti": [78, 289], "odedisplay": 78, "display": 78, "dt": [78, 291], "column_nam": [79, 209], "mark": [79, 80, 87, 209, 271, 287], "drop_dropped_column": [79, 209, 269, 291], "undrop_column": [79, 269, 291], "undrop": [79, 209], "drop_column": [80, 209, 269, 291], "them": [80, 165, 272, 284, 286, 287, 292, 293, 300, 303], "dy": 81, "deps_1": 81, "771084": [81, 84], "881859": [81, 84], "441728": [81, 84], "113050": [81, 84], "783055": [81, 84], "150": [81, 82, 84, 85, 86, 290], "375041": [81, 84], "833395": [81, 84], "152": [81, 82, 84, 85, 86], "876707": [81, 84], "153": [81, 82, 84, 85, 86, 277], "905095": [81, 84], "154": [81, 82, 84, 85, 86], "099690": [81, 84], "155": [81, 82, 84, 85, 86, 112, 115, 290, 291], "evaluate_eta_gradi": [81, 269], "deta_1": 82, "deta_2": 82, "159537": 82, "609116": 82, "325893": 82, "562289": 82, "104417": 82, "346161": 82, "452951": 82, "682310": 82, "838840": 82, "981836": 82, "424423": 82, "973013": 82, "497185": 82, "344797": 82, "198714": 82, "697161": 82, "987731": 82, "941806": 82, "817067": 82, "309945": 82, "evaluate_epsilon_gradi": [82, 269], "573770": 83, "739": [83, 99, 278, 291], "165105": 83, "741": [83, 99, 267, 278, 291], "742": [83, 99, 267, 278, 291], "743": [83, 99, 278, 291], "evaluate_population_predict": [84, 269], "529739": 85, "179910": [85, 288], "688648": 85, "798916": 85, "023225": 85, "459036": 85, "223295": 85, "217288": 85, "472888": 85, "226455": 85, "evaluate_individual_predict": [85, 269], "wre": [86, 269], "313859": 86, "675721": 86, "544240": 86, "921720": 86, "517677": 86, "223935": 86, "053334": 86, "007023": 86, "931252": 86, "778389": 86, "flag": [87, 269, 291, 302, 303], "origin": [87, 215, 248, 252, 253, 267, 268, 272, 274, 282, 287, 302], "care": [87, 248], "00469307": [90, 91, 92, 149, 183, 195, 208, 213, 289, 291, 293], "fix_paramet": [90, 92, 210, 211, 291], "unfix_paramat": [90, 91, 92, 211], "fix_paramaters_to": [90, 211], "unfix_paramaters_to": [90, 91, 92, 182, 210], "fix_or_unfix_paramet": [91, 92, 210, 211, 291], "fix_parameters_to": [91, 182, 210, 291], "present": [95, 102, 271, 278, 282, 287, 303], "extract": [95, 102, 269, 271, 285, 289], "directli": [96, 248, 252, 253, 269, 271, 279, 287, 289, 291, 296, 303], "cmax": [96, 269, 291], "tmax": [96, 269, 291], "cmin": [96, 269, 291], "tmin": [96, 269, 291], "doseid": [96, 99, 291], "589": [96, 100, 291], "get_baselin": [98, 269, 291], "set_covari": [98, 291], "period": [99, 291], "108": [100, 278, 290, 291], "132": [100, 278, 290, 291, 297], "144": [100, 278, 290, 291, 301], "retriev": [103, 104, 111, 112, 117, 119, 229, 230, 248, 252, 253, 269, 289, 290, 291, 304], "get_pk_paramet": [104, 119, 269], "get_rv_paramet": [104, 117, 135, 269], "has_random_effect": [104, 119, 269], "opr": [105, 114, 118], "get_population_prediction_express": [105, 269], "epress": [105, 118], "condit": [106, 181, 269, 282, 287, 300], "item": [110, 273, 287], "activ": [111, 112, 113, 287], "get_number_of_observ": [111, 115, 269, 291], "get_number_of_observations_per_individu": [111, 112, 115, 269, 291], "total": [112, 269, 291], "get_number_of_individu": [112, 113, 269, 291], "observation_count": 113, "accord": [114, 269, 287, 292, 303], "oeta\u2082": 114, "oeta\u2081": 114, "135": [115, 290, 291, 297, 299], "131": [115, 290, 291], "146": [115, 276, 278, 286, 290, 291], "get_theta": [116, 120, 269], "get_sigma": [116, 121, 269], "get_individual_paramet": [117, 119, 135, 269], "get_individual_prediction_express": [118, 269], "get_omega": [120, 121, 269], "structur": [121, 232, 250, 269, 271, 278, 286, 289, 292, 303], "00": [121, 282, 289, 290, 291, 297, 299, 301, 303], "olumn": 122, "milligram": [122, 278], "liter": [122, 278], "kilogram": [122, 278], "named_subscript": 124, "greek": 124, "subscript": 124, "cleanup_model": [124, 269], "\u03b8\u2081": 124, "\u03b8\u2082": 124, "\u03b8\u2083": 124, "\u03b7\u2081": 124, "\u03b7\u2082": 124, "\u03b5\u2081": 124, "mani": [125, 126, 134, 167, 269, 291], "has_proportional_error_model": [125, 126, 136, 269], "has_combined_error_model": [125, 134, 136, 269], "has_weighted_error_model": [125, 126, 134, 269], "has_additive_error_model": [126, 134, 136, 269], "reli": [128, 131, 132, 138, 287], "heurist": [128, 131, 132, 138], "abl": [128, 131, 132, 138, 269, 281, 283, 295, 296], "detect": [128, 131, 132, 138, 269, 283, 289, 295, 305], "has_od": [129, 130, 269], "has_linear_odes_with_real_eigenvalu": [129, 133, 269], "eigenvalu": 130, "has_linear_od": [130, 133, 269], "micha": [131, 132, 184, 185, 271, 303], "menten": [131, 132, 184, 185, 271, 303], "set_michaelis_menten_elimin": [131, 179, 185, 198, 269, 291], "michali": 132, "set_mixed_mm_fo_elimin": [132, 291], "set_zero_order_elimin": [138, 179, 184, 185, 269, 291], "determin": [139, 140, 165, 284, 286, 287, 292], "model1": [139, 269], "model2": 139, "constraint": [140, 183, 195, 200, 208, 210, 269, 279, 296], "get_covariate_baselin": [141, 269, 291], "load": [142, 220, 283], "statment": 143, "mu": [144, 282], "referenc": 144, "theta_1": [144, 289], "mu_1": [144, 282], "\u03bc\u2081": 144, "\u03bc\u2082": 144, "dataset_or_model": [145, 165], "name_pattern": [145, 165], "omitted_": 145, "omiss": 145, "omit": [145, 271, 276], "placehold": [145, 165], "plot": [146, 147, 148, 269, 282, 288, 296], "alt": [146, 147, 148, 267, 282, 288], "chart": [146, 147, 148, 267], "iofv1": 147, "iofv2": 147, "against": [147, 287], "iofv": [147, 245, 267, 269, 288, 290, 302], "scatterplot": 147, "problem": [149, 153, 269, 276, 281, 284, 286, 287, 288, 291, 293], "subroutin": [149, 269, 287, 291, 293], "advan1": [149, 291, 293], "trans2": [149, 291, 293], "IF": [149, 269, 287, 291], "gt": [149, 291], "lt": [149, 291], "uncondit": [149, 291], "cwre": [149, 244, 245, 290, 291, 299, 300], "npde": [149, 291], "noappend": [149, 291], "noprint": [149, 291], "onehead": [149, 291], "sigma\u2081": [150, 289], "\u2081": [150, 289], "home": [152, 269, 278, 289], "run1": [152, 230, 291], "mod": [152, 248, 250, 269, 271, 278, 289, 290, 291, 303], "read_model_from_databas": [152, 153, 269], "databas": [152, 153, 228, 248, 249, 250, 252, 253, 254, 256, 261, 266, 269], "read_model_from_str": [152, 269, 291], "err": [153, 291], "has_covariate_effect": [155, 269], "unrun": 156, "to_remov": [158, 159, 271], "eta_iov_1_1": 159, "add_lag_tim": [160, 194, 269, 291], "uloq": 161, "736": 161, "add_peripheral_compart": [162, 188, 269, 291], "new_nam": [164, 186], "renam": [164, 269], "clash": [164, 248, 250], "occur": [164, 281, 284, 286, 287], "resampl": [165, 233], "stratifi": [165, 271], "sample_s": [165, 271], "resample_": 165, "randomli": [165, 168], "renumb": [165, 271], "upward": 165, "stratif": [165, 271], "valueerror": 165, "rais": [165, 213, 269], "strata": 165, "suppli": [165, 284, 286, 292, 299], "control": [165, 274, 286, 287, 289], "pattern": [165, 287], "samples_per_id": 166, "pool": [166, 284], "iec": 166, "127941": 166, "037273": 166, "065492": 166, "182851": 166, "263323": 166, "265849": 166, "295883": 166, "060346": 166, "012108": 166, "219967": 166, "034279": 166, "040988": 166, "187879": 166, "143184": 166, "088845": 166, "034655": 166, "187779": 166, "014214": 166, "019953": 166, "151151": 166, "sample_parameters_from_covariance_matrix": [166, 168, 269], "sample_parameters_uniformli": [166, 167, 269], "uniform": [166, 167, 168], "force_posdef_sampl": [167, 168, 271], "force_posdef_covmatrix": [167, 271], "never": [167, 292], "005069": 167, "974989": 167, "204629": 167, "024756": 167, "012088": 167, "012943": 167, "004690": 167, "958431": 167, "233231": 167, "038866": 167, "029000": 167, "012516": 167, "004902": 167, "950778": 167, "128388": 167, "019020": 167, "023866": 167, "013413": 167, "sample_individual_estim": [167, 168, 269], "estiat": [167, 168], "reject": 168, "004878": 168, "908216": 168, "149441": 168, "029179": 168, "025472": 168, "012947": 168, "004828": 168, "014444": 168, "149958": 168, "028853": 168, "027653": 168, "013348": 168, "004347": 168, "053837": 168, "165804": 168, "028465": 168, "026798": 168, "013727": 168, "data_tran": [169, 171, 190, 269], "series_term": 169, "\u00b2": [169, 171], "epsilon_1": [169, 171, 190], "expans": 169, "approxim": [169, 287], "\u03b5\u2090": [169, 171, 291], "set_proportional_error_model": [169, 171, 269, 291], "set_combined_error_model": [169, 190, 269, 291, 300], "epsilon_2": 171, "remove_error_model": [171, 190, 269, 291], "\u03b5\u209a": [171, 190, 291], "set_additive_error_model": [171, 190, 269, 291], "fix_to_log": 174, "dynam": [174, 258, 287], "lambda": [174, 204, 205, 297, 299], "zeta": [174, 297, 299], "emul": 174, "set_bolus_order_absorpt": [178, 191, 197], "list_of_ep": [180, 189], "same_eta": [180, 271], "chosen": [180, 269, 284, 291, 303], "eta_rv1": 180, "set_power_on_ruv": [180, 269, 291, 300], "get_initial_condit": [181, 269], "set_upper_bound": [183, 208, 291], "unconstrain_paramet": [183, 195, 210, 291], "clmm": [184, 185, 198, 291], "km": [184, 185, 198, 269, 291], "set_first_order_elimin": [184, 185, 198, 269, 291], "prefer": [187, 287], "q2": 188, "q3": 188, "v3": 188, "peripheral2": 188, "lower_limit": 189, "zero_protect": [189, 190, 269], "autodetect": 189, "protect": [189, 190, 269, 287], "power\u2081": 189, "set_iiv_on_ruv": [189, 269, 291, 300], "225e": [190, 291], "ipredadj": [190, 291], "sequenti": [191, 269, 271, 292, 303], "quantil": [192, 267, 269], "time_vari": [192, 299, 300], "target": [193, 301], "mediat": 193, "disposit": 193, "ib": 193, "cr": 193, "crib": 193, "qss": 193, "wagner": 193, "mmapp": 193, "tmdd": [193, 232, 241, 269], "keep_depot": [194, 269], "transit1": 194, "transit2": 194, "k23": 194, "transit3": 194, "k34": 194, "k40": 194, "set_lower_bound": [195, 208, 291], "use_thetas_for_error_stdev": [196, 269, 291], "smallest": [198, 291], "get_zero_order_input": [199, 269], "simplifi": [200, 269, 270, 279, 291, 296], "ab": [200, 205, 271, 291], "analyt": 201, "becom": [202, 269, 271, 296], "create_joint_distribut": [202, 269, 291], "m4": [203, 291], "m1": [203, 269, 301], "m3": [203, 291], "beal": 203, "sl": 203, "pharmacodyn": 203, "2001": 203, "oct": 203, "481": 203, "504": 203, "doi": [203, 205, 282, 300], "1023": 203, "1012299115260": 203, "erratum": 203, "2002": 203, "jun": 203, "309": 203, "pmid": 203, "11768292": 203, "cumd": [203, 291], "cumdz": [203, 291], "remove_loq_data": [203, 269, 291], "list_of_eta": [204, 205, 206], "boxcox": [204, 269], "lambda1": [204, 205], "transform_etas_tdist": [204, 205, 269, 291], "transform_etas_john_drap": [204, 206, 269, 291], "john": [205, 269, 271], "draper": [205, 269, 271], "spelect": 205, "1980": 205, "famili": [205, 287], "journal": [205, 300], "royal": 205, "societi": 205, "190": [205, 297], "197": 205, "2307": 205, "2986305": 205, "transform_etas_boxcox": [205, 206, 269, 291], "degre": [206, 299], "freedom": [206, 287, 299], "df1": 206, "translat": [207, 269], "hour": [207, 278], "caution": 207, "account": 207, "unfix_paramet": [208, 269, 291], "had": [212, 287, 291], "move_est_close_to_bound": 213, "00469555": 213, "984258": [213, 220, 290], "15892": 213, "0293508": [213, 289], "027906": [213, 220, 289, 290], "sd_eps_1": 214, "set_weighted_error_model": [214, 269, 291], "whose": [215, 287], "suffix": 215, "overwrit": [215, 216], "newdataset": 215, "report": [217, 269, 274, 285, 296], "recalcul": 218, "frem_dir1": 218, "read_result": [218, 229, 269, 303], "model_or_model": [219, 238], "run_tool": [219, 232, 244, 269], "004696": [220, 290], "158920": [220, 290], "029351": [220, 290], "machin": [221, 222, 223, 248, 252, 253, 278, 283, 287], "learn": [221, 222, 223, 283], "threshold": [221, 222, 223, 271, 276], "signal": [221, 222, 288], "raw": [221, 222, 223, 245, 267, 269, 278], "delta": [221, 267, 269, 288], "tell": [221, 223, 287], "predict_influential_outli": [221, 223, 269], "predict_outli": [221, 222, 269], "outlier_cutoff": 222, "influential_cutoff": 222, "singal": [222, 223], "influential_outli": 222, "predict_influential_individu": [222, 223, 269], "simev": [223, 269, 298], "281443": 223, "057392": 223, "119105": 223, "846849": 223, "600540": 223, "014008": 223, "750734": 223, "247175": 223, "117002": 223, "835389": 223, "529582": 223, "035670": 223, "292333": 223, "303278": 223, "565949": 223, "078192": 223, "291295": 223, "466421": 223, "402343": 223, "699996": 223, "567987": 223, "526776": 223, "303918": 223, "177588": 223, "272142": 223, "390000": 223, "775876": 223, "501528": 223, "700951": 223, "352599": 223, "294196": 223, "744014": 223, "215364": [223, 301], "208691": 223, "713130": 223, "300293": 223, "810736": 223, "459877": 223, "675125": 223, "563835": 223, "526945": 223, "449199": 223, "720714": 223, "792248": 223, "860923": 223, "731858": 223, "247131": 223, "894190": 223, "282737": 223, "153398": 223, "200546": 223, "902774": 223, "586427": 223, "183329": 223, "036930": 223, "639868": 223, "765279": 223, "209665": 223, "225693": 223, "errors_allow": [225, 269], "bic_typ": 225, "rounding_error": 225, "maxevals_exceed": 225, "lrt": 225, "denot": [225, 282, 291], "model_1": [225, 282], "model_2": [225, 282], "create_result": [227, 269], "resum": [228, 232, 261, 271, 303], "resmod_dir1": 228, "retrieve_model": [229, 248, 252, 253, 269, 303], "tooldatabas": [230, 249, 254, 258, 261], "modeldatabas": [230, 248, 250, 256], "tooldir_path": 230, "retrieve_final_model": [230, 269], "allometryresult": 231, "basic_pk": 232, "administraton": 232, "lloq_method": [232, 271], "lloq_limit": [232, 271], "amd": [232, 269, 303], "reult": 232, "basic_pl": 232, "rout": [232, 241], "search": [232, 234, 239, 269, 271, 276, 286, 296, 303], "transform_blq": [232, 269, 271, 291], "runord": [232, 271], "compon": [232, 271, 279, 283, 287, 289, 299], "run_iiv": [232, 269], "bootstrap": [233, 269, 298], "bootstrapresult": [233, 269], "500": 233, "try": [234, 271, 281, 296, 305], "mode": [234, 235, 236, 237, 239, 241, 269, 282, 287], "covsearchresult": 234, "estmethod": [235, 269, 303], "exhaust": [235, 239, 269], "exhaustive_with_upd": [235, 281], "exhaustive_only_ev": [235, 269, 281], "estmethodresult": 235, "reduc": [235, 269, 281, 301], "no_add": [236, 239, 269, 284, 292], "iivsearch": [236, 269, 303], "brute_force_no_of_eta": [236, 284], "brute_force_block_structur": [236, 284], "strategi": [236, 239, 269, 284, 292], "add_diagon": [236, 239, 269, 284, 292], "iivsearchresult": 236, "iovsearch": [237, 269, 303], "iovsearchresult": 237, "modelsearchresult": 239, "max_it": [240, 269], "bin": [240, 299, 305], "attempt": [240, 276, 287], "ruvsearchresult": 240, "structsearch": [241, 269], "structsearchresult": 241, "arg": 242, "kei": [244, 252, 287, 300], "fit_result": 244, "mathrm": [245, 302], "veebar": 245, "least": [245, 287, 303], "outli": [245, 302], "criteria": [245, 269, 271, 276, 284, 286, 292, 300], "include_all_estimation_step": 246, "runtim": [246, 269, 281], "wasn": [246, 269], "estmat": 246, "586": [246, 288, 290], "276056": [246, 288], "again": [247, 305], "Not": [247, 278, 287], "file_extens": [248, 250], "nontransactionalmodeldatabas": [248, 253], "implement": [248, 250, 252, 253, 287, 289, 296, 303], "local": [248, 249, 250, 252, 253, 254, 256, 274, 284, 287], "store": [248, 249, 250, 252, 253, 254, 256, 269, 293, 303], "modelnam": 248, "recommend": [248, 305], "localmodeldirectorydatabas": 248, "retrieve_fil": [248, 252, 253], "filesystem": [248, 252, 253], "model_nam": [248, 250, 252, 253, 282], "retrieve_local_fil": [248, 252, 253], "destination_path": [248, 252, 253], "retrieve_modelfit_result": [248, 252, 253], "store_local_fil": [248, 249, 252, 253, 254, 256], "new_filenam": [248, 252, 253], "store_metadata": [248, 249, 252, 253, 254, 256], "store_model": [248, 252, 253], "store_modelfit_result": [248, 252, 253], "toolnam": [249, 254, 256, 303], "exist_ok": 249, "read_metadata": [249, 254, 256], "source_path": [249, 254, 256], "store_result": [249, 254, 256], "transactionalmodeldatabas": 250, "subdirectori": [250, 303], "list_model": 250, "snapshot": [250, 252], "context": [250, 252, 287, 296], "transact": [250, 252, 287], "writabl": [250, 252], "timestamp": 251, "log_error": 251, "log_warn": 251, "abc": [252, 256], "baseclass": 252, "primari": 252, "center": 252, "around": [252, 272], "belong": 252, "dummi": [253, 254], "anyth": [253, 254, 274, 284, 287], "task_input": 255, "model_databas": 256, "task": [257, 295, 296], "acycl": 257, "node": [257, 258], "edg": 257, "wf": 258, "unique_nam": 258, "db": 258, "dask": [258, 269, 296], "whatev": [258, 287], "alia": [259, 260], "localdirectorydatabas": [259, 266], "localdirectorytooldatabas": [260, 266, 303], "dispatch": [261, 266, 269, 303], "execut": [261, 269, 287], "executiondispatch": 261, "default_dispatch": 266, "local_dask": [266, 303], "default_model_databas": 266, "default_tool_databas": 266, "psn": [267, 268, 269, 271, 277, 282, 288, 297, 299, 301, 302, 303, 304], "parameter_statist": 267, "bia": [267, 269], "rse": [267, 290], "divid": [267, 271, 293], "005856": 267, "005820": 267, "000038": 267, "000487": 267, "083167": 267, "455435": 267, "443165": 267, "009885": 267, "099305": 267, "068231": 267, "141376": 267, "109797": 267, "030323": 267, "114986": 267, "813337": 267, "195880": 267, "195844": 267, "005646": 267, "046548": 267, "237634": 267, "015546": 267, "015112": 267, "000872": 267, "003434": 267, "220871": 267, "parameter_distribut": 267, "lowest": [267, 282], "highest": [267, 269, 282, 293], "interpol": 267, "fall": [267, 269], "x_0": 267, "x_1": 267, "np": [267, 278, 289], "004762": 267, "004767": [267, 276], "004805": 267, "004974": 267, "005120": 267, "211220": 267, "214364": 267, "242657": 267, "290449": 267, "307106": 267, "000011": 267, "012961": 267, "100104": 267, "100376": 267, "102825": 267, "116900": 267, "125456": 267, "007812": 267, "007857": 267, "008261": 267, "009741": 267, "011116": 267, "006669": 267, "006685": 267, "007429": 267, "007593": 267, "007612": 267, "613679": 267, "646879": 267, "726604": 267, "730551": 267, "730990": 267, "338957": 267, "371005": 267, "536153": 267, "545316": 267, "546334": 267, "281203": 267, "300874": 267, "306057": 267, "306101": 267, "306106": 267, "021677": 267, "023708": 267, "025429": 267, "026581": 267, "026710": 267, "parameter_estimates_histogram": 267, "histogram": [267, 269], "repeatchart": 267, "005298": 267, "30730": 267, "074931": 267, "136423": 267, "011374": 267, "006048": 267, "38692": 267, "029844": 267, "189763": 267, "019143": 267, "005624": 267, "53224": 267, "118806": 267, "219550": 267, "019831": 267, "005771": [267, 276], "40115": 267, "034322": 267, "150905": 267, "012287": 267, "005933": 267, "42119": 267, "074050": 267, "171158": 267, "017394": 267, "005275": 267, "59087": 267, "289793": 267, "248009": 267, "016396": 267, "005847": 267, "44711": 267, "109860": 267, "206296": 267, "016346": 267, "005939": 267, "52688": 267, "040057": 267, "210552": 267, "013631": 267, "005998": 267, "41948": 267, "192046": 267, "175269": 267, "013485": 267, "005479": 267, "43956": 267, "109733": 267, "197253": 267, "011771": 267, "ofv_statist": 267, "bootstrap_bootdata_ofv": 267, "original_bootdata_ofv": 267, "sum": [267, 277], "bootstrap_origdata_ofv": 267, "boostrap": 267, "original_origdata_ofv": 267, "delta_bootdata": 267, "delta_origdata": 267, "722": 267, "220925": 267, "386171": 267, "134966": 267, "245796": 267, "929008": 267, "620085": 267, "523805": 267, "737": 267, "632473": 267, "951710": 267, "024871": 267, "110934": 267, "218525": 267, "629078": 267, "737746": 267, "ofv_distribut": 267, "parameter_distriut": 267, "601": 267, "007583": 267, "602": 267, "266529": 267, "613": 267, "597036": 267, "641": 267, "950291": 267, "621": 267, "273905": 267, "622": 267, "073513": 267, "629": 267, "269987": 267, "806391": 267, "915431": 267, "955989": 267, "731": 267, "321004": 267, "879050": 267, "021463": 267, "059207": 267, "398901": 267, "299364": 267, "020705": 267, "061262": 267, "426277": 267, "984323": 267, "879224": 267, "788": 267, "101562": 267, "803": 267, "869362": 267, "661": 267, "714778": 267, "121734": 267, "810": [267, 290], "417314": 267, "732": 267, "165644": 267, "757": 267, "877092": 267, "369737": 267, "671690": 267, "375800": 267, "162811": 267, "270917": 267, "982365": 267, "475010": 267, "828": 267, "178008": 267, "839": 267, "691272": 267, "840": [267, 297], "970524": 267, "836": 267, "395339": 267, "846": 267, "981350": 267, "848": 267, "157573": 267, "859": 267, "964343": 267, "893": [267, 284], "228440": 267, "896": [267, 282], "924451": 267, "443675": 267, "246668": 267, "558111": 267, "129": 267, "069616": 267, "162": 267, "333713": 267, "166": 267, "029724": 267, "ofv_plot": 267, "layerchart": [267, 288], "dofv_quantiles_plot": 267, "show": [267, 271, 282, 287, 299, 302], "metric": [267, 268, 290], "chi": 267, "squar": 267, "907310": 267, "911844": 267, "750": 267, "388987": 267, "670": 267, "684132": 267, "675": 267, "846450": 267, "738": 267, "099607": 267, "248779": 267, "734": 267, "876739": 267, "733": [267, 300], "182039": 267, "626": 267, "440820": 267, "637": 267, "427606": 267, "748": 267, "285576": 267, "239599": 267, "025253": 267, "519551": 267, "781": 267, "380852": 267, "793": 267, "303365": 267, "994494": 267, "754": 267, "666705": 267, "688168": 267, "664": 267, "288159": 267, "671": 267, "883942": 267, "255718": 267, "974215": 267, "332959": 267, "052283": 267, "689": 267, "940217": 267, "693": 267, "963948": 267, "735": 267, "763734": 267, "004534": 267, "494261": 267, "162318": 267, "204881": 267, "627961": 267, "287312": 267, "986786": 267, "390849": 267, "785654": 267, "624824": 267, "922512": 267, "099768": 267, "595783": 267, "360991": 267, "358744": 267, "157557": 267, "023731": 267, "869007": 267, "372000e": 267, "000015": 267, "000003": 267, "098000e": 267, "462220e": 267, "009862": 267, "002316": 267, "002320": 267, "320640e": 267, "531300e": 267, "013222": 267, "000146": 267, "961337e": 267, "572900e": 267, "002167": 267, "014550e": 267, "000033": 267, "000196": 267, "178980e": 267, "included_individu": 267, "case_result": [268, 269], "cook_scor": 268, "jackknife_cook_scor": 268, "delta_ofv": 268, "dofv_influenti": 268, "130159": 268, "121389": 268, "015207": 268, "348263": 268, "336159": 268, "144045": 268, "192433": 268, "181125": 268, "031030": 268, "163095": 268, "155901": 268, "026142": 268, "422651": 268, "404915": 268, "190732": 268, "374312": 268, "343311": 268, "097063": 268, "169869": 268, "163883": 268, "026223": 268, "263865": 268, "254943": 268, "058123": 268, "757098": 268, "673587": 268, "477910": 268, "150161": 268, "144191": 268, "023623": 268, "361646": 268, "352901": 268, "217902": 268, "255533": 268, "215005": 268, "035375": 268, "191848": 268, "187019": 268, "038199": 268, "376365": 268, "337975": 268, "096680": 268, "142806": 268, "137340": 268, "014709": 268, "193393": 268, "179744": 268, "031711": 268, "131746": 268, "122842": 268, "020637": 268, "176644": 268, "932149": 268, "036787": 268, "128197": 268, "120498": 268, "019030": 268, "141093": 268, "138101": 268, "029021": 268, "176582": 268, "153583": 268, "035291": 268, "104396": 268, "100064": 268, "015499": 268, "552071": 268, "501458": 268, "278595": 268, "242334": 268, "217068": 268, "047627": 268, "792099": 268, "715951": 268, "798775": 268, "135247": 268, "133493": 268, "021356": 268, "442779": 268, "424958": 268, "125763": 268, "132903": 268, "127188": 268, "010157": 268, "081122": 268, "076790": 268, "005443": 268, "183624": 268, "168501": 268, "027707": 268, "113959": 268, "111168": 268, "012363": 268, "532749": 268, "515747": 268, "325048": 268, "094133": 268, "091212": 268, "014747": 268, "447798": 268, "406737": 268, "194457": 268, "364978": 268, "352973": 268, "124295": 268, "270838": 268, "252922": 268, "063675": 268, "129553": 268, "121963": 268, "014043": 268, "254914": 268, "243250": 268, "064025": 268, "207529": 268, "194633": 268, "046887": 268, "239182": 268, "218112": 268, "044252": 268, "181986": 268, "173826": 268, "020285": 268, "604112": 268, "584208": 268, "604211": 268, "407717": 268, "369648": 268, "154161": 268, "215722": 268, "196744": 268, "043742": 268, "214167": 268, "200091": 268, "036238": 268, "094284": 268, "089002": 268, "007506": 268, "074174": 268, "072365": 268, "007535": 268, "743323": 268, "717468": 268, "654313": 268, "153971": 268, "147360": 268, "014502": 268, "284706": 268, "278460": 268, "072960": 268, "331587": 268, "309374": 268, "116933": 268, "447965": 268, "421612": 268, "129593": 268, "184872": 268, "175196": 268, "029896": 268, "430382": 268, "415446": 268, "141657": 268, "409307": 268, "369197": 268, "189729": 268, "084764": 268, "079718": 268, "007416": 268, "107600": 268, "103145": 268, "013947": 268, "154672": 268, "150761": 268, "028236": 268, "155632": 268, "150461": 268, "034848": 268, "covariance_ratio": 268, "skipped_individu": 268, "050505": 268, "963884": 268, "058896": 268, "087449": 268, "985403": 268, "029066": 268, "101636": 268, "086424": 268, "017369": 268, "094799": 268, "849310": 268, "121111": 268, "049151": 268, "096456": 268, "070088": 268, "040691": 268, "065881": 268, "606158": 268, "205007": 268, "099191": 268, "143483": 268, "050691": 268, "086007": 268, "156273": 268, "919336": 268, "056714": 268, "999221": 268, "029600": 268, "034017": 268, "108785": 268, "038495": 268, "954054": 268, "053618": 268, "096334": 268, "943556": 268, "125423": 268, "086167": 268, "145822": 268, "113939": 268, "114399": 268, "057664": 268, "788608": 268, "063991": 268, "115559": 268, "160549": 268, "034685": 268, "035618": 268, "714976": 268, "092664": 268, "089158": 268, "054565": 268, "002555": 268, "032356": 268, "003056": 268, "936719": 268, "122771": 268, "078285": 268, "096841": 268, "068821": 268, "sqrt": [268, 291], "p_i": 268, "p_": 268, "orig": 268, "operatornam": [268, 282, 302], "sum_": 268, "overlin": [268, 282], "_j": 268, "_k": [268, 282], "det": 268, "Then": [268, 282, 291], "ofv_": 268, "iofv_": 268, "iofv_k": 268, "ofv_k": 268, "case_column": 268, "rikard": [268, 270, 275, 296, 300], "nordgren": [268, 270, 275, 296, 300], "sebastian": [268, 270, 275], "ueckert": [268, 270, 275], "svetlana": 268, "freiberga": 268, "karlsson": [268, 270, 275, 282, 300], "faster": [268, 269, 296], "2018": [268, 287, 300], "abstr": [268, 270], "8683": 268, "www": [268, 270, 287], "meet": [268, 270, 272, 287, 296], "set_direct_effect": 269, "add_effect_compart": 269, "reorgan": 269, "saddl": 269, "llq": 269, "preced": 269, "reorder": 269, "incorrectli": 269, "ofv_iter": 269, "parameter_estimates_iter": 269, "caus": [269, 287, 296], "model4": 269, "frem": [269, 289, 298, 299], "create_report": 269, "write_model": [269, 289, 291, 293], "did": [269, 301], "dadt": [269, 291], "de": [269, 291], "complex": [269, 274, 283], "set_zero_order_input": 269, "set_tmdd": 269, "plugin": [269, 274, 279, 280, 285], "generate_model_cod": 269, "get_model_cod": 269, "advan7": 269, "didn": 269, "header": 269, "is_linear": 269, "plot_transformed_eta_distribut": 269, "create_config_templ": [269, 273], "get_dv_symbol": 269, "set_initial_condit": 269, "abbr": [269, 291, 293], "create_basic_pk_model": [269, 291], "add_metabolit": 269, "set_dvid": [269, 291], "regress": 269, "defdos": [269, 291], "sometim": 269, "wrong": 269, "bad": 269, "1551": 269, "is_real": 269, "advan5": 269, "copy_model": 269, "nlmixr2": [269, 285, 291], "display_od": 269, "rework": 269, "run_covsearch": [269, 276], "explicitodesystem": 269, "eval": 269, "successfulli": [269, 305], "round": [269, 278], "subtool": [269, 303], "proxi": [269, 287], "1314": 269, "1355": [269, 276], "1378": [269, 284], "typo": 269, "1377": 269, "1381": 269, "1064": [269, 284], "afd7707": 269, "1139": 269, "1394": 269, "too": [269, 287], "1117": 269, "timeout": 269, "loop": 269, "wait": 269, "lst": [269, 303], "much": [269, 296], "phi": [269, 274, 291, 303], "correctli": 269, "ncomp": 269, "deidentify_data": [269, 291], "cli": 269, "anonym": 269, "setter": 269, "multivari": 269, "1293": 269, "1302": [269, 276], "1303": [269, 292], "last20": 269, "run_modelsearch": [269, 292, 303], "run_iovsearch": [269, 286], "run_ruvsearch": [269, 300], "run_iivsearch": [269, 284], "nomem": 269, "rh": 269, "1180": 269, "1162": 269, "1032": 269, "add_covariate_effect": [269, 291], "1004": 269, "remove_covariate_effect": [269, 291], "1181": 269, "9fd701521": 269, "best_model": 269, "final_model_nam": 269, "a7fbcbfe2": 269, "update_initial_individual_estim": 269, "modelsearch_candidate1": [269, 292, 303], "modifi": [269, 278, 287, 294, 304], "wors": 269, "calculate_b": [269, 284, 286, 292], "calculate_a": 269, "check_parameters_near_bound": 269, "check_high_correl": 269, "plot_iofv_vs_iofv": 269, "plot_individual_predict": 269, "evaluate_express": 269, "evaluate_weighted_residu": 269, "parameter_esimt": 269, "calculate_pk_parameters_statist": 269, "update_init": [269, 291], "predict_": 269, "print_fit_summari": 269, "write_result": 269, "rank_model": 269, "speedup": 269, "297a64041": 269, "individual_ofv": [269, 290], "1101": 269, "57fc4fee8": 269, "fd417aaf": 269, "convert_model": [269, 291], "d5458e36": 269, "keyerror": 269, "localmodeldirectori": 269, "filenotfounderror": 269, "1193bd39": 269, "unus": 269, "submodul": 269, "bb96a13c": 269, "update_paramet": 269, "0ca786c5": 269, "dd056da3": 269, "915bc9c7": 269, "get_config_path": [269, 273], "disabl": [269, 272, 273], "82b32278": 269, "unwant": 269, "debug": 269, "1131a610": 269, "ebfafb45": 269, "1173": 269, "fb070ee1": 269, "1049": [269, 284], "pyreadr": 269, "easier": [269, 279, 289], "instal": [269, 271, 273, 287, 304], "mac": [269, 274], "get_evid": [269, 291], "get_cmt": [269, 291], "resmod": [269, 298], "916": 269, "strict": [269, 287], "1055": 269, "attibut": 269, "1092": 269, "exlud": 269, "unreport": 269, "1076": 269, "988": 269, "1c65359": 269, "42fe72f": 269, "1001": 269, "lead": 269, "uneven": 269, "branch": [269, 274], "stepwis": [269, 276, 301, 303], "694": 269, "properli": 269, "708": 269, "comment": [269, 293], "790": 269, "974": [269, 297], "produc": [269, 287], "1017": 269, "989": 269, "71f4cf23": 269, "dsl": 269, "932": 269, "973": 269, "cfc09bad": 269, "975": 269, "917": 269, "977": 269, "908": 269, "fd564168": 269, "088a046a": 269, "c76fa476": 269, "430f1d2e": 269, "make_declar": 269, "greekify_model": 269, "find_clearance_paramet": 269, "find_volume_paramet": 269, "vp": 269, "newer": 269, "820": [269, 290], "seprat": 269, "sporad": 269, "race": [269, 272], "lazi": 269, "duplic": 269, "745": 269, "1st": 269, "3rd": 269, "710": 269, "licens": [269, 273], "advanx": 269, "add_time_after_dos": [269, 291], "intercompartment": 269, "defob": 269, "choos": [269, 284, 287, 292, 293, 294], "gl": 269, "solve_ode_system": 269, "meta": 269, "switch": [269, 296], "read_dataset_from_datainfo": [269, 291], "addl": 269, "linalgerror": 269, "656": [269, 284], "tflite": [269, 283], "649": 269, "mdt": [269, 291], "654": 269, "expand_additional_dos": [269, 291], "better": [269, 292, 300], "modelsyntaxerror": 269, "588": 269, "625": [269, 284], "578": 269, "vc1": 269, "577": 269, "success": [269, 272, 276, 281, 284, 286], "632": [269, 297], "636": 269, "590": 269, "gl_real": 269, "sampled_iofv": [269, 302], "version": [269, 271, 283, 287, 303], "subblock": 269, "check_dataset": [269, 291], "tensorflow": 269, "modelbuild": 269, "add_mdt_iiv": 269, "three": [269, 279, 287, 293], "add_eta": [269, 299], "etas_as_fullblock": 269, "iiv_as_fullblock": 269, "add_mdt_eta": 269, "wip": 269, "don": 269, "calculate_se_from_inf": 269, "calculate_cov_from_inf": 269, "calculate_inf_from_cov": 269, "calculate_inf_from_corrs": 269, "calculate_corr_from_inf": 269, "528": 269, "457": 269, "translate_nmtran_tim": [269, 291], "print_model_cod": [269, 283, 291], "has_michaelis_menten_elimin": 269, "has_zero_order_elimin": 269, "has_first_order_elimin": 269, "has_mixed_mm_fo_elimin": 269, "2c": 269, "1c": 269, "timevari": 269, "create_symbol": 269, "remove_unused_parameters_and_rv": 269, "mu_reference_model": 269, "simplify_express": 269, "bump_model_numb": 269, "get_doseid": [269, 291], "get_unit_of": 269, "get_concentration_parameters_from_data": [269, 291], "write_csv": 269, "resample_data": 269, "omit_data": 269, "get_observation_express": 269, "get_individu": 269, "get_dos": [269, 291], "list_time_varying_covari": [269, 291], "estmeth": 269, "optim": [269, 279, 289, 296], "incorrect": 269, "add_allometri": [269, 291], "insert_aft": 269, "modelstat": 269, "power_on_ruv": 269, "estimationmethod": 269, "guard": 269, "avoid": [269, 279, 287, 305], "cdd": 269, "bipp": [269, 271], "5000": 269, "shift": 269, "nest": 269, "due": [269, 300], "set_dtbs_error_model": [269, 291], "dure": [269, 305], "logger": 269, "parametr": 269, "broken": 269, "parallel": [269, 303], "print_model_symbol": 269, "get_observ": [269, 291], "parameter_sampl": 269, "api": [269, 279, 291, 295, 296, 304], "improv": [269, 299], "eta_shrinkag": 269, "summarize_model": 269, "window": [269, 274, 283, 287], "rstudio": [269, 296, 305], "zero_order_absorpt": 269, "first_order_absorpt": 269, "bolus_absorpt": 269, "set_bolus_absorpt": [269, 291], "seq_zo_fo_absorpt": 269, "set_seq_zo_fo_absorpt": [269, 291], "have_zero_order_absorpt": 269, "has_zero_order_absorpt": 269, "individual_shrinkag": 269, "individual_parameter_statist": 269, "pk_paramet": 269, "create_rv_block": 269, "split_rv_block": 269, "nind": 269, "nob": 269, "nobsi": 269, "remove_error": 269, "additive_error": 269, "proportional_error": 269, "combined_error": 269, "has_additive_error": 269, "has_proportional_error": 269, "has_combined_error": 269, "theta_as_stdev": 269, "set_dtbs_error": 269, "tdist": [269, 297], "john_drap": 269, "add_paramet": 269, "add_individual_paramet": 269, "first_order_elimin": 269, "zero_order_elimin": 269, "michaelis_menten_elimin": 269, "mixed_mm_fo_elimin": 269, "revert": 269, "thread": [269, 272], "site": 269, "crossval": [269, 298], "qa": [269, 298], "plain": [269, 273, 274], "sdcorr": 269, "data_transform": 269, "evalut": 269, "dependent_variable_symbol": 269, "releas": [269, 287, 305], "claus": 269, "interfac": [269, 279, 283, 285, 287, 289, 291, 296, 304, 305], "com": 269, "stdin": 269, "123": [269, 276, 284, 286, 290, 292, 300], "clearer": 269, "prioriti": [269, 293], "aggregatedmodelfitresult": 269, "priorit": [269, 293], "half": [269, 297, 299], "life": [269, 297, 299], "set_nam": 269, "parameter_init": 269, "base_parameter_chang": [269, 282], "parameter_vari": [269, 282, 299], "coeffici": 269, "frem_result": 269, "simevalresult": 269, "nonfixed_init": 269, "parameterset": 269, "migrat": 269, "github": [269, 274, 283, 285, 296, 305], "action": [269, 271, 272, 274, 287, 296], "columntyp": 269, "to_base_model": 269, "comined_mm_fo_elimin": 269, "absorption_r": 269, "pretti": 269, "qaresult": 269, "nmtranparseerror": 269, "error_model": 269, "pharmpyconfigpath": [269, 273], "environ": [269, 272, 304, 305], "linearizeresult": 269, "reset_indic": 269, "multiindic": 269, "functionsadd_lag_tim": 269, "yaml": 269, "view": [269, 287, 301], "assumpt": [269, 287], "0th": [269, 271], "parser": [269, 296], "individul": 269, "extend": [269, 287, 299, 301], "postprocess": [269, 298], "librari": [269, 283, 285, 287, 296, 305], "stella": [270, 275, 296], "belin": [270, 275, 296], "gunnar": [270, 275], "yngman": [270, 275, 282], "simon": [270, 275], "carter": [270, 275], "buatoi": [270, 275], "jo\u00e3o": [270, 275], "abrant": [270, 275], "andrew": [270, 275], "hooker": [270, 275], "assemblerr": 270, "novel": 270, "process": [270, 300], "2021": [270, 282], "9656": 270, "subcommand": 271, "top": [271, 278, 303], "often": [271, 274, 289, 301], "help": [271, 272, 276, 291, 296, 303, 305], "verb": 271, "particular": [271, 272, 274, 278, 287, 288], "welcom": [271, 272, 274, 287], "usag": 271, "exit": 271, "program": [271, 272, 283, 287], "pheno_r": [271, 278, 289, 290, 291], "prettyprint": 271, "output_fil": 271, "idcol": 271, "datecol": 271, "match": 271, "pager": 271, "stdout": [271, 303], "datasetsmultipl": 271, "1th": 271, "quot": 271, "comb": 271, "elimini": 271, "propot": 271, "error_typ": 271, "givenbi": 271, "cov_sampl": 271, "posdef": 271, "non_fix": 271, "input_path": 271, "particip": 272, "project": [272, 274, 285, 287, 305], "made": [272, 287, 289], "member": 272, "globe": 272, "divers": 272, "skill": [272, 296], "person": [272, 287], "experi": 272, "growth": 272, "everyon": [272, 274, 287], "guidelin": 272, "insid": [272, 287], "goal": 272, "inclus": [272, 287, 299], "grow": 272, "pledg": 272, "treat": [272, 274, 287], "peopl": 272, "harass": 272, "bulli": 272, "regardless": [272, 287, 289], "sexual": 272, "orient": 272, "gender": 272, "ident": 272, "appear": [272, 305], "nation": [272, 275], "ethnic": 272, "religion": 272, "imageri": 272, "sexist": 272, "racist": 272, "exclusionari": 272, "joke": 272, "acknowledg": [272, 287], "citat": 272, "request": [272, 274], "author": [272, 287], "own": [272, 273, 279, 287], "cite": 272, "those": [272, 287, 291, 303], "realiz": 272, "varieti": 272, "opinion": 272, "background": 272, "serv": [272, 287, 296], "enrich": 272, "discuss": 272, "pro": 272, "con": 272, "technologi": 272, "proactiv": 272, "ensur": [272, 287], "heard": 272, "feel": [272, 296], "confid": 272, "freeli": 272, "question": 272, "answer": 272, "respectfulli": 272, "pai": 272, "attent": 272, "feedback": 272, "forum": 272, "especi": 272, "contribut": [272, 285, 287], "conscienti": 272, "percept": 272, "wider": 272, "respond": 272, "strive": 272, "behavior": 272, "encourag": [272, 274, 279, 285], "product": [272, 281, 287], "debat": 272, "disagr": 272, "entir": [272, 274, 287, 303], "silent": 272, "violat": [272, 287], "contact": [272, 287], "talk": 272, "privat": [272, 287], "situat": 272, "onlin": 272, "offlin": 272, "mail": [272, 287], "social": 272, "media": 272, "confer": 272, "associ": [272, 286, 287], "adapt": [272, 287, 296], "astropi": 272, "global": [273, 305], "nonmen": 273, "conf": 273, "ini": [273, 291], "default_nonmem_path": 273, "nmfe751": 273, "licfil": 273, "rpath": 273, "temporarili": 273, "pharmpyconfigfil": 273, "your": [274, 283, 285, 287, 293, 303, 305], "bug": 274, "appreci": 274, "suggest": [274, 285], "suitabl": [274, 296], "student": [274, 296], "commun": [274, 287], "aspir": 274, "conduct": [274, 292], "foster": 274, "linux": [274, 283], "maco": [274, 283], "ll": [274, 291], "badg": 274, "pip": [274, 283], "python3": 274, "pip3": 274, "guid": [274, 278, 289, 291], "former": 274, "ubuntu": 274, "apt": 274, "url": [274, 283], "render": [274, 287, 296], "On": [274, 296], "sudo": 274, "brew": 274, "unnecessari": [274, 287], "thing": [274, 287], "instruct": [274, 283, 290, 303], "black": 274, "formatt": 274, "flake8": 274, "linter": 274, "isort": 274, "lint": 274, "reformat": 274, "py39": 274, "test_paramet": 274, "py": [274, 283], "test_get_theta": 274, "apart": 274, "suit": 274, "purpos": [274, 287], "test_modelsearch": 274, "test_summary_individu": 274, "pull": 274, "manag": 274, "contributor": [274, 287], "emploi": 274, "commit": [274, 287], "push": 274, "name_of_branch": 274, "deploy": 274, "setup": 274, "pypi": [274, 283], "io": [274, 279, 283], "trigger": [274, 289], "tag": 274, "changelog": 274, "bump": 274, "semant": 274, "bumpvers": 274, "cfg": 274, "sh": 274, "patch": 274, "minor": 274, "major": [274, 287], "copyright": 274, "necessari": [274, 287], "coi": 274, "stream": [274, 289], "verbatim": [274, 287], "farmaci": 275, "uu": 275, "kajsa": 275, "harl": 275, "zhe": [275, 296], "huang": [275, 296], "aurelien": 275, "oom": 275, "johan": 275, "borg": 275, "antonia": 275, "hufnagl": 275, "piyanan": 275, "assawasuwannakit": 275, "xiaomei": 275, "chen": 275, "alzahra": 275, "hamdan": 275, "osama": 275, "qutishat": 275, "shijun": 275, "wang": 275, "tianwu": 275, "yang": 275, "keqi": 275, "shi": 275, "xuanlin": 275, "liu": 275, "samia": 275, "moham": 275, "yersultan": 275, "mirasbekov": 275, "warm": 275, "thank": 275, "sponsor": 275, "hoffman": 275, "la": 275, "roch": 275, "ltd": 275, "pharmetheu": 275, "uppsala": [275, 285], "univers": [275, 285], "enabl": [275, 287], "resourc": 275, "swedish": 275, "infrastructur": 275, "snic": 275, "uppmax": 275, "research": [275, 296], "council": 275, "inter": [276, 284, 291], "five": 276, "sentenc": 276, "manual": [276, 278, 303], "rewritten": 276, "notic": [276, 287], "semicolon": 276, "mox2": [276, 281, 284, 286, 292, 303], "covsearch_run7": 276, "covsearch_run8": 276, "covsearch_run9": 276, "covsearch_run10": 276, "covsearch_run11": 276, "covsearch_run12": 276, "covsearch_run13": 276, "covsearch_run14": 276, "covsearch_run15": 276, "covsearch_run16": 276, "covsearch_run17": 276, "covsearch_run18": 276, "covsearch_run19": 276, "covsearch_run20": 276, "covsearch_run21": 276, "covsearch_run22": 276, "covsearch_run23": 276, "covsearch_run24": 276, "covsearch_run25": 276, "covsearch_run26": 276, "covsearch_run27": 276, "covsearch_run28": 276, "covsearch_run29": 276, "covsearch_run30": 276, "covsearch_run31": 276, "covsearch_run32": 276, "covsearch_run33": 276, "covsearch_run34": 276, "covsearch_run35": 276, "covsearch_run36": 276, "covsearch_run37": 276, "covsearch_run38": 276, "covsearch_run39": 276, "covsearch_run40": 276, "covsearch_run41": 276, "covsearch_run42": 276, "covsearch_run43": 276, "covsearch_run44": 276, "covsearch_run45": 276, "covsearch_run46": 276, "covsearch_run47": 276, "covsearch_run48": 276, "covsearch_run49": 276, "covsearch_run50": 276, "covsearch_run51": 276, "covsearch_run52": 276, "covsearch_run53": 276, "covsearch_run54": 276, "pvalu": [276, 301], "goal_pvalu": [276, 301], "is_backward": [276, 301], "047127e": 276, "710000e": 276, "568110e": 276, "494490e": 276, "498453e": 276, "459287e": 276, "280678e": 276, "923500e": 276, "003390e": 276, "984500e": 276, "372293e": 276, "176965e": 276, "207550e": 276, "626878e": 276, "564495e": 276, "539960e": 276, "762000e": 276, "823200e": 276, "417058e": 276, "759040e": 276, "469024e": 276, "811054e": 276, "642452e": 276, "840779e": 276, "261720e": 276, "651215e": 276, "954671e": 276, "163414e": 276, "926594e": 276, "491049e": 276, "423998e": 276, "706676e": 276, "374390e": 276, "054865e": 276, "105347e": 276, "300000e": 276, "029682e": 276, "641559e": 276, "748923e": 276, "363918e": 276, "203548e": 276, "052323e": 276, "567877e": 276, "507358e": 276, "510000e": 276, "1292": [276, 281, 284, 286, 292], "186761": [276, 281, 284, 286, 292], "742325": 276, "929085": 276, "315057": 276, "1346": 276, "501817": 276, "978215": 276, "1332": 276, "164976": 276, "062682": 276, "1312": 276, "249442": 276, "061671": 276, "248431": 276, "056538": 276, "1313": [276, 292], "243298": 276, "732689": 276, "919450": 276, "651626": 276, "1335": 276, "838386": 276, "814832": 276, "1334": 276, "001593": 276, "363759": 276, "550520": 276, "989077": 276, "175838": 276, "136326": 276, "323087": 276, "387950": 276, "1316": 276, "574711": 276, "961688": 276, "148448": 276, "743393": 276, "930153": 276, "617998": 276, "1340": 276, "804759": 276, "641996": 276, "1345": 276, "828756": 276, "288366": 276, "1357": 276, "475127": 276, "263168": 276, "1343": [276, 284], "449928": 276, "814686": 276, "1319": 276, "001446": 276, "181808": 276, "368568": 276, "957602": 276, "144362": 276, "567343": 276, "1347": 276, "754104": 276, "426389": 276, "613149": 276, "324567": 276, "1358": [276, 291], "511327": 276, "446030": 276, "632790": 276, "549224": 276, "1326": 276, "735985": 276, "997342": 276, "184102": 276, "617389": 276, "1351": 276, "804150": 276, "900404": 276, "1350": 276, "087164": 276, "566615": 276, "1391": 276, "753375": 276, "929659": 276, "1352": 276, "116420": 276, "990522": 276, "177283": 276, "217267": 276, "404028": 276, "62": [276, 297], "729333": 276, "1354": 276, "916093": 276, "379219": 276, "1393": 276, "565980": 276, "67": [276, 299, 301], "670588": 276, "1359": 276, "857348": 276, "016040": 276, "202801": 276, "926496": 276, "113256": 276, "139": 276, "462177": 276, "1431": 276, "648937": 276, "83": [276, 297, 299], "706655": 276, "1375": 276, "893415": 276, "798603": 276, "1367": 276, "985364": 276, "801019": 276, "1438": 276, "987780": 276, "92": 276, "443408": 276, "1384": 276, "630169": 276, "997461": 276, "1439": 276, "184221": 276, "322869": 276, "509630": 276, "925020": 276, "111781": 276, "142": 276, "814402": 276, "1435": 276, "001163": 276, "862830": 276, "049591": 276, "449696": 276, "636456": 276, "801017": 276, "987778": 276, "89": [276, 292], "86": 276, "1414": 276, "872375": 276, "93": [276, 281], "810457": 276, "76": 276, "630168": 276, "68": 276, "5328": [276, 281, 284, 286, 292], "2300": [276, 281, 284, 292], "433676": [276, 281, 284, 286, 292], "2632": 276, "2400": 276, "447194": 276, "8757": 276, "106": [276, 284, 297, 299, 300], "2690": 276, "429235": 276, "4824": 276, "0490": 276, "435646": 276, "1536": 276, "7690": 276, "430342": 276, "9763": 276, "102": 276, "8640": 276, "428158": 276, "9807": 276, "1030": 276, "505090": 276, "3823": 276, "4790": 276, "453248": 276, "3323": 276, "5279": 276, "434088": 276, "7087": 276, "109": [276, 292], "1750": 276, "459561": 276, "8501": 276, "4740": 276, "428178": 276, "4821": 276, "0270": 276, "435683": 276, "1635": 276, "5920": 276, "433194": 276, "0931": 276, "1120": 276, "435607": 276, "1216": 276, "2180": 276, "519385": 276, "3873": 276, "4580": 276, "453399": 276, "4279": 276, "6231": 276, "442192": 276, "9115": 276, "9240": 276, "466270": 276, "7337": 276, "9590": 276, "409478": 276, "3781": 276, "415011": 276, "1007": 276, "5110": 276, "446059": 276, "1211": 276, "8490": 276, "522201": 276, "2833": 276, "7400": 276, "430777": 276, "3688": 276, "9010": 276, "444906": 276, "9130": 276, "7450": 276, "468161": 276, "8124": 276, "7120": 276, "407766": 276, "3789": 276, "2080": 276, "416694": 276, "1985": 276, "6770": 276, "441794": 276, "2994": 276, "94": 276, "1796": 276, "587939": 276, "4692": 276, "3027": 276, "440385": 276, "0941": 276, "6170": 276, "463834": 276, "6693": 276, "2570": 276, "413923": 276, "3618": 276, "427491": 276, "2658": 276, "5620": 276, "521096": 276, "4546": 276, "9522": 276, "446657": 276, "0732": 276, "0130": 276, "454492": 276, "7145": 276, "9771": 276, "451302": 276, "3318": 276, "9710": 276, "477444": 276, "4944": 276, "3068": 276, "502124": 276, "0790": 276, "7890": 276, "462595": 276, "7389": 276, "8006": 276, "491811": 276, "6677": 276, "7770": 276, "477864": 276, "6488": 276, "0460": 276, "472418": 276, "9834": 276, "9929": 276, "474434": 276, "0359": 276, "2120": 276, "478021": 276, "0706": 276, "1991": 276, "474688": 276, "0336": 276, "8083": 276, "475373": 276, "0636": 276, "2525": 276, "473063": 276, "0292": 276, "8033": 276, "473542": 276, "0651": 276, "9375": 276, "483644": 276, "0661": 276, "5310": 276, "462817": 276, "0432": 276, "1300": [276, 286], "446808": 276, "7913": 276, "90": 276, "1894": 276, "489466": 276, "9838": 276, "9945": 276, "474441": 276, "0361": 276, "478038": 276, "ruv_prop_estim": [276, 281, 286, 300], "209972": [276, 281, 284, 286, 292], "197452": 276, "005338": 276, "192852": 276, "199549": 276, "193411": 276, "195608": 276, "192557": 276, "198783": 276, "191425": 276, "192934": 276, "192682": 276, "000659": 276, "199545": 276, "000303": 276, "193747": 276, "000956": 276, "197305": 276, "006150": 276, "194664": 276, "005918": 276, "198812": 276, "000334": 276, "192753": 276, "006503": 276, "194238": 276, "009567": 276, "189160": 276, "005291": 276, "195766": 276, "003125": 276, "195730": 276, "195098": 276, "006600": 276, "195843": 276, "001364": 276, "189330": 276, "003100": 276, "193116": 276, "008094": 276, "189540": 276, "006380": 276, "196038": 276, "002606": 276, "197429": 276, "000340": 276, "204599": 276, "002549": 276, "190442": 276, "000522": 276, "195705": 276, "005726": 276, "192398": 276, "002984": 276, "196915": 276, "000299": 276, "198387": 276, "001229": 276, "190453": 276, "000216": 276, "197082": 276, "005988": 276, "191512": 276, "002433": 276, "194217": 276, "000649": 276, "191075": 276, "001918": 276, "197129": 276, "005915": 276, "183751": 276, "001489": 276, "187999": 276, "001004": 276, "194026": 276, "005955": 276, "187663": 276, "002481": 276, "193344": 276, "009365": 276, "187822": 276, "002901": 276, "187730": 276, "187425": 276, "002946": 276, "184713": 276, "006622": 276, "187724": 276, "002919": 276, "187525": 276, "003050": 276, "192812": 276, "005142": 276, "183104": 276, "001493": 276, "187672": 276, "002483": 276, "193349": 276, "009366": 276, "pop_clwt_estim": 276, "382904": 276, "010536": 276, "387669": 276, "010497": 276, "396947": 276, "010523": 276, "385807": 276, "010703": 276, "554417": 276, "011851": 276, "519989": 276, "012179": 276, "808497": 276, "011109": 276, "737404": [276, 302], "007109": 276, "709206": 276, "000803": 276, "736659": 276, "000429": 276, "706752": 276, "000822": 276, "662625": 276, "002097": 276, "709124": 276, "000793": 276, "704774": 276, "427285": 276, "003711": 276, "779125": 276, "001087": 276, "007108": 276, "059279": 276, "517590": 276, "056724": 276, "520520": 276, "063392": 276, "057943": 276, "019268": 276, "348000": 276, "008419": 276, "040813": 276, "045624": 276, "023159": 276, "057041": 276, "059912": 276, "003577": 276, "495110": 276, "070972": 276, "033397": 276, "013863": 276, "012482": 276, "367050": 276, "020109": 276, "442940": 276, "030354": 276, "491875": 276, "038044": 276, "224276": 276, "001885": 276, "848782": 276, "017435": 276, "646840": 276, "585757": 276, "000169": 276, "367142": 276, "002221": 276, "737357": 276, "009685": 276, "033267": 276, "009238": 276, "267484": 276, "012667": 276, "165471": 276, "005033": 276, "094740": 276, "010833": 276, "065816": 276, "004749": 276, "096523": 276, "005557": 276, "098655": 276, "107862": 276, "012020": 276, "118838": 276, "005781": 276, "002862": 276, "222520": 276, "005160": 276, "361570": 276, "008017": 276, "030930": 276, "005034": 276, "094706": 276, "010829": 276, "065876": 276, "pop_matwt_estim": 276, "019706": 276, "014651": 276, "020136": 276, "014954": 276, "022336": 276, "011936": 276, "005508": 276, "002344": 276, "013967": 276, "034213": 276, "034044": 276, "009672": 276, "008593": 276, "017124": 276, "000315": 276, "022223": 276, "019316": 276, "009542": 276, "010323": 276, "008652": 276, "018053": 276, "019211": 276, "001906": 276, "014021": 276, "011399": 276, "003565": 276, "010903": 276, "014331": 276, "013699": 276, "015830": 276, "000202": [276, 302], "002078": 276, "009019": 276, "005773": 276, "012366": 276, "002607": 276, "002247": 276, "005768": 276, "011567": 276, "006160": 276, "014272": 276, "004566": 276, "010938": 276, "002378": 276, "007473": 276, "011606": 276, "010672": 276, "000456": 276, "009445": 276, "014649": 276, "012169": 276, "002248": 276, "pop_vcwt_estim": 276, "953372": 276, "013320": 276, "984897": 276, "012092": 276, "972469": 276, "011946": 276, "954734": 276, "010781": 276, "009540": 276, "009922": 276, "989687": 276, "009576": 276, "986758": 276, "869150": 276, "632058": 276, "008418": 276, "751771": 276, "007571": 276, "416489": 276, "013879": 276, "724866": 276, "008196": 276, "746265": 276, "007399": 276, "727224": 276, "008331": 276, "666572": 276, "010074": 276, "751144": 276, "008031": 276, "711725": 276, "008833": 276, "012851": 276, "967468": 276, "751794": 276, "007573": 276, "416464": 276, "013880": 276, "1403": [276, 284, 286, 292, 300], "1404": [276, 284, 286, 292, 300], "1405": [276, 284, 286, 292, 300], "1406": [276, 284, 286, 292, 300], "1407": [276, 284, 286, 292, 300], "757118": [276, 284, 286, 292], "659694": [276, 284, 286, 292], "302503": [276, 284, 286, 292], "464327": [276, 284, 286, 292], "034898": [276, 284, 286, 292], "482240": 276, "223632": 276, "357442": 276, "119299": 276, "565277": 276, "696443": 276, "062486": 276, "234841": 276, "088594": 276, "953572": 276, "857979": 276, "193305": 276, "003283": 276, "861988": 276, "188718": 276, "005806": 276, "962325": 276, "455479": 276, "289527": 276, "216857": 276, "4015": 276, "2022": [276, 281, 284, 286, 292, 303], "462": 276, "nhowev": [276, 281, 286], "reduced_ofv": [276, 301], "extended_ofv": [276, 301], "ofv_drop": [276, 301], "extended_st": [276, 301], "621435": 276, "246753": 276, "394001": 276, "645626": 276, "219363": 276, "001068": 276, "875674": 276, "899671": 276, "152040": 276, "126842": 276, "678359": 276, "045482": 276, "821275": 276, "431017": 276, "290062": 276, "366965": 276, "488428": 276, "591623": 276, "039740": 276, "659788": 276, "942802": 276, "017391": 276, "380435": 276, "441298": 276, "668043": 276, "180108": 276, "388697": 276, "680065": 276, "025518": 276, "935973": 276, "446136": 276, "690615": 276, "782563": 276, "002416": 276, "644805": 276, "554053": 276, "674591": 276, "072441": 276, "183059": 276, "134631": 276, "547765": 276, "311846": 276, "373764": 276, "196444": 276, "delta_df": [276, 301], "extended_signific": [276, 301], "covariate_effect": [276, 282, 299, 301], "ofv_summari": [276, 301], "candidate_summari": [276, 301], "n_test": [276, 301], "n_ok": [276, 301], "n_localmin": [276, 301], "n_fail": [276, 301], "stepinclud": [276, 301], "estimation_ofv": 277, "prediction_ofv": 277, "545": 277, "863847": 277, "186": 277, "192727": 277, "512": 277, "953185": 277, "694832": 277, "547": 277, "843632": 277, "184": [277, 297, 301], "022535": 277, "579": 277, "109635": 277, "596550": 277, "prediction_ofv_sum": 277, "747": 277, "506644594254": 277, "read_raw_dataset": 278, "sever": [278, 283, 291, 299], "examin": [278, 281, 283, 304], "di": 278, "role": 278, "identif": [278, 300], "mostli": [278, 279, 296], "steven": 278, "typologi": 278, "en": [278, 279, 282], "wikipedia": 278, "wiki": [278, 287], "level_of_measur": 278, "annot": 278, "kg": 278, "mg": 278, "l": 278, "low": [278, 291, 304], "understand": [278, 295], "accompani": [278, 287], "runner": 278, "testdata": [278, 290], "arrai": [278, 289, 291, 303], "And": [278, 287, 291, 303], "under": [279, 285, 287, 301, 305], "construct": [279, 295], "complet": 279, "four": 279, "distinct": 279, "layer": [279, 292, 294], "worklow": 279, "higher": [279, 285, 289, 291, 302], "coupl": 279, "mathemat": [279, 289, 296], "concid": 279, "live": 279, "namespac": 279, "mutablesequ": 279, "scalar": [279, 289], "element": [279, 290, 305], "concern": [279, 287], "expos": 279, "numpydoc": 279, "readthedoc": 279, "ecosystem": 279, "thu": [279, 284, 287, 289, 303], "wrap": 279, "share": [279, 287, 294], "leak": 279, "third": [279, 287], "parti": [279, 287], "break": 279, "run_estmethod": 281, "chapter": [281, 292], "few": 281, "cartesian": 281, "addition": [281, 292, 303], "9999": 281, "runtime_estim": 281, "estmethod_run2": 281, "2422": 281, "465718": 281, "81": [281, 284, 290], "estmethod_run1": 281, "2271": 281, "769243": 281, "run_typ": 281, "1299": [281, 286], "696027": 281, "2420": 281, "117263": 281, "145": 281, "2702": 281, "1840": 281, "3241": 281, "6578": 281, "iiv_cl_estim": [281, 286, 300], "iiv_vc_estim": [281, 286, 300], "481858": [281, 284, 286, 292], "593654": [281, 284, 286, 292], "439589": 281, "483291": 281, "598179": 281, "901289": 281, "419533": 281, "408292": 281, "iiv_mat_estim": [281, 286, 300], "000130": [281, 286, 292], "322572": 281, "197647": 281, "865979": 281, "105366": 281, "10000": 281, "787": 281, "WITH": [281, 284, 286, 287], "THE": [281, 284, 286, 287], "creation": 282, "model_3b": 282, "u": [282, 291], "eta_i": 282, "leq": 282, "n_": 282, "par": [282, 289], "eta_k": 282, "bmatrix": 282, "vdot": 282, "eta_": [282, 289, 291], "sim": [282, 289, 291, 302], "mathcal": [282, 289, 291], "mu_2": 282, "omega_": [282, 289], "n1": 282, "n2": 282, "ddot": 282, "latter": 282, "partit": 282, "5th": 282, "630859": 282, "868770": 282, "176754": 282, "95th": 282, "925602": 282, "082310": 282, "244607": 282, "569077": 282, "600360": 282, "632538": 282, "532478": 282, "824355": 282, "138312": 282, "577861": 282, "761430": 282, "991915": 282, "003863": 282, "148763": 282, "297579": 282, "600771": 282, "631260": 282, "661025": 282, "315965": 282, "549669": 282, "811532": 282, "margin": 282, "ij": 282, "ijk": 282, "omega_k": 282, "sigma_1": 282, "sigma_2": 282, "sigma_i": 282, "turn": [282, 289], "percent": 282, "red": 282, "figur": 282, "vconcatchart": 282, "sigma_": [282, 289], "020503": 282, "628814": 282, "009309": 282, "544459": 282, "026950": 282, "613127": 282, "050396": 282, "551581": 282, "individual_effect": 282, "913307": 282, "899565": 282, "923297": 282, "939015": 282, "926632": 282, "948404": 282, "933506": 282, "894967": 282, "970755": 282, "010192": 282, "973823": 282, "047109": 282, "992728": 282, "986142": 282, "999404": 282, "361911": 282, "322628": 282, "418737": 282, "894772": 282, "868658": 282, "917333": 282, "947797": 282, "923656": 282, "969732": 282, "771958": 282, "748072": 282, "790423": 282, "790120": 282, "768277": 282, "806911": 282, "percentu": 282, "unexplained_vari": 282, "sd_observ": 282, "sd_5th": 282, "sd_95th": 282, "469535": 282, "359934": 282, "547612": 282, "465490": 282, "352335": 282, "538174": 282, "165502": 282, "141580": 282, "190726": 282, "159149": 282, "134989": 282, "183613": 282, "420471": 282, "327104": 282, "490419": 282, "404440": 282, "306148": 282, "467046": 282, "143317": 282, "122348": 282, "166012": 282, "141826": 282, "120282": 282, "163610": 282, "percetil": 282, "025328": 282, "022571": 282, "020115": 282, "216681": 282, "188254": 282, "163572": 282, "027391": 282, "021634": 282, "020540": 282, "intermedi": 282, "model_4": [282, 289], "parameter_inits_and_estim": 282, "model_3": 282, "115195": 282, "007066": 282, "209016": 282, "125999": 282, "020191": 282, "224959": 282, "126000": 282, "007084": 282, "38635": 282, "220463": 282, "195326": 282, "176796": 282, "bsv_apgr": [282, 289], "010583": 282, "107027": 282, "000008": 282, "171529": 282, "404278": 282, "012042": 282, "115427": 282, "000032": 282, "208475": 282, "415588": 282, "000030": 282, "062712": 282, "117271": 282, "039930": 282, "446939": 282, "402075": 282, "bsv_wgt": [282, 289], "244579": 282, "244448": 282, "002173": 282, "002170": 282, "244080": 282, "007763": 282, "007760": 282, "249237": 282, "034610": 282, "015250": 282, "relative_chang": 282, "773218": 282, "095327": 282, "520526": 282, "271369": 282, "110618": 282, "974324": 282, "657803": 282, "852": 282, "803483": 282, "753": 282, "302743": 282, "themselv": 282, "ideal": 282, "estimated_covari": 282, "stdev": 282, "423728": 282, "237640": 282, "525424": 282, "704565": [282, 291], "nyberg": 282, "hb": 282, "jonsson": 282, "mo": 282, "introduct": 282, "cpt": 282, "pharmacometr": [282, 285, 287, 303], "syst": 282, "pharmacol": 282, "1002": 282, "psp4": 282, "12741": 282, "plan": 283, "stabl": 283, "googl": [283, 296], "coral": 283, "repo": 283, "tflite_runtim": 283, "nonlinear": 283, "read_model_result": 284, "aspect": [284, 291, 299, 303], "explor": [284, 296], "naiv": 284, "minima": 284, "\u03b4ofv": [284, 286, 292], "\u03b4aic": [284, 286, 292], "\u03b4bic": [284, 286, 292], "iivsearch_no_of_etas_candidate3": 284, "282024": 284, "iivsearch_no_of_etas_candidate2": 284, "217": 284, "691571": 284, "iivsearch_no_of_etas_candidate6": 284, "385": 284, "641987": 284, "iivsearch_no_of_etas_candidate1": 284, "631": 284, "871991": 284, "iivsearch_no_of_etas_candidate5": 284, "633": [284, 290], "419500": 284, "iivsearch_no_of_etas_candidate4": 284, "815": 284, "076729": 284, "iivsearch_no_of_etas_candidate7": 284, "834": 284, "249063": 284, "iivsearch_block_structure_candidate1": 284, "971960": 284, "1283": 284, "597406": 284, "1279": 284, "315382": 284, "1061": 284, "623812": 284, "673395": 284, "443392": 284, "645": 284, "895882": 284, "464": 284, "238653": 284, "066319": 284, "1365": 284, "569365": 284, "178325": 284, "1280": 284, "1278": [284, 292], "1070": 284, "204731": 284, "1058": 284, "897": 284, "963854": 284, "024311": 284, "644": 284, "650": 284, "186341": 284, "640": 284, "468": 284, "529112": 284, "458": 284, "437": 284, "440744": 284, "1364": 284, "1261": [284, 286], "189012": 284, "1259": [284, 292], "530267": [284, 292], "1039": 284, "215418": [284, 301], "641723": 284, "034998": 284, "620": 284, "864210": 284, "206982": 284, "417": 284, "411370": 284, "160972": 284, "5333": 284, "0366": 284, "1164": 284, "2929": 284, "8058": 284, "9055": 284, "2270": 284, "9424": 284, "1360": 284, "239": 284, "1090": 284, "234": 284, "6680": 284, "9380": 284, "6690": 284, "9880": 284, "433544": 284, "114210": 284, "347648": 284, "316164": 284, "310155": 284, "922906": 284, "434563": 284, "436279": 284, "481830": 284, "594777": 284, "396159": 284, "516927": 284, "593578": 284, "414690": 284, "247930": 284, "656304": 284, "00013": 284, "31998": 284, "08352": 284, "43473": 284, "209975": 284, "401593": 284, "574966": 284, "736398": 284, "750954": 284, "744891": 284, "810669": 284, "215885": 284, "iiv_cl_iiv_vc_estim": 284, "498114": 284, "965311": 284, "348227": 284, "596114": 284, "524856": 284, "831038": 284, "973037": 284, "826292": 284, "168816": 284, "275494": 284, "612863": 284, "081253": 284, "444919": 284, "093815": 284, "067016": 284, "554482": 284, "103963": 284, "060027": 284, "670815": 284, "108198": 284, "049148": 284, "371": 284, "rxode2": [285, 291], "post": [285, 300], "sens": 286, "brute": 286, "approach": 286, "nonzero": 286, "constant": 286, "540508": 286, "1265": 286, "694052": 286, "230772": 286, "384316": 286, "230394": 286, "383938": 286, "1262": 286, "153544": 286, "750000": 286, "403544": 286, "750400": 286, "403145": 286, "060114": 286, "093431": 286, "043077": 286, "1257": 286, "110467": 286, "782429": 286, "1115": 286, "911624": 286, "015062": 286, "707566": 286, "017679": 286, "017280": 286, "707992": 286, "707614": 286, "017728": 286, "1145": 286, "944840": 286, "230": 286, "1954": 286, "242": [286, 297, 299], "440613": 286, "665": 286, "439784": 286, "1951": 286, "241": 286, "1950": 286, "440611": 286, "1402": 286, "439785": 286, "439783": 286, "2313": 286, "438628": 286, "474140": 286, "586866": 286, "311861": 286, "472835": 286, "590422": 286, "320387": 286, "474125": 286, "586859": 286, "311859": 286, "474111": 286, "586860": 286, "311903": 286, "590425": 286, "320393": 286, "472840": 286, "590424": 286, "320395": 286, "572627": 286, "290631": 286, "194680": 286, "002735": 286, "195532": 286, "194676": 286, "194675": 286, "195531": 286, "197005": 286, "483460": 286, "000006": 286, "000000e": [286, 301], "241921": 286, "119820": 286, "001912": 286, "068405": 286, "121866": 286, "620420": 286, "271367": 286, "291396": 286, "230854": 286, "051358": 286, "936871": 286, "267222": 286, "042977": 286, "050766": 286, "059323": 286, "250083": 286, "291876": 286, "187631": 286, "020838": 286, "612880": 286, "660334": 286, "657": 286, "279": [286, 297], "adopt": 287, "wikimedia": 287, "bowl_of_hygieia_by_david": 287, "svg": 287, "cc": 287, "BY": 287, "sa": 287, "font": 287, "pt": 287, "san": 287, "relicens": 287, "lgpl": 287, "know": 287, "maintaint": 287, "softwar": [287, 289, 290, 291, 296, 303], "redistribut": 287, "publish": 287, "foundat": 287, "hope": 287, "warranti": 287, "impli": 287, "merchant": 287, "FOR": 287, "modif": [287, 299], "permit": 287, "retain": 287, "disclaim": 287, "reproduc": 287, "materi": 287, "holder": 287, "AND": 287, "AS": 287, "OR": 287, "BUT": 287, "NOT": 287, "TO": 287, "OF": 287, "IN": 287, "shall": 287, "BE": 287, "liabl": 287, "indirect": 287, "incident": 287, "exemplari": 287, "consequenti": 287, "damag": 287, "procur": 287, "good": 287, "servic": 287, "loss": 287, "profit": 287, "busi": 287, "interrupt": 287, "ON": 287, "theori": [287, 289], "liabil": 287, "contract": 287, "tort": 287, "neglig": 287, "aris": 287, "advis": 287, "SUCH": 287, "june": 287, "2007": 287, "inc": 287, "fsf": 287, "preambl": 287, "copyleft": 287, "practic": 287, "design": [287, 289, 296, 303], "awai": 287, "contrast": 287, "guarante": 287, "speak": 287, "price": 287, "charg": 287, "wish": 287, "piec": 287, "prevent": 287, "deni": 287, "ask": [287, 305], "surrend": 287, "therefor": 287, "respons": 287, "grati": 287, "fee": 287, "recipi": 287, "gpl": 287, "assert": 287, "offer": [287, 291], "permiss": 287, "clearli": 287, "sake": 287, "erron": 287, "devic": 287, "although": 287, "manufactur": 287, "fundament": 287, "incompat": 287, "aim": [287, 299], "systemat": 287, "abus": 287, "area": [287, 296], "unaccept": 287, "prohibit": 287, "substanti": 287, "domain": [287, 294, 303], "stand": 287, "readi": 287, "provis": 287, "futur": 287, "threaten": 287, "constantli": 287, "patent": 287, "danger": 287, "proprietari": 287, "assur": 287, "law": 287, "semiconductor": 287, "mask": 287, "license": 287, "address": 287, "organ": [287, 289], "fashion": 287, "exact": 287, "earlier": 287, "cover": [287, 292, 293, 295, 304], "unmodifi": 287, "propag": 287, "secondarili": 287, "infring": 287, "countri": 287, "convei": 287, "mere": 287, "network": 287, "transfer": 287, "extent": 287, "conveni": [287, 289], "promin": 287, "visibl": 287, "menu": 287, "criterion": 287, "offici": 287, "wide": 287, "among": 287, "essenti": 287, "kernel": 287, "script": [287, 303], "link": [287, 300], "subprogram": 287, "intim": 287, "regener": 287, "grant": 287, "irrevoc": 287, "affirm": 287, "unlimit": 287, "constitut": 287, "fair": 287, "equival": [287, 303], "sole": 287, "facil": 287, "compli": 287, "behalf": 287, "relationship": [287, 301], "circumst": 287, "sublicens": 287, "anti": 287, "circumvent": 287, "deem": 287, "technolog": 287, "fulfil": 287, "oblig": 287, "articl": 287, "wipo": 287, "treati": 287, "decemb": 287, "1996": 287, "waiv": 287, "forbid": 287, "exercis": 287, "intent": 287, "enforc": 287, "medium": [287, 296], "conspicu": 287, "intact": 287, "absenc": 287, "along": 287, "relev": [287, 293, 303], "anyon": 287, "who": [287, 293], "possess": 287, "invalid": 287, "natur": 287, "storag": 287, "aggreg": 287, "beyond": 287, "embodi": 287, "durabl": 287, "customarili": 287, "interchang": 287, "spare": 287, "reason": [287, 296], "cost": 287, "server": 287, "occasion": 287, "noncommerci": 287, "subsect": 287, "6b": 287, "further": [287, 289], "clear": [287, 305], "sai": [287, 293], "host": 287, "satisfi": 287, "peer": 287, "transmiss": 287, "6d": 287, "portion": 287, "consum": 287, "tangibl": 287, "household": 287, "sold": 287, "incorpor": 287, "dwell": 287, "doubt": 287, "resolv": [287, 294], "favor": 287, "coverag": 287, "typic": [287, 303], "commerci": 287, "industri": 287, "procedur": 287, "suffic": 287, "interf": 287, "perpetu": 287, "character": 287, "But": 287, "nor": 287, "abil": 287, "rom": 287, "advers": 287, "protocol": 287, "publicli": 287, "password": 287, "unpack": 287, "supplement": 287, "govern": 287, "notwithstand": 287, "misrepresent": 287, "licensor": 287, "declin": 287, "trademark": 287, "trade": 287, "indemnif": 287, "contractu": 287, "impos": 287, "surviv": 287, "termin": 287, "expressli": 287, "void": 287, "paragraph": 287, "ceas": 287, "reinstat": 287, "provision": 287, "perman": 287, "notifi": 287, "prior": 287, "dai": 287, "cessat": 287, "moreov": 287, "cure": 287, "receipt": 287, "qualifi": 287, "ancillari": 287, "consequ": 287, "likewis": 287, "downstream": 287, "complianc": 287, "entiti": 287, "asset": 287, "subdivid": 287, "predecessor": 287, "plu": 287, "effort": 287, "royalti": 287, "litig": 287, "cross": 287, "claim": 287, "counterclaim": 287, "lawsuit": 287, "alleg": 287, "sell": 287, "sale": 287, "acquir": 287, "hereaft": 287, "manner": [287, 292], "worldwid": 287, "agreement": 287, "denomin": 287, "coven": 287, "sue": 287, "knowingli": 287, "readili": 287, "arrang": 287, "depriv": 287, "yourself": 287, "benefit": [287, 296], "knowledg": 287, "believ": 287, "pursuant": 287, "convey": 287, "discriminatori": 287, "scope": 287, "payment": 287, "primarili": 287, "march": 287, "constru": 287, "defens": 287, "court": 287, "contradict": 287, "excus": 287, "simultan": [287, 292], "pertin": 287, "agre": 287, "whom": 287, "refrain": 287, "affero": 287, "revis": 287, "Such": 287, "spirit": 287, "ever": 287, "THERE": 287, "qualiti": 287, "prove": 287, "defect": 287, "repair": 287, "WILL": 287, "inabl": 287, "BEING": 287, "inaccur": 287, "sustain": 287, "failur": [287, 296], "review": 287, "waiver": 287, "civil": 287, "greatest": 287, "achiev": 287, "attach": 287, "safest": 287, "pointer": 287, "brief": 287, "idea": [287, 296], "electron": 287, "paper": 287, "hypothet": 287, "Of": 287, "cours": 287, "gui": 287, "box": [287, 299], "employ": 287, "programm": 287, "school": 287, "philosophi": 287, "why": 287, "7b2feb6f20b626a559d3150f6638c111f20b5213": 287, "lin_evalu": 288, "lin_estim": 288, "268756": 288, "problemat": 288, "947354": 288, "939053": 288, "008301": 288, "970582": 288, "012053": 288, "041471": 288, "982345": 288, "979456": 288, "002889": 288, "457096": 288, "435700": 288, "021396": 288, "839445": 288, "838391": 288, "001054": 288, "257222": 288, "278016": 288, "020794": 288, "098344": 288, "077164": 288, "021179": 288, "538623": 288, "520111": 288, "018512": 288, "647972": 288, "673400": 288, "025427": 288, "394648": 288, "373180": 288, "021468": 288, "480163": 288, "505680": 288, "025517": 288, "650236": 288, "629298": 288, "020938": 288, "991406": [288, 290], "988587": 288, "002820": 288, "378873": 288, "372846": 288, "006028": 288, "739906": 288, "725640": 288, "014265": 288, "328801": 288, "326482": 288, "002319": 288, "113286": 288, "104515": 288, "008771": 288, "212076": 288, "325127": 288, "113051": 288, "334048": 288, "321306": 288, "012742": 288, "327782": 288, "306287": 288, "021495": 288, "821537": 288, "795371": 288, "026165": 288, "631283": 288, "620311": 288, "010972": 288, "861666": 288, "855927": 288, "005739": 288, "915260": 288, "913348": 288, "001913": 288, "988972": 288, "024483": 288, "035512": 288, "279274": 288, "269277": 288, "009997": 288, "733179": 288, "729199": 288, "003980": 288, "830055": 288, "827764": 288, "002290": 288, "851725": 288, "847176": 288, "004549": 288, "212098": 288, "192122": 288, "019976": 288, "774789": 288, "773559": 288, "001230": 288, "352292": 288, "351131": 288, "001162": 288, "172644": 288, "165200": 288, "007443": 288, "427375": 288, "420258": 288, "007117": 288, "381438": 288, "412378": 288, "030941": 288, "624011": 288, "614613": 288, "009397": 288, "970630": 288, "955216": 288, "015414": 288, "177025": 288, "002885": 288, "206543": 288, "180626": 288, "025916": 288, "955033": 288, "945036": 288, "982451": 288, "972114": 288, "010337": 288, "051495": 288, "098643": 288, "047147": 288, "424500": 288, "425925": 288, "001425": 288, "734347": 288, "702764": 288, "031583": 288, "018483": 288, "997957": 288, "020526": 288, "810285": [288, 290], "807205": 288, "003080": 288, "279257": 288, "276411": 288, "002846": 288, "168465": 288, "267932": 288, "099467": 288, "190512": 288, "178815": 288, "011697": 288, "749138": 288, "727859": 288, "021278": 288, "598562": 288, "616685": 288, "018123": 288, "237457": 288, "251607": 288, "014150": 288, "568928": 288, "581417": 288, "012489": 288, "800065": 288, "795239": 288, "004826": 288, "098027": 288, "103873": 288, "005846": 288, "586253": [288, 290], "582931": 288, "003323": 288, "663950": 288, "650298": 288, "013652": 288, "850995": 288, "833333": 288, "017662": 288, "605848": 288, "592551": 288, "013297": 288, "iofv_plot": 288, "At": 289, "heart": 289, "li": [289, 303], "subclass": 289, "principl": 289, "mymodel": [289, 291], "parset": 289, "displaystyl": [289, 291], "eps_": 289, "similarli": [289, 305], "theta_": 289, "s_": 289, "a_": [289, 291], "quit": 289, "flexibl": 289, "cumbersom": 289, "easili": 289, "unimport": 289, "frem_path": 289, "frem_model": 289, "frem_model_result": 289, "omega\u2082": 289, "omega\u2083": 289, "omega\u2084": 289, "\u2082": 289, "eta\u2083": 289, "\u2083": 289, "eta\u2084": 289, "eps\u2082": 289, "epscov": 289, "bsv_": 289, "omega_2_1": 289, "omega_3_1": 289, "omega_4_1": 289, "omega_3_2": 289, "omega_4_2": 289, "omega_4_3": 289, "000286193": 289, "0676481": 289, "0256033": 289, "0235094": 289, "00161838": 289, "24458": 289, "omega_est": 289, "0393482": 289, "0168369": 289, "0442286": 289, "0426757": 289, "0259374": 289, "0654878": 289, "00168063": 289, "983027": 289, "240423": 289, "98305": 289, "choleski": 289, "198363807182661": 289, "0848788911603008": 289, "136868454493349": 289, "222967085720797": 289, "616745467855979": 289, "743597812371906": 289, "215138540674925": 289, "145697201390566": 289, "508675383095755": 289, "810424017694199": 289, "pure": 289, "astyp": 289, "numeric64": 289, "linalg": 289, "19836381": 289, "08487889": 289, "13686845": 289, "22296709": 289, "61674547": 289, "74359781": 289, "21513854": 289, "1456972": 289, "50867538": 289, "81042402": 289, "esim": 290, "2760562818805": 290, "parameter_estimates_sdcorr": 290, "171321": 290, "167051": 290, "115069": 290, "Or": 290, "standard_errors_sdcorr": 290, "039153": 290, "022378": 290, "009904": 290, "relative_standard_error": 290, "044731": 290, "027325": 290, "527072": 290, "457068": 290, "267918": 290, "172147": 290, "proper": 290, "388058": 290, "356900": 290, "238442": 290, "096516": 290, "invers": 290, "29955600": 290, "400": 290, "910": 290, "267": 290, "039": 290, "809": 290, "520": 290, "980": 290, "200": 290, "450": 290, "947352": 290, "970591": 290, "982342": 290, "457091": 290, "839437": 290, "257230": 290, "098338": 290, "538621": 290, "647969": 290, "394643": 290, "480164": 290, "650233": 290, "378880": 290, "739902": 290, "328800": 290, "113284": 290, "212096": 290, "334047": 290, "327778": 290, "821533": 290, "631281": 290, "861669": 290, "915261": 290, "988977": 290, "279273": 290, "733181": 290, "830053": 290, "851724": 290, "212095": 290, "774791": 290, "352283": 290, "172643": 290, "427376": 290, "381444": 290, "624014": 290, "970627": 290, "177028": 290, "206540": 290, "955029": 290, "982447": 290, "051499": 290, "424503": 290, "734342": 290, "018477": 290, "279258": 290, "168486": 290, "190508": 290, "749134": 290, "598565": 290, "237467": 290, "568934": 290, "800062": 290, "098025": 290, "663948": 290, "850993": 290, "605845": 290, "143": 290, "045": [290, 297], "971": 290, "881": 290, "575": 290, "080": 290, "063": 290, "427": 290, "668": 290, "543": 290, "662": 290, "478": 290, "667": 290, "253": 290, "495": 290, "918": 290, "67071": 290, "401100": 290, "35080": 290, "587770": 290, "36360": 290, "278800": 290, "19730": 290, "670700": 290, "21710": 290, "352600": 290, "86050": 290, "067200": 290, "35060": 290, "059269": 290, "72100": 290, "036754": 290, "10860": 290, "814140": 290, "28180": 290, "699410": 290, "eb": 290, "043861": 290, "005430": 290, "166321": 290, "131833": 290, "095934": 290, "130868": 290, "009154": 290, "017388": 290, "102019": 290, "283500": 290, "019417": 290, "099839": 290, "045946": 290, "059072": 290, "024270": 290, "189351": 290, "248536": 290, "091872": 290, "009545": 290, "012052": 290, "066151": 290, "293685": 290, "030236": 290, "074789": 290, "094502": 290, "147433": 290, "076820": 290, "105604": 290, "020051": 290, "066265": 290, "086035": 290, "023260": 290, "067138": 290, "030859": 290, "337255": 290, "035532": 290, "032579": 290, "028410": 290, "003589": 290, "080613": 290, "060233": 290, "052854": 290, "004469": 290, "057344": 290, "051992": 290, "212941": 290, "137510": 290, "004111": 290, "023282": 290, "302636": 290, "039069": 290, "119442": 290, "044956": 290, "263320": 290, "000776": 290, "083231": 290, "003150": 290, "012752": 290, "049654": 290, "080932": 290, "000555": 290, "099614": 290, "061864": 290, "332738": 290, "038156": 290, "067641": 290, "038017": 290, "184137": 290, "156617": 290, "208753": 290, "114558": 290, "053036": 290, "008405": 290, "026004": 290, "144920": 290, "081646": 290, "083320": 290, "015380": 290, "000392": 290, "078062": 290, "018966": 290, "112030": 290, "112715": 290, "383786": 290, "001730": 290, "167583": 290, "042068": 290, "066598": 290, "037600": 290, "000093": 290, "010662": 290, "009775": 290, "058306": 290, "229005": 290, "033958": 290, "008959": 290, "092312": 290, "050987": 290, "192569": 290, "002727": 290, "225657": 290, "115824": 290, "204269": 290, "054792": 290, "066334": 290, "123689": 290, "239678": 290, "047215": 290, "186615": 290, "000949": 290, "010812": 290, "015929": 290, "017213": 290, "005234": 290, "122552": 290, "076677": 290, "095696": 290, "024883": 290, "002999": 290, "007157": 290, "inspect": [291, 304], "model_nlmixr": 291, "diff": [291, 296], "add_error": 291, "prop_error": 291, "focei": 291, "model_start": 291, "eta_vc": 291, "pop_vc": 291, "pop_": 291, "225": 291, "epsilon_": 291, "iiv_cl_iiv_vc": 291, "iiv_vc": 291, "\u03c3": 291, "iiv_mat": 291, "iiv_": 291, "advan2": 291, "THEN": 291, "22500000000000e": 291, "cond": 291, "maxev": 291, "99999": 291, "cipredi": 291, "mytab": 291, "tlag": 291, "alag1": 291, "pop_mdt": 291, "advan3": 291, "trans4": 291, "pop_qp1": 291, "pop_vp1": 291, "run4": 291, "tol": 291, "pop_clmm": 291, "pop_km": 291, "iiv_clmm": 291, "iiv_clmm_iiv_vc": 291, "iiv_cl_iiv_mat": 291, "iiv_vc_iiv_mat": 291, "0094868": 291, "onto": 291, "wgt_median": 291, "30000": 291, "clwgt": 291, "pop_clwgt": 291, "user_effect": 291, "wgt_std": 291, "add_population_paramet": 291, "unfix_parameters_to": 291, "\u03b5\u209a\u2081": 291, "p1": 291, "set_time_varying_error_model": [291, 300], "100000000000000": 291, "f_flag": 291, "f_": 291, "geq": 291, "get_id": 291, "get_mdv": 291, "largest": 291, "ser": 291, "delai": [292, 303], "grammar": [292, 296], "exhaustive_stepwis": 292, "obtain": 292, "basi": 292, "subsequ": [292, 293, 303], "modelsearch_candidate2": [292, 303], "594608": 292, "1272": 292, "124874": 292, "modelsearch_candidate3": [292, 303], "558028": 292, "088295": 292, "modelsearch_candidate4": [292, 303], "956313": 292, "1270": 292, "486580": 292, "287000": 292, "1260": 292, "817266": 292, "362287": 292, "1327": 292, "153182": 292, "1325": 292, "551467": 292, "1307": 292, "301235": 292, "1295": 292, "1305": 292, "1289": 292, "2927": 292, "4334": 292, "7778": 292, "0058": 292, "1640": 292, "260324": 292, "7646": 292, "824443": 292, "5477": 292, "607839": 292, "1147": 292, "842498": 292, "470974": 292, "595276": 292, "526185": 292, "930160": 292, "495109": 292, "322680": 292, "470531": 292, "515250": 292, "312692": 292, "194221": 292, "202201": 292, "207885": 292, "232322": 292, "199750": 292, "205369": 292, "193439": 292, "pop_qp1_estim": 292, "pop_vp1_estim": 292, "pop_mdt_estim": 292, "155413": 292, "4192": 292, "6100": 292, "172730": 292, "3977": 292, "4562": 292, "158070": 292, "8042": 292, "8517": 292, "iiv_mdt_estim": 292, "156289": 292, "192020": 292, "092419": 292, "262429": 292, "720369": 292, "464263": 292, "127061": 292, "906722": 292, "053781": 292, "923055": 292, "795863": 292, "030658": 292, "661330": 292, "168680": 292, "833073": 292, "041529": 292, "205858": 292, "064930": 292, "609673": 292, "396329": 292, "928556": 292, "365": 292, "330": 292, "topic": 293, "scheme": 293, "theta_cl": 293, "mention": 293, "ve": 293, "despit": 293, "write_etas_in_abbr": 293, "altair": [294, 296], "vega": 294, "lite": 294, "ggplot": 294, "editor": 294, "clamp": 294, "vconcat": 294, "spec": 294, "inten": 295, "export": 295, "strictli": 295, "necessesari": 295, "detect_model": 295, "summer": 296, "master": 296, "thesi": 296, "internship": 296, "email": 296, "team": 296, "tox": 296, "pytest": 296, "sphinx": 296, "wise": 296, "known": 296, "trial": 296, "involv": 296, "outcom": 296, "350h": 296, "difficulti": 296, "mentor": 296, "scipi": 296, "focu": 296, "proof": 296, "concept": 296, "algebra": 296, "simul": [296, 302], "scratch": 296, "lark": 296, "earlei": 296, "lalr": 296, "stricter": 296, "175h": 296, "almost": 296, "compat": 296, "benefici": 296, "easi": 296, "potenti": 296, "eas": 296, "jupyt": 296, "holoview": 296, "bokeh": 296, "monitor": 296, "ongo": 296, "veri": 296, "happen": [296, 305], "converg": 296, "sort": [296, 303], "dashboard": 296, "complement": 296, "realtim": 296, "restart": [296, 305], "middl": 296, "worflow": 296, "cv": [297, 299], "772": [297, 299], "700": 297, "042": [297, 299], "sdeps_0": [297, 299], "t1": 297, "298": 297, "sdeps_t1": 297, "t2": 297, "886": 297, "sdeps_t2": 297, "t3": 297, "272": 297, "sdeps_t3": 297, "t4": 297, "716": 297, "sdeps_t4": 297, "t5": 297, "218": 297, "sdeps_t5": 297, "t6": 297, "928": 297, "sdeps_t6": 297, "t7": 297, "092": 297, "sdeps_t7": 297, "t8": 297, "914": 297, "sdeps_t8": 297, "t9": 297, "sdeps_t9": 297, "390": [297, 299], "159": [297, 299], "t0": [297, 299], "271": [297, 299], "sdeps_t0": [297, 299], "956": [297, 299], "717": 297, "014": 297, "983": 297, "884": 297, "017": 297, "955": 297, "958": 297, "969": 297, "933": 297, "022": 297, "819": 297, "007": 297, "755": 297, "982": 297, "387": 297, "th_0": 297, "257": 297, "867": 297, "th_t1": 297, "211": 297, "th_t2": 297, "277": 297, "761": 297, "th_t3": 297, "033": 297, "th_t4": 297, "367": 297, "th_t5": 297, "204": 297, "170": 297, "th_t6": 297, "078": 297, "th_t7": 297, "841": 297, "th_t8": 297, "th_t9": 297, "030": 297, "124": 297, "289": 297, "386": 297, "203": 297, "019": 297, "delta_pow": [297, 299], "037": [297, 299], "autocorrel": [297, 299], "dtb": [297, 299], "91": [297, 299], "idv_varying_ruv": 297, "idv_varying_ruv_cutoff0": 297, "idv_varying_ruv_cutoff1": 297, "idv_varying_ruv_cutoff2": 297, "idv_varying_ruv_cutoff3": 297, "idv_varying_ruv_cutoff4": 297, "idv_varying_ruv_cutoff5": 297, "idv_varying_ruv_cutoff6": 297, "idv_varying_ruv_cutoff7": 297, "idv_varying_ruv_cutoff8": 297, "idv_varying_combin": 297, "idv_varying_theta": 297, "sdep": 297, "delet": 298, "diagnost": 298, "impact": 299, "improement": 299, "592698": 299, "197887": 299, "007493": 299, "521171": 299, "et1apgr": 299, "487930": 299, "residual_error_model": 299, "910000": 299, "030000": 299, "diagnos": 299, "structural_bia": 299, "cpred": 299, "binmin": 299, "binmax": 299, "binid": 299, "258": 299, "strutur": 299, "mdel": 299, "fullblock_paramet": 299, "183463": 299, "171306": 299, "554610": 299, "154408": 299, "167053": 299, "cox": 299, "boxcox_paramet": 299, "shape": 299, "new_sd": 299, "old_sd": 299, "922083": 299, "182037": 299, "332800": 299, "166021": 299, "tdist_paramet": 299, "79": 299, "9997": 299, "168477": 299, "9986": 299, "166469": 299, "residual_error": 299, "additional_paramet": 299, "coeff": 299, "48793": 299, "033334": 299, "48218": 299, "052342": 299, "59034": 299, "008371": 299, "00887": 299, "003273": 299, "ibrahim": 300, "quickli": [300, 303], "assess": 300, "inde": 300, "cwres_model": 300, "479721": 300, "385268": 300, "002792": 300, "time_varying1": 300, "117041": 300, "555154": 300, "time_varying3": 300, "336641": 300, "091207": 300, "065738": 300, "654562": 300, "046578": 300, "519115": 300, "612710": 300, "643741": 300, "027766": 300, "sigma_add": 300, "000367": 300, "sigma_prop": 300, "967365": 300, "00123": 300, "0976": 300, "12252": 300, "14299": 300, "000337": 300, "05242": 300, "006105": 300, "10545": 300, "12659": 300, "15573": 300, "00054": 300, "04769": 300, "030825": 300, "mox3": 300, "2460": 300, "704469": 300, "957378": 300, "2473": 300, "661847": 300, "269102": 300, "2495": 300, "973571": 300, "2444": 300, "2455": 300, "2475": 300, "2423": 300, "757516": 300, "2435": 300, "047712": 300, "2453": 300, "068976": 300, "707": 300, "5434": 300, "531596": 300, "794": 300, "3091": 300, "528620": 300, "3094": 300, "532547": 300, "iiv_vc_iiv_cl_estim": 300, "077743": 300, "038888": 300, "076793": 300, "039924": 300, "071628": 300, "038470": 300, "072309": 300, "704770": 300, "093311": 300, "074889": 300, "707665": 300, "081095": 300, "075048": 300, "705429": 300, "044311": 300, "iiv_ruv1_estim": 300, "time_varying_estim": 300, "039675": 300, "040734": 300, "42509": 300, "215727": 300, "655144": 300, "708324": 300, "762729": 300, "236530": 300, "229762": 300, "715966": 300, "423148": 300, "419741": 300, "774540": 300, "164274": 300, "450202": 300, "195425": 300, "960585": 300, "090461": 300, "848498": 300, "052021": 300, "239462": 300, "065148": 300, "571348": 300, "244582": 300, "161981": 300, "509910": 300, "373696": 300, "084489": 300, "647643": 300, "344772": 300, "083776": 300, "259395": 300, "101415": 300, "024651": 300, "443542": 300, "124023": 300, "183089": 300, "977222": 300, "219": 300, "moustafa": 300, "maria": 300, "kjellsson": 300, "aap": 300, "1208": 300, "s12248": 300, "018": 300, "0240": 300, "pha": 301, "219210": 301, "90878": 301, "219167": 301, "36222": 301, "bmi": 301, "219171": 301, "47564": 301, "cycll": 301, "219203": 301, "94536": 301, "diag": 301, "219206": 301, "01527": 301, "disdur": 301, "219032": 301, "86056": 301, "215321": 301, "70954": 301, "215306": 301, "67698": 301, "phia": 301, "men": 301, "215407": 301, "40295": 301, "phib": 301, "georeg": 301, "215373": 301, "77800": 301, "216968": 301, "25989": 301, "slp": 301, "215359": 301, "18150": 301, "54656": 301, "140000e": 301, "43314": 301, "390000e": 301, "96342": 301, "319000e": 301, "89351": 301, "695800e": 301, "178": 301, "04822": 301, "290000e": 301, "03256": 301, "060000e": 301, "72597": 301, "10102": 301, "580000e": 301, "1661": 301, "58291": 301, "50452": 301, "phaag": 301, "phabmi": 301, "phacycl": 301, "phadiag": 301, "phadisdur": 301, "backward_scm_dir1": 301, "phawt": 301, "phiamen": 301, "phibgeoreg": 301, "phibmen": 301, "slpgeoreg": 301, "304": 301, "beween": 301, "slightli": 301, "215961": 301, "46277": 301, "3249": 301, "44601": 301, "215748": 301, "07194": 301, "213": 301, "39083": 301, "215570": 301, "57352": 301, "49842": 301, "215486": 301, "23440": 301, "33912": 301, "87007": 301, "36433": 301, "215357": 301, "74693": 301, "61": 301, "12314": 301, "215337": 301, "95044": 301, "79649": 301, "24090": 301, "215332": 301, "91461": 301, "23763": 301, "67861": 301, "00163": 301, "215450": 301, "74783": 301, "07085": 301, "215491": 301, "11568": 301, "43870": 301, "500000e": 301, "700000e": 301, "170000e": 301, "260000e": 301, "360000e": 301, "600000e": 301, "020000e": 301, "620000e": 301, "430000e": 301, "200000e": 301, "lbest": 301, "cpl": 301, "853273": 302, "995045": 302, "575351": 302, "885525": 302, "860736": 302, "215148": 302, "533799": 302, "482883": 302, "300884": 302, "080061": 302, "568383": 302, "993262": 302, "322738": 302, "005653": 302, "928279": 302, "276361": 302, "376218": 302, "905658": 302, "546277": 302, "098483": 302, "795252": 302, "489785": 302, "898802": 302, "313336": 302, "058260": 302, "706108": 302, "078494": 302, "968860": 302, "773450": 302, "542369": 302, "775938": 302, "916754": 302, "823449": 302, "210594": 302, "600450": 302, "873918": 302, "793703": 302, "136767": 302, "405150": 302, "639544": 302, "104682": 302, "899285": 302, "330868": 302, "488282": 302, "406903": 302, "185132": 302, "354616": 302, "230477": 302, "438225": 302, "736463": 302, "892761": 302, "720261": 302, "884839": 302, "479966": 302, "924846": 302, "061750": 302, "849137": 302, "436720": 302, "367480": 302, "432346": 302, "024193": 302, "925921": 302, "423537": 302, "341680": 302, "054791": 302, "694969": 302, "548598": 302, "962122": 302, "705806": 302, "759167": 302, "864669": 302, "387386": 302, "424024": 302, "086333": 302, "056381": 302, "317393": 302, "280139": 302, "853355": 302, "413680": 302, "603301": 302, "449888": 302, "331177": 302, "631655": 302, "695800": 302, "704503": 302, "748996": 302, "138213": 302, "371773": 302, "758919": 302, "541680": 302, "026935": 302, "272954": 302, "929655": 302, "966413": 302, "814952": 302, "316351": 302, "009725": 302, "421235": 302, "563473": 302, "878300": 302, "715708": 302, "937635": 302, "459161": 302, "480043": 302, "959843": 302, "868224": 302, "383043": 302, "462408": 302, "260472": 302, "300601": 302, "811596": 302, "933191": 302, "676905": 302, "179394": 302, "398492": 302, "570879": 302, "786560": 302, "585174": 302, "956306": 302, "218010": 302, "191401": 302, "351180": 302, "612812": 302, "726349": 302, "445912": 302, "051986": 302, "553003": 302, "806204": 302, "584818": 302, "099846": 302, "876780": 302, "767349": 302, "846457": 302, "998400": 302, "892200": 302, "991350": 302, "924166": 302, "822404": 302, "207434": 302, "225727": 302, "018880": 302, "326447": 302, "115117": 302, "565671": 302, "434087": 302, "348921": 302, "250063": 302, "782192": 302, "806515": 302, "341361": 302, "599116": 302, "382526": 302, "944073": 302, "574493": 302, "296737": 302, "086788": 302, "831345": 302, "857266": 302, "485191": 302, "994987": 302, "574667": 302, "516464": 302, "901408": 302, "002572": 302, "733704": 302, "072216": 302, "874349": 302, "793265": 302, "693935": 302, "151243": 302, "707700": 302, "711150": 302, "676572": 302, "912201": 302, "905528": 302, "931900": 302, "538437": 302, "800871": 302, "954047": 302, "069326": 302, "186642": 302, "376121": 302, "196475": 302, "748099": 302, "731336": 302, "077897": 302, "773375": 302, "372391": 302, "848184": 302, "247095": 302, "504667": 302, "819544": 302, "762211": 302, "826862": 302, "572217": 302, "765259": 302, "455400": 302, "843029": 302, "056323": 302, "119652": 302, "298009": 302, "257409": 302, "502366": 302, "187278": 302, "370226": 302, "134650": 302, "361844": 302, "360000": 302, "305631": 302, "802175": 302, "597045": 302, "266702": 302, "169391": 302, "716192": 302, "544260": 302, "639042": 302, "400720": 302, "868679": 302, "106708": 302, "676934": 302, "022410": 302, "977219": 302, "974785": 302, "982047": 302, "904024": 302, "597599": 302, "424237": 302, "641421": 302, "886356": 302, "169297": 302, "840067": 302, "087082": 302, "098997": 302, "853009": 302, "712658": 302, "856403": 302, "884553": 302, "151935": 302, "963905": 302, "374133": 302, "044583": 302, "118999": 302, "893425": 302, "567520": 302, "351619": 302, "415675": 302, "360173": 302, "509070": 302, "046265": 302, "999275": 302, "255630": 302, "396594": 302, "414926": 302, "324755": 302, "684344": 302, "899880": 302, "408061": 302, "358567": 302, "907778": 302, "394438": 302, "493584": 302, "473731": 302, "297200": 302, "496109": 302, "362886": 302, "119216": 302, "933397": 302, "864820": 302, "606428": 302, "222423": 302, "988252": 302, "448507": 302, "178177": 302, "862927": 302, "693535": 302, "206488": 302, "517867": 302, "518105": 302, "477206": 302, "965455": 302, "764024": 302, "911020": 302, "346212": 302, "320820": 302, "408266": 302, "500103": 302, "133073": 302, "453899": 302, "462547": 302, "180204": 302, "337790": 302, "585654": 302, "027851": 302, "783555": 302, "036534": 302, "457112": 302, "195385": 302, "960296": 302, "402983": 302, "972480": 302, "378125": 302, "814145": 302, "016286": 302, "587323": 302, "032512": 302, "723710": 302, "269137": 302, "602344": 302, "846592": 302, "950516": 302, "788249": 302, "408322": 302, "448461": 302, "451814": 302, "243399": 302, "884049": 302, "777419": 302, "159667": 302, "541949": 302, "866250": 302, "933824": 302, "601504": 302, "416254": 302, "625663": 302, "371639": 302, "495039": 302, "087071": 302, "487277": 302, "418469": 302, "907322": 302, "663661": 302, "573838": 302, "611250": 302, "547459": 302, "675347": 302, "606033": 302, "500411": 302, "749030": 302, "860290": 302, "247584": 302, "271405": 302, "584165": 302, "881148": 302, "941132": 302, "153441": 302, "804622": 302, "876965": 302, "824837": 302, "366355": 302, "193338": 302, "054769": 302, "319025": 302, "885439": 302, "348849": 302, "230120": 302, "921633": 302, "488686": 302, "165042": 302, "027733": 302, "946876": 302, "824880": 302, "083424": 302, "654589": 302, "604188": 302, "916884": 302, "180960": 302, "370783": 302, "467337": 302, "638247": 302, "364078": 302, "957716": 302, "472019": 302, "136159": 302, "351839": 302, "664634": 302, "318875": 302, "151210": 302, "221459": 302, "527835": 302, "526828": 302, "551158": 302, "135159": 302, "615899": 302, "293600": 302, "796073": 302, "562788": 302, "818812": 302, "376893": 302, "486179": 302, "328937": 302, "446579": 302, "114640": 302, "121901": 302, "929665": 302, "615092": 302, "408347": 302, "512627": 302, "247238": 302, "018308": 302, "867625": 302, "842566": 302, "484284": 302, "664954": 302, "078385": 302, "638560": 302, "114753": 302, "282087": 302, "882876": 302, "622712": 302, "178961": 302, "678095": 302, "037941": 302, "361556": 302, "238692": 302, "166879": 302, "708577": 302, "422555": 302, "713778": 302, "567697": 302, "989005": 302, "266944": 302, "335429": 302, "388393": 302, "621329": 302, "212573": 302, "461262": 302, "277388": 302, "110075": 302, "003027": 302, "501489": 302, "366018": 302, "905147": 302, "380865": 302, "219194": 302, "961895": 302, "534496": 302, "546036": 302, "630512": 302, "231970": 302, "900845": 302, "682987": 302, "816485": 302, "988276": 302, "749003": 302, "802797": 302, "776532": 302, "725509": 302, "196823": 302, "662582": 302, "015416": 302, "212538": 302, "851698": 302, "488859": 302, "838099": 302, "140249": 302, "429352": 302, "743671": 302, "297823": 302, "659430": 302, "191840": 302, "880881": 302, "409142": 302, "775355": 302, "956378": 302, "630846": 302, "755737": 302, "794788": 302, "668763": 302, "483346": 302, "851982": 302, "382384": 302, "455902": 302, "793645": 302, "401748": 302, "498709": 302, "425364": 302, "928532": 302, "926835": 302, "497867": 302, "030662": 302, "366585": 302, "985533": 302, "565811": 302, "662370": 302, "551208": 302, "551558": 302, "630121": 302, "580405": 302, "552114": 302, "042324": 302, "035731": 302, "275622": 302, "040276": 302, "406685": 302, "957232": 302, "155311": 302, "515088": 302, "496993": 302, "361498": 302, "363698": 302, "751915": 302, "454421": 302, "024682": 302, "434510": 302, "952586": 302, "889492": 302, "575363": 302, "073635": 302, "073683": 302, "835458": 302, "253049": 302, "169888": 302, "879430": 302, "819836": 302, "497236": 302, "564632": 302, "178975": 302, "285544": 302, "765897": 302, "695028": 302, "264764": 302, "277992": 302, "586789": 302, "516160": 302, "572606": 302, "688954": 302, "249772": 302, "916145": 302, "244786": 302, "841335": 302, "659481": 302, "744242": 302, "416676": 302, "253768": 302, "936980": 302, "269584": 302, "069317": 302, "731451": 302, "605768": 302, "716822": 302, "746436": 302, "980420": 302, "132983": 302, "125029": 302, "763155": 302, "811144": 302, "105503": 302, "583418": 302, "686115": 302, "031564": 302, "850645": 302, "363551": 302, "043157": 302, "525306": 302, "052073": 302, "892175": 302, "225458": 302, "404922": 302, "435102": 302, "242420": 302, "699366": 302, "815026": 302, "589215": 302, "512603": 302, "509957": 302, "926077": 302, "923185": 302, "175264": 302, "481351": 302, "944302": 302, "824234": 302, "194473": 302, "735586": 302, "903583": 302, "550825": 302, "344235": 302, "556035": 302, "501681": 302, "875052": 302, "308617": 302, "874004": 302, "372005": 302, "432371": 302, "631308": 302, "133006": 302, "357159": 302, "323449": 302, "758791": 302, "iofv_summari": 302, "orgin": 302, "ob": 302, "sampled_mean": 302, "sampled_stdev": 302, "residual_q1": 302, "743042": 302, "219056": 302, "682820": 302, "550173": 302, "035912": 302, "049484": 302, "184218": 302, "853744": 302, "006216": 302, "975298": 302, "041599": 302, "817153": 302, "833045": 302, "781196": 302, "154061": 302, "813525": 302, "398238": 302, "645044": 302, "535071": 302, "205425": 302, "092618": 302, "104527": 302, "106160": 302, "955250": 302, "058617": 302, "344659": 302, "355728": 302, "480441": 302, "205000": 302, "804075": 302, "093249": 302, "372011": 302, "653334": 302, "076303": 302, "579270": 302, "515891": 302, "726464": 302, "480796": 302, "226795": 302, "894556": 302, "321253": 302, "216333": 302, "282456": 302, "045968": 302, "751381": 302, "998817": 302, "568506": 302, "544129": 302, "725055": 302, "084491": 302, "216676": 302, "724839": 302, "269729": 302, "664468": 302, "086120": 302, "099508": 302, "844053": 302, "234199": 302, "780837": 302, "277342": 302, "322169": 302, "051428": 302, "923117": 302, "660772": 302, "466385": 302, "260479": 302, "909214": 302, "004430": 302, "115441": 302, "597439": 302, "671231": 302, "358037": 302, "499079": 302, "674971": 302, "086542": 302, "331370": 302, "633905": 302, "558617": 302, "085015": 302, "554653": 302, "936751": 302, "068515": 302, "800265": 302, "310055": 302, "124015": 302, "712276": 302, "729628": 302, "167439": 302, "715703": 302, "274087": 302, "019852": 302, "305414": 302, "613668": 302, "109257": 302, "443973": 302, "056317": 302, "238664": 302, "161298": 302, "229080": 302, "385458": 302, "248420": 302, "105258": 302, "155784": 302, "539027": 302, "615940": 302, "605320": 302, "132029": 302, "756164": 302, "869343": 302, "544161": 302, "814910": 302, "779158": 302, "268737": 302, "897306": 302, "707535": 302, "453306": 302, "105961": 302, "531367": 302, "507478": 302, "179203": 302, "964192": 302, "235433": 302, "534690": 302, "029698": 302, "870557": 302, "187065": 302, "049483": 302, "611648": 302, "535116": 302, "053927": 302, "077425": 302, "840121": 302, "621227": 302, "470444": 302, "449597": 302, "941064": 302, "849583": 302, "418397": 302, "769517": 302, "495183": 302, "074840": 302, "265168": 302, "489546": 302, "543569": 302, "924754": 302, "255799": 302, "423379": 302, "792450": 302, "651388": 302, "107140": 302, "103779": 302, "709601": 302, "655290": 302, "365991": 302, "222470": 302, "908651": 302, "744590": 302, "726324": 302, "426971": 302, "126409": 302, "743926": 302, "055593": 302, "673502": 302, "381335": 302, "618133": 302, "047349": 302, "322600": 302, "222872": 302, "042834": 302, "180077": 302, "430602": 302, "209284": 302, "495631": 302, "189252": 302, "623118": 302, "780755": 302, "405726": 302, "643222": 302, "836788": 302, "746180": 302, "378962": 302, "498420": 302, "745719": 302, "565835": 302, "016391": 302, "193803": 302, "882538": 302, "054206": 302, "416539": 302, "288743": 302, "598975": 302, "649295": 302, "743847": 302, "028856": 302, "860963": 302, "709391": 302, "906579": 302, "841825": 302, "571912": 302, "121771": 302, "219260": 302, "791821": 302, "756310": 302, "933335": 302, "360735": 302, "121911": 302, "657069": 302, "952413": 302, "311206": 302, "124618": 302, "229621": 302, "945504": 302, "493299": 302, "630288": 302, "415407": 302, "756085": 302, "131488": 302, "213636": 302, "050337": 302, "463633": 302, "980475": 302, "118333": 302, "749123": 302, "229958": 302, "025404": 302, "813878": 302, "738522": 302, "668408": 302, "112740": 302, "972107": 302, "235064": 302, "396011": 302, "934618": 302, "518106": 302, "392308": 302, "216396": 302, "339562": 302, "024801": 302, "793238": 302, "057118": 302, "556378": 302, "796045": 302, "776264": 302, "019010": 302, "430617": 302, "431370": 302, "731493": 302, "527208": 302, "010968": 302, "724711": 302, "959211": 302, "448445": 302, "131466": 302, "302385": 302, "264697": 302, "597597": 302, "779232": 302, "494133": 302, "292477": 302, "639161": 302, "067293": 302, "167700": 302, "637834": 302, "067793": 302, "249132": 302, "314731": 302, "969084": 302, "239401": 302, "359860": 302, "215238": 302, "477740": 302, "578842": 302, "053376": 302, "340902": 302, "021182": 302, "172446": 302, "684367": 302, "059050": 302, "515114": 302, "245427": 302, "197044": 302, "787564": 302, "106919": 302, "970391": 302, "379183": 302, "982728": 302, "807580": 302, "296212": 302, "639192": 302, "874018": 302, "032032": 302, "252364": 302, "047063": 302, "residual_q3": 302, "residual_outli": 302, "832458": 302, "136329": 302, "090316": 302, "021748": 302, "766581": 302, "001176": 302, "238974": 302, "071653": 302, "388881": 302, "584759": 302, "780298": 302, "680349": 302, "043355": 302, "691710": 302, "827298": 302, "317850": 302, "008777": 302, "291308": 302, "498512": 302, "312807": 302, "178997": 302, "306182": 302, "116610": 302, "468439": 302, "007865": 302, "384037": 302, "344744": 302, "151930": 302, "790639": 302, "416342": 302, "637759": 302, "153920": 302, "135334": 302, "038095": 302, "705065": 302, "359915": 302, "588440": 302, "151899": 302, "730945": 302, "514178": 302, "784304": 302, "977290": 302, "707253": 302, "982678": 302, "384237": 302, "576792": 302, "302778": 302, "342653": 302, "313826": 302, "775998": 302, "274818": 302, "191111": 302, "817604": 302, "421290": 302, "461701": 302, "940801": 302, "437023": 302, "207477": 302, "755739": 302, "individual_predictions_plot": 302, "trim": 303, "modelsearch_dir1": 303, "hash": 303, "mytab_mox1": 303, "subfold": 303, "temporari": 303, "finish": 303, "recreat": 303, "frame": 303, "programmat": 303, "pharmpy_vers": 303, "tool_nam": 303, "start_tim": 303, "22t14": 303, "312240": 303, "end_tim": 303, "592109": 303, "common_opt": 303, "tmp": 303, "tool_result": 303, "locat": 303, "concis": 303, "newlin": 303, "semi": 303, "colon": 303, "endpoint": 303, "wildcard": 303, "nodepot": 303, "autom": 303, "gotcha": 304, "cran": 305, "rapid": 305, "remot": 305, "install_github": 305, "ref": 305, "install_pharmpi": 305, "session": 305, "packagevers": 305, "print_pharmpy_vers": 305, "reticul": 305, "miniconda": 305, "py_discover_config": 305, "conda_cr": 305, "python_vers": 305, "virtual": 305, "libpython": 305, "lib": 305, "libpython3": 305, "mirror": 305, "pipe": 305, "magrittr": 305}, "objects": {"pharmpy": [[263, 0, 0, "-", "model"], [264, 0, 0, "-", "modeling"], [265, 0, 0, "-", "tools"], [266, 0, 0, "-", "workflows"], [271, 6, 1, "cmdoption-pharmpy-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-version", "--version"], [271, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "ODESystem"], [24, 1, 1, "", "Parameter"], [25, 1, 1, "", "Parameters"], [26, 1, 1, "", "RandomVariables"], [27, 1, 1, "", "Results"], [28, 1, 1, "", "Statement"], [29, 1, 1, "", "Statements"], [30, 1, 1, "", "VariabilityHierarchy"], [31, 1, 1, "", "VariabilityLevel"], [32, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "admid"], [5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartment"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "admid"], [16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "init"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "name"], [24, 2, 1, "", "replace"], [24, 3, 1, "", "symbol"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "fixed"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "inits"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "names"], [25, 3, 1, "", "nonfixed"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "set_fix"], [25, 2, 1, "", "set_initial_estimates"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[26, 3, 1, "", "covariance_matrix"], [26, 2, 1, "", "create"], [26, 3, 1, "", "epsilon_levels"], [26, 3, 1, "", "epsilons"], [26, 3, 1, "", "eta_levels"], [26, 3, 1, "", "etas"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_rvs_with_same_dist"], [26, 3, 1, "", "iiv"], [26, 3, 1, "", "iov"], [26, 2, 1, "", "join"], [26, 3, 1, "", "names"], [26, 2, 1, "", "nearest_valid_parameters"], [26, 3, 1, "", "nrvs"], [26, 3, 1, "", "parameter_names"], [26, 2, 1, "", "parameters_sdcorr"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "replace_with_sympy_rvs"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "unjoin"], [26, 2, 1, "", "validate_parameters"], [26, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_and_reset_index"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[28, 3, 1, "", "free_symbols"], [28, 3, 1, "", "rhs_symbols"], [28, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[29, 3, 1, "", "after_odes"], [29, 3, 1, "", "before_odes"], [29, 2, 1, "", "dependencies"], [29, 2, 1, "", "direct_dependencies"], [29, 3, 1, "", "error"], [29, 2, 1, "", "find_assignment"], [29, 2, 1, "", "find_assignment_index"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "full_expression"], [29, 3, 1, "", "ode_system"], [29, 2, 1, "", "reassign"], [29, 2, 1, "", "remove_symbol_definitions"], [29, 2, 1, "", "subs"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "levels"], [30, 3, 1, "", "names"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[31, 2, 1, "", "create"], [31, 2, 1, "", "from_dict"], [31, 3, 1, "", "group"], [31, 3, 1, "", "name"], [31, 3, 1, "", "reference"], [31, 2, 1, "", "replace"], [31, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_effect_compartment"], [37, 5, 1, "", "add_estimation_step"], [38, 5, 1, "", "add_iiv"], [39, 5, 1, "", "add_individual_parameter"], [40, 5, 1, "", "add_iov"], [41, 5, 1, "", "add_lag_time"], [42, 5, 1, "", "add_metabolite"], [43, 5, 1, "", "add_peripheral_compartment"], [44, 5, 1, "", "add_pk_iiv"], [45, 5, 1, "", "add_population_parameter"], [46, 5, 1, "", "add_time_after_dose"], [47, 5, 1, "", "append_estimation_step_options"], [48, 5, 1, "", "bump_model_number"], [49, 5, 1, "", "calculate_aic"], [50, 5, 1, "", "calculate_bic"], [51, 5, 1, "", "calculate_corr_from_cov"], [52, 5, 1, "", "calculate_corr_from_prec"], [53, 5, 1, "", "calculate_cov_from_corrse"], [54, 5, 1, "", "calculate_cov_from_prec"], [55, 5, 1, "", "calculate_epsilon_gradient_expression"], [56, 5, 1, "", "calculate_eta_gradient_expression"], [57, 5, 1, "", "calculate_eta_shrinkage"], [58, 5, 1, "", "calculate_individual_parameter_statistics"], [59, 5, 1, "", "calculate_individual_shrinkage"], [60, 5, 1, "", "calculate_parameters_from_ucp"], [61, 5, 1, "", "calculate_pk_parameters_statistics"], [62, 5, 1, "", "calculate_prec_from_corrse"], [63, 5, 1, "", "calculate_prec_from_cov"], [64, 5, 1, "", "calculate_se_from_cov"], [65, 5, 1, "", "calculate_se_from_prec"], [66, 5, 1, "", "calculate_ucp_scale"], [67, 5, 1, "", "check_dataset"], [68, 5, 1, "", "check_high_correlations"], [69, 5, 1, "", "check_parameters_near_bounds"], [70, 5, 1, "", "cleanup_model"], [71, 5, 1, "", "convert_model"], [72, 5, 1, "", "create_basic_pk_model"], [73, 5, 1, "", "create_config_template"], [74, 5, 1, "", "create_joint_distribution"], [75, 5, 1, "", "create_rng"], [76, 5, 1, "", "create_symbol"], [77, 5, 1, "", "deidentify_data"], [78, 5, 1, "", "display_odes"], [79, 5, 1, "", "drop_columns"], [80, 5, 1, "", "drop_dropped_columns"], [81, 5, 1, "", "evaluate_epsilon_gradient"], [82, 5, 1, "", "evaluate_eta_gradient"], [83, 5, 1, "", "evaluate_expression"], [84, 5, 1, "", "evaluate_individual_prediction"], [85, 5, 1, "", "evaluate_population_prediction"], [86, 5, 1, "", "evaluate_weighted_residuals"], [87, 5, 1, "", "expand_additional_doses"], [88, 5, 1, "", "find_clearance_parameters"], [89, 5, 1, "", "find_volume_parameters"], [90, 5, 1, "", "fix_or_unfix_parameters"], [91, 5, 1, "", "fix_parameters"], [92, 5, 1, "", "fix_parameters_to"], [93, 5, 1, "", "get_baselines"], [94, 5, 1, "", "get_bioavailability"], [95, 5, 1, "", "get_cmt"], [96, 5, 1, "", "get_concentration_parameters_from_data"], [97, 5, 1, "", "get_config_path"], [98, 5, 1, "", "get_covariate_baselines"], [99, 5, 1, "", "get_doseid"], [100, 5, 1, "", "get_doses"], [101, 5, 1, "", "get_dv_symbol"], [102, 5, 1, "", "get_evid"], [103, 5, 1, "", "get_ids"], [104, 5, 1, "", "get_individual_parameters"], [105, 5, 1, "", "get_individual_prediction_expression"], [106, 5, 1, "", "get_initial_conditions"], [107, 5, 1, "", "get_lag_times"], [108, 5, 1, "", "get_mdv"], [109, 5, 1, "", "get_model_code"], [110, 5, 1, "", "get_model_covariates"], [111, 5, 1, "", "get_number_of_individuals"], [112, 5, 1, "", "get_number_of_observations"], [113, 5, 1, "", "get_number_of_observations_per_individual"], [114, 5, 1, "", "get_observation_expression"], [115, 5, 1, "", "get_observations"], [116, 5, 1, "", "get_omegas"], [117, 5, 1, "", "get_pk_parameters"], [118, 5, 1, "", "get_population_prediction_expression"], [119, 5, 1, "", "get_rv_parameters"], [120, 5, 1, "", "get_sigmas"], [121, 5, 1, "", "get_thetas"], [122, 5, 1, "", "get_unit_of"], [123, 5, 1, "", "get_zero_order_inputs"], [124, 5, 1, "", "greekify_model"], [125, 5, 1, "", "has_additive_error_model"], [126, 5, 1, "", "has_combined_error_model"], [127, 5, 1, "", "has_covariate_effect"], [128, 5, 1, "", "has_first_order_elimination"], [129, 5, 1, "", "has_linear_odes"], [130, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [131, 5, 1, "", "has_michaelis_menten_elimination"], [132, 5, 1, "", "has_mixed_mm_fo_elimination"], [133, 5, 1, "", "has_odes"], [134, 5, 1, "", "has_proportional_error_model"], [135, 5, 1, "", "has_random_effect"], [136, 5, 1, "", "has_weighted_error_model"], [137, 5, 1, "", "has_zero_order_absorption"], [138, 5, 1, "", "has_zero_order_elimination"], [139, 5, 1, "", "is_linearized"], [140, 5, 1, "", "is_real"], [141, 5, 1, "", "list_time_varying_covariates"], [142, 5, 1, "", "load_example_model"], [143, 5, 1, "", "make_declarative"], [144, 5, 1, "", "mu_reference_model"], [145, 5, 1, "", "omit_data"], [146, 5, 1, "", "plot_individual_predictions"], [147, 5, 1, "", "plot_iofv_vs_iofv"], [148, 5, 1, "", "plot_transformed_eta_distributions"], [149, 5, 1, "", "print_model_code"], [150, 5, 1, "", "print_model_symbols"], [151, 5, 1, "", "read_dataset_from_datainfo"], [152, 5, 1, "", "read_model"], [153, 5, 1, "", "read_model_from_string"], [154, 5, 1, "", "remove_covariance_step"], [155, 5, 1, "", "remove_covariate_effect"], [156, 5, 1, "", "remove_error_model"], [157, 5, 1, "", "remove_estimation_step"], [158, 5, 1, "", "remove_iiv"], [159, 5, 1, "", "remove_iov"], [160, 5, 1, "", "remove_lag_time"], [161, 5, 1, "", "remove_loq_data"], [162, 5, 1, "", "remove_peripheral_compartment"], [163, 5, 1, "", "remove_unused_parameters_and_rvs"], [164, 5, 1, "", "rename_symbols"], [165, 5, 1, "", "resample_data"], [166, 5, 1, "", "sample_individual_estimates"], [167, 5, 1, "", "sample_parameters_from_covariance_matrix"], [168, 5, 1, "", "sample_parameters_uniformly"], [169, 5, 1, "", "set_additive_error_model"], [170, 5, 1, "", "set_bolus_absorption"], [171, 5, 1, "", "set_combined_error_model"], [172, 5, 1, "", "set_covariates"], [173, 5, 1, "", "set_direct_effect"], [174, 5, 1, "", "set_dtbs_error_model"], [175, 5, 1, "", "set_dvid"], [176, 5, 1, "", "set_estimation_step"], [177, 5, 1, "", "set_evaluation_step"], [178, 5, 1, "", "set_first_order_absorption"], [179, 5, 1, "", "set_first_order_elimination"], [180, 5, 1, "", "set_iiv_on_ruv"], [181, 5, 1, "", "set_initial_condition"], [182, 5, 1, "", "set_initial_estimates"], [183, 5, 1, "", "set_lower_bounds"], [184, 5, 1, "", "set_michaelis_menten_elimination"], [185, 5, 1, "", "set_mixed_mm_fo_elimination"], [186, 5, 1, "", "set_name"], [187, 5, 1, "", "set_ode_solver"], [188, 5, 1, "", "set_peripheral_compartments"], [189, 5, 1, "", "set_power_on_ruv"], [190, 5, 1, "", "set_proportional_error_model"], [191, 5, 1, "", "set_seq_zo_fo_absorption"], [192, 5, 1, "", "set_time_varying_error_model"], [193, 5, 1, "", "set_tmdd"], [194, 5, 1, "", "set_transit_compartments"], [195, 5, 1, "", "set_upper_bounds"], [196, 5, 1, "", "set_weighted_error_model"], [197, 5, 1, "", "set_zero_order_absorption"], [198, 5, 1, "", "set_zero_order_elimination"], [199, 5, 1, "", "set_zero_order_input"], [200, 5, 1, "", "simplify_expression"], [201, 5, 1, "", "solve_ode_system"], [202, 5, 1, "", "split_joint_distribution"], [203, 5, 1, "", "transform_blq"], [204, 5, 1, "", "transform_etas_boxcox"], [205, 5, 1, "", "transform_etas_john_draper"], [206, 5, 1, "", "transform_etas_tdist"], [207, 5, 1, "", "translate_nmtran_time"], [208, 5, 1, "", "unconstrain_parameters"], [209, 5, 1, "", "undrop_columns"], [210, 5, 1, "", "unfix_parameters"], [211, 5, 1, "", "unfix_parameters_to"], [212, 5, 1, "", "update_initial_individual_estimates"], [213, 5, 1, "", "update_inits"], [214, 5, 1, "", "use_thetas_for_error_stdev"], [215, 5, 1, "", "write_csv"], [216, 5, 1, "", "write_model"]], "pharmpy.tools": [[217, 5, 1, "", "create_report"], [218, 5, 1, "", "create_results"], [219, 5, 1, "", "fit"], [220, 5, 1, "", "load_example_modelfit_results"], [221, 5, 1, "", "predict_influential_individuals"], [222, 5, 1, "", "predict_influential_outliers"], [223, 5, 1, "", "predict_outliers"], [224, 5, 1, "", "print_fit_summary"], [225, 5, 1, "", "rank_models"], [226, 5, 1, "", "read_modelfit_results"], [227, 5, 1, "", "read_results"], [228, 5, 1, "", "resume_tool"], [229, 5, 1, "", "retrieve_final_model"], [230, 5, 1, "", "retrieve_models"], [231, 5, 1, "", "run_allometry"], [232, 5, 1, "", "run_amd"], [233, 5, 1, "", "run_bootstrap"], [234, 5, 1, "", "run_covsearch"], [235, 5, 1, "", "run_estmethod"], [236, 5, 1, "", "run_iivsearch"], [237, 5, 1, "", "run_iovsearch"], [238, 5, 1, "", "run_modelfit"], [239, 5, 1, "", "run_modelsearch"], [240, 5, 1, "", "run_ruvsearch"], [241, 5, 1, "", "run_structsearch"], [242, 5, 1, "", "run_tool"], [243, 5, 1, "", "summarize_errors"], [244, 5, 1, "", "summarize_individuals"], [245, 5, 1, "", "summarize_individuals_count_table"], [246, 5, 1, "", "summarize_modelfit_results"], [247, 5, 1, "", "write_results"]], "pharmpy.workflows": [[248, 1, 1, "", "LocalDirectoryDatabase"], [249, 1, 1, "", "LocalDirectoryToolDatabase"], [250, 1, 1, "", "LocalModelDirectoryDatabase"], [251, 1, 1, "", "Log"], [252, 1, 1, "", "ModelDatabase"], [253, 1, 1, "", "NullModelDatabase"], [254, 1, 1, "", "NullToolDatabase"], [255, 1, 1, "", "Task"], [256, 1, 1, "", "ToolDatabase"], [257, 1, 1, "", "Workflow"], [258, 5, 1, "", "call_workflow"], [259, 3, 1, "", "default_model_database"], [260, 3, 1, "", "default_tool_database"], [261, 5, 1, "", "execute_workflow"], [262, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[248, 2, 1, "", "retrieve_file"], [248, 2, 1, "", "retrieve_local_files"], [248, 2, 1, "", "retrieve_model"], [248, 2, 1, "", "retrieve_modelfit_results"], [248, 2, 1, "", "store_local_file"], [248, 2, 1, "", "store_metadata"], [248, 2, 1, "", "store_model"], [248, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[249, 2, 1, "", "from_dict"], [249, 2, 1, "", "read_metadata"], [249, 2, 1, "", "store_local_file"], [249, 2, 1, "", "store_metadata"], [249, 2, 1, "", "store_results"], [249, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[250, 2, 1, "", "list_models"], [250, 2, 1, "", "snapshot"], [250, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[251, 2, 1, "", "from_dict"], [251, 3, 1, "", "log"], [251, 2, 1, "", "log_error"], [251, 2, 1, "", "log_warning"], [251, 2, 1, "", "to_dataframe"], [251, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[252, 2, 1, "", "retrieve_file"], [252, 2, 1, "", "retrieve_local_files"], [252, 2, 1, "", "retrieve_model"], [252, 2, 1, "", "retrieve_modelfit_results"], [252, 2, 1, "", "snapshot"], [252, 2, 1, "", "store_local_file"], [252, 2, 1, "", "store_metadata"], [252, 2, 1, "", "store_model"], [252, 2, 1, "", "store_modelfit_results"], [252, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[253, 2, 1, "", "retrieve_file"], [253, 2, 1, "", "retrieve_local_files"], [253, 2, 1, "", "retrieve_model"], [253, 2, 1, "", "retrieve_modelfit_results"], [253, 2, 1, "", "store_local_file"], [253, 2, 1, "", "store_metadata"], [253, 2, 1, "", "store_model"], [253, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[254, 2, 1, "", "read_metadata"], [254, 2, 1, "", "store_local_file"], [254, 2, 1, "", "store_metadata"], [254, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[256, 3, 1, "", "model_database"], [256, 3, 1, "", "path"], [256, 2, 1, "", "read_metadata"], [256, 2, 1, "", "store_local_file"], [256, 2, 1, "", "store_metadata"], [256, 2, 1, "", "store_results"]], "pharmpy-data-append": [[271, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [271, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[271, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[271, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [271, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[271, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [271, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[271, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [271, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [271, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [271, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [271, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [271, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [271, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[271, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[271, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[271, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[271, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[271, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[271, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[271, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [271, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[271, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[271, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [271, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[271, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[271, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [271, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [271, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[271, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[271, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [271, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [271, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [271, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [271, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[271, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[271, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[271, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[271, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [271, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [271, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [271, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[271, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[271, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[271, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[271, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[271, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[271, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[271, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[271, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[271, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[271, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[271, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[271, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [271, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [271, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [271, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [271, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [271, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [271, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [271, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [271, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [271, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [271, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [271, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[271, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [271, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[271, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[271, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [271, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [271, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [271, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[271, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[271, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [271, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[271, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[271, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [271, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [271, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[271, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [271, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 273, 293], "dataset": [0, 278, 289, 291, 303], "overview": [0, 295, 299], "pars": 0, "translat": 0, "step": [0, 289, 291, 301], "nm": 0, "tran": 0, "comment": 0, "line": [0, 271], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 291], "date": 0, "id": 0, "check": [0, 274], "tabl": 0, "file": [0, 273, 278], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 274], "all": 0, "zero": 0, "individu": [0, 267, 268, 282, 288, 290, 302], "control": 0, "stream": 0, "gener": [0, 287], "option": [0, 266, 303], "problem": 0, "data": [0, 266, 271], "eta": [0, 291], "code": [0, 272, 274], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 27, 267, 268, 271, 276, 277, 281, 282, 284, 286, 288, 290, 292, 297, 299, 300, 301, 302, 303], "spars": 0, "matrix": [0, 267, 290], "allometri": [1, 2, 271, 291], "run": [1, 2, 271, 274, 276, 281, 284, 286, 292, 300, 303], "argument": [1, 2, 276, 281, 284, 286, 292, 300], "procedur": [1, 300], "The": [1, 267, 268, 271, 273, 277, 279, 281, 282, 284, 288, 289, 292, 297, 299, 300, 301, 302], "automat": 2, "model": [2, 18, 263, 264, 271, 278, 279, 284, 289, 290, 291, 292, 293, 297, 300, 303], "develop": [2, 274, 275, 280], "amd": [2, 271], "input": [2, 275], "search": [2, 284, 292], "space": [2, 292], "order": 2, "subtool": 2, "structur": [2, 284, 291, 299], "iivsearch": [2, 271, 284], "iovsearch": [2, 271, 286], "residu": [2, 290, 299], "covari": [2, 267, 268, 282, 284, 290, 291, 299], "api": 3, "refer": [3, 268, 282], "assign": 4, "bolu": 5, "columninfo": [6, 278], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 278, 289], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 286, 289, 291], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "odesystem": 23, "paramet": [24, 25, 267, 279, 282, 289, 290, 291, 293], "randomvari": [26, 279], "statement": [28, 29, 279, 289], "variabilityhierarchi": 30, "variabilitylevel": 31, "to_compartmental_system": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_effect_compart": 36, "add_estimation_step": 37, "add_iiv": [38, 271], "add_individual_paramet": 39, "add_iov": [40, 271], "add_lag_tim": 41, "add_metabolit": 42, "add_peripheral_compart": 43, "add_pk_iiv": 44, "add_population_paramet": 45, "add_time_after_dos": 46, "append_estimation_step_opt": 47, "bump_model_numb": 48, "calculate_a": 49, "calculate_b": 50, "calculate_corr_from_cov": 51, "calculate_corr_from_prec": 52, "calculate_cov_from_corrs": 53, "calculate_cov_from_prec": 54, "calculate_epsilon_gradient_express": 55, "calculate_eta_gradient_express": 56, "calculate_eta_shrinkag": 57, "calculate_individual_parameter_statist": 58, "calculate_individual_shrinkag": 59, "calculate_parameters_from_ucp": 60, "calculate_pk_parameters_statist": 61, "calculate_prec_from_corrs": 62, "calculate_prec_from_cov": 63, "calculate_se_from_cov": 64, "calculate_se_from_prec": 65, "calculate_ucp_scal": 66, "check_dataset": 67, "check_high_correl": 68, "check_parameters_near_bound": 69, "cleanup_model": 70, "convert_model": 71, "create_basic_pk_model": 72, "create_config_templ": 73, "create_joint_distribut": [74, 271], "create_rng": 75, "create_symbol": 76, "deidentify_data": 77, "display_od": 78, "drop_column": 79, "drop_dropped_column": 80, "evaluate_epsilon_gradi": 81, "evaluate_eta_gradi": 82, "evaluate_express": 83, "evaluate_individual_predict": 84, "evaluate_population_predict": 85, "evaluate_weighted_residu": 86, "expand_additional_dos": 87, "find_clearance_paramet": 88, "find_volume_paramet": 89, "fix_or_unfix_paramet": 90, "fix_paramet": 91, "fix_parameters_to": 92, "get_baselin": 93, "get_bioavail": 94, "get_cmt": 95, "get_concentration_parameters_from_data": 96, "get_config_path": 97, "get_covariate_baselin": 98, "get_doseid": 99, "get_dos": 100, "get_dv_symbol": 101, "get_evid": 102, "get_id": 103, "get_individual_paramet": 104, "get_individual_prediction_express": 105, "get_initial_condit": 106, "get_lag_tim": 107, "get_mdv": 108, "get_model_cod": 109, "get_model_covari": 110, "get_number_of_individu": 111, "get_number_of_observ": 112, "get_number_of_observations_per_individu": 113, "get_observation_express": 114, "get_observ": 115, "get_omega": 116, "get_pk_paramet": 117, "get_population_prediction_express": 118, "get_rv_paramet": 119, "get_sigma": 120, "get_theta": 121, "get_unit_of": 122, "get_zero_order_input": 123, "greekify_model": 124, "has_additive_error_model": 125, "has_combined_error_model": 126, "has_covariate_effect": 127, "has_first_order_elimin": 128, "has_linear_od": 129, "has_linear_odes_with_real_eigenvalu": 130, "has_michaelis_menten_elimin": 131, "has_mixed_mm_fo_elimin": 132, "has_od": 133, "has_proportional_error_model": 134, "has_random_effect": 135, "has_weighted_error_model": 136, "has_zero_order_absorpt": 137, "has_zero_order_elimin": 138, "is_linear": 139, "is_real": 140, "list_time_varying_covari": 141, "load_example_model": 142, "make_declar": 143, "mu_reference_model": 144, "omit_data": 145, "plot_individual_predict": 146, "plot_iofv_vs_iofv": 147, "plot_transformed_eta_distribut": 148, "print_model_cod": 149, "print_model_symbol": 150, "read_dataset_from_datainfo": 151, "read_model": 152, "read_model_from_str": 153, "remove_covariance_step": 154, "remove_covariate_effect": 155, "remove_error_model": 156, "remove_estimation_step": 157, "remove_iiv": [158, 271], "remove_iov": [159, 271], "remove_lag_tim": 160, "remove_loq_data": 161, "remove_peripheral_compart": 162, "remove_unused_parameters_and_rv": 163, "rename_symbol": 164, "resample_data": 165, "sample_individual_estim": 166, "sample_parameters_from_covariance_matrix": 167, "sample_parameters_uniformli": 168, "set_additive_error_model": 169, "set_bolus_absorpt": 170, "set_combined_error_model": 171, "set_covari": 172, "set_direct_effect": 173, "set_dtbs_error_model": 174, "set_dvid": 175, "set_estimation_step": 176, "set_evaluation_step": 177, "set_first_order_absorpt": 178, "set_first_order_elimin": 179, "set_iiv_on_ruv": 180, "set_initial_condit": 181, "set_initial_estim": 182, "set_lower_bound": 183, "set_michaelis_menten_elimin": 184, "set_mixed_mm_fo_elimin": 185, "set_nam": 186, "set_ode_solv": 187, "set_peripheral_compart": 188, "set_power_on_ruv": 189, "set_proportional_error_model": 190, "set_seq_zo_fo_absorpt": 191, "set_time_varying_error_model": 192, "set_tmdd": 193, "set_transit_compart": 194, "set_upper_bound": 195, "set_weighted_error_model": 196, "set_zero_order_absorpt": 197, "set_zero_order_elimin": 198, "set_zero_order_input": 199, "simplify_express": 200, "solve_ode_system": 201, "split_joint_distribut": 202, "transform_blq": 203, "transform_etas_boxcox": 204, "transform_etas_john_drap": 205, "transform_etas_tdist": 206, "translate_nmtran_tim": 207, "unconstrain_paramet": 208, "undrop_column": 209, "unfix_paramet": 210, "unfix_parameters_to": 211, "update_initial_individual_estim": 212, "update_init": [213, 271], "use_thetas_for_error_stdev": 214, "write_csv": 215, "write_model": 216, "create_report": 217, "create_result": 218, "fit": [219, 290], "load_example_modelfit_result": 220, "predict_influential_individu": 221, "predict_influential_outli": 222, "predict_outli": 223, "print_fit_summari": 224, "rank_model": 225, "read_modelfit_result": 226, "read_result": 227, "resume_tool": 228, "retrieve_final_model": 229, "retrieve_model": 230, "run_allometri": 231, "run_amd": 232, "run_bootstrap": 233, "run_covsearch": 234, "run_estmethod": 235, "run_iivsearch": 236, "run_iovsearch": 237, "run_modelfit": 238, "run_modelsearch": 239, "run_ruvsearch": 240, "run_structsearch": 241, "run_tool": 242, "summarize_error": 243, "summarize_individu": 244, "summarize_individuals_count_t": 245, "summarize_modelfit_result": 246, "write_result": 247, "localdirectorydatabas": 248, "localdirectorytooldatabas": 249, "localmodeldirectorydatabas": 250, "log": 251, "modeldatabas": 252, "nullmodeldatabas": 253, "nulltooldatabas": 254, "task": 255, "tooldatabas": 256, "workflow": [257, 266, 274], "call_workflow": 258, "default_model_databas": 259, "default_tool_databas": 260, "execute_workflow": 261, "split_common_opt": 262, "pharmpi": [263, 264, 265, 266, 270, 271, 272, 273, 274, 278, 279, 285, 289, 294, 298, 303, 305], "packag": [263, 264, 265, 266], "function": [263, 264, 265, 266, 291], "class": [263, 266, 279], "tool": [265, 298, 303], "modul": [266, 279], "bootstrap": [267, 271], "postprocess": [267, 282], "statist": 267, "ofv": [267, 268, 271, 277, 282, 288, 290, 301, 302], "includ": 267, "case": 268, "delet": 268, "diagnost": 268, "cdd": [268, 271], "cook": 268, "score": 268, "jackknif": 268, "cookscor": 268, "ratio": 268, "delta": 268, "skip": 268, "column": 268, "changelog": 269, "0": 269, "97": 269, "2023": 269, "06": 269, "28": 269, "new": [269, 286, 293], "featur": [269, 292, 303], "chang": [269, 294], "96": 269, "05": 269, "26": 269, "bugfix": 269, "95": 269, "22": 269, "94": 269, "04": 269, "93": 269, "19": 269, "92": 269, "91": 269, "03": 269, "90": 269, "02": 269, "24": 269, "89": 269, "01": 269, "88": 269, "2022": 269, "12": 269, "21": 269, "87": 269, "14": 269, "86": 269, "11": 269, "30": 269, "85": 269, "18": 269, "84": 269, "1": 269, "13": 269, "bug": 269, "fix": 269, "09": 269, "83": 269, "82": 269, "10": 269, "81": 269, "80": 269, "79": 269, "16": 269, "78": 269, "20": 269, "77": 269, "08": 269, "76": 269, "75": 269, "74": 269, "07": 269, "73": 269, "72": 269, "71": 269, "70": 269, "17": 269, "69": 269, "29": 269, "68": 269, "27": 269, "67": 269, "25": 269, "66": 269, "65": 269, "64": 269, "63": 269, "62": 269, "61": 269, "31": 269, "59": 269, "58": 269, "4": 269, "57": 269, "56": 269, "55": 269, "54": 269, "53": 269, "52": 269, "51": 269, "50": 269, "49": 269, "48": 269, "47": 269, "46": 269, "45": 269, "44": 269, "43": 269, "42": 269, "41": 269, "2021": 269, "40": 269, "39": 269, "15": 269, "38": 269, "37": 269, "36": 269, "35": 269, "34": 269, "3": 269, "2": [269, 287], "33": 269, "32": 269, "23": 269, "2020": 269, "9": 269, "8": 269, "7": 269, "6": 269, "5": 269, "2018": 269, "citat": 270, "how": 270, "cite": 270, "pharmr": [270, 305], "command": 271, "interfac": 271, "append": 271, "deidentifi": 271, "filter": 271, "print": 271, "resampl": 271, "write": [271, 289, 291, 293], "info": 271, "absorption_r": 271, "add_cov_effect": 271, "boxcox": [271, 299], "elimination_r": 271, "error": [271, 290, 291, 299, 305], "iiv_on_ruv": 271, "john_drap": 271, "peripheral_compart": 271, "power_on_ruv": 271, "sampl": [271, 302], "tdist": [271, 299], "transit_compart": 271, "frem": [271, 282], "linear": [271, 288], "qa": [271, 299], "report": 271, "ruvsearch": [271, 300], "scm": [271, 301], "simev": [271, 302], "summari": [271, 301, 302], "covsearch": [271, 276], "estmethod": [271, 281], "execut": 271, "modelsearch": [271, 292], "commun": 272, "conduct": 272, "configur": 273, "avail": 273, "plugin": [273, 293, 295], "nlmixr": 273, "rxode": 273, "environ": [273, 274], "variabl": [273, 282, 289, 291, 293], "contribut": 274, "set": [274, 294], "up": 274, "support": 274, "platform": 274, "instal": [274, 283, 305], "python": [274, 305], "git": 274, "fork": 274, "clone": 274, "repositori": 274, "tox": 274, "graphviz": 274, "us": [274, 293, 305], "build": 274, "document": [274, 280], "unit": [274, 278], "test": 274, "integr": 274, "usabl": 274, "virtual": 274, "standard": [274, 290], "releas": 274, "version": [274, 305], "inform": [274, 291], "contributor": 275, "scientif": 275, "fund": 275, "effect": [276, 282, 299], "wildcard": 276, "algorithm": [276, 281, 284, 286, 292], "crossval": 277, "crossvalid": 277, "retriev": 278, "from": 278, "updat": [278, 281], "type": [278, 303], "scale": 278, "continu": 278, "categori": 278, "drop": 278, "datatyp": 278, "descriptor": 278, "design": 279, "principl": 279, "level": [279, 289], "architectur": 279, "heart": 279, "docstr": 279, "depend": [279, 289], "exhaust": [281, 292], "onli": 281, "evalu": 281, "method": 281, "solver": 281, "coeffici": 282, "unexplain": 282, "estim": [282, 289, 290, 291], "valu": 282, "get": 283, "start": [283, 284], "A": 283, "first": 283, "exampl": [283, 291, 303], "brute": 284, "forc": 284, "number": 284, "iiv": [284, 292], "full": 284, "ad": [284, 289, 291, 292], "compar": [284, 286, 292], "rank": [284, 286, 292], "candid": [284, 286, 292, 301], "welcom": 285, "iov": 286, "licens": 287, "logo": 287, "copyright": 287, "bsd": 287, "claus": 287, "gnu": 287, "lesser": 287, "public": 287, "read": [289, 291, 293], "inspect": 289, "attribut": 289, "name": [289, 293], "descript": [289, 303], "random": [289, 293], "low": 289, "manipul": 289, "object": 289, "creat": [289, 291], "substitut": 289, "symbol": [289, 303], "numer": 289, "modelfit": 290, "final": 290, "rel": 290, "correl": 290, "precis": 290, "indiviud": 290, "predict": [290, 302], "basic": 291, "load": 291, "convert": 291, "transform": 291, "absorpt": 291, "rate": 291, "delai": 291, "elimin": 291, "remov": 291, "popul": 291, "blq": 291, "examin": 291, "modifi": 291, "subject": 291, "observ": 291, "dose": 291, "extract": 291, "group": 291, "after": 291, "concentr": 291, "common": [292, 303], "behaviour": 292, "between": [292, 305], "combin": 292, "exclus": 292, "stepwis": 292, "reduc": 292, "dure": 292, "plot": [294, 302], "theme": 294, "axi": 294, "project": 296, "suggest": 296, "resmod": 297, "psn": 298, "connect": 298, "bia": 299, "fullblock": 299, "databas": 303, "directori": 303, "metadata": 303, "languag": 303, "mfl": 303, "describ": 303, "interv": 303, "redund": 303, "user": 304, "guid": 304, "r": 305, "troubl": 305, "shoot": 305, "wrong": 305, "when": 305, "conda": 305, "import": 305, "mismatch": 305, "gotcha": 305, "list": 305, "indic": 305}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"create_config_template": [[73, "create-config-template"]], "append_estimation_step_options": [[47, "append-estimation-step-options"]], "cleanup_model": [[70, "cleanup-model"]], "create_rng": [[75, "create-rng"]], "calculate_pk_parameters_statistics": [[61, "calculate-pk-parameters-statistics"]], "bump_model_number": [[48, "bump-model-number"]], "calculate_eta_shrinkage": [[57, "calculate-eta-shrinkage"]], "convert_model": [[71, "convert-model"]], "add_peripheral_compartment": [[43, "add-peripheral-compartment"]], "calculate_prec_from_corrse": [[62, "calculate-prec-from-corrse"]], "calculate_epsilon_gradient_expression": [[55, "calculate-epsilon-gradient-expression"]], "create_basic_pk_model": [[72, "create-basic-pk-model"]], "add_time_after_dose": [[46, "add-time-after-dose"]], "add_lag_time": [[41, "add-lag-time"]], "calculate_eta_gradient_expression": [[56, "calculate-eta-gradient-expression"]], "calculate_individual_shrinkage": [[59, "calculate-individual-shrinkage"]], "calculate_corr_from_cov": [[51, "calculate-corr-from-cov"]], "add_iov": [[40, "add-iov"]], "calculate_se_from_prec": [[65, "calculate-se-from-prec"]], "calculate_ucp_scale": [[66, "calculate-ucp-scale"]], "calculate_parameters_from_ucp": [[60, "calculate-parameters-from-ucp"]], "check_dataset": [[67, "check-dataset"]], "calculate_aic": [[49, "calculate-aic"]], "add_population_parameter": [[45, "add-population-parameter"]], "calculate_se_from_cov": [[64, "calculate-se-from-cov"]], "create_symbol": [[76, "create-symbol"]], "calculate_corr_from_prec": [[52, "calculate-corr-from-prec"]], "add_pk_iiv": [[44, "add-pk-iiv"]], "calculate_prec_from_cov": [[63, "calculate-prec-from-cov"]], "calculate_bic": [[50, "calculate-bic"]], "deidentify_data": [[77, "deidentify-data"]], "calculate_cov_from_corrse": [[53, "calculate-cov-from-corrse"]], "add_individual_parameter": [[39, "add-individual-parameter"]], "check_high_correlations": [[68, "check-high-correlations"]], "create_joint_distribution": [[74, "create-joint-distribution"]], "check_parameters_near_bounds": [[69, "check-parameters-near-bounds"]], "calculate_cov_from_prec": [[54, "calculate-cov-from-prec"]], "calculate_individual_parameter_statistics": [[58, "calculate-individual-parameter-statistics"]], "add_metabolite": [[42, "add-metabolite"]], "Assignment": [[4, "assignment"]], "RandomVariables": [[26, "randomvariables"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Running": [[2, "running"], [1, "running"], [281, "running"], [284, "running"], [300, "running"], [292, "running"], [276, "running"], [286, "running"]], "Arguments": [[2, "arguments"], [1, "arguments"], [281, "arguments"], [284, "arguments"], [300, "arguments"], [292, "arguments"], [276, "arguments"], [286, "arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [284, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [286, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [27, "results"], [303, "results"], [276, "results"], [286, "results"]], "VariabilityLevel": [[31, "variabilitylevel"]], "ColumnInfo": [[6, "columninfo"], [278, "columninfo"]], "add_estimation_step": [[37, "add-estimation-step"]], "Distribution": [[13, "distribution"], [291, "distribution"]], "Compartment": [[7, "compartment"]], "add_effect_compartment": [[36, "add-effect-compartment"]], "DataInfo": [[10, "datainfo"], [278, "datainfo"]], "add_covariance_step": [[34, "add-covariance-step"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "ModelError": [[19, "modelerror"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "Infusion": [[16, "infusion"]], "Parameters": [[25, "parameters"], [289, "parameters"]], "ODESystem": [[23, "odesystem"]], "Statements": [[29, "statements"], [289, "statements"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [300, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "Statement": [[28, "statement"]], "API Reference": [[3, "api-reference"]], "DatasetError": [[11, "dataseterror"]], "EstimationSteps": [[15, "estimationsteps"]], "Model": [[18, "model"]], "Parameter": [[24, "parameter"]], "to_compartmental_system": [[32, "to-compartmental-system"]], "Bolus": [[5, "bolus"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "EstimationStep": [[14, "estimationstep"]], "VariabilityHierarchy": [[30, "variabilityhierarchy"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "add_iiv": [[38, "add-iiv"]], "NormalDistribution": [[22, "normaldistribution"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "add_allometry": [[33, "add-allometry"]], "DatasetWarning": [[12, "datasetwarning"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "run_covsearch": [[234, "run-covsearch"]], "pharmpy.tools Package": [[265, "module-pharmpy.tools"]], "Functions": [[265, "functions"], [266, "functions"], [263, "functions"], [264, "functions"]], "Changelog": [[269, "changelog"]], "0.97.0 (2023-06-28)": [[269, "id1"]], "New features": [[269, "new-features"], [269, "id4"], [269, "id9"], [269, "id13"], [269, "id17"], [269, "id20"], [269, "id24"], [269, "id27"], [269, "id30"], [269, "id43"], [269, "id53"], [269, "id60"], [269, "id71"], [269, "id75"], [269, "id82"], [269, "id85"], [269, "id89"], [269, "id95"], [269, "id99"], [269, "id105"], [269, "id110"], [269, "id114"], [269, "id117"], [269, "id125"], [269, "id129"], [269, "id135"], [269, "id144"], [269, "id148"], [269, "id151"], [269, "id155"], [269, "id157"], [269, "id162"], [269, "id165"], [269, "id169"]], "Changes": [[269, "changes"], [269, "id3"], [269, "id6"], [269, "id10"], [269, "id14"], [269, "id21"], [269, "id25"], [269, "id28"], [269, "id31"], [269, "id33"], [269, "id35"], [269, "id38"], [269, "id41"], [269, "id44"], [269, "id46"], [269, "id49"], [269, "id54"], [269, "id57"], [269, "id61"], [269, "id64"], [269, "id67"], [269, "id72"], [269, "id76"], [269, "id79"], [269, "id83"], [269, "id86"], [269, "id90"], [269, "id96"], [269, "id100"], [269, "id111"], [269, "id115"], [269, "id120"], [269, "id126"], [269, "id136"], [269, "id141"], [269, "id145"], [269, "id152"], [269, "id158"], [269, "id163"], [269, "id166"], [269, "id170"]], "0.96.0 (2023-05-26)": [[269, "id2"]], "Bugfixes": [[269, "bugfixes"], [269, "id7"], [269, "id11"], [269, "id15"], [269, "id18"], [269, "id22"], [269, "id36"], [269, "id39"], [269, "id65"], [269, "id69"], [269, "id73"], [269, "id77"], [269, "id80"], [269, "id87"], [269, "id91"], [269, "id93"], [269, "id97"], [269, "id101"], [269, "id103"], [269, "id106"], [269, "id108"], [269, "id112"], [269, "id118"], [269, "id121"], [269, "id123"], [269, "id127"], [269, "id131"], [269, "id133"], [269, "id137"], [269, "id139"], [269, "id142"], [269, "id146"], [269, "id149"], [269, "id153"], [269, "id160"], [269, "id167"], [269, "id171"]], "0.95.0 (2023-05-22)": [[269, "id5"]], "0.94.0 (2023-04-26)": [[269, "id8"]], "0.93.0 (2023-04-19)": [[269, "id12"]], "0.92.0 (2023-04-05)": [[269, "id16"]], "0.91.0 (2023-03-03)": [[269, "id19"]], "0.90.0 (2023-02-24)": [[269, "id23"]], "0.89.0 (2023-01-26)": [[269, "id26"]], "0.88.0 (2022-12-21)": [[269, "id29"]], "0.87.0 (2022-12-14)": [[269, "id32"]], "0.86.0 (2022-11-30)": [[269, "id34"]], "0.85.0 (2022-11-18)": [[269, "id37"]], "0.84.1 (2022-11-13)": [[269, "id40"]], "Bug fixes": [[269, "bug-fixes"], [269, "id47"], [269, "id51"], [269, "id55"], [269, "id58"], [269, "id62"]], "0.84.0 (2022-11-09)": [[269, "id42"]], "0.83.0 (2022-11-01)": [[269, "id45"]], "0.82.0 (2022-10-24)": [[269, "id48"]], "0.81.1 (2022-10-24)": [[269, "id50"]], "0.81.0 (2022-10-21)": [[269, "id52"]], "0.80.0 (2022-10-19)": [[269, "id56"]], "0.79.0 (2022-10-16)": [[269, "id59"]], "0.78.0 (2022-09-20)": [[269, "id63"]], "0.77.0 (2022-09-08)": [[269, "id66"]], "0.76.1 (2022-09-06)": [[269, "id68"]], "0.76.0 (2022-09-05)": [[269, "id70"]], "0.75.0 (2022-08-10)": [[269, "id74"]], "0.74.0 (2022-07-18)": [[269, "id78"]], "0.73.0 (2022-06-21)": [[269, "id81"]], "0.72.0 (2022-06-08)": [[269, "id84"]], "0.71.0 (2022-05-24)": [[269, "id88"]], "0.70.1 (2022-05-17)": [[269, "id92"]], "0.70.0 (2022-05-13)": [[269, "id94"]], "0.69.0 (2022-04-29)": [[269, "id98"]], "0.68.0 (2022-04-27)": [[269, "id102"]], "0.67.0 (2022-04-25)": [[269, "id104"]], "0.66.0 (2022-04-20)": [[269, "id107"]], "0.65.0 (2022-04-14)": [[269, "id109"]], "0.64.0 (2022-04-12)": [[269, "id113"]], "0.63.0 (2022-04-07)": [[269, "id116"]], "0.62.0 (2022-04-04)": [[269, "id119"]], "New feature": [[269, "new-feature"]], "0.61.1 (2022-03-31)": [[269, "id122"]], "0.61.0 (2022-03-29)": [[269, "id124"]], "0.59.0 (2022-03-25)": [[269, "id128"]], "0.58.4 (2022-03-24)": [[269, "id130"]], "0.58.1 (2022-03-22)": [[269, "id132"]], "0.58.0 (2022-03-22)": [[269, "id134"]], "0.57.0 (2022-03-21)": [[269, "id138"]], "0.56.0 (2022-03-17)": [[269, "id140"]], "0.55.0 (2022-03-16)": [[269, "id143"]], "0.54.0 (2022-03-08)": [[269, "id147"]], "0.53.0 (2022-03-04)": [[269, "id150"]], "0.52.0 (2022-02-25)": [[269, "id154"]], "0.51.0 (2022-02-24)": [[269, "id156"]], "0.50.1 (2022-02-16)": [[269, "id159"]], "0.50.0 (2022-02-16)": [[269, "id161"]], "0.49.0 (2022-02-10)": [[269, "id164"]], "0.48.0 (2022-02-04)": [[269, "id168"]], "0.47.0 (2022-01-28)": [[269, "id172"]], "0.46.0 (2022-01-27)": [[269, "id173"]], "0.45.0 (2022-01-21)": [[269, "id174"]], "0.44.0 (2022-01-20)": [[269, "id175"]], "0.43.0 (2022-01-12)": [[269, "id176"]], "0.42.0 (2022-01-11)": [[269, "id177"]], "0.41.0 (2021-12-21)": [[269, "id178"]], "0.40.0 (2021-12-16)": [[269, "id179"]], "0.39.0 (2021-12-15)": [[269, "id180"]], "0.38.0 (2021-12-08)": [[269, "id181"]], "0.37.1 (2021-11-26)": [[269, "id182"]], "0.37.0 (2021-11-24)": [[269, "id183"]], "0.36.0 (2021-11-11)": [[269, "id184"]], "0.35.0 (2021-11-02)": [[269, "id185"]], "0.34.3 (2021-10-28)": [[269, "id186"]], "0.34.2 (2021-10-26)": [[269, "id187"]], "0.34.1 (2021-10-20)": [[269, "id188"]], "0.34.0 (2021-10-14)": [[269, "id189"]], "0.33.0 (2021-10-11)": [[269, "id190"]], "0.32.0 (2021-09-28)": [[269, "id191"]], "0.31.0 (2021-09-21)": [[269, "id192"]], "0.30.0 (2021-09-06)": [[269, "id193"]], "0.29.0 (2021-08-25)": [[269, "id194"]], "0.28.0 (2021-08-24)": [[269, "id195"]], "0.27.0 (2021-08-09)": [[269, "id196"]], "0.26.1 (2021-08-04)": [[269, "id197"]], "0.26.0 (2021-07-13)": [[269, "id198"]], "0.25.1 (2021-07-08)": [[269, "id199"]], "0.25.0 (2021-06-24)": [[269, "id200"]], "0.24.0 (2021-05-25)": [[269, "id201"]], "0.23.4 (2021-05-03)": [[269, "id202"]], "0.23.3 (2021-04-29)": [[269, "id203"]], "0.23.2 (2021-04-28)": [[269, "id204"]], "0.23.1 (2021-04-28)": [[269, "id205"]], "0.23.0 (2021-04-28)": [[269, "id206"]], "0.22.0 (2021-03-29)": [[269, "id207"]], "0.21.0 (2021-03-22)": [[269, "id208"]], "0.20.1 (2021-03-11)": [[269, "id209"]], "0.20.0 (2021-03-11)": [[269, "id210"]], "0.19.0 (2021-03-02)": [[269, "id211"]], "0.18.0 (2021-03-01)": [[269, "id212"]], "0.17.0 (2021-02-15)": [[269, "id213"]], "0.16.0 (2021-02-08)": [[269, "id214"]], "0.15.0 (2021-02-01)": [[269, "id215"]], "0.14.0 (2021-01-25)": [[269, "id216"]], "0.13.0 (2021-01-18)": [[269, "id217"]], "0.12.0 (2020-12-18)": [[269, "id218"]], "0.11.0 (2020-11-20)": [[269, "id219"]], "0.10.0 (2020-11-16)": [[269, "id220"]], "0.9.0 (2020-10-26)": [[269, "id221"]], "0.8.0 (2020-10-08)": [[269, "id222"]], "0.7.0 (2020-09-28)": [[269, "id223"]], "0.6.0 (2020-09-18)": [[269, "id224"]], "0.5.0 (2020-09-04)": [[269, "id225"]], "0.4.0 (2020-07-24)": [[269, "id226"]], "0.3.0 (2020-06-16)": [[269, "id227"]], "0.2.0 (2020-03-27)": [[269, "id228"]], "0.1.0 (2018-07-22)": [[269, "id229"]], "Pharmpy Community Code of Conduct": [[272, "pharmpy-community-code-of-conduct"]], "run_ruvsearch": [[240, "run-ruvsearch"]], "Bootstrap": [[267, "bootstrap"]], "The Bootstrap postprocessing and results": [[267, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[267, "parameter-statistics"]], "OFV statistics": [[267, "ofv-statistics"]], "Covariance matrix": [[267, "covariance-matrix"], [290, "covariance-matrix"]], "Included individuals": [[267, "included-individuals"]], "Case deletion diagnostics": [[268, "case-deletion-diagnostics"]], "The cdd results": [[268, "the-cdd-results"]], "Case results": [[268, "case-results"]], "Cook score": [[268, "cook-score"]], "Jackknife cookscore": [[268, "jackknife-cookscore"]], "Covariance ratio": [[268, "covariance-ratio"]], "Delta OFV": [[268, "delta-ofv"]], "Skipped individuals": [[268, "skipped-individuals"]], "Case column": [[268, "case-column"]], "References": [[268, "references"], [282, "references"]], "run_iivsearch": [[236, "run-iivsearch"]], "default_tool_database": [[260, "default-tool-database"]], "The Pharmpy command line interface": [[271, "the-pharmpy-command-line-interface"]], "pharmpy": [[271, "pharmpy"]], "pharmpy data": [[271, "pharmpy-data"]], "pharmpy data append": [[271, "pharmpy-data-append"]], "pharmpy data deidentify": [[271, "pharmpy-data-deidentify"]], "pharmpy data filter": [[271, "pharmpy-data-filter"]], "pharmpy data print": [[271, "pharmpy-data-print"]], "pharmpy data resample": [[271, "pharmpy-data-resample"]], "pharmpy data write": [[271, "pharmpy-data-write"]], "pharmpy info": [[271, "pharmpy-info"]], "pharmpy model": [[271, "pharmpy-model"]], "pharmpy model absorption_rate": [[271, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[271, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[271, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[271, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[271, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[271, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[271, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[271, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[271, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[271, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[271, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[271, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[271, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[271, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[271, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[271, "pharmpy-model-sample"]], "pharmpy model tdist": [[271, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[271, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[271, "pharmpy-model-update-inits"]], "pharmpy results": [[271, "pharmpy-results"]], "pharmpy results bootstrap": [[271, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[271, "pharmpy-results-cdd"]], "pharmpy results frem": [[271, "pharmpy-results-frem"]], "pharmpy results linearize": [[271, "pharmpy-results-linearize"]], "pharmpy results ofv": [[271, "pharmpy-results-ofv"]], "pharmpy results print": [[271, "pharmpy-results-print"]], "pharmpy results qa": [[271, "pharmpy-results-qa"]], "pharmpy results report": [[271, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[271, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[271, "pharmpy-results-scm"]], "pharmpy results simeval": [[271, "pharmpy-results-simeval"]], "pharmpy results summary": [[271, "pharmpy-results-summary"]], "pharmpy run": [[271, "pharmpy-run"]], "pharmpy run allometry": [[271, "pharmpy-run-allometry"]], "pharmpy run amd": [[271, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[271, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[271, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[271, "pharmpy-run-estmethod"]], "pharmpy run execute": [[271, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[271, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[271, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[271, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[271, "pharmpy-run-ruvsearch"]], "summarize_individuals_count_table": [[245, "summarize-individuals-count-table"]], "pharmpy.workflows Package": [[266, "module-pharmpy.workflows"]], "Options for the data module": [[266, "id1"]], "Classes": [[266, "classes"], [263, "classes"]], "LocalDirectoryToolDatabase": [[249, "localdirectorytooldatabase"]], "summarize_errors": [[243, "summarize-errors"]], "Task": [[255, "task"]], "Citation": [[270, "citation"]], "How to cite Pharmpy and pharmr": [[270, "how-to-cite-pharmpy-and-pharmr"]], "call_workflow": [[258, "call-workflow"]], "summarize_individuals": [[244, "summarize-individuals"]], "run_modelsearch": [[239, "run-modelsearch"]], "pharmpy.model Package": [[263, "module-pharmpy.model"]], "run_iovsearch": [[237, "run-iovsearch"]], "NullModelDatabase": [[253, "nullmodeldatabase"]], "run_estmethod": [[235, "run-estmethod"]], "execute_workflow": [[261, "execute-workflow"]], "ModelDatabase": [[252, "modeldatabase"]], "ToolDatabase": [[256, "tooldatabase"]], "write_results": [[247, "write-results"]], "Log": [[251, "log"]], "pharmpy.modeling Package": [[264, "module-pharmpy.modeling"]], "Workflow": [[257, "workflow"]], "summarize_modelfit_results": [[246, "summarize-modelfit-results"]], "LocalDirectoryDatabase": [[248, "localdirectorydatabase"]], "NullToolDatabase": [[254, "nulltooldatabase"]], "run_tool": [[242, "run-tool"]], "default_model_database": [[259, "default-model-database"]], "LocalModelDirectoryDatabase": [[250, "localmodeldirectorydatabase"]], "run_structsearch": [[241, "run-structsearch"]], "split_common_options": [[262, "split-common-options"]], "run_modelfit": [[238, "run-modelfit"]], "read_modelfit_results": [[226, "read-modelfit-results"]], "run_amd": [[232, "run-amd"]], "predict_influential_outliers": [[222, "predict-influential-outliers"]], "simplify_expression": [[200, "simplify-expression"]], "fit": [[219, "fit"]], "retrieve_models": [[230, "retrieve-models"]], "set_zero_order_elimination": [[198, "set-zero-order-elimination"]], "set_zero_order_absorption": [[197, "set-zero-order-absorption"]], "use_thetas_for_error_stdev": [[214, "use-thetas-for-error-stdev"]], "set_weighted_error_model": [[196, "set-weighted-error-model"]], "split_joint_distribution": [[202, "split-joint-distribution"]], "transform_etas_boxcox": [[204, "transform-etas-boxcox"]], "unconstrain_parameters": [[208, "unconstrain-parameters"]], "unfix_parameters": [[210, "unfix-parameters"]], "print_fit_summary": [[224, "print-fit-summary"]], "write_csv": [[215, "write-csv"]], "create_report": [[217, "create-report"]], "rank_models": [[225, "rank-models"]], "set_zero_order_input": [[199, "set-zero-order-input"]], "update_inits": [[213, "update-inits"]], "resume_tool": [[228, "resume-tool"]], "create_results": [[218, "create-results"]], "update_initial_individual_estimates": [[212, "update-initial-individual-estimates"]], "load_example_modelfit_results": [[220, "load-example-modelfit-results"]], "unfix_parameters_to": [[211, "unfix-parameters-to"]], "read_results": [[227, "read-results"]], "transform_blq": [[203, "transform-blq"]], "run_allometry": [[231, "run-allometry"]], "run_bootstrap": [[233, "run-bootstrap"]], "set_upper_bounds": [[195, "set-upper-bounds"]], "translate_nmtran_time": [[207, "translate-nmtran-time"]], "undrop_columns": [[209, "undrop-columns"]], "retrieve_final_model": [[229, "retrieve-final-model"]], "solve_ode_system": [[201, "solve-ode-system"]], "predict_outliers": [[223, "predict-outliers"]], "transform_etas_john_draper": [[205, "transform-etas-john-draper"]], "predict_influential_individuals": [[221, "predict-influential-individuals"]], "transform_etas_tdist": [[206, "transform-etas-tdist"]], "write_model": [[216, "write-model"]], "remove_lag_time": [[160, "remove-lag-time"]], "set_additive_error_model": [[169, "set-additive-error-model"]], "set_dtbs_error_model": [[174, "set-dtbs-error-model"]], "set_initial_estimates": [[182, "set-initial-estimates"]], "rename_symbols": [[164, "rename-symbols"]], "set_combined_error_model": [[171, "set-combined-error-model"]], "set_peripheral_compartments": [[188, "set-peripheral-compartments"]], "set_tmdd": [[193, "set-tmdd"]], "remove_peripheral_compartment": [[162, "remove-peripheral-compartment"]], "sample_individual_estimates": [[166, "sample-individual-estimates"]], "remove_error_model": [[156, "remove-error-model"]], "set_transit_compartments": [[194, "set-transit-compartments"]], "set_name": [[186, "set-name"]], "set_ode_solver": [[187, "set-ode-solver"]], "remove_iov": [[159, "remove-iov"]], "set_michaelis_menten_elimination": [[184, "set-michaelis-menten-elimination"]], "set_power_on_ruv": [[189, "set-power-on-ruv"]], "set_dvid": [[175, "set-dvid"]], "set_mixed_mm_fo_elimination": [[185, "set-mixed-mm-fo-elimination"]], "set_lower_bounds": [[183, "set-lower-bounds"]], "sample_parameters_from_covariance_matrix": [[167, "sample-parameters-from-covariance-matrix"]], "set_estimation_step": [[176, "set-estimation-step"]], "set_initial_condition": [[181, "set-initial-condition"]], "remove_estimation_step": [[157, "remove-estimation-step"]], "set_proportional_error_model": [[190, "set-proportional-error-model"]], "remove_loq_data": [[161, "remove-loq-data"]], "resample_data": [[165, "resample-data"]], "set_bolus_absorption": [[170, "set-bolus-absorption"]], "set_seq_zo_fo_absorption": [[191, "set-seq-zo-fo-absorption"]], "set_direct_effect": [[173, "set-direct-effect"]], "set_covariates": [[172, "set-covariates"]], "remove_iiv": [[158, "remove-iiv"]], "sample_parameters_uniformly": [[168, "sample-parameters-uniformly"]], "set_first_order_elimination": [[179, "set-first-order-elimination"]], "remove_unused_parameters_and_rvs": [[163, "remove-unused-parameters-and-rvs"]], "set_first_order_absorption": [[178, "set-first-order-absorption"]], "set_evaluation_step": [[177, "set-evaluation-step"]], "set_iiv_on_ruv": [[180, "set-iiv-on-ruv"]], "set_time_varying_error_model": [[192, "set-time-varying-error-model"]], "has_weighted_error_model": [[136, "has-weighted-error-model"]], "has_michaelis_menten_elimination": [[131, "has-michaelis-menten-elimination"]], "has_mixed_mm_fo_elimination": [[132, "has-mixed-mm-fo-elimination"]], "plot_iofv_vs_iofv": [[147, "plot-iofv-vs-iofv"]], "has_linear_odes_with_real_eigenvalues": [[130, "has-linear-odes-with-real-eigenvalues"]], "make_declarative": [[143, "make-declarative"]], "has_linear_odes": [[129, "has-linear-odes"]], "read_dataset_from_datainfo": [[151, "read-dataset-from-datainfo"]], "get_thetas": [[121, "get-thetas"]], "is_linearized": [[139, "is-linearized"]], "remove_covariance_step": [[154, "remove-covariance-step"]], "has_random_effect": [[135, "has-random-effect"]], "omit_data": [[145, "omit-data"]], "has_zero_order_elimination": [[138, "has-zero-order-elimination"]], "has_covariate_effect": [[127, "has-covariate-effect"]], "load_example_model": [[142, "load-example-model"]], "greekify_model": [[124, "greekify-model"]], "has_additive_error_model": [[125, "has-additive-error-model"]], "print_model_symbols": [[150, "print-model-symbols"]], "get_pk_parameters": [[117, "get-pk-parameters"]], "has_odes": [[133, "has-odes"]], "print_model_code": [[149, "print-model-code"]], "mu_reference_model": [[144, "mu-reference-model"]], "get_sigmas": [[120, "get-sigmas"]], "read_model": [[152, "read-model"]], "get_population_prediction_expression": [[118, "get-population-prediction-expression"]], "get_zero_order_inputs": [[123, "get-zero-order-inputs"]], "is_real": [[140, "is-real"]], "has_zero_order_absorption": [[137, "has-zero-order-absorption"]], "has_combined_error_model": [[126, "has-combined-error-model"]], "get_rv_parameters": [[119, "get-rv-parameters"]], "plot_transformed_eta_distributions": [[148, "plot-transformed-eta-distributions"]], "list_time_varying_covariates": [[141, "list-time-varying-covariates"]], "get_unit_of": [[122, "get-unit-of"]], "has_proportional_error_model": [[134, "has-proportional-error-model"]], "remove_covariate_effect": [[155, "remove-covariate-effect"]], "read_model_from_string": [[153, "read-model-from-string"]], "has_first_order_elimination": [[128, "has-first-order-elimination"]], "plot_individual_predictions": [[146, "plot-individual-predictions"]], "get_observations": [[115, "get-observations"]], "evaluate_expression": [[83, "evaluate-expression"]], "get_cmt": [[95, "get-cmt"]], "get_bioavailability": [[94, "get-bioavailability"]], "find_clearance_parameters": [[88, "find-clearance-parameters"]], "drop_dropped_columns": [[80, "drop-dropped-columns"]], "display_odes": [[78, "display-odes"]], "get_individual_parameters": [[104, "get-individual-parameters"]], "evaluate_individual_prediction": [[84, "evaluate-individual-prediction"]], "fix_parameters": [[91, "fix-parameters"]], "get_concentration_parameters_from_data": [[96, "get-concentration-parameters-from-data"]], "drop_columns": [[79, "drop-columns"]], "get_baselines": [[93, "get-baselines"]], "get_dv_symbol": [[101, "get-dv-symbol"]], "get_config_path": [[97, "get-config-path"]], "get_doseid": [[99, "get-doseid"]], "get_mdv": [[108, "get-mdv"]], "evaluate_population_prediction": [[85, "evaluate-population-prediction"]], "get_evid": [[102, "get-evid"]], "get_ids": [[103, "get-ids"]], "get_omegas": [[116, "get-omegas"]], "find_volume_parameters": [[89, "find-volume-parameters"]], "fix_parameters_to": [[92, "fix-parameters-to"]], "fix_or_unfix_parameters": [[90, "fix-or-unfix-parameters"]], "get_initial_conditions": [[106, "get-initial-conditions"]], "get_doses": [[100, "get-doses"]], "evaluate_weighted_residuals": [[86, "evaluate-weighted-residuals"]], "get_lag_times": [[107, "get-lag-times"]], "get_observation_expression": [[114, "get-observation-expression"]], "get_number_of_observations": [[112, "get-number-of-observations"]], "get_covariate_baselines": [[98, "get-covariate-baselines"]], "get_model_covariates": [[110, "get-model-covariates"]], "get_number_of_observations_per_individual": [[113, "get-number-of-observations-per-individual"]], "expand_additional_doses": [[87, "expand-additional-doses"]], "get_individual_prediction_expression": [[105, "get-individual-prediction-expression"]], "evaluate_epsilon_gradient": [[81, "evaluate-epsilon-gradient"]], "evaluate_eta_gradient": [[82, "evaluate-eta-gradient"]], "get_number_of_individuals": [[111, "get-number-of-individuals"]], "get_model_code": [[109, "get-model-code"]], "Plots in Pharmpy": [[294, "plots-in-pharmpy"]], "Setting themes": [[294, "setting-themes"]], "Changing axis of plots": [[294, "changing-axis-of-plots"]], "Plugins": [[295, "plugins"]], "Overview of a plugin": [[295, "overview-of-a-plugin"]], "scm": [[301, "scm"]], "The scm results": [[301, "the-scm-results"]], "Steps": [[301, "steps"]], "OFV Summary": [[301, "ofv-summary"]], "Candidate Summary": [[301, "candidate-summary"]], "Simeval": [[302, "simeval"]], "The simeval results": [[302, "the-simeval-results"]], "Sampled Individual OFVs": [[302, "sampled-individual-ofvs"]], "Individual OFV summary": [[302, "individual-ofv-summary"]], "Individual prediction plot": [[302, "individual-prediction-plot"]], "Contributors": [[275, "authors"]], "Development": [[275, "development"]], "Scientific input": [[275, "scientific-input"]], "Funding": [[275, "funding"]], "Model estimation and results": [[290, "model-estimation-and-results"]], "Fitting a model": [[290, "fitting-a-model"]], "Modelfit results": [[290, "modelfit-results"]], "Final OFV": [[290, "final-ofv"]], "Parameter estimates": [[290, "parameter-estimates"], [282, "parameter-estimates"]], "Standard errors of parameter estimates": [[290, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[290, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[290, "correlation-matrix"]], "Precision Matrix": [[290, "precision-matrix"]], "Indiviudal OFV": [[290, "indiviudal-ofv"]], "Predictions": [[290, "predictions"]], "Residuals": [[290, "residuals"]], "Individual estimates": [[290, "individual-estimates"]], "FREM": [[282, "frem"]], "The FREM postprocessing and results": [[282, "the-frem-postprocessing-and-results"]], "Covariate effects": [[282, "covariate-effects"], [299, "covariate-effects"]], "Parameter covariate coefficients": [[282, "parameter-covariate-coefficients"]], "Individual covariate effects": [[282, "individual-covariate-effects"]], "Unexplained variability": [[282, "unexplained-variability"]], "OFV": [[282, "ofv"]], "Estimated covariate values": [[282, "estimated-covariate-values"]], "Estmethod": [[281, "estmethod"]], "Algorithms": [[281, "algorithms"], [284, "algorithms"], [292, "algorithms"]], "Exhaustive": [[281, "exhaustive"]], "Exhaustive (with update)": [[281, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[281, "exhaustive-only-evaluation"]], "Methods": [[281, "methods"]], "Solvers": [[281, "solvers"]], "The Estmethod results": [[281, "the-estmethod-results"]], "Using the NONMEM plugin": [[293, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[293, "names-of-parameters-and-random-variables"]], "Reading in a model": [[293, "reading-in-a-model"], [289, "reading-in-a-model"]], "New parameters and random variables": [[293, "new-parameters-and-random-variables"]], "Writing a model": [[293, "writing-a-model"], [289, "writing-a-model"]], "Documentation for developers": [[280, "documentation-for-developers"]], "Brute force search for number of IIVs": [[284, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[284, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[284, "full-brute-force-search"]], "Adding IIV to the start model": [[284, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[284, "comparing-and-ranking-candidates"], [292, "comparing-and-ranking-candidates"], [286, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[284, "the-iivsearch-results"]], "Project suggestions": [[296, "project-suggestions"]], "PsN with Pharmpy": [[298, "psn-with-pharmpy"]], "Tools connected to PsN": [[298, "tools-connected-to-psn"]], "ruvsearch": [[300, "ruvsearch"]], "Models": [[300, "models"]], "The RUVsearch results": [[300, "the-ruvsearch-results"]], "Configuration": [[273, "configuration"]], "The configuration file": [[273, "the-configuration-file"]], "Available configurations": [[273, "available-configurations"]], "pharmpy.plugins.nonmem": [[273, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[273, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[273, "pharmpy-plugins-rxode"]], "Environment variables": [[273, "environment-variables"]], "Modelsearch": [[292, "modelsearch"]], "The search space": [[292, "the-search-space"]], "Common behaviours between algorithms": [[292, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[292, "feature-combination-exclusions"]], "Exhaustive search": [[292, "exhaustive-search"]], "Exhaustive stepwise search": [[292, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[292, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[292, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[292, "the-modelsearch-results"]], "Getting started": [[283, "getting-started"]], "Installation": [[283, "installation"]], "A first example": [[283, "a-first-example"]], "Modeling": [[291, "modeling"]], "Basic functions": [[291, "basic-functions"]], "Reading and writing models": [[291, "reading-and-writing-models"]], "Loading example models": [[291, "loading-example-models"]], "Converting models": [[291, "converting-models"]], "Create basic models": [[291, "create-basic-models"]], "Modeling transformations": [[291, "modeling-transformations"]], "Structural model": [[291, "structural-model"]], "Absorption rate": [[291, "absorption-rate"]], "Absorption delay": [[291, "absorption-delay"]], "Elimination": [[291, "elimination"]], "Parameter variability model": [[291, "parameter-variability-model"]], "Adding and removing parameter variability": [[291, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[291, "adding-and-removing-covariance"]], "Eta transformations": [[291, "eta-transformations"]], "Covariates and allometry": [[291, "covariates-and-allometry"]], "Population parameters": [[291, "population-parameters"]], "Error model": [[291, "error-model"]], "BLQ transformations": [[291, "blq-transformations"]], "Estimation steps": [[291, "estimation-steps"], [289, "estimation-steps"]], "Examining and modifying dataset": [[291, "examining-and-modifying-dataset"]], "Subjects": [[291, "subjects"]], "Observations": [[291, "observations"]], "Dosing": [[291, "dosing"]], "Extract dosing information": [[291, "extract-dosing-information"]], "Dose grouping": [[291, "dose-grouping"]], "Time after dose": [[291, "time-after-dose"]], "Concentration parameters": [[291, "concentration-parameters"]], "User guide": [[304, "user-guide"]], "Resmod": [[297, "resmod"]], "The resmod results": [[297, "the-resmod-results"]], "Resmod models": [[297, "resmod-models"]], "Tools": [[303, "tools"]], "Tools in Pharmpy": [[303, "tools-in-pharmpy"]], "Common options": [[303, "common-options"]], "Common features": [[303, "common-features"]], "Tool database": [[303, "tool-database"]], "Running directory": [[303, "running-directory"]], "Metadata": [[303, "metadata"]], "Datasets": [[303, "datasets"]], "Model feature language (MFL)": [[303, "model-feature-language-mfl"]], "Option types": [[303, "option-types"]], "Model features": [[303, "model-features"]], "Symbols": [[303, "symbols"]], "Describe intervals": [[303, "describe-intervals"]], "Redundant descriptions": [[303, "redundant-descriptions"]], "Examples": [[303, "examples"]], "Datasets in Pharmpy": [[278, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[278, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[278, "update-the-dataset-of-a-model"]], "type": [[278, "type"]], "scale": [[278, "scale"]], "continuous": [[278, "continuous"]], "categories": [[278, "categories"]], "unit": [[278, "unit"]], "drop": [[278, "drop"]], "datatype": [[278, "datatype"]], "descriptor": [[278, "descriptor"]], "datainfo file": [[278, "datainfo-file"]], "Design principles": [[279, "design-principles"]], "Levels of the architecture": [[279, "levels-of-the-architecture"]], "The Heart, The Model Class": [[279, "the-heart-the-model-class"]], "pharmpy.Parameters": [[279, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[279, "pharmpy-randomvariables"]], "pharmpy.Statements": [[279, "pharmpy-statements"]], "The pharmpy.modeling module": [[279, "the-pharmpy-modeling-module"]], "Docstrings": [[279, "docstrings"]], "Dependencies": [[279, "dependencies"]], "Crossval": [[277, "crossval"]], "The crossval results": [[277, "the-crossval-results"]], "Crossvalidation OFVs": [[277, "crossvalidation-ofvs"]], "Contribute": [[274, "contribute"]], "Set up the development environment": [[274, "set-up-the-development-environment"]], "Supported platforms": [[274, "supported-platforms"]], "Install Python": [[274, "install-python"]], "Install git": [[274, "install-git"]], "Fork and clone the code repository": [[274, "fork-and-clone-the-code-repository"]], "Install tox": [[274, "install-tox"]], "Install graphviz used for building the documentation": [[274, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[274, "using-the-development-environment"]], "Running tox": [[274, "running-tox"]], "Check code formatting": [[274, "check-code-formatting"]], "Run the unit tests": [[274, "run-the-unit-tests"]], "Build and test the documentation": [[274, "build-and-test-the-documentation"]], "Run the integration tests": [[274, "run-the-integration-tests"]], "Build a usable virtual environment": [[274, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[274, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[274, "releasing-pharmpy-and-documentation"]], "Version": [[274, "version"]], "Information for developers": [[274, "information-for-developers"]], "COVsearch": [[276, "covsearch"]], "Effects": [[276, "effects"]], "Wildcards": [[276, "wildcards"]], "Algorithm": [[276, "algorithm"], [286, "algorithm"]], "QA": [[299, "qa"]], "The qa results": [[299, "the-qa-results"]], "Overview": [[299, "overview"]], "Structural bias": [[299, "structural-bias"]], "Fullblock": [[299, "fullblock"]], "Boxcox": [[299, "boxcox"]], "Tdist": [[299, "tdist"]], "Residual error": [[299, "residual-error"]], "The Pharmpy model": [[289, "the-pharmpy-model"]], "Inspecting the model attributes": [[289, "inspecting-the-model-attributes"]], "Name and description": [[289, "name-and-description"]], "Random variables": [[289, "random-variables"]], "Dataset and datainfo": [[289, "dataset-and-datainfo"]], "Dependent variables": [[289, "dependent-variables"]], "Low level manipulations of the model object": [[289, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[289, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[289, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Linearize": [[288, "linearize"]], "The linearize results": [[288, "the-linearize-results"]], "OFVs": [[288, "ofvs"]], "Individual OFVs": [[288, "individual-ofvs"]], "License": [[287, "license"]], "Logo": [[287, "logo"]], "Copyright": [[287, "copyright"]], "BSD 2-clause License": [[287, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[287, "gnu-lesser-general-public-license"]], "Welcome to Pharmpy": [[285, "welcome-to-pharmpy"]], "Pharmpy in R": [[305, "pharmpy-in-r"]], "Installing pharmr": [[305, "installing-pharmr"]], "Trouble shooting": [[305, "trouble-shooting"]], "Wrong Python version when using conda": [[305, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[305, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[305, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[305, "using-pharmr"]], "Gotchas": [[305, "gotchas"]], "List indices": [[305, "list-indices"]], "Distribution of new IOVs": [[286, "distribution-of-new-iovs"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "admid (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.admid"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "admid (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.admid"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[23, "pharmpy.model.ODESystem"]], "parameter (class in pharmpy.model)": [[24, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[25, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[26, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[27, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[27, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[28, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[28, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[29, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[29, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[32, "pharmpy.model.to_compartmental_system"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_metabolite"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.fix_parameters_to"]], "get_baselines() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.has_first_order_elimination"]], "has_linear_odes() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.has_odes"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_random_effect"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[217, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[218, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[219, "pharmpy.tools.fit"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[220, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[221, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[222, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[223, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[224, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[225, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[226, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[227, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[228, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[229, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[230, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[231, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[232, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[233, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[234, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[235, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[236, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[237, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[238, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[239, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[240, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[241, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[242, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[243, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[244, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[245, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[246, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[247, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[248, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[248, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[249, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[250, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[250, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[250, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[250, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[251, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[251, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[251, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[251, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[251, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[251, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[251, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[252, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[252, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[253, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[253, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[254, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[254, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[254, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[254, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[254, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[255, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[256, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[256, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[256, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[256, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[256, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[256, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[256, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[257, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[258, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[259, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[260, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[261, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[262, "pharmpy.workflows.split_common_options"]], "module": [[263, "module-pharmpy.model"], [264, "module-pharmpy.modeling"], [265, "module-pharmpy.tools"], [266, "module-pharmpy.workflows"]], "pharmpy.model": [[263, "module-pharmpy.model"]], "pharmpy.modeling": [[264, "module-pharmpy.modeling"]], "pharmpy.tools": [[265, "module-pharmpy.tools"]], "pharmpy.workflows": [[266, "module-pharmpy.workflows"]], "--algorithm": [[271, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[271, "cmdoption-pharmpy-run-allometry-allometric_variable"], [271, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[271, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[271, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[271, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[271, "cmdoption-pharmpy-run-iivsearch-cutoff"], [271, "cmdoption-pharmpy-run-iovsearch-cutoff"], [271, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[271, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[271, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[271, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[271, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [271, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[271, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[271, "cmdoption-pharmpy-model-add_iov-eta_names"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[271, "cmdoption-pharmpy-model-add_iov-etas"], [271, "cmdoption-pharmpy-model-boxcox-etas"], [271, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [271, "cmdoption-pharmpy-model-john_draper-etas"], [271, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[271, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[271, "cmdoption-pharmpy-data-append-f"], [271, "cmdoption-pharmpy-data-deidentify-f"], [271, "cmdoption-pharmpy-data-filter-f"], [271, "cmdoption-pharmpy-data-write-f"], [271, "cmdoption-pharmpy-model-absorption_rate-f"], [271, "cmdoption-pharmpy-model-add_cov_effect-f"], [271, "cmdoption-pharmpy-model-add_iiv-f"], [271, "cmdoption-pharmpy-model-add_iov-f"], [271, "cmdoption-pharmpy-model-boxcox-f"], [271, "cmdoption-pharmpy-model-create_joint_distribution-f"], [271, "cmdoption-pharmpy-model-elimination_rate-f"], [271, "cmdoption-pharmpy-model-error-f"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [271, "cmdoption-pharmpy-model-john_draper-f"], [271, "cmdoption-pharmpy-model-peripheral_compartments-f"], [271, "cmdoption-pharmpy-model-power_on_ruv-f"], [271, "cmdoption-pharmpy-model-remove_iiv-f"], [271, "cmdoption-pharmpy-model-remove_iov-f"], [271, "cmdoption-pharmpy-model-tdist-f"], [271, "cmdoption-pharmpy-model-transit_compartments-f"], [271, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[271, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[271, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[271, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[271, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[271, "cmdoption-pharmpy-data-append-h"], [271, "cmdoption-pharmpy-data-deidentify-h"], [271, "cmdoption-pharmpy-data-filter-h"], [271, "cmdoption-pharmpy-data-h"], [271, "cmdoption-pharmpy-data-print-h"], [271, "cmdoption-pharmpy-data-resample-h"], [271, "cmdoption-pharmpy-data-write-h"], [271, "cmdoption-pharmpy-h"], [271, "cmdoption-pharmpy-info-h"], [271, "cmdoption-pharmpy-model-absorption_rate-h"], [271, "cmdoption-pharmpy-model-add_cov_effect-h"], [271, "cmdoption-pharmpy-model-add_iiv-h"], [271, "cmdoption-pharmpy-model-add_iov-h"], [271, "cmdoption-pharmpy-model-boxcox-h"], [271, "cmdoption-pharmpy-model-create_joint_distribution-h"], [271, "cmdoption-pharmpy-model-elimination_rate-h"], [271, "cmdoption-pharmpy-model-error-h"], [271, "cmdoption-pharmpy-model-h"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [271, "cmdoption-pharmpy-model-john_draper-h"], [271, "cmdoption-pharmpy-model-peripheral_compartments-h"], [271, "cmdoption-pharmpy-model-power_on_ruv-h"], [271, "cmdoption-pharmpy-model-print-h"], [271, "cmdoption-pharmpy-model-remove_iiv-h"], [271, "cmdoption-pharmpy-model-remove_iov-h"], [271, "cmdoption-pharmpy-model-sample-h"], [271, "cmdoption-pharmpy-model-tdist-h"], [271, "cmdoption-pharmpy-model-transit_compartments-h"], [271, "cmdoption-pharmpy-model-update_inits-h"], [271, "cmdoption-pharmpy-results-bootstrap-h"], [271, "cmdoption-pharmpy-results-cdd-h"], [271, "cmdoption-pharmpy-results-frem-h"], [271, "cmdoption-pharmpy-results-h"], [271, "cmdoption-pharmpy-results-linearize-h"], [271, "cmdoption-pharmpy-results-ofv-h"], [271, "cmdoption-pharmpy-results-print-h"], [271, "cmdoption-pharmpy-results-qa-h"], [271, "cmdoption-pharmpy-results-report-h"], [271, "cmdoption-pharmpy-results-ruvsearch-h"], [271, "cmdoption-pharmpy-results-scm-h"], [271, "cmdoption-pharmpy-results-simeval-h"], [271, "cmdoption-pharmpy-results-summary-h"], [271, "cmdoption-pharmpy-run-allometry-h"], [271, "cmdoption-pharmpy-run-amd-h"], [271, "cmdoption-pharmpy-run-bootstrap-h"], [271, "cmdoption-pharmpy-run-covsearch-h"], [271, "cmdoption-pharmpy-run-estmethod-h"], [271, "cmdoption-pharmpy-run-execute-h"], [271, "cmdoption-pharmpy-run-h"], [271, "cmdoption-pharmpy-run-iivsearch-h"], [271, "cmdoption-pharmpy-run-iovsearch-h"], [271, "cmdoption-pharmpy-run-modelsearch-h"], [271, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[271, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[271, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [271, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[271, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[271, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[271, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[271, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[271, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[271, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[271, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[271, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[271, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[271, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[271, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[271, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[271, "cmdoption-pharmpy-model-add_cov_effect-operation"], [271, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[271, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[271, "cmdoption-pharmpy-data-append-o"], [271, "cmdoption-pharmpy-data-deidentify-o"], [271, "cmdoption-pharmpy-data-filter-o"], [271, "cmdoption-pharmpy-data-write-o"], [271, "cmdoption-pharmpy-model-absorption_rate-o"], [271, "cmdoption-pharmpy-model-add_cov_effect-o"], [271, "cmdoption-pharmpy-model-add_iiv-o"], [271, "cmdoption-pharmpy-model-add_iov-o"], [271, "cmdoption-pharmpy-model-boxcox-o"], [271, "cmdoption-pharmpy-model-create_joint_distribution-o"], [271, "cmdoption-pharmpy-model-elimination_rate-o"], [271, "cmdoption-pharmpy-model-error-o"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [271, "cmdoption-pharmpy-model-john_draper-o"], [271, "cmdoption-pharmpy-model-peripheral_compartments-o"], [271, "cmdoption-pharmpy-model-power_on_ruv-o"], [271, "cmdoption-pharmpy-model-remove_iiv-o"], [271, "cmdoption-pharmpy-model-remove_iov-o"], [271, "cmdoption-pharmpy-model-tdist-o"], [271, "cmdoption-pharmpy-model-transit_compartments-o"], [271, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[271, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[271, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[271, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[271, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[271, "cmdoption-pharmpy-run-allometry-path"], [271, "cmdoption-pharmpy-run-amd-path"], [271, "cmdoption-pharmpy-run-covsearch-path"], [271, "cmdoption-pharmpy-run-estmethod-path"], [271, "cmdoption-pharmpy-run-iivsearch-path"], [271, "cmdoption-pharmpy-run-iovsearch-path"], [271, "cmdoption-pharmpy-run-modelsearch-path"], [271, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[271, "cmdoption-pharmpy-run-iivsearch-rank_type"], [271, "cmdoption-pharmpy-run-iovsearch-rank_type"], [271, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[271, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[271, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[271, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[271, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[271, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[271, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[271, "cmdoption-pharmpy-model-sample-samples"], [271, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[271, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[271, "cmdoption-pharmpy-data-resample-seed"], [271, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[271, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[271, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[271, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[271, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[271, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[271, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[271, "cmdoption-pharmpy-version"]], "-f": [[271, "cmdoption-pharmpy-data-append-f"], [271, "cmdoption-pharmpy-data-deidentify-f"], [271, "cmdoption-pharmpy-data-filter-f"], [271, "cmdoption-pharmpy-data-write-f"], [271, "cmdoption-pharmpy-model-absorption_rate-f"], [271, "cmdoption-pharmpy-model-add_cov_effect-f"], [271, "cmdoption-pharmpy-model-add_iiv-f"], [271, "cmdoption-pharmpy-model-add_iov-f"], [271, "cmdoption-pharmpy-model-boxcox-f"], [271, "cmdoption-pharmpy-model-create_joint_distribution-f"], [271, "cmdoption-pharmpy-model-elimination_rate-f"], [271, "cmdoption-pharmpy-model-error-f"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [271, "cmdoption-pharmpy-model-john_draper-f"], [271, "cmdoption-pharmpy-model-peripheral_compartments-f"], [271, "cmdoption-pharmpy-model-power_on_ruv-f"], [271, "cmdoption-pharmpy-model-remove_iiv-f"], [271, "cmdoption-pharmpy-model-remove_iov-f"], [271, "cmdoption-pharmpy-model-tdist-f"], [271, "cmdoption-pharmpy-model-transit_compartments-f"], [271, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[271, "cmdoption-pharmpy-data-append-h"], [271, "cmdoption-pharmpy-data-deidentify-h"], [271, "cmdoption-pharmpy-data-filter-h"], [271, "cmdoption-pharmpy-data-h"], [271, "cmdoption-pharmpy-data-print-h"], [271, "cmdoption-pharmpy-data-resample-h"], [271, "cmdoption-pharmpy-data-write-h"], [271, "cmdoption-pharmpy-h"], [271, "cmdoption-pharmpy-info-h"], [271, "cmdoption-pharmpy-model-absorption_rate-h"], [271, "cmdoption-pharmpy-model-add_cov_effect-h"], [271, "cmdoption-pharmpy-model-add_iiv-h"], [271, "cmdoption-pharmpy-model-add_iov-h"], [271, "cmdoption-pharmpy-model-boxcox-h"], [271, "cmdoption-pharmpy-model-create_joint_distribution-h"], [271, "cmdoption-pharmpy-model-elimination_rate-h"], [271, "cmdoption-pharmpy-model-error-h"], [271, "cmdoption-pharmpy-model-h"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [271, "cmdoption-pharmpy-model-john_draper-h"], [271, "cmdoption-pharmpy-model-peripheral_compartments-h"], [271, "cmdoption-pharmpy-model-power_on_ruv-h"], [271, "cmdoption-pharmpy-model-print-h"], [271, "cmdoption-pharmpy-model-remove_iiv-h"], [271, "cmdoption-pharmpy-model-remove_iov-h"], [271, "cmdoption-pharmpy-model-sample-h"], [271, "cmdoption-pharmpy-model-tdist-h"], [271, "cmdoption-pharmpy-model-transit_compartments-h"], [271, "cmdoption-pharmpy-model-update_inits-h"], [271, "cmdoption-pharmpy-results-bootstrap-h"], [271, "cmdoption-pharmpy-results-cdd-h"], [271, "cmdoption-pharmpy-results-frem-h"], [271, "cmdoption-pharmpy-results-h"], [271, "cmdoption-pharmpy-results-linearize-h"], [271, "cmdoption-pharmpy-results-ofv-h"], [271, "cmdoption-pharmpy-results-print-h"], [271, "cmdoption-pharmpy-results-qa-h"], [271, "cmdoption-pharmpy-results-report-h"], [271, "cmdoption-pharmpy-results-ruvsearch-h"], [271, "cmdoption-pharmpy-results-scm-h"], [271, "cmdoption-pharmpy-results-simeval-h"], [271, "cmdoption-pharmpy-results-summary-h"], [271, "cmdoption-pharmpy-run-allometry-h"], [271, "cmdoption-pharmpy-run-amd-h"], [271, "cmdoption-pharmpy-run-bootstrap-h"], [271, "cmdoption-pharmpy-run-covsearch-h"], [271, "cmdoption-pharmpy-run-estmethod-h"], [271, "cmdoption-pharmpy-run-execute-h"], [271, "cmdoption-pharmpy-run-h"], [271, "cmdoption-pharmpy-run-iivsearch-h"], [271, "cmdoption-pharmpy-run-iovsearch-h"], [271, "cmdoption-pharmpy-run-modelsearch-h"], [271, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[271, "cmdoption-pharmpy-data-append-o"], [271, "cmdoption-pharmpy-data-deidentify-o"], [271, "cmdoption-pharmpy-data-filter-o"], [271, "cmdoption-pharmpy-data-write-o"], [271, "cmdoption-pharmpy-model-absorption_rate-o"], [271, "cmdoption-pharmpy-model-add_cov_effect-o"], [271, "cmdoption-pharmpy-model-add_iiv-o"], [271, "cmdoption-pharmpy-model-add_iov-o"], [271, "cmdoption-pharmpy-model-boxcox-o"], [271, "cmdoption-pharmpy-model-create_joint_distribution-o"], [271, "cmdoption-pharmpy-model-elimination_rate-o"], [271, "cmdoption-pharmpy-model-error-o"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [271, "cmdoption-pharmpy-model-john_draper-o"], [271, "cmdoption-pharmpy-model-peripheral_compartments-o"], [271, "cmdoption-pharmpy-model-power_on_ruv-o"], [271, "cmdoption-pharmpy-model-remove_iiv-o"], [271, "cmdoption-pharmpy-model-remove_iov-o"], [271, "cmdoption-pharmpy-model-tdist-o"], [271, "cmdoption-pharmpy-model-transit_compartments-o"], [271, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[271, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [271, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [271, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[271, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[271, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[271, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[271, "cmdoption-pharmpy-data-append-arg-expression"], [271, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[271, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[271, "cmdoption-pharmpy-data-append-arg-file"], [271, "cmdoption-pharmpy-data-deidentify-arg-file"], [271, "cmdoption-pharmpy-data-filter-arg-file"], [271, "cmdoption-pharmpy-data-print-arg-file"], [271, "cmdoption-pharmpy-data-resample-arg-file"], [271, "cmdoption-pharmpy-data-write-arg-file"], [271, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [271, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [271, "cmdoption-pharmpy-model-add_iiv-arg-file"], [271, "cmdoption-pharmpy-model-add_iov-arg-file"], [271, "cmdoption-pharmpy-model-boxcox-arg-file"], [271, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [271, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [271, "cmdoption-pharmpy-model-error-arg-file"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [271, "cmdoption-pharmpy-model-john_draper-arg-file"], [271, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [271, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [271, "cmdoption-pharmpy-model-print-arg-file"], [271, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [271, "cmdoption-pharmpy-model-remove_iov-arg-file"], [271, "cmdoption-pharmpy-model-sample-arg-file"], [271, "cmdoption-pharmpy-model-tdist-arg-file"], [271, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [271, "cmdoption-pharmpy-model-update_inits-arg-file"], [271, "cmdoption-pharmpy-results-ofv-arg-file"], [271, "cmdoption-pharmpy-results-print-arg-file"], [271, "cmdoption-pharmpy-results-summary-arg-file"], [271, "cmdoption-pharmpy-run-allometry-arg-file"], [271, "cmdoption-pharmpy-run-bootstrap-arg-file"], [271, "cmdoption-pharmpy-run-covsearch-arg-file"], [271, "cmdoption-pharmpy-run-estmethod-arg-file"], [271, "cmdoption-pharmpy-run-execute-arg-file"], [271, "cmdoption-pharmpy-run-iivsearch-arg-file"], [271, "cmdoption-pharmpy-run-iovsearch-arg-file"], [271, "cmdoption-pharmpy-run-modelsearch-arg-file"], [271, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[271, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[271, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[271, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [271, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[271, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[271, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [271, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[271, "cmdoption-pharmpy-h"], [271, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[271, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[271, "cmdoption-pharmpy-data-append-arg-expression"], [271, "cmdoption-pharmpy-data-append-arg-file"], [271, "cmdoption-pharmpy-data-append-f"], [271, "cmdoption-pharmpy-data-append-h"], [271, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[271, "cmdoption-pharmpy-data-deidentify-arg-file"], [271, "cmdoption-pharmpy-data-deidentify-datecols"], [271, "cmdoption-pharmpy-data-deidentify-f"], [271, "cmdoption-pharmpy-data-deidentify-h"], [271, "cmdoption-pharmpy-data-deidentify-idcol"], [271, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[271, "cmdoption-pharmpy-data-filter-arg-expressions"], [271, "cmdoption-pharmpy-data-filter-arg-file"], [271, "cmdoption-pharmpy-data-filter-f"], [271, "cmdoption-pharmpy-data-filter-h"], [271, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[271, "cmdoption-pharmpy-data-print-arg-file"], [271, "cmdoption-pharmpy-data-print-columns"], [271, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[271, "cmdoption-pharmpy-data-resample-arg-file"], [271, "cmdoption-pharmpy-data-resample-group"], [271, "cmdoption-pharmpy-data-resample-h"], [271, "cmdoption-pharmpy-data-resample-replace"], [271, "cmdoption-pharmpy-data-resample-resamples"], [271, "cmdoption-pharmpy-data-resample-sample_size"], [271, "cmdoption-pharmpy-data-resample-seed"], [271, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[271, "cmdoption-pharmpy-data-write-arg-file"], [271, "cmdoption-pharmpy-data-write-f"], [271, "cmdoption-pharmpy-data-write-h"], [271, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[271, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[271, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[271, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [271, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [271, "cmdoption-pharmpy-model-absorption_rate-f"], [271, "cmdoption-pharmpy-model-absorption_rate-h"], [271, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[271, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [271, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [271, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [271, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [271, "cmdoption-pharmpy-model-add_cov_effect-f"], [271, "cmdoption-pharmpy-model-add_cov_effect-h"], [271, "cmdoption-pharmpy-model-add_cov_effect-o"], [271, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[271, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [271, "cmdoption-pharmpy-model-add_iiv-arg-file"], [271, "cmdoption-pharmpy-model-add_iiv-arg-param"], [271, "cmdoption-pharmpy-model-add_iiv-eta_name"], [271, "cmdoption-pharmpy-model-add_iiv-f"], [271, "cmdoption-pharmpy-model-add_iiv-h"], [271, "cmdoption-pharmpy-model-add_iiv-o"], [271, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[271, "cmdoption-pharmpy-model-add_iov-arg-file"], [271, "cmdoption-pharmpy-model-add_iov-arg-occ"], [271, "cmdoption-pharmpy-model-add_iov-eta_names"], [271, "cmdoption-pharmpy-model-add_iov-etas"], [271, "cmdoption-pharmpy-model-add_iov-f"], [271, "cmdoption-pharmpy-model-add_iov-h"], [271, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[271, "cmdoption-pharmpy-model-boxcox-arg-file"], [271, "cmdoption-pharmpy-model-boxcox-etas"], [271, "cmdoption-pharmpy-model-boxcox-f"], [271, "cmdoption-pharmpy-model-boxcox-h"], [271, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[271, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [271, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [271, "cmdoption-pharmpy-model-create_joint_distribution-f"], [271, "cmdoption-pharmpy-model-create_joint_distribution-h"], [271, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[271, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [271, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [271, "cmdoption-pharmpy-model-elimination_rate-f"], [271, "cmdoption-pharmpy-model-elimination_rate-h"], [271, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[271, "cmdoption-pharmpy-model-error-arg-error_type"], [271, "cmdoption-pharmpy-model-error-arg-file"], [271, "cmdoption-pharmpy-model-error-f"], [271, "cmdoption-pharmpy-model-error-h"], [271, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[271, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [271, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[271, "cmdoption-pharmpy-model-john_draper-arg-file"], [271, "cmdoption-pharmpy-model-john_draper-etas"], [271, "cmdoption-pharmpy-model-john_draper-f"], [271, "cmdoption-pharmpy-model-john_draper-h"], [271, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[271, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [271, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [271, "cmdoption-pharmpy-model-peripheral_compartments-f"], [271, "cmdoption-pharmpy-model-peripheral_compartments-h"], [271, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[271, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [271, "cmdoption-pharmpy-model-power_on_ruv-eps"], [271, "cmdoption-pharmpy-model-power_on_ruv-f"], [271, "cmdoption-pharmpy-model-power_on_ruv-h"], [271, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[271, "cmdoption-pharmpy-model-print-arg-file"], [271, "cmdoption-pharmpy-model-print-explicit-odes"], [271, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[271, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [271, "cmdoption-pharmpy-model-remove_iiv-f"], [271, "cmdoption-pharmpy-model-remove_iiv-h"], [271, "cmdoption-pharmpy-model-remove_iiv-o"], [271, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[271, "cmdoption-pharmpy-model-remove_iov-arg-file"], [271, "cmdoption-pharmpy-model-remove_iov-f"], [271, "cmdoption-pharmpy-model-remove_iov-h"], [271, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[271, "cmdoption-pharmpy-model-sample-arg-file"], [271, "cmdoption-pharmpy-model-sample-h"], [271, "cmdoption-pharmpy-model-sample-samples"], [271, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[271, "cmdoption-pharmpy-model-tdist-arg-file"], [271, "cmdoption-pharmpy-model-tdist-etas"], [271, "cmdoption-pharmpy-model-tdist-f"], [271, "cmdoption-pharmpy-model-tdist-h"], [271, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[271, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [271, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [271, "cmdoption-pharmpy-model-transit_compartments-f"], [271, "cmdoption-pharmpy-model-transit_compartments-h"], [271, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[271, "cmdoption-pharmpy-model-update_inits-arg-file"], [271, "cmdoption-pharmpy-model-update_inits-f"], [271, "cmdoption-pharmpy-model-update_inits-h"], [271, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[271, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[271, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [271, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[271, "cmdoption-pharmpy-results-cdd-arg-psn"], [271, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[271, "cmdoption-pharmpy-results-frem-arg-psn"], [271, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [271, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [271, "cmdoption-pharmpy-results-frem-h"], [271, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[271, "cmdoption-pharmpy-results-linearize-arg-psn"], [271, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[271, "cmdoption-pharmpy-results-ofv-arg-file"], [271, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[271, "cmdoption-pharmpy-results-print-arg-file"], [271, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[271, "cmdoption-pharmpy-results-qa-arg-psn"], [271, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[271, "cmdoption-pharmpy-results-report-arg-psn"], [271, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[271, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [271, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[271, "cmdoption-pharmpy-results-scm-arg-psn"], [271, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[271, "cmdoption-pharmpy-results-simeval-arg-psn"], [271, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[271, "cmdoption-pharmpy-results-summary-arg-file"], [271, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[271, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[271, "cmdoption-pharmpy-run-allometry-allometric_variable"], [271, "cmdoption-pharmpy-run-allometry-arg-file"], [271, "cmdoption-pharmpy-run-allometry-h"], [271, "cmdoption-pharmpy-run-allometry-initials"], [271, "cmdoption-pharmpy-run-allometry-lower_bounds"], [271, "cmdoption-pharmpy-run-allometry-non_fixed"], [271, "cmdoption-pharmpy-run-allometry-parameters"], [271, "cmdoption-pharmpy-run-allometry-path"], [271, "cmdoption-pharmpy-run-allometry-reference_value"], [271, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[271, "cmdoption-pharmpy-run-amd-allometric_variable"], [271, "cmdoption-pharmpy-run-amd-arg-input_path"], [271, "cmdoption-pharmpy-run-amd-cl_init"], [271, "cmdoption-pharmpy-run-amd-h"], [271, "cmdoption-pharmpy-run-amd-lloq_limit"], [271, "cmdoption-pharmpy-run-amd-lloq_method"], [271, "cmdoption-pharmpy-run-amd-mat_init"], [271, "cmdoption-pharmpy-run-amd-modeltype"], [271, "cmdoption-pharmpy-run-amd-occasion"], [271, "cmdoption-pharmpy-run-amd-order"], [271, "cmdoption-pharmpy-run-amd-path"], [271, "cmdoption-pharmpy-run-amd-resume"], [271, "cmdoption-pharmpy-run-amd-search_space"], [271, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[271, "cmdoption-pharmpy-run-bootstrap-arg-file"], [271, "cmdoption-pharmpy-run-bootstrap-h"], [271, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[271, "cmdoption-pharmpy-run-covsearch-algorithm"], [271, "cmdoption-pharmpy-run-covsearch-arg-file"], [271, "cmdoption-pharmpy-run-covsearch-effects"], [271, "cmdoption-pharmpy-run-covsearch-h"], [271, "cmdoption-pharmpy-run-covsearch-max_steps"], [271, "cmdoption-pharmpy-run-covsearch-p_backward"], [271, "cmdoption-pharmpy-run-covsearch-p_forward"], [271, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[271, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [271, "cmdoption-pharmpy-run-estmethod-arg-file"], [271, "cmdoption-pharmpy-run-estmethod-h"], [271, "cmdoption-pharmpy-run-estmethod-methods"], [271, "cmdoption-pharmpy-run-estmethod-path"], [271, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[271, "cmdoption-pharmpy-run-execute-arg-file"], [271, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[271, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [271, "cmdoption-pharmpy-run-iivsearch-arg-file"], [271, "cmdoption-pharmpy-run-iivsearch-cutoff"], [271, "cmdoption-pharmpy-run-iivsearch-h"], [271, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [271, "cmdoption-pharmpy-run-iivsearch-path"], [271, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[271, "cmdoption-pharmpy-run-iovsearch-arg-file"], [271, "cmdoption-pharmpy-run-iovsearch-column"], [271, "cmdoption-pharmpy-run-iovsearch-cutoff"], [271, "cmdoption-pharmpy-run-iovsearch-distribution"], [271, "cmdoption-pharmpy-run-iovsearch-h"], [271, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [271, "cmdoption-pharmpy-run-iovsearch-path"], [271, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[271, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [271, "cmdoption-pharmpy-run-modelsearch-arg-file"], [271, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [271, "cmdoption-pharmpy-run-modelsearch-cutoff"], [271, "cmdoption-pharmpy-run-modelsearch-h"], [271, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [271, "cmdoption-pharmpy-run-modelsearch-path"], [271, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[271, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [271, "cmdoption-pharmpy-run-ruvsearch-groups"], [271, "cmdoption-pharmpy-run-ruvsearch-h"], [271, "cmdoption-pharmpy-run-ruvsearch-p_value"], [271, "cmdoption-pharmpy-run-ruvsearch-path"], [271, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[271, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [271, "cmdoption-pharmpy-results-cdd-arg-psn"], [271, "cmdoption-pharmpy-results-frem-arg-psn"], [271, "cmdoption-pharmpy-results-linearize-arg-psn"], [271, "cmdoption-pharmpy-results-qa-arg-psn"], [271, "cmdoption-pharmpy-results-report-arg-psn"], [271, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [271, "cmdoption-pharmpy-results-scm-arg-psn"], [271, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[271, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [271, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})