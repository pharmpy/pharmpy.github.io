Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.ExplicitODESystem", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_inf", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_inf", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_inf_from_corrse", "api/pharmpy.modeling.calculate_inf_from_cov", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_inf", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.copy_model", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_report", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.generate_model_code", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_database", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_results", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.ExplicitODESystem.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_inf.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_inf.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_inf_from_corrse.rst", "api/pharmpy.modeling.calculate_inf_from_cov.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_inf.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.copy_model.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_report.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.generate_model_code.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_database.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "ExplicitODESystem", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_inf", "calculate_cov_from_corrse", "calculate_cov_from_inf", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_inf_from_corrse", "calculate_inf_from_cov", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_se_from_cov", "calculate_se_from_inf", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "copy_model", "create_joint_distribution", "create_report", "create_rng", "create_symbol", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "generate_model_code", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_lag_times", "get_mdv", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_proportional_error_model", "has_random_effect", "has_zero_order_absorption", "has_zero_order_elimination", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_database", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_results", "fit", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_results", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_covsearch", "run_iivsearch", "run_iovsearch", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 19, 25, 26, 27, 30, 32, 53, 54, 68, 73, 75, 76, 77, 78, 80, 81, 82, 83, 92, 98, 101, 105, 106, 107, 108, 112, 116, 121, 122, 123, 127, 143, 156, 158, 174, 183, 188, 194, 217, 221, 225, 226, 227, 241, 244, 245, 246, 247, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 272, 273, 275, 276, 277], "section": [0, 246, 249, 259, 271, 275], "i": [0, 1, 2, 3, 6, 8, 19, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 46, 48, 55, 56, 65, 67, 68, 69, 71, 73, 75, 77, 78, 80, 81, 82, 90, 92, 95, 98, 104, 105, 106, 107, 117, 131, 132, 145, 146, 148, 152, 153, 154, 156, 157, 160, 161, 162, 163, 165, 168, 169, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 194, 196, 197, 200, 202, 204, 208, 211, 212, 213, 219, 221, 225, 226, 227, 231, 240, 241, 242, 244, 245, 246, 247, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 277], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 202, 221, 222, 223, 224, 225, 226, 227, 228, 229, 242, 256, 259, 263, 267, 268, 272, 275, 277], "The": [0, 2, 3, 6, 8, 9, 10, 16, 19, 25, 26, 27, 30, 33, 35, 39, 41, 56, 64, 71, 72, 77, 78, 79, 80, 81, 82, 100, 111, 116, 118, 119, 124, 125, 137, 152, 156, 158, 174, 210, 214, 217, 245, 247, 249, 251, 255, 257, 258, 259, 262, 265, 267, 268, 275, 276], "inform": [0, 1, 2, 6, 8, 49, 50, 51, 52, 58, 59, 62, 63, 116, 242, 244, 246, 249, 252, 256, 257, 258, 259, 263, 264, 268, 272, 273, 275, 276], "intend": [0, 259, 275], "non": [0, 2, 26, 67, 71, 79, 184, 242, 251, 252, 254, 259, 261, 268, 275], "hard": [0, 268], "find": [0, 8, 30, 46, 84, 85, 116, 207, 219, 242, 246, 257, 259, 276, 277], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 247, 249, 251, 255, 256, 258, 259, 261, 262, 263, 264, 272], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 241, 242, 246, 249, 250, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 268, 269, 271, 272, 273, 274, 276], "develop": [0, 209, 242, 259, 267, 268, 275, 277], "remov": [0, 2, 9, 27, 30, 75, 105, 106, 107, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 167, 178, 189, 191, 209, 241, 242, 244, 249, 252, 256, 258, 259, 265, 276], "row": [0, 1, 2, 26, 77, 78, 90, 93, 95, 153, 154, 218, 240, 244, 249, 251, 254, 256, 258, 262, 264, 272, 273], "split": [0, 71, 184, 235, 242, 244, 263, 275], "drop": [0, 2, 6, 75, 76, 190, 242, 264, 268, 273], "column": [0, 1, 2, 6, 8, 10, 16, 26, 32, 39, 44, 56, 75, 76, 77, 78, 79, 83, 92, 93, 95, 98, 132, 133, 136, 152, 153, 159, 176, 188, 190, 200, 201, 202, 209, 212, 217, 218, 240, 242, 244, 249, 251, 254, 256, 258, 262, 263, 264, 272, 273, 275], "error": [0, 2, 11, 20, 21, 25, 27, 30, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 114, 118, 119, 124, 135, 143, 156, 158, 173, 174, 176, 179, 195, 204, 216, 219, 224, 240, 242, 249, 256, 257, 258, 261, 264, 265, 272, 273, 275, 276], "handl": [0, 3, 83, 183, 242, 251, 252, 254, 257, 268], "valid": [0, 27, 242, 259, 263], "some": [0, 8, 10, 61, 71, 143, 156, 223, 240, 242, 244, 247, 249, 251, 257, 259, 260, 261, 263, 264, 267, 268, 272, 275, 277], "rule": [0, 65, 259], "These": [0, 247, 252, 254, 259, 260, 263, 267, 268, 275], "were": [0, 27, 30, 216, 240, 241, 251, 254, 259, 264, 275, 277], "test": [0, 2, 120, 210, 212, 213, 214, 242, 244, 249, 255, 256, 258, 262, 264, 268, 272], "7": [0, 1, 2, 35, 49, 51, 52, 57, 59, 62, 78, 90, 95, 107, 109, 202, 240, 241, 249, 251, 254, 256, 258, 259, 260, 261, 262, 264, 269, 271, 272, 273, 274], "4": [0, 1, 2, 6, 49, 51, 52, 57, 59, 62, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 107, 187, 202, 214, 219, 240, 241, 249, 250, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 269, 271, 272, 273, 274], "3": [0, 1, 2, 6, 30, 33, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 68, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 97, 99, 107, 109, 115, 117, 129, 130, 131, 135, 136, 149, 153, 154, 155, 177, 185, 186, 187, 191, 192, 194, 200, 201, 202, 218, 240, 241, 249, 250, 251, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 269, 271, 272, 273, 274, 275, 277], "delimet": 0, "between": [0, 8, 9, 27, 71, 217, 231, 240, 241, 242, 244, 254, 258, 259, 265, 268, 271, 272, 276, 277], "comma": [0, 275], "space": [0, 64, 209, 213, 242, 244, 275], "tab": [0, 135, 242, 266], "befor": [0, 2, 30, 154, 155, 193, 244, 258, 260, 264], "after": [0, 6, 30, 105, 106, 107, 176, 207, 216, 219, 223, 241, 242, 244, 250, 254, 259, 260, 261, 264, 268, 269, 271, 273, 274, 277], "ar": [0, 3, 4, 6, 8, 26, 27, 30, 36, 37, 39, 42, 56, 71, 93, 104, 129, 145, 146, 150, 158, 161, 162, 173, 184, 188, 194, 204, 210, 211, 213, 221, 223, 240, 242, 244, 245, 246, 247, 249, 251, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 273, 275, 277], "give": [0, 26, 104, 131, 155, 240, 242, 244, 249, 254, 258, 259, 273], "sic": 0, "begin": [0, 254, 261, 263], "end": [0, 36, 46, 254, 259, 261, 263, 275], "insert": [0, 242], "each": [0, 2, 8, 27, 33, 35, 55, 56, 57, 77, 78, 79, 80, 81, 82, 90, 95, 96, 107, 130, 133, 134, 152, 155, 165, 223, 240, 241, 244, 246, 249, 251, 252, 254, 256, 258, 259, 261, 262, 263, 264, 265, 271, 272, 273, 274, 275, 277], "can": [0, 1, 2, 6, 10, 19, 26, 30, 48, 56, 64, 73, 79, 116, 152, 183, 207, 223, 226, 227, 240, 241, 242, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 271, 272, 275, 276, 277], "onli": [0, 2, 3, 8, 10, 14, 27, 35, 53, 54, 65, 68, 75, 77, 78, 80, 81, 82, 101, 108, 112, 130, 152, 183, 193, 219, 231, 242, 244, 245, 249, 258, 259, 263, 264, 267, 275, 277], "numer": [0, 6, 14, 31, 77, 78, 80, 81, 240, 242, 251, 261, 268], "e": [0, 6, 19, 27, 68, 74, 105, 106, 107, 131, 146, 160, 213, 240, 242, 247, 251, 254, 256, 258, 259, 261, 263, 264, 265, 268, 272, 275, 277], "other": [0, 9, 19, 27, 30, 69, 134, 235, 240, 245, 247, 252, 256, 259, 268], "charact": [0, 10, 251], "than": [0, 25, 26, 256, 259, 264], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 27, 35, 204, 221, 222, 225, 226, 234, 242, 249, 259, 264, 268, 275], "except": [0, 11, 12, 20, 21, 22, 37, 56, 152, 259], "ii": [0, 6], "datx": 0, "fortran": 0, "short": [0, 247, 259], "form": [0, 24, 27, 152, 210, 242, 259], "exponenti": [0, 35, 37, 42, 165, 244, 249, 254, 263], "notat": [0, 277], "2": [0, 1, 2, 6, 8, 19, 30, 33, 35, 36, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 99, 101, 107, 108, 109, 110, 115, 117, 129, 130, 131, 135, 136, 149, 153, 154, 155, 156, 158, 163, 166, 168, 169, 172, 174, 175, 177, 180, 184, 186, 187, 191, 192, 194, 202, 208, 217, 240, 241, 244, 247, 249, 250, 251, 254, 256, 258, 260, 261, 262, 263, 264, 265, 269, 271, 272, 273, 274, 275], "1": [0, 1, 2, 6, 7, 8, 18, 19, 23, 26, 27, 30, 33, 35, 36, 41, 43, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 95, 96, 97, 99, 101, 107, 108, 109, 110, 113, 114, 115, 117, 129, 130, 131, 132, 135, 136, 140, 143, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 173, 175, 176, 178, 181, 184, 185, 186, 187, 189, 191, 192, 194, 195, 202, 208, 209, 210, 213, 217, 240, 241, 244, 246, 247, 249, 250, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 272, 273, 274, 275, 277], "mean": [0, 2, 13, 18, 19, 23, 56, 61, 131, 153, 154, 209, 221, 225, 240, 241, 242, 244, 254, 256, 259, 261, 262, 263, 264, 268, 271, 275, 277], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 18, 19, 25, 26, 27, 30, 32, 56, 60, 61, 64, 70, 79, 84, 85, 100, 104, 110, 111, 113, 114, 115, 116, 132, 133, 137, 152, 153, 154, 156, 158, 166, 167, 174, 176, 178, 206, 214, 216, 219, 221, 225, 226, 231, 240, 241, 243, 244, 247, 248, 249, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 272, 273, 275], "d": [0, 8, 13, 16, 18, 23, 27, 28, 30, 222, 224, 235, 259, 261], "instead": [0, 65, 79, 104, 221, 241, 242, 244, 251, 252, 254, 259, 263, 268, 277], "lone": 0, "an": [0, 4, 8, 10, 15, 17, 19, 26, 27, 30, 33, 38, 39, 45, 50, 52, 63, 64, 72, 96, 98, 118, 119, 120, 124, 129, 131, 142, 152, 156, 186, 200, 201, 202, 216, 217, 219, 222, 224, 242, 244, 247, 249, 251, 254, 255, 256, 257, 258, 259, 261, 264, 265, 268, 271, 273, 274, 275, 277], "0": [0, 1, 2, 6, 7, 8, 15, 16, 18, 19, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 95, 96, 97, 109, 110, 114, 115, 117, 129, 130, 131, 135, 140, 141, 144, 149, 153, 154, 155, 158, 160, 161, 162, 165, 166, 167, 173, 174, 176, 178, 184, 185, 186, 189, 192, 194, 202, 208, 209, 210, 214, 218, 219, 240, 241, 244, 247, 249, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 269, 271, 272, 273, 274, 275, 277], "dot": 0, "most": [0, 6, 35, 183, 244, 249, 252, 259, 263, 271], "24": [0, 2, 57, 90, 95, 97, 107, 109, 202, 240, 241, 249, 251, 256, 258, 260, 262, 264, 271, 272, 274], "long": [0, 242, 259, 268], "count": [0, 96, 218, 225, 242, 264], "delimit": 0, "wa": [0, 28, 194, 217, 240, 242, 259, 260, 272, 273], "eaten": 0, "empti": [0, 27, 216, 249, 263], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 17, 19, 27, 28, 30, 40, 46, 65, 71, 75, 86, 87, 88, 140, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 191, 192, 193, 194, 242, 244, 245, 246, 251, 256, 257, 258, 264, 265, 275, 276, 277], "As": [0, 27, 245, 246, 263, 265, 275, 277], "contain": [0, 2, 3, 27, 79, 200, 201, 202, 240, 241, 244, 249, 250, 251, 252, 256, 258, 259, 262, 263, 264, 269, 271, 272, 273, 274, 275], "drope": 0, "input": [0, 8, 9, 10, 27, 30, 35, 37, 39, 62, 63, 70, 73, 76, 120, 125, 135, 140, 154, 165, 199, 209, 217, 228, 242, 244, 251, 256, 258, 261, 263, 264, 265, 268, 272, 277], "ani": [0, 2, 8, 9, 25, 45, 56, 67, 150, 207, 218, 228, 231, 247, 251, 256, 258, 259, 261, 263, 265, 268, 275, 277], "limit": [0, 2, 66, 148, 173, 209, 242, 244, 258, 259, 266], "length": [0, 79, 80, 81, 82, 96, 97, 109, 242, 251], "If": [0, 2, 10, 19, 30, 35, 46, 56, 71, 73, 79, 92, 96, 98, 145, 146, 152, 154, 165, 173, 184, 185, 186, 187, 188, 194, 204, 211, 213, 219, 240, 244, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 268, 275, 277], "ha": [0, 2, 8, 19, 27, 71, 79, 90, 95, 118, 119, 120, 121, 122, 123, 124, 125, 127, 228, 240, 242, 244, 245, 247, 249, 251, 252, 256, 258, 259, 261, 263, 264, 270, 272, 273, 275], "more": [0, 2, 8, 26, 208, 210, 211, 212, 213, 214, 242, 244, 246, 249, 255, 257, 259, 263, 264, 268, 271, 275, 276], "extra": [0, 242], "consid": [0, 2, 211, 212, 213, 242, 249, 252, 256, 258, 259, 264, 272], "start": [0, 2, 8, 36, 45, 96, 132, 144, 152, 211, 242, 244, 247, 249, 251, 254, 258, 259, 263, 264, 272, 273, 275, 277], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 231, 240, 242, 244, 245, 247, 249, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 272, 274, 275, 276, 277], "been": [0, 2, 6, 245, 249, 251, 259, 261, 263, 275], "provid": [0, 27, 154, 173, 244, 245, 249, 251, 256, 258, 259, 263, 264, 277], "default": [0, 1, 2, 6, 7, 19, 25, 27, 32, 33, 35, 36, 37, 42, 46, 48, 55, 71, 73, 75, 100, 104, 111, 117, 125, 139, 145, 146, 148, 152, 153, 154, 156, 158, 161, 162, 165, 173, 174, 176, 184, 185, 186, 187, 196, 197, 199, 204, 208, 211, 212, 213, 219, 234, 239, 242, 244, 246, 249, 256, 258, 261, 263, 264, 265, 266, 272, 277], "where": [0, 2, 33, 41, 207, 240, 241, 242, 245, 246, 249, 251, 254, 258, 259, 263, 264, 265, 268, 275, 277], "rexex": 0, "": [0, 10, 64, 140, 244, 251, 254, 259, 265, 269], "za": 0, "z": [0, 33], "either": [0, 2, 37, 209, 210, 244, 256, 259, 261, 263, 275], "surround": 0, "two": [0, 8, 9, 27, 30, 134, 240, 242, 243, 244, 259, 268, 272, 275, 277], "By": [0, 19, 27, 258, 259, 261], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 30, 46, 64, 72, 132, 142, 153, 211, 212, 213, 225, 240, 241, 242, 244, 249, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 272, 273, 275, 277], "interpret": [0, 242, 259], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 19, 26, 27, 28, 30, 33, 39, 48, 56, 64, 71, 73, 77, 78, 79, 80, 81, 82, 104, 117, 131, 132, 139, 150, 152, 153, 154, 155, 156, 158, 163, 165, 171, 173, 174, 179, 188, 193, 195, 196, 199, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 214, 221, 222, 223, 225, 226, 227, 229, 234, 240, 241, 242, 244, 246, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 271, 272, 273, 275, 276], "chang": [0, 2, 9, 19, 26, 27, 36, 157, 161, 163, 166, 167, 175, 178, 180, 192, 244, 247, 259, 261, 263, 264, 265, 272, 277], "howev": [0, 256, 258, 259, 263, 265, 275, 277], "one": [0, 2, 6, 8, 9, 10, 14, 23, 25, 26, 27, 35, 68, 75, 79, 87, 136, 152, 154, 165, 179, 188, 190, 191, 195, 199, 216, 218, 221, 225, 226, 229, 242, 244, 245, 247, 251, 252, 254, 258, 259, 261, 263, 264, 265, 268, 275, 277], "legal": [0, 259], "ones": [0, 249, 254], "9": [0, 6, 41, 57, 66, 78, 81, 90, 93, 95, 107, 109, 194, 202, 240, 241, 249, 251, 255, 256, 258, 259, 260, 262, 263, 264, 271, 272, 273, 274, 277], "sinc": [0, 6, 252, 254, 256, 263, 264, 265, 268, 277], "number": [0, 2, 6, 8, 14, 23, 25, 39, 46, 56, 61, 67, 73, 74, 105, 106, 107, 109, 132, 152, 153, 154, 155, 156, 165, 172, 177, 210, 214, 217, 218, 240, 242, 244, 249, 251, 259, 271, 272, 273, 275, 277], "valu": [0, 1, 2, 6, 10, 19, 25, 26, 27, 33, 37, 42, 43, 56, 60, 61, 66, 67, 77, 78, 79, 80, 81, 82, 86, 88, 90, 93, 95, 110, 114, 115, 152, 155, 176, 192, 204, 208, 210, 211, 212, 213, 214, 219, 239, 240, 242, 244, 247, 249, 251, 260, 261, 263, 272, 273, 274], "met": [0, 259], "doubl": 0, "big": 0, "warn": [0, 2, 12, 216, 224, 242, 249, 256, 258, 264, 277], "larger": [0, 259], "pad": 0, "filter": [0, 105, 106, 107, 242, 251], "so": [0, 25, 152, 223, 245, 246, 247, 252, 259, 265, 271, 277], "characterscannot": 0, "neither": [0, 259], "perform": [0, 14, 68, 244, 249, 259, 261, 264, 265], "order": [0, 8, 27, 30, 121, 123, 126, 127, 152, 163, 164, 169, 175, 180, 181, 209, 242, 244, 251, 259, 261, 264, 268, 275, 277], "given": [0, 2, 27, 36, 74, 77, 78, 80, 81, 82, 87, 88, 111, 113, 120, 125, 137, 145, 146, 153, 154, 155, 176, 182, 191, 192, 198, 204, 223, 225, 242, 244, 247, 249, 251, 254, 256, 258, 259, 264, 265, 271, 272], "critic": [0, 245], "case": [0, 2, 71, 83, 152, 219, 242, 249, 255, 256, 258, 259, 261, 263, 264, 270, 276], "illeg": 0, "get": [0, 4, 5, 7, 8, 10, 16, 17, 27, 30, 89, 91, 92, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 128, 218, 242, 251, 254, 258, 259, 262, 268, 276, 277], "need": [0, 2, 37, 68, 83, 116, 242, 244, 246, 247, 252, 254, 255, 259, 261, 263, 267, 268, 277], "becaus": [0, 8, 242, 259, 263], "later": [0, 255, 259], "comparison": [0, 264, 268], "It": [0, 19, 221, 245, 247, 251, 252, 255, 256, 257, 259, 261, 262, 263, 266, 271, 275, 277], "possibl": [0, 2, 6, 27, 30, 121, 122, 123, 127, 183, 211, 213, 242, 247, 251, 256, 259, 262, 263, 264, 265, 266, 268, 271, 275, 277], "done": [0, 1, 68, 69, 77, 78, 80, 81, 82, 152, 245, 261, 263, 264, 266, 272], "eq": [0, 16, 263], "ne": [0, 263], "text": [0, 19, 35, 261, 268], "otherwis": [0, 6, 8, 19, 30, 33, 35, 37, 40, 68, 71, 92, 98, 117, 118, 119, 124, 129, 130, 131, 152, 163, 173, 174, 175, 176, 177, 180, 245, 251, 259, 261, 268], "appropri": [0, 19, 245, 259], "letter": [0, 117], "alphanum": 0, "underscor": 0, "real": [0, 251, 252], "special": [0, 6, 188, 251, 252, 259], "digit": [0, 67, 242], "enclos": 0, "ok": [0, 252], "w": [0, 30, 68, 117, 129, 135, 136, 143, 156, 165, 174, 176, 179, 195, 259, 261, 263], "o": [0, 241, 243, 244, 248, 272], "With": [0, 275], "eqn": 0, "ge": 0, "etc": [0, 3, 242, 263, 265, 273, 275], "maximum": [0, 14, 35, 67, 210, 244, 249], "have": [0, 6, 8, 19, 27, 30, 35, 37, 126, 188, 212, 218, 223, 225, 242, 244, 246, 247, 249, 251, 252, 255, 256, 258, 259, 261, 263, 264, 265, 266, 268, 275, 277], "12": [0, 1, 57, 90, 93, 95, 96, 97, 107, 202, 240, 241, 249, 251, 254, 256, 259, 260, 262, 264, 269, 271, 272, 273, 274], "must": [0, 25, 39, 71, 152, 165, 221, 241, 244, 246, 258, 259, 261, 263], "decreas": [0, 252], "within": [0, 152, 245, 259, 275], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 27, 30, 173, 240, 245, 247, 249, 252, 259, 265, 277], "affect": [0, 104, 259, 265], "even": [0, 25, 74, 76, 90, 95, 246, 259, 265], "still": [0, 259, 265, 277], "cannot": [0, 8, 56, 71, 220, 242, 251, 259, 263, 275], "both": [0, 1, 2, 19, 39, 160, 218, 242, 245, 249, 251, 256, 258, 259, 261, 264, 272, 275, 277], "reenter": 0, "think": 0, "risk": [0, 259], "being": [0, 6, 27, 56, 155, 156, 158, 174, 241, 242, 246, 254, 259, 265, 268, 273, 277], "truncat": 0, "encod": [0, 179, 195, 242, 251, 266], "here": [0, 2, 104, 251, 252, 253, 256, 261, 263, 264, 268, 275, 276, 277], "possibli": [0, 268], "partial": [0, 244, 268], "list": [0, 2, 6, 8, 10, 13, 14, 16, 18, 26, 27, 30, 33, 37, 39, 71, 75, 76, 84, 85, 87, 88, 99, 100, 104, 111, 113, 128, 133, 145, 146, 152, 153, 159, 165, 173, 184, 185, 186, 187, 189, 190, 191, 192, 199, 204, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 230, 240, 241, 242, 244, 245, 247, 249, 251, 258, 259, 261, 263, 271, 272, 273, 275], "decid": [0, 2, 125, 256, 258, 259, 264, 272], "whether": [0, 25, 33, 35, 37, 71, 120, 125, 152, 165, 200, 202, 219, 222, 234, 244, 256, 259, 263, 264, 275], "put": [0, 132, 152, 252, 254], "up": [0, 245, 249, 277], "written": [0, 196, 242, 259, 261, 265, 275], "scientif": [0, 252], "14": [0, 57, 78, 90, 95, 107, 202, 240, 241, 249, 251, 256, 258, 259, 260, 262, 271, 273, 274], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 19, 96, 240, 263], "describ": [0, 2, 16, 27, 30, 56, 121, 122, 123, 126, 127, 240, 249, 251, 256, 258, 261], "output": [0, 8, 16, 19, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 218, 242, 244, 247, 259, 261, 263, 275, 277], "alwai": [0, 154, 242, 251, 264], "synonym": [0, 242], "name": [0, 1, 2, 6, 7, 8, 10, 13, 14, 16, 18, 19, 23, 25, 26, 27, 31, 32, 35, 37, 38, 39, 43, 46, 56, 67, 69, 70, 71, 74, 75, 80, 81, 82, 87, 91, 96, 97, 100, 102, 104, 107, 109, 111, 113, 117, 120, 128, 129, 132, 134, 139, 142, 145, 146, 151, 152, 159, 165, 170, 173, 184, 185, 186, 187, 190, 191, 204, 207, 208, 209, 212, 215, 216, 219, 221, 222, 223, 225, 226, 228, 229, 231, 239, 241, 242, 244, 246, 249, 251, 258, 259, 262, 263, 267, 272, 273, 275, 276, 277], "avail": [0, 1, 2, 6, 33, 40, 56, 116, 129, 163, 175, 177, 180, 204, 240, 244, 246, 249, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 268, 272, 274, 275, 277], "carri": [0, 259], "over": [0, 109, 132, 152, 176, 200, 201, 202, 240, 241, 254, 258, 275], "onc": [0, 130, 249, 265], "covari": [0, 6, 10, 18, 27, 34, 35, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 71, 95, 104, 120, 128, 135, 141, 142, 153, 154, 155, 159, 209, 210, 242, 244, 249, 251, 252, 258, 261, 268, 273, 275, 276], "final": [0, 2, 34, 141, 206, 242, 249, 254, 256, 258, 259, 264, 265, 272, 273], "estim": [0, 1, 2, 14, 15, 19, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 57, 61, 66, 67, 71, 79, 86, 87, 88, 134, 135, 140, 141, 144, 149, 153, 154, 155, 156, 158, 161, 162, 163, 166, 168, 169, 173, 174, 175, 177, 179, 180, 181, 185, 186, 187, 191, 192, 193, 194, 195, 199, 208, 209, 219, 240, 241, 242, 244, 249, 250, 252, 256, 258, 260, 264, 267, 268, 271, 272, 275, 276], "oppos": 0, "ext": [0, 242, 275], "per": [0, 6, 14, 26, 68, 105, 106, 107, 109, 153, 154, 176, 218], "est": [0, 2, 34, 36, 45, 141, 144], "first": [0, 2, 27, 35, 40, 74, 90, 95, 121, 123, 134, 161, 163, 164, 169, 175, 177, 180, 242, 244, 249, 254, 256, 258, 259, 265, 268, 275, 277], "call": [0, 218, 231, 242, 246, 247, 259, 265, 277], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 241, 242, 244, 246, 249, 256, 258, 264, 268, 269, 271, 272, 273, 275, 276], "theta": [0, 1, 30, 33, 35, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 66, 67, 68, 86, 87, 88, 110, 114, 115, 117, 129, 130, 131, 135, 136, 140, 154, 155, 166, 167, 173, 178, 179, 185, 186, 187, 189, 191, 192, 194, 195, 242, 256, 258, 261, 262, 264, 265, 268, 272], "sigma": [0, 1, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 67, 110, 114, 115, 135, 136, 140, 154, 155, 156, 158, 174, 240, 254, 256, 258, 261, 262, 263, 264, 265], "omega": [0, 1, 23, 27, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 71, 110, 114, 115, 135, 136, 140, 154, 155, 184, 194, 242, 244, 254, 256, 258, 261, 262, 263, 264, 265, 271, 272], "fix": [0, 1, 2, 25, 26, 33, 43, 48, 71, 86, 87, 88, 110, 114, 115, 160, 166, 167, 178, 184, 189, 191, 192, 208, 244, 256, 259, 261, 268, 275], "offdiagon": 0, "could": [0, 19, 242, 251, 259, 263, 267, 268, 277], "part": [0, 27, 74, 240, 244, 247, 259, 261, 265, 268, 275], "NO": [0, 259], "probabl": 0, "same": [0, 2, 8, 10, 16, 19, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 67, 68, 71, 75, 76, 83, 86, 87, 88, 96, 117, 126, 130, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 209, 212, 221, 223, 225, 241, 242, 244, 245, 249, 251, 254, 258, 259, 261, 263, 264, 275, 277], "type": [0, 2, 6, 8, 10, 19, 29, 30, 35, 48, 111, 133, 137, 204, 209, 211, 212, 213, 239, 242, 244, 247, 249, 254, 255, 256, 257, 258, 259, 261, 263, 264, 268], "now": [0, 242, 247, 263, 265], "investig": 0, "follow": [0, 2, 35, 131, 184, 240, 242, 244, 245, 247, 249, 251, 252, 255, 256, 258, 259, 261, 263, 264, 265, 267, 275, 277], "like": [0, 19, 27, 259, 263, 265, 268, 275], "One": [0, 27, 132, 133, 228, 268, 277], "last": [0, 2, 30, 162, 219], "left": [0, 4, 56, 261, 263, 267], "justifi": 0, "size": [0, 6, 13, 152, 242, 245, 263, 268], "13": [0, 1, 2, 57, 90, 93, 95, 96, 107, 202, 240, 241, 249, 251, 256, 258, 259, 260, 262, 264, 269, 271, 273, 274], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 229, 239, 240, 241, 242, 243, 245, 247, 249, 254, 255, 257, 258, 259, 260, 262, 267, 268, 271, 273, 274, 276], "n": [0, 6, 18, 23, 27, 41, 71, 149, 154, 155, 172, 177, 184, 186, 240, 241, 242, 244, 254, 256, 258, 261, 263], "flatten": [0, 242], "triangular": 0, "correl": [0, 49, 50, 51, 52, 58, 59, 62, 63, 66, 71, 194, 242, 271], "abov": [0, 33, 35, 37, 66, 240, 241, 249, 254, 259, 261, 277], "off": 0, "diagon": [0, 135, 242, 256, 261, 262, 264], "obj": [0, 2, 19], "right": [0, 4, 8, 16, 259, 261, 263, 277], "also": [0, 2, 27, 76, 152, 242, 246, 247, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 272, 275, 277], "22": [0, 57, 77, 78, 80, 81, 90, 95, 107, 109, 202, 240, 241, 249, 251, 254, 258, 260, 262, 274], "integ": [0, 6, 117, 242, 244, 275], "5": [0, 1, 30, 33, 49, 51, 52, 56, 57, 59, 62, 68, 78, 79, 88, 90, 93, 95, 97, 107, 109, 117, 129, 130, 131, 135, 187, 192, 202, 217, 218, 240, 241, 249, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 269, 271, 273, 274, 277], "expon": [0, 1, 33, 208, 244], "regular": [0, 10, 257], "take": [0, 2, 25, 73, 242, 245, 251, 256, 258, 259, 263, 264, 268], "19": [0, 57, 78, 90, 95, 107, 202, 240, 241, 249, 251, 256, 260, 262, 263, 271, 273, 274], "posit": [0, 2, 27, 154, 155, 242, 244, 245, 252], "neg": [0, 275], "For": [0, 2, 8, 35, 37, 105, 106, 107, 131, 188, 208, 210, 211, 212, 213, 214, 240, 241, 244, 246, 247, 249, 254, 255, 259, 261, 263, 264, 265, 268, 275, 277], "20": [0, 2, 57, 81, 90, 95, 107, 202, 240, 241, 249, 251, 259, 260, 262, 269, 271, 272, 273, 274], "In": [0, 71, 83, 245, 247, 249, 256, 258, 259, 261, 263, 268, 275, 277], "observ": [0, 6, 19, 40, 96, 105, 106, 107, 108, 109, 163, 175, 177, 180, 181, 217, 218, 240, 242, 254, 268, 271, 274, 276], "byte": 0, "evid": [0, 98, 242], "toward": [0, 96, 242], "token": [0, 275], "whitespac": 0, "parenthes": [0, 275], "multipl": [0, 4, 27, 30, 216, 242, 249, 252, 261, 272, 273, 275, 276], "open": [0, 245, 247, 257, 259, 266], "keyword": [0, 244], "kept": [0, 83, 242, 244, 256], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 242, 244, 246, 247, 249, 251, 252, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 272, 277], "csv": [0, 2, 28, 140, 196, 220, 242, 244, 249, 251, 256, 258, 263, 264, 272, 275], "wgt": [0, 2, 4, 6, 10, 30, 33, 35, 68, 75, 76, 90, 95, 104, 116, 117, 129, 130, 131, 135, 136, 142, 185, 186, 187, 190, 208, 210, 251, 254, 261, 263, 265, 268, 271, 275], "23": [0, 56, 57, 61, 73, 78, 90, 95, 107, 153, 154, 155, 202, 240, 241, 249, 251, 256, 258, 260, 262, 264, 273, 274], "titl": 0, "crash": [0, 242], "nmtran": [0, 6], "There": [0, 223], "72": [0, 249], "includ": [0, 2, 3, 18, 23, 27, 42, 133, 219, 241, 242, 245, 249, 256, 257, 258, 259, 263, 271, 273, 275], "come": [0, 247, 259], "filenam": [0, 19, 221, 225, 226, 261], "repres": [0, 4, 6, 19, 25, 26, 27, 244, 249, 251, 252, 254, 259, 261, 263], "rel": [0, 14, 242, 254], "path": [0, 1, 2, 10, 19, 28, 46, 72, 94, 137, 138, 140, 196, 197, 198, 205, 207, 209, 220, 221, 222, 223, 225, 226, 227, 229, 234, 242, 244, 246, 249, 251, 256, 258, 261, 263, 264, 272, 273, 275, 277], "work": [0, 242, 245, 247, 259, 261, 268], "directori": [0, 198, 207, 221, 222, 223, 242, 244, 246, 247, 249, 261, 263, 273], "when": [0, 14, 35, 68, 242, 245, 247, 251, 258, 259, 261, 263, 265, 271, 273, 275, 277], "invok": [0, 19], "nmfe": 0, "content": [0, 1, 2, 217, 218, 249, 251, 256, 258, 259, 264, 272], "simpli": [0, 25, 247, 265], "seen": [0, 1, 2, 249, 251, 256, 258, 264, 272], "54": [0, 57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 264, 269, 271, 274], "doe": [0, 2, 8, 46, 74, 94, 148, 221, 222, 223, 226, 227, 242, 252, 256, 258, 259, 264, 265, 271, 277], "pk": [0, 2, 38, 42, 111, 135, 242, 244, 249, 256, 261, 264, 265, 275, 276], "pred": [0, 81, 135, 140, 242, 261, 262, 263, 271, 274], "simpl": [0, 1, 135, 183, 219, 261, 263, 265], "merg": [0, 242, 259], "placement": [0, 246], "place": [0, 246, 259, 263, 277], "seem": 0, "restrict": [0, 223, 259], "automat": [0, 14, 33, 209, 242, 247, 249, 255, 259, 272, 275], "creat": [0, 2, 4, 5, 7, 8, 10, 15, 17, 18, 19, 23, 25, 26, 27, 28, 68, 72, 73, 74, 92, 93, 98, 140, 145, 165, 173, 198, 207, 217, 218, 221, 222, 223, 224, 225, 231, 234, 240, 241, 242, 244, 247, 249, 250, 251, 254, 256, 258, 260, 261, 264, 268, 269, 271, 272, 273, 274, 275, 276], "continu": [0, 2, 6, 35, 209, 242, 244, 245, 247, 249, 254, 259, 268, 275, 277], "factor": [0, 268], "compil": [0, 259], "11138": 0, "445": [0, 256], "though": [0, 259], "outsid": [0, 242, 245, 259], "standard": [0, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 63, 72, 195, 240, 242, 252, 254, 259, 265, 268, 271, 272, 274], "gfortran": 0, "8": [0, 2, 6, 49, 50, 51, 52, 57, 58, 59, 62, 63, 90, 95, 97, 107, 109, 202, 240, 241, 249, 251, 255, 256, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 277], "hh": 0, "j": [0, 186, 241, 254], "nep": 0, "h": [0, 244], "second": [0, 134, 244, 249, 265], "f": [0, 30, 68, 117, 129, 135, 136, 143, 156, 158, 165, 173, 174, 176, 195, 240, 244, 248, 259, 261, 263, 265], "respect": [0, 2, 242, 245, 254, 259, 263, 264, 265], "ep": [0, 30, 68, 108, 117, 129, 135, 136, 143, 156, 165, 173, 176, 195, 242, 244, 261, 263, 265], "implicit": [0, 242], "kind": [0, 6, 8, 111, 259], "dpsize": 0, "main": [0, 244, 268, 277], "function": [0, 3, 10, 14, 16, 33, 35, 53, 54, 73, 76, 77, 78, 80, 81, 82, 86, 87, 88, 101, 108, 112, 121, 122, 123, 127, 156, 158, 166, 174, 183, 188, 191, 192, 194, 198, 204, 211, 213, 228, 240, 242, 244, 247, 252, 256, 257, 258, 259, 261, 263, 264, 265, 267, 268, 271, 272, 273, 275, 277], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 13, 18, 19, 23, 27, 31, 32, 39, 56, 74, 79, 100, 110, 113, 114, 116, 125, 136, 155, 208, 209, 242, 244, 249, 251, 252, 256, 262, 263, 268, 271, 276], "doesn": [0, 30, 225, 242, 256], "t": [0, 6, 8, 16, 30, 33, 168, 169, 181, 187, 219, 225, 230, 231, 234, 241, 242, 244, 254, 256, 261, 269, 271], "declar": [0, 2, 68, 130, 249, 275], "assign": [0, 6, 30, 68, 242, 244], "stop": 0, "entri": [0, 224], "symbol": [0, 4, 5, 7, 8, 9, 13, 16, 17, 18, 19, 23, 25, 26, 27, 30, 53, 54, 68, 74, 101, 104, 108, 112, 116, 130, 136, 151, 173, 209, 242, 249, 252, 263, 268], "separ": [0, 10, 71, 83, 131, 152, 184, 223, 244, 247, 249, 251, 252, 254, 259, 263, 268, 275], "thnn": 0, "nn": [0, 254], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 25, 27, 259, 263], "ad": [0, 9, 35, 37, 41, 83, 211, 212, 213, 242, 244, 249, 258, 259, 265, 272, 273, 276], "x": [0, 1, 2, 26, 33, 68, 77, 78, 93, 153, 240, 249, 251, 254, 256, 258, 262, 263, 264, 266, 272, 273], "xxe": 0, "xx": 0, "string": [0, 6, 10, 27, 28, 30, 100, 104, 137, 138, 139, 140, 242, 251, 264], "tool": [1, 2, 3, 14, 45, 143, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 227, 229, 234, 239, 240, 242, 243, 244, 247, 249, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 267, 268, 272, 276], "add": [1, 9, 14, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 83, 173, 174, 242, 244, 251, 256, 259, 264, 265, 266, 275], "allometr": [1, 2, 33, 208, 244, 275], "scale": [1, 2, 6, 33, 55, 60, 64, 208, 242, 244, 254, 263, 266, 275], "pharmr": [1, 2, 3, 242, 247, 249, 252, 255, 256, 257, 258, 264, 272, 276], "command": [1, 242, 247, 249, 255, 256, 257, 258, 259, 263, 264, 272, 276], "line": [1, 68, 242, 249, 255, 256, 257, 258, 259, 263, 264, 272, 276], "To": [1, 2, 244, 247, 249, 255, 256, 258, 259, 263, 264, 266, 272, 275, 277], "initi": [1, 2, 8, 15, 16, 19, 25, 26, 33, 37, 39, 40, 41, 42, 43, 71, 73, 79, 86, 87, 88, 149, 156, 158, 163, 165, 166, 168, 169, 173, 174, 175, 177, 180, 181, 185, 186, 187, 191, 192, 193, 194, 208, 209, 230, 242, 244, 249, 254, 256, 258, 259, 264, 272, 276], "python": [1, 2, 241, 242, 244, 249, 251, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 272, 275, 276], "r": [1, 2, 28, 241, 242, 249, 251, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 272, 275, 276], "run_allometri": 1, "start_model": [1, 217, 249, 256, 258, 264, 272, 275], "read_model": [1, 139, 140, 242, 249, 251, 256, 258, 261, 262, 263, 264, 272, 277], "re": [1, 2, 198, 205, 206, 210, 215, 222, 227, 229, 241, 249, 256, 258, 261, 262, 263, 264, 272, 274, 275, 277], "code": [1, 19, 21, 68, 89, 104, 116, 121, 122, 123, 127, 135, 140, 173, 174, 197, 242, 249, 256, 257, 258, 259, 264, 265, 267, 268, 272, 276, 277], "redefin": [1, 249, 256, 258, 264, 272], "accordingli": [1, 249, 256, 258, 264, 265, 272], "descript": [1, 2, 6, 19, 31, 217, 218, 219, 239, 240, 242, 246, 249, 251, 256, 258, 261, 264, 268, 272, 273], "allometric_vari": [1, 2, 33, 208, 209, 244], "wt": [1, 30, 33, 208, 249, 273], "reference_valu": [1, 2, 33, 208, 244], "refer": [1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 68, 71, 75, 76, 83, 86, 87, 88, 117, 126, 130, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 206, 208, 209, 219, 242, 244, 249, 259, 265, 276, 277], "70": [1, 2, 33, 90, 208, 251, 271], "appli": [1, 2, 19, 156, 158, 165, 173, 174, 185, 186, 187, 208, 242, 244, 245, 251, 254, 259, 264, 271, 275, 277], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 33, 37, 42, 65, 68, 71, 75, 83, 87, 88, 91, 93, 95, 97, 99, 100, 102, 110, 111, 114, 115, 117, 121, 122, 123, 125, 127, 128, 133, 136, 145, 146, 153, 154, 165, 167, 173, 178, 184, 185, 186, 187, 189, 190, 191, 192, 207, 208, 211, 212, 213, 219, 221, 225, 226, 235, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 275, 277], "cl": [1, 2, 4, 8, 16, 26, 30, 33, 35, 37, 39, 41, 56, 68, 74, 84, 100, 111, 113, 117, 120, 125, 129, 130, 131, 135, 136, 142, 145, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 183, 185, 186, 187, 208, 210, 249, 254, 256, 258, 261, 263, 265], "q": [1, 33, 208, 242], "v": [1, 8, 16, 26, 30, 33, 41, 56, 68, 85, 100, 111, 116, 117, 129, 130, 131, 135, 136, 145, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 208, 210, 247, 249, 254, 258, 261, 263, 265, 274, 275], "75": [1, 33, 208], "lower_bound": [1, 2, 33, 208, 244], "lower": [1, 2, 25, 26, 33, 35, 43, 66, 86, 87, 88, 110, 114, 115, 148, 166, 167, 173, 178, 189, 192, 208, 209, 244, 252, 256, 261, 263], "bound": [1, 25, 26, 33, 43, 67, 155, 167, 178, 185, 186, 187, 189, 194, 208, 244, 261], "upper_bound": [1, 2, 33, 208, 244], "upper": [1, 25, 26, 33, 35, 43, 86, 87, 88, 110, 114, 115, 148, 166, 167, 178, 189, 192, 208, 242, 244, 261, 263], "should": [1, 6, 14, 25, 33, 35, 37, 39, 43, 152, 165, 208, 211, 212, 213, 242, 244, 245, 246, 247, 249, 252, 254, 256, 258, 259, 260, 263, 264, 268, 272], "true": [1, 6, 8, 10, 15, 19, 26, 33, 34, 55, 65, 74, 75, 83, 86, 87, 88, 104, 118, 119, 121, 122, 123, 124, 125, 127, 141, 142, 154, 160, 161, 162, 165, 173, 174, 177, 190, 191, 192, 193, 197, 202, 208, 219, 220, 228, 242, 249, 251, 256, 258, 263, 264, 265, 266, 272, 273, 274, 277], "No": [1, 6, 226, 227, 259, 264], "select": [1, 2, 152, 185, 187, 218, 240, 242, 244, 249, 256, 258, 261, 264, 266, 272, 273, 275], "see": [1, 2, 6, 8, 19, 35, 37, 202, 208, 210, 211, 212, 213, 214, 244, 245, 247, 249, 251, 252, 256, 258, 259, 260, 263, 264, 265, 268, 272, 275], "about": [1, 2, 6, 245, 249, 251, 255, 256, 258, 259, 263, 264, 272, 275], "actual": [1, 2, 25, 131, 249, 256, 258, 259, 264, 272], "minim": [1, 2, 249, 256, 258, 264, 272], "statu": [1, 2, 242, 249, 252, 256, 258, 259, 264, 272], "time": [1, 2, 6, 7, 9, 10, 26, 30, 33, 39, 40, 68, 75, 76, 90, 96, 97, 102, 109, 117, 128, 129, 130, 131, 132, 135, 136, 140, 147, 163, 175, 176, 177, 180, 188, 209, 214, 242, 244, 249, 254, 256, 258, 259, 261, 262, 264, 265, 268, 271, 272, 274, 275], "you": [1, 2, 247, 249, 255, 256, 257, 258, 259, 263, 264, 265, 268, 272, 276, 277], "look": [1, 2, 30, 46, 100, 125, 249, 256, 258, 264, 265, 272, 275], "summary_model": [1, 2, 242, 249, 256, 258, 264, 272, 275], "tabl": [1, 2, 55, 135, 156, 218, 240, 241, 242, 247, 249, 250, 254, 256, 258, 260, 261, 264, 269, 271, 272, 273, 274, 275], "gener": [1, 2, 6, 19, 56, 61, 69, 73, 132, 152, 153, 154, 155, 230, 242, 244, 249, 251, 254, 256, 257, 258, 264, 267, 268, 272, 275], "summarize_modelfit_result": [1, 2, 242, 249, 256, 258, 264, 272], "minimization_success": [1, 2, 219, 249, 256, 258, 264, 272], "errors_found": [1, 2, 249, 256, 258, 264, 272], "pheno": [1, 8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 79, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 255, 261, 263, 265, 277], "phenobarb": [1, 135, 219, 261, 263], "scaled_model": [1, 2], "warnings_found": [1, 2, 249, 256, 258, 264, 272], "ofv": [1, 2, 48, 134, 200, 204, 211, 212, 213, 217, 218, 219, 242, 249, 256, 258, 264, 271, 272], "aic": [1, 2, 47, 204, 211, 212, 213, 242, 249, 256, 258, 264, 272], "bic": [1, 2, 48, 204, 211, 212, 213, 242, 244, 249, 256, 258, 264, 272, 275], "730": [1, 240, 254, 256], "894727": [1, 240, 254], "740": [1, 79, 96, 240, 251], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 219, 249, 256, 258, 264, 272], "estimation_runtim": [1, 2, 249, 256, 258, 264, 272], "_estim": [1, 256, 258, 264], "32": [1, 6, 57, 90, 95, 107, 202, 240, 241, 244, 251, 260, 262, 271, 274], "005818": [1, 254, 263], "121955": 1, "44555": [1, 254], "111053": [1, 254, 263], "201526": [1, 254, 263], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 254, 263], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 203, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 240, 242, 249, 254, 256, 258, 264, 269, 272, 275], "predict": [1, 2, 14, 19, 80, 81, 101, 104, 112, 133, 200, 201, 202, 217, 242, 249, 250, 256, 258, 264, 271, 272], "influenti": [1, 2, 200, 201, 218, 242, 249, 256, 258, 264, 272], "individu": [1, 2, 6, 19, 38, 55, 56, 57, 61, 71, 80, 81, 100, 101, 105, 106, 107, 109, 112, 133, 134, 145, 153, 154, 155, 193, 200, 201, 202, 217, 218, 242, 244, 249, 256, 258, 259, 264, 268, 271, 272, 276], "outlier": [1, 2, 201, 202, 218, 242, 249, 256, 258, 264, 272, 274], "summary_individuals_count": [1, 2, 249, 256, 258, 264, 272], "summarize_individuals_count_t": [1, 2, 242, 249, 256, 258, 264, 272], "parent_model": [1, 2, 19, 242, 249, 256, 258, 264, 272], "inf_select": [1, 2, 218, 249, 256, 258, 264, 272], "inf_param": [1, 2, 218, 249, 256, 258, 264, 272], "out_ob": [1, 2, 218, 249, 256, 258, 264, 272], "out_ind": [1, 2, 218, 249, 256, 258, 264, 272], "inf_outli": [1, 2, 218, 249, 256, 258, 264, 272], "differ": [1, 2, 3, 19, 24, 48, 217, 219, 240, 241, 242, 245, 249, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 271, 272, 273, 275, 277], "statist": [1, 6, 56, 61, 186, 249, 251, 254, 256, 258, 261, 263, 264, 272], "summary_individu": [1, 242, 249, 256, 258, 264, 272], "summarize_individu": [1, 218, 242, 249, 256, 258, 264, 272], "outlier_count": [1, 217, 249, 256, 258, 264, 272], "dofv_vs_par": [1, 217, 249, 256, 258, 264, 272], "id": [1, 2, 6, 10, 57, 75, 76, 90, 93, 95, 96, 97, 99, 107, 109, 135, 136, 140, 153, 202, 241, 242, 244, 249, 251, 254, 256, 258, 260, 261, 262, 263, 264, 265, 272, 274], "nan": [1, 2, 93, 194, 242, 249, 251, 254, 256, 258, 264, 271, 272, 273], "742852": 1, "000000": [1, 2, 43, 49, 50, 51, 58, 240, 249, 254, 256, 258, 262, 264, 272], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 26, 39, 57, 71, 78, 90, 93, 95, 96, 107, 148, 167, 178, 186, 202, 240, 241, 249, 251, 254, 255, 256, 258, 259, 260, 262, 264, 271, 272, 273, 274, 275, 277], "092658": 1, "55": [1, 6, 57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 264, 271, 274], "6": [1, 2, 6, 57, 79, 90, 95, 107, 109, 202, 240, 241, 249, 251, 254, 256, 258, 259, 260, 262, 263, 264, 271, 272, 273, 274, 277], "535711": 1, "175743": 1, "56": [1, 57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 274], "764710": 1, "576072": 1, "57": [1, 57, 90, 95, 99, 107, 153, 202, 240, 241, 251, 254, 260, 262, 274], "975589": 1, "539779": 1, "58": [1, 57, 90, 95, 99, 107, 109, 153, 202, 240, 241, 251, 254, 260, 262, 273, 274], "194798": 1, "775689": 1, "59": [1, 57, 90, 93, 95, 97, 99, 105, 107, 109, 153, 202, 240, 241, 251, 254, 260, 262, 264, 274], "11": [1, 2, 57, 77, 78, 80, 90, 93, 95, 96, 107, 202, 240, 241, 249, 251, 254, 256, 259, 260, 262, 263, 264, 271, 273, 274, 275], "175577": 1, "462889": 1, "predicted_dofv": [1, 217, 218, 249, 256, 258, 264, 272], "predicted_residu": [1, 217, 218, 249, 256, 258, 264, 272], "118": [1, 153, 242, 254], "fulli": [2, 275], "best": [2, 242, 249, 256, 258, 259, 264, 272, 275], "dataset": [2, 10, 11, 12, 19, 44, 56, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 92, 93, 96, 98, 99, 103, 105, 106, 107, 109, 116, 126, 132, 137, 148, 152, 159, 188, 196, 209, 212, 241, 242, 244, 247, 254, 257, 258, 263, 274, 276], "combin": [2, 4, 71, 118, 119, 124, 156, 158, 174, 184, 242, 244, 249, 254, 256, 259, 272, 275], "modelsearch": [2, 209, 213, 217, 242, 275], "ruvsearch": [2, 209, 214, 215, 242, 275], "covsearch": [2, 210, 242, 275], "run_amd": [2, 242, 277], "dataset_path": 2, "modeltyp": [2, 209, 244], "pk_oral": [2, 209, 244], "categor": [2, 6, 35, 209, 242, 244, 249, 251, 254, 275, 277], "sex": [2, 245, 249, 268, 275], "ag": [2, 6, 249, 273, 275], "occas": [2, 39, 209, 212, 242, 244, 258, 263], "visi": [2, 258], "c": [2, 9, 186, 243, 248, 249, 254, 258, 259, 263, 265, 272, 277], "specifi": [2, 6, 30, 37, 72, 76, 86, 88, 137, 139, 140, 148, 156, 158, 172, 174, 192, 242, 244, 258, 259, 261, 263, 277], "oral": [2, 275], "drug": [2, 268], "iiv": [2, 18, 23, 27, 32, 37, 39, 42, 48, 71, 100, 125, 145, 165, 184, 209, 211, 212, 213, 242, 244, 249, 257, 258, 275], "we": [2, 245, 247, 249, 254, 255, 257, 259, 263, 265, 268, 277], "our": [2, 245, 247, 248, 259, 268], "object": [2, 3, 4, 6, 7, 9, 10, 14, 19, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 43, 44, 45, 46, 47, 48, 53, 54, 60, 64, 65, 66, 67, 69, 70, 73, 74, 75, 76, 83, 86, 87, 88, 93, 101, 108, 110, 112, 114, 115, 116, 129, 131, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 156, 159, 161, 162, 166, 167, 170, 174, 176, 178, 182, 183, 188, 189, 190, 191, 192, 197, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 240, 242, 244, 246, 249, 251, 252, 256, 258, 259, 261, 263, 264, 265, 268, 272, 275], "build": [2, 209, 243, 244, 252, 263, 275], "pk_iv": [2, 209, 244], "cl_init": [2, 209, 244], "popul": [2, 19, 30, 43, 79, 80, 81, 101, 112, 117, 194, 209, 242, 244, 273], "clearanc": [2, 33, 84, 209, 242, 244, 249, 258, 265], "01": [2, 18, 27, 35, 173, 194, 209, 210, 244, 249, 263, 271, 273], "vc_init": [2, 209, 244], "central": [2, 7, 8, 9, 16, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 209, 244, 247, 252, 261, 263], "compart": [2, 6, 8, 9, 16, 40, 41, 91, 92, 102, 147, 149, 172, 177, 209, 242, 244, 264, 275], "volum": [2, 33, 41, 85, 209, 242, 244, 249, 258, 259], "mat_init": [2, 209, 244], "absorpt": [2, 111, 126, 157, 163, 175, 177, 180, 209, 213, 217, 242, 244, 256, 258, 264, 275], "search_spac": [2, 209, 213, 242, 244, 264, 275], "mfl": [2, 209, 210, 217, 242, 244, 249, 264], "lloq": [2, 148, 209, 244], "quantif": [2, 148, 209, 244], "loq": [2, 148, 209, 244], "data": [2, 6, 19, 32, 77, 78, 79, 80, 81, 82, 95, 104, 135, 136, 140, 148, 156, 158, 160, 174, 194, 209, 218, 240, 242, 251, 254, 257, 258, 259, 261, 263, 265, 268, 275, 277], "found": [2, 8, 26, 216, 240, 241, 242, 247, 250, 253, 254, 256, 258, 259, 262, 264, 271, 272, 275, 276, 277], "datainfo": [2, 19, 76, 137, 159, 196, 242, 275, 276], "bodi": [2, 6, 10, 245, 251, 259, 268], "weight": [2, 6, 10, 82, 179, 195, 251, 268, 272], "correspond": [2, 14, 171, 241, 249, 259, 274, 275], "file": [2, 10, 19, 28, 46, 72, 94, 135, 137, 138, 139, 140, 196, 197, 205, 220, 221, 222, 223, 225, 226, 227, 229, 242, 244, 247, 249, 255, 256, 257, 258, 259, 261, 264, 265, 267, 268, 272, 275, 276], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 224, 229, 242, 246, 249, 251, 259, 261, 263], "model_typ": 2, "elimin": [2, 111, 121, 122, 123, 127, 164, 168, 169, 181, 242, 244, 264, 275], "vc": [2, 41, 149, 249, 256], "mat": [2, 8, 42, 163, 175, 180, 241, 242, 243, 248, 249, 256, 263, 265, 272], "proport": [2, 37, 118, 119, 124, 152, 156, 158, 173, 174, 242, 244], "step": [2, 15, 19, 34, 36, 45, 141, 144, 161, 162, 210, 219, 242, 244, 247, 249, 255, 256, 258, 259, 264, 268, 272, 277], "foce": [2, 14, 15, 34, 36, 141, 161, 162, 244], "interact": [2, 14, 15, 34, 36, 135, 141, 161, 162, 242, 245, 259, 261, 263, 268, 275, 277], "specif": [2, 14, 19, 26, 45, 76, 152, 198, 242, 244, 251, 259, 261, 264, 268, 275], "support": [2, 8, 14, 30, 36, 37, 53, 54, 69, 77, 78, 80, 81, 82, 101, 108, 112, 157, 161, 162, 175, 210, 231, 242, 244, 249, 251, 252, 257, 259, 261, 263, 264, 265, 267, 268, 270, 275, 277], "nonmem": [2, 14, 68, 69, 76, 105, 106, 107, 171, 182, 242, 243, 246, 247, 255, 257, 261, 262, 263, 268, 275, 276], "cmt": [2, 92, 242, 264], "rate": [2, 6, 8, 9, 17, 41, 126, 157, 163, 175, 177, 180, 242, 244, 275], "via": [2, 242, 244, 247, 255, 257, 261, 263, 265, 275, 277], "exclud": [2, 104, 217, 256, 258, 259, 264], "pleas": [2, 246, 247, 255, 259, 275, 277], "featur": [2, 247, 249, 256, 257, 258, 259, 272, 276, 277], "languag": [2, 89, 135, 245, 249, 252, 259, 264], "how": [2, 3, 154, 211, 213, 242, 244, 245, 247, 249, 251, 255, 256, 258, 259, 263, 264, 265, 273, 276], "defin": [2, 8, 61, 104, 116, 126, 131, 136, 249, 252, 259, 263, 274, 275], "depend": [2, 6, 19, 30, 56, 71, 156, 158, 174, 242, 246, 251, 256, 265, 275, 277], "zo": [2, 213, 217, 242, 244, 264, 275], "seq": [2, 244, 264, 275], "fo": [2, 14, 36, 161, 162, 242, 244, 264, 268, 275], "mm": [2, 242, 244, 264, 275], "mix": [2, 39, 48, 123, 169, 204, 242, 252, 255, 258, 261, 264, 268, 275], "lagtim": [2, 157, 175, 264, 275], "transit": [2, 8, 172, 177, 242, 244, 264, 275], "peripher": [2, 8, 41, 149, 172, 213, 217, 242, 244, 264, 275], "iv": [2, 209, 244, 275], "none": [2, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 39, 43, 46, 48, 56, 61, 70, 71, 73, 77, 78, 79, 80, 81, 82, 94, 133, 137, 139, 140, 145, 146, 148, 152, 153, 154, 155, 156, 158, 165, 171, 173, 174, 184, 185, 186, 187, 196, 199, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 230, 234, 242, 244, 251, 254, 256, 258, 263, 264, 275], "null": [2, 251, 256, 258, 264, 275, 277], "yield": [2, 132, 152], "workflow": [2, 3, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 242, 255, 259, 268, 275], "want": [2, 245, 247, 256, 257, 258, 259, 263, 264, 265, 267], "desir": [2, 226, 227], "subset": [2, 67, 153], "algorithm": [2, 210, 211, 213, 217, 242, 244, 268, 275, 277], "six": 2, "below": [2, 247, 256, 258, 259, 264, 272], "detail": [2, 208, 210, 211, 212, 213, 214, 259, 264, 271, 272, 275, 276], "regard": [2, 259, 264], "subhead": 2, "distribut": [2, 18, 23, 27, 39, 41, 56, 61, 71, 111, 131, 149, 153, 154, 155, 184, 187, 212, 231, 240, 242, 244, 254, 259, 261, 264, 271, 275, 276], "term": [2, 156, 242, 256, 259, 263], "keep": [2, 14, 25, 152, 221, 242, 245, 252, 256, 259], "well": [2, 56, 249, 251, 256, 258, 259, 263, 264, 271, 272, 275, 276], "iov": [2, 27, 39, 100, 125, 146, 212, 242, 244, 271, 275], "explain": [2, 249, 259, 268, 275], "ruv": [2, 165, 244], "power": [2, 35, 173, 244, 259, 268, 269, 271, 272], "vari": [2, 128, 176, 214, 242, 244, 272], "identifi": [2, 6, 32, 249, 251, 256, 259, 271, 275], "effect": [2, 35, 37, 48, 120, 125, 142, 145, 173, 204, 210, 242, 244, 252, 255, 259, 261, 268, 273, 275, 276], "option": [2, 13, 14, 19, 25, 27, 30, 33, 35, 37, 39, 45, 70, 71, 77, 78, 80, 81, 82, 152, 173, 196, 199, 204, 208, 210, 211, 212, 213, 214, 235, 240, 242, 244, 249, 251, 256, 258, 259, 261, 264, 276, 277], "reduced_stepwis": [2, 217, 242, 264, 275], "iiv_strategi": [2, 211, 213, 242, 244, 256, 264, 275], "absorption_delai": [2, 213, 242, 264, 275], "rank_typ": [2, 204, 211, 212, 213, 244, 256, 258, 264, 275], "cutoff": [2, 176, 200, 201, 202, 204, 211, 212, 213, 242, 244, 256, 258, 264, 275], "brute_forc": [2, 211, 242, 256], "fullblock": [2, 211, 213, 242, 256, 264], "tri": [2, 244, 264], "list_of_paramet": [2, 37, 39, 212, 244, 258], "random": [2, 3, 13, 18, 19, 23, 27, 39, 48, 56, 61, 73, 113, 116, 125, 153, 154, 155, 242, 244, 252, 254, 258, 271, 276], "group": [2, 26, 32, 132, 133, 152, 214, 244, 257, 272], "p_valu": [2, 214, 244, 272], "05": [2, 41, 49, 50, 51, 52, 58, 59, 62, 63, 149, 210, 214, 240, 244, 249, 261, 262, 271, 272, 273], "skip": [2, 214, 244, 249, 272], "p_forward": [2, 210, 244, 249], "p_backward": [2, 210, 244, 249], "max_step": [2, 210, 244, 249, 277], "scm": [2, 210, 242, 249, 268, 270, 277], "forward": [2, 210, 242, 244, 249, 273, 277], "backward": [2, 210, 219, 242, 244, 249, 273], "variou": [2, 68, 217, 218, 242, 244, 245, 247, 249, 252, 256, 258, 264, 268, 272], "access": [2, 249, 251, 256, 258, 259, 261, 264, 265, 272, 275, 277], "json": [2, 10, 28, 205, 206, 220, 242, 244, 249, 251, 256, 258, 263, 264, 272, 275], "format": [2, 69, 244, 246, 249, 252, 255, 256, 257, 258, 259, 261, 263, 264, 267, 272], "summary_tool": [2, 242, 249, 256, 258, 264, 272], "candid": [2, 210, 213, 242, 244, 249, 272, 275], "compar": [2, 204, 240, 242, 249, 268, 272], "rank": [2, 204, 211, 212, 213, 242, 244, 249, 272], "modelsearch_candidate1": [2, 242, 264, 275], "base_model": [2, 204], "qp1": [2, 41, 149, 172, 242, 263], "vp1": [2, 41, 149, 172, 263], "iivsearch_no_of_etas_candidate1": [2, 256], "iivsearch_no_of_etas_candidate2": [2, 256], "add_covariate_effect": [2, 242, 249, 263], "al": 2, "dbic": [2, 242, 256, 258, 264], "45": [2, 57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 274], "985893": 2, "1901": 2, "015571": 2, "1855": 2, "029678": 2, "2331": 2, "473168": 2, "dofv": [2, 200, 201, 217, 240, 241, 242, 249, 269, 271, 272], "90": [2, 249], "lt": [2, 135, 249, 261], "fals": [2, 6, 8, 13, 14, 16, 18, 23, 25, 26, 28, 32, 34, 35, 36, 43, 55, 65, 67, 74, 75, 83, 86, 87, 88, 104, 110, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 141, 142, 152, 154, 160, 166, 167, 173, 174, 177, 178, 189, 191, 192, 193, 194, 196, 202, 219, 220, 222, 228, 234, 241, 249, 251, 261, 263, 265, 266, 273, 274], "1951": [2, 258], "789999": 2, "1891": 2, "976631": 2, "2374": 2, "377762": 2, "1931": 2, "1875": 2, "2342": 2, "2300": [2, 256, 264], "483856": 2, "25": [2, 57, 77, 80, 81, 90, 95, 97, 107, 202, 240, 241, 249, 251, 256, 260, 262, 264, 269, 271, 272, 274], "08": [2, 49, 51, 52, 59, 62, 258, 261, 262], "00": [2, 115, 254, 261, 262, 269, 271, 273, 275], "103": [2, 256], "pop_cl_estim": [2, 249, 272], "27": [2, 57, 90, 95, 107, 109, 202, 240, 241, 249, 251, 256, 258, 260, 262, 264, 272, 274], "2267": 2, "9308": 2, "30": [2, 57, 90, 95, 107, 202, 240, 241, 249, 251, 256, 258, 259, 260, 262, 264, 271, 274], "4821": 2, "pop_clwt_estim": [2, 249], "pop_matage_estim": [2, 249], "pop_matsex_estim": [2, 249], "pop_matwt_estim": [2, 249], "pop_qp1age_estim": 2, "pop_qp1sex_estim": 2, "pop_qp1wt_estim": 2, "pop_vp1age_estim": 2, "pop_vp1sex_estim": 2, "pop_vp1wt_estim": 2, "92": 2, "47": [2, 57, 90, 95, 107, 109, 202, 240, 241, 249, 251, 260, 262, 264, 271, 274], "73": [2, 109, 249, 251, 262, 272, 275, 277], "summary_error": [2, 249, 256, 258, 264], "summarize_error": [2, 242, 249, 256, 258, 264], "categori": [2, 6, 35, 39, 136, 216, 244, 249, 256, 258, 263, 264, 275], "error_no": [2, 249, 256, 258, 264], "2022": [2, 256, 258, 259, 264, 275], "16": [2, 6, 57, 78, 90, 95, 107, 174, 187, 202, 240, 241, 249, 251, 256, 259, 260, 262, 263, 269, 271, 272, 273, 274], "40": [2, 57, 90, 93, 95, 107, 109, 148, 202, 240, 241, 249, 251, 260, 262, 273, 274], "462": 2, "messag": [2, 224, 242, 244, 249, 256, 258, 264], "termin": [2, 259], "ndue": 2, "TO": [2, 259], "proxim": 2, "OF": [2, 259], "next": [2, 46, 259, 264, 265, 272], "iter": [2, 14, 15, 30, 56, 132, 152, 154, 242, 269, 272], "nat": 2, "THE": [2, 256, 258, 259], "func": [2, 228], "infinit": 2, "n0at": 2, "comput": [2, 14, 247, 249, 259], "funct": 2, "nerror": 2, "IN": [2, 259], "ncontr": 2, "WITH": [2, 256, 258, 259], "40400000000000e": 2, "03": [2, 249, 269, 271, 273], "nnumer": 2, "hessian": 2, "FOR": [2, 259], "condit": [2, 8, 16, 242, 254, 259, 261, 272], "ni": 2, "definit": [2, 13, 14, 19, 30, 57, 154, 155, 202, 242, 244, 249, 254, 259, 261, 275], "page": [3, 241, 243, 246, 247, 264, 265], "public": [3, 252], "modul": [3, 8, 242, 246, 261, 263, 267, 277], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 242, 251, 255, 259, 261, 263, 275], "relat": [3, 221, 225, 226, 242, 245, 273], "statement": [3, 4, 8, 16, 19, 24, 33, 35, 37, 38, 39, 41, 42, 68, 117, 129, 130, 131, 143, 145, 149, 150, 156, 157, 158, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 180, 181, 183, 185, 186, 187, 195, 242, 244, 249, 259, 263, 268, 276], "transform": [3, 19, 156, 158, 160, 174, 185, 186, 187, 242, 244, 255, 257, 265, 271, 276], "manipul": [3, 26, 261, 263, 265], "built": [3, 129, 244, 247, 257], "run": [3, 71, 133, 198, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 225, 229, 240, 241, 242, 250, 255, 257, 259, 260, 262, 267, 268, 271, 273, 274, 276, 277], "api_model": 3, "api_tool": 3, "packag": [3, 244, 246, 252, 255, 257, 259, 266, 268, 277], "express": [4, 5, 7, 8, 9, 10, 16, 17, 18, 23, 27, 30, 37, 53, 54, 56, 79, 91, 101, 102, 108, 112, 116, 156, 158, 173, 174, 182, 242, 244, 245, 249, 259, 263, 268, 274], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 245, 247, 257, 259, 261], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 204, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 242, 254, 256, 259, 260, 261, 263, 264, 265, 266, 271, 272, 273], "represent": [4, 16, 230, 251, 255, 261, 263, 265], "togeth": [4, 27, 157, 175, 247, 252, 254, 260, 272, 277], "sympi": [4, 6, 8, 16, 18, 23, 27, 30, 33, 56, 79, 108, 116, 252, 261, 268], "str": [4, 6, 7, 8, 10, 13, 18, 23, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 43, 48, 56, 69, 70, 74, 75, 79, 87, 89, 94, 100, 111, 113, 116, 120, 125, 129, 132, 134, 137, 138, 139, 140, 142, 145, 146, 152, 156, 158, 161, 165, 170, 171, 173, 174, 176, 184, 185, 186, 187, 190, 191, 196, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 239, 242], "expr": [4, 9, 13, 16, 23, 27, 30, 33, 108, 182, 208], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 36, 135, 140, 161, 162, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 242, 244, 249, 252, 259, 261, 263, 268, 275, 277], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30], "free": [4, 5, 6, 7, 8, 16, 17, 18, 19, 23, 27, 30, 245, 259, 268], "note": [4, 6, 25, 68, 69, 93, 105, 106, 107, 219, 220, 221, 225, 226, 240, 251, 256, 258, 262, 263, 265, 273, 277], "hand": [4, 8, 16, 56], "side": [4, 8, 16, 56, 160], "pop_cl": 4, "eta_cl": [4, 37, 39, 265], "rhs_symbol": [4, 8, 16, 29], "classmethod": [4, 5, 7, 17, 18, 23, 25, 27, 28, 222, 224], "sub": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30, 261], "substitut": [4, 5, 7, 8, 16, 17, 18, 23, 27, 29, 30, 259, 261, 263], "dict": [4, 5, 10, 13, 16, 17, 18, 23, 26, 27, 30, 45, 60, 77, 78, 80, 81, 82, 86, 88, 91, 102, 151, 166, 167, 178, 192, 221, 225, 226, 235, 251, 261], "old": [4, 30, 151, 242, 271], "new": [4, 6, 9, 10, 14, 19, 25, 26, 27, 30, 37, 39, 42, 43, 69, 70, 73, 74, 83, 86, 87, 88, 151, 152, 156, 158, 165, 166, 170, 173, 174, 191, 192, 194, 231, 244, 245, 247, 251, 259, 264, 267, 271, 272, 275, 276], "pair": [4, 5, 8, 17, 18, 23, 27, 30, 35, 66, 217], "return": [4, 6, 8, 9, 10, 15, 16, 19, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 226, 228, 231, 234, 235, 242, 259], "updat": [4, 9, 10, 19, 26, 30, 193, 194, 196, 242, 244, 247, 257, 259, 264, 265, 268, 272, 276], "b": [4, 259, 264], "amount": [5, 6, 7, 8, 16, 17, 242, 251, 261], "dose": [5, 6, 7, 8, 9, 16, 17, 40, 83, 91, 96, 97, 104, 126, 147, 176, 242, 263, 276], "amt": [5, 7, 8, 10, 16, 17, 30, 33, 41, 68, 75, 76, 90, 97, 117, 129, 130, 131, 135, 136, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 251, 261, 263, 265], "dictionari": [5, 10, 14, 17, 18, 23, 26, 27, 28, 31, 77, 78, 80, 81, 82, 91, 102, 152, 166, 167, 178, 221, 225, 226, 235, 261], "unknown": [6, 251], "unit": [6, 116], "ratio": [6, 210, 214, 242, 244, 251, 272], "datatyp": [6, 137], "float64": [6, 10, 55, 62, 63, 66, 79, 80, 81, 82, 97, 109, 251, 261, 262, 263], "descriptor": [6, 10], "colum": 6, "measur": [6, 245, 251, 259], "bool": [6, 13, 19, 25, 28, 32, 33, 35, 43, 55, 65, 67, 74, 75, 83, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 152, 154, 165, 173, 174, 177, 193, 194, 196, 197, 208, 219, 220, 222, 228, 234], "discret": [6, 251, 258], "bar": [6, 254], "panda": [6, 10, 242, 252, 268], "dtype": [6, 10, 55, 60, 62, 63, 66, 67, 79, 80, 81, 82, 96, 97, 107, 109, 251, 261, 262, 263], "nomin": [6, 251], "ordin": [6, 251], "rang": [6, 28, 275], "na": 6, "int8": 6, "sign": [6, 186, 259], "bit": 6, "128": 6, "127": [6, 256], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 251], "147": 6, "483": 6, "648": [6, 240], "647": [6, 240, 256], "int64": [6, 107, 251], "64": 6, "223": [6, 250], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "65": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 57, 78, 90, 95, 107, 202, 240, 241, 249, 251, 256, 260, 262, 269, 271, 274], "446": 6, "744": [6, 79, 96, 251, 262], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 259], "float": [6, 13, 18, 23, 25, 33, 37, 42, 43, 47, 48, 66, 148, 155, 173, 176, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 214, 242], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 76, 188, 242, 244, 261], "tran": [6, 76, 188, 242, 244, 261], "date": [6, 76, 188, 242, 259, 277], "common": [6, 35, 61, 235, 259, 263, 276], "birth": 6, "human": [6, 28, 268], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 251, 268], "concentr": [6, 93, 268], "substanc": 6, "blood": 6, "subject": [6, 14, 90, 99, 218, 259, 276], "uniqu": [6, 32, 46, 74, 152, 221, 231, 242, 244, 251, 275], "interv": [6, 251, 252], "ration": 6, "max": [6, 35, 168, 169, 240, 251], "datafram": [6, 15, 26, 28, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 77, 78, 80, 81, 82, 90, 93, 95, 132, 133, 137, 152, 153, 154, 155, 193, 200, 201, 202, 204, 216, 217, 218, 219, 224, 242, 249, 251, 268], "idv": [6, 10, 176, 251, 271], "independ": [6, 251, 259, 266, 271, 275], "dv": [6, 10, 30, 68, 75, 76, 90, 109, 117, 129, 133, 135, 136, 140, 156, 158, 168, 169, 174, 242, 251, 261, 263, 265, 274], "infus": [6, 126, 175, 180, 263], "addit": [6, 35, 37, 45, 74, 83, 118, 119, 124, 156, 158, 174, 242, 244, 249, 251, 259, 271, 272, 275], "interdos": 6, "ss": 6, "steadi": [6, 242], "state": [6, 26, 35, 242, 259, 273], "event": [6, 98, 188, 242, 245, 259], "mdv": [6, 103, 242], "miss": [6, 90, 95, 242], "yet": [6, 275], "exactli": 6, "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 165, 244, 259, 263, 268], "physic": [6, 116, 245, 251, 259], "recogn": [6, 171, 245, 259, 265], "without": [6, 9, 53, 54, 77, 78, 80, 81, 82, 101, 108, 112, 152, 223, 240, 242, 244, 247, 252, 259, 261], "static": [6, 10, 19], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 27, 28, 30, 69, 117, 131, 177, 242, 244, 275], "convert_pd_dtype_to_datatyp": 6, "deriv": [6, 10, 13, 14, 16, 18, 23, 25, 27, 116, 242, 247, 249], "kwarg": [6, 10, 13, 14, 19, 28, 36, 161, 198, 215, 226, 227, 242], "properti": [6, 14, 25, 259, 261], "is_categor": 6, "check": [6, 19, 25, 27, 65, 66, 67, 118, 119, 120, 121, 122, 123, 124, 126, 127, 228, 242, 246, 265, 275, 277], "is_numer": 6, "col1": 6, "col2": 6, "lag_tim": [7, 9], "bioavail": [7, 91, 242], "compartment": [7, 8, 16, 30, 242, 244, 261], "system": [7, 8, 9, 14, 16, 24, 30, 53, 54, 56, 77, 78, 80, 81, 82, 101, 108, 112, 126, 183, 225, 242, 244, 246, 247, 259, 261, 265, 276], "lag": [7, 9, 40, 102, 147, 242], "enter": [7, 259], "fraction": [7, 155, 240, 254], "bolu": [7, 8, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 177, 181, 183, 244, 261], "comp": [7, 8, 242], "depot": [7, 8, 9, 163, 175, 177, 242, 263, 275], "alag": [7, 242], "a_centr": [7, 8, 16, 30, 68, 117, 129, 168, 169, 174, 181, 261], "builder": [8, 9], "odesystem": [8, 16, 30, 242], "od": [8, 14, 16, 24, 30, 42, 53, 54, 56, 77, 78, 80, 81, 82, 101, 108, 112, 126, 171, 183, 242, 244, 261, 276], "descib": 8, "cb": [8, 9], "compartmentalsystembuild": 8, "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 275], "k21": [8, 275], "vector": [8, 16, 18, 153, 154, 155, 241, 254, 261], "load_example_model": [8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 242, 255, 277], "pprint": [8, 16, 108], "ode_system": [8, 16, 30, 41, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 261], "a_output": [8, 16, 30, 261], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 230, 259], "compartment_nam": [8, 16], "compartmental_matrix": [8, 261], "matrix": [8, 18, 27, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 66, 153, 154, 155, 241, 242, 244, 254, 261], "set_first_order_absorpt": [8, 42, 157, 175, 180, 242, 263], "dosing_compart": 8, "receiv": [8, 259], "output_compart": 8, "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 67, 126, 127, 131, 175, 180, 181, 242, 258, 264, 266, 275], "set_zero_order_absorpt": [8, 157, 163, 175, 242, 263, 277], "atom": 8, "http": [8, 241, 246, 251, 252, 254, 255, 259, 272], "doc": [8, 247], "org": [8, 241, 243, 246, 251, 254, 259, 272], "latest": [8, 242, 252, 255], "core": [8, 255, 261, 263], "html": [8, 72, 252, 259, 263], "basic": [8, 28, 182, 242, 246, 249, 251, 259, 265, 275, 276], "find_compart": 8, "its": [8, 25, 30, 67, 131, 194, 217, 242, 244, 246, 249, 251, 252, 255, 257, 259, 261, 277], "find_depot": 8, "out": [8, 27, 65, 194, 242, 259, 261, 267, 277], "find_transit_compart": 8, "chain": [8, 263], "singl": [8, 10, 25, 27, 184, 188, 199, 216, 219, 221, 242, 244, 252, 254, 259, 263, 275], "distinguish": [8, 259], "get_compartment_inflow": 8, "go": [8, 219, 242, 251, 259], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 196, 197, 221, 225, 226, 244], "ka": [8, 9, 16, 38, 242, 258], "get_n_connect": 8, "connect": [8, 19, 221, 223, 244, 251, 259, 268, 275, 276], "int": [8, 30, 33, 36, 45, 56, 61, 67, 73, 96, 105, 106, 144, 152, 153, 154, 155, 156, 161, 162, 172, 177, 208, 210, 211, 212, 213, 214, 216], "to_compartmental_system": [8, 16, 24, 30], "to_explicit_system": [8, 16, 24, 30, 261], "skip_output": [8, 16], "explicit": [8, 16, 30, 39, 242, 244, 245, 249, 258, 261, 275], "boolean": [8, 25, 26, 83, 87, 88, 152, 160, 165, 191, 192, 200, 201, 202, 251], "leav": [8, 263], "result": [8, 14, 19, 27, 65, 71, 72, 91, 93, 102, 130, 134, 137, 148, 198, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 225, 226, 227, 229, 231, 234, 242, 245, 247, 257, 259, 265, 267, 268, 270, 276], "explicitodesystem": [8, 24, 242, 261], "equat": [8, 16, 56, 261], "dt": [8, 16, 30, 261], "compartmentalsystem": [9, 16, 24, 242, 261], "newli": [9, 27, 258], "move_dos": 9, "move": [9, 194, 242], "anoth": [9, 19, 30, 231, 263], "remove_compart": 9, "remove_flow": 9, "set_dos": 9, "set_lag_tim": [9, 242], "force_absolute_path": 10, "sequenc": [10, 15, 26, 27, 30, 71, 210], "metadata": [10, 221, 222, 225, 226, 229, 242], "index": [10, 26, 27, 28, 30, 36, 45, 56, 61, 66, 67, 97, 109, 144, 161, 162, 216, 219, 241, 242, 249, 251, 254, 255, 261, 273, 277], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": 10, "idv_column": 10, "apgr": [10, 30, 33, 35, 68, 75, 76, 90, 95, 104, 117, 120, 129, 130, 131, 135, 136, 190, 210, 251, 254, 261, 263, 265, 271], "fa1": [10, 75, 76, 90, 135, 136, 251, 261, 263], "fa2": [10, 75, 76, 90, 135, 136, 251, 261], "replac": [10, 27, 152, 183, 242, 244, 252, 265], "example_model": 10, "dta": [10, 135, 261, 263, 265], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 242, 259, 263], "read_json": 10, "read": [10, 137, 138, 139, 140, 205, 209, 220, 221, 225, 226, 242, 246, 251, 255, 257, 259, 267, 268, 270, 275, 276], "set_column": 10, "col": 10, "exist": [10, 30, 35, 45, 46, 74, 94, 96, 221, 222, 223, 242, 244, 246, 249, 251, 258, 275], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 28, 251, 263], "recover": 12, "issu": [12, 22, 242, 247, 257, 277], "hashabl": 13, "level": [13, 18, 23, 27, 31, 32, 100, 125, 242, 244, 251, 257, 261, 263, 268, 273, 275], "variabilitylevel": 13, "parameter_nam": [13, 27, 87, 182, 189, 191, 242, 246, 263, 265], "varianc": [13, 18, 23, 27, 55, 56, 61, 165, 194, 256, 261, 263, 275], "abstract": [13, 24, 29, 225, 229, 241, 243, 252, 257, 261], "evalf": [13, 18, 23], "numericdistribut": 13, "get_covari": [13, 18, 23, 27], "name1": [13, 18, 23, 134], "name2": [13, 18, 23, 134], "get_vari": [13, 18, 23], "latex_str": [13, 18, 23], "align": [13, 18, 23, 261, 263], "cov": [14, 15, 27, 34, 35, 36, 49, 56, 57, 59, 61, 62, 141, 154, 161, 162, 241, 242, 247, 254, 263], "evalu": [14, 36, 77, 78, 79, 80, 81, 82, 161, 162, 219, 240, 242, 268, 271, 274], "maximum_evalu": 14, "laplac": [14, 36, 161, 162, 242, 244], "isampl": [14, 36, 45, 161, 242], "niter": [14, 36, 45, 161, 242], "auto": [14, 15, 242], "keep_every_nth_it": [14, 15, 242], "residu": [14, 27, 82, 114, 201, 202, 217, 242, 257, 272, 274, 275, 277], "solver": [14, 171, 242, 244], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 45, 161, 275], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 69, 226, 227, 244, 246, 247, 249, 252, 257, 259, 261, 263, 267], "let": [14, 19, 242, 249, 254, 263, 265, 275], "uncertainti": [14, 56, 57, 61, 153, 154, 155, 242, 244, 254, 262], "epsilon": [14, 27, 53, 54, 77, 78, 136, 165, 173, 179, 195, 242, 244, 252], "calcul": [14, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 79, 93, 204, 240, 241, 242, 254, 256, 257, 258, 264, 276], "eta": [14, 27, 30, 33, 35, 37, 39, 53, 54, 55, 57, 68, 71, 77, 78, 80, 101, 108, 113, 117, 129, 130, 131, 135, 136, 140, 145, 146, 153, 165, 184, 185, 186, 187, 242, 244, 249, 252, 254, 256, 258, 261, 262, 265, 271, 275, 276, 277], "preserv": [14, 27, 259], "sampl": [14, 27, 73, 152, 153, 154, 155, 254], "similar": [14, 240, 259, 264, 272, 277], "em": 14, "everi": [14, 251, 259], "nth": 14, "laplacian": 14, "solv": [14, 242], "advan": [14, 171, 242], "cvode": [14, 171, 244], "advan14": [14, 171, 244], "dgear": [14, 171, 244], "advan8": [14, 171, 244], "dverk": [14, 171, 244], "advan6": [14, 171, 244], "ida": [14, 171, 244], "advan15": [14, 171, 244], "lsoda": [14, 171, 244], "advan13": [14, 171, 244, 263], "lsodi": [14, 171, 244], "advan9": [14, 171, 244], "absolut": [14, 66, 242, 259], "toler": 14, "supported_method": 14, "ITS": [14, 36, 161, 162, 242, 244, 258, 264], "impmap": [14, 36, 161, 162, 242, 244], "imp": [14, 36, 161, 162, 242, 244], "saem": [14, 36, 161, 162, 242, 244], "bay": [14, 161, 162, 244], "to_datafram": [15, 26, 224], "overview": [15, 224, 240, 244, 253, 273], "pd": [15, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 80, 81, 82, 90, 92, 93, 95, 96, 97, 98, 103, 107, 109, 132, 133, 134, 137, 152, 153, 154, 155, 193, 194, 200, 201, 202, 204, 216, 217, 218, 219, 224, 242, 251], "estimation_step": [15, 19, 34, 36, 45, 141, 144, 161, 162, 242], "doctest": [15, 247], "ellipsi": 15, "equal": [16, 35, 39, 152, 165, 244, 247, 263], "ic": 16, "explicitli": [16, 244, 258, 259], "differenti": [16, 261], "a_depot": 16, "k": [16, 56, 241, 242, 247, 249, 254], "eq1": 16, "eq2": 16, "ordinari": [16, 261], "durat": [17, 175, 180], "mutual": [17, 258, 275], "exclus": [17, 259, 275], "d1": [17, 242], "r1": 17, "symbolc": 17, "dur": 17, "tupl": [18, 27, 132, 152, 210, 215, 235], "mutabledensematrix": 18, "joint": [18, 27, 39, 71, 184, 254, 258, 261, 276], "omega_cl": [18, 23, 27], "omega_v": [18, 27], "corr_cl_v": [18, 27], "omega_cl_v": [18, 27], "dist": [18, 23, 27, 242, 247], "iiv_cl": [18, 23, 27, 265], "iiv_v": [18, 27, 263], "itself": [18, 23, 259], "omega1": 18, "omega2": 18, "omega_new": [18, 23, 27], "dependent_vari": [19, 242], "y": [19, 26, 30, 68, 116, 117, 129, 135, 136, 140, 143, 156, 158, 165, 173, 174, 176, 195, 261, 263, 265], "discript": 19, "estimationstep": [19, 34, 36, 141, 161, 162, 242], "filename_extens": 19, "extens": [19, 221, 223, 251, 259, 261], "initial_individual_estim": 19, "model_cod": [19, 242, 263], "modelfit_result": [19, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 77, 78, 79, 80, 81, 82, 153, 154, 155, 193, 194, 202, 242, 261, 262, 263, 277], "modelfit": [19, 219, 221, 225, 226, 240, 242, 244, 276], "observation_transform": [19, 242], "parent": [19, 217, 218, 231], "random_vari": [19, 71, 184, 261, 263, 277], "randomvari": [19, 242], "value_typ": 19, "likelihood": [19, 47, 48, 210, 214, 244, 272], "2ll": [19, 47, 48, 242], "log": [19, 35, 37, 48, 131, 156, 158, 160, 174, 242, 251, 254, 263], "record": [19, 77, 78, 79, 80, 81, 82, 83, 132, 148, 242, 247, 265], "would": [19, 32, 131, 240, 249, 254, 259, 263, 265, 268, 277], "copi": [19, 39, 70, 110, 114, 115, 242, 256, 258, 259, 263, 275], "deepcopi": 19, "create_model": 19, "factori": 19, "io": [19, 247, 252, 255], "implement": [19, 221, 223, 225, 226, 258, 259, 261, 268, 275], "g": [19, 68, 74, 146, 213, 242, 247, 251, 254, 256, 258, 263, 264, 268, 272, 275, 277], "nonmem7": 19, "has_same_dataset_a": 19, "update_datainfo": 19, "msg": 21, "syntax": [21, 275], "modelfitresult": [22, 200, 201, 202, 242], "normal": [23, 27, 32, 39, 60, 64, 131, 254, 258, 259, 277], "abc": [24, 29, 225, 229], "init": [25, 26, 35, 43, 88, 166, 192, 194, 244, 254, 261], "union": [25, 30, 33, 35, 137, 173, 196, 197, 199, 208, 210, 211, 212, 213, 215, 223], "param": [25, 26, 244], "tvcl": [25, 30, 33, 37, 39, 68, 79, 117, 129, 130, 131, 135, 136, 145, 240, 254, 261, 263, 265], "005": 25, "constrain": [25, 252, 261], "unfix": [25, 86, 87, 88, 166, 189, 191, 192, 242], "back": [25, 64, 242], "previou": [25, 27, 30, 40, 71, 96, 117, 163, 175, 177, 180, 218, 234, 242, 259, 264, 276, 277], "less": 25, "greater": 25, "altern": [25, 186, 247, 259, 263], "constructor": 25, "immut": 26, "collect": [26, 27, 254, 259, 263, 275], "usual": [26, 247, 277], "wai": [26, 121, 122, 123, 127, 247, 249, 251, 259, 261, 263, 275, 277], "displai": [26, 156, 254, 259, 263], "summar": [26, 216, 218, 219, 254, 260], "par1": 26, "par2": 26, "pset": 26, "oo": [26, 43, 110, 114, 189, 261, 263], "fixed": [26, 86], "nonfix": 26, "set_fix": 26, "set_initial_estim": [26, 242], "100": [26, 35, 36, 45, 153, 161, 187, 240, 242, 244, 262, 263, 266, 273], "eta_level": 27, "variabilityhierarchi": 27, "epsilon_level": 27, "act": 27, "while": [27, 247, 263, 275, 277], "contin": 27, "hierarchi": [27, 31], "rv": [27, 71, 113, 150, 184, 261], "normaldistribut": 27, "covariance_matrix": [27, 49, 56, 59, 61, 62, 154, 240, 242, 261, 262], "nrv": 27, "variance_paramet": 27, "rv1": 27, "rv2": 27, "get_rvs_with_same_dist": 27, "join": [27, 184, 242, 245, 263], "ind": 27, "fill": 27, "name_templ": 27, "param_nam": 27, "taken": [27, 83, 90, 95, 188, 221, 251, 254], "remain": [27, 245, 259], "stai": 27, "templat": [27, 35, 37, 263], "overrid": [27, 246, 275], "dist1": 27, "dist2": 27, "_": [27, 28, 218, 241, 254], "unjoin": 27, "nearest_valid_paramet": 27, "parameter_valu": 27, "forc": [27, 74, 154, 155, 193, 196, 197, 242, 244, 258, 259], "small": 27, "parameters_sdcorr": 27, "sd": [27, 55, 263, 271, 274], "corr": [27, 51, 58, 271], "assum": [27, 221, 254, 259, 265], "var": [27, 57, 249, 254], "rng": [27, 56, 61, 73, 153, 154, 155], "jointnormaldistribut": 27, "validate_paramet": 27, "seri": [27, 51, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 79, 80, 81, 82, 92, 96, 97, 98, 103, 107, 109, 134, 154, 155, 156, 186, 194, 242, 262], "current": [27, 36, 37, 53, 54, 68, 69, 77, 78, 80, 81, 82, 101, 108, 112, 126, 129, 157, 161, 162, 175, 183, 188, 204, 210, 225, 231, 241, 242, 244, 247, 249, 250, 254, 255, 257, 258, 259, 260, 261, 263, 264, 267, 268, 269, 271, 272, 273, 274, 275, 277], "matric": [27, 57, 155, 242, 252, 262], "semidefinit": [27, 242, 252], "use_cach": 27, "symengin": [27, 252, 268], "cach": 27, "from_dict": [28, 222, 224], "get_and_reset_index": 28, "attr": 28, "wrapper": [28, 242, 247, 252, 255, 277], "reset": [28, 188, 242, 277], "facilit": 28, "multiindex": [28, 242], "to_csv": [28, 263], "save": [28, 220, 242, 263], "readabl": [28, 223, 225, 251, 259, 268], "print": [28, 65, 135, 136, 203, 242, 261, 263], "to_dict": [28, 222, 224], "lzma": [28, 220], "serial": [28, 242, 251, 268], "compress": [28, 220], "unless": [28, 30, 259], "signific": [30, 67, 211, 212, 213, 242, 259, 273], "after_od": [30, 174], "s\u2081": [30, 33, 68, 117, 129, 130, 131, 136, 174, 261], "ipr": [30, 68, 80, 117, 129, 135, 136, 173, 174, 242, 261, 262, 263, 274], "ir": [30, 68, 117, 129, 135, 136, 174, 261], "iwr": [30, 68, 117, 129, 135, 136, 174, 261], "before_od": [30, 33, 35, 130, 131, 185, 186, 187], "btime": [30, 33, 68, 117, 129, 130, 131, 135, 136, 261], "tad": [30, 33, 44, 68, 117, 129, 130, 131, 135, 136, 242, 251, 261, 271], "tvv": [30, 33, 68, 117, 129, 130, 131, 135, 136, 145, 240, 254, 261, 263, 265], "\u212f": [30, 33, 42, 68, 117, 129, 130, 131, 165, 261], "whole": [30, 244, 251, 259, 275], "s1": [30, 125, 135, 261, 263, 265], "symbol_or_stat": 30, "direct_depend": 30, "direct": [30, 230, 249, 259, 273], "find_assign": [30, 37, 38, 39, 42, 143, 145, 156, 158, 165, 173, 174, 176, 195, 263], "find_assignment_index": 30, "full_express": [30, 35, 185, 186, 187], "expand": [30, 83], "full": [30, 71, 101, 108, 112, 241, 242, 244, 254, 258, 259, 264, 271], "exp": [30, 35, 37, 135, 185, 186, 187, 210, 249, 261, 263, 265], "reassign": 30, "sypmpi": 30, "remove_symbol_definit": 30, "elsewher": 30, "longer": [30, 242], "make": [30, 68, 130, 143, 151, 152, 210, 242, 252, 258, 259, 261, 263, 264, 275, 277], "sure": [30, 151, 242, 259, 264, 277], "stat": [30, 275], "rais": [30, 152, 194, 242], "p": [33, 204, 210, 214, 240, 241, 242, 244, 249, 254, 263, 272, 273], "allometri": [33, 208, 209, 242, 275], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 45, 141, 144, 162, 242, 277], "add_estimation_step": [34, 45, 141, 144, 161, 162, 242], "remove_estimation_step": [34, 36, 45, 141, 161, 162], "append_estimation_step_opt": [34, 36, 141, 144, 161, 162, 242], "remove_covariance_step": [34, 36, 45, 144, 161, 162, 242], "set_evaluation_step": [34, 36, 45, 141, 144, 161], "liter": [35, 116, 210, 251], "lin": [35, 210], "cat": [35, 210, 249, 275], "piece_lin": [35, 210], "pow": [35, 210, 263], "allow_nest": [35, 242], "linear": [35, 240, 241, 242, 252, 261, 268, 270], "coveff": [35, 74], "median": [35, 56, 61, 240, 242, 263, 268, 274], "001": [35, 67, 194, 263, 273], "minimum": [35, 252], "000": [35, 262], "frac": [35, 156, 158, 241, 261, 263, 274], "min": [35, 156, 158, 240, 251], "piecewis": [35, 242], "hockei": 35, "stick": 35, "theta1": [35, 263], "theta2": [35, 263], "mai": [35, 256, 258, 259, 263, 264, 275], "abbrevi": [35, 37, 242, 244, 247, 265], "multipli": [35, 37, 165, 240, 244, 263], "alreadi": [35, 244, 247, 258, 259, 263], "pop_clapgr": 35, "idx": [36, 45, 144, 161, 162, 277], "argument": [36, 77, 78, 80, 81, 82, 161, 198, 215, 228, 242, 244, 263, 275, 277], "pass": [36, 73, 161, 198, 215, 231, 259], "opt": [36, 45, 161], "1000": [36, 45, 79, 161, 254], "len": [36, 45, 144, 148], "add_covariance_step": [36, 45, 141, 144, 161, 162, 242], "initial_estim": [37, 42], "09": [37, 42, 158, 165, 174, 249, 256, 263, 264, 265, 269], "eta_nam": [37, 39, 165, 244, 263], "prop": [37, 263], "logit": 37, "user": [37, 94, 242, 252, 256, 258, 259, 261, 262, 263, 264, 265], "remove_iiv": [37, 39, 42, 146, 242, 258, 263, 265], "add_pk_iiv": [37, 39, 145, 146, 242, 264], "add_iov": [37, 42, 145, 146, 242, 258, 263], "remove_iov": [37, 39, 42, 145, 242, 258, 263], "pop_ka": [38, 43], "occ": [39, 212, 244, 258], "disjoint": [39, 258], "accept": [39, 105, 106, 107, 244, 259], "add_iiv": [39, 42, 145, 146, 242, 263, 265], "set_transit_compart": [40, 147, 242, 263], "remove_lag_tim": [40, 242, 263], "parameter": 41, "qpn": 41, "vpn": 41, "volumn": 41, "mathsf": [41, 149], "cdot": [41, 149, 254, 261, 263], "qp2": [41, 149, 172, 242, 263], "vp2": [41, 149, 172, 263], "peripheral1": [41, 149, 172], "set_peripheral_compart": [41, 149, 242, 263], "remove_peripheral_compart": [41, 172, 242, 263], "Will": [42, 139, 221, 222, 223], "pop_mat": [42, 263, 265], "eta_mat": 42, "004693": [43, 60, 115, 254, 261], "1000000": [43, 86, 87, 88, 115, 166, 167, 189, 192, 261, 263], "009160": [43, 115, 261], "100000": [43, 115, 261, 263], "99": [43, 115, 135, 194, 240, 242, 261], "030963": [43, 110, 254, 261], "031128": [43, 110, 135, 254, 261, 263, 265], "013241": [43, 114, 135, 254, 261, 262, 263], "append": [45, 242], "increas": [46, 247], "until": [46, 219, 259, 277], "do": [46, 154, 240, 242, 244, 254, 259, 263, 265, 272, 277], "noth": [46, 148, 259], "run2": [46, 170, 263], "run3": 46, "n_estimated_paramet": [47, 48], "fit": [47, 48, 194, 203, 217, 219, 225, 242, 259, 261, 272, 276, 277], "variat": 48, "n_random_paramet": 48, "n_individu": 48, "n_fixed_paramet": 48, "n_observ": 48, "n_individ": 48, "n_estimated_iiv_omega_paramet": 48, "611": 48, "7071686183284": 48, "616": [48, 242, 262], "536606983396": 48, "610": 48, "7412809453149": 48, "594": 48, "431131169692": 48, "411510e": [49, 52, 59, 62, 261, 262], "010000e": [49, 52, 59, 62, 261, 262], "000002": [49, 51, 52, 59, 62, 261, 262], "000001": [49, 51, 52, 56, 59, 61, 62, 258, 261, 262, 264], "538630e": [49, 51, 52, 59, 62, 261, 262], "07": [49, 50, 51, 52, 58, 59, 62, 63, 240, 256, 258, 261, 262, 271, 273], "178090e": [49, 52, 59, 62, 261, 262], "233530e": [49, 52, 59, 62, 261, 262], "04": [49, 50, 51, 52, 58, 59, 62, 63, 240, 249, 261, 262, 271, 273], "000804": [49, 51, 52, 59, 62, 261, 262], "000050": [49, 51, 52, 59, 62, 240, 261, 262], "171840e": [49, 52, 59, 62, 261, 262], "461760e": [49, 52, 59, 62, 261, 262], "665010e": [49, 52, 59, 62, 261, 262], "06": [49, 51, 52, 59, 62, 240, 249, 256, 258, 261, 262, 271, 273, 275], "040250e": [49, 52, 59, 62, 261, 262], "007016": [49, 51, 52, 59, 62, 261, 262], "000108": [49, 51, 52, 59, 62, 261, 262], "944800e": [49, 52, 59, 62, 261, 262], "932950e": [49, 52, 59, 62, 261, 262], "093430e": [49, 52, 59, 62, 261, 262], "981380e": [49, 51, 52, 59, 62, 261, 262], "000180": [49, 51, 52, 59, 62, 261, 262], "856650e": [49, 52, 59, 62, 261, 262], "867230e": [49, 52, 59, 62, 261, 262], "000039": [49, 51, 52, 59, 62, 261, 262], "000019": [49, 51, 52, 59, 62, 261, 262], "589820e": [49, 51, 52, 59, 62, 261, 262], "685650e": [49, 52, 59, 62, 261, 262], "000029": [49, 51, 52, 59, 62, 261, 262], "000005": [49, 51, 52, 59, 62, 261, 262], "195640e": [49, 52, 59, 62, 261, 262], "007099": [49, 50, 51, 58, 262], "094640": [49, 50, 51, 58, 262], "388059": [49, 50, 51, 58, 66], "097981": [49, 50, 51, 58, 262], "170820": [49, 50, 51, 58, 262], "356899": [49, 50, 51, 58, 66], "138062": [49, 50, 51, 58, 262], "356662": [49, 50, 51, 58, 66, 262], "238441": [49, 50, 51, 58], "096515": [49, 50, 51, 58], "062991": [49, 50, 51, 58, 262], "153616": [49, 50, 51, 58, 262], "185111": [49, 50, 51, 58, 262], "159170": [49, 50, 51, 58, 262], "027495": [49, 50, 51, 58, 262], "calculate_se_from_cov": [49, 50, 51, 52, 58, 59, 63, 242], "calculate_se_from_inf": [49, 50, 51, 52, 58, 59, 62, 242], "calculate_cov_from_inf": [49, 50, 51, 58, 59, 62, 63, 242], "calculate_cov_from_corrs": [49, 50, 52, 58, 59, 62, 63, 242], "calculate_inf_from_cov": [49, 50, 51, 52, 58, 62, 63, 242], "calculate_inf_from_corrs": [49, 50, 51, 52, 59, 62, 63, 242], "calculate_corr_from_inf": [49, 51, 52, 58, 59, 62, 63, 242], "information_matrix": [50, 52, 63, 262], "inf": [50, 52, 63], "995567e": [50, 52, 59, 63], "22660": [50, 52, 58, 59, 63, 262], "028196": [50, 52, 59, 63], "16057": [50, 52, 58, 59, 63, 262], "855248": [50, 52, 59, 63], "203511": [50, 52, 58, 59, 63, 262], "614428": [50, 52, 59, 63], "39474": [50, 52, 58, 59, 63, 262], "250514": [50, 52, 59, 63], "820118": [50, 52, 59, 63], "299536": [50, 52, 59, 63], "266003e": [50, 52, 59, 63], "2129": [50, 52, 58, 59, 63, 262], "904642": [50, 52, 59, 63], "260": [50, 52, 58, 59, 63, 262], "176234": [50, 52, 59, 63], "375": [50, 52, 58, 59, 63, 262], "266233": [50, 52, 59, 63], "2800": [50, 52, 58, 59, 63, 262], "816246": [50, 52, 59, 63], "7718": [50, 52, 58, 59, 63, 262], "769557": [50, 52, 59, 63], "605786e": [50, 52, 59, 63], "187": [50, 52, 58, 59, 63, 262], "038903": [50, 52, 59, 63], "177": [50, 52, 58, 59, 63, 242, 262, 273], "207683": [50, 52, 59, 63], "205": [50, 52, 58, 59, 63, 262], "808480": [50, 52, 59, 63], "2225": [50, 52, 58, 59, 63, 262, 263], "150449": [50, 52, 59, 63], "035116e": [50, 52, 59, 63], "7527": [50, 52, 58, 59, 63, 262], "530027": [50, 52, 59, 63], "2462": [50, 52, 58, 59, 63, 262], "974821": [50, 52, 59, 63], "9977": [50, 52, 58, 59, 63, 262], "488860": [50, 52, 59, 63], "947425e": [50, 52, 59, 63], "22343": [50, 52, 58, 59, 63, 262], "198618": [50, 52, 59, 63], "9370": [50, 52, 58, 59, 63, 262], "758371": [50, 52, 59, 63], "201183e": [50, 52, 59, 63], "249847": [50, 52, 59, 63, 262], "177845": [50, 52, 59, 63], "calculate_corr_from_cov": [50, 51, 52, 58, 59, 62, 63, 242], "se": [51, 58, 248, 261, 262], "correlation_matrix": [51, 58, 66, 262], "standard_error": [51, 58, 261, 262], "411512e": 51, "009998e": 51, "178111e": 51, "233518e": 51, "171834e": 51, "461762e": 51, "665011e": 51, "040245e": 51, "944801e": 51, "932957e": 51, "093431e": 51, "856651e": 51, "867245e": 51, "685661e": 51, "195664e": 51, "gradient": [53, 54, 77, 78, 242], "pheno_linear": [53, 54, 77, 78, 80, 81, 82, 101, 108, 112, 129, 204], "d_eps1": [53, 108], "d_epseta1_1": [53, 108], "oeta1": [53, 101, 112], "d_epseta1_2": [53, 108], "oeta2": [53, 101, 112], "calculate_eta_gradient_express": [53, 242], "d_eta1": [54, 101, 108, 112], "d_eta2": [54, 101, 108, 112], "calculate_epsilon_gradient_express": [54, 242], "parameter_estim": [55, 56, 57, 61, 67, 79, 81, 82, 154, 155, 194, 240, 242, 261, 262, 263], "individual_estim": [55, 71, 77, 78, 80, 153, 193, 242, 262, 263], "shrinkag": [55, 57, 276], "deviat": [55, 195, 240, 254, 260, 262, 271, 274], "pe": [55, 56, 57, 61, 79, 81, 154, 155, 263], "ie": [55, 153, 193, 263], "720481": 55, "240295": 55, "471305": 55, "128389": 55, "calculate_individual_shrinkag": [55, 242], "expr_or_expr": 56, "expect": [56, 61, 245, 259, 271], "arbitrari": [56, 61], "solut": [56, 183], "th": [56, 241, 254], "95": [56, 240, 254], "percentil": [56, 240, 254], "previous": [56, 61, 133, 194, 242, 265, 277], "interest": [56, 245, 259, 263, 268], "seed": [56, 61, 73, 153, 155, 244], "create_rng": [56, 61, 153, 154, 155], "stderr": [56, 61, 240, 275], "p5": [56, 61, 254], "004234": [56, 61], "001138": [56, 61], "004907": [56, 61], "001247": [56, 61], "p95": [56, 61, 254], "individual_estimates_covari": [57, 153, 242, 262], "ieta_shr": 57, "847789": 57, "256473": 57, "796643": 57, "210669": 57, "755025": 57, "226957": 57, "764541": 57, "216405": 57, "816192": 57, "203974": 57, "778108": 57, "210992": 57, "659420": 57, "236875": 57, "668551": 57, "240097": 57, "260056": 57, "200374": 57, "725190": 57, "226563": 57, "972110": 57, "421852": 57, "249640": 57, "254119": 57, "730294": 57, "364932": 57, "165785": 57, "194464": 57, "15": [57, 78, 90, 95, 107, 202, 240, 241, 249, 251, 256, 258, 259, 260, 262, 263, 273, 274], "813399": 57, "313554": 57, "797328": 57, "213211": 57, "17": [57, 77, 78, 80, 81, 90, 93, 95, 107, 109, 202, 240, 241, 249, 251, 256, 258, 259, 260, 262, 263, 264, 269, 271, 274], "769059": 57, "278079": 57, "098506": 57, "176778": 57, "749022": 57, "235386": 57, "742181": 57, "222932": 57, "21": [57, 77, 80, 90, 95, 107, 202, 240, 241, 249, 251, 254, 260, 262, 269, 271, 274], "317956": 57, "264473": 57, "943950": 57, "232732": 57, "707183": 57, "259077": 57, "553787": 57, "247717": 57, "826349": 57, "114302": 57, "26": [57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 271, 273, 274], "854777": 57, "341384": 57, "820829": 57, "263235": 57, "28": [57, 77, 80, 81, 90, 95, 107, 202, 240, 241, 249, 251, 256, 259, 260, 262, 271, 274], "999942": 57, "319986": 57, "29": [57, 77, 80, 81, 90, 95, 107, 186, 202, 240, 241, 243, 249, 251, 256, 259, 260, 262, 271, 274], "967084": 57, "432760": 57, "404773": 57, "325215": 57, "31": [57, 77, 80, 90, 95, 107, 109, 202, 240, 241, 249, 251, 260, 262, 269, 271, 274, 275], "999980": 57, "318421": 57, "925283": 57, "167667": 57, "33": [57, 90, 95, 107, 109, 202, 240, 241, 249, 251, 260, 262, 264, 273, 274], "913706": 57, "242106": 57, "34": [57, 81, 90, 95, 107, 109, 202, 240, 241, 249, 251, 260, 262, 269, 271, 274], "875554": 57, "249197": 57, "35": [57, 90, 95, 107, 202, 240, 241, 249, 251, 258, 260, 262, 272, 274], "849135": 57, "294294": 57, "36": [57, 90, 95, 107, 202, 240, 241, 249, 251, 256, 258, 260, 262, 264, 271, 274], "172206": 57, "246422": 57, "37": [57, 90, 95, 97, 107, 202, 240, 241, 249, 251, 258, 260, 262, 274], "747380": 57, "278340": 57, "38": [57, 77, 80, 90, 95, 107, 202, 240, 241, 251, 260, 262, 274], "187440": 57, "231249": 57, "39": [57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 271, 272, 273, 274], "237805": 57, "254485": 57, "999925": 57, "189793": 57, "41": [57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 271, 274], "941906": 57, "170998": 57, "42": [57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 264, 273, 274], "923801": 57, "244046": 57, "43": [57, 90, 95, 107, 202, 240, 241, 249, 251, 258, 260, 262, 273, 274], "999928": 57, "320403": 57, "44": [57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 274], "237637": 57, "260453": 57, "869540": 57, "194503": 57, "46": [57, 90, 95, 107, 202, 240, 241, 249, 251, 260, 262, 274], "999949": 57, "319750": 57, "983782": 57, "393234": 57, "48": [57, 90, 95, 97, 107, 202, 240, 241, 249, 251, 258, 260, 262, 272, 273, 274], "698267": 57, "169337": 57, "49": [57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 274], "776674": 57, "214962": 57, "50": [57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 264, 271, 274], "688847": 57, "192608": 57, "51": [57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 274, 275], "822213": 57, "202534": 57, "52": [57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 264, 273, 274], "511489": 57, "273601": 57, "53": [57, 90, 95, 107, 202, 240, 241, 251, 260, 262, 269, 271, 274], "964757": 57, "223448": 57, "762153": 57, "181648": 57, "965657": 57, "435741": 57, "995278": 57, "354798": 57, "813382": 57, "263372": 57, "727295": 57, "232867": 57, "738777": 57, "224742": 57, "calculate_eta_shrinkag": [57, 242, 263], "995565e": 58, "041788": 58, "848052": 58, "410335": 58, "240358": 58, "820116": [58, 262], "179011": 58, "266004e": 58, "908225": 58, "176399": 58, "266263": 58, "818557": 58, "757955": 58, "605785e": 58, "038825": 58, "207512": 58, "808434": 58, "144772": 58, "035114e": 58, "518562": 58, "972906": 58, "457873": 58, "947424e": 58, "197906": 58, "736254": 58, "201162e": 58, "249846": 58, "006431": 58, "ucp": [60, 64], "ucpscal": [60, 64], "calculate_ucp_scal": [60, 242], "00916": [60, 135, 194, 254, 261, 263, 265], "0309626": [60, 135, 194, 261, 263, 265], "031127999999999996": 60, "013241000000000001": 60, "convers": [60, 242], "pharmacokinet": [61, 251], "pre": 61, "k_e": 61, "calculate_individual_parameter_statist": [61, 242, 263], "000210": [62, 63, 261, 262], "026895": [62, 63, 261, 262], "083762": [62, 63, 261, 262], "013415": [62, 63, 261, 262], "007477": [62, 63, 261, 262], "002279": [62, 63, 261, 262], "unconstrain": 64, "calculate_parameters_from_ucp": [64, 242], "verbos": 65, "consist": [65, 249, 259, 275], "across": [65, 242, 259], "consol": 65, "els": [65, 228, 242, 263], "fail": [65, 242, 259, 268], "cor": [66, 247], "highli": 66, "high": [66, 251, 252, 268], "zero_limit": 67, "significant_digit": [67, 242], "close": [67, 194, 242, 254, 259, 260], "distanc": [67, 274], "logic": 67, "cleanup": 68, "what": [68, 259, 265, 268], "inlin": 68, "clean": 68, "might": [68, 259, 263, 268, 275, 277], "certain": [68, 132, 242, 258, 259, 263, 267, 275], "requir": [68, 242, 244, 249, 255, 259, 271], "to_format": 69, "inplac": 69, "nlmixr": [69, 247, 257], "underli": [69, 89, 135, 261], "converted_model": 69, "model_copi": 70, "pheno2": [70, 277], "block": [71, 145, 173, 242, 244, 254, 256, 263, 264, 271, 275], "iiv_cl_iiv_v": [71, 184], "split_joint_distribut": [71, 242, 263], "report": [72, 242, 247, 257, 268], "through": [73, 244, 245, 246, 249, 259, 261, 275], "numpi": [73, 251, 252, 261], "standard_norm": 73, "5532605888887387": 73, "stem": 74, "force_numb": 74, "coveff1": 74, "temp": 74, "temp1": 74, "cl1": 74, "column_nam": [75, 190], "mark": [75, 76, 83, 190, 244, 259], "drop_dropped_column": [75, 190, 242], "undrop_column": [75, 242], "undrop": [75, 190], "drop_column": [76, 190, 242], "them": [76, 152, 245, 256, 258, 259, 264, 265, 272, 275], "dy": 77, "dep": 77, "771084": [77, 80], "881859": [77, 80], "441728": [77, 80], "113050": [77, 80], "783055": [77, 80], "150": [77, 78, 80, 81, 82, 262], "375041": [77, 80], "151": [77, 78, 80, 81, 82], "833395": [77, 80], "152": [77, 78, 80, 81, 82], "876707": [77, 80], "153": [77, 78, 80, 81, 82, 250], "905095": [77, 80], "154": [77, 78, 80, 81, 82], "099690": [77, 80], "155": [77, 78, 80, 81, 82, 106, 109, 251, 262], "evaluate_eta_gradi": [77, 242], "df": [78, 218, 242, 251, 269, 271], "deta": 78, "159537": 78, "609116": 78, "325893": 78, "562289": 78, "104417": 78, "346161": 78, "452951": 78, "682310": 78, "838840": 78, "981836": 78, "424423": 78, "973013": 78, "497185": 78, "344797": 78, "198714": 78, "697161": 78, "987731": 78, "941806": 78, "817067": 78, "309945": 78, "evaluate_epsilon_gradi": [78, 242], "573770": 79, "739": [79, 96, 251], "165105": 79, "741": [79, 96, 240, 251], "742": [79, 96, 240, 251], "743": [79, 96, 251], "evaluate_population_predict": [80, 242], "529739": 81, "179910": [81, 260], "688648": 81, "798916": 81, "023225": 81, "459036": 81, "223295": 81, "217288": 81, "472888": 81, "226455": 81, "evaluate_individual_predict": [81, 242], "wre": [82, 242], "313859": 82, "675721": 82, "544240": 82, "921720": 82, "517677": 82, "223935": 82, "053334": 82, "007023": 82, "931252": 82, "778389": 82, "flag": [83, 242, 274, 275], "origin": [83, 196, 240, 241, 245, 247, 254, 259, 274], "care": [83, 221], "00469307": [86, 87, 88, 135, 167, 178, 189, 194, 261, 263, 265], "fix_paramet": [86, 88, 191, 192, 263], "unfix_paramat": [86, 87, 88, 192], "fix_paramaters_to": [86, 192], "unfix_paramaters_to": [86, 87, 88, 166, 191], "fix_or_unfix_paramet": [87, 88, 191, 192], "fix_parameters_to": [87, 166, 191, 263], "baselin": [90, 95, 128, 242, 254], "60": [90, 251, 259, 269], "63": [90, 109, 251, 262, 271], "present": [92, 98, 244, 251, 254, 259, 275], "extract": [92, 98, 242, 244, 257], "directli": [93, 221, 225, 226, 242, 244, 251, 252, 259, 261, 263, 268, 275], "cmax": [93, 242, 251], "tmax": [93, 242, 251], "cmin": [93, 242, 251], "tmin": [93, 242, 251], "doseid": [93, 96, 251], "589": [93, 97, 251], "config": [94, 242, 247, 266], "get_baselin": [95, 242], "set_covari": 95, "period": [96, 251], "96": [97, 187, 240, 251, 263, 264], "108": [97, 251, 262], "120": [97, 251, 262], "132": [97, 249, 251, 262], "144": [97, 249, 251, 262, 273], "retriev": [99, 100, 105, 106, 111, 113, 206, 207, 221, 225, 226, 242, 261, 262, 263, 276], "get_pk_paramet": [100, 113, 242], "get_rv_paramet": [100, 111, 125, 242], "has_random_effect": [100, 113, 242], "opr": [101, 108, 112], "get_population_prediction_express": [101, 242], "epress": [101, 112], "item": [104, 246, 249, 259], "activ": [105, 106, 107, 259], "ignor": [105, 106, 107, 135, 242, 244, 261, 263, 265], "get_number_of_observ": [105, 109, 242, 251], "get_number_of_observations_per_individu": [105, 106, 109, 242], "total": [106, 242, 251], "get_number_of_individu": [106, 107, 242, 251], "observation_count": 107, "accord": [108, 242, 259, 264, 275], "oeta\u2082": 108, "oeta\u2081": 108, "112": [109, 249, 251, 256, 258, 262, 264, 271, 272], "135": [109, 251, 262, 263, 271], "131": [109, 249, 251, 262], "146": [109, 251, 258, 262], "get_theta": [110, 114, 242], "get_sigma": [110, 115, 242], "get_individual_paramet": [111, 113, 125, 242], "get_individual_prediction_express": [112, 242], "get_omega": [114, 115, 242], "structur": [115, 209, 223, 242, 244, 251, 257, 258, 261, 263, 264, 275, 277], "olumn": 116, "milligram": [116, 251], "kilogram": [116, 251], "named_subscript": 117, "greek": 117, "subscript": 117, "cleanup_model": [117, 242], "\u03b8\u2081": 117, "\u03b8\u2082": 117, "\u03b8\u2083": 117, "\u03b7\u2081": 117, "\u03b7\u2082": 117, "\u03b5\u2081": 117, "has_proportional_error_model": [118, 119, 242], "has_combined_error_model": [118, 124, 242], "proportin": [119, 263], "has_additive_error_model": [119, 124, 242], "instanc": [120, 142, 249, 275], "reli": [121, 122, 123, 127, 259], "heurist": [121, 122, 123, 127], "abl": [121, 122, 123, 127, 242, 255, 257, 263, 267, 268], "detect": [121, 122, 123, 127, 242, 255, 261, 267], "micha": [122, 123, 168, 169, 244, 275], "menten": [122, 123, 168, 169, 244, 275], "set_michaelis_menten_elimin": [122, 164, 169, 181, 242, 263], "michali": 123, "set_mixed_mm_fo_elimin": [123, 263], "set_zero_order_elimin": [127, 164, 168, 169, 242, 263], "get_covariate_baselin": [128, 242], "load": 129, "statment": 130, "mu": [131, 254], "referenc": [131, 263], "theta_1": 131, "eta_1": [131, 254], "mu_1": [131, 254], "\u03bc\u2081": 131, "\u03bc\u2082": 131, "dataset_or_model": [132, 152], "name_pattern": [132, 152], "omitted_": 132, "omiss": 132, "omit": [132, 244, 249, 263], "placehold": [132, 152], "plot": [133, 134, 242, 254, 260, 268], "alt": [133, 134, 240, 254, 260], "chart": [133, 134, 240], "iofv1": 134, "iofv2": 134, "against": [134, 259], "iofv": [134, 218, 240, 242, 260, 262, 274], "scatterplot": 134, "problem": [135, 140, 242, 256, 258, 259, 260, 261, 263, 265], "subroutin": [135, 242, 259, 261, 263, 265], "advan1": [135, 261, 263, 265], "trans2": [135, 261, 263, 265], "IF": [135, 242, 259, 261, 263], "gt": [135, 249, 261], "ptvcl": [135, 182, 261], "ptvv": [135, 261], "ivcl": [135, 240, 254, 261, 263, 265], "ivv": [135, 240, 254, 261, 263], "uncondit": [135, 261], "cwre": [135, 217, 218, 261, 262, 271, 272], "npde": [135, 261], "noappend": [135, 261], "noprint": [135, 261], "onehead": [135, 261], "home": [138, 242, 261], "run1": [138, 139, 207], "mod": [138, 221, 223, 242, 244, 251, 261, 262, 263, 275], "read_model_from_databas": [138, 140, 242], "databas": [138, 139, 140, 221, 222, 223, 225, 226, 227, 229, 234, 239, 242], "read_model_from_str": [138, 139, 242, 263], "lookup": 139, "err": [140, 263], "has_covariate_effect": [142, 242], "unrun": 143, "to_remov": [145, 146, 244], "eta_iov_1_1": [146, 258], "add_lag_tim": [147, 177, 242, 263], "uloq": 148, "736": 148, "add_peripheral_compart": [149, 172, 242, 263], "new_nam": [151, 170], "renam": [151, 242], "clash": [151, 221, 223], "occur": [151, 256, 258, 259, 277], "resampl": 152, "stratifi": [152, 244], "sample_s": [152, 244], "resample_": 152, "randomli": [152, 155], "renumb": [152, 244], "upward": 152, "stratif": [152, 244], "determin": [152, 256, 258, 259, 264], "valueerror": 152, "strata": 152, "suppli": [152, 256, 258, 264, 271], "control": [152, 247, 258, 259, 261], "pattern": [152, 259], "samples_per_id": 153, "pool": [153, 256], "iec": 153, "127941": 153, "037273": 153, "065492": 153, "182851": 153, "263323": 153, "265849": 153, "295883": 153, "060346": 153, "012108": 153, "219967": 153, "034279": 153, "040988": 153, "187879": 153, "143184": 153, "088845": 153, "034655": 153, "187779": 153, "014214": 153, "019953": 153, "151151": 153, "sample_parameters_from_covariance_matrix": [153, 155, 242], "sample_parameters_uniformli": [153, 154, 242], "uniform": [153, 154, 155], "force_posdef_sampl": [154, 155, 244], "force_posdef_covmatrix": [154, 244], "mani": [154, 242, 263], "never": [154, 264], "005069": 154, "974989": 154, "204629": 154, "024756": 154, "012088": 154, "012943": 154, "004690": 154, "958431": 154, "233231": 154, "038866": 154, "029000": 154, "012516": 154, "004902": 154, "950778": 154, "128388": 154, "019020": 154, "023866": 154, "013413": 154, "sample_individual_estim": [154, 155, 242], "estiat": [154, 155], "reject": 155, "004878": 155, "908216": 155, "149441": 155, "029179": 155, "025472": 155, "012947": 155, "004828": 155, "014444": 155, "149958": 155, "028853": 155, "027653": 155, "013348": 155, "004347": 155, "053837": 155, "165804": 155, "028465": 155, "026798": 155, "013727": 155, "data_tran": [156, 158, 174, 242, 263], "series_term": 156, "\u00b2": [156, 158], "epsilon_1": [156, 158, 174], "expans": [156, 263], "approxim": [156, 259], "\u03b5\u2090": [156, 158, 263], "set_proportional_error_model": [156, 158, 242, 263], "set_combined_error_model": [156, 174, 242, 263, 272], "epsilon_2": 158, "remove_error_model": [158, 174, 242, 263], "\u03b5\u209a": [158, 174, 263], "set_additive_error_model": [158, 174, 242, 263], "fix_to_log": 160, "dynam": [160, 231, 259], "lambda": [160, 185, 186, 269, 271], "zeta": [160, 269, 271], "emul": 160, "set_bolus_order_absorpt": [163, 175, 180], "list_of_ep": [165, 173], "same_eta": [165, 244], "chosen": [165, 242, 256, 263, 275], "eta_rv1": 165, "set_power_on_ruv": [165, 242, 263, 272], "set_upper_bound": [167, 189], "unconstrain_paramet": [167, 178, 191], "constraint": [167, 178, 182, 189, 191, 242, 252, 268], "clmm": [168, 169, 181, 263], "km": [168, 169, 181, 263], "set_first_order_elimin": [168, 169, 181, 242, 263], "prefer": [171, 259], "peripheral2": 172, "lower_limit": 173, "zero_protect": [173, 174, 242], "autodetect": 173, "protect": [173, 174, 242, 259], "power\u2081": 173, "set_iiv_on_ruv": [173, 242, 263, 272], "225e": 174, "ipredadj": 174, "sequenti": [175, 242, 244, 264, 275], "mdt": [175, 177, 242, 263], "quantil": [176, 240, 242], "time_vari": [176, 271, 272], "keep_depot": [177, 242], "transit1": [177, 263], "transit2": [177, 263], "transit3": [177, 263], "set_lower_bound": [178, 189], "use_thetas_for_error_stdev": [179, 242, 263], "smallest": [181, 251], "simplifi": [182, 242, 243, 249, 252, 268], "plugin": [182, 246, 247, 252, 253, 255, 276], "conf": [182, 246], "comment": [182, 242, 246, 265], "ab": [182, 186, 244, 263], "analyt": 183, "becom": [184, 244, 268], "create_joint_distribut": [184, 242, 263], "list_of_eta": [185, 186, 187], "boxcox": [185, 242], "lambda1": [185, 186, 263], "transform_etas_tdist": [185, 186, 242, 263], "transform_etas_john_drap": [185, 187, 242, 263], "john": [186, 242, 244], "draper": [186, 242, 244], "spelect": 186, "1980": 186, "famili": [186, 259], "journal": [186, 272], "royal": 186, "societi": 186, "190": 186, "197": 186, "doi": [186, 254, 272], "2307": 186, "2986305": 186, "transform_etas_boxcox": [186, 187, 242, 263], "degre": [187, 271], "freedom": [187, 259, 271], "80": [187, 262, 263, 271, 272], "df1": [187, 263], "translat": [188, 242], "hour": [188, 251], "caution": 188, "account": 188, "unfix_paramet": [189, 242, 263], "had": [193, 259], "move_est_close_to_bound": 194, "00469555": 194, "984258": [194, 261, 262], "15892": 194, "0293508": [194, 261], "sd_ep": [195, 263], "set_weighted_error_model": [195, 242, 263], "write": [196, 197, 220, 242, 247, 259, 267, 276], "whose": [196, 259], "suffix": 196, "overwrit": [196, 197], "newdataset": 196, "recalcul": 198, "frem_dir1": 198, "read_result": [198, 206, 242, 275], "model_or_model": 199, "run_tool": [199, 209, 217, 242], "84": [200, 201, 218, 256, 258, 264, 273], "machin": [200, 201, 202, 221, 225, 226, 251, 255, 259], "learn": [200, 201, 202, 255], "threshold": [200, 201, 202, 244, 249], "signal": [200, 201, 260], "raw": [200, 201, 202, 218, 240, 242, 251], "delta": [200, 240, 242, 260], "tell": [200, 202, 259], "predict_influential_outli": [200, 202, 242], "predict_outli": [200, 201, 242], "outlier_cutoff": 201, "influential_cutoff": 201, "singal": [201, 202], "influential_outli": 201, "predict_influential_individu": [201, 202, 242], "simev": [202, 242, 270], "281443": 202, "057392": 202, "119105": 202, "846849": 202, "600540": 202, "014008": 202, "750734": 202, "247175": 202, "117002": 202, "835389": 202, "529582": 202, "035670": 202, "292333": 202, "303278": 202, "565949": 202, "078192": 202, "291295": 202, "466421": 202, "402343": 202, "699996": 202, "567987": 202, "526776": 202, "303918": 202, "177588": 202, "272142": 202, "390000": 202, "775876": 202, "501528": 202, "700951": 202, "352599": 202, "294196": 202, "744014": 202, "215364": [202, 273], "208691": 202, "713130": 202, "300293": 202, "810736": 202, "459877": 202, "675125": 202, "563835": 202, "526945": 202, "449199": 202, "720714": 202, "792248": 202, "860923": 202, "731858": 202, "247131": 202, "894190": 202, "282737": 202, "153398": 202, "200546": 202, "902774": 202, "586427": 202, "183329": 202, "036930": 202, "639868": 202, "765279": 202, "209665": 202, "225693": 202, "errors_allow": [204, 242], "bic_typ": 204, "rounding_error": 204, "maxevals_exceed": 204, "lrt": 204, "denot": [204, 254, 263], "model_1": [204, 254], "model_2": [204, 254], "create_result": [205, 242, 263], "retrieve_model": [206, 221, 225, 226, 242, 275], "tooldatabas": [207, 222, 227, 231, 234], "modeldatabas": [207, 221, 223, 229], "tooldir_path": 207, "retrieve_final_model": [207, 242], "allometryresult": 208, "amd": [209, 242, 275], "search": [209, 210, 213, 242, 244, 249, 258, 268, 275], "runord": [209, 244], "compon": [209, 244, 252, 255, 259, 271], "run_iiv": [209, 242], "try": [210, 244, 249, 268, 277], "sentenc": [210, 249], "compact": [210, 249], "covsearchresult": 210, "no_add": [211, 213, 242, 256, 264], "iivsearch": [211, 242, 275], "brute_force_no_of_eta": [211, 256], "brute_force_block_structur": [211, 256], "strategi": [211, 213, 242, 256, 264], "add_diagon": [211, 213, 242, 256, 264], "iivsearchresult": 211, "iovsearch": [212, 242, 275], "iovsearchresult": 212, "exhaust": [213, 242], "modelsearchresult": 213, "bin": [214, 271, 277], "attempt": [214, 249, 259], "ruvsearchresult": 214, "arg": 215, "kei": [217, 225, 259, 272], "mathrm": [218, 274], "veebar": 218, "least": [218, 259, 275], "outli": [218, 274], "criteria": [218, 242, 244, 256, 258, 264, 272], "include_all_estimation_step": 219, "runtim": [219, 242], "wasn": 219, "estmat": 219, "586": [219, 260, 262], "276056": [219, 260], "again": [220, 263, 277], "Not": [220, 251, 259], "applic": [220, 234, 259, 268, 275], "file_extens": [221, 223], "nontransactionalmodeldatabas": [221, 226], "local": [221, 222, 223, 225, 226, 227, 229, 247, 256, 259], "store": [221, 222, 223, 225, 226, 227, 229, 242, 265, 275], "modelnam": 221, "overwritten": 221, "recommend": [221, 277], "localmodeldirectorydatabas": 221, "retrieve_fil": [221, 225, 226], "filesystem": [221, 225, 226], "model_nam": [221, 223, 225, 226, 254], "retrieve_local_fil": [221, 225, 226], "destination_path": [221, 225, 226], "retrieve_modelfit_result": [221, 225, 226], "store_local_fil": [221, 222, 225, 226, 227, 229], "new_filenam": 221, "store_metadata": [221, 222, 225, 226], "store_model": [221, 225, 226], "store_modelfit_result": [221, 225, 226], "toolnam": [222, 227, 229, 275], "exist_ok": 222, "read_metadata": 222, "source_path": [222, 227, 229], "store_result": [222, 227, 229], "transactionalmodeldatabas": 223, "subdirectori": [223, 275], "list_model": 223, "snapshot": [223, 225], "context": [223, 225, 259, 268], "transact": [223, 225, 259], "writabl": [223, 225], "timestamp": 224, "log_error": 224, "log_warn": 224, "baseclass": 225, "primari": 225, "center": 225, "around": [225, 245], "belong": [225, 277], "contextmanag": 225, "modelsnapshot": 225, "modeltransact": 225, "dummi": [226, 227], "anyth": [226, 227, 247, 256, 259], "task_input": 228, "has_input": 228, "model_databas": 229, "task": [230, 263, 267, 268], "acycl": 230, "graph": [230, 244, 247], "node": [230, 231], "edg": 230, "wf": 231, "unique_nam": 231, "db": 231, "dask": [231, 242, 268], "whatev": [231, 259], "alia": [232, 233], "localdirectorydatabas": [232, 239], "localdirectorytooldatabas": [233, 239, 275], "dispatch": [234, 239, 242, 275], "resum": [234, 275], "execut": [234, 242, 259], "executiondispatch": 234, "default_dispatch": 239, "local_dask": [239, 275], "default_model_databas": 239, "default_tool_databas": 239, "psn": [240, 241, 242, 244, 250, 254, 260, 269, 271, 273, 274, 275, 276], "parameter_statist": 240, "bia": [240, 242], "rse": [240, 262], "divid": [240, 244, 265], "005856": 240, "005820": 240, "000038": 240, "000487": 240, "083167": 240, "455435": 240, "443165": 240, "009885": 240, "099305": 240, "068231": 240, "141376": 240, "109797": 240, "030323": 240, "114986": 240, "813337": 240, "195880": 240, "195844": 240, "005646": 240, "046548": 240, "237634": 240, "015546": 240, "015112": 240, "000872": 240, "003434": 240, "220871": 240, "parameter_distribut": 240, "lowest": [240, 254], "highest": [240, 254, 265], "interpol": 240, "fall": [240, 242], "x_0": 240, "x_1": 240, "np": [240, 251, 261], "004762": 240, "004767": 240, "004805": 240, "004974": 240, "005120": 240, "211220": 240, "214364": 240, "242657": 240, "290449": 240, "307106": 240, "000011": 240, "012961": 240, "100104": 240, "100376": 240, "102825": 240, "116900": 240, "125456": 240, "007812": 240, "007857": 240, "008261": 240, "009741": 240, "011116": 240, "97": 240, "006669": 240, "006685": 240, "007429": 240, "007593": 240, "007612": 240, "613679": 240, "646879": 240, "726604": 240, "730551": 240, "730990": 240, "338957": 240, "371005": 240, "536153": 240, "545316": 240, "546334": 240, "281203": 240, "300874": 240, "306057": 240, "306101": 240, "306106": 240, "021677": 240, "023708": 240, "025429": 240, "026581": 240, "026710": 240, "parameter_estimates_histogram": 240, "histogram": [240, 242], "repeatchart": 240, "005298": 240, "30730": 240, "074931": 240, "136423": 240, "011374": 240, "006048": 240, "38692": 240, "029844": 240, "189763": 240, "019143": 240, "005624": 240, "53224": 240, "118806": 240, "219550": 240, "019831": 240, "005771": 240, "40115": 240, "034322": 240, "150905": 240, "012287": 240, "005933": 240, "42119": 240, "074050": 240, "171158": 240, "017394": 240, "005275": 240, "59087": 240, "289793": 240, "248009": 240, "016396": 240, "005847": 240, "44711": 240, "109860": 240, "206296": 240, "016346": 240, "005939": 240, "52688": 240, "040057": 240, "210552": 240, "013631": 240, "98": [240, 254, 256], "005998": 240, "41948": 240, "192046": 240, "175269": 240, "013485": 240, "005479": 240, "43956": 240, "109733": 240, "197253": 240, "011771": 240, "ofv_statist": 240, "bootstrap_bootdata_ofv": 240, "original_bootdata_ofv": 240, "sum": [240, 250], "bootstrap_origdata_ofv": 240, "boostrap": 240, "original_origdata_ofv": 240, "delta_bootdata": 240, "delta_origdata": 240, "722": 240, "220925": 240, "386171": 240, "134966": 240, "245796": 240, "929008": 240, "620085": 240, "523805": 240, "737": 240, "632473": 240, "951710": 240, "024871": 240, "110934": 240, "218525": 240, "629078": 240, "737746": 240, "ofv_distribut": 240, "parameter_distriut": 240, "601": 240, "007583": 240, "602": 240, "266529": 240, "613": 240, "597036": 240, "641": 240, "950291": 240, "621": 240, "273905": 240, "622": 240, "073513": 240, "629": 240, "269987": 240, "806391": 240, "915431": 240, "955989": 240, "731": 240, "321004": 240, "879050": 240, "021463": 240, "059207": 240, "398901": 240, "299364": 240, "020705": 240, "061262": 240, "426277": 240, "984323": 240, "879224": 240, "788": 240, "101562": 240, "803": 240, "869362": 240, "661": 240, "714778": 240, "800": [240, 262], "121734": 240, "810": [240, 262], "417314": 240, "732": 240, "165644": 240, "757": 240, "877092": 240, "369737": 240, "671690": 240, "375800": 240, "162811": 240, "270917": 240, "982365": 240, "475010": 240, "828": 240, "178008": 240, "839": 240, "691272": 240, "840": 240, "970524": 240, "836": 240, "395339": 240, "846": 240, "981350": 240, "848": 240, "157573": 240, "859": 240, "964343": 240, "893": [240, 256], "228440": 240, "896": [240, 254], "924451": 240, "443675": 240, "246668": 240, "558111": 240, "129": 240, "069616": 240, "162": 240, "333713": 240, "166": 240, "029724": 240, "ofv_plot": 240, "layerchart": [240, 260], "dofv_quantiles_plot": 240, "show": [240, 244, 254, 259, 271, 274], "metric": [240, 241, 262], "chi": 240, "squar": 240, "907310": 240, "911844": 240, "750": 240, "388987": 240, "670": 240, "684132": 240, "675": 240, "846450": 240, "738": 240, "099607": 240, "248779": 240, "734": 240, "876739": 240, "733": [240, 272], "182039": 240, "626": 240, "440820": 240, "637": 240, "427606": 240, "748": 240, "285576": 240, "239599": 240, "025253": 240, "519551": 240, "781": 240, "380852": 240, "793": 240, "303365": 240, "994494": 240, "754": 240, "666705": 240, "688168": 240, "664": 240, "288159": 240, "671": 240, "883942": 240, "255718": 240, "974215": 240, "332959": 240, "052283": 240, "689": 240, "940217": 240, "693": 240, "963948": 240, "735": 240, "763734": 240, "004534": 240, "494261": 240, "162318": 240, "204881": 240, "627961": 240, "287312": 240, "986786": 240, "390849": 240, "785654": 240, "624824": 240, "922512": 240, "099768": 240, "595783": 240, "360991": 240, "358744": 240, "157557": 240, "023731": 240, "869007": 240, "372000e": 240, "000015": 240, "000003": 240, "098000e": 240, "462220e": 240, "009862": 240, "002316": 240, "002320": 240, "320640e": 240, "531300e": 240, "013222": 240, "000146": 240, "961337e": 240, "572900e": 240, "002167": 240, "014550e": 240, "000033": 240, "000196": 240, "178980e": 240, "included_individu": 240, "case_result": [241, 242], "cook_scor": 241, "jackknife_cook_scor": 241, "delta_ofv": 241, "dofv_influenti": 241, "130159": 241, "121389": 241, "015207": 241, "348263": 241, "336159": 241, "144045": 241, "192433": 241, "181125": 241, "031030": 241, "163095": 241, "155901": 241, "026142": 241, "422651": 241, "404915": 241, "190732": 241, "374312": 241, "343311": 241, "097063": 241, "169869": 241, "163883": 241, "026223": 241, "263865": 241, "254943": 241, "058123": 241, "757098": 241, "673587": 241, "477910": 241, "150161": 241, "144191": 241, "023623": 241, "361646": 241, "352901": 241, "217902": 241, "255533": 241, "215005": 241, "035375": 241, "191848": 241, "187019": 241, "038199": 241, "376365": 241, "337975": 241, "096680": 241, "142806": 241, "137340": 241, "014709": 241, "193393": 241, "179744": 241, "031711": 241, "131746": 241, "122842": 241, "020637": 241, "176644": 241, "932149": 241, "036787": 241, "128197": 241, "120498": 241, "019030": 241, "141093": 241, "138101": 241, "029021": 241, "176582": 241, "153583": 241, "035291": 241, "104396": 241, "100064": 241, "015499": 241, "552071": 241, "501458": 241, "278595": 241, "242334": 241, "217068": 241, "047627": 241, "792099": 241, "715951": 241, "798775": 241, "135247": 241, "133493": 241, "021356": 241, "442779": 241, "424958": 241, "125763": 241, "132903": 241, "127188": 241, "010157": 241, "081122": 241, "076790": 241, "005443": 241, "183624": 241, "168501": 241, "027707": 241, "113959": 241, "111168": 241, "012363": 241, "532749": 241, "515747": 241, "325048": 241, "094133": 241, "091212": 241, "014747": 241, "447798": 241, "406737": 241, "194457": 241, "364978": 241, "352973": 241, "124295": 241, "270838": 241, "252922": 241, "063675": 241, "129553": 241, "121963": 241, "014043": 241, "254914": 241, "243250": 241, "064025": 241, "207529": 241, "194633": 241, "046887": 241, "239182": 241, "218112": 241, "044252": 241, "181986": 241, "173826": 241, "020285": 241, "604112": 241, "584208": 241, "604211": 241, "407717": 241, "369648": 241, "154161": 241, "215722": 241, "196744": 241, "043742": 241, "214167": 241, "200091": 241, "036238": 241, "094284": 241, "089002": 241, "007506": 241, "074174": 241, "072365": 241, "007535": 241, "743323": 241, "717468": 241, "654313": 241, "153971": 241, "147360": 241, "014502": 241, "284706": 241, "278460": 241, "072960": 241, "331587": 241, "309374": 241, "116933": 241, "447965": 241, "421612": 241, "129593": 241, "184872": 241, "175196": 241, "029896": 241, "430382": 241, "415446": 241, "141657": 241, "409307": 241, "369197": 241, "189729": 241, "084764": 241, "079718": 241, "007416": 241, "107600": 241, "103145": 241, "013947": 241, "154672": 241, "150761": 241, "028236": 241, "155632": 241, "150461": 241, "034848": 241, "covariance_ratio": 241, "skipped_individu": 241, "050505": 241, "963884": 241, "058896": 241, "087449": 241, "985403": 241, "029066": 241, "101636": 241, "086424": 241, "017369": 241, "094799": 241, "849310": 241, "121111": 241, "049151": 241, "096456": 241, "070088": 241, "040691": 241, "065881": 241, "606158": 241, "205007": 241, "099191": 241, "143483": 241, "050691": 241, "086007": 241, "156273": 241, "919336": 241, "056714": 241, "999221": 241, "029600": 241, "034017": 241, "108785": 241, "038495": 241, "954054": 241, "053618": 241, "096334": 241, "943556": 241, "125423": 241, "086167": 241, "145822": 241, "113939": 241, "114399": 241, "057664": 241, "788608": 241, "063991": 241, "115559": 241, "160549": 241, "034685": 241, "035618": 241, "714976": 241, "092664": 241, "089158": 241, "054565": 241, "002555": 241, "032356": 241, "003056": 241, "936719": 241, "122771": 241, "078285": 241, "096841": 241, "068821": 241, "sqrt": [241, 263], "p_i": 241, "p_": 241, "orig": 241, "operatornam": [241, 254, 274], "sum_": 241, "overlin": [241, 254], "_j": 241, "_k": [241, 254], "det": 241, "Then": [241, 254], "ofv_": 241, "iofv_": 241, "iofv_k": 241, "ofv_k": 241, "case_column": 241, "rikard": [241, 243, 248, 268, 272], "nordgren": [241, 243, 248, 268, 272], "sebastian": [241, 243, 248], "ueckert": [241, 243, 248], "svetlana": 241, "freiberga": 241, "karlsson": [241, 243, 248, 254, 272], "faster": [241, 268], "2018": [241, 259, 272], "abstr": [241, 243], "8683": 241, "www": [241, 243, 259], "meet": [241, 243, 245, 259, 268], "1180": 242, "887": [242, 256, 258], "1162": 242, "1032": 242, "1004": 242, "remove_covariate_effect": [242, 249], "1181": 242, "9fd701521": 242, "best_model": 242, "final_model_nam": 242, "a7fbcbfe2": 242, "update_initial_individual_estim": 242, "modelsearch_run1": 242, "modifi": [242, 257, 259, 266], "wors": 242, "calculate_b": [242, 256, 258, 264], "calculate_a": 242, "check_parameters_near_bound": 242, "check_high_correl": 242, "plot_iofv_vs_iofv": 242, "plot_individual_predict": 242, "evaluate_express": 242, "evaluate_weighted_residu": 242, "parameter_esimt": 242, "calculate_pk_parameters_statist": 242, "update_init": [242, 261, 263], "predict_": 242, "print_fit_summari": 242, "write_result": 242, "rank_model": 242, "speedup": 242, "pars": [242, 257, 265, 267, 268, 275], "297a64041": 242, "individual_ofv": [242, 262], "1101": 242, "57fc4fee8": 242, "fd417aaf": 242, "convert_model": 242, "d5458e36": 242, "keyerror": 242, "localmodeldirectori": 242, "filenotfounderror": 242, "1193bd39": 242, "unus": 242, "submodul": 242, "bb96a13c": 242, "update_paramet": 242, "0ca786c5": 242, "dd056da3": 242, "915bc9c7": 242, "get_config_path": 242, "disabl": [242, 245], "82b32278": 242, "unwant": 242, "debug": 242, "1131a610": 242, "ebfafb45": 242, "1173": 242, "fb070ee1": 242, "1049": [242, 256], "pyreadr": 242, "easier": [242, 252, 261], "instal": [242, 244, 259, 276], "mac": [242, 247], "m1": [242, 273], "get_evid": 242, "get_cmt": 242, "resmod": [242, 270], "916": 242, "strict": [242, 259], "round": [242, 251], "1055": 242, "attibut": 242, "1092": 242, "exlud": 242, "unreport": 242, "1076": 242, "988": 242, "1c65359": 242, "subtool": [242, 275], "42fe72f": 242, "1001": 242, "lead": [242, 263, 277], "uneven": 242, "branch": [242, 247], "reduc": [242, 273], "stepwis": [242, 249, 273, 275], "694": 242, "properli": 242, "708": 242, "790": 242, "974": 242, "produc": [242, 259], "1017": 242, "989": 242, "71f4cf23": 242, "dsl": 242, "932": 242, "973": 242, "cfc09bad": 242, "975": 242, "run_iovsearch": [242, 258], "917": 242, "977": 242, "run_covsearch": [242, 249, 277], "908": 242, "fd564168": 242, "088a046a": 242, "c76fa476": 242, "430f1d2e": 242, "make_declar": 242, "greekify_model": 242, "estmethod": 242, "find_clearance_paramet": 242, "find_volume_paramet": 242, "vp": 242, "newer": 242, "820": [242, 262], "run_iivsearch": [242, 256], "run_modelsearch": [242, 264, 275], "seprat": 242, "correctli": 242, "sporad": 242, "race": [242, 245], "caus": [242, 259, 268, 277], "lazi": 242, "duplic": 242, "745": 242, "1st": 242, "3rd": 242, "bad": 242, "710": 242, "configur": [242, 265, 276], "licens": 242, "advanx": 242, "add_time_after_dos": [242, 251], "de": 242, "intercompartment": 242, "695": 242, "defob": 242, "choos": [242, 256, 259, 264, 265, 266], "gl": 242, "solve_ode_system": 242, "meta": 242, "switch": [242, 268], "read_dataset_from_datainfo": 242, "addl": 242, "linalgerror": 242, "656": [242, 256], "tflite": [242, 255], "649": 242, "654": 242, "expand_additional_dos": 242, "better": [242, 264, 272], "modelsyntaxerror": 242, "588": 242, "625": [242, 256], "578": 242, "vc1": 242, "577": 242, "success": [242, 245, 249, 256, 258], "632": 242, "636": 242, "mode": [242, 254, 259], "boundari": [242, 258, 264], "590": 242, "gl_real": 242, "sampled_iofv": [242, 274], "version": [242, 244, 255, 259, 275], "subblock": 242, "check_dataset": 242, "tensorflow": 242, "modelbuild": 242, "add_mdt_iiv": 242, "three": [242, 252, 259, 265], "lst": [242, 275], "add_eta": [242, 271], "etas_as_fullblock": 242, "iiv_as_fullblock": 242, "add_mdt_eta": 242, "remove_loq_data": 242, "wip": 242, "don": 242, "130": [242, 249], "create_report": 242, "528": 242, "457": 242, "translate_nmtran_tim": 242, "print_model_cod": [242, 255, 261], "has_michaelis_menten_elimin": 242, "has_zero_order_elimin": 242, "has_first_order_elimin": 242, "has_mixed_mm_fo_elimin": 242, "2c": 242, "1c": 242, "timevari": 242, "create_symbol": 242, "remove_unused_parameters_and_rv": 242, "mu_reference_model": 242, "simplify_express": 242, "cli": [242, 257], "bump_model_numb": 242, "regress": 242, "get_doseid": [242, 251], "get_unit_of": 242, "get_concentration_parameters_from_data": [242, 251], "write_csv": 242, "resample_data": 242, "omit_data": 242, "get_observation_express": 242, "get_individu": 242, "get_dos": [242, 251], "list_time_varying_covari": 242, "estmeth": 242, "optim": [242, 252, 257, 261, 268], "incorrect": 242, "add_allometri": 242, "insert_aft": 242, "modelstat": 242, "power_on_ruv": 242, "estimationmethod": 242, "guard": 242, "avoid": [242, 252, 259], "cdd": 242, "bipp": [242, 244], "frem": [242, 261, 270, 271], "5000": 242, "shift": 242, "write_model": [242, 261, 263, 265], "header": 242, "nest": [242, 277], "update_sourc": [242, 265], "due": [242, 272], "set_dtbs_error_model": [242, 263], "dure": [242, 277], "logger": 242, "parametr": 242, "broken": 242, "parallel": [242, 275], "generate_model_cod": [242, 261], "print_model_symbol": 242, "get_observ": [242, 251], "parameter_sampl": 242, "api": [242, 252, 257, 263, 267, 268, 276], "improv": [242, 271], "eta_shrinkag": 242, "summarize_model": 242, "window": [242, 247, 255, 259], "rstudio": [242, 268], "zero_order_absorpt": 242, "first_order_absorpt": 242, "bolus_absorpt": 242, "set_bolus_absorpt": [242, 263], "seq_zo_fo_absorpt": 242, "set_seq_zo_fo_absorpt": [242, 263], "have_zero_order_absorpt": 242, "has_zero_order_absorpt": 242, "individual_shrinkag": 242, "individual_parameter_statist": 242, "pk_paramet": 242, "create_rv_block": 242, "split_rv_block": 242, "nind": 242, "nob": 242, "nobsi": 242, "remove_error": 242, "additive_error": 242, "proportional_error": 242, "combined_error": 242, "has_additive_error": 242, "has_proportional_error": 242, "has_combined_error": 242, "theta_as_stdev": 242, "set_dtbs_error": 242, "tdist": [242, 269], "john_drap": 242, "iiv_on_ruv": [242, 269, 271, 272], "add_paramet": 242, "add_individual_paramet": [242, 263], "first_order_elimin": 242, "zero_order_elimin": 242, "michaelis_menten_elimin": 242, "mixed_mm_fo_elimin": 242, "revert": 242, "thread": [242, 245], "phi": [242, 247, 275], "site": 242, "crossval": [242, 270], "qa": [242, 270], "plain": [242, 246, 247], "sdcorr": 242, "data_transform": [242, 263], "evalut": 242, "bootstrap": [242, 270], "dependent_variable_symbol": 242, "releas": [242, 259, 277], "claus": 242, "rework": 242, "interfac": [242, 252, 255, 257, 259, 261, 263, 268, 276, 277], "com": 242, "stdin": 242, "123": [242, 249, 256, 258, 262, 264, 272], "clearer": 242, "prioriti": [242, 265], "aggregatedmodelfitresult": 242, "priorit": [242, 265], "abbr": [242, 246, 265], "half": [242, 269, 271], "life": [242, 269, 271], "set_nam": 242, "copy_model": [242, 263, 277], "parameter_init": 242, "base_parameter_chang": [242, 254], "parameter_vari": [242, 254, 271], "coeffici": 242, "frem_result": 242, "simevalresult": 242, "nonfixed_init": 242, "parameterset": 242, "migrat": 242, "github": [242, 247, 255, 257, 268, 277], "action": [242, 244, 245, 247, 259, 268], "integr": [242, 244, 268], "columntyp": 242, "to_base_model": 242, "comined_mm_fo_elimin": 242, "absorption_r": 242, "pretti": 242, "qaresult": 242, "nmtranparseerror": 242, "error_model": 242, "bootstrapresult": 242, "pharmpyconfigpath": [242, 246], "environ": [242, 245, 276, 277], "linearizeresult": 242, "label": 242, "sometim": 242, "wrong": 242, "reset_indic": 242, "multiindic": 242, "functionsadd_lag_tim": 242, "yaml": 242, "view": [242, 259, 273], "assumpt": [242, 259], "0th": [242, 244], "parser": [242, 268], "individul": 242, "extend": [242, 259, 271, 273], "postprocess": [242, 270], "librari": [242, 255, 257, 259, 268, 277], "stella": [243, 248, 268], "belin": [243, 248, 268], "gunnar": [243, 248], "yngman": [243, 248, 254], "simon": [243, 248], "carter": [243, 248], "buatoi": [243, 248], "jo\u00e3o": [243, 248], "abrant": [243, 248], "andrew": [243, 248], "hooker": [243, 248], "assemblerr": 243, "novel": 243, "process": [243, 272], "2021": [243, 254], "9656": 243, "subcommand": 244, "top": [244, 251, 275], "often": [244, 247, 261, 273], "help": [244, 245, 249, 268, 275, 277], "verb": 244, "particular": [244, 245, 247, 251, 259, 260], "welcom": [244, 245, 247, 259], "usag": 244, "exit": 244, "program": [244, 245, 255, 259], "pheno_r": [244, 251, 261, 262], "prettyprint": 244, "output_fil": 244, "match": 244, "pager": 244, "stdout": [244, 275], "datasetsmultipl": 244, "1th": 244, "quot": 244, "comb": 244, "elimini": 244, "propot": 244, "error_typ": 244, "givenbi": 244, "cov_sampl": 244, "posdef": 244, "non_fix": 244, "input_path": 244, "particip": 245, "project": [245, 246, 247, 257, 259], "made": [245, 259, 261], "member": 245, "globe": 245, "divers": 245, "skill": [245, 268], "person": [245, 259], "experi": 245, "growth": 245, "everyon": [245, 247, 259], "guidelin": 245, "insid": [245, 259], "goal": 245, "inclus": [245, 259, 271], "grow": 245, "pledg": 245, "treat": [245, 247, 259], "peopl": 245, "harass": 245, "bulli": 245, "regardless": [245, 259, 261], "sexual": 245, "orient": 245, "gender": 245, "ident": 245, "appear": [245, 277], "nation": 245, "ethnic": 245, "religion": 245, "imageri": 245, "sexist": 245, "racist": 245, "exclusionari": 245, "joke": 245, "acknowledg": [245, 259], "citat": 245, "request": [245, 247], "author": [245, 259], "own": [245, 246, 252, 259, 261], "cite": 245, "those": [245, 259, 263, 275], "realiz": 245, "varieti": [245, 249], "opinion": 245, "background": 245, "serv": [245, 259, 268], "enrich": 245, "discuss": 245, "pro": 245, "con": 245, "technologi": 245, "proactiv": 245, "ensur": [245, 259], "heard": 245, "feel": [245, 268], "confid": 245, "freeli": 245, "question": 245, "answer": 245, "respectfulli": 245, "pai": 245, "attent": 245, "feedback": 245, "forum": 245, "especi": 245, "contribut": [245, 257, 259], "conscienti": 245, "percept": 245, "wider": 245, "respond": 245, "strive": 245, "behavior": 245, "encourag": [245, 247, 252, 257], "product": [245, 249, 259], "debat": 245, "disagr": 245, "entir": [245, 247, 259, 275], "silent": 245, "violat": [245, 259], "contact": [245, 259], "maintain": [245, 247, 248, 257, 259, 267, 268], "talk": 245, "privat": [245, 249, 259], "situat": 245, "onlin": 245, "offlin": 245, "mail": [245, 259], "social": 245, "media": 245, "confer": 245, "associ": [245, 258, 259], "adapt": [245, 259, 268], "astropi": 245, "appdir": 246, "your": [246, 247, 255, 257, 259, 263, 265, 275, 277], "web": 246, "pypi": [246, 247, 255], "ini": 246, "fallback": 246, "pharmpyconfigfil": 246, "bug": 247, "appreci": 247, "suggest": [247, 257], "suitabl": [247, 268], "student": [247, 268], "intern": [247, 261, 263, 265, 268, 277], "commun": [247, 259], "aspir": 247, "conduct": [247, 264], "foster": 247, "linux": [247, 255], "maco": [247, 255], "ll": 247, "badg": 247, "pip": [247, 255], "python3": 247, "pip3": 247, "guid": 247, "former": 247, "ubuntu": 247, "apt": 247, "url": [247, 255], "render": [247, 259, 268], "On": [247, 268], "sudo": 247, "brew": 247, "unnecessari": [247, 259], "thing": [247, 259], "instruct": 247, "black": 247, "formatt": 247, "flake8": 247, "linter": 247, "isort": 247, "lint": 247, "reformat": 247, "py39": 247, "test_paramet": 247, "py": [247, 255], "test_get_theta": 247, "apart": 247, "suit": 247, "purpos": [247, 259], "complex": [247, 255, 257], "extern": [247, 251, 252, 263, 267, 268], "test_modelsearch": 247, "test_summary_individu": 247, "pull": 247, "manag": 247, "contributor": [247, 259], "emploi": 247, "commit": [247, 259], "push": 247, "name_of_branch": 247, "deploy": 247, "setup": 247, "trigger": [247, 261], "tag": 247, "changelog": 247, "bump": 247, "semant": 247, "bumpvers": 247, "cfg": 247, "sh": 247, "patch": 247, "minor": 247, "major": [247, 259], "year": [247, 259], "copyright": 247, "necessari": [247, 259, 277], "coi": 247, "stream": [247, 261], "verbatim": [247, 259], "farmaci": 248, "uu": 248, "kajsa": 248, "harl": 248, "zhe": [248, 268], "huang": [248, 268], "aurelien": 248, "oom": 248, "piyanan": 248, "assawasuwannakit": 248, "xiaomei": 248, "chen": 248, "alzahra": 248, "hamdan": 248, "osama": 248, "qutishat": 248, "shijun": 248, "wang": 248, "tianwu": 248, "yang": 248, "warm": 248, "thank": 248, "sponsor": 248, "hoffman": 248, "la": 248, "roch": 248, "ltd": 248, "pharmetheu": 248, "uppsala": [248, 257], "univers": [248, 257], "inter": [249, 256], "five": 249, "third": [249, 252, 259], "fourth": 249, "cartesian": 249, "manual": [249, 251, 275], "rewritten": 249, "notic": [249, 259], "semicolon": 249, "mox2": [249, 256, 258, 264, 275], "418814": 249, "139": 249, "125102": 249, "138": 249, "135134": 249, "927208": 249, "485622": 249, "937252": 249, "780611": 249, "mo": [249, 254], "504543": 249, "597508": 249, "87": 249, "790910": 249, "806421": 249, "62": [249, 269], "737810": 249, "195653": 249, "315057": 249, "651626": 249, "814832": 249, "978215": 249, "056538": 249, "732689": 249, "062682": 249, "061671": 249, "742325": 249, "1436": 249, "605574": 249, "1431": 249, "311862": 249, "1430": 249, "321894": 249, "1425": 249, "113968": 249, "1424": 249, "672383": 249, "124012": 249, "1422": 249, "967372": 249, "1415": 249, "691304": 249, "1382": 249, "784268": 249, "1379": 249, "977671": 249, "1364": [249, 256], "993181": 249, "1354": 249, "924571": 249, "382413": 249, "1346": 249, "501817": 249, "1335": 249, "838386": 249, "1334": 249, "001593": 249, "1332": 249, "164976": 249, "1313": [249, 264], "243298": 249, "1312": 249, "919450": 249, "249442": 249, "248431": 249, "1302": 249, "929085": 249, "1292": [249, 256, 258, 264], "186761": [249, 256, 258, 264], "1414": 249, "1386": 249, "787242": 249, "1409": 249, "1381": 249, "493530": 249, "1408": 249, "1380": 249, "503563": 249, "1405": [249, 256, 258, 264, 272], "586096": 249, "1404": [249, 256, 258, 264, 272], "144510": 249, "1378": [249, 256], "596140": 249, "1402": [249, 258], "1377": 249, "439499": 249, "1397": 249, "1374": 249, "453891": 249, "1341": 249, "546855": 249, "1361": 249, "1338": 249, "740258": 249, "1323": 249, "755768": 249, "1336": 249, "687158": 249, "145000": 249, "1330": 249, "1309": 249, "554864": 249, "1319": 249, "1298": 249, "891433": 249, "1318": 249, "1297": 249, "054639": 249, "1316": 249, "1295": [249, 264], "218022": 249, "1276": 249, "296345": 249, "1296": 249, "1275": 249, "972496": 249, "302489": 249, "301478": 249, "1286": 249, "1265": [249, 258], "982132": 249, "1278": [249, 256, 258, 264], "1259": [249, 256, 258, 264], "530267": [249, 256, 258, 264], "550520": 249, "1328": 249, "1305": [249, 264], "313107": 249, "1350": 249, "224247": 249, "1308": 249, "986835": 249, "1416": 249, "503401": 249, "1396": 249, "1370": 249, "975529": 249, "1417": 249, "275090": 249, "1371": 249, "747218": 249, "1418": 249, "475139": 249, "1398": 249, "1372": 249, "947267": 249, "1426": 249, "509140": 249, "1376": 249, "690808": 249, "430350": 249, "612019": 249, "1427": 249, "910516": 249, "092185": 249, "1437": 249, "275565": 249, "1413": 249, "1383": 249, "166774": 249, "631837": 249, "1412": 249, "523046": 249, "957318": 249, "848526": 249, "805990": 249, "697199": 249, "1438": 249, "187223": 249, "1384": 249, "078432": 249, "1363": 249, "424478": 249, "1343": [249, 256], "1317": 249, "896606": 249, "1388": 249, "878574": 249, "1368": 249, "350702": 249, "113956": 249, "586084": 249, "ruv_prop_estim": [249, 272], "9960": 249, "187601": 249, "7980": 249, "185142": 249, "6117": 249, "180085": 249, "5252": 249, "181726": 249, "7337": 249, "184103": 249, "4092": 249, "180301": 249, "4997": 249, "179325": 249, "4482": 249, "181272": 249, "4189": 249, "189053": 249, "5013": 249, "188003": 249, "6103": 249, "187672": 249, "8728": 249, "190712": 249, "3161": 249, "195330": 249, "8757": 249, "192852": 249, "3323": 249, "191425": 249, "7087": 249, "192934": 249, "4824": 249, "199549": 249, "9807": 249, "192557": 249, "3823": 249, "198783": 249, "1536": 249, "193411": 249, "9763": 249, "195608": 249, "2632": 249, "197452": 249, "5328": [249, 256, 258, 264], "209972": [249, 256, 258, 264], "8499": 249, "192681": 249, "1238": 249, "194408": 249, "5391": 249, "182237": 249, "7059": 249, "182092": 249, "4373": 249, "181626": 249, "7842": 249, "182065": 249, "5121": 249, "181752": 249, "4741": 249, "180703": 249, "9846": 249, "187508": 249, "0276": 249, "187684": 249, "9787": 249, "186766": 249, "9897": 249, "187557": 249, "9709": 249, "186978": 249, "8036": 249, "196301": 249, "9160": 249, "192686": 249, "184102": 249, "5256": 249, "181734": 249, "pop_clage_estim": 249, "pop_clsex_estim": 249, "739428": 249, "007466": 249, "724484": 249, "765510": 249, "784040": 249, "788914": 249, "849555": 249, "808269": 249, "834534": 249, "577983": 249, "386872": 249, "414099": 249, "365025": 249, "293158": 249, "004963": 249, "382904": 249, "010536": 249, "005338": 249, "000660": 249, "387683": 249, "342000": 249, "002802": 249, "812282": 249, "743874": 249, "002654": 249, "856355": 249, "712068": 249, "002342": 249, "796171": 249, "805106": 249, "002752": 249, "726541": 249, "730115": 249, "000284": 249, "737330": 249, "746890": 249, "747449": 249, "373211": 249, "788917": 249, "784186": 249, "034933": 249, "013481": 249, "037359": 249, "227740": 249, "022746": 249, "049832": 249, "019706": 249, "059279": 249, "517590": 249, "406124": 249, "258315": 249, "008865": 249, "008788": 249, "242742": 249, "006337": 249, "pop_vcage_estim": 249, "pop_vcsex_estim": 249, "pop_vcwt_estim": 249, "013997": 249, "809357": 249, "007942": 249, "746753": 249, "009662": 249, "772697": 249, "007715": 249, "756337": 249, "008384": 249, "011954": 249, "133780": 249, "943702": 249, "073220": 249, "086860": 249, "013679": 249, "953372": 249, "013320": 249, "014651": 249, "008482": 249, "115170": 249, "065250": 249, "942578": 249, "723985": 249, "008686": 249, "705263": 249, "007851": 249, "765500": 249, "006172": 249, "011627": 249, "800803": 249, "008297": 249, "013862": 249, "800449": 249, "008143": 249, "012912": 249, "808946": 249, "007874": 249, "014022": 249, "741105": 249, "007820": 249, "013734": 249, "793357": 249, "007122": 249, "015534": 249, "596488": 249, "008073": 249, "012324": 249, "012251": 249, "133790": 249, "756260": 249, "008381": 249, "110": [249, 256, 258, 264, 272], "113": [249, 256, 258, 264, 272], "121": [249, 256, 258, 264, 272], "1403": [249, 256, 258, 264, 272], "1406": [249, 256, 258, 264, 272], "1407": [249, 256, 258, 264, 272], "757118": [249, 256, 258, 264], "659694": [249, 256, 258, 264], "302503": [249, 256, 258, 264], "464327": [249, 256, 258, 264], "034898": [249, 256, 258, 264], "167558": 249, "086188": 249, "238268": 249, "450755": 249, "456701": 249, "573801": 249, "385316": 249, "317492": 249, "252706": 249, "975049": 249, "2920": 249, "reduced_ofv": [249, 273], "extended_ofv": [249, 273], "ofv_drop": [249, 273], "extended_st": [249, 273], "048703": 249, "880596": 249, "422754": 249, "282451": 249, "491364": 249, "722430": 249, "69": 249, "189487": 249, "475854": 249, "812097": 249, "583786": 249, "276068": 249, "783835": 249, "432709": 249, "981079": 249, "422665": 249, "197894": 249, "395171": 249, "207926": 249, "316382": 249, "796548": 249, "491606": 249, "669991": 249, "026263": 249, "351743": 249, "200416": 249, "581649": 249, "181096": 249, "727000": 249, "933192": 249, "491618": 249, "delta_df": [249, 273], "pvalu": [249, 273], "goal_pvalu": [249, 273], "047127e": 249, "710000e": 249, "568110e": 249, "494490e": 249, "498453e": 249, "459287e": 249, "280678e": 249, "923500e": 249, "003390e": 249, "253363e": 249, "996801e": 249, "705542e": 249, "706940e": 249, "706759e": 249, "368618e": 249, "02": [249, 271, 273, 275], "944356e": 249, "215423e": 249, "675009e": 249, "082162e": 249, "987935e": 249, "521990e": 249, "685310e": 249, "727896e": 249, "143199e": 249, "279024e": 249, "375337e": 249, "248414e": 249, "512424e": 249, "446750e": 249, "991122e": 249, "130547e": 249, "712593e": 249, "531279e": 249, "732385e": 249, "085233e": 249, "is_backward": [249, 273], "extended_signific": [249, 273], "folder": 249, "t3": 249, "rms6r0p90qs2_8fd7g2p8f": 249, "covariate_effect": [249, 254, 271, 273], "ofv_summari": [249, 273], "candidate_summari": [249, 273], "n_test": [249, 273], "n_ok": [249, 273], "n_localmin": [249, 273], "n_fail": [249, 273], "stepinclud": [249, 273], "estimation_ofv": 250, "prediction_ofv": 250, "545": 250, "863847": 250, "186": 250, "192727": 250, "512": 250, "953185": 250, "694832": 250, "547": 250, "843632": 250, "184": [250, 273], "022535": 250, "579": 250, "109635": 250, "596550": 250, "prediction_ofv_sum": 250, "747": 250, "506644594254": 250, "read_raw_dataset": 251, "arrai": [251, 261, 275], "get_id": 251, "largest": 251, "ser": 251, "di": [251, 277], "role": 251, "identif": [251, 272], "mostli": [251, 252, 268], "steven": 251, "typologi": 251, "en": [251, 252, 254], "wikipedia": 251, "wiki": [251, 259], "level_of_measur": 251, "annot": 251, "kg": 251, "mg": 251, "l": [251, 277], "low": [251, 261, 263], "understand": [251, 267], "accompani": [251, 259], "And": [251, 259, 275], "map": 251, "under": [252, 257, 259, 273, 277], "construct": [252, 267], "complet": 252, "four": 252, "distinct": 252, "layer": [252, 264, 266], "worklow": 252, "higher": [252, 257, 261, 263, 274], "coupl": 252, "mathemat": [252, 261, 268], "concid": 252, "live": 252, "namespac": 252, "mutablesequ": 252, "scalar": [252, 261], "element": [252, 262], "concern": [252, 259], "expos": 252, "numpydoc": 252, "readthedoc": 252, "ecosystem": 252, "thu": [252, 256, 259, 261, 275], "wrap": 252, "share": [252, 259, 266], "leak": 252, "parti": [252, 259], "break": 252, "creation": 254, "model_3b": 254, "u": [254, 263], "eta_i": 254, "leq": 254, "n_": 254, "par": [254, 261], "eta_k": 254, "bmatrix": 254, "vdot": 254, "eta_": 254, "sim": [254, 261, 263, 274], "mathcal": [254, 261, 263], "mu_2": 254, "omega_": [254, 263], "n1": 254, "n2": 254, "ddot": 254, "latter": 254, "partit": 254, "5th": 254, "630859": 254, "868770": 254, "176754": 254, "95th": 254, "925602": 254, "082310": 254, "244607": 254, "569077": 254, "600360": 254, "632538": 254, "532478": 254, "824355": 254, "138312": 254, "577861": 254, "761430": 254, "991915": 254, "003863": 254, "148763": 254, "297579": 254, "600771": 254, "631260": 254, "661025": 254, "315965": 254, "549669": 254, "811532": 254, "margin": 254, "ij": 254, "ijk": 254, "omega_k": 254, "sigma_1": 254, "sigma_2": 254, "sigma_i": 254, "turn": [254, 261], "percent": 254, "red": 254, "figur": 254, "vconcatchart": 254, "sigma_": 254, "020503": 254, "628814": 254, "009309": 254, "544459": 254, "026950": 254, "613127": 254, "050396": 254, "551581": 254, "individual_effect": 254, "913307": 254, "899565": 254, "923297": 254, "939015": 254, "926632": 254, "948404": 254, "933506": 254, "894967": 254, "970755": 254, "010192": 254, "973823": 254, "047109": 254, "992728": 254, "986142": 254, "999404": 254, "361911": 254, "322628": 254, "418737": 254, "894772": 254, "868658": 254, "917333": 254, "947797": 254, "923656": 254, "969732": 254, "771958": 254, "748072": 254, "790423": 254, "790120": 254, "768277": 254, "806911": 254, "percentu": 254, "unexplained_vari": 254, "sd_observ": 254, "sd_5th": 254, "sd_95th": 254, "469535": 254, "359934": 254, "547612": 254, "465490": 254, "352335": 254, "538174": 254, "165502": 254, "141580": 254, "190726": 254, "159149": 254, "134989": 254, "183613": 254, "420471": 254, "327104": 254, "490419": 254, "404440": 254, "306148": 254, "467046": 254, "143317": 254, "122348": 254, "166012": 254, "141826": 254, "120282": 254, "163610": 254, "percetil": 254, "025328": 254, "022571": 254, "020115": 254, "216681": 254, "188254": 254, "163572": 254, "027391": 254, "021634": 254, "020540": 254, "intermedi": 254, "model_4": [254, 261], "parameter_inits_and_estim": 254, "model_3": 254, "115195": 254, "007066": 254, "209016": 254, "125999": 254, "020191": 254, "224959": 254, "126000": 254, "007084": 254, "38635": 254, "220463": 254, "195326": 254, "176796": 254, "bsv_apgr": 254, "010583": 254, "107027": 254, "000008": 254, "171529": 254, "404278": 254, "000010": 254, "012042": 254, "115427": 254, "000032": 254, "208475": 254, "415588": 254, "000030": 254, "062712": 254, "117271": 254, "039930": 254, "446939": 254, "402075": 254, "bsv_wgt": 254, "244579": 254, "244448": 254, "002173": 254, "002170": 254, "244080": 254, "007763": 254, "007760": 254, "249237": 254, "034610": 254, "015250": 254, "relative_chang": 254, "773218": 254, "095327": 254, "520526": 254, "271369": 254, "110618": 254, "974324": 254, "868": [254, 256], "657803": 254, "852": 254, "803483": 254, "753": 254, "302743": 254, "themselv": 254, "ideal": 254, "estimated_covari": 254, "stdev": 254, "423728": 254, "237640": 254, "525424": 254, "704565": 254, "nyberg": 254, "hb": 254, "jonsson": 254, "introduct": 254, "cpt": 254, "pharmacometr": [254, 257, 259, 275], "syst": 254, "pharmacol": 254, "1002": 254, "psp4": 254, "12741": 254, "plan": 255, "stabl": 255, "googl": [255, 268], "coral": 255, "repo": 255, "tflite_runtim": 255, "nonlinear": 255, "examin": 255, "sever": [255, 271], "aspect": [256, 271, 275], "explor": [256, 268], "naiv": 256, "minima": 256, "\u03b4ofv": [256, 258, 264], "\u03b4aic": [256, 258, 264], "\u03b4bic": [256, 258, 264], "iivsearch_no_of_etas_candidate3": 256, "282024": 256, "217": 256, "691571": 256, "iivsearch_no_of_etas_candidate6": 256, "385": 256, "641987": 256, "631": 256, "871991": 256, "iivsearch_no_of_etas_candidate5": 256, "633": [256, 262], "419500": 256, "iivsearch_no_of_etas_candidate4": 256, "815": 256, "076729": 256, "iivsearch_no_of_etas_candidate7": 256, "834": 256, "249063": 256, "iivsearch_block_structure_candidate1": 256, "81": [256, 262], "971960": 256, "1283": [256, 258], "597406": 256, "1279": 256, "315382": 256, "1061": 256, "623812": 256, "673395": 256, "443392": 256, "645": 256, "895882": 256, "464": 256, "238653": 256, "066319": 256, "1365": 256, "569365": 256, "178325": 256, "1280": [256, 258], "1070": 256, "204731": 256, "1058": 256, "897": 256, "963854": 256, "024311": 256, "644": 256, "650": 256, "186341": 256, "640": 256, "468": 256, "529112": 256, "458": 256, "437": 256, "440744": 256, "1261": [256, 258], "189012": 256, "1039": 256, "215418": [256, 273], "641723": 256, "034998": 256, "620": 256, "864210": 256, "439": 256, "206982": 256, "417": 256, "411370": 256, "160972": 256, "5333": 256, "0366": 256, "1164": 256, "1064": 256, "2929": 256, "8058": 256, "9055": 256, "104": [256, 258, 264], "2270": 256, "9424": 256, "1360": 256, "239": 256, "1090": 256, "234": 256, "6680": 256, "9380": 256, "6690": 256, "106": [256, 269, 271, 272], "9880": 256, "433544": 256, "433676": [256, 258, 264], "114210": 256, "347648": 256, "316164": 256, "310155": 256, "922906": 256, "434563": 256, "436279": 256, "481830": 256, "481858": [256, 258, 264], "594777": 256, "396159": 256, "516927": 256, "593578": 256, "593654": [256, 258, 264], "414690": 256, "247930": 256, "656304": 256, "00013": 256, "31998": 256, "08352": 256, "43473": 256, "209975": 256, "401593": 256, "574966": 256, "736398": 256, "750954": 256, "744891": 256, "810669": 256, "215885": 256, "iiv_cl_iiv_vc_estim": 256, "498114": 256, "965311": 256, "348227": 256, "596114": 256, "524856": 256, "831038": 256, "973037": 256, "826292": 256, "168816": 256, "275494": 256, "612863": 256, "081253": 256, "444919": 256, "093815": 256, "067016": 256, "554482": 256, "103963": 256, "060027": 256, "670815": 256, "108198": 256, "049148": 256, "371": 256, "agnost": 257, "architectur": 257, "mainli": 257, "foundat": [257, 259], "post": [257, 272], "sens": 258, "brute": 258, "approach": 258, "nonzero": 258, "constant": 258, "iovsearch_candidate7": 258, "eta_iov_2_1": 258, "eta_iov_3_1": 258, "540508": 258, "iovsearch_candidate5": 258, "230772": 258, "iovsearch_candidate6": 258, "230394": 258, "iovsearch_candidate3": 258, "750000": 258, "iovsearch_candidate4": 258, "750400": 258, "iovsearch_candidate2": 258, "060114": 258, "iovsearch_candidate1": 258, "043077": 258, "iovsearch_candidate8": 258, "241921": 258, "694052": 258, "384316": 258, "383938": 258, "1262": 258, "153544": 258, "403544": 258, "403145": 258, "093431": 258, "1257": 258, "110467": 258, "1115": 258, "911624": 258, "1300": 258, "017728": 258, "1284": 258, "1263": 258, "070775": 258, "1299": 258, "707992": 258, "761039": 258, "707614": 258, "760660": 258, "017679": 258, "1282": 258, "1258": 258, "780267": 258, "017280": 258, "779867": 258, "707566": 258, "1281": 258, "470153": 258, "015062": 258, "1254": 258, "487190": 258, "1145": 258, "944840": 258, "1131": 258, "1113": 258, "288346": 258, "1954": 258, "1950": 258, "2313": 258, "242": [258, 269, 271], "440613": 258, "665": 258, "439785": 258, "439783": 258, "230": 258, "241": 258, "440611": 258, "439784": 258, "438628": 258, "474140": 258, "586866": 258, "472835": 258, "590425": 258, "472840": 258, "590424": 258, "474125": 258, "586859": 258, "474111": 258, "586860": 258, "590422": 258, "572627": 258, "311861": 258, "194680": 258, "320393": 258, "195531": 258, "320395": 258, "195532": 258, "000130": [258, 264], "311859": 258, "194676": 258, "311903": 258, "194675": 258, "320387": 258, "290631": 258, "197005": 258, "omega_iov_1_estim": 258, "omega_iov_2_estim": 258, "002735": 258, "000006": 258, "483460": 258, "omega_iov_3_estim": 258, "000000e": [258, 273], "119820": 258, "001912": 258, "121866": 258, "620420": 258, "291396": 258, "230854": 258, "936871": 258, "267222": 258, "050766": 258, "059323": 258, "068405": 258, "291876": 258, "271367": 258, "187631": 258, "051358": 258, "020838": 258, "042977": 258, "612880": 258, "250083": 258, "660334": 258, "657": 258, "395": 258, "NEAR": [258, 264], "BE": [258, 259], "address": [258, 259], "adopt": 259, "wikimedia": 259, "bowl_of_hygieia_by_david": 259, "svg": 259, "cc": 259, "BY": 259, "sa": 259, "font": 259, "pt": 259, "san": 259, "relicens": 259, "lgpl": 259, "know": 259, "maintaint": 259, "softwar": [259, 268, 275], "redistribut": 259, "publish": 259, "hope": 259, "warranti": 259, "impli": 259, "merchant": 259, "modif": [259, 271], "permit": 259, "retain": 259, "disclaim": 259, "reproduc": 259, "materi": 259, "holder": 259, "AND": [259, 263], "AS": 259, "OR": 259, "BUT": 259, "NOT": 259, "shall": 259, "liabl": 259, "indirect": 259, "incident": 259, "exemplari": 259, "consequenti": 259, "damag": 259, "procur": 259, "good": 259, "servic": 259, "loss": 259, "profit": 259, "busi": 259, "interrupt": 259, "ON": 259, "theori": [259, 261], "liabil": 259, "contract": 259, "tort": 259, "neglig": 259, "aris": 259, "advis": 259, "SUCH": 259, "june": 259, "2007": 259, "inc": 259, "fsf": 259, "preambl": 259, "copyleft": 259, "practic": 259, "design": [259, 261, 263, 268, 275], "awai": 259, "contrast": 259, "guarante": 259, "too": 259, "speak": 259, "price": 259, "charg": 259, "wish": [259, 263], "piec": 259, "prevent": 259, "deni": 259, "ask": [259, 277], "surrend": 259, "therefor": 259, "respons": 259, "grati": 259, "fee": 259, "recipi": 259, "gpl": 259, "assert": 259, "offer": [259, 261, 263], "permiss": 259, "clearli": 259, "sake": 259, "erron": 259, "devic": 259, "although": 259, "manufactur": 259, "fundament": 259, "incompat": 259, "aim": [259, 271], "systemat": 259, "abus": 259, "area": [259, 268], "precis": 259, "unaccept": 259, "prohibit": 259, "substanti": 259, "domain": [259, 266, 275], "stand": 259, "readi": 259, "provis": 259, "futur": 259, "threaten": 259, "constantli": [259, 277], "patent": 259, "danger": 259, "proprietari": 259, "assur": 259, "law": 259, "semiconductor": 259, "mask": 259, "license": 259, "organ": [259, 261], "fashion": 259, "exact": 259, "earlier": 259, "cover": [259, 264, 265, 267, 276], "unmodifi": 259, "propag": 259, "secondarili": 259, "infring": 259, "countri": 259, "convei": 259, "enabl": 259, "mere": 259, "network": 259, "transfer": 259, "extent": 259, "conveni": [259, 261], "promin": 259, "visibl": 259, "menu": 259, "criterion": 259, "offici": 259, "wide": 259, "among": 259, "essenti": 259, "kernel": 259, "script": [259, 275], "link": [259, 272], "subprogram": 259, "intim": 259, "regener": 259, "grant": 259, "irrevoc": 259, "affirm": 259, "unlimit": 259, "constitut": 259, "fair": 259, "equival": [259, 261, 275], "sole": 259, "facil": 259, "compli": 259, "behalf": 259, "relationship": [259, 273], "circumst": 259, "sublicens": 259, "anti": 259, "circumvent": 259, "deem": 259, "technolog": 259, "fulfil": 259, "oblig": 259, "articl": 259, "wipo": 259, "treati": 259, "decemb": 259, "1996": 259, "waiv": 259, "forbid": 259, "exercis": 259, "intent": 259, "enforc": 259, "medium": [259, 268], "conspicu": 259, "intact": 259, "absenc": 259, "along": 259, "relev": [259, 265, 275], "anyon": 259, "who": [259, 265], "possess": 259, "invalid": 259, "natur": 259, "storag": 259, "aggreg": 259, "beyond": 259, "embodi": 259, "durabl": 259, "customarili": 259, "interchang": 259, "spare": 259, "reason": [259, 268], "cost": 259, "server": 259, "occasion": 259, "noncommerci": 259, "subsect": 259, "6b": 259, "further": 259, "clear": [259, 277], "sai": [259, 265], "host": 259, "satisfi": 259, "peer": 259, "transmiss": 259, "6d": 259, "portion": 259, "consum": 259, "tangibl": 259, "household": 259, "sold": 259, "incorpor": 259, "dwell": 259, "doubt": 259, "resolv": [259, 266], "favor": 259, "coverag": 259, "typic": [259, 275], "commerci": 259, "industri": 259, "procedur": 259, "suffic": 259, "interf": 259, "perpetu": 259, "character": 259, "But": 259, "nor": 259, "abil": 259, "rom": 259, "advers": 259, "protocol": 259, "publicli": 259, "password": 259, "unpack": 259, "supplement": 259, "govern": 259, "notwithstand": 259, "misrepresent": 259, "licensor": 259, "declin": 259, "trademark": 259, "trade": 259, "indemnif": 259, "contractu": 259, "impos": 259, "surviv": 259, "expressli": 259, "void": 259, "paragraph": 259, "ceas": 259, "reinstat": 259, "provision": 259, "perman": 259, "notifi": 259, "prior": 259, "dai": 259, "cessat": 259, "moreov": 259, "cure": 259, "receipt": 259, "qualifi": 259, "ancillari": 259, "consequ": 259, "likewis": 259, "downstream": 259, "complianc": 259, "entiti": 259, "asset": 259, "subdivid": 259, "predecessor": 259, "plu": 259, "effort": 259, "royalti": 259, "litig": 259, "cross": 259, "claim": 259, "counterclaim": 259, "lawsuit": 259, "alleg": 259, "sell": 259, "sale": 259, "acquir": 259, "hereaft": 259, "manner": [259, 264], "worldwid": 259, "agreement": 259, "denomin": 259, "coven": 259, "sue": 259, "knowingli": 259, "readili": 259, "arrang": 259, "depriv": 259, "yourself": 259, "benefit": [259, 268], "knowledg": 259, "believ": 259, "pursuant": 259, "convey": 259, "discriminatori": 259, "scope": 259, "payment": 259, "primarili": 259, "march": 259, "constru": 259, "defens": 259, "court": 259, "contradict": 259, "excus": 259, "simultan": [259, 264], "pertin": 259, "agre": 259, "whom": 259, "refrain": 259, "affero": 259, "revis": 259, "Such": 259, "spirit": 259, "ever": 259, "proxi": 259, "THERE": 259, "qualiti": 259, "prove": 259, "defect": 259, "repair": 259, "WILL": 259, "inabl": 259, "BEING": 259, "inaccur": 259, "sustain": 259, "failur": [259, 268], "review": 259, "waiver": 259, "civil": 259, "greatest": 259, "achiev": 259, "attach": 259, "safest": 259, "pointer": 259, "brief": 259, "idea": [259, 268], "electron": 259, "paper": 259, "hypothet": 259, "Of": 259, "cours": 259, "gui": 259, "box": [259, 271], "employ": 259, "programm": 259, "school": 259, "philosophi": 259, "why": 259, "7b2feb6f20b626a559d3150f6638c111f20b5213": 259, "lin_evalu": 260, "lin_estim": 260, "268756": 260, "problemat": 260, "947354": 260, "939053": 260, "008301": 260, "970582": 260, "012053": 260, "041471": 260, "982345": 260, "979456": 260, "002889": 260, "457096": 260, "435700": 260, "021396": 260, "839445": 260, "838391": 260, "001054": 260, "257222": 260, "278016": 260, "020794": 260, "098344": 260, "077164": 260, "021179": 260, "538623": 260, "520111": 260, "018512": 260, "647972": 260, "673400": 260, "025427": 260, "394648": 260, "373180": 260, "021468": 260, "480163": 260, "505680": 260, "025517": 260, "650236": 260, "629298": 260, "020938": 260, "991406": [260, 262], "988587": 260, "002820": 260, "378873": 260, "372846": 260, "006028": 260, "739906": 260, "725640": 260, "014265": 260, "328801": 260, "326482": 260, "002319": 260, "113286": 260, "104515": 260, "008771": 260, "212076": 260, "325127": 260, "113051": 260, "334048": 260, "321306": 260, "012742": 260, "327782": 260, "306287": 260, "021495": 260, "821537": 260, "795371": 260, "026165": 260, "631283": 260, "620311": 260, "010972": 260, "861666": 260, "855927": 260, "005739": 260, "915260": 260, "913348": 260, "001913": 260, "988972": 260, "024483": 260, "035512": 260, "279274": 260, "269277": 260, "009997": 260, "733179": 260, "729199": 260, "003980": 260, "830055": 260, "827764": 260, "002290": 260, "851725": 260, "847176": 260, "004549": 260, "212098": 260, "192122": 260, "019976": 260, "774789": 260, "773559": 260, "001230": 260, "352292": 260, "351131": 260, "001162": 260, "172644": 260, "165200": 260, "007443": 260, "427375": 260, "420258": 260, "007117": 260, "381438": 260, "412378": 260, "030941": 260, "624011": 260, "614613": 260, "009397": 260, "970630": 260, "955216": 260, "015414": 260, "177025": 260, "002885": 260, "206543": 260, "180626": 260, "025916": 260, "955033": 260, "945036": 260, "982451": 260, "972114": 260, "010337": 260, "051495": 260, "098643": 260, "047147": 260, "424500": 260, "425925": 260, "001425": 260, "734347": 260, "702764": 260, "031583": 260, "018483": 260, "997957": 260, "020526": 260, "810285": [260, 262], "807205": 260, "003080": 260, "279257": 260, "276411": 260, "002846": 260, "168465": 260, "267932": 260, "099467": 260, "190512": 260, "178815": 260, "011697": 260, "749138": 260, "727859": 260, "021278": 260, "598562": 260, "616685": 260, "018123": 260, "237457": 260, "251607": 260, "014150": 260, "568928": 260, "581417": 260, "012489": 260, "800065": 260, "795239": 260, "004826": 260, "098027": 260, "103873": 260, "005846": 260, "586253": [260, 262], "582931": 260, "003323": 260, "663950": 260, "650298": 260, "013652": 260, "850995": 260, "833333": 260, "017662": 260, "605848": 260, "592551": 260, "013297": 260, "iofv_plot": 260, "At": 261, "heart": 261, "li": [261, 275], "subclass": 261, "principl": 261, "pharmi": 261, "transpar": 261, "mymodel": [261, 263], "inspect": 261, "sdtab1": 261, "displaystyl": [261, 263], "infti": 261, "parset": 261, "eta1": 261, "frem_model": 261, "000286193": 261, "0676481": 261, "0256033": 261, "027906": [261, 262], "0235094": 261, "00161838": 261, "24458": 261, "omega_est": 261, "0393482": 261, "0168369": 261, "0442286": 261, "0426757": 261, "0259374": 261, "0654878": 261, "00168063": 261, "983027": 261, "240423": 261, "98305": 261, "choleski": 261, "198363807182661": 261, "0848788911603008": 261, "136868454493349": 261, "222967085720797": 261, "616745467855979": 261, "743597812371906": 261, "215138540674925": 261, "145697201390566": 261, "508675383095755": 261, "810424017694199": 261, "pure": 261, "astyp": 261, "numeric64": 261, "linalg": 261, "19836381": 261, "08487889": 261, "13686845": 261, "22296709": 261, "61674547": 261, "74359781": 261, "21513854": 261, "1456972": 261, "50867538": 261, "81042402": 261, "quit": 261, "flexibl": 261, "cumbersom": 261, "easili": 261, "a_": [261, 263], "004696": [261, 262], "158920": [261, 262], "029351": [261, 262], "s_": [261, 263], "testdata": 262, "2760562818805": 262, "parameter_estimates_sdcorr": 262, "171321": 262, "167051": 262, "115069": 262, "Or": 262, "standard_errors_sdcorr": 262, "039153": 262, "022378": 262, "009904": 262, "relative_standard_error": 262, "044731": 262, "027325": 262, "527072": 262, "457068": 262, "267918": 262, "172147": 262, "proper": 262, "388058": 262, "356900": 262, "238442": 262, "096516": 262, "invers": 262, "29955600": 262, "400": 262, "910": 262, "267": 262, "039": 262, "207": 262, "809": 262, "520": 262, "980": 262, "200": 262, "450": 262, "947352": 262, "970591": 262, "982342": 262, "457091": 262, "839437": 262, "257230": 262, "098338": 262, "538621": 262, "647969": 262, "394643": 262, "480164": 262, "650233": 262, "378880": 262, "739902": 262, "328800": 262, "113284": 262, "212096": 262, "334047": 262, "327778": 262, "821533": 262, "631281": 262, "861669": 262, "915261": 262, "988977": 262, "279273": 262, "733181": 262, "830053": 262, "851724": 262, "212095": 262, "774791": 262, "352283": 262, "172643": 262, "427376": 262, "381444": 262, "624014": 262, "970627": 262, "177028": 262, "206540": 262, "955029": 262, "982447": 262, "051499": 262, "424503": 262, "734342": 262, "018477": 262, "279258": 262, "168486": 262, "190508": 262, "749134": 262, "598565": 262, "237467": 262, "568934": 262, "800062": 262, "098025": 262, "663948": 262, "850993": 262, "605845": 262, "143": 262, "045": 262, "971": 262, "881": 262, "575": 262, "080": 262, "063": 262, "427": 262, "668": 262, "543": 262, "662": 262, "478": 262, "667": 262, "253": 262, "495": 262, "918": 262, "67071": 262, "401100": 262, "35080": 262, "587770": 262, "36360": 262, "278800": 262, "19730": 262, "670700": 262, "21710": 262, "352600": 262, "86050": 262, "067200": 262, "35060": 262, "059269": 262, "72100": 262, "036754": 262, "10860": 262, "814140": 262, "28180": 262, "699410": 262, "eb": 262, "043861": 262, "005430": 262, "166321": 262, "131833": 262, "095934": 262, "130868": 262, "009154": 262, "017388": 262, "102019": 262, "283500": 262, "019417": 262, "099839": 262, "045946": 262, "059072": 262, "024270": 262, "189351": 262, "248536": 262, "091872": 262, "009545": 262, "012052": 262, "066151": 262, "293685": 262, "030236": 262, "074789": 262, "094502": 262, "147433": 262, "076820": 262, "105604": 262, "020051": 262, "066265": 262, "086035": 262, "023260": 262, "067138": 262, "030859": 262, "337255": 262, "035532": 262, "032579": 262, "028410": 262, "003589": 262, "080613": 262, "060233": 262, "052854": 262, "004469": 262, "057344": 262, "051992": 262, "212941": 262, "137510": 262, "004111": 262, "023282": 262, "302636": 262, "039069": 262, "119442": 262, "044956": 262, "263320": 262, "000776": 262, "083231": 262, "003150": 262, "012752": 262, "049654": 262, "080932": 262, "000555": 262, "099614": 262, "061864": 262, "332738": 262, "038156": 262, "067641": 262, "038017": 262, "184137": 262, "156617": 262, "208753": 262, "114558": 262, "053036": 262, "008405": 262, "026004": 262, "144920": 262, "081646": 262, "083320": 262, "015380": 262, "000392": 262, "078062": 262, "018966": 262, "112030": 262, "112715": 262, "383786": 262, "001730": 262, "167583": 262, "042068": 262, "066598": 262, "037600": 262, "000093": 262, "010662": 262, "009775": 262, "058306": 262, "229005": 262, "033958": 262, "008959": 262, "092312": 262, "050987": 262, "192569": 262, "002727": 262, "225657": 262, "115824": 262, "204269": 262, "054792": 262, "066334": 262, "123689": 262, "239678": 262, "047215": 262, "186615": 262, "000949": 262, "010812": 262, "015929": 262, "017213": 262, "005234": 262, "122552": 262, "076677": 262, "095696": 262, "024883": 262, "002999": 262, "007157": 262, "model_ref": 263, "easi": [263, 268], "pipelin": 263, "unfix_parameters_to": 263, "print_model_diff": 263, "ipython": 263, "pkmat": 263, "errori": 263, "pkcl": 263, "vd1": 263, "advan2": 263, "s2": 263, "vka": 263, "pkmdt": 263, "matd1": 263, "pop_mdt": 263, "advan5": 263, "trans1": 263, "defdos": 263, "transit4": 263, "s5": 263, "vk12": 263, "mdtk23": 263, "mdtk34": 263, "mdtk45": 263, "mdtk50": 263, "valag1": 263, "similarli": 263, "tol": 263, "pkkm": 263, "desdadt": 263, "pop_clmm": 263, "067": 263, "1358": 263, "pop_km": 263, "iiv_clmm": 263, "pkclmm": 263, "002346535": 263, "advan3": 263, "trans4": 263, "pkvp1": 263, "v1": 263, "v1q": 263, "qp1v2": 263, "pop_qp1": 263, "050458": 263, "pop_vp1": 263, "remove_ref": 263, "059618": 263, "advan11": 263, "pkvp2": 263, "v1q2": 263, "vp1q3": 263, "qp2v3": 263, "00046930699999999997": 263, "0529809": 263, "004223763": 263, "pop_qp2": 263, "pop_vp2": 263, "onto": 263, "pkwgt_median": 263, "30000cl": 263, "clwgt": 263, "wgt_median": 263, "clwgtv": 263, "pop_clwgt": 263, "user_effect": 263, "std": 263, "30000wgt_std": 263, "704565cl": 263, "wgt_std": 263, "pketab1": 263, "etab1": 263, "etab2": 263, "lambda2": 263, "analog": 263, "pketat1": 263, "384": 263, "etat1": 263, "pketad1": 263, "etad1": 263, "iiv_s1": 263, "eta_new": 263, "iiv_": 263, "pkiov_1": 263, "0if": 263, "iov_1": 263, "etai1": 263, "00309626": 263, "omega_iov_1": 263, "iov_2": 263, "etai2": 263, "0031128": 263, "omega_iov_2": 263, "pkdummyeta": 263, "dummyomega": 263, "isn": 263, "runnabl": 263, "epsilon_a": 263, "approx": 263, "taylor": 263, "epsilon_": 263, "epsilon_p": 263, "sigma_prop": [263, 272], "sigma_add": [263, 272], "iiv_ruv1": 263, "ruv1": 263, "power1": 263, "someim": 263, "correspondng": 263, "11506954418958998": 263, "errorw": 263, "fy": 263, "wif": 263, "THEN": 263, "1000000000end": 263, "ifi": 263, "tbs_lambda": 263, "tbs_zeta": 263, "ivcl0": 263, "0031045": 263, "iiv_cl_iiv_v0": 263, "model_block": 263, "445550": 263, "bootstrap_dir1": 263, "597341": 263, "039061": 263, "365446": 263, "019725": 263, "secondary_paramet": 263, "chapter": 264, "delai": [264, 275], "grammar": [264, 268], "exhaustive_stepwis": 264, "addition": [264, 275], "obtain": 264, "basi": 264, "subsequ": [264, 265, 275], "modelsearch_candidate2": [264, 275], "594608": 264, "1272": 264, "124874": 264, "modelsearch_candidate3": [264, 275], "558028": 264, "088295": 264, "modelsearch_candidate4": [264, 275], "956313": 264, "1270": 264, "486580": 264, "287000": 264, "1260": 264, "817266": 264, "362287": 264, "1327": 264, "153182": 264, "1325": 264, "551467": 264, "1307": 264, "301235": 264, "1303": 264, "1289": 264, "2927": 264, "4334": 264, "7778": 264, "0058": 264, "109": 264, "1640": 264, "260324": 264, "7646": 264, "824443": 264, "5477": 264, "607839": 264, "1147": 264, "842498": 264, "470974": 264, "595276": 264, "526185": 264, "930160": 264, "495109": 264, "322680": 264, "470531": 264, "515250": 264, "312692": 264, "194221": 264, "202201": 264, "207885": 264, "232322": 264, "199750": 264, "205369": 264, "193439": 264, "pop_qp1_estim": 264, "pop_vp1_estim": 264, "pop_mdt_estim": 264, "155413": 264, "89": 264, "4192": 264, "6100": 264, "172730": 264, "3977": 264, "4562": 264, "158070": 264, "8042": 264, "8517": 264, "iiv_mdt_estim": 264, "156289": 264, "192020": 264, "092419": 264, "262429": 264, "720369": 264, "464263": 264, "127061": 264, "906722": 264, "053781": 264, "923055": 264, "795863": 264, "030658": 264, "661330": 264, "168680": 264, "833073": 264, "041529": 264, "205858": 264, "064930": 264, "609673": 264, "396329": 264, "928556": 264, "365": 264, "330": 264, "topic": 265, "scheme": 265, "theta_cl": 265, "mention": [265, 277], "ve": 265, "despit": 265, "write_etas_in_abbr": 265, "altair": [266, 268], "vega": 266, "lite": 266, "ggplot": 266, "editor": 266, "clamp": 266, "vconcat": 266, "spec": 266, "inten": 267, "export": 267, "strictli": 267, "necessesari": 267, "detect_model": 267, "summer": 268, "master": 268, "thesi": 268, "internship": 268, "email": 268, "team": 268, "tox": 268, "pytest": 268, "sphinx": 268, "wise": 268, "known": 268, "trial": 268, "involv": 268, "outcom": 268, "research": 268, "350h": 268, "difficulti": 268, "mentor": 268, "scipi": 268, "focu": 268, "proof": 268, "concept": 268, "algebra": 268, "simul": [268, 274], "scratch": 268, "lark": 268, "earlei": 268, "lalr": 268, "much": 268, "stricter": 268, "175h": 268, "almost": 268, "compat": 268, "benefici": 268, "diff": 268, "potenti": 268, "eas": 268, "jupyt": 268, "holoview": 268, "bokeh": 268, "monitor": 268, "ongo": 268, "veri": [268, 277], "happen": 268, "converg": 268, "sort": [268, 275], "dashboard": 268, "complement": 268, "realtim": 268, "restart": [268, 277], "middl": 268, "worflow": 268, "dvid": [269, 271, 272], "autocorrel": [269, 271], "dtb": [269, 271], "91": [269, 271], "idv_varying_ruv": 269, "idv_varying_ruv_cutoff0": 269, "idv_varying_ruv_cutoff1": 269, "idv_varying_ruv_cutoff2": 269, "idv_varying_ruv_cutoff3": 269, "idv_varying_ruv_cutoff4": 269, "idv_varying_ruv_cutoff5": 269, "idv_varying_ruv_cutoff6": 269, "idv_varying_ruv_cutoff7": 269, "idv_varying_ruv_cutoff8": 269, "idv_varying_combin": 269, "idv_varying_theta": 269, "66": 269, "cv": [269, 271], "772": [269, 271], "042": [269, 271], "sdeps_0": [269, 271], "t1": 269, "298": 269, "sdeps_t1": 269, "t2": 269, "886": 269, "t0": [269, 271], "271": [269, 271], "sdeps_t0": [269, 271], "390": [269, 271], "956": [269, 271], "717": 269, "014": 269, "914": 269, "983": 269, "884": 269, "017": 269, "955": 269, "958": 269, "969": 269, "933": 269, "022": 269, "819": 269, "007": 269, "755": 269, "982": 269, "642": 269, "387": 269, "th_0": 269, "257": 269, "sdep": 269, "279": 269, "th_t1": 269, "124": 269, "th_t2": 269, "delta_pow": [269, 271], "037": [269, 271], "delet": 270, "diagnost": 270, "impact": 271, "improement": 271, "592698": 271, "197887": 271, "007493": 271, "521171": 271, "et1apgr": 271, "487930": 271, "residual_error_model": 271, "910000": 271, "030000": 271, "diagnos": 271, "structural_bia": 271, "cpred": 271, "binmin": 271, "binmax": 271, "binid": 271, "83": 271, "159": 271, "258": 271, "67": [271, 273], "strutur": 271, "mdel": 271, "fullblock_paramet": 271, "183463": 271, "171306": 271, "554610": 271, "154408": 271, "167053": 271, "cox": 271, "boxcox_paramet": 271, "shape": 271, "new_sd": 271, "old_sd": 271, "922083": 271, "182037": 271, "332800": 271, "166021": 271, "tdist_paramet": 271, "79": 271, "9997": 271, "168477": 271, "9986": 271, "166469": 271, "residual_error": 271, "additional_paramet": 271, "coeff": 271, "48793": 271, "033334": 271, "48218": 271, "052342": 271, "59034": 271, "008371": 271, "00887": 271, "003273": 271, "run_ruvsearch": 272, "set_time_varying_error_model": 272, "ibrahim": 272, "quickli": [272, 275], "assess": 272, "inde": 272, "cwres_model": 272, "479721": 272, "385268": 272, "002792": 272, "time_varying1": 272, "117041": 272, "time_varying2": 272, "555154": 272, "time_varying3": 272, "336641": 272, "091207": 272, "065738": 272, "654562": 272, "046578": 272, "519115": 272, "612710": 272, "643741": 272, "027766": 272, "000367": 272, "967365": 272, "00123": 272, "0976": 272, "12252": 272, "14299": 272, "000337": 272, "05242": 272, "006105": 272, "10545": 272, "12659": 272, "15573": 272, "00054": 272, "04769": 272, "030825": 272, "n_param": 272, "d_param": 272, "mox3": 272, "best_ruvsearch_1": 272, "best_ruvsearch_2": 272, "2460": 272, "704469": 272, "957378": 272, "2473": 272, "661847": 272, "269102": 272, "2495": 272, "973571": 272, "2444": 272, "2455": 272, "2475": 272, "2423": 272, "757516": 272, "2435": 272, "047712": 272, "2453": 272, "068976": 272, "71": 272, "pop_vc_estim": 272, "pop_mat_estim": 272, "707": 272, "5434": 272, "531596": 272, "105": 272, "794": 272, "3091": 272, "528620": 272, "3094": 272, "532547": 272, "iiv_vc_estim": 272, "iiv_vc_iiv_cl_estim": 272, "077743": 272, "038888": 272, "076793": 272, "039924": 272, "071628": 272, "038470": 272, "iiv_cl_estim": 272, "iiv_mat_estim": 272, "072309": 272, "704770": 272, "093311": 272, "074889": 272, "707665": 272, "081095": 272, "075048": 272, "705429": 272, "044311": 272, "iiv_ruv1_estim": 272, "time_varying_estim": 272, "039675": 272, "040734": 272, "42509": 272, "215727": 272, "655144": 272, "708324": 272, "762729": 272, "236530": 272, "229762": 272, "715966": 272, "423148": 272, "419741": 272, "774540": 272, "164274": 272, "450202": 272, "195425": 272, "960585": 272, "090461": 272, "848498": 272, "052021": 272, "239462": 272, "065148": 272, "571348": 272, "244582": 272, "161981": 272, "509910": 272, "373696": 272, "084489": 272, "647643": 272, "344772": 272, "083776": 272, "259395": 272, "101415": 272, "024651": 272, "443542": 272, "124023": 272, "183089": 272, "977222": 272, "219": 272, "moustafa": 272, "m": 272, "maria": 272, "kjellsson": 272, "aap": 272, "1208": 272, "s12248": 272, "018": 272, "0240": 272, "pha": 273, "219210": 273, "90878": 273, "219167": 273, "36222": 273, "bmi": 273, "219171": 273, "47564": 273, "cycll": 273, "219203": 273, "94536": 273, "diag": 273, "219206": 273, "01527": 273, "disdur": 273, "219032": 273, "86056": 273, "215321": 273, "70954": 273, "215306": 273, "67698": 273, "phia": 273, "men": 273, "215407": 273, "40295": 273, "phib": 273, "georeg": 273, "215373": 273, "77800": 273, "216968": 273, "25989": 273, "slp": 273, "215359": 273, "18150": 273, "54656": 273, "140000e": 273, "43314": 273, "390000e": 273, "96342": 273, "319000e": 273, "89351": 273, "695800e": 273, "178": 273, "04822": 273, "290000e": 273, "03256": 273, "060000e": 273, "72597": 273, "10102": 273, "580000e": 273, "1661": 273, "58291": 273, "50452": 273, "phaag": 273, "phabmi": 273, "phacycl": 273, "phadiag": 273, "phadisdur": 273, "backward_scm_dir1": 273, "phawt": 273, "phiamen": 273, "phibgeoreg": 273, "phibmen": 273, "slpgeoreg": 273, "304": 273, "beween": 273, "target": 273, "slightli": 273, "215961": 273, "46277": 273, "3249": 273, "44601": 273, "215748": 273, "07194": 273, "213": 273, "39083": 273, "215570": 273, "57352": 273, "49842": 273, "215486": 273, "23440": 273, "33912": 273, "87007": 273, "36433": 273, "215357": 273, "74693": 273, "61": 273, "12314": 273, "215337": 273, "95044": 273, "79649": 273, "24090": 273, "215332": 273, "91461": 273, "23763": 273, "67861": 273, "00163": 273, "215450": 273, "74783": 273, "07085": 273, "215491": 273, "11568": 273, "43870": 273, "500000e": 273, "700000e": 273, "170000e": 273, "260000e": 273, "360000e": 273, "600000e": 273, "020000e": 273, "620000e": 273, "430000e": 273, "200000e": 273, "did": 273, "lbest": 273, "cpl": 273, "165042": 274, "853273": 274, "488686": 274, "575351": 274, "230120": 274, "083424": 274, "533799": 274, "824880": 274, "300884": 274, "027733": 274, "180960": 274, "322738": 274, "916884": 274, "928279": 274, "654589": 274, "364078": 274, "546277": 274, "638247": 274, "795252": 274, "370783": 274, "351839": 274, "058260": 274, "136159": 274, "078494": 274, "957716": 274, "221459": 274, "775938": 274, "151210": 274, "823449": 274, "664634": 274, "135159": 274, "793703": 274, "551158": 274, "405150": 274, "527835": 274, "562788": 274, "330868": 274, "796073": 274, "406903": 274, "615899": 274, "328937": 274, "438225": 274, "486179": 274, "892761": 274, "818812": 274, "929665": 274, "924846": 274, "121901": 274, "849137": 274, "446579": 274, "247238": 274, "024193": 274, "512627": 274, "423537": 274, "615092": 274, "484284": 274, "548598": 274, "842566": 274, "705806": 274, "018308": 274, "114753": 274, "424024": 274, "638560": 274, "056381": 274, "664954": 274, "178961": 274, "413680": 274, "622712": 274, "449888": 274, "282087": 274, "238692": 274, "704503": 274, "361556": 274, "138213": 274, "678095": 274, "713778": 274, "026935": 274, "422555": 274, "929655": 274, "166879": 274, "335429": 274, "009725": 274, "266944": 274, "563473": 274, "567697": 274, "461262": 274, "459161": 274, "212573": 274, "959843": 274, "388393": 274, "501489": 274, "260472": 274, "003027": 274, "811596": 274, "277388": 274, "219194": 274, "398492": 274, "380865": 274, "786560": 274, "366018": 274, "630512": 274, "191401": 274, "546036": 274, "612812": 274, "961895": 274, "816485": 274, "553003": 274, "682987": 274, "584818": 274, "231970": 274, "776532": 274, "846457": 274, "802797": 274, "892200": 274, "988276": 274, "015416": 274, "207434": 274, "662582": 274, "018880": 274, "725509": 274, "838099": 274, "434087": 274, "488859": 274, "250063": 274, "212538": 274, "297823": 274, "599116": 274, "743671": 274, "944073": 274, "140249": 274, "409142": 274, "831345": 274, "880881": 274, "485191": 274, "659430": 274, "755737": 274, "901408": 274, "630846": 274, "733704": 274, "775355": 274, "851982": 274, "693935": 274, "483346": 274, "707700": 274, "794788": 274, "401748": 274, "905528": 274, "793645": 274, "538437": 274, "382384": 274, "926835": 274, "186642": 274, "928532": 274, "196475": 274, "498709": 274, "985533": 274, "773375": 274, "366585": 274, "848184": 274, "497867": 274, "551558": 274, "762211": 274, "551208": 274, "572217": 274, "565811": 274, "042324": 274, "056323": 274, "552114": 274, "298009": 274, "630121": 274, "406685": 274, "370226": 274, "040276": 274, "361844": 274, "035731": 274, "496993": 274, "597045": 274, "515088": 274, "169391": 274, "957232": 274, "454421": 274, "400720": 274, "751915": 274, "106708": 274, "361498": 274, "889492": 274, "974785": 274, "952586": 274, "904024": 274, "024682": 274, "835458": 274, "886356": 274, "073683": 274, "840067": 274, "575363": 274, "819836": 274, "712658": 274, "879430": 274, "884553": 274, "253049": 274, "285544": 274, "044583": 274, "178975": 274, "893425": 274, "497236": 274, "277992": 274, "360173": 274, "264764": 274, "046265": 274, "765897": 274, "688954": 274, "414926": 274, "572606": 274, "684344": 274, "586789": 274, "841335": 274, "907778": 274, "244786": 274, "493584": 274, "249772": 274, "253768": 274, "362886": 274, "416676": 274, "933397": 274, "659481": 274, "731451": 274, "988252": 274, "069317": 274, "178177": 274, "936980": 274, "746436": 274, "517867": 274, "716822": 274, "477206": 274, "605768": 274, "763155": 274, "346212": 274, "125029": 274, "408266": 274, "980420": 274, "686115": 274, "462547": 274, "583418": 274, "337790": 274, "811144": 274, "043157": 274, "036534": 274, "363551": 274, "195385": 274, "031564": 274, "225458": 274, "378125": 274, "892175": 274, "016286": 274, "525306": 274, "699366": 274, "269137": 274, "242420": 274, "846592": 274, "404922": 274, "509957": 274, "448461": 274, "512603": 274, "243399": 274, "815026": 274, "481351": 274, "541949": 274, "175264": 274, "933824": 274, "926077": 274, "371639": 274, "194473": 274, "087071": 274, "944302": 274, "344235": 274, "663661": 274, "550825": 274, "611250": 274, "735586": 274, "308617": 274, "500411": 274, "875052": 274, "860290": 274, "556035": 274, "631308": 274, "881148": 274, "432371": 274, "153441": 274, "874004": 274, "758791": 274, "366355": 274, "323449": 274, "054769": 274, "133006": 274, "215148": 274, "921633": 274, "860736": 274, "993262": 274, "946876": 274, "568383": 274, "905658": 274, "604188": 274, "376218": 274, "313336": 274, "467337": 274, "898802": 274, "542369": 274, "472019": 274, "773450": 274, "873918": 274, "318875": 274, "600450": 274, "899285": 274, "526828": 274, "104682": 274, "230477": 274, "293600": 274, "354616": 274, "479966": 274, "376893": 274, "884839": 274, "432346": 274, "114640": 274, "367480": 274, "694969": 274, "408347": 274, "054791": 274, "387386": 274, "867625": 274, "864669": 274, "853355": 274, "078385": 274, "280139": 274, "695800": 274, "882876": 274, "631655": 274, "541680": 274, "037941": 274, "758919": 274, "316351": 274, "708577": 274, "814952": 274, "937635": 274, "989005": 274, "715708": 274, "462408": 274, "621329": 274, "383043": 274, "179394": 274, "110075": 274, "676905": 274, "218010": 274, "905147": 274, "956306": 274, "051986": 274, "534496": 274, "445912": 274, "767349": 274, "900845": 274, "876780": 274, "822404": 274, "749003": 274, "924166": 274, "565671": 274, "196823": 274, "115117": 274, "341361": 274, "851698": 274, "806515": 274, "086788": 274, "429352": 274, "296737": 274, "516464": 274, "191840": 274, "574667": 274, "793265": 274, "956378": 274, "874349": 274, "912201": 274, "668763": 274, "676572": 274, "069326": 274, "455902": 274, "954047": 274, "077897": 274, "425364": 274, "731336": 274, "819544": 274, "030662": 274, "504667": 274, "843029": 274, "662370": 274, "455400": 274, "187278": 274, "580405": 274, "502366": 274, "802175": 274, "275622": 274, "305631": 274, "639042": 274, "155311": 274, "544260": 274, "977219": 274, "363698": 274, "022410": 274, "641421": 274, "434510": 274, "424237": 274, "853009": 274, "073635": 274, "098997": 274, "374133": 274, "169888": 274, "963905": 274, "415675": 274, "564632": 274, "351619": 274, "396594": 274, "695028": 274, "255630": 274, "358567": 274, "516160": 274, "408061": 274, "496109": 274, "916145": 274, "297200": 274, "222423": 274, "744242": 274, "606428": 274, "206488": 274, "269584": 274, "693535": 274, "911020": 274, "737404": 274, "764024": 274, "453899": 274, "132983": 274, "133073": 274, "783555": 274, "105503": 274, "027851": 274, "972480": 274, "850645": 274, "402983": 274, "723710": 274, "052073": 274, "032512": 274, "408322": 274, "435102": 274, "788249": 274, "159667": 274, "589215": 274, "777419": 274, "625663": 274, "923185": 274, "416254": 274, "907322": 274, "824234": 274, "418469": 274, "606033": 274, "903583": 274, "675347": 274, "584165": 274, "501681": 274, "271405": 274, "824837": 274, "372005": 274, "876965": 274, "348849": 274, "357159": 274, "885439": 274, "iofv_summari": 274, "orgin": 274, "ob": 274, "sampled_median": 274, "sampled_stdev": 274, "residual_q1": 274, "743042": 274, "269351": 274, "092721": 274, "132107": 274, "049484": 274, "062882": 274, "923433": 274, "032842": 274, "903729": 274, "041599": 274, "666016": 274, "588530": 274, "233558": 274, "813525": 274, "338707": 274, "262659": 274, "651808": 274, "842347": 274, "092618": 274, "607326": 274, "763450": 274, "426016": 274, "953150": 274, "344659": 274, "002809": 274, "839617": 274, "390660": 274, "093249": 274, "843159": 274, "761625": 274, "066485": 274, "562593": 274, "515891": 274, "678375": 274, "587563": 274, "846506": 274, "321253": 274, "931536": 274, "511037": 274, "243040": 274, "313767": 274, "998817": 274, "190685": 274, "266501": 274, "243372": 274, "216676": 274, "334541": 274, "088609": 274, "030344": 274, "099508": 274, "626027": 274, "236755": 274, "682470": 274, "271061": 274, "322169": 274, "889854": 274, "855528": 274, "232988": 274, "221102": 274, "260479": 274, "297037": 274, "100632": 274, "978394": 274, "671231": 274, "588077": 274, "600891": 274, "572710": 274, "088513": 274, "331370": 274, "651006": 274, "383926": 274, "621596": 274, "936751": 274, "638334": 274, "863723": 274, "802597": 274, "124775": 274, "712276": 274, "541296": 274, "902641": 274, "054733": 274, "087013": 274, "019852": 274, "185274": 274, "299915": 274, "071925": 274, "504540": 274, "056317": 274, "177399": 274, "404555": 274, "347654": 274, "490854": 274, "248420": 274, "402107": 274, "172721": 274, "309188": 274, "612652": 274, "605320": 274, "387170": 274, "916585": 274, "723804": 274, "814910": 274, "320602": 274, "089383": 274, "193802": 274, "746322": 274, "453306": 274, "888849": 274, "347721": 274, "796098": 274, "427890": 274, "964192": 274, "509526": 274, "553605": 274, "595254": 274, "940021": 274, "187065": 274, "218493": 274, "446771": 274, "021723": 274, "143293": 274, "077425": 274, "553705": 274, "963659": 274, "230769": 274, "941064": 274, "345041": 274, "355392": 274, "177536": 274, "564686": 274, "074840": 274, "501228": 274, "910681": 274, "928524": 274, "255799": 274, "746242": 274, "724151": 274, "284455": 274, "111385": 274, "103779": 274, "602531": 274, "057843": 274, "201646": 274, "908651": 274, "880337": 274, "368175": 274, "066179": 274, "743926": 274, "503126": 274, "881606": 274, "250884": 274, "047349": 274, "844822": 274, "189370": 274, "511282": 274, "270109": 274, "430602": 274, "221208": 274, "868376": 274, "958375": 274, "098127": 274, "780755": 274, "635224": 274, "985409": 274, "809369": 274, "378962": 274, "211565": 274, "057646": 274, "205194": 274, "036416": 274, "193803": 274, "429374": 274, "204566": 274, "181809": 274, "278418": 274, "598975": 274, "337763": 274, "785971": 274, "413662": 274, "606782": 274, "709391": 274, "881992": 274, "864932": 274, "303395": 274, "084555": 274, "219260": 274, "154550": 274, "785024": 274, "694892": 274, "512588": 274, "121911": 274, "906081": 274, "693733": 274, "669899": 274, "053933": 274, "229621": 274, "686649": 274, "489669": 274, "193242": 274, "455548": 274, "756085": 274, "871678": 274, "683725": 274, "788305": 274, "441965": 274, "980475": 274, "053564": 274, "483885": 274, "840129": 274, "161657": 274, "813878": 274, "634209": 274, "574414": 274, "214315": 274, "235064": 274, "837522": 274, "929402": 274, "427740": 274, "521014": 274, "392308": 274, "944092": 274, "407457": 274, "879179": 274, "753044": 274, "057118": 274, "900168": 274, "579183": 274, "047295": 274, "069060": 274, "430617": 274, "023015": 274, "749906": 274, "157977": 274, "117461": 274, "010968": 274, "974584": 274, "052094": 274, "650140": 274, "206923": 274, "302385": 274, "557865": 274, "806373": 274, "733736": 274, "309462": 274, "292477": 274, "034161": 274, "253204": 274, "515730": 274, "067793": 274, "328308": 274, "941486": 274, "862193": 274, "275903": 274, "359860": 274, "865778": 274, "461685": 274, "346120": 274, "040796": 274, "340902": 274, "669504": 274, "165811": 274, "006993": 274, "056961": 274, "515114": 274, "073228": 274, "455873": 274, "041631": 274, "121517": 274, "970391": 274, "151516": 274, "604970": 274, "314527": 274, "639192": 274, "701809": 274, "559444": 274, "756955": 274, "240398": 274, "residual_q3": 274, "residual_outli": 274, "101924": 274, "045535": 274, "234064": 274, "025423": 274, "109899": 274, "625316": 274, "268882": 274, "574353": 274, "419169": 274, "807045": 274, "159688": 274, "667537": 274, "022651": 274, "630322": 274, "291458": 274, "309807": 274, "105832": 274, "301714": 274, "720484": 274, "289277": 274, "953368": 274, "653632": 274, "126620": 274, "673619": 274, "333709": 274, "076368": 274, "549693": 274, "158992": 274, "824096": 274, "026303": 274, "658756": 274, "145689": 274, "986494": 274, "095503": 274, "364901": 274, "552261": 274, "588452": 274, "301528": 274, "219416": 274, "359428": 274, "174344": 274, "432004": 274, "734733": 274, "135789": 274, "237813": 274, "693671": 274, "260535": 274, "184885": 274, "364894": 274, "772187": 274, "236023": 274, "845436": 274, "707608": 274, "626422": 274, "497515": 274, "963228": 274, "904840": 274, "701781": 274, "338779": 274, "individual_predictions_plot": 274, "trim": 275, "modelsearch_dir1": 275, "hash": 275, "mytab_mox1": 275, "subfold": 275, "temporari": 275, "finish": 275, "recreat": 275, "frame": [275, 277], "programmat": 275, "pharmpy_vers": 275, "tool_nam": 275, "start_tim": 275, "22t14": 275, "312240": 275, "end_tim": 275, "592109": 275, "common_opt": 275, "tmp": 275, "tool_result": 275, "locat": 275, "concis": 275, "newlin": 275, "semi": 275, "colon": 275, "endpoint": 275, "wildcard": 275, "nodepot": 275, "autom": 275, "gotcha": 276, "mirror": 277, "cran": 277, "reticul": 277, "remot": 277, "install_github": 277, "ref": 277, "install_pharmpi": 277, "session": 277, "successfulli": 277, "packagevers": 277, "print_pharmpy_vers": 277, "miniconda": 277, "py_discover_config": 277, "conda_cr": 277, "python_vers": 277, "virtual": 277, "someth": 277, "libpython": 277, "lib": 277, "libpython3": 277, "pipe": 277, "magrittr": 277, "model_a": 277, "model_b": 277, "reset_index": 277, "5l": 277, "input_model": 277}, "objects": {"pharmpy": [[236, 0, 0, "-", "model"], [237, 0, 0, "-", "modeling"], [238, 0, 0, "-", "tools"], [239, 0, 0, "-", "workflows"], [244, 6, 1, "cmdoption-pharmpy-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-version", "--version"], [244, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "ExplicitODESystem"], [17, 1, 1, "", "Infusion"], [18, 1, 1, "", "JointNormalDistribution"], [19, 1, 1, "", "Model"], [20, 4, 1, "", "ModelError"], [21, 4, 1, "", "ModelSyntaxError"], [22, 4, 1, "", "ModelfitResultsError"], [23, 1, 1, "", "NormalDistribution"], [24, 1, 1, "", "ODESystem"], [25, 1, 1, "", "Parameter"], [26, 1, 1, "", "Parameters"], [27, 1, 1, "", "RandomVariables"], [28, 1, 1, "", "Results"], [29, 1, 1, "", "Statement"], [30, 1, 1, "", "Statements"], [31, 1, 1, "", "VariabilityHierarchy"], [32, 1, 1, "", "VariabilityLevel"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "subs"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 3, 1, "", "datatype"], [6, 2, 1, "", "derive"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 3, 1, "", "scale"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "subs"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 3, 1, "", "dosing_compartment"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "output_compartment"], [8, 3, 1, "", "peripheral_compartments"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 2, 1, "", "to_compartmental_system"], [8, 2, 1, "", "to_explicit_system"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "derive"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "derive"], [13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "derive"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "to_dataframe"]], "pharmpy.model.ExplicitODESystem": [[16, 3, 1, "", "amounts"], [16, 3, 1, "", "compartment_names"], [16, 3, 1, "", "free_symbols"], [16, 3, 1, "", "ics"], [16, 3, 1, "", "odes"], [16, 3, 1, "", "rhs_symbols"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_compartmental_system"], [16, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Infusion": [[17, 3, 1, "", "amount"], [17, 2, 1, "", "create"], [17, 3, 1, "", "duration"], [17, 3, 1, "", "free_symbols"], [17, 3, 1, "", "rate"], [17, 2, 1, "", "subs"]], "pharmpy.model.JointNormalDistribution": [[18, 2, 1, "", "create"], [18, 2, 1, "", "derive"], [18, 2, 1, "", "evalf"], [18, 3, 1, "", "free_symbols"], [18, 2, 1, "", "get_covariance"], [18, 2, 1, "", "get_variance"], [18, 2, 1, "", "latex_string"], [18, 3, 1, "", "level"], [18, 3, 1, "", "mean"], [18, 3, 1, "", "names"], [18, 2, 1, "", "subs"], [18, 3, 1, "", "variance"]], "pharmpy.model.Model": [[19, 2, 1, "", "copy"], [19, 2, 1, "", "create_model"], [19, 3, 1, "", "datainfo"], [19, 3, 1, "", "dataset"], [19, 3, 1, "", "dependent_variable"], [19, 3, 1, "", "description"], [19, 3, 1, "", "estimation_steps"], [19, 3, 1, "", "filename_extension"], [19, 2, 1, "", "has_same_dataset_as"], [19, 3, 1, "", "initial_individual_estimates"], [19, 3, 1, "", "model_code"], [19, 3, 1, "", "modelfit_results"], [19, 3, 1, "", "name"], [19, 3, 1, "", "observation_transformation"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "parent_model"], [19, 3, 1, "", "random_variables"], [19, 3, 1, "", "statements"], [19, 2, 1, "", "update_datainfo"], [19, 3, 1, "", "value_type"]], "pharmpy.model.NormalDistribution": [[23, 2, 1, "", "create"], [23, 2, 1, "", "derive"], [23, 2, 1, "", "evalf"], [23, 3, 1, "", "free_symbols"], [23, 2, 1, "", "get_covariance"], [23, 2, 1, "", "get_variance"], [23, 2, 1, "", "latex_string"], [23, 3, 1, "", "level"], [23, 3, 1, "", "mean"], [23, 3, 1, "", "names"], [23, 2, 1, "", "subs"], [23, 3, 1, "", "variance"]], "pharmpy.model.ODESystem": [[24, 2, 1, "", "to_compartmental_system"], [24, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Parameter": [[25, 2, 1, "", "create"], [25, 2, 1, "", "derive"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "init"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "name"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[26, 3, 1, "", "fix"], [26, 3, 1, "", "fixed"], [26, 3, 1, "", "inits"], [26, 3, 1, "", "lower"], [26, 3, 1, "", "names"], [26, 3, 1, "", "nonfixed"], [26, 2, 1, "", "set_fix"], [26, 2, 1, "", "set_initial_estimates"], [26, 3, 1, "", "symbols"], [26, 2, 1, "", "to_dataframe"], [26, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[27, 3, 1, "", "covariance_matrix"], [27, 2, 1, "", "create"], [27, 2, 1, "", "derive"], [27, 3, 1, "", "epsilon_levels"], [27, 3, 1, "", "epsilons"], [27, 3, 1, "", "eta_levels"], [27, 3, 1, "", "etas"], [27, 3, 1, "", "free_symbols"], [27, 2, 1, "", "get_covariance"], [27, 2, 1, "", "get_rvs_with_same_dist"], [27, 3, 1, "", "iiv"], [27, 3, 1, "", "iov"], [27, 2, 1, "", "join"], [27, 3, 1, "", "names"], [27, 2, 1, "", "nearest_valid_parameters"], [27, 3, 1, "", "nrvs"], [27, 3, 1, "", "parameter_names"], [27, 2, 1, "", "parameters_sdcorr"], [27, 2, 1, "", "sample"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "unjoin"], [27, 2, 1, "", "validate_parameters"], [27, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_and_reset_index"], [28, 2, 1, "", "to_csv"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[29, 3, 1, "", "free_symbols"], [29, 3, 1, "", "rhs_symbols"], [29, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[30, 3, 1, "", "after_odes"], [30, 3, 1, "", "before_odes"], [30, 2, 1, "", "dependencies"], [30, 2, 1, "", "direct_dependencies"], [30, 3, 1, "", "error"], [30, 2, 1, "", "find_assignment"], [30, 2, 1, "", "find_assignment_index"], [30, 3, 1, "", "free_symbols"], [30, 2, 1, "", "full_expression"], [30, 3, 1, "", "ode_system"], [30, 2, 1, "", "reassign"], [30, 2, 1, "", "remove_symbol_definitions"], [30, 2, 1, "", "subs"], [30, 2, 1, "", "to_compartmental_system"], [30, 2, 1, "", "to_explicit_system"]], "pharmpy.model.VariabilityHierarchy": [[31, 3, 1, "", "levels"], [31, 3, 1, "", "names"]], "pharmpy.model.VariabilityLevel": [[32, 3, 1, "", "group"], [32, 3, 1, "", "name"], [32, 3, 1, "", "reference"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_peripheral_compartment"], [42, 5, 1, "", "add_pk_iiv"], [43, 5, 1, "", "add_population_parameter"], [44, 5, 1, "", "add_time_after_dose"], [45, 5, 1, "", "append_estimation_step_options"], [46, 5, 1, "", "bump_model_number"], [47, 5, 1, "", "calculate_aic"], [48, 5, 1, "", "calculate_bic"], [49, 5, 1, "", "calculate_corr_from_cov"], [50, 5, 1, "", "calculate_corr_from_inf"], [51, 5, 1, "", "calculate_cov_from_corrse"], [52, 5, 1, "", "calculate_cov_from_inf"], [53, 5, 1, "", "calculate_epsilon_gradient_expression"], [54, 5, 1, "", "calculate_eta_gradient_expression"], [55, 5, 1, "", "calculate_eta_shrinkage"], [56, 5, 1, "", "calculate_individual_parameter_statistics"], [57, 5, 1, "", "calculate_individual_shrinkage"], [58, 5, 1, "", "calculate_inf_from_corrse"], [59, 5, 1, "", "calculate_inf_from_cov"], [60, 5, 1, "", "calculate_parameters_from_ucp"], [61, 5, 1, "", "calculate_pk_parameters_statistics"], [62, 5, 1, "", "calculate_se_from_cov"], [63, 5, 1, "", "calculate_se_from_inf"], [64, 5, 1, "", "calculate_ucp_scale"], [65, 5, 1, "", "check_dataset"], [66, 5, 1, "", "check_high_correlations"], [67, 5, 1, "", "check_parameters_near_bounds"], [68, 5, 1, "", "cleanup_model"], [69, 5, 1, "", "convert_model"], [70, 5, 1, "", "copy_model"], [71, 5, 1, "", "create_joint_distribution"], [72, 5, 1, "", "create_report"], [73, 5, 1, "", "create_rng"], [74, 5, 1, "", "create_symbol"], [75, 5, 1, "", "drop_columns"], [76, 5, 1, "", "drop_dropped_columns"], [77, 5, 1, "", "evaluate_epsilon_gradient"], [78, 5, 1, "", "evaluate_eta_gradient"], [79, 5, 1, "", "evaluate_expression"], [80, 5, 1, "", "evaluate_individual_prediction"], [81, 5, 1, "", "evaluate_population_prediction"], [82, 5, 1, "", "evaluate_weighted_residuals"], [83, 5, 1, "", "expand_additional_doses"], [84, 5, 1, "", "find_clearance_parameters"], [85, 5, 1, "", "find_volume_parameters"], [86, 5, 1, "", "fix_or_unfix_parameters"], [87, 5, 1, "", "fix_parameters"], [88, 5, 1, "", "fix_parameters_to"], [89, 5, 1, "", "generate_model_code"], [90, 5, 1, "", "get_baselines"], [91, 5, 1, "", "get_bioavailability"], [92, 5, 1, "", "get_cmt"], [93, 5, 1, "", "get_concentration_parameters_from_data"], [94, 5, 1, "", "get_config_path"], [95, 5, 1, "", "get_covariate_baselines"], [96, 5, 1, "", "get_doseid"], [97, 5, 1, "", "get_doses"], [98, 5, 1, "", "get_evid"], [99, 5, 1, "", "get_ids"], [100, 5, 1, "", "get_individual_parameters"], [101, 5, 1, "", "get_individual_prediction_expression"], [102, 5, 1, "", "get_lag_times"], [103, 5, 1, "", "get_mdv"], [104, 5, 1, "", "get_model_covariates"], [105, 5, 1, "", "get_number_of_individuals"], [106, 5, 1, "", "get_number_of_observations"], [107, 5, 1, "", "get_number_of_observations_per_individual"], [108, 5, 1, "", "get_observation_expression"], [109, 5, 1, "", "get_observations"], [110, 5, 1, "", "get_omegas"], [111, 5, 1, "", "get_pk_parameters"], [112, 5, 1, "", "get_population_prediction_expression"], [113, 5, 1, "", "get_rv_parameters"], [114, 5, 1, "", "get_sigmas"], [115, 5, 1, "", "get_thetas"], [116, 5, 1, "", "get_unit_of"], [117, 5, 1, "", "greekify_model"], [118, 5, 1, "", "has_additive_error_model"], [119, 5, 1, "", "has_combined_error_model"], [120, 5, 1, "", "has_covariate_effect"], [121, 5, 1, "", "has_first_order_elimination"], [122, 5, 1, "", "has_michaelis_menten_elimination"], [123, 5, 1, "", "has_mixed_mm_fo_elimination"], [124, 5, 1, "", "has_proportional_error_model"], [125, 5, 1, "", "has_random_effect"], [126, 5, 1, "", "has_zero_order_absorption"], [127, 5, 1, "", "has_zero_order_elimination"], [128, 5, 1, "", "list_time_varying_covariates"], [129, 5, 1, "", "load_example_model"], [130, 5, 1, "", "make_declarative"], [131, 5, 1, "", "mu_reference_model"], [132, 5, 1, "", "omit_data"], [133, 5, 1, "", "plot_individual_predictions"], [134, 5, 1, "", "plot_iofv_vs_iofv"], [135, 5, 1, "", "print_model_code"], [136, 5, 1, "", "print_model_symbols"], [137, 5, 1, "", "read_dataset_from_datainfo"], [138, 5, 1, "", "read_model"], [139, 5, 1, "", "read_model_from_database"], [140, 5, 1, "", "read_model_from_string"], [141, 5, 1, "", "remove_covariance_step"], [142, 5, 1, "", "remove_covariate_effect"], [143, 5, 1, "", "remove_error_model"], [144, 5, 1, "", "remove_estimation_step"], [145, 5, 1, "", "remove_iiv"], [146, 5, 1, "", "remove_iov"], [147, 5, 1, "", "remove_lag_time"], [148, 5, 1, "", "remove_loq_data"], [149, 5, 1, "", "remove_peripheral_compartment"], [150, 5, 1, "", "remove_unused_parameters_and_rvs"], [151, 5, 1, "", "rename_symbols"], [152, 5, 1, "", "resample_data"], [153, 5, 1, "", "sample_individual_estimates"], [154, 5, 1, "", "sample_parameters_from_covariance_matrix"], [155, 5, 1, "", "sample_parameters_uniformly"], [156, 5, 1, "", "set_additive_error_model"], [157, 5, 1, "", "set_bolus_absorption"], [158, 5, 1, "", "set_combined_error_model"], [159, 5, 1, "", "set_covariates"], [160, 5, 1, "", "set_dtbs_error_model"], [161, 5, 1, "", "set_estimation_step"], [162, 5, 1, "", "set_evaluation_step"], [163, 5, 1, "", "set_first_order_absorption"], [164, 5, 1, "", "set_first_order_elimination"], [165, 5, 1, "", "set_iiv_on_ruv"], [166, 5, 1, "", "set_initial_estimates"], [167, 5, 1, "", "set_lower_bounds"], [168, 5, 1, "", "set_michaelis_menten_elimination"], [169, 5, 1, "", "set_mixed_mm_fo_elimination"], [170, 5, 1, "", "set_name"], [171, 5, 1, "", "set_ode_solver"], [172, 5, 1, "", "set_peripheral_compartments"], [173, 5, 1, "", "set_power_on_ruv"], [174, 5, 1, "", "set_proportional_error_model"], [175, 5, 1, "", "set_seq_zo_fo_absorption"], [176, 5, 1, "", "set_time_varying_error_model"], [177, 5, 1, "", "set_transit_compartments"], [178, 5, 1, "", "set_upper_bounds"], [179, 5, 1, "", "set_weighted_error_model"], [180, 5, 1, "", "set_zero_order_absorption"], [181, 5, 1, "", "set_zero_order_elimination"], [182, 5, 1, "", "simplify_expression"], [183, 5, 1, "", "solve_ode_system"], [184, 5, 1, "", "split_joint_distribution"], [185, 5, 1, "", "transform_etas_boxcox"], [186, 5, 1, "", "transform_etas_john_draper"], [187, 5, 1, "", "transform_etas_tdist"], [188, 5, 1, "", "translate_nmtran_time"], [189, 5, 1, "", "unconstrain_parameters"], [190, 5, 1, "", "undrop_columns"], [191, 5, 1, "", "unfix_parameters"], [192, 5, 1, "", "unfix_parameters_to"], [193, 5, 1, "", "update_initial_individual_estimates"], [194, 5, 1, "", "update_inits"], [195, 5, 1, "", "use_thetas_for_error_stdev"], [196, 5, 1, "", "write_csv"], [197, 5, 1, "", "write_model"]], "pharmpy.tools": [[198, 5, 1, "", "create_results"], [199, 5, 1, "", "fit"], [200, 5, 1, "", "predict_influential_individuals"], [201, 5, 1, "", "predict_influential_outliers"], [202, 5, 1, "", "predict_outliers"], [203, 5, 1, "", "print_fit_summary"], [204, 5, 1, "", "rank_models"], [205, 5, 1, "", "read_results"], [206, 5, 1, "", "retrieve_final_model"], [207, 5, 1, "", "retrieve_models"], [208, 5, 1, "", "run_allometry"], [209, 5, 1, "", "run_amd"], [210, 5, 1, "", "run_covsearch"], [211, 5, 1, "", "run_iivsearch"], [212, 5, 1, "", "run_iovsearch"], [213, 5, 1, "", "run_modelsearch"], [214, 5, 1, "", "run_ruvsearch"], [215, 5, 1, "", "run_tool"], [216, 5, 1, "", "summarize_errors"], [217, 5, 1, "", "summarize_individuals"], [218, 5, 1, "", "summarize_individuals_count_table"], [219, 5, 1, "", "summarize_modelfit_results"], [220, 5, 1, "", "write_results"]], "pharmpy.workflows": [[221, 1, 1, "", "LocalDirectoryDatabase"], [222, 1, 1, "", "LocalDirectoryToolDatabase"], [223, 1, 1, "", "LocalModelDirectoryDatabase"], [224, 1, 1, "", "Log"], [225, 1, 1, "", "ModelDatabase"], [226, 1, 1, "", "NullModelDatabase"], [227, 1, 1, "", "NullToolDatabase"], [228, 1, 1, "", "Task"], [229, 1, 1, "", "ToolDatabase"], [230, 1, 1, "", "Workflow"], [231, 5, 1, "", "call_workflow"], [232, 3, 1, "", "default_model_database"], [233, 3, 1, "", "default_tool_database"], [234, 5, 1, "", "execute_workflow"], [235, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[221, 2, 1, "", "retrieve_file"], [221, 2, 1, "", "retrieve_local_files"], [221, 2, 1, "", "retrieve_model"], [221, 2, 1, "", "retrieve_modelfit_results"], [221, 2, 1, "", "store_local_file"], [221, 2, 1, "", "store_metadata"], [221, 2, 1, "", "store_model"], [221, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[222, 2, 1, "", "from_dict"], [222, 2, 1, "", "read_metadata"], [222, 2, 1, "", "store_local_file"], [222, 2, 1, "", "store_metadata"], [222, 2, 1, "", "store_results"], [222, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[223, 2, 1, "", "list_models"], [223, 2, 1, "", "snapshot"], [223, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[224, 2, 1, "", "from_dict"], [224, 3, 1, "", "log"], [224, 2, 1, "", "log_error"], [224, 2, 1, "", "log_warning"], [224, 2, 1, "", "to_dataframe"], [224, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[225, 2, 1, "", "retrieve_file"], [225, 2, 1, "", "retrieve_local_files"], [225, 2, 1, "", "retrieve_model"], [225, 2, 1, "", "retrieve_modelfit_results"], [225, 2, 1, "", "snapshot"], [225, 2, 1, "", "store_local_file"], [225, 2, 1, "", "store_metadata"], [225, 2, 1, "", "store_model"], [225, 2, 1, "", "store_modelfit_results"], [225, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[226, 2, 1, "", "retrieve_file"], [226, 2, 1, "", "retrieve_local_files"], [226, 2, 1, "", "retrieve_model"], [226, 2, 1, "", "retrieve_modelfit_results"], [226, 2, 1, "", "store_local_file"], [226, 2, 1, "", "store_metadata"], [226, 2, 1, "", "store_model"], [226, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[227, 2, 1, "", "store_local_file"], [227, 2, 1, "", "store_results"]], "pharmpy.workflows.Task": [[228, 2, 1, "", "has_input"]], "pharmpy.workflows.ToolDatabase": [[229, 3, 1, "", "model_database"], [229, 2, 1, "", "store_local_file"], [229, 2, 1, "", "store_results"]], "pharmpy-data-anonymize": [[244, 6, 1, "cmdoption-pharmpy-data-anonymize-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-group", "--group"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-data-anonymize-arg-file", "file"]], "pharmpy-data-append": [[244, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [244, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-filter": [[244, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [244, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[244, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [244, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[244, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [244, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [244, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [244, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [244, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [244, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [244, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[244, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[244, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[244, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[244, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[244, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[244, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[244, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [244, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[244, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[244, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [244, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[244, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[244, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [244, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [244, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[244, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[244, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [244, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [244, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [244, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [244, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[244, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[244, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[244, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[244, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [244, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [244, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [244, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[244, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[244, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[244, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[244, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[244, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[244, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[244, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[244, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[244, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[244, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[244, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[244, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [244, 6, 1, "cmdoption-pharmpy-run-amd-categorical", "--categorical"], [244, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [244, 6, 1, "cmdoption-pharmpy-run-amd-continuous", "--continuous"], [244, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-amd-lloq", "--lloq"], [244, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [244, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [244, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [244, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [244, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [244, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [244, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[244, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [244, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[244, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[244, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [244, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [244, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[244, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[244, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [244, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[244, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[244, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [244, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [244, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[244, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [244, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 265], "dataset": [0, 251, 275], "overview": [0, 267, 271], "pars": 0, "translat": 0, "step": [0, 273], "nm": 0, "tran": 0, "comment": 0, "line": [0, 244], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 251, 263], "date": 0, "id": 0, "check": [0, 247], "tabl": 0, "file": [0, 246, 251, 263], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 247], "all": 0, "zero": [0, 263], "individu": [0, 240, 241, 254, 260, 262, 263, 274], "control": 0, "stream": 0, "gener": [0, 259], "option": [0, 239, 275], "problem": 0, "data": [0, 239, 244], "eta": [0, 263], "code": [0, 245, 247, 261, 263], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 28, 240, 241, 244, 249, 250, 254, 256, 258, 260, 261, 262, 263, 264, 269, 271, 272, 273, 274, 275], "spars": 0, "matrix": [0, 240, 262], "allometri": [1, 2, 244], "run": [1, 2, 244, 247, 249, 256, 258, 263, 264, 272, 275], "argument": [1, 2, 249, 256, 258, 264, 272], "procedur": [1, 272], "The": [1, 240, 241, 244, 246, 250, 252, 254, 256, 260, 261, 263, 264, 269, 271, 272, 273, 274, 277], "automat": 2, "model": [2, 19, 236, 237, 244, 251, 252, 256, 261, 263, 264, 265, 269, 272, 275, 277], "develop": [2, 247, 248, 253], "amd": [2, 244], "input": [2, 248], "search": [2, 256, 264], "space": [2, 264], "order": [2, 263], "subtool": 2, "structur": [2, 256, 271], "iivsearch": [2, 244, 256], "iovsearch": [2, 244, 258], "residu": [2, 262, 271], "covari": [2, 240, 241, 254, 256, 262, 263, 271], "api": 3, "refer": [3, 241, 254], "assign": 4, "bolu": [5, 263], "columninfo": [6, 251], "compart": [7, 263], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 251], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 258, 263], "estimationstep": [14, 15], "explicitodesystem": 16, "infus": 17, "jointnormaldistribut": 18, "modelerror": 20, "modelsyntaxerror": 21, "modelfitresultserror": 22, "normaldistribut": 23, "odesystem": 24, "paramet": [25, 26, 240, 251, 252, 254, 261, 262, 263, 265], "randomvari": [27, 252], "statement": [29, 30, 252, 261], "variabilityhierarchi": 31, "variabilitylevel": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 244], "add_individual_paramet": 38, "add_iov": [39, 244], "add_lag_tim": 40, "add_peripheral_compart": 41, "add_pk_iiv": 42, "add_population_paramet": 43, "add_time_after_dos": 44, "append_estimation_step_opt": 45, "bump_model_numb": 46, "calculate_a": 47, "calculate_b": 48, "calculate_corr_from_cov": 49, "calculate_corr_from_inf": 50, "calculate_cov_from_corrs": 51, "calculate_cov_from_inf": 52, "calculate_epsilon_gradient_express": 53, "calculate_eta_gradient_express": 54, "calculate_eta_shrinkag": 55, "calculate_individual_parameter_statist": 56, "calculate_individual_shrinkag": 57, "calculate_inf_from_corrs": 58, "calculate_inf_from_cov": 59, "calculate_parameters_from_ucp": 60, "calculate_pk_parameters_statist": 61, "calculate_se_from_cov": 62, "calculate_se_from_inf": 63, "calculate_ucp_scal": 64, "check_dataset": 65, "check_high_correl": 66, "check_parameters_near_bound": 67, "cleanup_model": 68, "convert_model": 69, "copy_model": 70, "create_joint_distribut": [71, 244], "create_report": 72, "create_rng": 73, "create_symbol": 74, "drop_column": 75, "drop_dropped_column": 76, "evaluate_epsilon_gradi": 77, "evaluate_eta_gradi": 78, "evaluate_express": 79, "evaluate_individual_predict": 80, "evaluate_population_predict": 81, "evaluate_weighted_residu": 82, "expand_additional_dos": 83, "find_clearance_paramet": 84, "find_volume_paramet": 85, "fix_or_unfix_paramet": 86, "fix_paramet": 87, "fix_parameters_to": 88, "generate_model_cod": 89, "get_baselin": 90, "get_bioavail": 91, "get_cmt": 92, "get_concentration_parameters_from_data": 93, "get_config_path": 94, "get_covariate_baselin": 95, "get_doseid": 96, "get_dos": 97, "get_evid": 98, "get_id": 99, "get_individual_paramet": 100, "get_individual_prediction_express": 101, "get_lag_tim": 102, "get_mdv": 103, "get_model_covari": 104, "get_number_of_individu": 105, "get_number_of_observ": 106, "get_number_of_observations_per_individu": 107, "get_observation_express": 108, "get_observ": 109, "get_omega": 110, "get_pk_paramet": 111, "get_population_prediction_express": 112, "get_rv_paramet": 113, "get_sigma": 114, "get_theta": 115, "get_unit_of": 116, "greekify_model": 117, "has_additive_error_model": 118, "has_combined_error_model": 119, "has_covariate_effect": 120, "has_first_order_elimin": 121, "has_michaelis_menten_elimin": 122, "has_mixed_mm_fo_elimin": 123, "has_proportional_error_model": 124, "has_random_effect": 125, "has_zero_order_absorpt": 126, "has_zero_order_elimin": 127, "list_time_varying_covari": 128, "load_example_model": 129, "make_declar": 130, "mu_reference_model": 131, "omit_data": 132, "plot_individual_predict": 133, "plot_iofv_vs_iofv": 134, "print_model_cod": 135, "print_model_symbol": 136, "read_dataset_from_datainfo": 137, "read_model": 138, "read_model_from_databas": 139, "read_model_from_str": 140, "remove_covariance_step": 141, "remove_covariate_effect": 142, "remove_error_model": 143, "remove_estimation_step": 144, "remove_iiv": [145, 244], "remove_iov": [146, 244], "remove_lag_tim": 147, "remove_loq_data": 148, "remove_peripheral_compart": 149, "remove_unused_parameters_and_rv": 150, "rename_symbol": 151, "resample_data": 152, "sample_individual_estim": 153, "sample_parameters_from_covariance_matrix": 154, "sample_parameters_uniformli": 155, "set_additive_error_model": 156, "set_bolus_absorpt": 157, "set_combined_error_model": 158, "set_covari": 159, "set_dtbs_error_model": 160, "set_estimation_step": 161, "set_evaluation_step": 162, "set_first_order_absorpt": 163, "set_first_order_elimin": 164, "set_iiv_on_ruv": 165, "set_initial_estim": 166, "set_lower_bound": 167, "set_michaelis_menten_elimin": 168, "set_mixed_mm_fo_elimin": 169, "set_nam": 170, "set_ode_solv": 171, "set_peripheral_compart": 172, "set_power_on_ruv": 173, "set_proportional_error_model": 174, "set_seq_zo_fo_absorpt": 175, "set_time_varying_error_model": 176, "set_transit_compart": 177, "set_upper_bound": 178, "set_weighted_error_model": 179, "set_zero_order_absorpt": 180, "set_zero_order_elimin": 181, "simplify_express": 182, "solve_ode_system": 183, "split_joint_distribut": 184, "transform_etas_boxcox": 185, "transform_etas_john_drap": 186, "transform_etas_tdist": 187, "translate_nmtran_tim": 188, "unconstrain_paramet": 189, "undrop_column": 190, "unfix_paramet": 191, "unfix_parameters_to": 192, "update_initial_individual_estim": 193, "update_init": [194, 244], "use_thetas_for_error_stdev": 195, "write_csv": 196, "write_model": 197, "create_result": 198, "fit": [199, 263], "predict_influential_individu": 200, "predict_influential_outli": 201, "predict_outli": 202, "print_fit_summari": 203, "rank_model": 204, "read_result": 205, "retrieve_final_model": 206, "retrieve_model": 207, "run_allometri": 208, "run_amd": 209, "run_covsearch": 210, "run_iivsearch": 211, "run_iovsearch": 212, "run_modelsearch": 213, "run_ruvsearch": 214, "run_tool": 215, "summarize_error": 216, "summarize_individu": 217, "summarize_individuals_count_t": 218, "summarize_modelfit_result": 219, "write_result": 220, "localdirectorydatabas": 221, "localdirectorytooldatabas": 222, "localmodeldirectorydatabas": 223, "log": 224, "modeldatabas": 225, "nullmodeldatabas": 226, "nulltooldatabas": 227, "task": 228, "tooldatabas": 229, "workflow": [230, 239, 247], "call_workflow": 231, "default_model_databas": 232, "default_tool_databas": 233, "execute_workflow": 234, "split_common_opt": 235, "pharmpi": [236, 237, 238, 239, 243, 244, 245, 247, 251, 252, 257, 261, 266, 270, 275, 277], "packag": [236, 237, 238, 239], "class": [236, 239, 252], "function": [237, 238, 239], "tool": [238, 270, 275], "modul": [239, 252], "bootstrap": [240, 244], "postprocess": [240, 254], "statist": 240, "ofv": [240, 241, 244, 250, 254, 260, 262, 273, 274], "includ": 240, "case": 241, "delet": 241, "diagnost": 241, "cdd": [241, 244], "cook": 241, "score": 241, "jackknif": 241, "cookscor": 241, "ratio": 241, "delta": 241, "skip": 241, "column": 241, "changelog": 242, "0": 242, "79": 242, "2022": 242, "10": 242, "16": 242, "new": [242, 258, 263, 265], "featur": [242, 264, 275], "chang": [242, 266], "bug": 242, "fix": [242, 263], "78": 242, "09": 242, "20": 242, "bugfix": 242, "77": 242, "08": 242, "76": 242, "1": 242, "06": 242, "05": 242, "75": 242, "74": 242, "07": 242, "18": 242, "73": 242, "21": 242, "72": 242, "71": 242, "24": 242, "70": 242, "17": 242, "13": 242, "69": 242, "04": 242, "29": 242, "68": 242, "27": 242, "67": 242, "25": 242, "66": 242, "65": 242, "14": 242, "64": 242, "12": 242, "63": 242, "62": 242, "61": 242, "03": 242, "31": 242, "59": 242, "58": 242, "4": 242, "22": 242, "57": 242, "56": 242, "55": 242, "54": 242, "53": 242, "52": 242, "02": 242, "51": 242, "50": 242, "49": 242, "48": 242, "47": 242, "01": 242, "28": 242, "46": 242, "45": 242, "44": 242, "43": 242, "42": 242, "11": 242, "41": 242, "2021": 242, "40": 242, "39": 242, "15": 242, "38": 242, "37": 242, "26": 242, "36": 242, "35": 242, "34": 242, "3": 242, "2": [242, 259], "33": 242, "32": 242, "30": 242, "23": 242, "19": 242, "2020": 242, "9": 242, "8": 242, "7": 242, "6": 242, "5": 242, "2018": 242, "citat": 243, "how": 243, "cite": 243, "pharmr": [243, 277], "command": 244, "interfac": 244, "anonym": 244, "append": 244, "filter": 244, "print": 244, "resampl": 244, "write": [244, 261, 263, 265], "info": 244, "absorption_r": 244, "add_cov_effect": 244, "boxcox": [244, 263, 271], "elimination_r": 244, "error": [244, 262, 263, 271, 277], "iiv_on_ruv": 244, "john_drap": 244, "peripheral_compart": 244, "power_on_ruv": 244, "sampl": [244, 274], "tdist": [244, 271], "transit_compart": 244, "frem": [244, 254], "linear": [244, 260], "qa": [244, 271], "report": 244, "ruvsearch": [244, 272], "scm": [244, 273], "simev": [244, 274], "summari": [244, 273, 274], "covsearch": [244, 249], "estmethod": 244, "execut": 244, "modelsearch": [244, 264], "commun": 245, "conduct": 245, "configur": 246, "environ": [246, 247], "variabl": [246, 254, 261, 265], "contribut": 247, "set": [247, 261, 263, 266], "up": 247, "support": 247, "platform": 247, "instal": [247, 255, 277], "python": [247, 277], "git": 247, "fork": 247, "clone": 247, "repositori": 247, "tox": 247, "graphviz": 247, "us": [247, 265, 277], "build": 247, "document": [247, 253], "unit": [247, 251], "test": 247, "integr": 247, "usabl": 247, "virtual": 247, "standard": [247, 262, 263], "releas": 247, "version": [247, 277], "inform": [247, 251, 262], "contributor": 248, "scientif": 248, "fund": 248, "effect": [249, 254, 263, 271], "wildcard": 249, "algorithm": [249, 256, 258, 264], "crossval": 250, "crossvalid": 250, "retriev": 251, "from": [251, 263], "updat": [251, 261, 263, 277], "subject": 251, "observ": 251, "dose": 251, "extract": 251, "group": 251, "after": 251, "concentr": 251, "type": [251, 275], "scale": 251, "continu": 251, "categori": 251, "drop": 251, "datatyp": 251, "descriptor": 251, "design": 252, "principl": 252, "level": 252, "architectur": 252, "heart": 252, "docstr": 252, "depend": 252, "coeffici": 254, "unexplain": 254, "estim": [254, 261, 262, 263], "valu": 254, "get": [255, 261, 263], "start": [255, 256], "A": 255, "first": [255, 263], "exampl": [255, 275], "brute": 256, "forc": 256, "number": [256, 263], "iiv": [256, 263, 264], "full": 256, "ad": [256, 263, 264], "compar": [256, 258, 264], "rank": [256, 258, 264], "candid": [256, 258, 264, 273], "welcom": 257, "iov": [258, 263], "licens": 259, "logo": 259, "copyright": 259, "bsd": 259, "claus": 259, "gnu": 259, "lesser": 259, "public": 259, "read": [261, 262, 263, 265], "name": [261, 265], "random": [261, 265], "modelfit": [261, 262], "initi": [261, 263], "final": 262, "rel": 262, "correl": 262, "indiviud": 262, "predict": [262, 274], "basic": 263, "sourc": 263, "string": 263, "unfix": 263, "add": 263, "pk": 263, "od": 263, "system": 263, "absorpt": 263, "rate": 263, "sequenti": 263, "delai": 263, "transit": 263, "lag": 263, "elimin": 263, "micha": 263, "menten": 263, "mix": 263, "peripher": 263, "remov": 263, "transform": 263, "approxim": 263, "t": 263, "john": 263, "draper": 263, "an": 263, "addit": 263, "proport": 263, "combin": [263, 264], "appli": 263, "ruv": 263, "power": 263, "deviat": 263, "epsilon": 263, "theta": 263, "weight": 263, "dtb": 263, "creat": 263, "joint": 263, "multipl": 263, "between": [263, 264], "previou": 263, "psn": [263, 270], "shrinkag": 263, "calcul": 263, "common": [264, 275], "behaviour": 264, "exclus": 264, "exhaust": 264, "stepwis": 264, "reduc": 264, "dure": 264, "plugin": [265, 267], "plot": [266, 274], "theme": 266, "axi": 266, "project": 268, "suggest": 268, "resmod": 269, "connect": 270, "bia": 271, "fullblock": 271, "databas": 275, "directori": 275, "metadata": 275, "languag": 275, "mfl": 275, "symbol": 275, "describ": 275, "interv": 275, "redund": 275, "descript": 275, "user": 276, "guid": 276, "r": 277, "troubl": 277, "shoot": 277, "wrong": 277, "import": 277, "gotcha": 277, "object": 277, "list": 277, "indic": 277, "datafram": 277, "multiindex": 277, "float": 277, "integ": 277, "singl": 277, "element": 277, "vector": 277}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"calculate_inf_from_cov": [[59, "calculate-inf-from-cov"]], "calculate_corr_from_inf": [[50, "calculate-corr-from-inf"]], "calculate_eta_shrinkage": [[55, "calculate-eta-shrinkage"]], "calculate_corr_from_cov": [[49, "calculate-corr-from-cov"]], "add_time_after_dose": [[44, "add-time-after-dose"]], "add_peripheral_compartment": [[41, "add-peripheral-compartment"]], "add_pk_iiv": [[42, "add-pk-iiv"]], "convert_model": [[69, "convert-model"]], "append_estimation_step_options": [[45, "append-estimation-step-options"]], "add_lag_time": [[40, "add-lag-time"]], "calculate_pk_parameters_statistics": [[61, "calculate-pk-parameters-statistics"]], "bump_model_number": [[46, "bump-model-number"]], "calculate_ucp_scale": [[64, "calculate-ucp-scale"]], "calculate_aic": [[47, "calculate-aic"]], "check_parameters_near_bounds": [[67, "check-parameters-near-bounds"]], "check_dataset": [[65, "check-dataset"]], "calculate_se_from_inf": [[63, "calculate-se-from-inf"]], "cleanup_model": [[68, "cleanup-model"]], "copy_model": [[70, "copy-model"]], "calculate_parameters_from_ucp": [[60, "calculate-parameters-from-ucp"]], "calculate_cov_from_corrse": [[51, "calculate-cov-from-corrse"]], "create_rng": [[73, "create-rng"]], "calculate_eta_gradient_expression": [[54, "calculate-eta-gradient-expression"]], "calculate_cov_from_inf": [[52, "calculate-cov-from-inf"]], "calculate_inf_from_corrse": [[58, "calculate-inf-from-corrse"]], "create_joint_distribution": [[71, "create-joint-distribution"]], "calculate_epsilon_gradient_expression": [[53, "calculate-epsilon-gradient-expression"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "add_iov": [[39, "add-iov"]], "add_iiv": [[37, "add-iiv"]], "add_population_parameter": [[43, "add-population-parameter"]], "create_report": [[72, "create-report"]], "calculate_bic": [[48, "calculate-bic"]], "calculate_individual_shrinkage": [[57, "calculate-individual-shrinkage"]], "calculate_se_from_cov": [[62, "calculate-se-from-cov"]], "check_high_correlations": [[66, "check-high-correlations"]], "calculate_individual_parameter_statistics": [[56, "calculate-individual-parameter-statistics"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "add_covariance_step": [[34, "add-covariance-step"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [249, "running"], [256, "running"], [258, "running"], [264, "running"], [272, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [249, "arguments"], [256, "arguments"], [258, "arguments"], [264, "arguments"], [272, "arguments"]], "Procedure": [[1, "procedure"], [272, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "ExplicitODESystem": [[16, "explicitodesystem"]], "add_allometry": [[33, "add-allometry"]], "ColumnInfo": [[6, "columninfo"], [251, "columninfo"]], "Bolus": [[5, "bolus"]], "ODESystem": [[24, "odesystem"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "add_estimation_step": [[36, "add-estimation-step"]], "DatasetWarning": [[12, "datasetwarning"]], "NormalDistribution": [[23, "normaldistribution"]], "Parameters": [[26, "parameters"], [263, "parameters"]], "DatasetError": [[11, "dataseterror"]], "DataInfo": [[10, "datainfo"], [251, "datainfo"]], "API Reference": [[3, "api-reference"]], "Infusion": [[17, "infusion"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [256, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [258, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [28, "results"], [249, "results"], [258, "results"], [275, "results"]], "Model": [[19, "model"]], "JointNormalDistribution": [[18, "jointnormaldistribution"]], "EstimationSteps": [[15, "estimationsteps"]], "Statements": [[30, "statements"]], "ModelError": [[20, "modelerror"]], "Parameter": [[25, "parameter"]], "Distribution": [[13, "distribution"], [263, "distribution"]], "Statement": [[29, "statement"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "Compartment": [[7, "compartment"]], "ModelSyntaxError": [[21, "modelsyntaxerror"]], "EstimationStep": [[14, "estimationstep"]], "VariabilityHierarchy": [[31, "variabilityhierarchy"]], "RandomVariables": [[27, "randomvariables"]], "Assignment": [[4, "assignment"]], "VariabilityLevel": [[32, "variabilitylevel"]], "ModelfitResultsError": [[22, "modelfitresultserror"]], "Case deletion diagnostics": [[241, "case-deletion-diagnostics"]], "The cdd results": [[241, "the-cdd-results"]], "Case results": [[241, "case-results"]], "Cook score": [[241, "cook-score"]], "Jackknife cookscore": [[241, "jackknife-cookscore"]], "Covariance ratio": [[241, "covariance-ratio"]], "Delta OFV": [[241, "delta-ofv"]], "Skipped individuals": [[241, "skipped-individuals"]], "Case column": [[241, "case-column"]], "References": [[241, "references"], [254, "references"]], "The Pharmpy command line interface": [[244, "the-pharmpy-command-line-interface"]], "pharmpy": [[244, "pharmpy"]], "pharmpy data": [[244, "pharmpy-data"]], "pharmpy data anonymize": [[244, "pharmpy-data-anonymize"]], "pharmpy data append": [[244, "pharmpy-data-append"]], "pharmpy data filter": [[244, "pharmpy-data-filter"]], "pharmpy data print": [[244, "pharmpy-data-print"]], "pharmpy data resample": [[244, "pharmpy-data-resample"]], "pharmpy data write": [[244, "pharmpy-data-write"]], "pharmpy info": [[244, "pharmpy-info"]], "pharmpy model": [[244, "pharmpy-model"]], "pharmpy model absorption_rate": [[244, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[244, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[244, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[244, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[244, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[244, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[244, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[244, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[244, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[244, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[244, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[244, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[244, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[244, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[244, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[244, "pharmpy-model-sample"]], "pharmpy model tdist": [[244, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[244, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[244, "pharmpy-model-update-inits"]], "pharmpy results": [[244, "pharmpy-results"]], "pharmpy results bootstrap": [[244, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[244, "pharmpy-results-cdd"]], "pharmpy results frem": [[244, "pharmpy-results-frem"]], "pharmpy results linearize": [[244, "pharmpy-results-linearize"]], "pharmpy results ofv": [[244, "pharmpy-results-ofv"]], "pharmpy results print": [[244, "pharmpy-results-print"]], "pharmpy results qa": [[244, "pharmpy-results-qa"]], "pharmpy results report": [[244, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[244, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[244, "pharmpy-results-scm"]], "pharmpy results simeval": [[244, "pharmpy-results-simeval"]], "pharmpy results summary": [[244, "pharmpy-results-summary"]], "pharmpy run": [[244, "pharmpy-run"]], "pharmpy run allometry": [[244, "pharmpy-run-allometry"]], "pharmpy run amd": [[244, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[244, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[244, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[244, "pharmpy-run-estmethod"]], "pharmpy run execute": [[244, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[244, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[244, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[244, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[244, "pharmpy-run-ruvsearch"]], "FREM": [[254, "frem"]], "The FREM postprocessing and results": [[254, "the-frem-postprocessing-and-results"]], "Covariate effects": [[254, "covariate-effects"], [271, "covariate-effects"]], "Parameter covariate coefficients": [[254, "parameter-covariate-coefficients"]], "Individual covariate effects": [[254, "individual-covariate-effects"]], "Unexplained variability": [[254, "unexplained-variability"]], "Parameter estimates": [[254, "parameter-estimates"], [262, "parameter-estimates"]], "OFV": [[254, "ofv"]], "Estimated covariate values": [[254, "estimated-covariate-values"]], "Design principles": [[252, "design-principles"]], "Levels of the architecture": [[252, "levels-of-the-architecture"]], "The Heart, The Model Class": [[252, "the-heart-the-model-class"]], "pharmpy.Parameters": [[252, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[252, "pharmpy-randomvariables"]], "pharmpy.Statements": [[252, "pharmpy-statements"]], "The pharmpy.modeling module": [[252, "the-pharmpy-modeling-module"]], "Docstrings": [[252, "docstrings"]], "Dependencies": [[252, "dependencies"]], "pharmpy.modeling Package": [[237, "module-pharmpy.modeling"]], "Functions": [[237, "functions"], [239, "functions"], [238, "functions"]], "LocalDirectoryToolDatabase": [[222, "localdirectorytooldatabase"]], "pharmpy.workflows Package": [[239, "module-pharmpy.workflows"]], "Options for the data module": [[239, "id1"]], "Classes": [[239, "classes"], [236, "classes"]], "split_common_options": [[235, "split-common-options"]], "Contribute": [[247, "contribute"]], "Set up the development environment": [[247, "set-up-the-development-environment"]], "Supported platforms": [[247, "supported-platforms"]], "Install Python": [[247, "install-python"]], "Install git": [[247, "install-git"]], "Fork and clone the code repository": [[247, "fork-and-clone-the-code-repository"]], "Install tox": [[247, "install-tox"]], "Install graphviz used for building the documentation": [[247, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[247, "using-the-development-environment"]], "Running tox": [[247, "running-tox"]], "Check code formatting": [[247, "check-code-formatting"]], "Run the unit tests": [[247, "run-the-unit-tests"]], "Build and test the documentation": [[247, "build-and-test-the-documentation"]], "Run the integration tests": [[247, "run-the-integration-tests"]], "Build a usable virtual environment": [[247, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[247, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[247, "releasing-pharmpy-and-documentation"]], "Version": [[247, "version"]], "Information for developers": [[247, "information-for-developers"]], "NullToolDatabase": [[227, "nulltooldatabase"]], "ToolDatabase": [[229, "tooldatabase"]], "Citation": [[243, "citation"]], "How to cite Pharmpy and pharmr": [[243, "how-to-cite-pharmpy-and-pharmr"]], "Bootstrap": [[240, "bootstrap"]], "The Bootstrap postprocessing and results": [[240, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[240, "parameter-statistics"]], "OFV statistics": [[240, "ofv-statistics"]], "Covariance matrix": [[240, "covariance-matrix"], [262, "covariance-matrix"]], "Included individuals": [[240, "included-individuals"]], "COVsearch": [[249, "covsearch"]], "Effects": [[249, "effects"]], "Wildcards": [[249, "wildcards"]], "Algorithm": [[249, "algorithm"], [258, "algorithm"]], "LocalModelDirectoryDatabase": [[223, "localmodeldirectorydatabase"]], "default_tool_database": [[233, "default-tool-database"]], "pharmpy.tools Package": [[238, "module-pharmpy.tools"]], "Task": [[228, "task"]], "Log": [[224, "log"]], "Configuration": [[246, "configuration"]], "The configuration file": [[246, "the-configuration-file"]], "Environment variables": [[246, "environment-variables"]], "Getting started": [[255, "getting-started"]], "Installation": [[255, "installation"]], "A first example": [[255, "a-first-example"]], "Pharmpy Community Code of Conduct": [[245, "pharmpy-community-code-of-conduct"]], "call_workflow": [[231, "call-workflow"]], "Welcome to Pharmpy": [[257, "welcome-to-pharmpy"]], "default_model_database": [[232, "default-model-database"]], "Documentation for developers": [[253, "documentation-for-developers"]], "execute_workflow": [[234, "execute-workflow"]], "Contributors": [[248, "authors"]], "Development": [[248, "development"]], "Scientific input": [[248, "scientific-input"]], "Funding": [[248, "funding"]], "Algorithms": [[256, "algorithms"], [264, "algorithms"]], "Brute force search for number of IIVs": [[256, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[256, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[256, "full-brute-force-search"]], "Adding IIV to the start model": [[256, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[256, "comparing-and-ranking-candidates"], [258, "comparing-and-ranking-candidates"], [264, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[256, "the-iivsearch-results"]], "ModelDatabase": [[225, "modeldatabase"]], "Crossval": [[250, "crossval"]], "The crossval results": [[250, "the-crossval-results"]], "Crossvalidation OFVs": [[250, "crossvalidation-ofvs"]], "NullModelDatabase": [[226, "nullmodeldatabase"]], "pharmpy.model Package": [[236, "module-pharmpy.model"]], "Changelog": [[242, "changelog"]], "0.79.0 (2022-10-16)": [[242, "id1"]], "New features": [[242, "new-features"], [242, "id9"], [242, "id13"], [242, "id20"], [242, "id23"], [242, "id27"], [242, "id33"], [242, "id37"], [242, "id43"], [242, "id48"], [242, "id52"], [242, "id55"], [242, "id63"], [242, "id67"], [242, "id73"], [242, "id82"], [242, "id86"], [242, "id89"], [242, "id93"], [242, "id95"], [242, "id100"], [242, "id103"], [242, "id107"]], "Changes": [[242, "changes"], [242, "id3"], [242, "id5"], [242, "id10"], [242, "id14"], [242, "id17"], [242, "id21"], [242, "id24"], [242, "id28"], [242, "id34"], [242, "id38"], [242, "id49"], [242, "id53"], [242, "id58"], [242, "id64"], [242, "id74"], [242, "id79"], [242, "id83"], [242, "id90"], [242, "id96"], [242, "id101"], [242, "id104"], [242, "id108"]], "Bug fixes": [[242, "bug-fixes"]], "0.78.0 (2022-09-20)": [[242, "id2"]], "Bugfixes": [[242, "bugfixes"], [242, "id7"], [242, "id11"], [242, "id15"], [242, "id18"], [242, "id25"], [242, "id29"], [242, "id31"], [242, "id35"], [242, "id39"], [242, "id41"], [242, "id44"], [242, "id46"], [242, "id50"], [242, "id56"], [242, "id59"], [242, "id61"], [242, "id65"], [242, "id69"], [242, "id71"], [242, "id75"], [242, "id77"], [242, "id80"], [242, "id84"], [242, "id87"], [242, "id91"], [242, "id98"], [242, "id105"], [242, "id109"]], "0.77.0 (2022-09-08)": [[242, "id4"]], "0.76.1 (2022-09-06)": [[242, "id6"]], "0.76.0 (2022-09-05)": [[242, "id8"]], "0.75.0 (2022-08-10)": [[242, "id12"]], "0.74.0 (2022-07-18)": [[242, "id16"]], "0.73.0 (2022-06-21)": [[242, "id19"]], "0.72.0 (2022-06-08)": [[242, "id22"]], "0.71.0 (2022-05-24)": [[242, "id26"]], "0.70.1 (2022-05-17)": [[242, "id30"]], "0.70.0 (2022-05-13)": [[242, "id32"]], "0.69.0 (2022-04-29)": [[242, "id36"]], "0.68.0 (2022-04-27)": [[242, "id40"]], "0.67.0 (2022-04-25)": [[242, "id42"]], "0.66.0 (2022-04-20)": [[242, "id45"]], "0.65.0 (2022-04-14)": [[242, "id47"]], "0.64.0 (2022-04-12)": [[242, "id51"]], "0.63.0 (2022-04-07)": [[242, "id54"]], "0.62.0 (2022-04-04)": [[242, "id57"]], "New feature": [[242, "new-feature"]], "0.61.1 (2022-03-31)": [[242, "id60"]], "0.61.0 (2022-03-29)": [[242, "id62"]], "0.59.0 (2022-03-25)": [[242, "id66"]], "0.58.4 (2022-03-24)": [[242, "id68"]], "0.58.1 (2022-03-22)": [[242, "id70"]], "0.58.0 (2022-03-22)": [[242, "id72"]], "0.57.0 (2022-03-21)": [[242, "id76"]], "0.56.0 (2022-03-17)": [[242, "id78"]], "0.55.0 (2022-03-16)": [[242, "id81"]], "0.54.0 (2022-03-08)": [[242, "id85"]], "0.53.0 (2022-03-04)": [[242, "id88"]], "0.52.0 (2022-02-25)": [[242, "id92"]], "0.51.0 (2022-02-24)": [[242, "id94"]], "0.50.1 (2022-02-16)": [[242, "id97"]], "0.50.0 (2022-02-16)": [[242, "id99"]], "0.49.0 (2022-02-10)": [[242, "id102"]], "0.48.0 (2022-02-04)": [[242, "id106"]], "0.47.0 (2022-01-28)": [[242, "id110"]], "0.46.0 (2022-01-27)": [[242, "id111"]], "0.45.0 (2022-01-21)": [[242, "id112"]], "0.44.0 (2022-01-20)": [[242, "id113"]], "0.43.0 (2022-01-12)": [[242, "id114"]], "0.42.0 (2022-01-11)": [[242, "id115"]], "0.41.0 (2021-12-21)": [[242, "id116"]], "0.40.0 (2021-12-16)": [[242, "id117"]], "0.39.0 (2021-12-15)": [[242, "id118"]], "0.38.0 (2021-12-08)": [[242, "id119"]], "0.37.1 (2021-11-26)": [[242, "id120"]], "0.37.0 (2021-11-24)": [[242, "id121"]], "0.36.0 (2021-11-11)": [[242, "id122"]], "0.35.0 (2021-11-02)": [[242, "id123"]], "0.34.3 (2021-10-28)": [[242, "id124"]], "0.34.2 (2021-10-26)": [[242, "id125"]], "0.34.1 (2021-10-20)": [[242, "id126"]], "0.34.0 (2021-10-14)": [[242, "id127"]], "0.33.0 (2021-10-11)": [[242, "id128"]], "0.32.0 (2021-09-28)": [[242, "id129"]], "0.31.0 (2021-09-21)": [[242, "id130"]], "0.30.0 (2021-09-06)": [[242, "id131"]], "0.29.0 (2021-08-25)": [[242, "id132"]], "0.28.0 (2021-08-24)": [[242, "id133"]], "0.27.0 (2021-08-09)": [[242, "id134"]], "0.26.1 (2021-08-04)": [[242, "id135"]], "0.26.0 (2021-07-13)": [[242, "id136"]], "0.25.1 (2021-07-08)": [[242, "id137"]], "0.25.0 (2021-06-24)": [[242, "id138"]], "0.24.0 (2021-05-25)": [[242, "id139"]], "0.23.4 (2021-05-03)": [[242, "id140"]], "0.23.3 (2021-04-29)": [[242, "id141"]], "0.23.2 (2021-04-28)": [[242, "id142"]], "0.23.1 (2021-04-28)": [[242, "id143"]], "0.23.0 (2021-04-28)": [[242, "id144"]], "0.22.0 (2021-03-29)": [[242, "id145"]], "0.21.0 (2021-03-22)": [[242, "id146"]], "0.20.1 (2021-03-11)": [[242, "id147"]], "0.20.0 (2021-03-11)": [[242, "id148"]], "0.19.0 (2021-03-02)": [[242, "id149"]], "0.18.0 (2021-03-01)": [[242, "id150"]], "0.17.0 (2021-02-15)": [[242, "id151"]], "0.16.0 (2021-02-08)": [[242, "id152"]], "0.15.0 (2021-02-01)": [[242, "id153"]], "0.14.0 (2021-01-25)": [[242, "id154"]], "0.13.0 (2021-01-18)": [[242, "id155"]], "0.12.0 (2020-12-18)": [[242, "id156"]], "0.11.0 (2020-11-20)": [[242, "id157"]], "0.10.0 (2020-11-16)": [[242, "id158"]], "0.9.0 (2020-10-26)": [[242, "id159"]], "0.8.0 (2020-10-08)": [[242, "id160"]], "0.7.0 (2020-09-28)": [[242, "id161"]], "0.6.0 (2020-09-18)": [[242, "id162"]], "0.5.0 (2020-09-04)": [[242, "id163"]], "0.4.0 (2020-07-24)": [[242, "id164"]], "0.3.0 (2020-06-16)": [[242, "id165"]], "0.2.0 (2020-03-27)": [[242, "id166"]], "0.1.0 (2018-07-22)": [[242, "id167"]], "Distribution of new IOVs": [[258, "distribution-of-new-iovs"]], "Datasets in Pharmpy": [[251, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[251, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[251, "update-the-dataset-of-a-model"]], "Subjects": [[251, "subjects"]], "Observations": [[251, "observations"]], "Dosing": [[251, "dosing"]], "Extract dosing information": [[251, "extract-dosing-information"]], "Dose grouping": [[251, "dose-grouping"]], "Time after dose": [[251, "time-after-dose"]], "Concentration parameters": [[251, "concentration-parameters"]], "type": [[251, "type"]], "scale": [[251, "scale"]], "continuous": [[251, "continuous"]], "categories": [[251, "categories"]], "unit": [[251, "unit"]], "drop": [[251, "drop"]], "datatype": [[251, "datatype"]], "descriptor": [[251, "descriptor"]], "datainfo file": [[251, "datainfo-file"]], "Workflow": [[230, "workflow"]], "transform_etas_john_draper": [[186, "transform-etas-john-draper"]], "translate_nmtran_time": [[188, "translate-nmtran-time"]], "use_thetas_for_error_stdev": [[195, "use-thetas-for-error-stdev"]], "undrop_columns": [[190, "undrop-columns"]], "summarize_errors": [[216, "summarize-errors"]], "update_initial_individual_estimates": [[193, "update-initial-individual-estimates"]], "read_results": [[205, "read-results"]], "LocalDirectoryDatabase": [[221, "localdirectorydatabase"]], "predict_influential_individuals": [[200, "predict-influential-individuals"]], "create_results": [[198, "create-results"]], "unfix_parameters": [[191, "unfix-parameters"]], "retrieve_models": [[207, "retrieve-models"]], "retrieve_final_model": [[206, "retrieve-final-model"]], "run_ruvsearch": [[214, "run-ruvsearch"]], "summarize_modelfit_results": [[219, "summarize-modelfit-results"]], "run_amd": [[209, "run-amd"]], "write_results": [[220, "write-results"]], "rank_models": [[204, "rank-models"]], "unfix_parameters_to": [[192, "unfix-parameters-to"]], "transform_etas_boxcox": [[185, "transform-etas-boxcox"]], "summarize_individuals_count_table": [[218, "summarize-individuals-count-table"]], "run_iivsearch": [[211, "run-iivsearch"]], "fit": [[199, "fit"]], "run_allometry": [[208, "run-allometry"]], "transform_etas_tdist": [[187, "transform-etas-tdist"]], "unconstrain_parameters": [[189, "unconstrain-parameters"]], "run_covsearch": [[210, "run-covsearch"]], "write_model": [[197, "write-model"]], "write_csv": [[196, "write-csv"]], "run_modelsearch": [[213, "run-modelsearch"]], "print_fit_summary": [[203, "print-fit-summary"]], "run_tool": [[215, "run-tool"]], "summarize_individuals": [[217, "summarize-individuals"]], "update_inits": [[194, "update-inits"]], "predict_outliers": [[202, "predict-outliers"]], "predict_influential_outliers": [[201, "predict-influential-outliers"]], "run_iovsearch": [[212, "run-iovsearch"]], "sample_parameters_uniformly": [[155, "sample-parameters-uniformly"]], "set_combined_error_model": [[158, "set-combined-error-model"]], "set_iiv_on_ruv": [[165, "set-iiv-on-ruv"]], "set_name": [[170, "set-name"]], "set_mixed_mm_fo_elimination": [[169, "set-mixed-mm-fo-elimination"]], "set_weighted_error_model": [[179, "set-weighted-error-model"]], "remove_peripheral_compartment": [[149, "remove-peripheral-compartment"]], "set_power_on_ruv": [[173, "set-power-on-ruv"]], "set_michaelis_menten_elimination": [[168, "set-michaelis-menten-elimination"]], "resample_data": [[152, "resample-data"]], "remove_loq_data": [[148, "remove-loq-data"]], "set_zero_order_absorption": [[180, "set-zero-order-absorption"]], "set_time_varying_error_model": [[176, "set-time-varying-error-model"]], "remove_unused_parameters_and_rvs": [[150, "remove-unused-parameters-and-rvs"]], "split_joint_distribution": [[184, "split-joint-distribution"]], "set_proportional_error_model": [[174, "set-proportional-error-model"]], "set_covariates": [[159, "set-covariates"]], "set_dtbs_error_model": [[160, "set-dtbs-error-model"]], "sample_parameters_from_covariance_matrix": [[154, "sample-parameters-from-covariance-matrix"]], "set_estimation_step": [[161, "set-estimation-step"]], "sample_individual_estimates": [[153, "sample-individual-estimates"]], "set_first_order_absorption": [[163, "set-first-order-absorption"]], "set_initial_estimates": [[166, "set-initial-estimates"]], "set_first_order_elimination": [[164, "set-first-order-elimination"]], "set_zero_order_elimination": [[181, "set-zero-order-elimination"]], "solve_ode_system": [[183, "solve-ode-system"]], "simplify_expression": [[182, "simplify-expression"]], "set_evaluation_step": [[162, "set-evaluation-step"]], "set_seq_zo_fo_absorption": [[175, "set-seq-zo-fo-absorption"]], "set_bolus_absorption": [[157, "set-bolus-absorption"]], "set_additive_error_model": [[156, "set-additive-error-model"]], "set_ode_solver": [[171, "set-ode-solver"]], "set_upper_bounds": [[178, "set-upper-bounds"]], "set_peripheral_compartments": [[172, "set-peripheral-compartments"]], "set_transit_compartments": [[177, "set-transit-compartments"]], "rename_symbols": [[151, "rename-symbols"]], "set_lower_bounds": [[167, "set-lower-bounds"]], "has_random_effect": [[125, "has-random-effect"]], "remove_estimation_step": [[144, "remove-estimation-step"]], "has_michaelis_menten_elimination": [[122, "has-michaelis-menten-elimination"]], "omit_data": [[132, "omit-data"]], "get_thetas": [[115, "get-thetas"]], "plot_individual_predictions": [[133, "plot-individual-predictions"]], "has_first_order_elimination": [[121, "has-first-order-elimination"]], "has_proportional_error_model": [[124, "has-proportional-error-model"]], "load_example_model": [[129, "load-example-model"]], "read_model": [[138, "read-model"]], "get_unit_of": [[116, "get-unit-of"]], "has_covariate_effect": [[120, "has-covariate-effect"]], "read_dataset_from_datainfo": [[137, "read-dataset-from-datainfo"]], "has_additive_error_model": [[118, "has-additive-error-model"]], "read_model_from_database": [[139, "read-model-from-database"]], "remove_covariance_step": [[141, "remove-covariance-step"]], "get_population_prediction_expression": [[112, "get-population-prediction-expression"]], "remove_iiv": [[145, "remove-iiv"]], "has_combined_error_model": [[119, "has-combined-error-model"]], "plot_iofv_vs_iofv": [[134, "plot-iofv-vs-iofv"]], "print_model_code": [[135, "print-model-code"]], "remove_lag_time": [[147, "remove-lag-time"]], "has_zero_order_absorption": [[126, "has-zero-order-absorption"]], "get_sigmas": [[114, "get-sigmas"]], "get_rv_parameters": [[113, "get-rv-parameters"]], "list_time_varying_covariates": [[128, "list-time-varying-covariates"]], "remove_error_model": [[143, "remove-error-model"]], "read_model_from_string": [[140, "read-model-from-string"]], "make_declarative": [[130, "make-declarative"]], "greekify_model": [[117, "greekify-model"]], "has_mixed_mm_fo_elimination": [[123, "has-mixed-mm-fo-elimination"]], "get_pk_parameters": [[111, "get-pk-parameters"]], "has_zero_order_elimination": [[127, "has-zero-order-elimination"]], "remove_covariate_effect": [[142, "remove-covariate-effect"]], "print_model_symbols": [[136, "print-model-symbols"]], "mu_reference_model": [[131, "mu-reference-model"]], "remove_iov": [[146, "remove-iov"]], "get_covariate_baselines": [[95, "get-covariate-baselines"]], "get_doses": [[97, "get-doses"]], "evaluate_eta_gradient": [[78, "evaluate-eta-gradient"]], "evaluate_population_prediction": [[81, "evaluate-population-prediction"]], "get_individual_parameters": [[100, "get-individual-parameters"]], "evaluate_weighted_residuals": [[82, "evaluate-weighted-residuals"]], "fix_parameters": [[87, "fix-parameters"]], "get_doseid": [[96, "get-doseid"]], "get_evid": [[98, "get-evid"]], "create_symbol": [[74, "create-symbol"]], "get_mdv": [[103, "get-mdv"]], "evaluate_individual_prediction": [[80, "evaluate-individual-prediction"]], "get_concentration_parameters_from_data": [[93, "get-concentration-parameters-from-data"]], "get_observation_expression": [[108, "get-observation-expression"]], "drop_columns": [[75, "drop-columns"]], "get_number_of_observations_per_individual": [[107, "get-number-of-observations-per-individual"]], "get_ids": [[99, "get-ids"]], "fix_parameters_to": [[88, "fix-parameters-to"]], "get_cmt": [[92, "get-cmt"]], "find_clearance_parameters": [[84, "find-clearance-parameters"]], "get_bioavailability": [[91, "get-bioavailability"]], "get_baselines": [[90, "get-baselines"]], "get_config_path": [[94, "get-config-path"]], "fix_or_unfix_parameters": [[86, "fix-or-unfix-parameters"]], "generate_model_code": [[89, "generate-model-code"]], "evaluate_expression": [[79, "evaluate-expression"]], "get_number_of_individuals": [[105, "get-number-of-individuals"]], "drop_dropped_columns": [[76, "drop-dropped-columns"]], "get_observations": [[109, "get-observations"]], "find_volume_parameters": [[85, "find-volume-parameters"]], "get_individual_prediction_expression": [[101, "get-individual-prediction-expression"]], "evaluate_epsilon_gradient": [[77, "evaluate-epsilon-gradient"]], "get_number_of_observations": [[106, "get-number-of-observations"]], "get_lag_times": [[102, "get-lag-times"]], "get_omegas": [[110, "get-omegas"]], "get_model_covariates": [[104, "get-model-covariates"]], "expand_additional_doses": [[83, "expand-additional-doses"]], "Tools": [[275, "tools"]], "Tools in Pharmpy": [[275, "tools-in-pharmpy"]], "Common options": [[275, "common-options"]], "Common features": [[275, "common-features"]], "Tool database": [[275, "tool-database"]], "Running directory": [[275, "running-directory"]], "Metadata": [[275, "metadata"]], "Datasets": [[275, "datasets"]], "Model feature language (MFL)": [[275, "model-feature-language-mfl"]], "Option types": [[275, "option-types"]], "Model features": [[275, "model-features"]], "Symbols": [[275, "symbols"]], "Describe intervals": [[275, "describe-intervals"]], "Redundant descriptions": [[275, "redundant-descriptions"]], "Examples": [[275, "examples"]], "User guide": [[276, "user-guide"]], "Plots in Pharmpy": [[266, "plots-in-pharmpy"]], "Setting themes": [[266, "setting-themes"]], "Changing axis of plots": [[266, "changing-axis-of-plots"]], "The Pharmpy model": [[261, "the-pharmpy-model"]], "Reading in a model": [[261, "reading-in-a-model"], [265, "reading-in-a-model"]], "Model name": [[261, "model-name"]], "Writing a model": [[261, "writing-a-model"], [265, "writing-a-model"]], "Getting the model code": [[261, "getting-the-model-code"], [263, "getting-the-model-code"]], "Model parameters": [[261, "model-parameters"]], "Parameter sets": [[261, "parameter-sets"]], "Random variables": [[261, "random-variables"]], "Model statements": [[261, "model-statements"]], "Modelfit results": [[261, "modelfit-results"], [262, "modelfit-results"]], "Updating initial estimates": [[261, "updating-initial-estimates"]], "Modeling": [[263, "modeling"]], "Basic modeling": [[263, "basic-modeling"]], "Reading, writing and updating source models": [[263, "reading-writing-and-updating-source-models"]], "Read model from file": [[263, "read-model-from-file"]], "Read model from string": [[263, "read-model-from-string"]], "Write model to file": [[263, "write-model-to-file"]], "Fix and unfix parameters": [[263, "fix-and-unfix-parameters"]], "Add parameter": [[263, "add-parameter"]], "PK models and ODE systems": [[263, "pk-models-and-ode-systems"]], "Absorption rate": [[263, "absorption-rate"]], "Bolus absorption": [[263, "bolus-absorption"]], "Zero order": [[263, "zero-order"]], "First order": [[263, "first-order"]], "Sequential zero-order then first-order": [[263, "sequential-zero-order-then-first-order"]], "Absorption delay": [[263, "absorption-delay"]], "Transit compartments": [[263, "transit-compartments"]], "Lag time": [[263, "lag-time"]], "Elimination rate": [[263, "elimination-rate"]], "First-order elimination": [[263, "first-order-elimination"]], "Zero-order elimination": [[263, "zero-order-elimination"]], "Michaelis-Menten elimination": [[263, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[263, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[263, "add-peripheral-compartment"]], "Remove peripheral compartment": [[263, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[263, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[263, "adding-covariate-effects"]], "Transformation of etas": [[263, "transformation-of-etas"]], "Boxcox": [[263, "boxcox"], [271, "boxcox"]], "Approximate t-distribution": [[263, "approximate-t-distribution"]], "John Draper": [[263, "john-draper"]], "Adding new etas": [[263, "adding-new-etas"]], "Adding IIVs": [[263, "adding-iivs"]], "Adding IOVs": [[263, "adding-iovs"]], "Removing etas": [[263, "removing-etas"]], "Remove IIVs": [[263, "remove-iivs"]], "Remove IOVs": [[263, "remove-iovs"]], "The error model": [[263, "the-error-model"]], "Removing the error model": [[263, "removing-the-error-model"]], "Setting an additive error model": [[263, "setting-an-additive-error-model"]], "Setting a proportional error model": [[263, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[263, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[263, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[263, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[263, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[263, "weighted-error-model"]], "dTBS error model": [[263, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[263, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[263, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[263, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[263, "fitting-a-model"]], "Getting results from a PsN run": [[263, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[263, "eta-shrinkage"]], "Individual parameter calculations": [[263, "individual-parameter-calculations"]], "scm": [[273, "scm"]], "The scm results": [[273, "the-scm-results"]], "Steps": [[273, "steps"]], "OFV Summary": [[273, "ofv-summary"]], "Candidate Summary": [[273, "candidate-summary"]], "License": [[259, "license"]], "Logo": [[259, "logo"]], "Copyright": [[259, "copyright"]], "BSD 2-clause License": [[259, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[259, "gnu-lesser-general-public-license"]], "Project suggestions": [[268, "project-suggestions"]], "Plugins": [[267, "plugins"]], "Overview of a plugin": [[267, "overview-of-a-plugin"]], "Modelsearch": [[264, "modelsearch"]], "The search space": [[264, "the-search-space"]], "Common behaviours between algorithms": [[264, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[264, "feature-combination-exclusions"]], "Exhaustive search": [[264, "exhaustive-search"]], "Exhaustive stepwise search": [[264, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[264, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[264, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[264, "the-modelsearch-results"]], "Using the NONMEM plugin": [[265, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[265, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[265, "new-parameters-and-random-variables"]], "PsN with Pharmpy": [[270, "psn-with-pharmpy"]], "Tools connected to PsN": [[270, "tools-connected-to-psn"]], "ruvsearch": [[272, "ruvsearch"]], "Models": [[272, "models"]], "The RUVsearch results": [[272, "the-ruvsearch-results"]], "QA": [[271, "qa"]], "The qa results": [[271, "the-qa-results"]], "Overview": [[271, "overview"]], "Structural bias": [[271, "structural-bias"]], "Fullblock": [[271, "fullblock"]], "Tdist": [[271, "tdist"]], "Residual error": [[271, "residual-error"]], "Simeval": [[274, "simeval"]], "The simeval results": [[274, "the-simeval-results"]], "Sampled Individual OFVs": [[274, "sampled-individual-ofvs"]], "Individual OFV summary": [[274, "individual-ofv-summary"]], "Individual prediction plot": [[274, "individual-prediction-plot"]], "Resmod": [[269, "resmod"]], "The resmod results": [[269, "the-resmod-results"]], "Resmod models": [[269, "resmod-models"]], "Reading modelfit results": [[262, "reading-modelfit-results"]], "Final OFV": [[262, "final-ofv"]], "Standard errors of parameter estimates": [[262, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[262, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[262, "correlation-matrix"]], "Information Matrix": [[262, "information-matrix"]], "Indiviudal OFV": [[262, "indiviudal-ofv"]], "Predictions": [[262, "predictions"]], "Residuals": [[262, "residuals"]], "Individual estimates": [[262, "individual-estimates"]], "Pharmpy in R": [[277, "pharmpy-in-r"]], "Installing pharmr": [[277, "installing-pharmr"]], "Updating": [[277, "updating"]], "Trouble shooting": [[277, "trouble-shooting"]], "Wrong Python version": [[277, "wrong-python-version"]], "Error importing Pharmpy": [[277, "error-importing-pharmpy"]], "Using pharmr": [[277, "using-pharmr"]], "Gotchas": [[277, "gotchas"]], "The model object": [[277, "the-model-object"]], "List indices": [[277, "list-indices"]], "Dataframes with multiindex": [[277, "dataframes-with-multiindex"]], "Floats and integers": [[277, "floats-and-integers"]], "Single element vectors": [[277, "single-element-vectors"]], "Linearize": [[260, "linearize"]], "The linearize results": [[260, "the-linearize-results"]], "OFVs": [[260, "ofvs"]], "Individual OFVs": [[260, "individual-ofvs"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "derive() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.derive"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "output_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.output_compartment"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "to_compartmental_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_explicit_system"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "derive() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.derive"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "derive() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.derive"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "derive() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.derive"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "explicitodesystem (class in pharmpy.model)": [[16, "pharmpy.model.ExplicitODESystem"]], "amounts (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.amounts"]], "compartment_names (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.compartment_names"]], "free_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.free_symbols"]], "ics (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.ics"]], "odes (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.odes"]], "rhs_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.rhs_symbols"]], "subs() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.subs"]], "to_compartmental_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_explicit_system"]], "infusion (class in pharmpy.model)": [[17, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[17, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.free_symbols"]], "rate (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.rate"]], "subs() (pharmpy.model.infusion method)": [[17, "pharmpy.model.Infusion.subs"]], "jointnormaldistribution (class in pharmpy.model)": [[18, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[18, "pharmpy.model.JointNormalDistribution.create"]], "derive() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.derive"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.names"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.subs"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[19, "pharmpy.model.Model"]], "copy() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.copy"]], "create_model() (pharmpy.model.model static method)": [[19, "pharmpy.model.Model.create_model"]], "datainfo (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dataset"]], "dependent_variable (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dependent_variable"]], "description (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.initial_individual_estimates"]], "model_code (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parent_model"]], "random_variables (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.random_variables"]], "statements (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.statements"]], "update_datainfo() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.update_datainfo"]], "value_type (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.value_type"]], "modelerror": [[20, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[21, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[22, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[23, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[23, "pharmpy.model.NormalDistribution.create"]], "derive() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.derive"]], "evalf() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.names"]], "subs() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.subs"]], "variance (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[24, "pharmpy.model.ODESystem"]], "to_compartmental_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_explicit_system"]], "parameter (class in pharmpy.model)": [[25, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[25, "pharmpy.model.Parameter.create"]], "derive() (pharmpy.model.parameter method)": [[25, "pharmpy.model.Parameter.derive"]], "fix (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.fix"]], "init (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.name"]], "symbol (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.symbol"]], "upper (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[26, "pharmpy.model.Parameters"]], "fix (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fixed"]], "inits (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.nonfixed"]], "set_fix() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.to_dataframe"]], "upper (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[27, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[27, "pharmpy.model.RandomVariables.create"]], "derive() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.derive"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.free_symbols"]], "get_covariance() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "sample() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.subs"]], "unjoin() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[28, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[28, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[29, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[29, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[30, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.free_symbols"]], "full_expression() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.subs"]], "to_compartmental_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_explicit_system"]], "variabilityhierarchy (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityHierarchy"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.names"]], "variabilitylevel (class in pharmpy.model)": [[32, "pharmpy.model.VariabilityLevel"]], "group (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.reference"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_inf() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_inf"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_inf() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_inf"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_inf_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_inf_from_corrse"]], "calculate_inf_from_cov() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_inf_from_cov"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_inf() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_inf"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.convert_model"]], "copy_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.copy_model"]], "create_joint_distribution() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_joint_distribution"]], "create_report() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_report"]], "create_rng() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_symbol"]], "drop_columns() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.fix_parameters_to"]], "generate_model_code() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.generate_model_code"]], "get_baselines() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_doses"]], "get_evid() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_individual_prediction_expression"]], "get_lag_times() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_mdv"]], "get_model_covariates() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_unit_of"]], "greekify_model() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.has_first_order_elimination"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_random_effect"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_zero_order_elimination"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.plot_iofv_vs_iofv"]], "print_model_code() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.read_model"]], "read_model_from_database() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.read_model_from_database"]], "read_model_from_string() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.set_dtbs_error_model"]], "set_estimation_step() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_estimates() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_time_varying_error_model"]], "set_transit_compartments() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_zero_order_elimination"]], "simplify_expression() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.split_joint_distribution"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.write_model"]], "create_results() (in module pharmpy.tools)": [[198, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[199, "pharmpy.tools.fit"]], "predict_influential_individuals() (in module pharmpy.tools)": [[200, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[201, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[202, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[203, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[204, "pharmpy.tools.rank_models"]], "read_results() (in module pharmpy.tools)": [[205, "pharmpy.tools.read_results"]], "retrieve_final_model() (in module pharmpy.tools)": [[206, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[207, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[208, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[209, "pharmpy.tools.run_amd"]], "run_covsearch() (in module pharmpy.tools)": [[210, "pharmpy.tools.run_covsearch"]], "run_iivsearch() (in module pharmpy.tools)": [[211, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[212, "pharmpy.tools.run_iovsearch"]], "run_modelsearch() (in module pharmpy.tools)": [[213, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[214, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[215, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[216, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[217, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[218, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[219, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[220, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[221, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[221, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[222, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[223, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[223, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[223, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[223, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[224, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[224, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[224, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[224, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[224, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[224, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[224, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[225, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[225, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[226, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[226, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[227, "pharmpy.workflows.NullToolDatabase"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[227, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[227, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[228, "pharmpy.workflows.Task"]], "has_input() (pharmpy.workflows.task method)": [[228, "pharmpy.workflows.Task.has_input"]], "tooldatabase (class in pharmpy.workflows)": [[229, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[229, "pharmpy.workflows.ToolDatabase.model_database"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[229, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[229, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[230, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[231, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[232, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[233, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[234, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[235, "pharmpy.workflows.split_common_options"]], "module": [[236, "module-pharmpy.model"], [237, "module-pharmpy.modeling"], [238, "module-pharmpy.tools"], [239, "module-pharmpy.workflows"]], "pharmpy.model": [[236, "module-pharmpy.model"]], "pharmpy.modeling": [[237, "module-pharmpy.modeling"]], "pharmpy.tools": [[238, "module-pharmpy.tools"]], "pharmpy.workflows": [[239, "module-pharmpy.workflows"]], "--algorithm": [[244, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[244, "cmdoption-pharmpy-run-allometry-allometric_variable"], [244, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--categorical": [[244, "cmdoption-pharmpy-run-amd-categorical"]], "--cl_init": [[244, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[244, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[244, "cmdoption-pharmpy-data-print-columns"]], "--continuous": [[244, "cmdoption-pharmpy-run-amd-continuous"]], "--cutoff": [[244, "cmdoption-pharmpy-run-iivsearch-cutoff"], [244, "cmdoption-pharmpy-run-iovsearch-cutoff"], [244, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--distribution": [[244, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[244, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[244, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [244, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[244, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[244, "cmdoption-pharmpy-model-add_iov-eta_names"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[244, "cmdoption-pharmpy-model-add_iov-etas"], [244, "cmdoption-pharmpy-model-boxcox-etas"], [244, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [244, "cmdoption-pharmpy-model-john_draper-etas"], [244, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[244, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[244, "cmdoption-pharmpy-data-anonymize-f"], [244, "cmdoption-pharmpy-data-append-f"], [244, "cmdoption-pharmpy-data-filter-f"], [244, "cmdoption-pharmpy-data-write-f"], [244, "cmdoption-pharmpy-model-absorption_rate-f"], [244, "cmdoption-pharmpy-model-add_cov_effect-f"], [244, "cmdoption-pharmpy-model-add_iiv-f"], [244, "cmdoption-pharmpy-model-add_iov-f"], [244, "cmdoption-pharmpy-model-boxcox-f"], [244, "cmdoption-pharmpy-model-create_joint_distribution-f"], [244, "cmdoption-pharmpy-model-elimination_rate-f"], [244, "cmdoption-pharmpy-model-error-f"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [244, "cmdoption-pharmpy-model-john_draper-f"], [244, "cmdoption-pharmpy-model-peripheral_compartments-f"], [244, "cmdoption-pharmpy-model-power_on_ruv-f"], [244, "cmdoption-pharmpy-model-remove_iiv-f"], [244, "cmdoption-pharmpy-model-remove_iov-f"], [244, "cmdoption-pharmpy-model-tdist-f"], [244, "cmdoption-pharmpy-model-transit_compartments-f"], [244, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[244, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[244, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[244, "cmdoption-pharmpy-data-anonymize-group"], [244, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[244, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[244, "cmdoption-pharmpy-data-anonymize-h"], [244, "cmdoption-pharmpy-data-append-h"], [244, "cmdoption-pharmpy-data-filter-h"], [244, "cmdoption-pharmpy-data-h"], [244, "cmdoption-pharmpy-data-print-h"], [244, "cmdoption-pharmpy-data-resample-h"], [244, "cmdoption-pharmpy-data-write-h"], [244, "cmdoption-pharmpy-h"], [244, "cmdoption-pharmpy-info-h"], [244, "cmdoption-pharmpy-model-absorption_rate-h"], [244, "cmdoption-pharmpy-model-add_cov_effect-h"], [244, "cmdoption-pharmpy-model-add_iiv-h"], [244, "cmdoption-pharmpy-model-add_iov-h"], [244, "cmdoption-pharmpy-model-boxcox-h"], [244, "cmdoption-pharmpy-model-create_joint_distribution-h"], [244, "cmdoption-pharmpy-model-elimination_rate-h"], [244, "cmdoption-pharmpy-model-error-h"], [244, "cmdoption-pharmpy-model-h"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [244, "cmdoption-pharmpy-model-john_draper-h"], [244, "cmdoption-pharmpy-model-peripheral_compartments-h"], [244, "cmdoption-pharmpy-model-power_on_ruv-h"], [244, "cmdoption-pharmpy-model-print-h"], [244, "cmdoption-pharmpy-model-remove_iiv-h"], [244, "cmdoption-pharmpy-model-remove_iov-h"], [244, "cmdoption-pharmpy-model-sample-h"], [244, "cmdoption-pharmpy-model-tdist-h"], [244, "cmdoption-pharmpy-model-transit_compartments-h"], [244, "cmdoption-pharmpy-model-update_inits-h"], [244, "cmdoption-pharmpy-results-bootstrap-h"], [244, "cmdoption-pharmpy-results-cdd-h"], [244, "cmdoption-pharmpy-results-frem-h"], [244, "cmdoption-pharmpy-results-h"], [244, "cmdoption-pharmpy-results-linearize-h"], [244, "cmdoption-pharmpy-results-ofv-h"], [244, "cmdoption-pharmpy-results-print-h"], [244, "cmdoption-pharmpy-results-qa-h"], [244, "cmdoption-pharmpy-results-report-h"], [244, "cmdoption-pharmpy-results-ruvsearch-h"], [244, "cmdoption-pharmpy-results-scm-h"], [244, "cmdoption-pharmpy-results-simeval-h"], [244, "cmdoption-pharmpy-results-summary-h"], [244, "cmdoption-pharmpy-run-allometry-h"], [244, "cmdoption-pharmpy-run-amd-h"], [244, "cmdoption-pharmpy-run-bootstrap-h"], [244, "cmdoption-pharmpy-run-covsearch-h"], [244, "cmdoption-pharmpy-run-estmethod-h"], [244, "cmdoption-pharmpy-run-execute-h"], [244, "cmdoption-pharmpy-run-h"], [244, "cmdoption-pharmpy-run-iivsearch-h"], [244, "cmdoption-pharmpy-run-iovsearch-h"], [244, "cmdoption-pharmpy-run-modelsearch-h"], [244, "cmdoption-pharmpy-run-ruvsearch-h"]], "--iiv_strategy": [[244, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [244, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[244, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[244, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq": [[244, "cmdoption-pharmpy-run-amd-lloq"]], "--lower_bounds": [[244, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[244, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[244, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[244, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[244, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[244, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[244, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[244, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[244, "cmdoption-pharmpy-model-add_cov_effect-operation"], [244, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[244, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[244, "cmdoption-pharmpy-data-anonymize-o"], [244, "cmdoption-pharmpy-data-append-o"], [244, "cmdoption-pharmpy-data-filter-o"], [244, "cmdoption-pharmpy-data-write-o"], [244, "cmdoption-pharmpy-model-absorption_rate-o"], [244, "cmdoption-pharmpy-model-add_cov_effect-o"], [244, "cmdoption-pharmpy-model-add_iiv-o"], [244, "cmdoption-pharmpy-model-add_iov-o"], [244, "cmdoption-pharmpy-model-boxcox-o"], [244, "cmdoption-pharmpy-model-create_joint_distribution-o"], [244, "cmdoption-pharmpy-model-elimination_rate-o"], [244, "cmdoption-pharmpy-model-error-o"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [244, "cmdoption-pharmpy-model-john_draper-o"], [244, "cmdoption-pharmpy-model-peripheral_compartments-o"], [244, "cmdoption-pharmpy-model-power_on_ruv-o"], [244, "cmdoption-pharmpy-model-remove_iiv-o"], [244, "cmdoption-pharmpy-model-remove_iov-o"], [244, "cmdoption-pharmpy-model-tdist-o"], [244, "cmdoption-pharmpy-model-transit_compartments-o"], [244, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[244, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[244, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[244, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[244, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[244, "cmdoption-pharmpy-run-allometry-path"], [244, "cmdoption-pharmpy-run-amd-path"], [244, "cmdoption-pharmpy-run-covsearch-path"], [244, "cmdoption-pharmpy-run-iivsearch-path"], [244, "cmdoption-pharmpy-run-iovsearch-path"], [244, "cmdoption-pharmpy-run-modelsearch-path"], [244, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[244, "cmdoption-pharmpy-run-iivsearch-rank_type"], [244, "cmdoption-pharmpy-run-iovsearch-rank_type"], [244, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[244, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[244, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[244, "cmdoption-pharmpy-data-resample-resamples"]], "--same_eta": [[244, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[244, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[244, "cmdoption-pharmpy-model-sample-samples"], [244, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[244, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[244, "cmdoption-pharmpy-data-resample-seed"], [244, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[244, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[244, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[244, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[244, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[244, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[244, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[244, "cmdoption-pharmpy-version"]], "-f": [[244, "cmdoption-pharmpy-data-anonymize-f"], [244, "cmdoption-pharmpy-data-append-f"], [244, "cmdoption-pharmpy-data-filter-f"], [244, "cmdoption-pharmpy-data-write-f"], [244, "cmdoption-pharmpy-model-absorption_rate-f"], [244, "cmdoption-pharmpy-model-add_cov_effect-f"], [244, "cmdoption-pharmpy-model-add_iiv-f"], [244, "cmdoption-pharmpy-model-add_iov-f"], [244, "cmdoption-pharmpy-model-boxcox-f"], [244, "cmdoption-pharmpy-model-create_joint_distribution-f"], [244, "cmdoption-pharmpy-model-elimination_rate-f"], [244, "cmdoption-pharmpy-model-error-f"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [244, "cmdoption-pharmpy-model-john_draper-f"], [244, "cmdoption-pharmpy-model-peripheral_compartments-f"], [244, "cmdoption-pharmpy-model-power_on_ruv-f"], [244, "cmdoption-pharmpy-model-remove_iiv-f"], [244, "cmdoption-pharmpy-model-remove_iov-f"], [244, "cmdoption-pharmpy-model-tdist-f"], [244, "cmdoption-pharmpy-model-transit_compartments-f"], [244, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[244, "cmdoption-pharmpy-data-anonymize-h"], [244, "cmdoption-pharmpy-data-append-h"], [244, "cmdoption-pharmpy-data-filter-h"], [244, "cmdoption-pharmpy-data-h"], [244, "cmdoption-pharmpy-data-print-h"], [244, "cmdoption-pharmpy-data-resample-h"], [244, "cmdoption-pharmpy-data-write-h"], [244, "cmdoption-pharmpy-h"], [244, "cmdoption-pharmpy-info-h"], [244, "cmdoption-pharmpy-model-absorption_rate-h"], [244, "cmdoption-pharmpy-model-add_cov_effect-h"], [244, "cmdoption-pharmpy-model-add_iiv-h"], [244, "cmdoption-pharmpy-model-add_iov-h"], [244, "cmdoption-pharmpy-model-boxcox-h"], [244, "cmdoption-pharmpy-model-create_joint_distribution-h"], [244, "cmdoption-pharmpy-model-elimination_rate-h"], [244, "cmdoption-pharmpy-model-error-h"], [244, "cmdoption-pharmpy-model-h"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [244, "cmdoption-pharmpy-model-john_draper-h"], [244, "cmdoption-pharmpy-model-peripheral_compartments-h"], [244, "cmdoption-pharmpy-model-power_on_ruv-h"], [244, "cmdoption-pharmpy-model-print-h"], [244, "cmdoption-pharmpy-model-remove_iiv-h"], [244, "cmdoption-pharmpy-model-remove_iov-h"], [244, "cmdoption-pharmpy-model-sample-h"], [244, "cmdoption-pharmpy-model-tdist-h"], [244, "cmdoption-pharmpy-model-transit_compartments-h"], [244, "cmdoption-pharmpy-model-update_inits-h"], [244, "cmdoption-pharmpy-results-bootstrap-h"], [244, "cmdoption-pharmpy-results-cdd-h"], [244, "cmdoption-pharmpy-results-frem-h"], [244, "cmdoption-pharmpy-results-h"], [244, "cmdoption-pharmpy-results-linearize-h"], [244, "cmdoption-pharmpy-results-ofv-h"], [244, "cmdoption-pharmpy-results-print-h"], [244, "cmdoption-pharmpy-results-qa-h"], [244, "cmdoption-pharmpy-results-report-h"], [244, "cmdoption-pharmpy-results-ruvsearch-h"], [244, "cmdoption-pharmpy-results-scm-h"], [244, "cmdoption-pharmpy-results-simeval-h"], [244, "cmdoption-pharmpy-results-summary-h"], [244, "cmdoption-pharmpy-run-allometry-h"], [244, "cmdoption-pharmpy-run-amd-h"], [244, "cmdoption-pharmpy-run-bootstrap-h"], [244, "cmdoption-pharmpy-run-covsearch-h"], [244, "cmdoption-pharmpy-run-estmethod-h"], [244, "cmdoption-pharmpy-run-execute-h"], [244, "cmdoption-pharmpy-run-h"], [244, "cmdoption-pharmpy-run-iivsearch-h"], [244, "cmdoption-pharmpy-run-iovsearch-h"], [244, "cmdoption-pharmpy-run-modelsearch-h"], [244, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[244, "cmdoption-pharmpy-data-anonymize-o"], [244, "cmdoption-pharmpy-data-append-o"], [244, "cmdoption-pharmpy-data-filter-o"], [244, "cmdoption-pharmpy-data-write-o"], [244, "cmdoption-pharmpy-model-absorption_rate-o"], [244, "cmdoption-pharmpy-model-add_cov_effect-o"], [244, "cmdoption-pharmpy-model-add_iiv-o"], [244, "cmdoption-pharmpy-model-add_iov-o"], [244, "cmdoption-pharmpy-model-boxcox-o"], [244, "cmdoption-pharmpy-model-create_joint_distribution-o"], [244, "cmdoption-pharmpy-model-elimination_rate-o"], [244, "cmdoption-pharmpy-model-error-o"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [244, "cmdoption-pharmpy-model-john_draper-o"], [244, "cmdoption-pharmpy-model-peripheral_compartments-o"], [244, "cmdoption-pharmpy-model-power_on_ruv-o"], [244, "cmdoption-pharmpy-model-remove_iiv-o"], [244, "cmdoption-pharmpy-model-remove_iov-o"], [244, "cmdoption-pharmpy-model-tdist-o"], [244, "cmdoption-pharmpy-model-transit_compartments-o"], [244, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[244, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [244, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[244, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[244, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[244, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[244, "cmdoption-pharmpy-data-append-arg-expression"], [244, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[244, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[244, "cmdoption-pharmpy-data-anonymize-arg-file"], [244, "cmdoption-pharmpy-data-append-arg-file"], [244, "cmdoption-pharmpy-data-filter-arg-file"], [244, "cmdoption-pharmpy-data-print-arg-file"], [244, "cmdoption-pharmpy-data-resample-arg-file"], [244, "cmdoption-pharmpy-data-write-arg-file"], [244, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [244, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [244, "cmdoption-pharmpy-model-add_iiv-arg-file"], [244, "cmdoption-pharmpy-model-add_iov-arg-file"], [244, "cmdoption-pharmpy-model-boxcox-arg-file"], [244, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [244, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [244, "cmdoption-pharmpy-model-error-arg-file"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [244, "cmdoption-pharmpy-model-john_draper-arg-file"], [244, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [244, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [244, "cmdoption-pharmpy-model-print-arg-file"], [244, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [244, "cmdoption-pharmpy-model-remove_iov-arg-file"], [244, "cmdoption-pharmpy-model-sample-arg-file"], [244, "cmdoption-pharmpy-model-tdist-arg-file"], [244, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [244, "cmdoption-pharmpy-model-update_inits-arg-file"], [244, "cmdoption-pharmpy-results-ofv-arg-file"], [244, "cmdoption-pharmpy-results-print-arg-file"], [244, "cmdoption-pharmpy-results-summary-arg-file"], [244, "cmdoption-pharmpy-run-allometry-arg-file"], [244, "cmdoption-pharmpy-run-bootstrap-arg-file"], [244, "cmdoption-pharmpy-run-covsearch-arg-file"], [244, "cmdoption-pharmpy-run-estmethod-arg-file"], [244, "cmdoption-pharmpy-run-execute-arg-file"], [244, "cmdoption-pharmpy-run-iivsearch-arg-file"], [244, "cmdoption-pharmpy-run-iovsearch-arg-file"], [244, "cmdoption-pharmpy-run-modelsearch-arg-file"], [244, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[244, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[244, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[244, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [244, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[244, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[244, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [244, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[244, "cmdoption-pharmpy-h"], [244, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[244, "cmdoption-pharmpy-data-h"]], "pharmpy-data-anonymize command line option": [[244, "cmdoption-pharmpy-data-anonymize-arg-file"], [244, "cmdoption-pharmpy-data-anonymize-f"], [244, "cmdoption-pharmpy-data-anonymize-group"], [244, "cmdoption-pharmpy-data-anonymize-h"], [244, "cmdoption-pharmpy-data-anonymize-o"]], "pharmpy-data-append command line option": [[244, "cmdoption-pharmpy-data-append-arg-expression"], [244, "cmdoption-pharmpy-data-append-arg-file"], [244, "cmdoption-pharmpy-data-append-f"], [244, "cmdoption-pharmpy-data-append-h"], [244, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-filter command line option": [[244, "cmdoption-pharmpy-data-filter-arg-expressions"], [244, "cmdoption-pharmpy-data-filter-arg-file"], [244, "cmdoption-pharmpy-data-filter-f"], [244, "cmdoption-pharmpy-data-filter-h"], [244, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[244, "cmdoption-pharmpy-data-print-arg-file"], [244, "cmdoption-pharmpy-data-print-columns"], [244, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[244, "cmdoption-pharmpy-data-resample-arg-file"], [244, "cmdoption-pharmpy-data-resample-group"], [244, "cmdoption-pharmpy-data-resample-h"], [244, "cmdoption-pharmpy-data-resample-replace"], [244, "cmdoption-pharmpy-data-resample-resamples"], [244, "cmdoption-pharmpy-data-resample-sample_size"], [244, "cmdoption-pharmpy-data-resample-seed"], [244, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[244, "cmdoption-pharmpy-data-write-arg-file"], [244, "cmdoption-pharmpy-data-write-f"], [244, "cmdoption-pharmpy-data-write-h"], [244, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[244, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[244, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[244, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [244, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [244, "cmdoption-pharmpy-model-absorption_rate-f"], [244, "cmdoption-pharmpy-model-absorption_rate-h"], [244, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[244, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [244, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [244, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [244, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [244, "cmdoption-pharmpy-model-add_cov_effect-f"], [244, "cmdoption-pharmpy-model-add_cov_effect-h"], [244, "cmdoption-pharmpy-model-add_cov_effect-o"], [244, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[244, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [244, "cmdoption-pharmpy-model-add_iiv-arg-file"], [244, "cmdoption-pharmpy-model-add_iiv-arg-param"], [244, "cmdoption-pharmpy-model-add_iiv-eta_name"], [244, "cmdoption-pharmpy-model-add_iiv-f"], [244, "cmdoption-pharmpy-model-add_iiv-h"], [244, "cmdoption-pharmpy-model-add_iiv-o"], [244, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[244, "cmdoption-pharmpy-model-add_iov-arg-file"], [244, "cmdoption-pharmpy-model-add_iov-arg-occ"], [244, "cmdoption-pharmpy-model-add_iov-eta_names"], [244, "cmdoption-pharmpy-model-add_iov-etas"], [244, "cmdoption-pharmpy-model-add_iov-f"], [244, "cmdoption-pharmpy-model-add_iov-h"], [244, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[244, "cmdoption-pharmpy-model-boxcox-arg-file"], [244, "cmdoption-pharmpy-model-boxcox-etas"], [244, "cmdoption-pharmpy-model-boxcox-f"], [244, "cmdoption-pharmpy-model-boxcox-h"], [244, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[244, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [244, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [244, "cmdoption-pharmpy-model-create_joint_distribution-f"], [244, "cmdoption-pharmpy-model-create_joint_distribution-h"], [244, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[244, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [244, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [244, "cmdoption-pharmpy-model-elimination_rate-f"], [244, "cmdoption-pharmpy-model-elimination_rate-h"], [244, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[244, "cmdoption-pharmpy-model-error-arg-error_type"], [244, "cmdoption-pharmpy-model-error-arg-file"], [244, "cmdoption-pharmpy-model-error-f"], [244, "cmdoption-pharmpy-model-error-h"], [244, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[244, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [244, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[244, "cmdoption-pharmpy-model-john_draper-arg-file"], [244, "cmdoption-pharmpy-model-john_draper-etas"], [244, "cmdoption-pharmpy-model-john_draper-f"], [244, "cmdoption-pharmpy-model-john_draper-h"], [244, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[244, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [244, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [244, "cmdoption-pharmpy-model-peripheral_compartments-f"], [244, "cmdoption-pharmpy-model-peripheral_compartments-h"], [244, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[244, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [244, "cmdoption-pharmpy-model-power_on_ruv-eps"], [244, "cmdoption-pharmpy-model-power_on_ruv-f"], [244, "cmdoption-pharmpy-model-power_on_ruv-h"], [244, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[244, "cmdoption-pharmpy-model-print-arg-file"], [244, "cmdoption-pharmpy-model-print-explicit-odes"], [244, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[244, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [244, "cmdoption-pharmpy-model-remove_iiv-f"], [244, "cmdoption-pharmpy-model-remove_iiv-h"], [244, "cmdoption-pharmpy-model-remove_iiv-o"], [244, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[244, "cmdoption-pharmpy-model-remove_iov-arg-file"], [244, "cmdoption-pharmpy-model-remove_iov-f"], [244, "cmdoption-pharmpy-model-remove_iov-h"], [244, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[244, "cmdoption-pharmpy-model-sample-arg-file"], [244, "cmdoption-pharmpy-model-sample-h"], [244, "cmdoption-pharmpy-model-sample-samples"], [244, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[244, "cmdoption-pharmpy-model-tdist-arg-file"], [244, "cmdoption-pharmpy-model-tdist-etas"], [244, "cmdoption-pharmpy-model-tdist-f"], [244, "cmdoption-pharmpy-model-tdist-h"], [244, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[244, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [244, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [244, "cmdoption-pharmpy-model-transit_compartments-f"], [244, "cmdoption-pharmpy-model-transit_compartments-h"], [244, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[244, "cmdoption-pharmpy-model-update_inits-arg-file"], [244, "cmdoption-pharmpy-model-update_inits-f"], [244, "cmdoption-pharmpy-model-update_inits-h"], [244, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[244, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[244, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [244, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[244, "cmdoption-pharmpy-results-cdd-arg-psn"], [244, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[244, "cmdoption-pharmpy-results-frem-arg-psn"], [244, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [244, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [244, "cmdoption-pharmpy-results-frem-h"], [244, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[244, "cmdoption-pharmpy-results-linearize-arg-psn"], [244, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[244, "cmdoption-pharmpy-results-ofv-arg-file"], [244, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[244, "cmdoption-pharmpy-results-print-arg-file"], [244, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[244, "cmdoption-pharmpy-results-qa-arg-psn"], [244, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[244, "cmdoption-pharmpy-results-report-arg-psn"], [244, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[244, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [244, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[244, "cmdoption-pharmpy-results-scm-arg-psn"], [244, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[244, "cmdoption-pharmpy-results-simeval-arg-psn"], [244, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[244, "cmdoption-pharmpy-results-summary-arg-file"], [244, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[244, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[244, "cmdoption-pharmpy-run-allometry-allometric_variable"], [244, "cmdoption-pharmpy-run-allometry-arg-file"], [244, "cmdoption-pharmpy-run-allometry-h"], [244, "cmdoption-pharmpy-run-allometry-initials"], [244, "cmdoption-pharmpy-run-allometry-lower_bounds"], [244, "cmdoption-pharmpy-run-allometry-non_fixed"], [244, "cmdoption-pharmpy-run-allometry-parameters"], [244, "cmdoption-pharmpy-run-allometry-path"], [244, "cmdoption-pharmpy-run-allometry-reference_value"], [244, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[244, "cmdoption-pharmpy-run-amd-allometric_variable"], [244, "cmdoption-pharmpy-run-amd-arg-input_path"], [244, "cmdoption-pharmpy-run-amd-categorical"], [244, "cmdoption-pharmpy-run-amd-cl_init"], [244, "cmdoption-pharmpy-run-amd-continuous"], [244, "cmdoption-pharmpy-run-amd-h"], [244, "cmdoption-pharmpy-run-amd-lloq"], [244, "cmdoption-pharmpy-run-amd-mat_init"], [244, "cmdoption-pharmpy-run-amd-modeltype"], [244, "cmdoption-pharmpy-run-amd-occasion"], [244, "cmdoption-pharmpy-run-amd-order"], [244, "cmdoption-pharmpy-run-amd-path"], [244, "cmdoption-pharmpy-run-amd-search_space"], [244, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[244, "cmdoption-pharmpy-run-bootstrap-arg-file"], [244, "cmdoption-pharmpy-run-bootstrap-h"], [244, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[244, "cmdoption-pharmpy-run-covsearch-algorithm"], [244, "cmdoption-pharmpy-run-covsearch-arg-file"], [244, "cmdoption-pharmpy-run-covsearch-effects"], [244, "cmdoption-pharmpy-run-covsearch-h"], [244, "cmdoption-pharmpy-run-covsearch-max_steps"], [244, "cmdoption-pharmpy-run-covsearch-p_backward"], [244, "cmdoption-pharmpy-run-covsearch-p_forward"], [244, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[244, "cmdoption-pharmpy-run-estmethod-arg-file"], [244, "cmdoption-pharmpy-run-estmethod-h"], [244, "cmdoption-pharmpy-run-estmethod-methods"], [244, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[244, "cmdoption-pharmpy-run-execute-arg-file"], [244, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[244, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [244, "cmdoption-pharmpy-run-iivsearch-arg-file"], [244, "cmdoption-pharmpy-run-iivsearch-cutoff"], [244, "cmdoption-pharmpy-run-iivsearch-h"], [244, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [244, "cmdoption-pharmpy-run-iivsearch-path"], [244, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[244, "cmdoption-pharmpy-run-iovsearch-arg-file"], [244, "cmdoption-pharmpy-run-iovsearch-column"], [244, "cmdoption-pharmpy-run-iovsearch-cutoff"], [244, "cmdoption-pharmpy-run-iovsearch-distribution"], [244, "cmdoption-pharmpy-run-iovsearch-h"], [244, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [244, "cmdoption-pharmpy-run-iovsearch-path"], [244, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[244, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [244, "cmdoption-pharmpy-run-modelsearch-arg-file"], [244, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [244, "cmdoption-pharmpy-run-modelsearch-cutoff"], [244, "cmdoption-pharmpy-run-modelsearch-h"], [244, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [244, "cmdoption-pharmpy-run-modelsearch-path"], [244, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[244, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [244, "cmdoption-pharmpy-run-ruvsearch-groups"], [244, "cmdoption-pharmpy-run-ruvsearch-h"], [244, "cmdoption-pharmpy-run-ruvsearch-p_value"], [244, "cmdoption-pharmpy-run-ruvsearch-path"], [244, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[244, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [244, "cmdoption-pharmpy-results-cdd-arg-psn"], [244, "cmdoption-pharmpy-results-frem-arg-psn"], [244, "cmdoption-pharmpy-results-linearize-arg-psn"], [244, "cmdoption-pharmpy-results-qa-arg-psn"], [244, "cmdoption-pharmpy-results-report-arg-psn"], [244, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [244, "cmdoption-pharmpy-results-scm-arg-psn"], [244, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[244, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [244, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})