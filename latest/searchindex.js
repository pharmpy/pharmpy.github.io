Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "structsearch", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "structsearch.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Structsearch", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 23, 24, 25, 28, 30, 58, 59, 73, 78, 82, 83, 84, 85, 87, 88, 89, 90, 97, 100, 107, 110, 116, 117, 118, 121, 127, 131, 138, 142, 143, 151, 172, 186, 187, 208, 220, 226, 233, 259, 265, 269, 273, 274, 275, 290, 291, 293, 294, 295, 296, 298, 300, 301, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 321, 322, 323, 325, 326, 327, 328], "section": [0, 295, 298, 309, 311, 321, 326], "i": [0, 1, 2, 6, 8, 9, 14, 18, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 51, 53, 60, 61, 70, 72, 73, 74, 77, 78, 80, 82, 84, 85, 87, 88, 89, 97, 98, 100, 103, 106, 107, 111, 115, 116, 117, 118, 133, 134, 135, 140, 141, 146, 152, 153, 155, 158, 159, 174, 175, 179, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 207, 208, 210, 211, 213, 216, 217, 218, 221, 223, 224, 225, 231, 233, 235, 236, 240, 242, 244, 246, 252, 253, 257, 258, 259, 260, 261, 262, 267, 269, 273, 274, 275, 280, 289, 290, 291, 293, 294, 295, 296, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 328], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 244, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 291, 306, 309, 313, 317, 318, 322, 326], "The": [0, 2, 3, 6, 8, 9, 10, 14, 18, 23, 24, 25, 28, 33, 35, 39, 41, 43, 46, 61, 69, 77, 80, 84, 85, 86, 87, 88, 89, 109, 126, 131, 134, 135, 146, 147, 149, 167, 182, 186, 187, 197, 200, 208, 218, 222, 237, 240, 249, 255, 256, 261, 262, 265, 291, 294, 296, 297, 298, 300, 305, 308, 309, 312, 313, 315, 317, 318, 326, 327, 328], "inform": [0, 1, 2, 6, 8, 131, 222, 291, 293, 298, 300, 301, 303, 306, 307, 308, 309, 311, 314, 318, 322, 323, 325, 326, 327], "intend": [0, 309, 311, 326], "non": [0, 24, 72, 77, 86, 100, 221, 291, 300, 301, 304, 309, 311, 313, 318, 326], "hard": [0, 318], "find": [0, 8, 28, 51, 92, 93, 131, 251, 267, 291, 307, 309, 325, 327, 328], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 296, 298, 300, 303, 305, 306, 308, 309, 311, 312, 313, 314, 322, 325], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 291, 297, 298, 299, 303, 304, 305, 306, 308, 309, 310, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 327], "develop": [0, 253, 291, 309, 317, 318, 326, 328], "remov": [0, 2, 9, 25, 28, 82, 116, 117, 118, 155, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 197, 201, 214, 227, 229, 231, 253, 290, 291, 293, 298, 301, 306, 308, 309, 315], "row": [0, 1, 2, 24, 84, 85, 91, 98, 101, 103, 155, 183, 184, 209, 266, 289, 291, 293, 298, 300, 304, 306, 308, 312, 313, 314, 322, 323, 325], "split": [0, 77, 221, 284, 291, 293, 311, 326], "drop": [0, 2, 6, 18, 82, 83, 228, 291, 314, 318, 323], "column": [0, 1, 2, 6, 8, 10, 18, 24, 30, 32, 41, 49, 61, 80, 82, 83, 84, 85, 86, 90, 97, 100, 101, 103, 107, 155, 159, 162, 166, 177, 182, 183, 188, 191, 200, 209, 211, 222, 226, 228, 242, 243, 244, 253, 258, 265, 266, 289, 291, 293, 298, 300, 304, 306, 308, 311, 312, 313, 314, 322, 323, 325, 326], "error": [0, 2, 11, 19, 20, 23, 25, 28, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 129, 134, 135, 146, 149, 165, 172, 186, 187, 207, 208, 211, 215, 222, 234, 246, 261, 264, 267, 272, 289, 291, 298, 303, 306, 308, 314, 315, 322, 323, 325, 326], "handl": [0, 2, 3, 90, 220, 222, 291, 300, 301, 304, 318], "valid": [0, 25, 36, 39, 106, 189, 253, 291, 309], "some": [0, 8, 10, 64, 77, 172, 186, 222, 271, 289, 291, 293, 296, 298, 300, 309, 310, 313, 314, 317, 318, 322, 325, 326], "rule": [0, 70, 309], "These": [0, 296, 301, 304, 309, 310, 313, 317, 318, 326], "were": [0, 25, 28, 264, 289, 290, 291, 300, 303, 304, 309, 312, 314, 326, 328], "test": [0, 2, 53, 136, 153, 255, 256, 258, 260, 261, 262, 291, 293, 297, 298, 303, 305, 306, 308, 312, 314, 318, 322, 325], "7": [0, 1, 2, 35, 54, 56, 57, 62, 66, 67, 85, 98, 103, 118, 122, 155, 209, 244, 289, 290, 298, 300, 304, 306, 308, 309, 310, 312, 313, 314, 319, 321, 322, 323, 324, 325], "4": [0, 1, 2, 6, 54, 56, 57, 62, 66, 67, 84, 85, 86, 87, 88, 89, 98, 101, 103, 104, 118, 155, 209, 225, 244, 261, 267, 289, 290, 298, 299, 300, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 319, 321, 322, 323, 324, 325], "3": [0, 1, 2, 6, 28, 54, 55, 56, 57, 62, 65, 66, 67, 68, 71, 84, 85, 86, 87, 88, 89, 98, 101, 103, 104, 105, 108, 118, 122, 155, 165, 179, 183, 184, 185, 209, 213, 222, 223, 224, 225, 242, 243, 244, 261, 266, 289, 290, 298, 299, 300, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 319, 321, 322, 323, 324, 325, 326, 328], "delimet": 0, "between": [0, 8, 9, 25, 32, 77, 97, 222, 265, 280, 289, 290, 291, 293, 303, 304, 308, 309, 315, 318, 321, 322], "comma": [0, 293, 326], "space": [0, 69, 253, 260, 262, 291, 293, 326], "tab": [0, 165, 291, 313, 316], "befor": [0, 2, 28, 184, 185, 232, 291, 293, 310, 314], "after": [0, 6, 28, 116, 117, 118, 211, 251, 264, 267, 271, 290, 291, 293, 299, 300, 304, 309, 310, 311, 314, 318, 319, 321, 323, 324, 328], "ar": [0, 2, 3, 4, 6, 7, 8, 14, 24, 25, 28, 36, 37, 38, 39, 41, 47, 61, 75, 77, 80, 100, 101, 115, 134, 135, 146, 156, 174, 175, 177, 180, 187, 189, 192, 193, 207, 212, 221, 222, 226, 233, 241, 246, 253, 255, 257, 259, 260, 269, 271, 289, 291, 293, 294, 296, 298, 300, 301, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 323, 325, 326, 328], "give": [0, 24, 115, 158, 185, 207, 269, 273, 274, 289, 291, 293, 304, 308, 309, 311, 323], "sic": 0, "begin": [0, 304, 311, 313], "end": [0, 37, 51, 304, 309, 311, 313, 326], "insert": [0, 279, 291], "each": [0, 2, 6, 8, 25, 33, 35, 60, 61, 62, 84, 85, 86, 87, 88, 89, 98, 103, 104, 118, 157, 162, 163, 177, 182, 185, 194, 196, 207, 209, 271, 289, 290, 293, 295, 298, 300, 301, 303, 304, 306, 308, 309, 311, 312, 313, 314, 315, 321, 322, 323, 324, 325, 326, 328], "can": [0, 1, 2, 6, 10, 18, 24, 25, 28, 34, 39, 53, 61, 69, 78, 86, 131, 182, 220, 222, 240, 251, 256, 259, 271, 274, 275, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 321, 322, 325, 326, 327, 328], "onli": [0, 2, 3, 8, 10, 14, 25, 35, 58, 59, 70, 73, 82, 84, 85, 87, 88, 89, 91, 106, 110, 121, 127, 134, 135, 146, 157, 182, 186, 187, 194, 196, 207, 208, 209, 211, 220, 222, 232, 259, 261, 262, 267, 280, 291, 293, 294, 298, 308, 309, 311, 314, 317, 325, 326], "numer": [0, 6, 14, 29, 84, 85, 87, 88, 289, 291, 300, 318], "e": [0, 6, 14, 18, 25, 36, 38, 73, 79, 116, 117, 118, 158, 175, 189, 190, 260, 289, 291, 296, 300, 303, 304, 306, 308, 309, 311, 313, 314, 315, 318, 322, 325, 326], "other": [0, 7, 9, 18, 25, 28, 43, 74, 163, 259, 279, 284, 289, 291, 294, 296, 301, 306, 309, 318, 325], "charact": [0, 10, 300], "than": [0, 23, 24, 291, 306, 309, 314], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 25, 35, 246, 253, 269, 270, 273, 274, 283, 291, 293, 298, 309, 311, 314, 318, 326], "except": [0, 11, 12, 19, 20, 21, 38, 61, 182, 291, 309], "ii": [0, 6], "datx": [0, 291], "fortran": 0, "short": [0, 296, 309], "form": [0, 25, 182, 291, 309], "exponenti": [0, 35, 38, 47, 196, 293, 298, 304], "notat": 0, "2": [0, 1, 2, 6, 18, 28, 33, 35, 37, 42, 46, 48, 50, 52, 53, 54, 55, 56, 57, 62, 65, 66, 67, 68, 72, 84, 85, 86, 87, 88, 89, 98, 101, 103, 104, 108, 118, 122, 155, 165, 179, 183, 184, 185, 186, 187, 194, 198, 202, 203, 206, 208, 209, 210, 213, 216, 224, 225, 244, 252, 261, 265, 289, 290, 293, 296, 298, 299, 300, 303, 304, 306, 308, 310, 311, 312, 313, 314, 315, 319, 321, 322, 323, 324, 325, 326], "1": [0, 1, 2, 5, 6, 7, 8, 14, 16, 17, 18, 22, 24, 25, 28, 33, 34, 35, 36, 37, 38, 39, 43, 46, 48, 53, 54, 55, 56, 57, 62, 63, 65, 66, 67, 68, 73, 75, 80, 84, 85, 86, 87, 88, 89, 91, 98, 101, 103, 104, 105, 106, 108, 118, 122, 130, 133, 155, 156, 157, 158, 159, 165, 169, 179, 182, 183, 184, 185, 189, 193, 194, 195, 196, 199, 202, 203, 206, 207, 209, 210, 211, 213, 216, 217, 220, 222, 223, 224, 225, 233, 244, 252, 253, 254, 255, 260, 261, 262, 265, 289, 290, 293, 295, 296, 298, 299, 300, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 319, 321, 322, 323, 324, 325, 326, 328], "mean": [0, 2, 13, 17, 18, 22, 61, 64, 75, 158, 183, 184, 253, 269, 273, 289, 290, 291, 293, 304, 306, 309, 311, 312, 313, 314, 318, 321, 324, 325, 326], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 23, 24, 25, 28, 30, 61, 63, 64, 69, 80, 81, 86, 92, 93, 109, 115, 123, 124, 125, 126, 128, 129, 130, 131, 159, 162, 167, 182, 183, 184, 186, 187, 198, 201, 208, 211, 214, 240, 250, 259, 261, 264, 267, 269, 273, 274, 280, 289, 290, 292, 293, 296, 297, 298, 300, 301, 306, 308, 309, 310, 311, 313, 314, 317, 318, 322, 323, 325, 326], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 81, 270, 272, 284, 309, 313], "instead": [0, 9, 46, 70, 86, 115, 269, 290, 291, 293, 300, 301, 303, 304, 309, 318], "lone": 0, "an": [0, 4, 6, 8, 9, 10, 15, 16, 18, 24, 25, 28, 31, 32, 33, 36, 39, 40, 41, 50, 53, 69, 97, 100, 104, 107, 134, 135, 136, 140, 141, 144, 146, 149, 153, 156, 158, 171, 182, 186, 189, 197, 224, 237, 240, 241, 242, 243, 244, 264, 265, 267, 270, 272, 291, 293, 295, 296, 298, 300, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 318, 321, 323, 324, 325, 326, 328], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 23, 24, 25, 26, 28, 33, 35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 77, 78, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 101, 103, 104, 105, 111, 122, 123, 129, 130, 132, 133, 155, 156, 157, 158, 165, 169, 173, 177, 178, 179, 183, 184, 185, 187, 189, 190, 192, 193, 196, 197, 198, 200, 201, 207, 208, 209, 211, 214, 221, 222, 223, 224, 227, 230, 233, 241, 243, 244, 252, 253, 255, 261, 262, 266, 267, 289, 290, 293, 296, 298, 300, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 319, 321, 322, 323, 324, 325, 326, 328], "dot": 0, "most": [0, 6, 35, 220, 293, 301, 309, 321], "24": [0, 2, 62, 98, 103, 105, 118, 122, 155, 209, 244, 289, 290, 298, 300, 303, 306, 308, 310, 312, 313, 314, 321, 322, 324], "long": [0, 291, 309, 318], "count": [0, 104, 266, 273, 291, 314], "delimit": 0, "wa": [0, 26, 265, 289, 291, 297, 309, 310, 322, 323], "eaten": 0, "empti": [0, 2, 18, 25, 264, 295], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 25, 26, 28, 32, 34, 42, 46, 51, 53, 70, 77, 82, 94, 95, 96, 97, 111, 179, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 227, 229, 230, 232, 233, 291, 293, 294, 295, 300, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 325, 326, 328], "As": [0, 25, 294, 313, 315, 326], "contain": [0, 2, 3, 25, 80, 86, 160, 161, 242, 243, 244, 289, 290, 293, 298, 299, 300, 301, 303, 306, 308, 309, 311, 312, 314, 319, 321, 322, 323, 324, 325, 326], "drope": 0, "input": [0, 7, 8, 9, 10, 25, 28, 35, 36, 38, 41, 67, 68, 78, 83, 132, 136, 137, 147, 165, 169, 184, 196, 218, 240, 253, 265, 276, 279, 291, 293, 298, 300, 303, 306, 308, 313, 314, 315, 318, 322, 325], "ani": [0, 2, 6, 9, 18, 50, 61, 72, 180, 251, 256, 266, 276, 280, 296, 300, 305, 306, 308, 309, 311, 312, 313, 315, 318, 326, 328], "limit": [0, 2, 6, 71, 177, 200, 207, 222, 253, 291, 293, 308, 309, 316], "length": [0, 86, 87, 88, 89, 104, 105, 122, 291, 313], "If": [0, 2, 8, 10, 18, 28, 34, 35, 43, 46, 51, 53, 61, 76, 77, 78, 86, 97, 100, 104, 106, 107, 145, 174, 175, 179, 182, 184, 194, 196, 197, 207, 218, 221, 223, 224, 225, 226, 233, 246, 253, 257, 260, 267, 279, 289, 293, 296, 298, 300, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 318, 326, 328], "ha": [0, 2, 8, 18, 25, 39, 77, 86, 98, 103, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 289, 291, 293, 294, 296, 298, 300, 301, 303, 306, 308, 309, 311, 313, 314, 320, 322, 323, 325, 326, 328], "more": [0, 2, 8, 24, 252, 255, 257, 258, 260, 261, 262, 291, 293, 298, 303, 305, 307, 309, 311, 313, 314, 318, 321, 325, 326, 327], "extra": [0, 18, 291], "consid": [0, 2, 100, 257, 258, 260, 291, 298, 301, 303, 306, 308, 309, 314, 322], "start": [0, 2, 8, 37, 50, 104, 159, 173, 182, 257, 262, 291, 293, 296, 298, 303, 304, 308, 309, 311, 312, 313, 314, 322, 323, 325, 326, 328], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 26, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 280, 289, 291, 293, 294, 296, 298, 301, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 315, 316, 318, 322, 324, 325, 326, 327, 328], "been": [0, 2, 6, 152, 294, 298, 300, 309, 313, 326, 328], "provid": [0, 25, 184, 207, 293, 294, 297, 298, 300, 306, 308, 309, 314, 328], "default": [0, 1, 2, 6, 7, 9, 14, 18, 23, 25, 30, 33, 35, 37, 38, 39, 45, 47, 51, 53, 60, 77, 78, 82, 106, 109, 111, 115, 124, 126, 133, 134, 135, 146, 147, 174, 175, 182, 183, 184, 186, 187, 192, 193, 196, 197, 207, 208, 211, 221, 223, 224, 225, 235, 236, 239, 240, 246, 252, 257, 258, 260, 262, 267, 269, 273, 274, 283, 288, 291, 293, 295, 298, 306, 308, 311, 313, 314, 315, 316, 322, 325, 328], "where": [0, 2, 7, 33, 46, 251, 289, 290, 291, 294, 295, 298, 300, 303, 304, 308, 309, 313, 314, 315, 318, 326, 328], "rexex": 0, "": [0, 8, 10, 14, 69, 169, 291, 293, 298, 300, 304, 309, 315, 319], "za": 0, "z": [0, 33], "either": [0, 2, 38, 39, 80, 106, 253, 260, 293, 306, 309, 311, 313, 325, 326, 328], "surround": 0, "two": [0, 8, 9, 25, 28, 80, 163, 289, 291, 292, 293, 309, 318, 322, 326], "By": [0, 18, 25, 134, 135, 146, 308, 309, 311], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 25, 28, 51, 69, 159, 171, 183, 222, 237, 257, 258, 259, 260, 261, 273, 289, 290, 291, 293, 295, 298, 303, 306, 308, 309, 311, 312, 313, 314, 315, 316, 322, 323, 325, 326, 328], "interpret": [0, 291, 309, 328], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 24, 25, 26, 28, 32, 33, 41, 44, 53, 61, 69, 77, 78, 80, 84, 85, 86, 87, 88, 89, 97, 115, 133, 158, 159, 180, 182, 183, 184, 185, 186, 187, 194, 196, 205, 207, 208, 215, 222, 226, 232, 234, 235, 239, 242, 243, 244, 246, 252, 253, 255, 256, 257, 258, 259, 260, 261, 269, 270, 271, 273, 274, 275, 277, 279, 283, 289, 290, 291, 293, 295, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 322, 323, 326, 327], "chang": [0, 2, 9, 18, 24, 25, 37, 80, 192, 194, 198, 199, 201, 207, 210, 214, 216, 230, 293, 296, 309, 311, 313, 314, 315, 322, 328], "howev": [0, 8, 306, 309, 315, 326, 328], "one": [0, 2, 6, 8, 9, 10, 14, 22, 23, 24, 25, 35, 43, 73, 82, 86, 95, 134, 135, 146, 166, 182, 184, 191, 194, 196, 215, 226, 228, 229, 234, 239, 259, 261, 264, 266, 269, 273, 274, 277, 291, 293, 294, 296, 300, 301, 303, 304, 308, 309, 311, 313, 314, 315, 318, 326], "legal": [0, 309], "ones": [0, 9, 298, 304], "9": [0, 2, 6, 46, 62, 71, 85, 88, 98, 101, 103, 118, 122, 233, 244, 289, 290, 298, 300, 305, 306, 308, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325, 328], "sinc": [0, 6, 197, 291, 300, 301, 304, 306, 313, 314, 315, 318, 328], "number": [0, 2, 6, 8, 14, 22, 23, 41, 51, 53, 61, 64, 72, 78, 79, 80, 116, 117, 118, 119, 120, 122, 159, 177, 182, 183, 184, 185, 186, 196, 206, 213, 254, 255, 259, 261, 265, 266, 289, 291, 293, 298, 300, 309, 313, 321, 322, 323, 325, 326, 328], "valu": [0, 1, 6, 10, 18, 23, 24, 25, 33, 38, 45, 47, 48, 61, 63, 64, 71, 72, 84, 85, 86, 87, 88, 89, 94, 96, 98, 101, 103, 123, 129, 130, 153, 177, 182, 185, 200, 209, 211, 230, 246, 252, 255, 257, 258, 260, 261, 262, 267, 288, 289, 291, 293, 296, 298, 300, 303, 310, 311, 313, 322, 323, 324], "met": [0, 262, 309], "doubl": 0, "big": 0, "warn": [0, 2, 12, 240, 264, 272, 291, 298, 303, 306, 308, 314, 325, 328], "larger": [0, 309], "pad": 0, "filter": [0, 91, 116, 117, 118, 291, 300, 325], "so": [0, 23, 91, 182, 271, 294, 296, 301, 309, 315, 321, 328], "characterscannot": 0, "neither": [0, 309], "perform": [0, 14, 73, 80, 293, 298, 309, 311, 313, 314, 315], "order": [0, 8, 9, 25, 28, 32, 132, 137, 138, 143, 148, 150, 151, 182, 194, 195, 203, 210, 216, 217, 218, 253, 291, 293, 300, 305, 309, 311, 312, 313, 314, 318, 326], "given": [0, 2, 9, 25, 37, 75, 79, 84, 85, 87, 88, 89, 95, 96, 124, 125, 126, 128, 136, 147, 153, 155, 167, 174, 175, 183, 184, 185, 211, 219, 222, 229, 230, 238, 240, 246, 269, 271, 273, 274, 279, 291, 293, 296, 298, 300, 303, 304, 306, 308, 309, 314, 315, 321, 322, 325], "critic": [0, 294], "case": [0, 2, 8, 77, 90, 134, 135, 146, 182, 222, 267, 291, 298, 306, 308, 309, 311, 313, 314, 320, 325, 327], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 25, 28, 32, 97, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 127, 129, 130, 132, 154, 266, 291, 300, 304, 308, 309, 311, 312, 318, 328], "need": [0, 2, 18, 38, 73, 90, 131, 291, 293, 295, 296, 297, 301, 304, 305, 309, 311, 312, 317, 326, 328], "becaus": [0, 8, 291, 309], "later": [0, 305, 309], "comparison": [0, 314, 318, 325], "It": [0, 18, 269, 294, 295, 296, 300, 301, 305, 306, 307, 309, 311, 312, 313, 316, 321, 326, 328], "possibl": [0, 2, 6, 8, 25, 138, 142, 143, 151, 220, 257, 260, 291, 295, 296, 300, 306, 309, 311, 312, 313, 314, 315, 316, 318, 321, 325, 326, 328], "done": [0, 1, 73, 74, 80, 84, 85, 87, 88, 89, 182, 294, 311, 314, 316, 322], "eq": [0, 8, 31, 313], "ne": 0, "text": [0, 18, 35, 36, 39, 189, 311, 313, 318], "otherwis": [0, 6, 28, 33, 34, 35, 38, 42, 73, 77, 97, 100, 107, 133, 134, 135, 146, 149, 152, 156, 157, 158, 182, 194, 207, 208, 210, 211, 213, 216, 222, 294, 300, 309, 311, 313, 318], "appropri": [0, 294, 309], "letter": [0, 133], "alphanum": 0, "underscor": 0, "real": [0, 141, 153, 300, 301], "special": [0, 6, 226, 296, 300, 301, 309], "digit": [0, 72, 291], "enclos": 0, "ok": [0, 301], "w": [0, 28, 73, 133, 156, 165, 166, 172, 186, 196, 208, 211, 215, 222, 234, 298, 309, 311, 313], "o": [0, 290, 292, 293, 297, 322], "With": [0, 326], "eqn": 0, "ge": [0, 313], "etc": [0, 3, 291, 313, 315, 323, 326], "maximum": [0, 14, 35, 72, 255, 293, 298], "have": [0, 6, 8, 18, 25, 28, 35, 38, 80, 137, 148, 150, 226, 258, 266, 271, 273, 291, 293, 295, 296, 297, 298, 300, 301, 303, 305, 306, 308, 309, 311, 312, 314, 315, 316, 318, 325, 326, 328], "12": [0, 1, 2, 62, 98, 101, 103, 104, 105, 118, 155, 209, 244, 289, 290, 298, 300, 303, 304, 306, 308, 309, 310, 312, 313, 314, 319, 321, 322, 323, 324, 325], "must": [0, 23, 41, 77, 182, 196, 269, 290, 293, 309, 311], "decreas": [0, 301], "within": [0, 182, 294, 309, 326], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 25, 28, 207, 289, 294, 296, 298, 301, 309, 315, 328], "affect": [0, 115, 194, 207, 291, 309, 315], "even": [0, 23, 79, 83, 98, 103, 295, 309, 315], "still": [0, 309, 315, 328], "cannot": [0, 8, 61, 77, 240, 268, 291, 300, 309, 326], "both": [0, 1, 2, 8, 18, 41, 148, 190, 222, 266, 291, 294, 298, 300, 303, 306, 308, 309, 312, 314, 322, 325, 326], "reenter": 0, "think": 0, "risk": [0, 309], "being": [0, 6, 25, 43, 61, 139, 145, 185, 186, 187, 208, 290, 291, 295, 303, 304, 309, 315, 318, 323, 325], "truncat": 0, "encod": [0, 215, 234, 291, 300, 316], "here": [0, 2, 115, 300, 301, 302, 305, 306, 312, 313, 314, 318, 326, 327], "possibli": [0, 318], "partial": [0, 293, 297, 318], "list": [0, 2, 6, 8, 10, 13, 14, 17, 24, 25, 28, 31, 33, 38, 41, 77, 80, 82, 83, 92, 93, 95, 96, 108, 109, 115, 124, 125, 126, 128, 154, 162, 174, 175, 182, 183, 188, 196, 207, 221, 223, 224, 225, 227, 228, 229, 230, 239, 246, 251, 252, 253, 256, 257, 258, 259, 261, 264, 265, 266, 267, 278, 279, 289, 290, 291, 293, 294, 296, 298, 300, 303, 308, 309, 311, 313, 321, 322, 323, 325, 326], "decid": [0, 2, 43, 147, 306, 308, 309, 314, 322], "whether": [0, 23, 33, 35, 38, 53, 77, 136, 145, 147, 182, 196, 242, 244, 253, 267, 270, 283, 291, 293, 306, 309, 314, 326], "put": [0, 8, 159, 182, 291, 301, 304], "up": [0, 14, 294, 295, 298, 305, 312, 326, 328], "written": [0, 291, 309, 311, 313, 315, 326], "scientif": [0, 301], "14": [0, 2, 62, 85, 98, 103, 118, 244, 289, 290, 298, 306, 308, 309, 310, 312, 313, 321, 323, 324, 325], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 104, 197, 289, 313], "describ": [0, 2, 25, 28, 61, 137, 138, 139, 142, 143, 148, 150, 151, 289, 298, 300, 306, 308, 311, 325], "output": [0, 8, 18, 266, 279, 291, 293, 296, 309, 311, 313, 326], "alwai": [0, 184, 291, 300, 313, 314, 325], "synonym": [0, 291], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 24, 25, 29, 30, 31, 35, 36, 38, 39, 40, 41, 46, 48, 51, 61, 72, 74, 77, 79, 80, 82, 87, 88, 89, 95, 99, 104, 105, 109, 112, 115, 118, 122, 124, 125, 126, 128, 133, 134, 135, 136, 146, 154, 156, 159, 163, 171, 174, 175, 177, 179, 181, 182, 186, 187, 188, 189, 191, 196, 197, 200, 204, 207, 208, 209, 211, 218, 221, 223, 224, 225, 228, 229, 241, 246, 251, 252, 253, 258, 263, 264, 267, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 288, 290, 291, 293, 295, 298, 300, 306, 308, 309, 312, 313, 314, 317, 322, 323, 325, 326], "avail": [0, 1, 2, 6, 33, 42, 61, 131, 156, 194, 210, 213, 216, 222, 241, 246, 253, 289, 293, 298, 303, 304, 306, 308, 309, 311, 312, 313, 314, 315, 318, 322, 324, 325, 326, 327, 328], "carri": [0, 309], "over": [0, 122, 159, 182, 211, 242, 243, 244, 289, 290, 291, 304, 308, 326], "onc": [0, 157, 298, 315], "covari": [0, 6, 10, 14, 17, 25, 35, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 77, 103, 115, 136, 154, 165, 171, 183, 184, 185, 188, 222, 255, 291, 293, 298, 300, 301, 308, 318, 323, 326], "final": [0, 2, 44, 178, 250, 291, 298, 303, 304, 306, 308, 309, 313, 314, 315, 322, 323, 325], "estim": [0, 1, 2, 3, 14, 15, 18, 23, 24, 33, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 50, 60, 61, 62, 64, 71, 72, 75, 77, 86, 94, 95, 96, 163, 164, 165, 169, 173, 178, 179, 183, 184, 185, 186, 187, 192, 193, 194, 198, 202, 203, 207, 208, 210, 213, 215, 216, 217, 223, 224, 225, 229, 230, 232, 233, 234, 239, 241, 252, 253, 256, 262, 267, 289, 290, 291, 293, 298, 299, 301, 306, 307, 308, 310, 314, 317, 318, 321, 322, 325, 326, 327], "oppos": 0, "ext": [0, 291, 326], "per": [0, 6, 14, 24, 73, 116, 117, 118, 122, 183, 184, 207, 211, 266], "est": [0, 37, 44, 50, 173, 178, 311, 313], "first": [0, 2, 7, 25, 34, 35, 42, 79, 98, 103, 106, 134, 135, 137, 138, 143, 146, 148, 163, 170, 186, 187, 192, 194, 195, 196, 203, 208, 210, 211, 213, 216, 291, 293, 298, 304, 306, 308, 309, 313, 315, 318, 326, 328], "call": [0, 266, 280, 291, 295, 296, 309, 315, 328], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 290, 291, 293, 298, 303, 306, 308, 314, 318, 319, 321, 322, 323, 325, 326], "theta": [0, 1, 28, 33, 35, 38, 123, 129, 130, 165, 166, 169, 207, 215, 234, 291, 306, 313, 314, 315, 318, 322], "sigma": [0, 1, 123, 129, 130, 165, 166, 169, 186, 187, 208, 304, 306, 313, 314, 315], "omega": [0, 1, 22, 25, 62, 123, 129, 130, 165, 166, 169, 291, 293, 304, 306, 311, 313, 314, 315, 321, 322], "fix": [0, 1, 2, 23, 24, 33, 43, 48, 53, 77, 94, 95, 96, 123, 129, 130, 190, 198, 201, 214, 221, 227, 229, 230, 252, 293, 306, 309, 311, 313, 318, 326], "offdiagon": 0, "could": [0, 18, 291, 300, 309, 313, 317, 318], "part": [0, 2, 18, 25, 79, 289, 291, 293, 296, 297, 309, 311, 315, 318, 326], "NO": [0, 309], "probabl": 0, "same": [0, 2, 8, 10, 18, 25, 28, 41, 51, 72, 73, 94, 95, 96, 104, 150, 196, 198, 207, 229, 230, 235, 253, 258, 269, 271, 273, 290, 291, 293, 294, 298, 300, 303, 304, 308, 309, 311, 313, 314, 325, 326, 328], "type": [0, 2, 6, 8, 10, 18, 27, 28, 35, 53, 75, 100, 124, 126, 162, 167, 212, 240, 246, 253, 257, 258, 260, 262, 288, 291, 293, 296, 298, 304, 305, 306, 308, 309, 311, 314, 318], "now": [0, 291, 296, 313, 315], "investig": 0, "follow": [0, 2, 14, 35, 38, 158, 221, 289, 291, 293, 294, 296, 297, 298, 300, 301, 303, 305, 306, 308, 309, 311, 313, 314, 315, 317, 325, 326, 328], "like": [0, 25, 300, 309, 315, 318, 326], "One": [0, 2, 25, 159, 162, 276, 279, 293, 318, 328], "last": [0, 8, 28, 32, 97, 193, 267], "left": [0, 4, 61, 311, 313, 317], "justifi": 0, "size": [0, 6, 13, 182, 291, 294, 318], "13": [0, 1, 2, 62, 98, 101, 103, 104, 118, 244, 289, 290, 298, 303, 306, 308, 309, 310, 312, 313, 314, 319, 321, 323, 324], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 277, 288, 289, 290, 291, 292, 294, 295, 296, 298, 303, 304, 305, 307, 308, 309, 310, 317, 318, 321, 323, 324, 327, 328], "n": [0, 6, 17, 22, 25, 36, 39, 46, 77, 80, 179, 184, 185, 189, 206, 213, 221, 224, 259, 289, 290, 291, 293, 304, 306, 311, 313], "flatten": [0, 291], "triangular": 0, "correl": [0, 14, 54, 55, 56, 57, 65, 66, 67, 68, 71, 77, 233, 291, 321], "abov": [0, 33, 35, 38, 71, 177, 289, 290, 298, 304, 309, 313, 325, 328], "off": 0, "diagon": [0, 165, 291, 306, 312, 313, 314], "obj": 0, "right": [0, 4, 8, 309, 311, 313, 328], "also": [0, 2, 25, 34, 83, 182, 291, 295, 296, 298, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 318, 322, 325, 326, 328], "22": [0, 62, 84, 85, 87, 88, 98, 103, 118, 122, 244, 289, 290, 298, 304, 308, 310, 312, 313, 324], "integ": [0, 6, 133, 291, 293, 326], "5": [0, 1, 2, 28, 33, 35, 54, 56, 57, 61, 62, 66, 67, 73, 85, 86, 96, 98, 101, 103, 105, 118, 122, 133, 155, 156, 157, 158, 165, 209, 222, 225, 230, 244, 265, 266, 289, 290, 298, 300, 304, 306, 308, 309, 310, 311, 312, 313, 314, 319, 321, 323, 324, 325], "expon": [0, 1, 33, 252, 293], "regular": [0, 10, 307], "take": [0, 2, 23, 25, 78, 291, 294, 300, 303, 306, 308, 309, 314, 318, 325], "19": [0, 2, 62, 85, 98, 103, 118, 244, 289, 290, 306, 310, 312, 313, 321, 323, 324], "posit": [0, 25, 184, 185, 291, 293, 294, 301], "neg": [0, 326], "For": [0, 2, 8, 35, 38, 116, 117, 118, 158, 209, 226, 252, 255, 257, 258, 260, 261, 262, 289, 290, 293, 295, 296, 298, 303, 304, 305, 309, 311, 314, 315, 318, 325, 326, 328], "20": [0, 62, 88, 98, 103, 118, 244, 289, 290, 298, 309, 310, 312, 313, 319, 321, 322, 323, 324], "In": [0, 2, 8, 77, 90, 294, 296, 298, 305, 306, 308, 309, 311, 312, 313, 318, 325, 326, 328], "observ": [0, 6, 14, 18, 42, 104, 116, 117, 118, 121, 122, 194, 210, 213, 216, 217, 265, 266, 289, 291, 304, 318, 321, 324, 325], "byte": 0, "evid": [0, 107, 291], "toward": [0, 104, 291], "token": [0, 326], "whitespac": 0, "parenthes": [0, 326], "multipl": [0, 4, 8, 25, 28, 53, 100, 134, 135, 146, 194, 264, 279, 291, 298, 301, 311, 313, 322, 323, 326], "open": [0, 294, 296, 307, 309, 316], "keyword": [0, 293], "kept": [0, 90, 291, 293, 306], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 23, 24, 25, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 291, 293, 295, 296, 298, 300, 301, 303, 306, 308, 309, 311, 314, 315, 316, 317, 318, 322, 325, 328], "csv": [0, 2, 26, 169, 235, 268, 291, 293, 298, 300, 303, 306, 308, 313, 314, 322, 325, 326], "wgt": [0, 2, 4, 6, 10, 28, 33, 35, 73, 82, 83, 98, 103, 115, 131, 133, 155, 156, 157, 158, 165, 166, 171, 209, 223, 224, 225, 228, 252, 300, 304, 311, 313, 315, 318, 321, 326], "23": [0, 2, 61, 62, 64, 78, 85, 98, 103, 118, 183, 184, 185, 244, 289, 290, 298, 306, 308, 310, 312, 313, 314, 323, 324, 325], "titl": 0, "crash": [0, 291], "nmtran": [0, 6, 14], "There": [0, 271, 303, 313], "72": 0, "includ": [0, 2, 3, 17, 22, 25, 47, 162, 267, 290, 291, 294, 298, 306, 307, 308, 309, 312, 313, 314, 321, 323, 325, 326], "come": [0, 222, 296, 309], "filenam": [0, 18, 269, 273, 274, 278, 311], "repres": [0, 4, 6, 23, 24, 25, 34, 293, 298, 300, 301, 304, 309, 311, 325], "rel": [0, 14, 291, 304], "path": [0, 1, 2, 10, 18, 26, 51, 75, 102, 167, 168, 235, 236, 237, 238, 247, 248, 249, 251, 253, 268, 269, 270, 271, 273, 274, 275, 277, 278, 283, 291, 293, 295, 298, 300, 303, 305, 306, 308, 311, 312, 313, 314, 322, 323, 325, 326, 328], "work": [0, 291, 294, 296, 303, 309, 311, 318], "directori": [0, 238, 251, 269, 270, 271, 291, 293, 295, 296, 311, 323], "when": [0, 14, 32, 35, 73, 97, 291, 294, 296, 300, 308, 309, 311, 315, 321, 323, 325, 326], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 265, 266, 298, 300, 303, 306, 308, 309, 314, 322, 325], "simpli": [0, 23, 296, 303, 315], "seen": [0, 1, 2, 298, 300, 303, 306, 308, 314, 322, 325], "54": [0, 2, 62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 314, 319, 321, 324], "doe": [0, 2, 51, 79, 102, 177, 222, 269, 270, 271, 274, 275, 291, 301, 303, 306, 308, 309, 314, 315, 321], "pk": [0, 2, 6, 40, 47, 75, 126, 165, 212, 222, 291, 293, 298, 306, 313, 314, 315, 325, 326], "pred": [0, 88, 165, 169, 291, 312, 313, 321, 324], "simpl": [0, 1, 165, 220, 267, 313, 315, 325], "merg": [0, 291, 296, 309], "placement": [0, 295], "place": [0, 2, 295, 309], "seem": 0, "restrict": [0, 271, 309], "automat": [0, 14, 33, 253, 291, 296, 298, 305, 309, 322, 326], "creat": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 32, 43, 73, 75, 76, 78, 79, 97, 100, 101, 107, 174, 196, 207, 237, 238, 240, 251, 265, 266, 269, 270, 271, 272, 273, 276, 278, 280, 283, 289, 290, 291, 293, 295, 296, 299, 300, 303, 304, 306, 310, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327], "continu": [0, 2, 6, 18, 35, 291, 294, 296, 298, 304, 309, 318, 326], "factor": [0, 318], "compil": [0, 309], "11138": 0, "445": [0, 306], "though": [0, 309], "outsid": [0, 291, 294, 309], "standard": [0, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 234, 237, 289, 291, 301, 304, 309, 313, 315, 318, 321, 322, 324], "gfortran": 0, "8": [0, 2, 6, 54, 55, 56, 57, 62, 65, 66, 67, 68, 98, 103, 105, 118, 122, 155, 209, 244, 289, 290, 298, 300, 306, 308, 309, 310, 312, 313, 319, 321, 322, 323, 324, 325, 328], "hh": 0, "j": [0, 222, 224, 290, 304], "nep": 0, "h": [0, 293], "second": [0, 163, 293, 315], "f": [0, 28, 39, 73, 133, 156, 165, 166, 172, 186, 187, 196, 207, 208, 211, 222, 234, 289, 291, 293, 297, 309, 311, 313, 315], "respect": [0, 2, 291, 294, 298, 303, 304, 309, 313, 314, 315], "ep": [0, 28, 165, 291, 293, 313, 315], "implicit": [0, 291], "kind": [0, 6, 8, 126, 309], "dpsize": 0, "main": [0, 293, 296, 318, 328], "function": [0, 3, 10, 14, 25, 33, 35, 36, 39, 58, 59, 78, 83, 84, 85, 87, 88, 89, 94, 95, 96, 110, 121, 127, 138, 142, 143, 151, 186, 187, 189, 198, 207, 208, 220, 226, 229, 230, 233, 238, 246, 257, 260, 276, 289, 291, 293, 295, 296, 300, 301, 306, 308, 309, 311, 312, 314, 315, 317, 318, 321, 322, 323, 326, 327, 328], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 25, 29, 30, 41, 61, 79, 86, 109, 123, 124, 128, 129, 131, 134, 135, 146, 147, 166, 185, 186, 187, 196, 207, 208, 211, 252, 253, 291, 293, 298, 300, 301, 306, 312, 318, 321, 327, 328], "doesn": [0, 28, 273, 291, 306], "t": [0, 6, 8, 28, 33, 36, 81, 111, 202, 203, 217, 225, 267, 273, 276, 278, 290, 291, 293, 304, 306, 313, 319, 321], "declar": [0, 2, 73, 157, 298, 326], "assign": [0, 6, 28, 73, 291, 293, 311], "stop": 0, "entri": [0, 272], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 23, 24, 25, 28, 58, 59, 73, 79, 106, 110, 115, 121, 127, 131, 134, 135, 146, 157, 166, 181, 186, 187, 196, 207, 208, 211, 253, 291, 298, 301, 313, 318], "separ": [0, 10, 77, 90, 158, 182, 221, 271, 291, 293, 296, 298, 300, 301, 304, 309, 318, 326], "thnn": 0, "nn": [0, 304], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 23, 25, 43, 177, 200, 222, 291, 309, 313, 325], "ad": [0, 9, 18, 34, 35, 38, 46, 53, 90, 257, 258, 260, 279, 291, 293, 298, 308, 309, 315, 322, 323], "x": [0, 1, 2, 24, 33, 73, 84, 85, 101, 155, 183, 209, 289, 298, 300, 304, 306, 308, 312, 313, 314, 316, 322, 323, 325], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 25, 26, 28, 109, 115, 167, 168, 169, 240, 253, 260, 291, 300, 313, 314, 325], "tool": [1, 2, 3, 14, 18, 50, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 84, 85, 86, 87, 88, 89, 172, 183, 184, 185, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 275, 277, 283, 288, 289, 291, 292, 293, 296, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 317, 318, 322, 325, 327, 328], "add": [1, 9, 14, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 73, 90, 111, 189, 207, 208, 279, 291, 293, 298, 306, 309, 313, 314, 315, 316, 326], "allometr": [1, 2, 33, 252, 291, 293, 326], "scale": [1, 2, 6, 18, 33, 60, 63, 69, 252, 291, 293, 304, 316, 326], "pharmr": [1, 2, 3, 291, 296, 298, 301, 303, 305, 306, 307, 308, 314, 322, 325, 327], "command": [1, 291, 296, 298, 303, 305, 306, 307, 308, 309, 313, 314, 322, 327], "line": [1, 73, 291, 298, 303, 305, 306, 307, 308, 309, 313, 314, 322, 327], "To": [1, 2, 293, 295, 296, 298, 303, 305, 306, 308, 309, 312, 313, 314, 316, 322, 325, 326, 328], "initi": [1, 2, 15, 18, 23, 24, 33, 38, 41, 42, 45, 46, 47, 48, 75, 77, 78, 86, 94, 95, 96, 111, 179, 186, 187, 194, 196, 197, 198, 202, 203, 207, 208, 210, 213, 216, 217, 223, 224, 225, 229, 230, 232, 233, 252, 253, 262, 278, 291, 293, 298, 303, 304, 306, 308, 309, 311, 313, 314, 322, 325], "python": [1, 2, 290, 291, 293, 298, 300, 301, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 322, 325, 326, 327], "r": [1, 2, 14, 26, 39, 290, 291, 295, 298, 300, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 322, 325, 326, 327], "read_model": [1, 169, 291, 298, 300, 303, 306, 308, 311, 313, 314, 322, 325, 328], "read_modelfit_result": [1, 291, 298, 303, 306, 308, 311, 312, 314, 322, 325], "run_allometri": [1, 291], "start_model": [1, 265, 298, 303, 306, 308, 314, 322, 325, 326], "start_model_result": [1, 298, 303, 306, 308, 314, 322, 325, 326], "re": [1, 2, 238, 248, 249, 250, 254, 255, 263, 270, 275, 277, 290, 298, 303, 306, 308, 312, 314, 322, 324, 325, 326], "code": [1, 14, 18, 20, 73, 114, 115, 131, 138, 142, 143, 151, 165, 169, 207, 208, 236, 291, 297, 298, 303, 306, 307, 308, 309, 313, 314, 315, 317, 318, 322, 325, 328], "redefin": [1, 298, 303, 306, 308, 314, 322], "accordingli": [1, 298, 303, 306, 308, 314, 315, 322], "descript": [1, 2, 6, 18, 29, 265, 266, 267, 288, 289, 291, 295, 298, 300, 303, 306, 308, 314, 322, 323, 325], "modelfitresult": [1, 2, 21, 239, 241, 242, 243, 244, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 291, 298, 303, 306, 308, 314, 322, 325], "allometric_vari": [1, 2, 33, 252, 253, 293], "wt": [1, 28, 33, 252, 255, 298, 323], "reference_valu": [1, 2, 33, 252, 293], "refer": [1, 30, 33, 73, 80, 150, 209, 250, 252, 253, 267, 291, 298, 309, 313, 315, 327, 328], "70": [1, 2, 33, 98, 252, 313, 321], "appli": [1, 2, 18, 34, 186, 187, 196, 207, 208, 223, 224, 225, 252, 291, 293, 294, 300, 304, 309, 313, 314, 321, 325, 326], "all": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 24, 25, 26, 27, 28, 29, 33, 38, 43, 45, 47, 70, 73, 77, 80, 82, 90, 95, 96, 99, 101, 103, 105, 108, 109, 112, 123, 126, 129, 130, 132, 133, 138, 142, 143, 147, 151, 154, 162, 164, 166, 174, 175, 183, 184, 196, 201, 207, 209, 214, 221, 223, 224, 225, 227, 228, 229, 230, 251, 252, 256, 257, 258, 260, 267, 269, 273, 274, 279, 284, 289, 290, 291, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 325, 326, 328], "cl": [1, 2, 4, 8, 24, 28, 33, 35, 38, 41, 46, 61, 73, 79, 81, 92, 109, 124, 126, 128, 133, 136, 147, 153, 156, 157, 158, 165, 166, 171, 174, 179, 194, 195, 199, 202, 203, 206, 210, 216, 220, 223, 224, 225, 252, 255, 298, 304, 306, 308, 311, 313, 315], "q": [1, 33, 46, 179, 252, 291, 313], "v": [1, 8, 24, 28, 33, 36, 61, 73, 81, 93, 109, 126, 131, 133, 156, 157, 158, 160, 161, 165, 166, 174, 189, 194, 195, 199, 202, 203, 210, 216, 217, 220, 252, 255, 296, 298, 304, 308, 311, 313, 315, 324, 326], "75": [1, 33, 252, 298, 303], "lower_bound": [1, 2, 33, 252, 293], "lower": [1, 2, 6, 23, 24, 33, 35, 48, 71, 94, 95, 96, 123, 129, 130, 177, 198, 200, 201, 207, 214, 227, 230, 252, 253, 293, 301, 306, 311, 313], "bound": [1, 23, 24, 33, 48, 72, 185, 201, 214, 223, 224, 225, 227, 233, 252, 291, 293, 311], "upper_bound": [1, 2, 33, 252, 293], "upper": [1, 23, 24, 33, 35, 48, 94, 95, 96, 123, 129, 130, 177, 198, 201, 214, 227, 230, 252, 291, 293, 311, 313], "should": [1, 6, 23, 33, 35, 38, 41, 48, 182, 196, 252, 257, 258, 260, 291, 293, 294, 295, 296, 298, 301, 304, 306, 308, 309, 310, 314, 318, 322, 325], "true": [1, 2, 6, 9, 10, 15, 18, 24, 33, 34, 39, 44, 53, 60, 70, 79, 82, 90, 94, 95, 96, 111, 115, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 155, 171, 178, 184, 190, 192, 193, 196, 207, 208, 213, 228, 229, 230, 231, 232, 236, 244, 252, 267, 268, 291, 298, 300, 303, 306, 308, 311, 313, 314, 315, 316, 322, 323, 324, 325, 328], "No": [1, 6, 222, 274, 275, 309, 314], "select": [1, 2, 182, 209, 223, 225, 266, 289, 291, 293, 298, 306, 308, 311, 314, 316, 322, 323, 325, 326], "see": [1, 2, 6, 8, 18, 35, 38, 244, 252, 253, 255, 257, 258, 260, 261, 262, 293, 294, 295, 296, 298, 300, 301, 303, 306, 308, 309, 310, 311, 313, 314, 315, 318, 322, 325, 326], "about": [1, 2, 6, 294, 298, 300, 303, 305, 306, 308, 309, 313, 314, 322, 325, 326], "actual": [1, 2, 23, 158, 298, 303, 306, 308, 309, 314, 322, 325], "minim": [1, 2, 291, 298, 303, 306, 308, 314, 322, 325], "statu": [1, 2, 291, 298, 301, 303, 306, 308, 309, 314, 322, 325], "time": [1, 2, 6, 7, 9, 10, 24, 28, 33, 41, 42, 73, 75, 82, 83, 98, 104, 105, 112, 122, 133, 154, 155, 156, 157, 158, 159, 165, 166, 169, 176, 194, 197, 209, 210, 211, 213, 216, 226, 253, 261, 291, 293, 298, 300, 303, 304, 306, 308, 309, 311, 312, 314, 315, 318, 321, 322, 324, 325, 326], "you": [1, 2, 295, 296, 298, 303, 305, 306, 307, 308, 309, 312, 313, 314, 315, 318, 322, 325, 326, 327, 328], "look": [1, 2, 28, 51, 109, 147, 298, 303, 306, 308, 314, 315, 322, 325, 326], "summary_model": [1, 2, 291, 298, 303, 306, 308, 314, 322, 325, 326], "tabl": [1, 2, 60, 165, 186, 222, 266, 289, 290, 291, 296, 298, 299, 303, 304, 306, 308, 310, 313, 314, 319, 321, 322, 323, 324, 325, 326], "gener": [1, 2, 6, 32, 61, 64, 74, 78, 97, 159, 182, 183, 184, 185, 276, 278, 291, 293, 298, 300, 303, 304, 306, 307, 308, 313, 314, 317, 318, 322, 325, 326], "summarize_modelfit_result": [1, 2, 291, 298, 303, 306, 308, 314, 322, 325], "minimization_success": [1, 2, 267, 298, 303, 306, 308, 314, 322, 325], "errors_found": [1, 2, 298, 303, 306, 308, 314, 322, 325], "pheno": [1, 8, 10, 15, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 82, 83, 86, 92, 93, 94, 95, 96, 98, 101, 103, 104, 105, 106, 108, 109, 111, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 244, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 305, 311, 312, 313, 315], "phenobarb": [1, 165, 267, 313, 325], "scaled_model": [1, 2], "warnings_found": [1, 2, 298, 303, 306, 308, 314, 322, 325], "ofv": [1, 2, 53, 163, 242, 246, 257, 258, 260, 265, 266, 267, 291, 298, 303, 306, 308, 314, 321, 322, 325], "aic": [1, 52, 246, 257, 258, 260, 291, 306, 308, 314, 322], "bic": [1, 2, 53, 246, 257, 258, 260, 291, 293, 298, 306, 308, 314, 322, 325, 326], "730": [1, 289, 304, 306, 310], "894727": [1, 304, 310], "740": [1, 86, 104, 155, 209, 300, 313], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 267, 298, 303, 306, 308, 314, 322, 325], "estimation_runtim": [1, 2, 298, 303, 306, 308, 314, 322, 325], "_estim": [1, 306, 314], "32": [1, 6, 62, 98, 103, 118, 244, 289, 290, 293, 298, 303, 310, 312, 313, 321, 324], "005818": [1, 304], "121955": 1, "44555": [1, 304], "111053": [1, 304], "201526": [1, 304], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 304], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 245, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 298, 303, 304, 306, 308, 314, 319, 322, 325, 326], "predict": [1, 2, 14, 18, 87, 88, 110, 115, 127, 161, 162, 242, 243, 244, 265, 291, 298, 299, 306, 308, 314, 321, 322, 325], "influenti": [1, 2, 242, 243, 266, 291, 298, 306, 308, 314, 322, 325], "individu": [1, 2, 6, 18, 40, 60, 61, 62, 64, 77, 87, 88, 109, 110, 116, 117, 118, 122, 127, 162, 163, 164, 174, 183, 184, 185, 232, 242, 243, 244, 265, 266, 291, 293, 298, 306, 308, 309, 313, 314, 318, 321, 322, 325], "outlier": [1, 2, 243, 244, 266, 291, 298, 306, 308, 314, 322, 324, 325], "summary_individuals_count": [1, 2, 298, 306, 308, 314, 322, 325], "summarize_individuals_count_t": [1, 2, 291, 298, 306, 308, 314, 322, 325], "parent_model": [1, 2, 18, 291, 298, 303, 306, 308, 314, 322, 325], "inf_select": [1, 2, 266, 298, 306, 308, 314, 322, 325], "inf_param": [1, 2, 266, 298, 306, 308, 314, 322, 325], "out_ob": [1, 2, 266, 298, 306, 308, 314, 322, 325], "out_ind": [1, 2, 266, 298, 306, 308, 314, 322, 325], "inf_outli": [1, 2, 266, 298, 306, 308, 314, 322, 325], "differ": [1, 2, 3, 18, 25, 53, 265, 267, 289, 290, 291, 294, 295, 298, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 322, 323, 325, 326, 328], "statist": [1, 6, 61, 64, 224, 298, 300, 304, 306, 308, 311, 314, 322, 325], "summary_individu": [1, 291, 298, 306, 308, 314, 322, 325], "summarize_individu": [1, 266, 291, 298, 306, 308, 314, 322, 325], "outlier_count": [1, 265, 298, 306, 308, 314, 322, 325], "dofv_vs_par": [1, 265, 298, 306, 308, 314, 322, 325], "id": [1, 5, 6, 10, 16, 62, 80, 82, 83, 98, 101, 103, 104, 105, 108, 118, 122, 155, 165, 166, 169, 183, 209, 244, 290, 291, 293, 298, 300, 304, 306, 308, 310, 312, 313, 314, 315, 322, 324, 325], "nan": [1, 2, 101, 233, 289, 291, 298, 303, 304, 306, 308, 313, 314, 321, 322, 323, 325], "742852": 1, "000000": [1, 2, 48, 54, 55, 56, 65, 298, 304, 306, 308, 312, 314, 322, 325], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 24, 41, 62, 77, 85, 98, 101, 103, 104, 118, 177, 197, 200, 201, 214, 218, 222, 224, 244, 289, 290, 298, 300, 303, 304, 305, 306, 308, 309, 310, 312, 313, 314, 319, 321, 322, 323, 324, 325, 326], "092658": 1, "55": [1, 2, 6, 62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 314, 319, 321, 324, 325], "6": [1, 2, 6, 62, 86, 98, 103, 118, 122, 155, 209, 244, 289, 290, 298, 300, 304, 306, 308, 309, 310, 312, 313, 314, 321, 322, 323, 324, 325], "535711": 1, "175743": 1, "56": [1, 62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 324], "764710": 1, "576072": 1, "57": [1, 2, 62, 98, 103, 108, 118, 183, 244, 289, 290, 298, 303, 304, 310, 312, 313, 324], "975589": 1, "539779": 1, "58": [1, 62, 98, 103, 108, 118, 122, 183, 244, 289, 290, 304, 310, 312, 313, 323, 324], "194798": 1, "775689": 1, "59": [1, 2, 62, 98, 101, 103, 105, 108, 116, 118, 122, 155, 183, 209, 244, 289, 290, 298, 300, 303, 304, 310, 312, 313, 314, 324], "11": [1, 2, 62, 84, 85, 87, 98, 101, 103, 104, 118, 244, 289, 290, 298, 304, 305, 306, 308, 309, 310, 312, 313, 314, 319, 321, 323, 324, 325, 326, 328], "175577": 1, "462889": 1, "predicted_dofv": [1, 265, 266, 298, 306, 308, 314, 322, 325], "predicted_residu": [1, 265, 266, 298, 306, 308, 314, 322, 325], "118": [1, 183, 291, 304], "fulli": [2, 326], "best": [2, 291, 298, 306, 308, 309, 314, 322, 325, 326], "dataset": [2, 10, 11, 12, 18, 32, 49, 61, 70, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 100, 101, 104, 107, 108, 113, 116, 117, 118, 122, 131, 150, 155, 159, 167, 177, 182, 188, 209, 222, 226, 231, 235, 253, 258, 290, 291, 293, 296, 304, 307, 308, 324, 325, 327], "combin": [2, 4, 77, 134, 135, 146, 149, 186, 187, 208, 221, 222, 259, 291, 293, 303, 304, 306, 309, 313, 322, 325, 326], "ruvsearch": [2, 253, 261, 263, 291, 326], "covsearch": [2, 255, 291, 326], "run_amd": [2, 291], "dataset_path": [2, 75, 313], "modeltyp": [2, 253, 293], "basic_pk": [2, 253, 293], "administr": [2, 5, 6, 16, 75, 97, 253, 291, 293, 313], "oral": [2, 7, 75, 194, 253, 291, 293, 313, 326], "search_spac": [2, 253, 260, 262, 291, 293, 314, 325, 326], "let": [2, 14, 18, 80, 291, 298, 304, 313, 315, 326], "categor": [2, 6, 35, 291, 298, 300, 304, 326], "sex": [2, 294, 298, 318, 326], "ag": [2, 6, 255, 298, 323, 326], "occas": [2, 41, 253, 258, 291, 293, 308, 313], "visi": [2, 308], "c": [2, 9, 36, 39, 189, 224, 292, 297, 303, 304, 308, 309, 313, 315, 322], "specifi": [2, 6, 9, 28, 38, 46, 83, 94, 96, 167, 177, 179, 186, 187, 206, 207, 208, 230, 237, 256, 291, 293, 295, 298, 303, 308, 309, 311, 312, 325], "iiv": [2, 17, 22, 25, 30, 38, 41, 45, 47, 53, 77, 109, 124, 147, 174, 196, 221, 253, 257, 258, 260, 291, 293, 298, 308, 311, 313, 326], "we": [2, 294, 296, 298, 304, 305, 307, 309, 311, 313, 315, 318, 328], "our": [2, 294, 296, 297, 309, 318], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 63, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 90, 91, 94, 95, 96, 101, 110, 121, 123, 127, 129, 130, 131, 133, 156, 157, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 241, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 283, 289, 291, 293, 295, 298, 300, 301, 303, 306, 308, 309, 313, 314, 315, 318, 322, 325, 326, 327, 328], "build": [2, 253, 292, 293, 301, 313, 326], "current": [2, 25, 37, 38, 58, 59, 73, 74, 84, 85, 87, 88, 89, 110, 121, 127, 137, 150, 156, 192, 193, 194, 199, 210, 220, 222, 226, 240, 241, 246, 255, 259, 262, 273, 280, 290, 291, 293, 296, 298, 299, 304, 305, 307, 308, 309, 310, 311, 314, 317, 318, 319, 321, 322, 323, 324, 325, 326], "pkpd": [2, 253, 262, 291, 326], "drug_metabolit": [2, 253, 262, 325], "rout": [2, 253], "iv": [2, 75, 194, 253, 291, 293, 326], "ivor": [2, 75, 253, 293], "cl_init": [2, 75, 253, 293, 313], "popul": [2, 18, 28, 48, 86, 87, 88, 110, 127, 133, 233, 253, 291, 293, 323], "clearanc": [2, 33, 75, 92, 253, 291, 293, 298, 308, 315], "01": [2, 17, 25, 35, 75, 207, 233, 253, 255, 293, 298, 313, 321, 323, 325], "vc_init": [2, 75, 253, 293, 313], "central": [2, 7, 8, 9, 28, 43, 46, 73, 75, 119, 133, 137, 139, 145, 156, 179, 194, 195, 197, 199, 202, 203, 206, 210, 213, 216, 217, 218, 220, 253, 293, 296, 301, 311, 313], "compart": [2, 6, 8, 9, 31, 34, 36, 42, 43, 46, 99, 100, 112, 119, 120, 132, 137, 139, 170, 176, 179, 194, 197, 206, 213, 218, 253, 291, 293, 313, 314, 325, 326], "volum": [2, 33, 46, 75, 93, 253, 291, 293, 298, 308, 309], "mat_init": [2, 75, 253, 293, 313], "absorpt": [2, 75, 126, 137, 139, 148, 150, 194, 199, 210, 213, 216, 240, 253, 260, 265, 291, 293, 306, 308, 314, 325, 326], "b_init": [2, 253, 262, 325], "baselin": [2, 36, 39, 98, 103, 154, 189, 253, 262, 291, 304, 325], "effect": [2, 35, 36, 38, 39, 53, 136, 147, 171, 174, 189, 207, 246, 255, 291, 293, 301, 305, 309, 311, 313, 318, 323, 325, 326], "emax_init": [2, 253, 262, 325], "emax": [2, 36, 39, 45, 189, 325, 326], "ec50_init": [2, 253, 262, 325], "ec50": 2, "met_init": [2, 253, 262, 325], "equilibr": [2, 253, 325], "mfl": [2, 240, 253, 255, 265, 291, 293, 298, 314, 325], "depend": [2, 6, 18, 28, 32, 61, 77, 80, 97, 100, 134, 135, 146, 186, 187, 196, 207, 208, 211, 291, 295, 300, 306, 315, 326, 328], "lloq_limit": [2, 253, 293], "quantif": [2, 6, 177, 200, 222, 253, 293], "lloq_method": [2, 253, 293], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 44, 165, 169, 192, 193, 222, 253, 256, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 290, 291, 293, 298, 301, 309, 311, 313, 318, 326, 328], "transform_blq": [2, 177, 200, 253, 291, 293, 313], "bodi": [2, 6, 10, 294, 300, 309, 318], "weight": [2, 6, 10, 89, 134, 135, 146, 149, 215, 234, 298, 300, 318, 322], "correspond": [2, 9, 14, 18, 205, 290, 309, 311, 324, 326], "datainfo": [2, 18, 32, 83, 155, 167, 188, 235, 291, 326, 327], "file": [2, 10, 18, 26, 51, 76, 102, 165, 167, 168, 169, 235, 236, 237, 247, 248, 268, 269, 270, 271, 273, 274, 275, 277, 278, 291, 293, 296, 298, 303, 305, 306, 308, 309, 311, 312, 313, 314, 315, 317, 322, 325, 326, 327], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 272, 276, 277, 278, 291, 295, 298, 300, 309, 312, 313, 327], "elimin": [2, 126, 138, 142, 143, 151, 195, 202, 203, 217, 240, 291, 293, 314, 325, 326], "vc": [2, 46, 179, 298, 306, 308, 313], "mat": [2, 47, 290, 291, 292, 297, 298, 306, 308, 313, 315, 322], "proport": [2, 38, 134, 135, 146, 149, 182, 186, 187, 207, 208, 222, 291, 293, 313], "step": [2, 14, 15, 18, 36, 37, 39, 44, 50, 173, 178, 189, 192, 193, 255, 267, 291, 293, 296, 298, 303, 305, 306, 308, 309, 314, 318, 322, 325, 328], "foce": [2, 14, 15, 37, 44, 178, 192, 193, 291, 293, 303, 311, 313], "interact": [2, 14, 15, 37, 44, 165, 178, 192, 193, 291, 294, 303, 309, 311, 313, 318, 326, 328], "specif": [2, 14, 18, 24, 50, 83, 182, 207, 238, 291, 293, 298, 300, 309, 311, 314, 318, 325, 326], "support": [2, 8, 14, 18, 28, 37, 38, 58, 59, 74, 75, 84, 85, 87, 88, 89, 110, 121, 127, 134, 135, 146, 192, 193, 194, 199, 210, 212, 222, 255, 261, 280, 291, 293, 298, 300, 301, 303, 307, 309, 311, 312, 313, 314, 315, 317, 320, 325, 326], "nonmem": [2, 14, 18, 73, 74, 83, 116, 117, 118, 205, 259, 291, 292, 296, 305, 307, 311, 312, 313, 318, 326], "cmt": [2, 32, 97, 100, 291, 314], "rate": [2, 6, 8, 9, 16, 39, 46, 150, 194, 199, 210, 213, 216, 291, 293, 326], "via": [2, 291, 293, 295, 296, 305, 307, 311, 313, 315, 326, 328], "exclud": [2, 115, 265, 306, 308, 309, 314], "pleas": [2, 296, 305, 309, 311, 313, 326, 328], "featur": [2, 240, 296, 298, 303, 306, 307, 308, 309, 322, 325, 327], "languag": [2, 114, 165, 240, 294, 298, 301, 309, 314, 325], "how": [2, 3, 14, 184, 253, 257, 260, 291, 293, 294, 296, 298, 300, 305, 306, 308, 309, 311, 313, 314, 315, 323, 327], "defin": [2, 8, 64, 115, 131, 137, 139, 148, 150, 158, 166, 291, 298, 301, 309, 311, 324, 325, 326], "data": [2, 6, 18, 30, 84, 85, 86, 87, 88, 89, 103, 115, 165, 166, 169, 177, 186, 187, 190, 200, 208, 222, 253, 266, 289, 291, 300, 304, 308, 309, 311, 313, 315, 318, 325, 326], "zo": [2, 260, 265, 291, 293, 314, 326], "seq": [2, 293, 314, 326], "fo": [2, 14, 37, 192, 193, 291, 293, 303, 314, 318, 326], "mm": [2, 291, 293, 314, 326], "mix": [2, 41, 53, 143, 203, 246, 291, 301, 305, 308, 311, 314, 318, 326], "lagtim": [2, 199, 210, 240, 291, 314, 326], "transit": [2, 8, 120, 137, 206, 213, 240, 291, 293, 314, 326], "peripher": [2, 8, 46, 119, 179, 206, 240, 260, 265, 291, 293, 313, 314, 325, 326], "cat": [2, 35, 298, 326], "note": [2, 4, 6, 23, 73, 74, 101, 116, 117, 118, 207, 222, 267, 268, 269, 273, 274, 289, 300, 306, 308, 312, 313, 315, 323, 325], "overriden": 2, "ignor": [2, 9, 116, 117, 118, 165, 291, 293, 313, 315], "soon": 2, "explicitli": [2, 293, 308, 309], "stai": [2, 25], "vice": 2, "versa": 2, "instanc": [2, 136, 171, 298, 326], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 23, 24, 25, 26, 28, 29, 30, 33, 37, 38, 41, 44, 46, 48, 51, 53, 61, 64, 75, 77, 78, 80, 84, 85, 86, 87, 88, 89, 102, 106, 134, 135, 146, 153, 155, 162, 167, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 196, 200, 205, 207, 208, 211, 221, 222, 223, 224, 225, 231, 235, 239, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 269, 270, 273, 274, 278, 279, 283, 291, 293, 295, 300, 304, 306, 308, 311, 313, 314, 326], "null": [2, 300, 306, 308, 314, 326, 328], "yield": [2, 159, 182], "workflow": [2, 3, 249, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 291, 305, 307, 309, 318, 326], "want": [2, 294, 296, 298, 306, 307, 308, 309, 313, 314, 315, 317], "desir": [2, 274, 275], "subset": [2, 72, 183, 311, 325], "algorithm": [2, 255, 256, 257, 260, 265, 291, 293, 318, 326], "six": 2, "below": [2, 6, 177, 200, 222, 295, 296, 303, 306, 308, 309, 314, 322, 325], "detail": [2, 252, 255, 257, 258, 260, 261, 262, 303, 309, 311, 314, 321, 322, 325, 326, 327], "regard": [2, 309, 314, 325], "subhead": 2, "distribut": [2, 17, 22, 25, 41, 46, 61, 64, 77, 126, 158, 164, 179, 183, 184, 185, 221, 225, 258, 280, 289, 291, 293, 304, 309, 314, 321, 325, 326], "drug": [2, 8, 43, 145, 212, 291, 318, 326], "metabolit": [2, 8, 43, 145, 291, 326], "term": [2, 186, 291, 306, 309], "keep": [2, 14, 23, 177, 182, 257, 269, 291, 294, 301, 306, 309], "well": [2, 61, 145, 298, 303, 306, 308, 309, 313, 314, 321, 322, 325, 326, 327], "iov": [2, 25, 41, 109, 124, 147, 175, 258, 291, 293, 313, 321, 326], "explain": [2, 222, 298, 309, 318, 326], "ruv": [2, 196, 293], "power": [2, 35, 207, 222, 293, 309, 313, 318, 319, 321, 322], "vari": [2, 154, 211, 261, 291, 293, 322], "identifi": [2, 6, 30, 298, 300, 306, 309, 321, 326], "option": [2, 6, 9, 14, 18, 25, 35, 38, 41, 50, 53, 75, 77, 84, 85, 87, 88, 89, 182, 222, 240, 246, 269, 273, 274, 284, 289, 291, 293, 298, 306, 308, 309, 311, 313, 314, 325, 327, 328], "reduced_stepwis": [2, 265, 291, 314, 326], "iiv_strategi": [2, 257, 260, 291, 293, 306, 314, 326], "absorption_delai": [2, 260, 291, 314, 326], "rank_typ": [2, 246, 257, 258, 260, 293, 306, 308, 314, 326], "cutoff": [2, 211, 242, 243, 244, 246, 257, 258, 260, 291, 293, 306, 308, 314, 326], "implement": [2, 14, 36, 189, 269, 271, 273, 274, 309, 311, 318, 325, 326], "expect": [2, 53, 61, 64, 294, 295, 309, 321], "pd": [2, 6, 15, 36, 39, 45, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 77, 80, 84, 85, 86, 87, 88, 89, 97, 98, 100, 101, 103, 104, 105, 107, 113, 118, 122, 125, 159, 160, 161, 162, 163, 164, 167, 182, 183, 184, 185, 189, 232, 233, 242, 243, 244, 246, 264, 265, 266, 267, 272, 291, 300, 325, 326], "brute_forc": [2, 257, 291, 306], "fullblock": [2, 257, 260, 291, 306, 314], "tri": [2, 293, 314], "list_of_paramet": [2, 38, 41, 258, 293, 308], "random": [2, 3, 13, 17, 18, 22, 25, 41, 53, 61, 64, 78, 80, 124, 128, 131, 147, 183, 184, 185, 291, 293, 301, 304, 308, 313, 321, 328], "group": [2, 24, 30, 159, 162, 182, 261, 293, 307, 322], "p_valu": [2, 261, 293, 322], "05": [2, 46, 54, 55, 56, 57, 65, 66, 67, 68, 179, 289, 293, 298, 312, 313, 321, 323], "skip": [2, 261, 293, 298, 322], "p_forward": [2, 255, 293, 298], "p_backward": [2, 255, 293, 298], "max_step": [2, 255, 293, 298], "scm": [2, 255, 291, 298, 318, 320], "forward": [2, 255, 291, 293, 298, 323], "backward": [2, 255, 267, 291, 293, 298, 323], "variou": [2, 73, 222, 265, 266, 291, 293, 294, 296, 298, 301, 303, 306, 307, 308, 314, 318, 322, 325], "access": [2, 298, 300, 303, 306, 308, 309, 311, 313, 314, 315, 322, 325, 326, 328], "json": [2, 10, 26, 248, 250, 268, 291, 293, 298, 300, 303, 306, 308, 314, 322, 325, 326], "format": [2, 18, 74, 291, 293, 295, 298, 301, 303, 305, 306, 307, 308, 309, 311, 313, 314, 317, 322, 325], "summary_tool": [2, 291, 298, 303, 306, 308, 314, 322, 325], "candid": [2, 260, 291, 293, 298, 303, 322, 325, 326], "compar": [2, 246, 289, 291, 298, 303, 318, 322, 325, 326], "rank": [2, 246, 257, 258, 260, 291, 293, 298, 322, 325], "selected_model": 2, "base": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 97, 246, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 291, 297, 298, 304, 306, 308, 309, 310, 311, 313, 314, 315, 316, 321, 322, 323, 325], "1556": 2, "878871": 2, "best_ruvsearch_1": [2, 322], "1756": 2, "429308": 2, "iovsearch_run1": [2, 308], "1819": 2, "700791": 2, "1818": 2, "049718": 2, "covsearch_run3": [2, 298], "exp": [2, 28, 35, 38, 165, 223, 224, 225, 255, 298, 313, 315], "1820": 2, "703712": 2, "dofv": [2, 242, 243, 265, 289, 290, 291, 298, 319, 321, 322], "n_param": [2, 298, 308, 322, 325], "d_param": [2, 298, 308, 322, 325], "199": 2, "550437": 2, "63": [2, 98, 122, 312, 313, 319, 321], "271484": 2, "651073": 2, "653994": 2, "base_model": [2, 246], "qp1": [2, 46, 179, 291, 313], "vp1": [2, 46, 179, 313], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run9": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "iivsearch_run12": 2, "iivsearch_run13": 2, "iivsearch_run14": 2, "iivsearch_run15": 2, "iivsearch_run16": 2, "iivsearch_run17": 2, "iivsearch_run18": 2, "iivsearch_run19": 2, "prop_error": [2, 313], "iovsearch_run2": [2, 308], "iovsearch_run3": [2, 308], "iovsearch_run4": [2, 308], "iovsearch_run5": [2, 308], "iovsearch_run6": [2, 308], "covsearch_run1": [2, 298], "covsearch_run2": [2, 298], "covsearch_run4": [2, 298], "fals": [2, 6, 9, 13, 14, 17, 18, 22, 23, 24, 26, 30, 34, 35, 37, 39, 43, 48, 53, 60, 70, 72, 79, 82, 90, 94, 95, 96, 111, 115, 123, 129, 130, 133, 134, 135, 136, 142, 143, 146, 147, 149, 150, 151, 152, 153, 171, 182, 184, 190, 198, 201, 207, 213, 214, 227, 229, 230, 232, 233, 235, 240, 244, 253, 267, 268, 270, 283, 290, 298, 300, 303, 311, 313, 315, 316, 323, 324], "879288": 2, "1211": [2, 298], "089361": 2, "1452": 2, "643221": 2, "18": [2, 6, 62, 85, 98, 103, 118, 244, 289, 290, 298, 306, 308, 310, 312, 313, 319, 321, 324], "879287": 2, "17": [2, 62, 84, 85, 87, 88, 98, 101, 103, 118, 122, 155, 209, 244, 289, 290, 298, 300, 306, 308, 309, 310, 312, 313, 314, 319, 321, 324, 325], "879291": 2, "16": [2, 6, 62, 85, 98, 103, 118, 208, 225, 244, 289, 290, 298, 306, 308, 309, 310, 312, 313, 319, 321, 322, 323, 324], "1141": 2, "328590": 2, "089360": 2, "643216": 2, "879398": 2, "089417": 2, "15": [2, 62, 85, 98, 103, 118, 244, 289, 290, 298, 306, 308, 309, 310, 312, 313, 323, 324], "643215": 2, "1549": 2, "085054": 2, "879290": 2, "085159": 2, "1762": 2, "173623": 2, "1809": 2, "825696": 2, "1758": 2, "944210": 2, "1803": 2, "746869": 2, "1694": 2, "621631": 2, "408446": 2, "189053": 2, "26": [2, 62, 98, 103, 118, 244, 289, 290, 298, 308, 310, 312, 313, 321, 323, 324], "192655": 2, "21": [2, 62, 84, 87, 98, 103, 118, 244, 289, 290, 298, 303, 304, 310, 312, 313, 319, 321, 324, 325], "pop_cl_estim": [2, 298, 303, 308, 322], "31": [2, 62, 84, 87, 98, 103, 118, 122, 244, 289, 290, 298, 310, 312, 313, 319, 321, 324, 326], "37": [2, 62, 98, 103, 105, 118, 155, 209, 244, 290, 298, 300, 310, 312, 313, 324], "1745": 2, "1957": 2, "2704": 2, "25": [2, 62, 84, 87, 88, 98, 103, 105, 118, 155, 244, 289, 290, 298, 300, 306, 310, 312, 313, 314, 319, 321, 322, 324], "9013": 2, "93": [2, 298, 303], "1949": 2, "64": [2, 6], "0804": 2, "36": [2, 62, 64, 98, 103, 118, 244, 289, 290, 298, 306, 308, 310, 312, 313, 314, 321, 324], "52": [2, 62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 314, 323, 324], "88": 2, "9011": 2, "41": [2, 62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 321, 324], "1948": 2, "62": [2, 298, 319], "2696": 2, "73": [2, 122, 312, 313, 322, 326], "0104": 2, "96": [2, 105, 225, 289, 298, 313, 314], "44": [2, 62, 98, 103, 118, 244, 289, 290, 310, 312, 313, 324], "81": [2, 303, 306, 312], "1966": 2, "2524": 2, "27": [2, 62, 98, 103, 118, 122, 244, 289, 290, 298, 306, 308, 310, 312, 313, 314, 322, 324, 325], "9690": 2, "0467": 2, "99": [2, 48, 130, 165, 233, 289, 298, 311, 313], "1553": 2, "4521": 2, "5759": 2, "51": [2, 62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 324, 326], "4243": 2, "3609": 2, "92": [2, 298], "5790": 2, "4290": 2, "66": [2, 298, 319], "2453": [2, 322], "pop_vc_estim": [2, 298, 303, 308, 322], "pop_mat_estim": [2, 298, 303, 308, 322], "133": 2, "269": 2, "298": [2, 319], "156": 2, "491": 2, "122": 2, "910": [2, 312], "304": [2, 323], "135": [2, 122, 312, 313, 319, 321], "410": 2, "303": 2, "469": 2, "874": 2, "127": [2, 6, 306], "761": [2, 319], "448": 2, "125": 2, "711": 2, "005": [2, 23], "703": 2, "126": 2, "205": [2, 55, 57, 65, 66, 68, 312], "130": [2, 291], "106": [2, 298, 306, 319, 321, 322], "115": 2, "706": 2, "619": 2, "116": 2, "193": 2, "113": [2, 298, 306, 308, 314, 322], "812": 2, "iiv_vp1_estim": 2, "sigma1_estim": 2, "090000": 2, "090007": 2, "090003": 2, "181196": 2, "216192": 2, "212237": 2, "215453": 2, "207449": 2, "210180": 2, "232029": 2, "248179": 2, "204611": 2, "204430": 2, "205355": 2, "204963": 2, "209841": 2, "power1_estim": 2, "omega_iov_1_estim": [2, 308], "48952": 2, "65123": 2, "019270": 2, "58017": 2, "63472": 2, "010569": 2, "63469": 2, "088345": 2, "72871": 2, "025217": 2, "70960": 2, "087450": 2, "62400": 2, "018060": 2, "62345": 2, "018045": 2, "61917": 2, "017965": 2, "62545": 2, "018149": 2, "62181": 2, "016943": 2, "omega_iov_1_2_estim": 2, "012936": 2, "047902": 2, "027143": 2, "024271": 2, "010539": 2, "010428": 2, "010377": 2, "010544": 2, "009385": 2, "omega_iov_2_estim": [2, 308], "pop_clage_estim": [2, 298], "010878": 2, "012311": 2, "025974": 2, "042686": 2, "045856": 2, "006384": 2, "006184": 2, "00441": 2, "005995": 2, "006232": 2, "005433": 2, "pop_clsex_estim": [2, 298], "pop_vcage_estim": [2, 298], "026461": 2, "008529": 2, "pop_vcsex_estim": [2, 298], "085225": 2, "39": [2, 62, 98, 103, 118, 244, 289, 290, 298, 308, 310, 312, 313, 321, 322, 323, 324], "33": [2, 62, 98, 103, 118, 122, 244, 290, 298, 310, 312, 313, 314, 323, 324], "dbic": [2, 291, 306, 308, 314, 325], "161841": 2, "161837": 2, "65": [2, 6, 298], "621938": 2, "74": 2, "202851": 2, "202856": 2, "87": 2, "074229": 2, "307": 2, "175736": 2, "315": 2, "756711": 2, "328": 2, "628089": 2, "372": [2, 6], "646103": 2, "376": 2, "936563": 2, "385": [2, 306], "517482": 2, "580918": 2, "077247": 2, "786787": 2, "786682": 2, "50": [2, 36, 39, 62, 98, 103, 118, 189, 244, 289, 290, 310, 312, 313, 314, 319, 321, 324, 325], "400105": 2, "49": [2, 62, 98, 103, 118, 244, 289, 290, 310, 312, 313, 324], "105929": 2, "43": [2, 62, 98, 103, 118, 244, 289, 290, 298, 303, 310, 312, 313, 323, 324], "027102": 2, "453856": 2, "775557": 2, "61": [2, 323], "807676": 2, "142937": 2, "358728": 2, "summary_error": [2, 298, 303, 306, 308, 314, 325], "summarize_error": [2, 291, 298, 303, 306, 308, 314, 325], "datafram": [2, 6, 15, 18, 24, 26, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 77, 80, 84, 85, 87, 88, 89, 98, 101, 103, 159, 160, 161, 162, 164, 167, 182, 183, 184, 185, 232, 242, 243, 244, 246, 264, 265, 266, 267, 272, 291, 300, 318], "messag": [2, 272, 291, 293, 298, 303, 306, 308, 314, 325], "index": [2, 10, 18, 24, 25, 26, 28, 37, 50, 61, 64, 71, 72, 105, 122, 173, 192, 193, 264, 267, 290, 291, 304, 305, 311, 313, 323, 328], "categori": [2, 6, 18, 35, 41, 166, 264, 293, 298, 303, 306, 308, 314, 325, 326], "error_no": [2, 298, 303, 306, 308, 314, 325], "page": [3, 290, 292, 296, 303, 314, 315], "public": [3, 301], "modul": [3, 8, 291, 295, 300, 311, 313, 317, 328], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 291, 300, 305, 309, 311, 313, 326], "relat": [3, 269, 273, 274, 291, 294, 323], "statement": [3, 4, 8, 18, 33, 34, 35, 36, 38, 40, 41, 45, 46, 47, 73, 133, 156, 157, 158, 172, 174, 179, 180, 186, 187, 189, 194, 195, 196, 199, 202, 203, 206, 207, 208, 210, 211, 213, 216, 217, 220, 222, 223, 224, 225, 234, 291, 293, 298, 309, 313, 318], "transform": [3, 18, 34, 164, 186, 187, 190, 208, 222, 223, 224, 225, 291, 293, 305, 315, 321, 327], "manipul": [3, 24, 300, 307, 313, 315, 327], "built": [3, 156, 241, 293, 296, 307], "run": [3, 77, 162, 164, 177, 207, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 273, 277, 289, 290, 291, 299, 305, 307, 309, 310, 312, 317, 318, 321, 323, 324, 328], "packag": [3, 293, 301, 305, 307, 309, 316, 328], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 25, 28, 38, 58, 59, 61, 86, 91, 99, 110, 112, 121, 127, 131, 153, 186, 187, 197, 200, 207, 208, 218, 219, 291, 293, 294, 309, 311, 318, 324], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 294, 296, 307, 309, 311], "represent": [4, 240, 278, 300, 305, 315], "togeth": [4, 25, 199, 210, 296, 301, 304, 310, 322, 328], "sympi": [4, 6, 8, 17, 22, 25, 28, 33, 61, 86, 106, 121, 131, 132, 134, 135, 146, 153, 186, 187, 196, 197, 200, 207, 208, 211, 218, 301, 311, 318], "str": [4, 6, 7, 8, 10, 17, 18, 22, 23, 25, 26, 28, 30, 33, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 53, 61, 74, 75, 79, 80, 82, 86, 91, 95, 102, 106, 109, 114, 124, 125, 126, 128, 131, 134, 135, 136, 146, 147, 153, 156, 159, 163, 164, 167, 168, 169, 171, 174, 175, 177, 179, 182, 186, 187, 189, 191, 192, 196, 197, 200, 204, 205, 207, 208, 211, 212, 218, 221, 222, 223, 224, 225, 228, 229, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 288, 291], "expr": [4, 9, 25, 28, 33, 36, 39, 91, 121, 153, 189, 197, 218, 219], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 25, 28, 294, 309, 318], "hand": [4, 8, 61], "side": [4, 8, 61, 190], "pop_cl": [4, 289, 313], "eta_cl": [4, 38, 41, 313, 315], "rhs_symbol": [4, 8, 27], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 270, 272, 276, 278], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 270, 272], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 29, 30, 51, 182, 191, 209, 220, 276, 278, 279, 291, 293, 300, 301, 313, 315, 325], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 37, 192, 238, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 274, 275, 276, 278, 291], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28, 311], "substitut": [4, 5, 7, 8, 16, 17, 22, 25, 27, 28, 309, 313], "dict": [4, 5, 6, 10, 16, 17, 22, 24, 25, 28, 50, 63, 84, 85, 87, 88, 89, 94, 96, 99, 111, 112, 164, 181, 198, 201, 209, 214, 230, 269, 270, 273, 274, 275, 277, 278, 284, 300, 311], "old": [4, 28, 181, 291, 321], "new": [4, 6, 9, 10, 14, 17, 22, 23, 24, 25, 28, 29, 34, 38, 41, 45, 47, 48, 74, 78, 79, 90, 94, 95, 96, 181, 182, 186, 187, 196, 198, 200, 204, 207, 208, 229, 230, 233, 279, 280, 293, 294, 296, 300, 309, 313, 314, 317, 321, 322, 326], "pair": [4, 5, 8, 16, 17, 22, 25, 28, 35, 71, 209, 265, 293], "return": [4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 278, 280, 283, 284, 291, 309, 313, 325], "updat": [4, 9, 10, 18, 24, 28, 197, 218, 232, 233, 235, 291, 293, 296, 307, 309, 313, 314, 315, 318, 322, 327, 328], "b": [4, 36, 39, 125, 189, 309, 314], "to_dict": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 270, 272], "amount": [5, 6, 7, 8, 16, 36, 111, 291, 300, 311], "admid": [5, 6, 7, 8, 9, 16, 28, 32, 46, 73, 97, 100, 133, 156, 179, 194, 195, 199, 202, 203, 206, 210, 213, 216, 217, 220, 311, 313], "dose": [5, 6, 7, 8, 9, 16, 32, 34, 42, 90, 97, 99, 100, 104, 105, 111, 115, 139, 150, 170, 176, 194, 209, 211, 291, 300], "int": [5, 8, 9, 16, 28, 33, 37, 43, 50, 53, 61, 64, 72, 78, 104, 106, 116, 117, 119, 120, 134, 135, 146, 173, 177, 182, 183, 184, 185, 186, 187, 192, 193, 196, 206, 207, 208, 211, 213, 254, 255, 259, 261, 264], "amt": [5, 7, 8, 10, 16, 28, 33, 46, 73, 82, 83, 98, 105, 111, 133, 155, 156, 157, 158, 165, 166, 179, 194, 195, 199, 202, 203, 206, 209, 210, 213, 216, 217, 220, 300, 311, 313, 315], "dictionari": [5, 10, 14, 16, 17, 22, 24, 25, 26, 29, 84, 85, 87, 88, 89, 99, 112, 182, 198, 201, 214, 269, 270, 273, 274, 275, 277, 278, 284, 311], "unknown": [6, 153, 300], "unit": [6, 18, 131], "ratio": [6, 255, 261, 291, 293, 300, 322], "datatyp": [6, 18, 167], "float64": [6, 10, 60, 67, 68, 71, 86, 87, 88, 89, 105, 122, 241, 300, 311, 312, 313], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 23, 24, 25, 26, 27, 28, 29, 30, 276, 278, 291, 313], "colum": 6, "measur": [6, 294, 300, 309], "bool": [6, 9, 18, 23, 26, 30, 33, 34, 35, 39, 43, 48, 53, 60, 70, 72, 79, 82, 90, 111, 115, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 182, 184, 196, 207, 208, 213, 232, 233, 235, 236, 252, 253, 267, 268, 270, 283], "discret": [6, 300, 308], "union": [6, 106, 134, 135, 146, 164, 186, 187, 196, 197, 207, 208, 211, 218], "tupl": [6, 7, 8, 25, 159, 182, 276, 284], "label": [6, 291], "bar": [6, 304], "panda": [6, 10, 291, 300, 301, 318], "dtype": [6, 10, 60, 63, 67, 68, 71, 72, 86, 87, 88, 89, 104, 105, 118, 122, 241, 300, 312, 313], "nomin": [6, 300], "ordin": [6, 300], "rang": [6, 26, 80, 326], "na": [6, 222], "int8": 6, "sign": [6, 224, 309], "bit": 6, "128": 6, "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 300], "147": 6, "483": 6, "648": 6, "647": [6, 306], "int64": [6, 118, 313], "223": [6, 299], "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 319], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 86, 104, 155, 209, 300, 312, 313], "073": 6, "709": 6, "551": 6, "615": [6, 319], "float16": 6, "binari": [6, 309], "float": [6, 23, 33, 38, 45, 47, 48, 52, 53, 71, 72, 75, 164, 177, 185, 200, 207, 211, 222, 242, 243, 244, 246, 252, 253, 255, 257, 258, 260, 261, 262, 291], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 83, 226, 291, 293, 311], "tran": [6, 83, 226, 291, 293, 311], "date": [6, 80, 83, 226, 291, 293, 309, 328], "common": [6, 35, 64, 284, 309, 327], "birth": 6, "human": [6, 26, 318], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 300, 318], "concentr": [6, 39, 101, 300, 318], "substanc": 6, "blood": 6, "subject": [6, 14, 98, 108, 266, 300, 309], "uniqu": [6, 30, 51, 79, 182, 269, 280, 291, 293, 313, 326], "interv": [6, 300, 301], "ration": 6, "max": [6, 35, 36, 39, 189, 202, 203, 289, 313, 325], "idv": [6, 10, 160, 211, 300, 321], "independ": [6, 8, 300, 309, 311, 313, 316, 321, 326], "dv": [6, 10, 28, 73, 82, 83, 98, 106, 122, 133, 134, 135, 146, 155, 156, 161, 162, 165, 166, 169, 186, 187, 196, 200, 202, 203, 207, 208, 209, 211, 222, 261, 291, 300, 311, 313, 315, 324], "dvid": [6, 18, 43, 91, 106, 134, 135, 146, 186, 187, 191, 196, 207, 208, 211, 311, 319, 321, 322, 325], "infus": [6, 150, 210, 216, 291, 313], "addit": [6, 35, 38, 50, 53, 79, 90, 134, 135, 146, 149, 186, 187, 208, 222, 291, 293, 298, 300, 303, 309, 321, 322, 326], "interdos": 6, "ss": 6, "steadi": [6, 291], "state": [6, 24, 35, 291, 309, 323, 325], "event": [6, 32, 97, 107, 209, 226, 291, 294, 309], "mdv": [6, 113, 291], "miss": [6, 98, 103, 291], "yet": [6, 326], "exactli": 6, "lloq": [6, 177, 200, 222, 253, 291, 293, 313], "blq": [6, 177, 200, 222, 261, 291], "unkown": 6, "hasn": 6, "custom": [6, 35, 38, 41, 196, 293, 309, 318], "physic": [6, 131, 294, 300, 309], "recogn": [6, 205, 294, 309, 315], "without": [6, 9, 58, 59, 84, 85, 87, 88, 89, 110, 121, 127, 182, 271, 289, 291, 293, 296, 301, 309, 311], "static": [6, 10, 18, 276], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 25, 26, 28, 31, 74, 133, 158, 213, 291, 293, 326], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 23, 25, 70, 71, 72, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 291, 311, 313, 315, 325, 326, 328], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 291, 293, 318], "properti": [6, 14, 17, 22, 23, 24, 29, 309, 311], "lag_tim": [7, 9, 291], "bioavail": [7, 9, 34, 99, 170, 291, 326], "compartment": [7, 8, 31, 291, 293, 311], "system": [7, 8, 9, 14, 28, 31, 58, 59, 61, 81, 84, 85, 87, 88, 89, 110, 111, 121, 127, 137, 139, 140, 141, 144, 145, 148, 150, 197, 218, 220, 273, 291, 293, 295, 296, 307, 309, 311, 315], "lag": [7, 9, 42, 112, 176, 291], "enter": [7, 309], "fraction": [7, 185, 289, 304], "bolu": [7, 8, 28, 46, 73, 133, 156, 179, 194, 195, 199, 202, 203, 206, 213, 217, 220, 291, 293, 311, 313], "comp": [7, 8, 291], "a_centr": [7, 8, 28, 36, 73, 81, 111, 133, 156, 189, 197, 202, 203, 208, 217, 311, 313], "depot": [7, 8, 9, 43, 137, 145, 194, 210, 213, 291, 313, 326], "alag": [7, 291], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 326], "builder": [8, 9, 278, 279], "graph": [8, 278, 293, 296, 325], "od": [8, 14, 28, 31, 47, 58, 59, 61, 84, 85, 87, 88, 89, 110, 111, 121, 127, 137, 139, 140, 141, 144, 148, 150, 197, 205, 218, 220, 291, 293], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 213, 326], "k21": [8, 326], "vector": [8, 17, 132, 183, 184, 185, 290, 304, 311], "load_example_model": [8, 10, 15, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 58, 59, 60, 61, 62, 63, 64, 69, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 101, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 244, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 291, 305, 312, 313], "pprint": [8, 121], "ode_system": [8, 28, 36, 46, 179, 194, 195, 199, 202, 203, 206, 210, 213, 216, 217, 220, 291, 311, 313], "central_compart": 8, "outward": 8, "flow": [8, 9, 43, 46, 137, 145, 278, 309], "compartment_nam": 8, "compartmental_matrix": [8, 311], "matrix": [8, 14, 17, 25, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 71, 132, 183, 184, 185, 218, 290, 291, 293, 304, 311, 313], "set_first_order_absorpt": [8, 47, 199, 210, 216, 291, 313], "dosing_compart": 8, "receiv": [8, 309], "equat": [8, 61, 81, 311, 313], "zero_order_input": 8, "zero": [8, 9, 72, 132, 148, 150, 151, 158, 197, 210, 216, 217, 218, 291, 308, 313, 314, 316, 326], "set_zero_order_absorpt": [8, 194, 199, 210, 291, 313, 328], "atom": 8, "http": [8, 290, 300, 301, 304, 305, 309, 322], "doc": [8, 296], "org": [8, 290, 292, 300, 304, 309, 322], "latest": [8, 291, 301, 305], "core": [8, 305, 311], "html": [8, 237, 301, 309], "basic": [8, 25, 26, 75, 76, 291, 300, 309, 315, 326, 327], "find_compart": [8, 9, 36], "its": [8, 23, 28, 72, 80, 158, 265, 291, 293, 300, 301, 305, 307, 309, 311, 313, 325, 328], "found": [8, 24, 264, 279, 289, 290, 291, 296, 299, 302, 304, 305, 306, 308, 309, 311, 312, 314, 321, 322, 326, 327, 328], "find_depot": 8, "out": [8, 25, 39, 70, 233, 291, 309, 311, 317, 328], "outflow": 8, "unidirect": [8, 43, 137], "find_peripheral_compart": 8, "perihper": 8, "connect": [8, 18, 43, 119, 207, 269, 271, 279, 291, 293, 300, 309, 318, 325, 326, 327], "associ": [8, 294, 308, 309], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 23, 25, 221, 226, 239, 259, 264, 267, 269, 291, 293, 301, 304, 309, 325, 326], "distinguish": [8, 309], "get_bidirect": 8, "bidirect": 8, "interest": [8, 61, 294, 298, 309, 318], "get_compartment_inflow": 8, "go": [8, 134, 135, 146, 259, 267, 291, 300, 309, 313], "inflow": 8, "get_compartment_outflow": 8, "get_flow": 8, "destin": [8, 9, 235, 236, 269, 273, 274, 293], "ka": [8, 9, 40, 194, 210, 291, 308, 313], "get_n_connect": 8, "compartmentalsystem": [9, 28, 291, 311], "newli": [9, 25, 308], "move_dos": 9, "move": [9, 233, 291], "anoth": [9, 18, 28, 137, 280, 313, 325], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 170], "set_dos": 9, "previou": [9, 23, 25, 28, 42, 77, 104, 133, 194, 210, 213, 216, 253, 266, 283, 291, 293, 309, 314], "exist": [9, 10, 28, 35, 50, 51, 76, 79, 102, 104, 269, 270, 271, 291, 293, 295, 300, 308, 326], "argument": [9, 37, 84, 85, 87, 88, 89, 192, 238, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 291, 293, 326, 328], "set_input": 9, "set_lag_tim": [9, 291], "force_absolute_path": 10, "sequenc": [10, 15, 24, 25, 28, 77], "metadata": [10, 269, 270, 273, 274, 275, 277, 291], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 80], "idv_column": 10, "apgr": [10, 28, 33, 35, 73, 82, 83, 98, 103, 115, 133, 136, 155, 156, 157, 158, 165, 166, 209, 228, 300, 304, 311, 313, 315, 321], "fa1": [10, 82, 83, 98, 155, 165, 166, 209, 300, 313], "fa2": [10, 82, 83, 98, 155, 165, 166, 209, 300, 313], "example_model": 10, "dta": [10, 165, 313, 315], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 291, 309, 313, 325, 328], "read_json": 10, "read": [10, 167, 168, 169, 247, 248, 253, 268, 269, 270, 273, 274, 275, 277, 291, 295, 300, 305, 309, 312, 317, 318, 320, 326, 327], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 26, 300], "recover": 12, "issu": [12, 21, 291, 296, 307, 328], "hashabl": 13, "level": [13, 17, 22, 25, 29, 30, 109, 147, 222, 291, 293, 300, 307, 313, 318, 323, 326, 327], "variabilitylevel": 13, "parameter_nam": [13, 25, 95, 227, 229, 291, 315], "definit": [13, 14, 18, 28, 62, 184, 185, 244, 291, 293, 298, 304, 309, 311, 326], "varianc": [13, 17, 22, 25, 60, 61, 64, 196, 233, 306, 311, 326], "abstract": [13, 27, 273, 277, 290, 292, 301, 307, 311], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 25], "name1": [13, 17, 22, 163], "name2": [13, 17, 22, 163], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 311, 313], "parameter_uncertainty_method": [14, 15, 37, 44, 178, 192, 193, 256, 311, 313], "evalu": [14, 37, 84, 85, 86, 87, 88, 89, 192, 193, 256, 267, 289, 291, 307, 311, 313, 318, 321, 324], "maximum_evalu": [14, 303, 311, 313], "laplac": [14, 37, 192, 193, 291, 293, 303, 311, 313], "isampl": [14, 37, 50, 192, 291, 303, 311, 313], "niter": [14, 37, 50, 192, 291, 303, 311, 313], "auto": [14, 15, 291, 303, 311, 313], "keep_every_nth_it": [14, 15, 291, 303, 311, 313], "residu": [14, 25, 89, 129, 160, 243, 244, 265, 291, 322, 324, 326], "solver": [14, 205, 256, 291, 293, 326], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 37, 50, 192, 311, 313, 326], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 38, 74, 80, 274, 275, 293, 295, 296, 298, 301, 309, 311, 313, 317], "epsilon": [14, 25, 58, 59, 84, 85, 166, 196, 207, 215, 222, 234, 291, 293, 301, 313], "calcul": [14, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 86, 101, 246, 289, 290, 291, 304, 306, 307, 308, 314], "deriv": [14, 131, 291, 296, 298, 313, 325], "eta": [14, 25, 28, 38, 41, 58, 59, 60, 62, 77, 84, 85, 87, 158, 164, 165, 166, 169, 174, 175, 196, 221, 223, 224, 225, 291, 293, 301, 304, 306, 308, 311, 315, 321, 326], "preserv": [14, 25, 309], "comput": [14, 296, 297, 298, 309, 325], "sampl": [14, 25, 78, 182, 183, 184, 185, 304], "similar": [14, 289, 303, 309, 314, 322], "em": 14, "result": [14, 18, 25, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 77, 84, 85, 86, 87, 88, 89, 183, 184, 185, 232, 233, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 277, 280, 283, 291, 294, 296, 307, 309, 315, 317, 318, 320, 327], "everi": [14, 300, 309], "nth": 14, "iter": [14, 15, 28, 61, 159, 182, 184, 261, 291, 313, 319, 322], "laplacian": 14, "uncertainti": [14, 44, 61, 62, 64, 178, 183, 184, 185, 256, 291, 293, 304, 312], "sandwich": [14, 15, 44, 192, 193, 311], "cross": [14, 309], "product": [14, 39, 294, 303, 309, 325, 326], "gradient": [14, 58, 59, 84, 85, 291], "fim": 14, "append": [14, 50, 291], "uncondit": [14, 165, 313], "regardless": [14, 207, 294, 309, 311], "termin": [14, 309], "print": [14, 26, 70, 165, 166, 245, 291, 313], "eigenvalu": [14, 141], "precond": 14, "precondit": 14, "cycl": 14, "solv": [14, 291], "advan": [14, 205, 291, 313], "cvode": [14, 205, 293], "advan14": [14, 205, 293], "dgear": [14, 205, 293], "advan8": [14, 205, 293], "dverk": [14, 205, 293], "advan6": [14, 205, 293], "ida": [14, 205, 293], "advan15": [14, 205, 293], "lsoda": [14, 205, 293, 303], "advan13": [14, 205, 293, 313], "lsodi": [14, 205, 293, 303], "advan9": [14, 205, 293], "absolut": [14, 71, 291, 309], "toler": 14, "supported_method": [14, 303], "frozenset": 14, "bay": [14, 192, 193, 293], "imp": [14, 37, 192, 193, 256, 291, 293, 303, 313], "impmap": [14, 37, 192, 193, 291, 293], "ITS": [14, 37, 192, 193, 291, 293, 308, 314, 325], "saem": [14, 37, 192, 193, 256, 291, 293], "supported_parameter_uncertainty_method": 14, "cpg": 14, "ofim": 14, "supported_solv": [14, 303], "to_datafram": [15, 24, 272], "overview": [15, 272, 289, 293, 302, 311, 323], "estimation_step": [15, 18, 37, 44, 50, 173, 178, 192, 193, 291, 311, 313], "doctest": 15, "ellipsi": 15, "durat": [16, 210, 216, 313], "mutual": [16, 308, 326], "exclus": [16, 309, 326], "d1": [16, 210, 216, 291, 313], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 25, 41, 77, 221, 304, 308, 313], "omega_cl": [17, 22, 25], "omega_v": [17, 25], "corr_cl_v": [17, 25], "omega_cl_v": [17, 25], "dist": [17, 22, 25, 291, 296, 311], "iiv_cl": [17, 22, 25, 313, 315], "iiv_v": [17, 25], "itself": [17, 22, 309], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 25], "random_vari": [18, 77, 221, 311, 313, 328], "dependent_vari": [18, 291, 311], "y": [18, 24, 28, 73, 106, 131, 133, 156, 165, 166, 169, 172, 186, 187, 196, 207, 208, 211, 222, 234, 311, 313, 315], "observation_transform": [18, 291], "estimationstep": [18, 37, 44, 178, 192, 193, 291, 303, 311], "modelfit_result": [18, 244, 267, 291], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 291, 296, 311, 315, 318], "map": [18, 31, 300], "extens": [18, 269, 271, 300, 309, 311], "model_cod": [18, 291], "modelfit": [18, 241, 259, 267, 269, 273, 274, 289, 291, 293, 327], "parent": [18, 265, 266, 280, 303, 325], "randomvari": [18, 291, 311], "likelihood": [18, 52, 53, 255, 261, 293, 322], "2ll": [18, 52, 53, 291], "log": [18, 35, 36, 38, 53, 158, 186, 187, 189, 190, 208, 291, 300, 304], "record": [18, 84, 85, 86, 87, 88, 89, 90, 159, 177, 200, 291, 296, 315], "would": [18, 30, 158, 289, 298, 304, 309, 313, 315, 318], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 291, 307, 315, 317, 326], "parse_model_from_str": 18, "update_sourc": [18, 291, 315], "g": [18, 25, 73, 79, 175, 260, 291, 296, 300, 303, 304, 306, 308, 314, 318, 322, 326], "dummypath": [18, 313], "write_fil": 18, "forc": [18, 25, 79, 184, 185, 232, 235, 236, 291, 293, 308, 309], "write": [18, 235, 236, 268, 291, 296, 297, 298, 309, 317, 327], "extern": [18, 247, 296, 300, 301, 305, 317, 318], "msg": 20, "syntax": [20, 291, 326], "normal": [22, 25, 30, 41, 63, 69, 158, 304, 308, 309], "init": [23, 24, 35, 48, 96, 198, 230, 233, 293, 304, 311], "inf": [23, 313], "param": [23, 293], "tvcl": [23, 28, 33, 38, 41, 73, 86, 133, 156, 157, 158, 165, 166, 174, 304, 311, 313, 315], "boolean": [23, 24, 90, 95, 96, 182, 190, 196, 229, 230, 242, 243, 244, 300], "constrain": [23, 301, 311], "unfix": [23, 94, 95, 96, 198, 227, 229, 230, 291], "back": [23, 69, 291], "less": 23, "greater": 23, "altern": [23, 224, 296, 309], "constructor": [23, 291], "collect": [24, 25, 304, 309, 326], "usual": [24, 296], "wai": [24, 38, 138, 142, 143, 151, 222, 296, 300, 303, 309, 311, 326, 328], "displai": [24, 81, 186, 304, 309], "summar": [24, 264, 266, 267, 304, 310], "par1": 24, "par2": 24, "pset": 24, "fixed": [24, 94], "nonfix": 24, "set_fix": 24, "set_initial_estim": [24, 291, 313], "100": [24, 35, 37, 50, 183, 192, 225, 289, 293, 298, 312, 313, 316, 323, 325], "eta_level": 25, "epsilon_level": 25, "act": [25, 191], "while": [25, 296, 313, 325, 326, 328], "variabilityhierarchi": 25, "contin": 25, "hierarchi": [25, 29], "rv": [25, 77, 128, 180, 221, 311, 328], "normaldistribut": [25, 311], "covariance_matrix": [25, 54, 61, 64, 66, 67, 184, 289, 291, 312], "nrv": 25, "variance_paramet": 25, "rv1": 25, "rv2": 25, "get_rvs_with_same_dist": 25, "join": [25, 221, 291, 294], "ind": 25, "fill": 25, "name_templ": 25, "param_nam": 25, "cov": [25, 35, 54, 61, 62, 64, 66, 67, 184, 290, 291, 296, 303, 304, 313], "taken": [25, 90, 98, 103, 226, 269, 300, 304], "remain": [25, 91, 294, 309], "templat": [25, 35, 38, 76, 295], "overrid": [25, 291, 295, 326], "dist1": 25, "dist2": 25, "_": [25, 266, 290, 304], "unjoin": 25, "nearest_valid_paramet": 25, "parameter_valu": 25, "small": 25, "parameters_sdcorr": 25, "sd": [25, 60, 313, 321, 324], "corr": [25, 56, 65, 321], "assum": [25, 38, 43, 269, 291, 304, 309, 315], "var": [25, 62, 304], "replace_with_sympy_rv": 25, "stat": [25, 28, 326], "std": [25, 313], "rng": [25, 61, 64, 78, 183, 184, 185], "jointnormaldistribut": [25, 311], "validate_paramet": 25, "seri": [25, 56, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 86, 87, 88, 89, 97, 100, 104, 105, 107, 113, 118, 122, 163, 164, 184, 185, 186, 224, 233, 291, 312], "matric": [25, 62, 185, 291, 301, 312], "semidefinit": [25, 291, 301], "use_cach": 25, "symengin": [25, 301, 318], "cach": 25, "__version__": 26, "102": [26, 298], "get_and_reset_index": 26, "attr": 26, "wrapper": [26, 291, 296, 301, 305, 328], "reset": [26, 226, 291], "facilit": 26, "multiindex": [26, 291], "to_csv": 26, "save": [26, 268, 278, 291], "readabl": [26, 271, 273, 300, 309, 318], "lzma": [26, 268], "serial": [26, 291, 300, 318], "compress": [26, 268], "unless": [26, 28, 309], "signific": [28, 72, 257, 258, 260, 291, 309, 323], "after_od": [28, 208], "s\u2081": [28, 33, 73, 133, 156, 157, 158, 166, 208, 311], "eps\u2081": [28, 73, 121, 133, 156, 166, 172, 186, 196, 207, 211, 222, 234, 311], "ipr": [28, 73, 87, 133, 156, 161, 165, 166, 207, 208, 291, 311, 312, 313, 324], "ir": [28, 73, 133, 156, 165, 166, 208, 311, 313], "iwr": [28, 73, 133, 156, 165, 166, 208, 311, 313], "before_od": [28, 33, 35, 157, 158, 223, 224, 225], "btime": [28, 33, 73, 133, 156, 157, 158, 165, 166, 311, 313], "tad": [28, 33, 49, 73, 133, 156, 157, 158, 165, 166, 291, 311, 313, 321], "ptvcl": [28, 33, 35, 48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 73, 94, 95, 96, 130, 133, 156, 157, 158, 165, 166, 184, 185, 198, 201, 214, 219, 223, 224, 225, 227, 229, 230, 233, 241, 311, 312, 313], "tvv": [28, 33, 73, 133, 156, 157, 158, 165, 166, 174, 304, 311, 313, 315], "ptvv": [28, 33, 48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 73, 130, 133, 156, 157, 158, 165, 166, 184, 185, 229, 230, 233, 241, 311, 312, 313], "theta\u2083": [28, 33, 73, 133, 156, 157, 158, 166, 311], "eta\u2081": [28, 33, 73, 77, 121, 133, 156, 157, 158, 166, 221, 311], "\u212f": [28, 33, 45, 47, 73, 133, 156, 157, 158, 196, 311, 313], "eta\u2082": [28, 33, 73, 77, 121, 133, 156, 157, 158, 166, 221, 311], "whole": [28, 293, 300, 309, 326], "s1": [28, 147, 165, 313, 315], "symbol_or_stat": 28, "direct_depend": 28, "direct": [28, 278, 298, 309, 323, 325, 326], "find_assign": [28, 38, 40, 41, 45, 47, 172, 174, 186, 187, 189, 196, 207, 211, 222, 234], "find_assignment_index": 28, "full_express": [28, 35, 223, 224, 225], "expand": [28, 90], "full": [28, 77, 110, 121, 127, 212, 290, 291, 293, 295, 304, 308, 309, 314, 321], "eta_1": [28, 35, 58, 60, 62, 77, 110, 124, 128, 158, 183, 221, 223, 224, 225, 304, 311, 312, 313], "reassign": 28, "sypmpi": 28, "remove_symbol_definit": 28, "elsewher": 28, "longer": [28, 291], "make": [28, 73, 157, 172, 181, 182, 255, 291, 296, 301, 308, 309, 311, 314, 326, 328], "sure": [28, 181, 291, 309, 314, 328], "func": [31, 276], "presenc": [32, 97, 100], "correctli": [32, 97, 291], "get_admid": 32, "get_cmt": [32, 291, 313], "p": [33, 246, 255, 261, 289, 290, 291, 293, 298, 304, 313, 322, 323], "allometri": [33, 252, 253, 291, 326], "allo_cl": 33, "allo_v": 33, "add_paramet": [34, 291], "logit_transform": 34, "logit": [34, 38, 291], "remove_bioavail": [34, 291], "allow_nest": [35, 291], "linear": [35, 36, 39, 125, 140, 141, 152, 189, 289, 290, 291, 301, 311, 313, 318, 320, 325, 326], "lin": 35, "coveff": [35, 79], "median": [35, 61, 64, 289, 291, 313, 318], "001": [35, 72, 233, 255, 261, 291, 298, 313, 322, 323], "equal": [35, 41, 182, 196, 293, 296], "minimum": [35, 301], "000": [35, 312], "frac": [35, 36, 39, 186, 187, 189, 290, 311, 313, 324], "min": [35, 186, 187, 289, 313], "piecewis": [35, 291], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 313], "theta2": [35, 313], "pow": [35, 313], "mai": [35, 306, 308, 309, 313, 314, 326], "abbrevi": [35, 38, 291, 293, 296, 315], "multipli": [35, 38, 196, 289, 293, 313], "alreadi": [35, 76, 191, 197, 218, 291, 293, 296, 308, 309], "pop_clapgr": 35, "cdot": [36, 38, 39, 46, 179, 189, 304, 311, 313], "slope": [36, 39, 125, 189], "bigg": [36, 189], "e_": [36, 39, 189], "ec_": [36, 39, 189], "biggl": [36, 189], "lbrace": [36, 189], "quad": [36, 189], "leq": [36, 189, 304], "atop": [36, 189], "els": [36, 70, 189, 291, 313], "sigmoid": [36, 39, 189], "bigl": [36, 189], "c_0": [36, 189], "loglin": [36, 189], "a_effect": 36, "ke0": 36, "idx": [37, 50, 173, 192, 193, 328], "pass": [37, 78, 192, 238, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 280, 309], "opt": [37, 50, 192, 295], "1000": [37, 50, 86, 192, 304], "len": [37, 50, 173, 177], "set_estimation_step": [37, 44, 50, 173, 178, 193, 291, 313, 328], "remove_estimation_step": [37, 44, 50, 178, 192, 193, 313], "append_estimation_step_opt": [37, 44, 173, 178, 192, 193, 291, 313], "add_parameter_uncertainty_step": [37, 50, 173, 178, 192, 193, 313], "remove_parameter_uncertainty_step": [37, 44, 50, 173, 192, 193, 313], "set_evaluation_step": [37, 44, 50, 173, 178, 192, 313], "initial_estim": [38, 45, 47], "09": [38, 45, 47, 187, 196, 208, 298, 306, 313, 314, 315, 319, 325], "eta_nam": [38, 41, 196, 293], "prop": [38, 313], "rescal": 38, "re_log": 38, "user": [38, 102, 291, 300, 301, 306, 308, 309, 311, 312, 313, 314, 315], "phi": [38, 291, 296, 313, 326], "remove_iiv": [38, 41, 45, 47, 175, 291, 313, 315], "add_pk_iiv": [38, 41, 174, 175, 291, 313, 314], "add_iov": [38, 45, 47, 174, 175, 291, 313], "remove_iov": [38, 41, 45, 47, 174, 291, 313], "prod": 39, "indirect": [39, 309, 325, 326], "turnov": 39, "c_c": 39, "impact": [39, 321], "degrad": [39, 325, 326], "respons": [39, 309], "dr": 39, "dt": [39, 81, 313], "k_": 39, "inhibit": 39, "stimul": 39, "r_0": 39, "pop_ka": [40, 48], "occ": [41, 258, 293, 298, 308], "disjoint": [41, 308], "accept": [41, 116, 117, 118, 293, 309], "explicit": [41, 291, 293, 294, 308, 326], "copi": [41, 123, 129, 130, 291, 306, 308, 309, 313, 326], "add_iiv": [41, 45, 47, 174, 175, 291, 313, 315], "set_transit_compart": [42, 176, 291, 313], "remove_lag_tim": [42, 291, 313], "drug_dvid": 43, "presystem": [43, 145, 291, 325], "directli": [43, 101, 139, 269, 273, 274, 291, 293, 301, 309, 311, 313, 318, 326], "present": [43, 97, 100, 107, 293, 300, 304, 309, 326], "wether": 43, "presystemet": 43, "add_estimation_step": [44, 50, 173, 178, 192, 193, 291, 313], "set_direct_effect": [45, 125, 291], "ec_50": [45, 253, 262], "ec\u2085\u2080": 45, "pop_ec_50": 45, "eta_ec_50": 45, "parameter": 46, "qpn": 46, "vpn": 46, "volumn": 46, "mathsf": [46, 179], "qp2": [46, 179, 291], "vp2": [46, 179], "peripheral1": [46, 179, 206, 313], "v1": [46, 179, 206, 313], "v2": [46, 179, 206, 313], "set_peripheral_compart": [46, 179, 291, 313], "remove_peripheral_compart": [46, 206, 291, 313], "Will": [47, 269, 270, 271], "pop_mat": [47, 313, 315], "eta_mat": [47, 313], "004693": [48, 63, 130, 304, 311], "1000000": [48, 94, 95, 96, 130, 198, 201, 227, 230, 311], "009160": [48, 130, 311], "theta_3": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 130, 184, 185, 229, 230, 233, 241, 311, 312, 313], "100000": [48, 130, 303, 311, 313], "ivcl": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 77, 123, 165, 166, 184, 185, 221, 230, 233, 241, 289, 304, 311, 312, 313, 315], "030963": [48, 123, 304, 311], "ivv": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 77, 123, 165, 166, 184, 185, 221, 230, 233, 241, 289, 304, 311, 312, 313], "031128": [48, 123, 165, 233, 304, 311, 313, 315], "sigma_1_1": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 72, 129, 184, 185, 230, 233, 241, 289, 311, 312, 313], "013241": [48, 129, 165, 233, 241, 304, 311, 312, 313], "increas": [51, 296], "until": [51, 267, 309, 328], "do": [51, 184, 289, 291, 293, 296, 304, 309, 315, 322, 328], "noth": [51, 177, 222, 309], "next": [51, 291, 309, 313, 314, 315, 322], "run2": [51, 204, 313], "run3": [51, 313], "n_estimated_paramet": [52, 53], "fit": [52, 53, 164, 222, 245, 259, 265, 267, 273, 291, 309, 311, 313, 322, 327, 328], "multiple_test": 53, "mult_test_p": [53, 246], "mult_test_": 53, "variat": 53, "n_random_paramet": 53, "n_individu": 53, "n_fixed_paramet": 53, "n_observ": 53, "n_individ": 53, "n_estimated_iiv_omega_paramet": 53, "penalti": 53, "mbic": [53, 257, 260], "n_predictor": 53, "n_expected_model": 53, "predictor": 53, "mult_test": 53, "load_example_modelfit_result": [53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 84, 85, 86, 87, 88, 89, 183, 184, 185, 232, 233, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 291], "611": 53, "7071686183284": 53, "616": [53, 291, 312], "536606983396": 53, "610": 53, "7412809453149": 53, "594": 53, "431131169692": 53, "411510e": [54, 57, 66, 67, 312], "08": [54, 56, 57, 66, 67, 298, 312], "010000e": [54, 57, 66, 67, 312], "000002": [54, 56, 57, 66, 67, 289, 312], "000001": [54, 56, 57, 61, 64, 66, 67, 289, 308, 312, 314], "538630e": [54, 56, 57, 66, 67, 312], "07": [54, 55, 56, 57, 65, 66, 67, 68, 289, 298, 306, 308, 312, 321, 323], "178090e": [54, 57, 66, 67, 312], "233530e": [54, 57, 66, 67, 312], "04": [54, 55, 56, 57, 65, 66, 67, 68, 289, 298, 308, 312, 321, 323, 325], "000804": [54, 56, 57, 66, 67, 298, 312], "000050": [54, 56, 57, 66, 67, 312], "171840e": [54, 57, 66, 67, 312], "461760e": [54, 57, 66, 67, 312], "665010e": [54, 57, 66, 67, 312], "06": [54, 56, 57, 66, 67, 289, 298, 306, 308, 312, 321, 323, 326], "040250e": [54, 57, 66, 67, 312], "007016": [54, 56, 57, 66, 67, 312], "000108": [54, 56, 57, 66, 67, 312], "944800e": [54, 57, 66, 67, 312], "932950e": [54, 57, 66, 67, 312], "093430e": [54, 57, 66, 67, 312], "981380e": [54, 56, 57, 66, 67, 312], "000180": [54, 56, 57, 66, 67, 312], "856650e": [54, 57, 66, 67, 312], "867230e": [54, 57, 66, 67, 312], "000039": [54, 56, 57, 66, 67, 312], "000019": [54, 56, 57, 66, 67, 312], "589820e": [54, 56, 57, 66, 67, 312], "685650e": [54, 57, 66, 67, 312], "000029": [54, 56, 57, 66, 67, 312], "000005": [54, 56, 57, 66, 67, 312], "195640e": [54, 57, 66, 67, 312], "007099": [54, 55, 56, 65, 312], "094640": [54, 55, 56, 65, 312], "388059": [54, 55, 56, 65, 71], "097981": [54, 55, 56, 65, 312], "170820": [54, 55, 56, 65, 312], "356899": [54, 55, 56, 65, 71], "138062": [54, 55, 56, 65, 312], "356662": [54, 55, 56, 65, 71, 312], "238441": [54, 55, 56, 65], "096515": [54, 55, 56, 65], "062991": [54, 55, 56, 65, 312], "153616": [54, 55, 56, 65, 312], "185111": [54, 55, 56, 65, 312], "159170": [54, 55, 56, 65, 312], "027495": [54, 55, 56, 65, 312], "calculate_se_from_cov": [54, 55, 56, 57, 65, 66, 68, 291], "calculate_se_from_prec": [54, 55, 56, 57, 65, 66, 67], "precis": [54, 55, 56, 57, 65, 66, 67, 68, 291, 309], "calculate_cov_from_prec": [54, 55, 56, 65, 66, 67, 68], "calculate_cov_from_corrs": [54, 55, 57, 65, 66, 67, 68, 291], "calculate_prec_from_cov": [54, 55, 56, 57, 65, 67, 68], "calculate_prec_from_corrs": [54, 55, 56, 57, 66, 67, 68], "calculate_corr_from_prec": [54, 56, 57, 65, 66, 67, 68], "precision_matrix": [55, 57, 68, 312], "prec": [55, 57, 68], "995567e": [55, 57, 66, 68], "22660": [55, 57, 65, 66, 68, 312], "028196": [55, 57, 66, 68], "16057": [55, 57, 65, 66, 68, 312], "855248": [55, 57, 66, 68], "203511": [55, 57, 65, 66, 68, 312], "614428": [55, 57, 66, 68], "39474": [55, 57, 65, 66, 68, 312], "250514": [55, 57, 66, 68], "820118": [55, 57, 66, 68], "299536": [55, 57, 66, 68], "266003e": [55, 57, 66, 68], "2129": [55, 57, 65, 66, 68, 312], "904642": [55, 57, 66, 68], "260": [55, 57, 65, 66, 68, 312], "176234": [55, 57, 66, 68], "375": [55, 57, 65, 66, 68, 312], "266233": [55, 57, 66, 68], "2800": [55, 57, 65, 66, 68, 312], "816246": [55, 57, 66, 68], "7718": [55, 57, 65, 66, 68, 312], "769557": [55, 57, 66, 68], "605786e": [55, 57, 66, 68], "187": [55, 57, 65, 66, 68, 312], "038903": [55, 57, 66, 68], "177": [55, 57, 65, 66, 68, 291, 312, 323], "207683": [55, 57, 66, 68], "808480": [55, 57, 66, 68], "2225": [55, 57, 65, 66, 68, 312], "150449": [55, 57, 66, 68], "035116e": [55, 57, 66, 68], "7527": [55, 57, 65, 66, 68, 312], "530027": [55, 57, 66, 68], "2462": [55, 57, 65, 66, 68, 312], "974821": [55, 57, 66, 68], "9977": [55, 57, 65, 66, 68, 312], "488860": [55, 57, 66, 68], "947425e": [55, 57, 66, 68], "22343": [55, 57, 65, 66, 68, 312], "198618": [55, 57, 66, 68], "9370": [55, 57, 65, 66, 68, 312], "758371": [55, 57, 66, 68], "201183e": [55, 57, 66, 68], "249847": [55, 57, 66, 68, 312], "177845": [55, 57, 66, 68], "calculate_corr_from_cov": [55, 56, 57, 65, 66, 67, 68, 291], "se": [56, 65, 297, 298, 312], "correlation_matrix": [56, 65, 71, 312], "standard_error": [56, 65, 312], "411512e": 56, "009998e": 56, "178111e": 56, "233518e": 56, "171834e": 56, "461762e": 56, "665011e": 56, "040245e": 56, "944801e": 56, "932957e": 56, "093431e": 56, "856651e": 56, "867245e": 56, "685661e": 56, "195664e": 56, "pheno_linear": [58, 59, 84, 85, 87, 88, 89, 110, 121, 127, 152, 156, 241, 246], "d_eps1": [58, 121], "d_epseta1_1": [58, 121], "oeta1": [58, 110, 127], "d_epseta1_2": [58, 121], "eta_2": [58, 60, 62, 77, 110, 183, 221, 312, 313], "oeta2": [58, 110, 127], "calculate_eta_gradient_express": [58, 291], "d_eta1": [59, 110, 121, 127], "d_eta2": [59, 110, 121, 127], "calculate_epsilon_gradient_express": [59, 291], "parameter_estim": [60, 61, 62, 64, 72, 86, 88, 89, 164, 184, 185, 233, 241, 289, 291, 311, 312], "individual_estim": [60, 77, 84, 85, 87, 164, 183, 232, 291, 312], "shrinkag": [60, 62], "deviat": [60, 234, 289, 304, 310, 312, 313, 321, 324], "pe": [60, 61, 62, 64, 86, 88, 184, 185], "ie": [60, 183, 232], "720481": 60, "240295": 60, "471305": 60, "128389": 60, "calculate_individual_shrinkag": [60, 291], "expr_or_expr": 61, "arbitrari": [61, 64], "solut": [61, 220], "th": [61, 290, 304], "95": [61, 289, 304], "percentil": [61, 289, 304], "previous": [61, 64, 162, 164, 291, 315], "seed": [61, 64, 78, 183, 185, 293], "create_rng": [61, 64, 183, 184, 185], "k": [61, 290, 291, 296, 298, 304], "stderr": [61, 64, 289, 326], "p5": [61, 64, 304], "004234": [61, 64], "001138": [61, 64], "004907": [61, 64], "001247": [61, 64], "p95": [61, 64, 304], "individual_estimates_covari": [62, 183, 291, 312], "ieta_shr": 62, "847789": 62, "256473": 62, "796643": 62, "210669": 62, "755025": 62, "226957": 62, "764541": 62, "216405": 62, "816192": 62, "203974": 62, "778108": 62, "210992": 62, "659420": 62, "236875": 62, "668551": 62, "240097": 62, "260056": 62, "200374": 62, "725190": 62, "226563": 62, "972110": 62, "421852": 62, "249640": 62, "254119": 62, "730294": 62, "364932": 62, "165785": 62, "194464": 62, "813399": 62, "313554": 62, "797328": 62, "213211": 62, "769059": 62, "278079": 62, "098506": 62, "176778": 62, "749022": 62, "235386": 62, "742181": 62, "222932": 62, "317956": 62, "264473": 62, "943950": 62, "232732": 62, "707183": 62, "259077": 62, "553787": 62, "247717": 62, "826349": 62, "114302": 62, "854777": 62, "341384": 62, "820829": 62, "263235": 62, "28": [62, 84, 87, 88, 98, 103, 118, 222, 244, 289, 290, 298, 306, 309, 310, 312, 313, 321, 324, 325], "999942": 62, "319986": 62, "29": [62, 84, 87, 88, 98, 103, 118, 222, 224, 244, 289, 290, 292, 298, 306, 309, 310, 312, 313, 321, 324, 325], "967084": 62, "432760": 62, "30": [62, 98, 103, 118, 244, 289, 290, 298, 303, 306, 308, 309, 310, 312, 313, 314, 319, 321, 324], "404773": 62, "325215": 62, "999980": 62, "318421": 62, "925283": 62, "167667": 62, "913706": 62, "242106": 62, "34": [62, 88, 98, 103, 118, 122, 244, 289, 290, 298, 310, 312, 313, 319, 321, 324], "875554": 62, "249197": 62, "35": [62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 322, 324], "849135": 62, "294294": 62, "172206": [62, 324], "246422": 62, "747380": 62, "278340": 62, "38": [62, 84, 87, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 324], "187440": 62, "231249": 62, "237805": 62, "254485": 62, "40": [62, 98, 101, 103, 118, 122, 155, 177, 209, 244, 289, 290, 300, 303, 310, 312, 313, 323, 324], "999925": 62, "189793": 62, "941906": 62, "170998": 62, "42": [62, 64, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 314, 323, 324], "923801": 62, "244046": 62, "999928": 62, "320403": 62, "237637": 62, "260453": 62, "45": [62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 324], "869540": 62, "194503": 62, "46": [62, 98, 103, 118, 244, 289, 290, 303, 310, 312, 313, 324], "999949": 62, "319750": 62, "47": [62, 98, 103, 118, 122, 244, 289, 290, 310, 312, 313, 314, 319, 321, 324], "983782": 62, "393234": 62, "48": [62, 98, 103, 105, 118, 244, 289, 290, 298, 310, 312, 313, 322, 323, 324], "698267": 62, "169337": 62, "776674": 62, "214962": 62, "688847": 62, "192608": 62, "822213": 62, "202534": 62, "511489": 62, "273601": 62, "53": [62, 98, 103, 118, 244, 289, 290, 298, 310, 312, 313, 319, 321, 324], "964757": 62, "223448": 62, "762153": 62, "181648": 62, "965657": 62, "435741": 62, "995278": 62, "354798": 62, "813382": 62, "263372": 62, "727295": 62, "232867": 62, "738777": 62, "224742": 62, "calculate_eta_shrinkag": [62, 291], "ucp": [63, 69], "ucpscal": [63, 69], "calculate_ucp_scal": [63, 291], "00916": [63, 165, 233, 304, 311, 313, 315], "0309626": [63, 165, 233, 311, 313, 315], "031127999999999996": 63, "013241000000000001": 63, "convers": [63, 291, 307, 325], "pharmacokinet": [64, 222, 313], "pre": [64, 145], "t_half_elim": 64, "173": 64, "337164": 64, "1769": 64, "493756": 64, "843398": 64, "149": [64, 308], "567842": 64, "1317": [64, 298], "474199": 64, "233070": 64, "k_e": 64, "calculate_individual_parameter_statist": [64, 291], "995565e": 65, "041788": 65, "848052": 65, "410335": 65, "240358": 65, "820116": [65, 312], "179011": 65, "266004e": 65, "908225": 65, "176399": 65, "266263": 65, "818557": 65, "757955": 65, "605785e": 65, "038825": 65, "207512": 65, "808434": 65, "144772": 65, "035114e": 65, "518562": 65, "972906": 65, "457873": 65, "947424e": 65, "197906": 65, "736254": 65, "201162e": 65, "249846": 65, "006431": 65, "000210": [67, 68, 312], "026895": [67, 68, 312], "083762": [67, 68, 312], "013415": [67, 68, 312], "007477": [67, 68, 312], "002279": [67, 68, 312], "unconstrain": 69, "calculate_parameters_from_ucp": [69, 291], "verbos": 70, "consist": [70, 298, 309, 326], "across": [70, 291, 309], "consol": 70, "fail": [70, 291, 309, 318], "cor": [71, 296], "highli": 71, "high": [71, 300, 301, 318], "zero_limit": 72, "significant_digit": [72, 291], "close": [72, 233, 291, 304, 309, 310], "distanc": [72, 80, 324], "logic": 72, "cleanup": 73, "what": [73, 309, 315, 318], "inlin": 73, "clean": 73, "might": [73, 309, 318, 326, 328], "certain": [73, 106, 159, 291, 295, 308, 309, 317, 326], "requir": [73, 291, 293, 298, 305, 309, 321], "to_format": 74, "inplac": 74, "nlmixr": [74, 259, 291, 296, 312, 313], "rxode": [74, 291, 312], "underli": [74, 114, 165, 311], "converted_model": 74, "applic": [75, 268, 283, 309, 318, 326], "config": [76, 102, 291, 295, 296, 316], "configur": [76, 291, 305, 312, 315, 326, 327], "overwritten": [76, 269], "block": [77, 174, 207, 291, 293, 304, 306, 313, 314, 321, 326], "iiv_cl_iiv_v": [77, 221], "split_joint_distribut": [77, 291, 313], "through": [78, 293, 294, 295, 298, 309, 311, 313, 326], "numpi": [78, 300, 301, 311], "standard_norm": 78, "5532605888887387": 78, "stem": 79, "force_numb": 79, "coveff1": 79, "temp": 79, "temp1": 79, "cl1": 79, "df": [80, 85, 266, 291, 300, 319, 321], "date_column": 80, "deidentifi": [80, 291], "year": [80, 291, 296, 309], "earliest": 80, "maintain": [80, 294, 296, 297, 307, 309, 317, 318], "leap": 80, "1901": 80, "1902": 80, "1903": 80, "1904": 80, "closest": 80, "preceed": 80, "ordinari": [81, 311], "differenti": [81, 311], "odedisplay": 81, "display": 81, "column_nam": [82, 228], "mark": [82, 83, 90, 228, 293, 309], "drop_dropped_column": [82, 228, 291, 313], "undrop_column": [82, 291, 313], "undrop": [82, 228], "drop_column": [83, 228, 291, 313], "them": [83, 182, 294, 306, 308, 309, 314, 315, 322, 325, 326], "dy": 84, "deps_1": 84, "771084": [84, 87], "881859": [84, 87], "441728": [84, 87], "113050": [84, 87], "783055": [84, 87], "150": [84, 85, 87, 88, 89, 312], "375041": [84, 87], "151": [84, 85, 87, 88, 89, 319], "833395": [84, 87], "152": [84, 85, 87, 88, 89], "876707": [84, 87], "153": [84, 85, 87, 88, 89, 299], "905095": [84, 87], "154": [84, 85, 87, 88, 89], "099690": [84, 87], "155": [84, 85, 87, 88, 89, 117, 122, 312, 313], "evaluate_eta_gradi": [84, 291], "deta_1": 85, "deta_2": 85, "159537": 85, "609116": 85, "325893": 85, "562289": 85, "104417": 85, "346161": 85, "452951": 85, "682310": 85, "838840": 85, "981836": 85, "424423": 85, "973013": 85, "497185": 85, "344797": 85, "198714": 85, "697161": 85, "987731": 85, "941806": 85, "817067": 85, "309945": 85, "evaluate_epsilon_gradi": [85, 291], "573770": 86, "739": [86, 104, 155, 209, 300, 313], "165105": 86, "741": [86, 104, 155, 209, 300, 313], "742": [86, 104, 155, 209, 300, 313], "743": [86, 104, 155, 209, 300, 313], "evaluate_population_predict": [87, 291], "529739": 88, "179910": 88, "688648": 88, "798916": 88, "023225": 88, "459036": 88, "223295": 88, "217288": 88, "472888": 88, "226455": 88, "evaluate_individual_predict": [88, 291], "wre": [89, 291], "313859": 89, "675721": 89, "544240": 89, "921720": 89, "517677": 89, "223935": 89, "053334": 89, "007023": 89, "931252": 89, "778389": 89, "flag": [90, 291, 313, 324, 326], "origin": [90, 235, 269, 273, 274, 289, 290, 294, 296, 304, 309, 324], "care": [90, 269], "accord": [91, 121, 291, 309, 314, 325, 326], "queri": 91, "00469307": [94, 95, 96, 165, 201, 214, 227, 233, 311, 313, 315], "fix_paramet": [94, 96, 229, 230, 313], "unfix_paramat": [94, 95, 96, 230], "fix_paramaters_to": [94, 230], "unfix_paramaters_to": [94, 95, 96, 198, 229], "fix_or_unfix_paramet": [95, 96, 229, 230, 313], "fix_parameters_to": [95, 198, 229, 313], "extract": [97, 100, 107, 240, 291, 293, 307, 311], "60": [98, 298, 309, 313, 319], "cmax": [101, 291, 313], "tmax": [101, 291, 313], "cmin": [101, 291, 313], "tmin": [101, 291, 313], "doseid": [101, 104, 313], "589": [101, 105, 313], "get_baselin": [103, 291, 313], "set_covari": [103, 313], "period": [104, 313], "108": [105, 155, 209, 300, 312, 313], "120": [105, 155, 209, 300, 312, 313], "132": [105, 155, 209, 300, 312, 313, 319], "144": [105, 155, 209, 300, 312, 313, 323], "retriev": [108, 109, 116, 117, 124, 125, 126, 128, 250, 251, 269, 273, 274, 291, 311, 312, 313, 327], "get_pk_paramet": [109, 124, 125, 128, 291], "get_rv_paramet": [109, 124, 126, 147, 291], "has_random_effect": [109, 124, 128, 291], "opr": [110, 121, 127], "get_population_prediction_express": [110, 291], "epress": [110, 127], "condit": [111, 197, 291, 304, 309, 322], "item": [115, 295, 309], "activ": [116, 117, 118, 296, 309], "get_number_of_observ": [116, 122, 291, 313], "get_number_of_observations_per_individu": [116, 117, 122, 291, 313], "total": [117, 291, 313], "get_number_of_individu": [117, 118, 291, 313], "observation_count": 118, "oeta\u2082": 121, "oeta\u2081": 121, "112": [122, 298, 306, 308, 312, 313, 314, 319, 321, 322], "131": [122, 312, 313], "146": [122, 155, 209, 298, 300, 308, 312, 313], "get_theta": [123, 129, 291], "get_sigma": [123, 130, 291], "var_typ": 124, "get_individual_paramet": [124, 126, 128, 147, 291], "get_individual_prediction_express": [127, 291], "get_omega": [129, 130, 291], "structur": [130, 253, 271, 291, 293, 300, 308, 311, 314, 325, 326], "00": [130, 304, 311, 312, 313, 319, 321, 323, 325, 326], "olumn": 131, "milligram": [131, 300], "liter": [131, 300], "kilogram": [131, 300], "named_subscript": 133, "greek": 133, "subscript": 133, "cleanup_model": [133, 291], "\u03b8\u2081": 133, "\u03b8\u2082": 133, "\u03b8\u2083": 133, "\u03b7\u2081": 133, "\u03b7\u2082": 133, "\u03b5\u2081": 133, "mani": [134, 135, 146, 184, 291, 313], "has_proportional_error_model": [134, 135, 149, 291], "has_combined_error_model": [134, 146, 149, 291], "has_weighted_error_model": [134, 135, 146, 291], "has_additive_error_model": [135, 146, 149, 291], "reli": [138, 142, 143, 151, 309], "heurist": [138, 142, 143, 151], "abl": [138, 142, 143, 151, 291, 303, 305, 317, 318], "detect": [138, 142, 143, 151, 291, 305, 311, 317, 328], "instantan": [139, 199], "has_od": [140, 141, 291], "has_linear_odes_with_real_eigenvalu": [140, 144, 291], "has_linear_od": [141, 144, 291], "micha": [142, 143, 202, 203, 293, 326], "menten": [142, 143, 202, 203, 293, 326], "set_michaelis_menten_elimin": [142, 195, 203, 217, 291, 313], "michali": 143, "set_mixed_mm_fo_elimin": [143, 313], "add_metabolit": [145, 291], "sequenti": [148, 210, 291, 293, 314, 326], "dpharmpi": 148, "has_zero_order_absorpt": [148, 291], "has_first_order_absorpt": 148, "set_zero_order_elimin": [151, 195, 202, 203, 291, 313], "determin": [152, 153, 182, 240, 306, 308, 309, 314], "model1": [152, 291], "model2": 152, "constraint": [153, 201, 214, 219, 227, 229, 291, 301], "get_covariate_baselin": [154, 291, 313], "load": [155, 156, 241, 305], "unload_dataset": [155, 291], "statment": 157, "mu": [158, 304], "referenc": 158, "theta_1": [158, 311], "mu_1": [158, 304], "\u03bc\u2081": 158, "\u03bc\u2082": 158, "dataset_or_model": [159, 182], "name_pattern": [159, 182], "omitted_": 159, "omiss": 159, "omit": [159, 293, 298], "placehold": [159, 182], "plot": [160, 161, 162, 163, 164, 291, 304, 310, 318], "cwre": [160, 165, 265, 266, 312, 313, 321, 322], "alt": [160, 161, 162, 163, 164, 289, 304, 310], "chart": [160, 161, 162, 163, 164, 289], "iofv1": 163, "iofv2": 163, "against": [163, 309], "iofv": [163, 266, 289, 291, 310, 312, 324], "scatterplot": 163, "problem": [165, 169, 291, 298, 303, 306, 308, 309, 310, 313, 315], "subroutin": [165, 291, 309, 313, 315], "advan1": [165, 313, 315], "trans2": [165, 313, 315], "IF": [165, 291, 309, 313], "gt": [165, 313], "lt": [165, 313], "npde": [165, 313], "noappend": [165, 313], "noprint": [165, 313], "onehead": [165, 313], "sigma\u2081": [166, 311], "\u2081": [166, 311], "home": [168, 291, 311], "run1": [168, 251, 313], "mod": [168, 269, 271, 291, 293, 300, 311, 312, 313, 326], "read_model_from_databas": [168, 169, 291], "databas": [168, 169, 249, 269, 270, 271, 273, 274, 275, 277, 283, 288, 291], "read_model_from_str": [168, 291, 313], "err": [169, 313], "has_covariate_effect": [171, 291], "unrun": 172, "to_remov": [174, 175, 293], "eta_iov_1_1": 175, "add_lag_tim": [176, 213, 291, 313], "uloq": 177, "alq": 177, "loq": [177, 253, 293], "consecut": 177, "736": 177, "set_lloq_data": [177, 222, 291], "add_peripheral_compart": [179, 206, 291, 313], "new_nam": [181, 204], "renam": [181, 291], "clash": [181, 269, 271], "occur": [181, 207, 303, 306, 308, 309], "resampl": [182, 254], "stratifi": [182, 293], "sample_s": [182, 293], "resample_": 182, "randomli": [182, 185], "renumb": [182, 293], "upward": 182, "stratif": [182, 293], "valueerror": 182, "rais": [182, 233, 291], "strata": 182, "stratum": 182, "suppli": [182, 306, 308, 314, 321], "control": [182, 296, 308, 309, 311], "pattern": [182, 309], "samples_per_id": 183, "pool": [183, 306], "iec": 183, "127941": 183, "037273": 183, "065492": 183, "182851": 183, "263323": 183, "265849": 183, "295883": 183, "060346": 183, "012108": 183, "219967": 183, "034279": 183, "040988": 183, "187879": 183, "143184": 183, "088845": 183, "034655": 183, "187779": 183, "014214": 183, "019953": 183, "151151": 183, "sample_parameters_from_covariance_matrix": [183, 185, 291], "sample_parameters_uniformli": [183, 184, 291], "uniform": [183, 184, 185], "force_posdef_sampl": [184, 185, 293], "force_posdef_covmatrix": [184, 293], "never": [184, 314], "005069": 184, "974989": 184, "204629": 184, "024756": 184, "012088": 184, "012943": 184, "004690": 184, "958431": 184, "233231": 184, "038866": 184, "029000": 184, "012516": 184, "004902": [184, 289], "950778": 184, "128388": 184, "019020": 184, "023866": 184, "013413": 184, "sample_individual_estim": [184, 185, 291], "estiat": [184, 185], "reject": 185, "004878": 185, "908216": 185, "149441": 185, "029179": 185, "025472": 185, "012947": 185, "004828": 185, "014444": 185, "149958": 185, "028853": 185, "027653": 185, "013348": 185, "004347": 185, "053837": 185, "165804": 185, "028465": 185, "026798": 185, "013727": 185, "data_tran": [186, 187, 208, 291], "series_term": 186, "\u00b2": [186, 187], "epsilon_1": [186, 187, 208], "expans": 186, "approxim": [186, 309], "\u03b5\u2090": [186, 187, 313], "set_proportional_error_model": [186, 187, 291, 313], "set_combined_error_model": [186, 208, 291, 313, 322], "epsilon_2": 187, "remove_error_model": [187, 208, 291, 313], "\u03b5\u209a": [187, 208, 313], "set_additive_error_model": [187, 208, 291, 313], "fix_to_log": 190, "dynam": [190, 280, 309], "lambda": [190, 223, 224, 319, 321], "zeta": [190, 319, 321], "emul": 190, "set_instantaneous_absorpt": [194, 210, 216], "list_of_ep": [196, 207], "same_eta": [196, 293], "chosen": [196, 291, 306, 313, 325, 326], "eta_rv1": 196, "set_power_on_ruv": [196, 291, 313, 322], "get_initial_condit": [197, 291], "remove_loq_data": [200, 222, 291, 313], "set_upper_bound": [201, 227, 313], "unconstrain_paramet": [201, 214, 229, 313], "clmm": [202, 203, 217, 313], "km": [202, 203, 217, 291, 313], "set_first_order_elimin": [202, 203, 217, 291, 313], "prefer": [205, 309], "q2": 206, "q3": 206, "v3": 206, "peripheral2": 206, "lower_limit": 207, "zero_protect": [207, 208, 291], "said": 207, "autodetect": 207, "protect": [207, 208, 291, 309], "power\u2081": 207, "set_iiv_on_ruv": [207, 291, 313, 322], "225e": [208, 313], "ipredadj": [208, 313], "ref": [209, 328], "quantil": [211, 289, 291], "time_vari": [211, 321, 322], "target": [212, 323], "mediat": 212, "disposit": 212, "ib": 212, "cr": 212, "crib": 212, "qss": 212, "wagner": 212, "mmapp": 212, "tmdd": [212, 291], "keep_depot": [213, 291], "transit1": 213, "transit2": 213, "k23": 213, "transit3": 213, "k34": 213, "k40": 213, "set_lower_bound": [214, 227, 313], "use_thetas_for_error_stdev": [215, 291, 313], "smallest": [217, 313], "get_zero_order_input": [218, 291], "simplifi": [219, 291, 292, 301, 313, 318], "ab": [219, 224, 293, 313], "analyt": 220, "becom": [221, 291, 293, 318], "create_joint_distribut": [221, 291, 313], "m4": [222, 313], "m1": [222, 291, 323], "m3": [222, 313], "m5": [222, 291], "m6": [222, 291], "m7": [222, 291], "overridden": 222, "beal": 222, "sl": 222, "pharmacodyn": 222, "2001": 222, "oct": 222, "481": 222, "504": 222, "doi": [222, 224, 304, 322], "1023": 222, "1012299115260": 222, "erratum": 222, "2002": 222, "jun": 222, "309": 222, "pmid": 222, "11768292": 222, "cumd": [222, 313], "cumdz": [222, 313], "list_of_eta": [223, 224, 225], "boxcox": [223, 291], "lambda1": [223, 224], "transform_etas_tdist": [223, 224, 291, 313], "transform_etas_john_drap": [223, 225, 291, 313], "john": [224, 291, 293], "draper": [224, 291, 293], "spelect": 224, "1980": 224, "famili": [224, 309], "journal": [224, 322], "royal": 224, "societi": 224, "190": [224, 319], "197": 224, "2307": 224, "2986305": 224, "transform_etas_boxcox": [224, 225, 291, 313], "degre": [225, 321], "freedom": [225, 309, 321], "80": [225, 298, 312, 319, 321, 322], "df1": 225, "translat": [226, 291], "hour": [226, 300], "caution": 226, "account": 226, "unfix_paramet": [227, 291, 313], "unload": 231, "had": [232, 309, 313], "move_est_close_to_bound": 233, "00469555": 233, "984258": [233, 241, 312], "15892": 233, "0293508": [233, 311], "027906": [233, 241, 311, 312], "sd_eps_1": 234, "set_weighted_error_model": [234, 291, 313], "whose": [235, 309], "suffix": 235, "overwrit": [235, 236], "newdataset": 235, "report": [237, 291, 296, 307, 318], "recalcul": 238, "frem_dir1": 238, "read_result": [238, 250, 291, 326], "model_or_model": [239, 259], "run_tool": [239, 253, 265, 291], "supress_warn": 240, "choos": [240, 291, 306, 309, 314, 315, 316], "supress": 240, "004696": [241, 312], "158920": [241, 312], "029351": [241, 312], "84": [242, 243, 266, 306, 308, 314, 323], "machin": [242, 243, 244, 269, 273, 274, 300, 305, 309], "learn": [242, 243, 244, 305], "threshold": [242, 243, 244, 293, 298], "signal": [242, 243, 310], "raw": [242, 243, 244, 266, 289, 291, 300], "delta": [242, 289, 291, 310], "tell": [242, 244, 309], "predict_influential_outli": [242, 244, 291], "predict_outli": [242, 243, 291], "outlier_cutoff": 243, "influential_cutoff": 243, "influential_outli": 243, "predict_influential_individu": [243, 244, 291], "simev": [244, 291, 320], "singal": 244, "281443": 244, "057392": 244, "119105": 244, "846849": 244, "600540": 244, "014008": 244, "750734": 244, "247175": 244, "117002": 244, "835389": 244, "529582": 244, "035670": 244, "292333": 244, "303278": 244, "565949": 244, "078192": 244, "291295": 244, "466421": 244, "402343": 244, "699996": 244, "567987": 244, "526776": 244, "303918": 244, "177588": 244, "272142": 244, "390000": 244, "775876": 244, "501528": 244, "700951": 244, "352599": 244, "294196": 244, "744014": 244, "215364": [244, 323], "208691": 244, "713130": 244, "300293": 244, "810736": 244, "459877": 244, "675125": 244, "563835": 244, "526945": 244, "449199": 244, "720714": 244, "792248": 244, "860923": 244, "731858": 244, "247131": 244, "894190": 244, "282737": 244, "153398": 244, "200546": 244, "902774": 244, "586427": 244, "183329": 244, "036930": 244, "639868": 244, "765279": 244, "209665": 244, "225693": 244, "errors_allow": [246, 291], "bic_typ": 246, "rounding_error": 246, "maxevals_exceed": 246, "lrt": 246, "denot": [246, 304, 313], "model_1": [246, 304], "model_2": [246, 304], "create_result": [248, 291], "resum": [249, 253, 283, 293, 326], "resmod_dir1": 249, "retrieve_model": [250, 269, 273, 274, 291, 326], "tooldatabas": [251, 270, 275, 280, 283], "modeldatabas": [251, 269, 271, 277], "tooldir_path": 251, "retrieve_final_model": [251, 291], "allometryresult": 252, "amd": [253, 291, 326], "modelsearch": [253, 260, 265, 291, 326], "reult": 253, "e_max": [253, 262], "search": [253, 255, 260, 262, 291, 293, 298, 308, 318, 326], "runord": [253, 293], "compon": [253, 293, 301, 305, 309, 311, 321], "run_iiv": [253, 291], "bootstrap": [254, 291, 320], "bootstrapresult": [254, 291], "500": 254, "try": [255, 293, 303, 318, 328], "mode": [255, 256, 258, 260, 262, 291, 304, 309], "covsearchresult": 255, "estmethod": [256, 291, 326], "exhaust": [256, 260, 291], "exhaustive_with_upd": [256, 303], "exhaustive_only_ev": [256, 291, 303], "estmethodresult": 256, "reduc": [256, 291, 303, 323], "no_add": [257, 260, 291, 306, 314], "iivsearch": [257, 291, 326], "brute_force_no_of_eta": [257, 306], "brute_force_block_structur": [257, 306], "strategi": [257, 260, 291, 306, 314], "add_diagon": [257, 260, 291, 306, 314], "kee": 257, "iivsearchresult": 257, "iovsearch": [258, 291, 326], "iovsearchresult": 258, "modelfeatur": 260, "modelsearchresult": 260, "max_it": [261, 291], "bin": [261, 321, 328], "attempt": [261, 298, 309], "assess": [261, 322], "ruvsearchresult": 261, "structsearch": [262, 291, 326], "structsearchresult": 262, "model_typ": 262, "arg": 263, "kei": [265, 273, 309, 322], "fit_result": 265, "mathrm": [266, 324], "veebar": 266, "least": [266, 309, 325, 326], "outli": [266, 324], "criteria": [266, 291, 293, 298, 306, 308, 314, 322, 325], "include_all_estimation_step": 267, "runtim": [267, 291, 303], "wasn": [267, 291], "estmat": 267, "586": [267, 312], "276056": 267, "again": [268, 328], "Not": [268, 300, 309], "file_extens": [269, 271], "nontransactionalmodeldatabas": [269, 274], "local": [269, 270, 271, 273, 274, 275, 277, 296, 306, 309], "store": [269, 270, 271, 273, 274, 275, 277, 291, 315, 326], "modelnam": 269, "recommend": [269, 328], "localmodeldirectorydatabas": 269, "retrieve_fil": [269, 273, 274], "filesystem": [269, 273, 274], "model_nam": [269, 271, 273, 274, 304], "retrieve_local_fil": [269, 273, 274], "destination_path": [269, 273, 274], "retrieve_modelfit_result": [269, 273, 274], "store_local_fil": [269, 270, 273, 274, 275, 277], "new_filenam": [269, 273, 274], "store_metadata": [269, 270, 273, 274, 275, 277], "store_model": [269, 273, 274], "store_modelfit_result": [269, 273, 274], "toolnam": [270, 275, 277, 326], "exist_ok": 270, "read_metadata": [270, 275, 277], "source_path": [270, 275, 277], "store_result": [270, 275, 277], "transactionalmodeldatabas": 271, "subdirectori": [271, 326], "list_model": 271, "snapshot": [271, 273], "context": [271, 273, 309, 318], "transact": [271, 273, 309], "writabl": [271, 273], "timestamp": 272, "log_error": 272, "log_warn": 272, "abc": [273, 277], "baseclass": 273, "primari": 273, "center": 273, "around": [273, 294], "belong": 273, "dummi": [274, 275], "anyth": [274, 275, 296, 306, 309], "task_input": 276, "model_databas": 277, "workflowbas": [278, 279], "acycl": 278, "task": [278, 279, 291, 317, 318], "node": [278, 280], "edg": 278, "as_dask_dict": 278, "dask": [278, 280, 291, 318], "plot_dask": 278, "visual": 278, "add_task": 279, "predecessor": [279, 309], "insert_workflow": 279, "replace_task": 279, "new_task": 279, "wf": 280, "unique_nam": 280, "db": 280, "whatev": [280, 309], "alia": [281, 282], "localdirectorydatabas": [281, 288], "localdirectorytooldatabas": [282, 288, 326], "dispatch": [283, 288, 291, 326], "execut": [283, 291, 309], "executiondispatch": 283, "default_dispatch": 288, "local_dask": [288, 326], "default_model_databas": 288, "default_tool_databas": 288, "psn": [289, 290, 291, 293, 299, 304, 310, 319, 321, 323, 324, 326, 327], "parameter_statist": 289, "bia": [289, 291], "rse": [289, 312], "divid": [289, 293, 315], "005890": 289, "005891": 289, "000460": 289, "078170": 289, "pop_v": 289, "431004": 289, "422850": 289, "073015": 289, "051024": 289, "149260": 289, "124740": 289, "112645": 289, "754686": 289, "189801": 289, "185916": 289, "045563": 289, "240056": 289, "015470": 289, "015184": 289, "003553": 289, "229641": 289, "parameter_distribut": 289, "lowest": [289, 304], "highest": [289, 291, 304, 315], "interpol": 289, "fall": [289, 291], "x_0": 289, "x_1": 289, "np": [289, 300, 311], "004851": 289, "004857": 289, "005031": 289, "005149": 289, "277810": 289, "278405": 289, "283765": 289, "309488": 289, "326434": 289, "000011": 289, "000097": 289, "000869": 289, "006275": 289, "013558": 289, "079940": 289, "080472": 289, "085258": 289, "101225": 289, "119080": 289, "007645": 289, "007719": 289, "008382": 289, "009481": 289, "009956": 289, "97": [289, 298], "006659": 289, "006846": 289, "007353": 289, "007460": 289, "007472": 289, "547333": 289, "582182": 289, "631219": 289, "644090": 289, "645520": 289, "353679": 289, "367954": 289, "416361": 289, "433175": 289, "435043": 289, "265224": 289, "282926": 289, "290666": 289, "291792": 289, "291917": 289, "021341": 289, "022691": 289, "025584": 289, "027052": 289, "027215": 289, "parameter_estimates_histogram": 289, "histogram": [289, 291], "repeatchart": 289, "006755": 289, "52531": 289, "108662": 289, "258316": 289, "011408": 289, "005424": 289, "43599": 289, "270899": 289, "156400": 289, "014023": 289, "006585": 289, "38641": 289, "226891": 289, "162075": 289, "010971": 289, "005757": 289, "47090": 289, "193243": 289, "019133": 289, "006875": 289, "50111": 289, "345382": 289, "176756": 289, "009135": 289, "005683": 289, "34027": 289, "163931": 289, "159868": 289, "010816": 289, "005795": 289, "34379": 289, "075865": 289, "194188": 289, "018041": 289, "006078": 289, "35172": 289, "040387": 289, "214176": 289, "015683": 289, "98": [289, 298, 304, 306], "005353": 289, "44898": 289, "155477": 289, "258743": 289, "020128": 289, "006247": 289, "49069": 289, "125491": 289, "219146": 289, "018971": 289, "ofv_statist": 289, "bootstrap_bootdata_ofv": 289, "original_bootdata_ofv": 289, "sum": [289, 299], "bootstrap_origdata_ofv": 289, "boostrap": 289, "original_origdata_ofv": 289, "delta_bootdata": 289, "delta_origdata": 289, "08165": 289, "729": 289, "644638": 289, "737749": 289, "ofv_distribut": 289, "parameter_distriut": 289, "593": 289, "389406": 289, "972104": 289, "599": 289, "216391": 289, "654": [289, 291], "548507": 289, "660": 289, "573965": 289, "795": 289, "776225": 289, "803": 289, "946508": 289, "816": 289, "836314": 289, "820": [289, 291, 312], "873796": 289, "821": 289, "322405": 289, "ofv_plot": 289, "layerchart": [289, 310], "dofv_quantiles_plot": 289, "show": [289, 293, 304, 309, 321, 324, 325], "metric": [289, 290, 312], "chi": 289, "squar": 289, "664": 289, "272157": 289, "749": 289, "459450": 289, "061103": 289, "725470": 289, "679": 289, "585721": 289, "702": 289, "481949": 289, "748": 289, "074871": 289, "710": [289, 291], "203812": 289, "787": [289, 303], "180418": 289, "771": 289, "202034": 289, "119974e": 289, "491440e": 289, "096413e": 289, "005331": 289, "000922": 289, "001519": 289, "460998e": 289, "365879e": 289, "012689": 289, "000981": 289, "760432e": 289, "331894e": 289, "002076": 289, "755294e": 289, "000035": 289, "000176": 289, "000078": 289, "262063e": 289, "included_individu": 289, "case_result": [290, 291], "cook_scor": 290, "jackknife_cook_scor": 290, "delta_ofv": 290, "dofv_influenti": 290, "130159": 290, "121389": 290, "015207": 290, "348263": 290, "336159": 290, "144045": 290, "192433": 290, "181125": 290, "031030": 290, "163095": 290, "155901": 290, "026142": 290, "422651": 290, "404915": 290, "190732": 290, "374312": 290, "343311": 290, "097063": 290, "169869": 290, "163883": 290, "026223": 290, "263865": 290, "254943": 290, "058123": 290, "757098": 290, "673587": 290, "477910": 290, "150161": 290, "144191": 290, "023623": 290, "361646": 290, "352901": 290, "217902": 290, "255533": 290, "215005": 290, "035375": 290, "191848": 290, "187019": 290, "038199": 290, "376365": 290, "337975": 290, "096680": 290, "142806": 290, "137340": 290, "014709": 290, "193393": 290, "179744": 290, "031711": 290, "131746": 290, "122842": 290, "020637": 290, "176644": 290, "932149": 290, "036787": 290, "128197": 290, "120498": 290, "019030": 290, "141093": 290, "138101": 290, "029021": 290, "176582": 290, "153583": 290, "035291": 290, "104396": 290, "100064": 290, "015499": 290, "552071": 290, "501458": 290, "278595": 290, "242334": 290, "217068": 290, "047627": 290, "792099": 290, "715951": 290, "798775": 290, "135247": 290, "133493": 290, "021356": 290, "442779": 290, "424958": 290, "125763": 290, "132903": 290, "127188": 290, "010157": 290, "081122": 290, "076790": 290, "005443": 290, "183624": 290, "168501": 290, "027707": 290, "113959": 290, "111168": 290, "012363": 290, "532749": 290, "515747": 290, "325048": 290, "094133": 290, "091212": 290, "014747": 290, "447798": 290, "406737": 290, "194457": 290, "364978": 290, "352973": 290, "124295": 290, "270838": 290, "252922": 290, "063675": 290, "129553": 290, "121963": 290, "014043": 290, "254914": 290, "243250": 290, "064025": 290, "207529": 290, "194633": 290, "046887": 290, "239182": 290, "218112": 290, "044252": 290, "181986": 290, "173826": 290, "020285": 290, "604112": 290, "584208": 290, "604211": 290, "407717": 290, "369648": 290, "154161": 290, "215722": 290, "196744": 290, "043742": 290, "214167": 290, "200091": 290, "036238": 290, "094284": 290, "089002": 290, "007506": 290, "074174": 290, "072365": 290, "007535": 290, "743323": 290, "717468": 290, "654313": 290, "153971": 290, "147360": 290, "014502": 290, "284706": 290, "278460": 290, "072960": 290, "331587": 290, "309374": 290, "116933": 290, "447965": 290, "421612": 290, "129593": 290, "184872": 290, "175196": 290, "029896": 290, "430382": 290, "415446": 290, "141657": 290, "409307": 290, "369197": 290, "189729": 290, "084764": 290, "079718": 290, "007416": 290, "107600": 290, "103145": 290, "013947": 290, "154672": 290, "150761": 290, "028236": 290, "155632": 290, "150461": 290, "034848": 290, "covariance_ratio": 290, "skipped_individu": 290, "050505": 290, "963884": 290, "058896": 290, "087449": 290, "985403": 290, "029066": 290, "101636": 290, "086424": 290, "017369": 290, "094799": 290, "849310": 290, "121111": 290, "049151": 290, "096456": 290, "070088": 290, "040691": 290, "065881": 290, "606158": 290, "205007": 290, "099191": 290, "143483": 290, "050691": 290, "086007": 290, "156273": 290, "919336": 290, "056714": 290, "999221": 290, "029600": 290, "034017": 290, "108785": 290, "038495": 290, "954054": 290, "053618": 290, "096334": 290, "943556": 290, "125423": 290, "086167": 290, "145822": 290, "113939": 290, "114399": 290, "057664": 290, "788608": 290, "063991": 290, "115559": 290, "160549": 290, "034685": 290, "035618": 290, "714976": 290, "092664": 290, "089158": 290, "054565": 290, "002555": 290, "032356": 290, "003056": 290, "936719": 290, "122771": 290, "078285": 290, "096841": 290, "068821": 290, "sqrt": [290, 313], "p_i": 290, "p_": 290, "orig": 290, "operatornam": [290, 304, 324], "sum_": 290, "overlin": [290, 304], "_j": 290, "_k": [290, 304], "det": 290, "Then": [290, 304, 313], "ofv_": 290, "iofv_": 290, "iofv_k": 290, "ofv_k": 290, "case_column": 290, "rikard": [290, 292, 297, 318, 322], "nordgren": [290, 292, 297, 318, 322], "sebastian": [290, 292, 297], "ueckert": [290, 292, 297], "svetlana": 290, "freiberga": 290, "karlsson": [290, 292, 297, 304, 322], "faster": [290, 291, 318], "2018": [290, 309, 322], "abstr": [290, 292], "8683": 290, "www": [290, 292, 309], "meet": [290, 292, 294, 309, 318], "plot_dv_vs_ipr": 291, "plot_cwres_vs_idv": 291, "add_indirect_effect": 291, "circul": 291, "calculate_b": [291, 306, 308, 314], "version": [291, 293, 305, 309, 326], "filter_dataset": 291, "load_dataset": 291, "blqdv": 291, "better": [291, 314, 322], "usag": [291, 293], "set_reference_valu": 291, "create_basic_pk_model": [291, 313], "add_bioavail": 291, "autogener": 291, "typ": 291, "add_effect_compart": 291, "reorgan": 291, "saddl": 291, "llq": 291, "preced": 291, "reorder": 291, "incorrectli": 291, "ofv_iter": 291, "parameter_estimates_iter": 291, "caus": [291, 309, 318], "model4": 291, "frem": [291, 311, 320, 321], "create_report": 291, "write_model": [291, 311, 313, 315], "did": [291, 323], "dadt": [291, 313], "de": [291, 313], "complex": [291, 296, 305, 325], "set_zero_order_input": 291, "set_tmdd": 291, "plugin": [291, 296, 301, 302, 307], "generate_model_cod": 291, "get_model_cod": 291, "advan7": 291, "didn": 291, "header": 291, "is_linear": 291, "plot_transformed_eta_distribut": 291, "create_config_templ": [291, 295], "get_dv_symbol": 291, "set_initial_condit": 291, "abbr": [291, 313, 315], "set_dvid": [291, 313], "regress": 291, "defdos": [291, 313], "sometim": 291, "wrong": 291, "bad": 291, "1551": 291, "is_real": 291, "advan5": 291, "copy_model": 291, "nlmixr2": [291, 307, 313], "display_od": 291, "rework": 291, "run_covsearch": [291, 298], "explicitodesystem": 291, "eval": 291, "successfulli": [291, 328], "round": [291, 300], "subtool": [291, 326], "proxi": [291, 309], "1314": 291, "1355": [291, 298], "1378": [291, 306], "typo": 291, "1377": 291, "1381": 291, "1064": [291, 306], "afd7707": 291, "1139": 291, "1394": 291, "too": [291, 309], "1117": 291, "timeout": 291, "loop": 291, "wait": 291, "lst": [291, 326], "much": 291, "ncomp": 291, "deidentify_data": [291, 313], "cli": 291, "anonym": 291, "setter": 291, "multivari": 291, "1293": 291, "1302": [291, 298], "1303": [291, 314], "last20": 291, "run_modelsearch": [291, 314, 326], "run_iovsearch": [291, 308], "run_ruvsearch": [291, 322], "run_iivsearch": [291, 306], "nomem": 291, "rh": 291, "1180": 291, "887": [291, 306, 308], "1162": 291, "1032": 291, "add_covariate_effect": [291, 313], "1004": 291, "remove_covariate_effect": [291, 313], "1181": 291, "9fd701521": 291, "best_model": 291, "final_model_nam": 291, "a7fbcbfe2": 291, "update_initial_individual_estim": 291, "modelsearch_candidate1": [291, 314, 326], "modelsearch_run1": 291, "modifi": [291, 300, 309, 316, 327], "wors": 291, "calculate_a": 291, "check_parameters_near_bound": 291, "check_high_correl": 291, "plot_iofv_vs_iofv": 291, "plot_individual_predict": 291, "evaluate_express": 291, "evaluate_weighted_residu": 291, "parameter_esimt": 291, "calculate_pk_parameters_statist": 291, "update_init": [291, 313], "predict_": 291, "print_fit_summari": 291, "write_result": 291, "rank_model": 291, "speedup": 291, "297a64041": 291, "individual_ofv": [291, 312], "1101": 291, "57fc4fee8": 291, "fd417aaf": 291, "convert_model": [291, 313], "d5458e36": 291, "keyerror": 291, "localmodeldirectori": 291, "filenotfounderror": 291, "1193bd39": 291, "unus": 291, "submodul": 291, "bb96a13c": 291, "update_paramet": 291, "0ca786c5": 291, "dd056da3": 291, "915bc9c7": 291, "get_config_path": [291, 295], "disabl": [291, 294, 295], "82b32278": 291, "unwant": 291, "debug": 291, "1131a610": 291, "ebfafb45": 291, "1173": 291, "fb070ee1": 291, "1049": [291, 306], "pyreadr": 291, "easier": [291, 301, 311], "instal": [291, 293, 295, 309, 327], "mac": [291, 296], "get_evid": [291, 313], "resmod": [291, 320], "916": 291, "strict": [291, 309], "1055": 291, "attibut": 291, "1092": 291, "exlud": 291, "unreport": 291, "1076": 291, "988": 291, "1c65359": 291, "42fe72f": 291, "1001": 291, "lead": 291, "uneven": 291, "branch": [291, 296], "stepwis": [291, 298, 323, 326], "694": 291, "properli": 291, "708": 291, "comment": [291, 315], "790": 291, "974": [291, 319], "produc": [291, 309], "1017": 291, "989": 291, "71f4cf23": 291, "dsl": 291, "932": 291, "973": 291, "cfc09bad": 291, "975": 291, "917": 291, "977": 291, "908": 291, "fd564168": 291, "088a046a": 291, "c76fa476": 291, "430f1d2e": 291, "make_declar": 291, "greekify_model": 291, "find_clearance_paramet": 291, "find_volume_paramet": 291, "vp": 291, "newer": 291, "seprat": 291, "sporad": 291, "race": [291, 294], "lazi": 291, "duplic": 291, "745": 291, "1st": 291, "3rd": 291, "licens": [291, 295], "advanx": 291, "add_time_after_dos": [291, 313], "intercompartment": 291, "695": 291, "defob": 291, "gl": 291, "solve_ode_system": 291, "meta": 291, "switch": [291, 318], "read_dataset_from_datainfo": [291, 313], "addl": 291, "linalgerror": 291, "656": [291, 306], "tflite": [291, 305], "649": 291, "mdt": [291, 313], "expand_additional_dos": [291, 313], "modelsyntaxerror": 291, "588": 291, "625": [291, 306], "578": 291, "vc1": 291, "577": 291, "success": [291, 294, 298, 303, 306, 308], "632": [291, 319], "636": 291, "boundari": [291, 308, 314, 325], "590": 291, "gl_real": 291, "sampled_iofv": [291, 324], "subblock": 291, "check_dataset": [291, 313], "tensorflow": 291, "modelbuild": 291, "add_mdt_iiv": 291, "three": [291, 301, 309, 315], "add_eta": [291, 321], "etas_as_fullblock": 291, "iiv_as_fullblock": 291, "add_mdt_eta": 291, "wip": 291, "don": 291, "calculate_se_from_inf": 291, "calculate_cov_from_inf": 291, "calculate_inf_from_cov": 291, "calculate_inf_from_corrs": 291, "calculate_corr_from_inf": 291, "528": 291, "457": 291, "translate_nmtran_tim": [291, 313], "print_model_cod": [291, 305, 313], "has_michaelis_menten_elimin": 291, "has_zero_order_elimin": 291, "has_first_order_elimin": 291, "has_mixed_mm_fo_elimin": 291, "2c": 291, "1c": 291, "timevari": 291, "create_symbol": 291, "remove_unused_parameters_and_rv": 291, "mu_reference_model": 291, "simplify_express": 291, "bump_model_numb": 291, "get_doseid": [291, 313], "get_unit_of": 291, "get_concentration_parameters_from_data": [291, 313], "write_csv": 291, "resample_data": 291, "omit_data": 291, "get_observation_express": 291, "get_individu": 291, "get_dos": [291, 313], "list_time_varying_covari": [291, 313], "estmeth": 291, "optim": [291, 301, 311, 318], "incorrect": 291, "add_allometri": [291, 313], "add_covariance_step": 291, "remove_covariance_step": 291, "insert_aft": 291, "modelstat": 291, "power_on_ruv": 291, "estimationmethod": 291, "guard": 291, "avoid": [291, 301, 309, 328], "cdd": 291, "bipp": [291, 293], "5000": 291, "shift": 291, "nest": 291, "due": [291, 322, 325], "set_dtbs_error_model": [291, 313], "dure": [291, 296, 328], "logger": 291, "parametr": 291, "broken": 291, "parallel": [291, 326], "print_model_symbol": 291, "get_observ": [291, 313], "parameter_sampl": 291, "api": [291, 301, 313, 317, 318, 327], "improv": [291, 321], "eta_shrinkag": 291, "summarize_model": 291, "window": [291, 296, 305, 309], "rstudio": [291, 318, 328], "zero_order_absorpt": 291, "first_order_absorpt": 291, "bolus_absorpt": 291, "set_bolus_absorpt": [291, 313], "seq_zo_fo_absorpt": 291, "set_seq_zo_fo_absorpt": [291, 313], "have_zero_order_absorpt": 291, "individual_shrinkag": 291, "individual_parameter_statist": 291, "pk_paramet": 291, "create_rv_block": 291, "split_rv_block": 291, "nind": 291, "nob": 291, "nobsi": 291, "remove_error": 291, "additive_error": 291, "proportional_error": 291, "combined_error": 291, "has_additive_error": 291, "has_proportional_error": 291, "has_combined_error": 291, "theta_as_stdev": 291, "set_dtbs_error": 291, "tdist": [291, 319], "john_drap": 291, "iiv_on_ruv": [291, 319, 321, 322], "add_individual_paramet": 291, "first_order_elimin": 291, "zero_order_elimin": 291, "michaelis_menten_elimin": 291, "mixed_mm_fo_elimin": 291, "revert": 291, "thread": [291, 294], "site": 291, "crossval": [291, 320], "qa": [291, 320], "plain": [291, 295, 296], "sdcorr": 291, "data_transform": 291, "evalut": 291, "dependent_variable_symbol": 291, "releas": [291, 309, 328], "claus": 291, "interfac": [291, 301, 305, 307, 309, 311, 313, 318, 327, 328], "com": 291, "stdin": 291, "123": [291, 298, 306, 308, 312, 314, 322], "clearer": 291, "prioriti": [291, 315], "aggregatedmodelfitresult": 291, "priorit": [291, 315], "half": [291, 319, 321], "life": [291, 319, 321], "set_nam": 291, "parameter_init": 291, "base_parameter_chang": [291, 304], "parameter_vari": [291, 304, 321], "coeffici": 291, "frem_result": 291, "simevalresult": 291, "odesystem": 291, "nonfixed_init": 291, "parameterset": 291, "migrat": 291, "github": [291, 296, 305, 307, 318, 328], "action": [291, 293, 294, 296, 309, 318], "columntyp": 291, "to_base_model": 291, "comined_mm_fo_elimin": 291, "absorption_r": 291, "pretti": 291, "qaresult": 291, "nmtranparseerror": 291, "error_model": 291, "pharmpyconfigpath": [291, 295], "environ": [291, 294, 327, 328], "linearizeresult": 291, "reset_indic": 291, "multiindic": 291, "functionsadd_lag_tim": 291, "yaml": 291, "view": [291, 309, 323], "assumpt": [291, 309], "0th": [291, 293], "parser": 291, "individul": 291, "extend": [291, 309, 321, 323], "postprocess": [291, 320], "librari": [291, 305, 307, 309, 318, 328], "stella": [292, 297, 318], "belin": [292, 297, 318], "gunnar": [292, 297], "yngman": [292, 297, 304], "simon": [292, 297], "carter": [292, 297], "buatoi": [292, 297], "jo\u00e3o": [292, 297], "abrant": [292, 297], "andrew": [292, 297], "hooker": [292, 297], "assemblerr": 292, "novel": 292, "process": [292, 296, 322], "2021": [292, 304], "9656": 292, "subcommand": 293, "top": [293, 300, 326], "often": [293, 296, 311, 323], "help": [293, 294, 298, 313, 318, 326, 328], "verb": 293, "particular": [293, 294, 296, 300, 309, 310], "welcom": [293, 294, 296, 309], "exit": 293, "program": [293, 294, 305, 309], "pheno_r": [293, 300, 311, 312, 313], "prettyprint": 293, "output_fil": 293, "idcol": 293, "datecol": 293, "match": 293, "pager": 293, "stdout": [293, 326], "colnam": 293, "datasetsmultipl": 293, "1th": 293, "quot": 293, "comb": 293, "elimini": 293, "propot": 293, "error_typ": 293, "givenbi": 293, "cov_sampl": 293, "posdef": 293, "non_fix": 293, "input_path": 293, "particip": 294, "project": [294, 296, 307, 309, 328], "made": [294, 309, 311], "member": 294, "globe": 294, "divers": 294, "skill": [294, 318], "person": [294, 309], "experi": 294, "growth": 294, "everyon": [294, 296, 309], "guidelin": 294, "insid": [294, 309], "goal": 294, "inclus": [294, 309, 321], "grow": 294, "pledg": 294, "treat": [294, 296, 309], "peopl": 294, "harass": 294, "bulli": 294, "sexual": 294, "orient": 294, "gender": 294, "ident": 294, "appear": [294, 328], "nation": [294, 297], "ethnic": 294, "religion": 294, "imageri": 294, "sexist": 294, "racist": 294, "exclusionari": 294, "joke": 294, "acknowledg": [294, 309], "citat": 294, "request": [294, 296], "author": [294, 309], "own": [294, 295, 301, 309], "cite": 294, "those": [294, 309, 313, 326], "realiz": 294, "varieti": 294, "opinion": 294, "background": 294, "serv": [294, 309, 318], "enrich": 294, "discuss": 294, "pro": 294, "con": 294, "technologi": 294, "proactiv": 294, "ensur": [294, 309, 325], "heard": 294, "feel": [294, 318], "confid": 294, "freeli": 294, "question": 294, "answer": 294, "respectfulli": 294, "pai": 294, "attent": 294, "feedback": 294, "forum": 294, "especi": 294, "contribut": [294, 297, 307, 309], "conscienti": 294, "percept": 294, "wider": 294, "respond": 294, "strive": 294, "behavior": 294, "encourag": [294, 296, 301, 307], "debat": 294, "disagr": 294, "entir": [294, 296, 309, 326], "silent": 294, "violat": [294, 309], "contact": [294, 309], "talk": 294, "privat": [294, 309], "situat": 294, "onlin": 294, "offlin": 294, "mail": [294, 309], "social": 294, "media": 294, "confer": 294, "adapt": [294, 309], "astropi": 294, "global": [295, 328], "nonmen": 295, "conf": 295, "ini": [295, 313], "default_nonmem_path": 295, "nmfe751": 295, "licfil": 295, "rpath": 295, "temporarili": 295, "pharmpyconfigfil": 295, "your": [296, 305, 307, 309, 315, 326, 328], "bug": 296, "appreci": 296, "suggest": [296, 307], "suitabl": [296, 318], "student": [296, 318], "commun": [296, 309], "aspir": 296, "conduct": [296, 314], "foster": 296, "linux": [296, 305], "maco": [296, 305], "ll": [296, 313], "badg": 296, "pip": [296, 305], "python3": 296, "pip3": 296, "guid": [296, 300, 311, 313], "former": 296, "ubuntu": 296, "apt": 296, "url": [296, 305], "render": [296, 309, 318], "On": [296, 318], "sudo": 296, "brew": 296, "unnecessari": [296, 309], "thing": [296, 309], "instruct": [296, 305, 312, 326], "black": 296, "formatt": 296, "flake8": 296, "linter": 296, "isort": 296, "lint": 296, "reformat": 296, "py39": 296, "test_paramet": 296, "py": [296, 305], "test_get_theta": 296, "apart": 296, "suit": 296, "purpos": [296, 309], "test_modelsearch": 296, "test_summary_individu": 296, "pull": 296, "manag": 296, "contributor": [296, 309], "emploi": 296, "commit": [296, 309], "push": 296, "name_of_branch": 296, "deploy": 296, "setup": 296, "pypi": [296, 305], "io": [296, 301, 305], "trigger": [296, 311], "tag": 296, "disturb": 296, "checkout": 296, "rebas": 296, "changelog": 296, "bump": 296, "good": [296, 309], "semant": 296, "bumpvers": 296, "cfg": 296, "sh": 296, "patch": 296, "minor": 296, "major": [296, 309], "copyright": 296, "necessari": [296, 309], "coi": 296, "stream": [296, 311], "verbatim": [296, 309], "design": [297, 309, 311, 318, 326], "farmaci": 297, "uu": 297, "kajsa": 297, "harl": 297, "zhe": [297, 318], "huang": [297, 318], "aurelien": 297, "oom": 297, "johan": 297, "borg": 297, "antonia": 297, "hufnagl": 297, "viktor": 297, "rogn\u00e5": 297, "piyanan": 297, "assawasuwannakit": 297, "xiaomei": 297, "chen": 297, "alzahra": 297, "hamdan": 297, "osama": 297, "qutishat": 297, "shijun": 297, "wang": 297, "tianwu": 297, "yang": 297, "keqi": 297, "shi": 297, "xuanlin": 297, "liu": 297, "samia": 297, "moham": 297, "yersultan": 297, "mirasbekov": 297, "warm": 297, "thank": 297, "sponsor": 297, "hoffman": 297, "la": 297, "roch": 297, "ltd": 297, "pharmetheu": 297, "uppsala": [297, 307], "univers": [297, 307], "enabl": [297, 309], "resourc": 297, "swedish": 297, "infrastructur": 297, "snic": 297, "uppmax": 297, "research": [297, 318], "council": 297, "inter": [298, 306, 313], "five": 298, "sentenc": 298, "manual": [298, 300, 326], "rewritten": 298, "notic": [298, 309], "semicolon": 298, "mox2": [298, 303, 306, 308, 314, 326], "covsearch_run5": 298, "covsearch_run6": 298, "covsearch_run7": 298, "covsearch_run8": 298, "covsearch_run9": 298, "covsearch_run10": 298, "covsearch_run11": 298, "covsearch_run12": 298, "covsearch_run13": 298, "covsearch_run14": 298, "covsearch_run15": 298, "covsearch_run16": 298, "covsearch_run17": 298, "covsearch_run18": 298, "covsearch_run19": 298, "covsearch_run20": 298, "covsearch_run21": 298, "covsearch_run22": 298, "covsearch_run23": 298, "covsearch_run24": 298, "covsearch_run25": 298, "covsearch_run26": 298, "covsearch_run27": 298, "covsearch_run28": 298, "covsearch_run29": 298, "covsearch_run30": 298, "covsearch_run31": 298, "covsearch_run32": 298, "covsearch_run33": 298, "covsearch_run34": 298, "covsearch_run35": 298, "covsearch_run36": 298, "covsearch_run37": 298, "covsearch_run38": 298, "covsearch_run39": 298, "covsearch_run40": 298, "covsearch_run41": 298, "covsearch_run42": 298, "covsearch_run43": 298, "covsearch_run44": 298, "covsearch_run45": 298, "covsearch_run46": 298, "covsearch_run47": 298, "covsearch_run48": 298, "covsearch_run49": 298, "covsearch_run50": 298, "covsearch_run51": 298, "covsearch_run52": 298, "covsearch_run53": 298, "covsearch_run54": 298, "pvalu": [298, 323], "goal_pvalu": [298, 323], "is_backward": [298, 323], "047127e": 298, "03": [298, 319, 321, 323], "710000e": 298, "568110e": 298, "494490e": 298, "498453e": 298, "459287e": 298, "280678e": 298, "923500e": 298, "003390e": 298, "984500e": 298, "372293e": 298, "176965e": 298, "207550e": 298, "626878e": 298, "564495e": 298, "539960e": 298, "762000e": 298, "823200e": 298, "417058e": 298, "759040e": 298, "469024e": 298, "02": [298, 321, 323, 325, 326], "811054e": 298, "642452e": 298, "840779e": 298, "261720e": 298, "651215e": 298, "954671e": 298, "163414e": 298, "926594e": 298, "491049e": 298, "423998e": 298, "706676e": 298, "374390e": 298, "054865e": 298, "105347e": 298, "300000e": 298, "029682e": 298, "641559e": 298, "748923e": 298, "363918e": 298, "203548e": 298, "052323e": 298, "567877e": 298, "507358e": 298, "510000e": 298, "1292": [298, 303, 306, 308, 314], "186761": [298, 303, 306, 308, 314], "742325": 298, "929085": 298, "315057": 298, "1346": 298, "501817": 298, "978215": 298, "1332": 298, "164976": 298, "062682": 298, "1312": 298, "249442": 298, "061671": 298, "248431": 298, "056538": 298, "1313": [298, 314], "243298": 298, "732689": 298, "919450": 298, "651626": 298, "1335": 298, "838386": 298, "814832": 298, "1334": 298, "001593": 298, "363759": 298, "550520": 298, "989077": 298, "175838": 298, "136326": 298, "323087": 298, "387950": 298, "1316": 298, "574711": 298, "961688": 298, "148448": 298, "743393": 298, "930153": 298, "617998": 298, "1340": 298, "804759": 298, "641996": 298, "1345": 298, "828756": 298, "288366": 298, "1357": 298, "475127": 298, "263168": 298, "1343": [298, 306], "449928": 298, "814686": 298, "1319": 298, "001446": 298, "181808": 298, "368568": 298, "957602": 298, "144362": 298, "567343": 298, "1347": 298, "754104": 298, "426389": 298, "613149": 298, "324567": 298, "1358": [298, 313], "511327": 298, "446030": 298, "632790": 298, "549224": 298, "1326": 298, "735985": 298, "997342": 298, "184102": 298, "617389": 298, "1351": 298, "804150": 298, "900404": 298, "1350": 298, "087164": 298, "566615": 298, "1391": 298, "753375": 298, "929659": 298, "1352": 298, "116420": 298, "990522": 298, "177283": 298, "217267": 298, "404028": 298, "729333": 298, "1354": 298, "916093": 298, "101": 298, "379219": 298, "1393": 298, "565980": 298, "67": [298, 321, 323], "670588": 298, "1359": 298, "857348": 298, "016040": 298, "202801": 298, "926496": 298, "113256": 298, "139": 298, "462177": 298, "1431": 298, "648937": 298, "83": [298, 319, 321], "706655": 298, "1375": 298, "893415": 298, "798603": 298, "1367": 298, "985364": 298, "801019": 298, "1438": 298, "987780": 298, "443408": 298, "1384": 298, "630169": 298, "997461": 298, "1439": 298, "184221": 298, "322869": 298, "509630": 298, "925020": 298, "111781": 298, "142": 298, "814402": 298, "1435": 298, "001163": [298, 310], "862830": 298, "049591": 298, "449696": 298, "636456": 298, "801017": 298, "987778": 298, "89": [298, 314], "86": 298, "1414": 298, "872375": 298, "810457": 298, "76": 298, "630168": 298, "68": 298, "5328": [298, 303, 306, 308, 314], "104": [298, 303, 306, 308, 314], "2300": [298, 303, 306, 314], "433676": [298, 303, 306, 308, 314], "2632": 298, "103": [298, 306], "2400": 298, "447194": 298, "8757": 298, "2690": 298, "429235": 298, "4824": 298, "0490": 298, "435646": 298, "1536": 298, "7690": 298, "430342": 298, "9763": 298, "8640": 298, "428158": 298, "9807": 298, "1030": 298, "505090": 298, "3823": 298, "4790": 298, "453248": 298, "3323": 298, "5279": 298, "434088": 298, "7087": 298, "109": [298, 314], "1750": 298, "459561": 298, "8501": 298, "4740": 298, "428178": 298, "4821": 298, "0270": 298, "435683": 298, "1635": 298, "5920": 298, "433194": 298, "0931": 298, "1120": 298, "435607": 298, "1216": 298, "2180": 298, "519385": 298, "3873": 298, "4580": 298, "453399": 298, "4279": 298, "6231": 298, "442192": 298, "9115": 298, "9240": 298, "466270": 298, "7337": 298, "9590": 298, "409478": 298, "3781": 298, "2760": 298, "415011": 298, "1007": 298, "5110": 298, "446059": 298, "8490": 298, "522201": 298, "2833": 298, "7400": 298, "430777": 298, "3688": 298, "9010": 298, "444906": 298, "9130": 298, "7450": 298, "468161": 298, "8124": 298, "7120": 298, "407766": 298, "3789": 298, "2080": 298, "416694": 298, "1985": 298, "6770": 298, "441794": 298, "2994": 298, "94": 298, "1796": 298, "587939": 298, "4692": 298, "3027": 298, "440385": 298, "0941": 298, "6170": 298, "463834": 298, "6693": 298, "2570": 298, "413923": 298, "3618": 298, "427491": 298, "2658": 298, "5620": 298, "521096": 298, "4546": 298, "9522": 298, "446657": 298, "0732": 298, "105": [298, 303, 322], "0130": 298, "454492": 298, "7145": 298, "9771": 298, "451302": 298, "3318": 298, "9710": 298, "477444": 298, "4944": 298, "3068": 298, "502124": 298, "0790": 298, "7890": 298, "462595": 298, "7389": 298, "8006": 298, "491811": 298, "6677": 298, "7770": 298, "477864": 298, "6488": 298, "0460": 298, "472418": 298, "9834": 298, "9929": 298, "474434": 298, "0359": 298, "2120": 298, "478021": 298, "0706": 298, "1991": 298, "474688": 298, "0336": 298, "8083": 298, "475373": 298, "0636": 298, "2525": 298, "473063": 298, "0292": 298, "8033": 298, "473542": 298, "0651": 298, "9375": 298, "483644": 298, "0661": 298, "5310": 298, "462817": 298, "0432": 298, "1300": [298, 308], "446808": 298, "7913": 298, "90": [298, 325], "1894": 298, "489466": 298, "9838": 298, "9945": 298, "474441": 298, "0361": 298, "478038": 298, "ruv_prop_estim": [298, 303, 308, 322], "209972": [298, 303, 306, 308, 314], "197452": 298, "005338": 298, "192852": 298, "199549": 298, "193411": 298, "195608": 298, "192557": 298, "198783": 298, "191425": 298, "192934": 298, "192682": 298, "000659": 298, "199545": 298, "000303": 298, "193747": 298, "000956": 298, "197305": 298, "006150": 298, "194664": 298, "005918": 298, "198812": 298, "000334": 298, "192753": 298, "006503": 298, "194238": 298, "009567": 298, "189160": 298, "005291": 298, "195766": 298, "003125": 298, "195730": 298, "004767": 298, "195098": 298, "006600": 298, "195843": 298, "001364": 298, "189330": 298, "003100": 298, "193116": 298, "008094": 298, "189540": 298, "006380": 298, "196038": 298, "002606": 298, "197429": 298, "000340": 298, "204599": 298, "002549": 298, "190442": 298, "000522": 298, "195705": 298, "005726": 298, "192398": 298, "002984": 298, "196915": 298, "000299": 298, "198387": 298, "001229": 298, "190453": 298, "000216": 298, "197082": 298, "005988": 298, "191512": 298, "002433": 298, "194217": 298, "000649": 298, "191075": 298, "001918": 298, "197129": 298, "005915": 298, "183751": 298, "001489": 298, "187999": 298, "001004": 298, "194026": 298, "005955": 298, "187663": 298, "002481": 298, "193344": 298, "009365": 298, "187822": 298, "002901": 298, "187730": 298, "187425": 298, "002946": 298, "184713": 298, "006622": 298, "187724": 298, "002919": 298, "187525": 298, "003050": 298, "192812": 298, "005142": 298, "183104": 298, "001493": 298, "187672": 298, "002483": 298, "193349": 298, "009366": 298, "pop_clwt_estim": 298, "382904": 298, "010536": 298, "387669": 298, "010497": 298, "396947": 298, "010523": 298, "385807": 298, "010703": 298, "554417": 298, "011851": 298, "519989": 298, "012179": 298, "808497": 298, "011109": 298, "737404": [298, 324], "007109": 298, "709206": 298, "000803": 298, "736659": 298, "000429": 298, "706752": 298, "000822": 298, "662625": 298, "002097": 298, "709124": 298, "000793": 298, "704774": 298, "427285": 298, "003711": 298, "779125": 298, "001087": 298, "007108": 298, "pop_matage_estim": 298, "pop_matsex_estim": 298, "059279": 298, "517590": 298, "056724": 298, "520520": 298, "063392": 298, "057943": 298, "019268": 298, "348000": 298, "008419": 298, "040813": 298, "045624": 298, "023159": 298, "057041": 298, "059912": 298, "003577": 298, "495110": 298, "070972": 298, "033397": 298, "013863": 298, "012482": 298, "367050": 298, "020109": 298, "442940": 298, "030354": 298, "491875": 298, "038044": 298, "224276": 298, "001885": 298, "848782": 298, "017435": 298, "646840": 298, "585757": 298, "000169": 298, "367142": 298, "002221": 298, "737357": 298, "009685": 298, "033267": 298, "009238": 298, "267484": 298, "012667": 298, "165471": 298, "005033": 298, "094740": 298, "010833": 298, "065816": 298, "004749": 298, "096523": 298, "005557": 298, "098655": 298, "107862": 298, "012020": 298, "118838": 298, "005781": 298, "002862": 298, "222520": 298, "005160": 298, "361570": 298, "008017": 298, "030930": 298, "005034": 298, "094706": 298, "010829": 298, "065876": 298, "pop_matwt_estim": 298, "019706": 298, "014651": 298, "020136": 298, "014954": 298, "022336": 298, "011936": 298, "005508": 298, "002344": 298, "013967": 298, "034213": 298, "034044": 298, "009672": 298, "008593": 298, "017124": 298, "000315": 298, "022223": 298, "019316": 298, "009542": 298, "010323": 298, "008652": 298, "018053": 298, "019211": 298, "001906": 298, "014021": 298, "011399": 298, "003565": 298, "010903": 298, "014331": 298, "013699": 298, "015830": 298, "000202": [298, 324], "002078": 298, "009019": 298, "005773": 298, "012366": 298, "002607": 298, "002247": 298, "005768": 298, "011567": 298, "006160": 298, "014272": 298, "004566": 298, "010938": 298, "002378": 298, "007473": 298, "011606": 298, "010672": 298, "000456": 298, "009445": 298, "014649": 298, "012169": 298, "005771": 298, "002248": 298, "pop_vcwt_estim": 298, "953372": 298, "013320": 298, "984897": 298, "012092": 298, "972469": 298, "011946": 298, "954734": 298, "010781": 298, "009540": 298, "009922": 298, "989687": 298, "009576": 298, "986758": 298, "869150": 298, "632058": 298, "008418": 298, "751771": 298, "007571": 298, "416489": 298, "013879": 298, "724866": 298, "008196": 298, "746265": 298, "007399": 298, "727224": 298, "008331": 298, "666572": 298, "010074": 298, "751144": 298, "008031": 298, "711725": 298, "008833": 298, "012851": 298, "967468": 298, "751794": 298, "007573": 298, "416464": 298, "013880": 298, "110": [298, 306, 308, 314, 322], "121": [298, 306, 308, 314, 322], "1403": [298, 306, 308, 314, 322], "1404": [298, 306, 308, 314, 322], "1405": [298, 306, 308, 314, 322], "1406": [298, 306, 308, 314, 322], "1407": [298, 306, 308, 314, 322], "757118": [298, 306, 308, 314], "659694": [298, 306, 308, 314], "302503": [298, 306, 308, 314], "464327": [298, 306, 308, 314], "034898": [298, 306, 308, 314], "482240": 298, "223632": 298, "357442": 298, "119299": 298, "565277": 298, "696443": 298, "062486": 298, "234841": 298, "088594": 298, "953572": 298, "857979": 298, "193305": 298, "003283": 298, "861988": 298, "188718": 298, "005806": 298, "962325": 298, "455479": 298, "289527": 298, "216857": 298, "4015": 298, "2022": [298, 303, 306, 308, 314, 326], "462": 298, "nhowev": [298, 303, 308], "reduced_ofv": [298, 323], "extended_ofv": [298, 323], "ofv_drop": [298, 323], "extended_st": [298, 323], "621435": 298, "246753": 298, "394001": 298, "645626": 298, "219363": 298, "001068": 298, "875674": 298, "899671": 298, "152040": 298, "126842": 298, "678359": 298, "045482": 298, "821275": 298, "431017": 298, "290062": 298, "366965": 298, "488428": 298, "591623": 298, "039740": 298, "659788": 298, "942802": 298, "017391": 298, "380435": 298, "441298": 298, "668043": 298, "180108": 298, "388697": 298, "680065": 298, "025518": 298, "935973": 298, "77": 298, "446136": 298, "690615": 298, "782563": 298, "71": [298, 322], "002416": 298, "644805": 298, "554053": 298, "674591": 298, "072441": 298, "183059": 298, "134631": 298, "547765": 298, "311846": 298, "373764": 298, "196444": 298, "delta_df": [298, 323], "extended_signific": [298, 323], "covariate_effect": [298, 304, 321, 323], "ofv_summari": [298, 323], "candidate_summari": [298, 323], "n_test": [298, 323], "n_ok": [298, 323], "n_localmin": [298, 323], "n_fail": [298, 323], "stepinclud": [298, 323], "estimation_ofv": 299, "prediction_ofv": 299, "545": 299, "863847": 299, "186": 299, "192727": 299, "512": 299, "953185": 299, "694832": 299, "547": 299, "843632": 299, "184": [299, 319, 323], "022535": 299, "579": 299, "109635": 299, "596550": 299, "prediction_ofv_sum": 299, "747": 299, "506644594254": 299, "read_raw_dataset": 300, "sever": [300, 305, 313, 321], "examin": [300, 303, 305, 327], "di": 300, "role": 300, "identif": [300, 322], "mostli": [300, 301, 318], "steven": 300, "typologi": 300, "en": [300, 301, 304], "wikipedia": 300, "wiki": [300, 309], "level_of_measur": 300, "annot": 300, "kg": 300, "mg": 300, "l": 300, "low": [300, 313, 327], "understand": [300, 317], "accompani": [300, 309], "arrai": [300, 311, 313, 326], "And": [300, 309, 313, 326], "under": [301, 307, 309, 323, 328], "construct": [301, 317], "complet": 301, "four": 301, "distinct": 301, "layer": [301, 314, 316], "worklow": 301, "higher": [301, 307, 311, 313, 324], "coupl": 301, "mathemat": [301, 311, 318], "concid": 301, "live": 301, "namespac": 301, "mutablesequ": 301, "scalar": [301, 311], "element": [301, 312, 328], "concern": [301, 309], "expos": 301, "numpydoc": 301, "readthedoc": 301, "ecosystem": 301, "thu": [301, 306, 309, 311, 326], "wrap": 301, "share": [301, 309, 316], "leak": 301, "third": [301, 309], "parti": [301, 309], "break": 301, "run_estmethod": 303, "chapter": [303, 314], "few": 303, "cartesian": 303, "addition": [303, 314, 326], "9999": 303, "runtime_estim": 303, "estmethod_run2": 303, "2422": 303, "465718": 303, "estmethod_run1": 303, "2271": 303, "769243": 303, "run_typ": 303, "1299": [303, 308], "696027": 303, "2420": 303, "117263": 303, "145": 303, "2702": 303, "1840": 303, "3241": 303, "6578": 303, "iiv_cl_estim": [303, 308, 322], "iiv_vc_estim": [303, 308, 322], "481858": [303, 306, 308, 314], "593654": [303, 306, 308, 314], "439589": 303, "483291": 303, "598179": 303, "901289": 303, "419533": 303, "408292": 303, "iiv_mat_estim": [303, 308, 322], "000130": [303, 308, 314], "322572": 303, "197647": 303, "865979": 303, "105366": 303, "10000": 303, "WITH": [303, 306, 308, 309, 325], "THE": [303, 306, 308, 309, 325], "creation": 304, "model_3b": 304, "u": [304, 313], "eta_i": 304, "n_": 304, "par": [304, 311], "eta_k": 304, "bmatrix": 304, "vdot": 304, "eta_": [304, 311, 313], "sim": [304, 311, 313, 324], "mathcal": [304, 311, 313], "mu_2": 304, "omega_": [304, 311], "n1": 304, "n2": 304, "ddot": 304, "latter": 304, "partit": 304, "5th": 304, "630859": 304, "868770": 304, "176754": 304, "95th": 304, "925602": 304, "082310": 304, "244607": 304, "569077": 304, "600360": 304, "632538": 304, "532478": 304, "824355": 304, "138312": 304, "577861": 304, "761430": 304, "991915": 304, "003863": 304, "148763": 304, "297579": 304, "600771": 304, "631260": 304, "661025": 304, "315965": 304, "549669": 304, "811532": 304, "margin": 304, "ij": 304, "ijk": 304, "omega_k": 304, "sigma_1": 304, "sigma_2": 304, "sigma_i": 304, "turn": [304, 311], "percent": 304, "red": 304, "figur": [304, 325], "vconcatchart": 304, "sigma_": [304, 311], "020503": 304, "628814": 304, "009309": 304, "544459": 304, "026950": 304, "613127": 304, "050396": 304, "551581": 304, "individual_effect": 304, "913307": 304, "899565": 304, "923297": 304, "939015": 304, "926632": 304, "948404": 304, "933506": 304, "894967": 304, "970755": 304, "010192": 304, "973823": 304, "047109": 304, "992728": 304, "986142": 304, "999404": 304, "361911": 304, "322628": 304, "418737": 304, "894772": 304, "868658": 304, "917333": 304, "947797": 304, "923656": 304, "969732": 304, "771958": 304, "748072": 304, "790423": 304, "790120": 304, "768277": 304, "806911": 304, "percentu": 304, "unexplained_vari": 304, "sd_observ": 304, "sd_5th": 304, "sd_95th": 304, "469535": 304, "359934": 304, "547612": 304, "465490": 304, "352335": 304, "538174": 304, "165502": 304, "141580": 304, "190726": 304, "159149": 304, "134989": 304, "183613": 304, "420471": 304, "327104": 304, "490419": 304, "404440": 304, "306148": 304, "467046": 304, "143317": 304, "122348": 304, "166012": 304, "141826": 304, "120282": 304, "163610": 304, "percetil": 304, "025328": 304, "022571": 304, "020115": 304, "216681": 304, "188254": 304, "163572": 304, "027391": 304, "021634": 304, "020540": 304, "intermedi": 304, "model_4": [304, 311], "parameter_inits_and_estim": 304, "model_3": 304, "115195": 304, "007066": 304, "209016": 304, "125999": 304, "020191": 304, "224959": 304, "126000": 304, "007084": 304, "38635": 304, "220463": 304, "195326": 304, "176796": 304, "bsv_apgr": [304, 311], "010583": 304, "107027": 304, "000008": 304, "171529": 304, "404278": 304, "000010": 304, "012042": 304, "115427": 304, "000032": 304, "208475": 304, "415588": 304, "000030": 304, "062712": 304, "117271": 304, "039930": 304, "446939": 304, "402075": 304, "bsv_wgt": [304, 311], "244579": 304, "244448": 304, "002173": 304, "002170": 304, "244080": 304, "007763": 304, "007760": 304, "249237": 304, "034610": 304, "015250": 304, "relative_chang": 304, "773218": 304, "095327": 304, "520526": 304, "271369": 304, "110618": 304, "896": 304, "974324": 304, "868": [304, 306], "657803": 304, "852": 304, "803483": 304, "753": 304, "302743": 304, "themselv": 304, "ideal": 304, "estimated_covari": 304, "stdev": 304, "423728": 304, "237640": 304, "525424": 304, "704565": [304, 313], "nyberg": 304, "hb": 304, "jonsson": 304, "mo": 304, "introduct": 304, "cpt": 304, "pharmacometr": [304, 307, 309, 326], "syst": 304, "pharmacol": 304, "1002": 304, "psp4": 304, "12741": 304, "plan": 305, "stabl": 305, "googl": [305, 318], "coral": 305, "repo": 305, "tflite_runtim": 305, "nonlinear": 305, "read_model_result": 306, "aspect": [306, 313, 321, 326], "explor": [306, 318], "naiv": 306, "minima": 306, "\u03b4ofv": [306, 308, 314], "\u03b4aic": [306, 308, 314], "\u03b4bic": [306, 308, 314], "iivsearch_no_of_etas_candidate3": 306, "282024": 306, "iivsearch_no_of_etas_candidate2": 306, "217": 306, "691571": 306, "iivsearch_no_of_etas_candidate6": 306, "641987": 306, "iivsearch_no_of_etas_candidate1": 306, "631": 306, "871991": 306, "iivsearch_no_of_etas_candidate5": 306, "633": [306, 312], "419500": 306, "iivsearch_no_of_etas_candidate4": 306, "815": 306, "076729": 306, "iivsearch_no_of_etas_candidate7": 306, "834": 306, "249063": 306, "iivsearch_block_structure_candidate1": 306, "971960": 306, "1283": 306, "597406": 306, "1279": 306, "315382": 306, "1061": 306, "623812": 306, "893": 306, "673395": 306, "443392": 306, "645": 306, "895882": 306, "464": 306, "238653": 306, "066319": 306, "1365": 306, "569365": 306, "178325": 306, "1280": 306, "1278": [306, 314], "1070": 306, "204731": 306, "1058": 306, "897": 306, "963854": 306, "024311": 306, "644": 306, "650": 306, "186341": 306, "640": 306, "468": 306, "529112": 306, "458": 306, "437": 306, "440744": 306, "1364": 306, "1261": [306, 308], "189012": 306, "1259": [306, 314], "530267": [306, 314], "1039": 306, "215418": [306, 323], "641723": 306, "034998": 306, "620": 306, "864210": 306, "439": 306, "206982": 306, "417": 306, "411370": 306, "160972": 306, "5333": 306, "0366": 306, "1164": 306, "2929": 306, "8058": 306, "9055": 306, "2270": 306, "9424": 306, "1360": 306, "239": 306, "1090": 306, "234": 306, "6680": 306, "9380": 306, "6690": 306, "9880": 306, "433544": 306, "114210": 306, "347648": 306, "316164": 306, "310155": 306, "922906": 306, "434563": 306, "436279": 306, "481830": 306, "594777": 306, "396159": 306, "516927": 306, "593578": 306, "414690": 306, "247930": 306, "656304": 306, "00013": 306, "31998": 306, "08352": 306, "43473": 306, "209975": 306, "401593": 306, "574966": 306, "736398": 306, "750954": 306, "744891": 306, "810669": 306, "215885": 306, "iiv_cl_iiv_vc_estim": 306, "498114": 306, "965311": 306, "348227": 306, "596114": 306, "524856": 306, "831038": 306, "973037": 306, "826292": 306, "168816": 306, "275494": 306, "612863": 306, "081253": 306, "444919": 306, "093815": 306, "067016": 306, "554482": 306, "103963": 306, "060027": 306, "670815": 306, "108198": 306, "049148": 306, "371": 306, "rxode2": [307, 313], "post": [307, 322], "sens": 308, "brute": 308, "approach": 308, "nonzero": 308, "constant": 308, "iovsearch_run7": 308, "iovsearch_run8": 308, "540508": 308, "1265": 308, "694052": 308, "230772": 308, "384316": 308, "230394": 308, "383938": 308, "1262": 308, "153544": 308, "750000": 308, "403544": 308, "750400": 308, "403145": 308, "060114": 308, "093431": 308, "043077": 308, "1257": 308, "110467": 308, "782429": 308, "1115": 308, "911624": 308, "015062": 308, "707566": 308, "017679": 308, "017280": 308, "707992": 308, "707614": 308, "017728": 308, "1145": 308, "944840": 308, "230": 308, "1954": 308, "242": [308, 319, 321], "440613": 308, "665": 308, "439784": 308, "1951": 308, "241": 308, "1950": 308, "440611": 308, "1402": 308, "439785": 308, "439783": 308, "2313": 308, "438628": 308, "474140": 308, "586866": 308, "311861": 308, "472835": 308, "590422": 308, "320387": 308, "474125": 308, "586859": 308, "311859": 308, "474111": 308, "586860": 308, "311903": 308, "590425": 308, "320393": 308, "472840": 308, "590424": 308, "320395": 308, "572627": 308, "290631": 308, "194680": 308, "002735": 308, "195532": 308, "194676": 308, "194675": 308, "195531": 308, "197005": 308, "483460": 308, "omega_iov_3_estim": 308, "000006": 308, "000000e": [308, 323], "241921": 308, "119820": 308, "001912": 308, "068405": 308, "121866": 308, "620420": 308, "271367": 308, "291396": 308, "230854": 308, "051358": 308, "936871": 308, "267222": 308, "042977": 308, "050766": 308, "059323": 308, "250083": 308, "291876": 308, "187631": 308, "020838": 308, "612880": 308, "660334": 308, "657": 308, "279": [308, 319], "NEAR": [308, 314, 325], "adopt": 309, "wikimedia": 309, "bowl_of_hygieia_by_david": 309, "svg": 309, "cc": 309, "BY": 309, "sa": 309, "font": 309, "pt": 309, "san": 309, "relicens": 309, "lgpl": 309, "know": 309, "maintaint": 309, "2023": [309, 325], "softwar": [309, 311, 312, 313, 318, 326], "redistribut": 309, "publish": 309, "foundat": 309, "hope": 309, "warranti": 309, "impli": 309, "merchant": 309, "FOR": 309, "modif": [309, 321], "permit": 309, "retain": 309, "disclaim": 309, "reproduc": 309, "materi": 309, "holder": 309, "AND": 309, "AS": 309, "OR": 309, "BUT": 309, "NOT": 309, "TO": [309, 325], "OF": [309, 325], "IN": 309, "shall": 309, "BE": [309, 325], "liabl": 309, "incident": 309, "exemplari": 309, "consequenti": 309, "damag": 309, "procur": 309, "servic": 309, "loss": 309, "profit": 309, "busi": 309, "interrupt": 309, "ON": 309, "theori": [309, 311], "liabil": 309, "contract": 309, "tort": 309, "neglig": 309, "aris": 309, "advis": 309, "SUCH": 309, "june": 309, "2007": 309, "inc": 309, "fsf": 309, "preambl": 309, "copyleft": 309, "practic": 309, "awai": 309, "contrast": 309, "guarante": 309, "speak": 309, "price": 309, "charg": 309, "wish": 309, "piec": 309, "prevent": 309, "deni": 309, "ask": [309, 328], "surrend": 309, "therefor": 309, "grati": 309, "fee": 309, "recipi": 309, "gpl": 309, "assert": 309, "offer": [309, 313], "permiss": 309, "clearli": 309, "sake": 309, "erron": 309, "devic": 309, "although": 309, "manufactur": 309, "fundament": 309, "incompat": 309, "aim": [309, 321], "systemat": 309, "abus": 309, "area": [309, 318], "unaccept": 309, "prohibit": 309, "substanti": 309, "domain": [309, 316, 326], "stand": 309, "readi": 309, "provis": 309, "futur": 309, "threaten": 309, "constantli": 309, "patent": 309, "danger": 309, "proprietari": 309, "assur": 309, "law": 309, "semiconductor": 309, "mask": 309, "license": 309, "address": 309, "organ": [309, 311], "fashion": 309, "exact": 309, "earlier": 309, "cover": [309, 314, 315, 317, 325, 327], "unmodifi": 309, "propag": 309, "secondarili": 309, "infring": 309, "countri": 309, "convei": 309, "mere": 309, "network": 309, "transfer": 309, "extent": 309, "conveni": [309, 311], "promin": 309, "visibl": 309, "menu": 309, "criterion": 309, "offici": 309, "wide": 309, "among": 309, "essenti": 309, "kernel": 309, "script": [309, 326], "link": [309, 322], "subprogram": 309, "intim": 309, "regener": 309, "grant": 309, "irrevoc": 309, "affirm": 309, "unlimit": 309, "constitut": 309, "fair": 309, "equival": [309, 326], "sole": 309, "facil": 309, "compli": 309, "behalf": 309, "relationship": [309, 323], "circumst": 309, "sublicens": 309, "anti": 309, "circumvent": 309, "deem": 309, "technolog": 309, "fulfil": 309, "oblig": 309, "articl": 309, "wipo": 309, "treati": 309, "decemb": 309, "1996": 309, "waiv": 309, "forbid": 309, "exercis": 309, "intent": 309, "enforc": 309, "medium": [309, 318], "conspicu": 309, "intact": 309, "absenc": 309, "along": 309, "relev": [309, 315, 326], "anyon": 309, "who": [309, 315], "possess": 309, "invalid": 309, "natur": 309, "storag": 309, "aggreg": 309, "beyond": 309, "embodi": 309, "durabl": 309, "customarili": 309, "interchang": 309, "spare": 309, "reason": [309, 318, 325], "cost": 309, "server": 309, "occasion": 309, "noncommerci": 309, "subsect": 309, "6b": 309, "further": [309, 311], "clear": [309, 328], "sai": [309, 315], "host": 309, "satisfi": 309, "peer": 309, "transmiss": 309, "6d": 309, "portion": 309, "consum": 309, "tangibl": 309, "household": 309, "sold": 309, "incorpor": 309, "dwell": 309, "doubt": 309, "resolv": [309, 316], "favor": 309, "coverag": 309, "typic": [309, 326], "commerci": 309, "industri": 309, "procedur": 309, "suffic": 309, "interf": 309, "perpetu": 309, "character": 309, "But": 309, "nor": 309, "abil": 309, "rom": 309, "advers": 309, "protocol": 309, "publicli": 309, "password": 309, "unpack": 309, "supplement": 309, "govern": 309, "notwithstand": 309, "misrepresent": 309, "licensor": 309, "declin": 309, "trademark": 309, "trade": 309, "indemnif": 309, "contractu": 309, "impos": 309, "surviv": 309, "expressli": 309, "void": 309, "paragraph": 309, "ceas": 309, "reinstat": 309, "provision": 309, "perman": 309, "notifi": 309, "prior": 309, "dai": 309, "cessat": 309, "moreov": 309, "cure": 309, "receipt": 309, "qualifi": 309, "ancillari": 309, "consequ": 309, "likewis": 309, "downstream": 309, "complianc": 309, "entiti": 309, "asset": 309, "subdivid": 309, "plu": 309, "effort": 309, "royalti": 309, "litig": 309, "claim": 309, "counterclaim": 309, "lawsuit": 309, "alleg": 309, "sell": 309, "sale": 309, "acquir": 309, "hereaft": 309, "manner": [309, 314], "worldwid": 309, "agreement": 309, "denomin": 309, "coven": 309, "sue": 309, "knowingli": 309, "readili": 309, "arrang": 309, "depriv": 309, "yourself": 309, "benefit": [309, 318], "knowledg": 309, "believ": 309, "pursuant": 309, "convey": 309, "discriminatori": 309, "scope": [309, 325], "payment": 309, "primarili": 309, "march": 309, "constru": 309, "defens": 309, "court": 309, "contradict": 309, "excus": 309, "simultan": [309, 314], "pertin": 309, "agre": 309, "whom": 309, "refrain": 309, "affero": 309, "revis": 309, "Such": 309, "spirit": 309, "ever": 309, "THERE": 309, "qualiti": 309, "prove": 309, "defect": 309, "repair": 309, "WILL": 309, "inabl": 309, "BEING": 309, "inaccur": 309, "sustain": 309, "failur": [309, 318], "review": 309, "waiver": 309, "civil": 309, "greatest": 309, "achiev": 309, "attach": 309, "safest": 309, "pointer": 309, "brief": 309, "idea": [309, 318], "electron": 309, "paper": 309, "hypothet": 309, "Of": 309, "cours": 309, "gui": 309, "box": [309, 321], "employ": 309, "programm": 309, "school": 309, "philosophi": 309, "why": 309, "7b2feb6f20b626a559d3150f6638c111f20b5213": 309, "lin_evalu": 310, "lin_estim": 310, "847272": 310, "problemat": 310, "742853": 310, "722681": 310, "020172": 310, "049270": 310, "072922": 310, "023652": 310, "042005": 310, "025071": 310, "016933": 310, "812731": 310, "767326": 310, "045405": 310, "092668": 310, "052741": 310, "039927": 310, "345523": 310, "466217": 310, "120694": 310, "092993": 310, "062696": 310, "030297": 310, "515740": 310, "483016": 310, "032724": 310, "320532": 310, "253131": 310, "067401": 310, "998789": 310, "959488": 310, "039301": 310, "216717": 310, "214554": 310, "002163": 310, "099921": 310, "125228": 310, "025306": 310, "321679": 310, "306275": 310, "015405": 310, "261241": 310, "333707": 310, "072466": 310, "671243": 310, "651480": 310, "019763": 310, "330720": 310, "297562": 310, "033158": 310, "936161": 310, "906483": 310, "029678": 310, "714069": 310, "871090": 310, "157021": 310, "019825": 310, "011817": 310, "008008": 310, "056142": 310, "013498": 310, "042644": 310, "248747": 310, "213924": 310, "034823": 310, "605213": 310, "571494": 310, "033719": 310, "815937": 310, "898911": 310, "082974": 310, "454128": 310, "483765": 310, "029637": 310, "964631": 310, "119373": 310, "154742": 310, "186715": 310, "170103": 310, "016612": 310, "077661": 310, "064019": 310, "013642": 310, "940635": 310, "941894": 310, "001260": 310, "074883": 310, "073446": 310, "001437": 310, "256369": 310, "245489": 310, "010881": 310, "103887": 310, "101956": 310, "001932": 310, "907728": 310, "900485": 310, "007243": 310, "743720": 310, "709980": 310, "033740": 310, "047324": 310, "021009": 310, "026315": 310, "430306": 310, "400894": 310, "029412": 310, "781609": 310, "798011": 310, "016402": 310, "378940": 310, "371430": 310, "007511": 310, "194729": 310, "237151": 310, "042422": 310, "599213": 310, "525654": 310, "073559": 310, "709166": 310, "667521": 310, "041645": 310, "219054": 310, "180075": 310, "038978": 310, "122738": 310, "296506": 310, "173768": 310, "229686": 310, "228531": 310, "001156": 310, "756406": 310, "734272": 310, "022134": 310, "979740": 310, "927830": 310, "051910": 310, "813988": 310, "812185": 310, "001803": 310, "234962": 310, "233799": 310, "389988": 310, "431669": 310, "041681": 310, "057167": 310, "047647": 310, "009521": 310, "429917": 310, "365265": 310, "064652": 310, "011212": 310, "105276": 310, "094064": 310, "302735": 310, "342891": 310, "040156": 310, "292516": 310, "307608": 310, "015092": 310, "067193": 310, "977095": 310, "090098": 310, "359971": 310, "357379": 310, "002592": 310, "340768": 310, "341140": 310, "000372": 310, "515376": 310, "511708": 310, "003668": 310, "970486": 310, "940640": 310, "029846": 310, "638461": 310, "592266": 310, "046195": 310, "iofv_plot": 310, "At": [311, 325], "heart": 311, "li": [311, 326], "subclass": 311, "principl": 311, "mymodel": [311, 313], "parset": 311, "displaystyl": [311, 313], "eps_": 311, "similarli": [311, 328], "theta_": 311, "s_": 311, "a_": [311, 313], "quit": 311, "flexibl": 311, "cumbersom": 311, "easili": 311, "unimport": 311, "frem_path": 311, "frem_model": 311, "frem_model_result": 311, "omega\u2082": 311, "omega\u2083": 311, "omega\u2084": 311, "\u2082": 311, "eta\u2083": 311, "\u2083": 311, "eta\u2084": 311, "eps\u2082": 311, "epscov": 311, "bsv_": 311, "omega_2_1": 311, "omega_3_1": 311, "omega_4_1": 311, "omega_3_2": 311, "omega_4_2": 311, "omega_4_3": 311, "000286193": 311, "0676481": 311, "0256033": 311, "0235094": 311, "00161838": 311, "24458": 311, "omega_est": 311, "0393482": 311, "0168369": 311, "0442286": 311, "0426757": 311, "0259374": 311, "0654878": 311, "00168063": 311, "983027": 311, "240423": 311, "98305": 311, "choleski": 311, "198363807182661": 311, "0848788911603008": 311, "136868454493349": 311, "222967085720797": 311, "616745467855979": 311, "743597812371906": 311, "215138540674925": 311, "145697201390566": 311, "508675383095755": 311, "810424017694199": 311, "pure": 311, "astyp": 311, "numeric64": 311, "linalg": 311, "19836381": 311, "08487889": 311, "13686845": 311, "22296709": 311, "61674547": 311, "74359781": 311, "21513854": 311, "1456972": 311, "50867538": 311, "81042402": 311, "esim": 312, "testdata": 312, "2760562818805": 312, "parameter_estimates_sdcorr": 312, "171321": 312, "167051": 312, "115069": 312, "Or": 312, "standard_errors_sdcorr": 312, "039153": 312, "022378": 312, "009904": 312, "relative_standard_error": 312, "044731": 312, "027325": 312, "527072": 312, "457068": 312, "267918": 312, "172147": 312, "proper": 312, "388058": 312, "356900": 312, "238442": 312, "096516": 312, "invers": 312, "29955600": 312, "800": 312, "400": 312, "267": 312, "039": 312, "207": 312, "809": 312, "520": 312, "980": 312, "200": 312, "450": 312, "810": 312, "947352": 312, "970591": 312, "982342": 312, "457091": 312, "839437": 312, "257230": 312, "098338": 312, "538621": 312, "647969": 312, "394643": 312, "480164": 312, "650233": 312, "991406": 312, "378880": 312, "739902": 312, "328800": 312, "113284": 312, "212096": 312, "334047": 312, "327778": 312, "821533": 312, "631281": 312, "861669": 312, "915261": 312, "988977": 312, "279273": 312, "733181": 312, "830053": 312, "851724": 312, "212095": 312, "774791": 312, "352283": 312, "172643": 312, "427376": 312, "381444": 312, "624014": 312, "970627": 312, "177028": 312, "206540": 312, "955029": 312, "982447": 312, "051499": 312, "424503": 312, "734342": 312, "018477": 312, "810285": 312, "279258": 312, "168486": 312, "190508": 312, "749134": 312, "598565": 312, "237467": 312, "568934": 312, "800062": 312, "098025": 312, "586253": 312, "663948": 312, "850993": 312, "605845": 312, "143": 312, "045": [312, 319], "971": 312, "881": 312, "575": 312, "080": 312, "063": 312, "427": 312, "668": 312, "543": 312, "662": 312, "478": 312, "667": 312, "253": 312, "495": 312, "918": 312, "67071": 312, "401100": 312, "35080": 312, "587770": 312, "36360": 312, "278800": 312, "19730": 312, "670700": 312, "21710": 312, "352600": 312, "86050": 312, "067200": 312, "35060": 312, "059269": 312, "72100": 312, "036754": 312, "10860": 312, "814140": 312, "28180": 312, "699410": 312, "eb": 312, "043861": 312, "005430": 312, "166321": 312, "131833": 312, "095934": 312, "130868": 312, "009154": 312, "017388": 312, "102019": 312, "283500": 312, "019417": 312, "099839": 312, "045946": 312, "059072": 312, "024270": 312, "189351": 312, "248536": 312, "091872": 312, "009545": 312, "012052": 312, "066151": 312, "293685": 312, "030236": 312, "074789": 312, "094502": 312, "147433": 312, "076820": 312, "105604": 312, "020051": 312, "066265": 312, "086035": 312, "023260": 312, "067138": 312, "030859": 312, "337255": 312, "035532": 312, "032579": 312, "028410": 312, "003589": 312, "080613": 312, "060233": 312, "052854": 312, "004469": 312, "057344": 312, "051992": 312, "212941": 312, "137510": 312, "004111": 312, "023282": 312, "302636": 312, "039069": 312, "119442": 312, "044956": 312, "263320": 312, "000776": 312, "083231": 312, "003150": 312, "012752": 312, "049654": 312, "080932": 312, "000555": 312, "099614": 312, "061864": 312, "332738": 312, "038156": 312, "067641": 312, "038017": 312, "184137": 312, "156617": 312, "208753": 312, "114558": 312, "053036": 312, "008405": 312, "026004": 312, "144920": 312, "081646": 312, "083320": 312, "015380": 312, "000392": 312, "078062": 312, "018966": 312, "112030": 312, "112715": 312, "383786": 312, "001730": 312, "167583": 312, "042068": 312, "066598": 312, "037600": 312, "000093": 312, "010662": 312, "009775": 312, "058306": 312, "229005": 312, "033958": 312, "008959": 312, "092312": 312, "050987": 312, "192569": 312, "002727": 312, "225657": 312, "115824": 312, "204269": 312, "054792": 312, "066334": 312, "123689": 312, "239678": 312, "047215": 312, "186615": 312, "000949": 312, "010812": 312, "015929": 312, "017213": 312, "005234": 312, "122552": 312, "076677": 312, "095696": 312, "024883": 312, "002999": 312, "007157": 312, "inspect": [313, 327], "model_nlmixr": 313, "diff": [313, 318], "add_error": 313, "focei": 313, "model_start": 313, "eta_vc": 313, "pop_vc": 313, "pop_": 313, "225": 313, "epsilon_": 313, "iiv_cl_iiv_vc": 313, "iiv_vc": 313, "\u03c3": 313, "iiv_mat": 313, "iiv_": 313, "advan2": 313, "THEN": 313, "22500000000000e": 313, "cond": 313, "maxev": 313, "99999": 313, "cipredi": 313, "mytab": 313, "tlag": 313, "alag1": 313, "pop_mdt": 313, "advan3": 313, "trans4": 313, "pop_qp1": 313, "pop_vp1": 313, "run4": 313, "tol": 313, "pop_clmm": 313, "pop_km": 313, "iiv_clmm": 313, "iiv_clmm_iiv_vc": 313, "iiv_cl_iiv_mat": 313, "iiv_vc_iiv_mat": 313, "0094868": 313, "onto": 313, "wgt_median": 313, "30000": 313, "clwgt": 313, "pop_clwgt": 313, "user_effect": 313, "wgt_std": 313, "add_population_paramet": 313, "unfix_parameters_to": 313, "\u03b5\u209a\u2081": 313, "p1": 313, "set_time_varying_error_model": [313, 322], "100000000000000": 313, "f_flag": 313, "f_": 313, "geq": 313, "get_id": 313, "get_mdv": 313, "largest": 313, "ser": 313, "delai": [314, 325, 326], "grammar": [314, 325], "exhaustive_stepwis": 314, "obtain": 314, "basi": 314, "subsequ": [314, 315, 326], "modelsearch_candidate2": [314, 326], "594608": 314, "1272": 314, "124874": 314, "modelsearch_candidate3": [314, 326], "558028": 314, "088295": 314, "modelsearch_candidate4": [314, 326], "956313": 314, "1270": 314, "486580": 314, "287000": 314, "1260": 314, "817266": 314, "362287": 314, "1327": 314, "153182": 314, "1325": 314, "551467": 314, "1307": 314, "301235": 314, "1295": 314, "1305": 314, "1289": 314, "2927": 314, "4334": 314, "7778": 314, "0058": 314, "1640": 314, "260324": 314, "7646": 314, "824443": 314, "5477": 314, "607839": 314, "1147": 314, "842498": 314, "470974": 314, "595276": 314, "526185": 314, "930160": 314, "495109": 314, "322680": 314, "470531": 314, "515250": 314, "312692": 314, "194221": 314, "202201": 314, "207885": 314, "232322": 314, "199750": 314, "205369": 314, "193439": 314, "pop_qp1_estim": 314, "pop_vp1_estim": 314, "pop_mdt_estim": 314, "155413": 314, "4192": 314, "6100": 314, "172730": 314, "3977": 314, "4562": 314, "158070": 314, "8042": 314, "8517": 314, "iiv_mdt_estim": 314, "156289": 314, "192020": 314, "092419": 314, "262429": 314, "720369": 314, "464263": 314, "127061": 314, "906722": 314, "053781": 314, "923055": 314, "795863": 314, "030658": 314, "661330": 314, "168680": 314, "833073": 314, "041529": 314, "205858": 314, "064930": 314, "609673": 314, "396329": 314, "928556": 314, "365": 314, "330": 314, "topic": 315, "scheme": 315, "theta_cl": 315, "mention": 315, "ve": 315, "despit": 315, "write_etas_in_abbr": 315, "altair": [316, 318], "vega": 316, "lite": 316, "ggplot": 316, "editor": 316, "clamp": 316, "vconcat": 316, "spec": 316, "inten": 317, "export": 317, "strictli": 317, "necessesari": 317, "detect_model": 317, "summer": 318, "master": 318, "thesi": 318, "internship": 318, "email": 318, "team": 318, "tox": 318, "pytest": 318, "sphinx": 318, "wise": 318, "known": 318, "trial": 318, "involv": 318, "outcom": 318, "350h": 318, "difficulti": 318, "mentor": 318, "scipi": 318, "focu": 318, "proof": 318, "concept": 318, "algebra": 318, "simul": [318, 324], "scratch": 318, "almost": 318, "compat": 318, "benefici": 318, "175h": 318, "easi": 318, "potenti": 318, "eas": 318, "jupyt": 318, "holoview": 318, "bokeh": 318, "monitor": 318, "ongo": 318, "veri": 318, "happen": [318, 328], "converg": 318, "sort": [318, 326], "dashboard": 318, "complement": 318, "realtim": 318, "restart": [318, 328], "middl": 318, "worflow": 318, "cv": [319, 321], "772": [319, 321], "700": 319, "042": [319, 321], "sdeps_0": [319, 321], "t1": 319, "sdeps_t1": 319, "t2": 319, "886": 319, "sdeps_t2": 319, "t3": 319, "272": 319, "sdeps_t3": 319, "t4": 319, "716": 319, "sdeps_t4": 319, "t5": 319, "218": 319, "sdeps_t5": 319, "t6": 319, "928": 319, "sdeps_t6": 319, "t7": 319, "092": 319, "sdeps_t7": 319, "t8": 319, "914": 319, "sdeps_t8": 319, "t9": 319, "840": 319, "sdeps_t9": 319, "390": [319, 321], "159": [319, 321], "t0": [319, 321], "271": [319, 321], "sdeps_t0": [319, 321], "956": [319, 321], "717": 319, "014": 319, "983": 319, "884": 319, "017": 319, "955": 319, "958": 319, "969": 319, "933": 319, "022": 319, "819": 319, "007": 319, "755": 319, "982": 319, "642": 319, "387": 319, "th_0": 319, "257": 319, "867": 319, "th_t1": 319, "211": 319, "th_t2": 319, "277": 319, "th_t3": 319, "033": 319, "th_t4": 319, "367": 319, "th_t5": 319, "204": 319, "170": 319, "th_t6": 319, "078": 319, "th_t7": 319, "841": 319, "th_t8": 319, "th_t9": 319, "030": 319, "124": 319, "289": 319, "386": 319, "203": 319, "287": 319, "019": 319, "delta_pow": [319, 321], "037": [319, 321], "autocorrel": [319, 321], "dtb": [319, 321], "91": [319, 321], "idv_varying_ruv": 319, "idv_varying_ruv_cutoff0": 319, "idv_varying_ruv_cutoff1": 319, "idv_varying_ruv_cutoff2": 319, "idv_varying_ruv_cutoff3": 319, "idv_varying_ruv_cutoff4": 319, "idv_varying_ruv_cutoff5": 319, "idv_varying_ruv_cutoff6": 319, "idv_varying_ruv_cutoff7": 319, "idv_varying_ruv_cutoff8": 319, "idv_varying_combin": 319, "idv_varying_theta": 319, "sdep": 319, "delet": 320, "diagnost": 320, "improement": 321, "592698": 321, "197887": 321, "007493": 321, "521171": 321, "et1apgr": 321, "487930": 321, "residual_error_model": 321, "910000": 321, "030000": 321, "diagnos": 321, "structural_bia": 321, "cpred": 321, "binmin": 321, "binmax": 321, "binid": 321, "258": 321, "strutur": 321, "mdel": 321, "fullblock_paramet": 321, "183463": 321, "171306": 321, "554610": 321, "154408": 321, "167053": 321, "cox": 321, "boxcox_paramet": 321, "shape": 321, "new_sd": 321, "old_sd": 321, "922083": 321, "182037": 321, "332800": 321, "166021": 321, "tdist_paramet": 321, "79": 321, "9997": 321, "168477": 321, "9986": 321, "166469": 321, "residual_error": 321, "additional_paramet": 321, "coeff": 321, "48793": 321, "033334": 321, "48218": 321, "052342": 321, "59034": 321, "008371": 321, "00887": 321, "003273": 321, "ibrahim": 322, "quickli": [322, 326], "inde": 322, "cwres_model": 322, "479721": 322, "385268": 322, "002792": 322, "time_varying1": 322, "117041": 322, "time_varying2": 322, "555154": 322, "time_varying3": 322, "336641": 322, "091207": 322, "065738": 322, "654562": 322, "046578": 322, "519115": 322, "612710": 322, "643741": 322, "027766": 322, "sigma_add": 322, "000367": 322, "sigma_prop": 322, "967365": 322, "00123": 322, "0976": 322, "12252": 322, "14299": 322, "000337": 322, "05242": 322, "006105": 322, "10545": 322, "12659": 322, "15573": 322, "00054": 322, "04769": 322, "030825": 322, "mox3": 322, "best_ruvsearch_2": 322, "2460": 322, "704469": 322, "957378": 322, "2473": 322, "661847": 322, "269102": 322, "2495": 322, "973571": 322, "2444": 322, "2455": 322, "2475": 322, "2423": 322, "757516": 322, "2435": 322, "047712": 322, "068976": 322, "707": 322, "5434": 322, "531596": 322, "794": 322, "3091": 322, "528620": 322, "733": 322, "3094": 322, "532547": 322, "iiv_vc_iiv_cl_estim": 322, "077743": 322, "038888": 322, "076793": 322, "039924": 322, "071628": 322, "038470": 322, "072309": 322, "704770": 322, "093311": 322, "074889": 322, "707665": 322, "081095": 322, "075048": 322, "705429": 322, "044311": 322, "iiv_ruv1_estim": 322, "time_varying_estim": 322, "039675": 322, "040734": 322, "42509": 322, "215727": 322, "655144": 322, "708324": 322, "762729": 322, "236530": 322, "229762": 322, "715966": 322, "423148": 322, "419741": 322, "774540": 322, "164274": 322, "450202": 322, "195425": 322, "960585": 322, "090461": 322, "848498": 322, "052021": 322, "239462": 322, "065148": 322, "571348": 322, "244582": 322, "161981": 322, "509910": 322, "373696": 322, "084489": 322, "647643": 322, "344772": 322, "083776": 322, "259395": 322, "101415": 322, "024651": 322, "443542": 322, "124023": 322, "183089": 322, "977222": 322, "219": 322, "moustafa": 322, "m": 322, "maria": 322, "kjellsson": 322, "aap": 322, "1208": 322, "s12248": 322, "018": 322, "0240": 322, "pha": 323, "219210": 323, "90878": 323, "219167": 323, "36222": 323, "bmi": 323, "219171": 323, "47564": 323, "cycll": 323, "219203": 323, "94536": 323, "diag": 323, "219206": 323, "01527": 323, "disdur": 323, "219032": 323, "86056": 323, "215321": 323, "70954": 323, "215306": 323, "67698": 323, "phia": 323, "men": 323, "215407": 323, "40295": 323, "phib": 323, "georeg": 323, "215373": 323, "77800": 323, "216968": 323, "25989": 323, "slp": 323, "215359": 323, "18150": 323, "54656": 323, "140000e": 323, "43314": 323, "390000e": 323, "96342": 323, "319000e": 323, "89351": 323, "695800e": 323, "178": 323, "04822": 323, "290000e": 323, "03256": 323, "060000e": 323, "72597": 323, "10102": 323, "580000e": 323, "1661": 323, "58291": 323, "50452": 323, "phaag": 323, "phabmi": 323, "phacycl": 323, "phadiag": 323, "phadisdur": 323, "backward_scm_dir1": 323, "phawt": 323, "phiamen": 323, "phibgeoreg": 323, "phibmen": 323, "slpgeoreg": 323, "beween": 323, "slightli": 323, "215961": 323, "46277": 323, "3249": 323, "44601": 323, "215748": 323, "07194": 323, "213": 323, "39083": 323, "215570": 323, "57352": 323, "49842": 323, "215486": 323, "23440": 323, "33912": 323, "87007": 323, "36433": 323, "215357": 323, "74693": 323, "12314": 323, "215337": 323, "95044": 323, "79649": 323, "24090": 323, "215332": 323, "91461": 323, "23763": 323, "67861": 323, "00163": 323, "215450": 323, "74783": 323, "07085": 323, "215491": 323, "11568": 323, "43870": 323, "500000e": 323, "700000e": 323, "170000e": 323, "260000e": 323, "360000e": 323, "600000e": 323, "020000e": 323, "620000e": 323, "430000e": 323, "200000e": 323, "lbest": 323, "cpl": 323, "853273": 324, "215148": 324, "885525": 324, "860736": 324, "995045": 324, "575351": 324, "533799": 324, "993262": 324, "080061": 324, "568383": 324, "482883": 324, "300884": 324, "322738": 324, "905658": 324, "276361": 324, "376218": 324, "005653": 324, "928279": 324, "546277": 324, "313336": 324, "489785": 324, "898802": 324, "098483": 324, "795252": 324, "058260": 324, "542369": 324, "968860": 324, "773450": 324, "706108": 324, "078494": 324, "775938": 324, "873918": 324, "210594": 324, "600450": 324, "916754": 324, "823449": 324, "793703": 324, "899285": 324, "639544": 324, "104682": 324, "136767": 324, "405150": 324, "330868": 324, "230477": 324, "185132": 324, "354616": 324, "488282": 324, "406903": 324, "438225": 324, "479966": 324, "720261": 324, "884839": 324, "736463": 324, "892761": 324, "924846": 324, "432346": 324, "436720": 324, "367480": 324, "061750": 324, "849137": 324, "024193": 324, "694969": 324, "341680": 324, "054791": 324, "925921": 324, "423537": 324, "548598": 324, "387386": 324, "759167": 324, "864669": 324, "962122": 324, "705806": 324, "424024": 324, "853355": 324, "317393": 324, "280139": 324, "086333": 324, "056381": 324, "413680": 324, "695800": 324, "331177": 324, "631655": 324, "603301": 324, "449888": 324, "704503": 324, "541680": 324, "371773": 324, "758919": 324, "748996": 324, "138213": 324, "026935": 324, "316351": 324, "966413": 324, "814952": 324, "272954": 324, "929655": 324, "009725": 324, "937635": 324, "878300": 324, "715708": 324, "421235": 324, "563473": 324, "459161": 324, "462408": 324, "868224": 324, "383043": 324, "480043": 324, "959843": 324, "260472": 324, "179394": 324, "933191": 324, "676905": 324, "300601": 324, "811596": 324, "398492": 324, "218010": 324, "585174": 324, "956306": 324, "570879": 324, "786560": 324, "191401": 324, "051986": 324, "726349": 324, "445912": 324, "351180": 324, "612812": 324, "553003": 324, "767349": 324, "099846": 324, "876780": 324, "806204": 324, "584818": 324, "846457": 324, "822404": 324, "991350": 324, "924166": 324, "998400": 324, "892200": 324, "207434": 324, "565671": 324, "326447": 324, "115117": 324, "225727": 324, "018880": 324, "434087": 324, "341361": 324, "782192": 324, "806515": 324, "348921": 324, "250063": 324, "599116": 324, "086788": 324, "574493": 324, "296737": 324, "382526": 324, "944073": 324, "831345": 324, "516464": 324, "994987": 324, "574667": 324, "857266": 324, "485191": 324, "901408": 324, "793265": 324, "072216": 324, "874349": 324, "002572": 324, "733704": 324, "693935": 324, "912201": 324, "711150": 324, "676572": 324, "151243": 324, "707700": 324, "905528": 324, "069326": 324, "800871": 324, "954047": 324, "931900": 324, "538437": 324, "186642": 324, "077897": 324, "748099": 324, "731336": 324, "376121": 324, "196475": 324, "773375": 324, "819544": 324, "247095": 324, "504667": 324, "372391": 324, "848184": 324, "762211": 324, "843029": 324, "765259": 324, "455400": 324, "826862": 324, "572217": 324, "056323": 324, "187278": 324, "257409": 324, "502366": 324, "119652": 324, "298009": 324, "370226": 324, "802175": 324, "360000": 324, "305631": 324, "134650": 324, "361844": 324, "597045": 324, "639042": 324, "716192": 324, "544260": 324, "266702": 324, "169391": 324, "400720": 324, "977219": 324, "676934": 324, "022410": 324, "868679": 324, "106708": 324, "974785": 324, "641421": 324, "597599": 324, "424237": 324, "982047": 324, "904024": 324, "886356": 324, "853009": 324, "087082": 324, "098997": 324, "169297": 324, "840067": 324, "712658": 324, "374133": 324, "151935": 324, "963905": 324, "856403": 324, "884553": 324, "044583": 324, "415675": 324, "567520": 324, "351619": 324, "118999": 324, "893425": 324, "360173": 324, "396594": 324, "999275": 324, "255630": 324, "509070": 324, "046265": 324, "414926": 324, "358567": 324, "899880": 324, "408061": 324, "324755": 324, "684344": 324, "907778": 324, "496109": 324, "473731": 324, "297200": 324, "394438": 324, "493584": 324, "362886": 324, "222423": 324, "864820": 324, "606428": 324, "119216": 324, "933397": 324, "988252": 324, "206488": 324, "862927": 324, "693535": 324, "448507": 324, "178177": 324, "517867": 324, "911020": 324, "965455": 324, "764024": 324, "518105": 324, "477206": 324, "346212": 324, "453899": 324, "500103": 324, "133073": 324, "320820": 324, "408266": 324, "462547": 324, "783555": 324, "585654": 324, "027851": 324, "180204": 324, "337790": 324, "036534": 324, "972480": 324, "960296": 324, "402983": 324, "457112": 324, "195385": 324, "378125": 324, "723710": 324, "587323": 324, "032512": 324, "814145": 324, "016286": 324, "269137": 324, "408322": 324, "950516": 324, "788249": 324, "602344": 324, "846592": 324, "448461": 324, "159667": 324, "884049": 324, "777419": 324, "451814": 324, "243399": 324, "541949": 324, "625663": 324, "601504": 324, "416254": 324, "866250": 324, "933824": 324, "371639": 324, "907322": 324, "487277": 324, "418469": 324, "495039": 324, "087071": 324, "663661": 324, "606033": 324, "547459": 324, "675347": 324, "573838": 324, "611250": 324, "500411": 324, "584165": 324, "247584": 324, "271405": 324, "749030": 324, "860290": 324, "881148": 324, "824837": 324, "804622": 324, "876965": 324, "941132": 324, "153441": 324, "366355": 324, "348849": 324, "319025": 324, "885439": 324, "193338": 324, "054769": 324, "165042": 324, "230120": 324, "488686": 324, "921633": 324, "083424": 324, "027733": 324, "824880": 324, "946876": 324, "180960": 324, "654589": 324, "916884": 324, "604188": 324, "364078": 324, "370783": 324, "638247": 324, "467337": 324, "351839": 324, "957716": 324, "136159": 324, "472019": 324, "221459": 324, "664634": 324, "151210": 324, "318875": 324, "135159": 324, "527835": 324, "551158": 324, "526828": 324, "562788": 324, "615899": 324, "796073": 324, "293600": 324, "328937": 324, "818812": 324, "486179": 324, "376893": 324, "929665": 324, "446579": 324, "121901": 324, "114640": 324, "247238": 324, "615092": 324, "512627": 324, "408347": 324, "484284": 324, "018308": 324, "842566": 324, "867625": 324, "114753": 324, "664954": 324, "638560": 324, "078385": 324, "178961": 324, "282087": 324, "622712": 324, "882876": 324, "238692": 324, "678095": 324, "361556": 324, "037941": 324, "713778": 324, "166879": 324, "422555": 324, "708577": 324, "335429": 324, "567697": 324, "266944": 324, "989005": 324, "461262": 324, "388393": 324, "212573": 324, "621329": 324, "501489": 324, "277388": 324, "003027": 324, "110075": 324, "219194": 324, "366018": 324, "380865": 324, "905147": 324, "630512": 324, "961895": 324, "546036": 324, "534496": 324, "816485": 324, "231970": 324, "682987": 324, "900845": 324, "776532": 324, "988276": 324, "802797": 324, "749003": 324, "015416": 324, "725509": 324, "662582": 324, "196823": 324, "838099": 324, "212538": 324, "488859": 324, "851698": 324, "297823": 324, "140249": 324, "743671": 324, "429352": 324, "409142": 324, "659430": 324, "880881": 324, "191840": 324, "755737": 324, "775355": 324, "630846": 324, "956378": 324, "851982": 324, "794788": 324, "483346": 324, "668763": 324, "401748": 324, "382384": 324, "793645": 324, "455902": 324, "926835": 324, "498709": 324, "928532": 324, "425364": 324, "985533": 324, "497867": 324, "366585": 324, "030662": 324, "551558": 324, "565811": 324, "551208": 324, "662370": 324, "042324": 324, "630121": 324, "552114": 324, "580405": 324, "406685": 324, "035731": 324, "040276": 324, "275622": 324, "496993": 324, "957232": 324, "515088": 324, "155311": 324, "454421": 324, "361498": 324, "751915": 324, "363698": 324, "889492": 324, "024682": 324, "952586": 324, "434510": 324, "835458": 324, "575363": 324, "073683": 324, "073635": 324, "819836": 324, "253049": 324, "879430": 324, "169888": 324, "285544": 324, "497236": 324, "178975": 324, "564632": 324, "277992": 324, "765897": 324, "264764": 324, "695028": 324, "688954": 324, "586789": 324, "572606": 324, "516160": 324, "841335": 324, "249772": 324, "244786": 324, "916145": 324, "253768": 324, "659481": 324, "416676": 324, "744242": 324, "731451": 324, "936980": 324, "069317": 324, "269584": 324, "746436": 324, "605768": 324, "716822": 324, "763155": 324, "980420": 324, "125029": 324, "132983": 324, "686115": 324, "811144": 324, "583418": 324, "105503": 324, "043157": 324, "031564": 324, "363551": 324, "850645": 324, "225458": 324, "525306": 324, "892175": 324, "052073": 324, "699366": 324, "404922": 324, "242420": 324, "435102": 324, "509957": 324, "815026": 324, "512603": 324, "589215": 324, "481351": 324, "926077": 324, "175264": 324, "923185": 324, "944302": 324, "194473": 324, "824234": 324, "344235": 324, "735586": 324, "550825": 324, "903583": 324, "308617": 324, "556035": 324, "875052": 324, "501681": 324, "631308": 324, "874004": 324, "432371": 324, "372005": 324, "758791": 324, "133006": 324, "323449": 324, "357159": 324, "iofv_summari": 324, "orgin": 324, "ob": 324, "sampled_mean": 324, "sampled_stdev": 324, "residual_q1": 324, "743042": 324, "219056": 324, "682820": 324, "550173": 324, "035912": 324, "049484": 324, "184218": 324, "853744": 324, "006216": 324, "975298": 324, "041599": 324, "817153": 324, "833045": 324, "781196": 324, "154061": 324, "813525": 324, "398238": 324, "645044": 324, "535071": 324, "205425": 324, "092618": 324, "104527": 324, "106160": 324, "955250": 324, "058617": 324, "344659": 324, "355728": 324, "480441": 324, "205000": 324, "804075": 324, "093249": 324, "372011": 324, "653334": 324, "076303": 324, "579270": 324, "515891": 324, "726464": 324, "480796": 324, "226795": 324, "894556": 324, "321253": 324, "216333": 324, "282456": 324, "045968": 324, "751381": 324, "998817": 324, "568506": 324, "544129": 324, "725055": 324, "084491": 324, "216676": 324, "724839": 324, "269729": 324, "664468": 324, "086120": 324, "099508": 324, "844053": 324, "234199": 324, "780837": 324, "277342": 324, "322169": 324, "051428": 324, "923117": 324, "660772": 324, "466385": 324, "260479": 324, "909214": 324, "004430": 324, "115441": 324, "597439": 324, "671231": 324, "358037": 324, "499079": 324, "674971": 324, "086542": 324, "331370": 324, "633905": 324, "558617": 324, "085015": 324, "554653": 324, "936751": 324, "068515": 324, "800265": 324, "310055": 324, "124015": 324, "712276": 324, "729628": 324, "167439": 324, "715703": 324, "274087": 324, "019852": 324, "305414": 324, "613668": 324, "109257": 324, "443973": 324, "056317": 324, "238664": 324, "161298": 324, "229080": 324, "385458": 324, "248420": 324, "105258": 324, "155784": 324, "539027": 324, "615940": 324, "605320": 324, "132029": 324, "756164": 324, "869343": 324, "544161": 324, "814910": 324, "779158": 324, "268737": 324, "897306": 324, "707535": 324, "453306": 324, "105961": 324, "531367": 324, "507478": 324, "179203": 324, "964192": 324, "235433": 324, "534690": 324, "029698": 324, "870557": 324, "187065": 324, "049483": 324, "611648": 324, "535116": 324, "053927": 324, "077425": 324, "840121": 324, "621227": 324, "470444": 324, "449597": 324, "941064": 324, "849583": 324, "418397": 324, "769517": 324, "495183": 324, "074840": 324, "265168": 324, "489546": 324, "543569": 324, "924754": 324, "255799": 324, "423379": 324, "792450": 324, "651388": 324, "107140": 324, "103779": 324, "709601": 324, "655290": 324, "365991": 324, "222470": 324, "908651": 324, "744590": 324, "726324": 324, "426971": 324, "126409": 324, "743926": 324, "055593": 324, "673502": 324, "381335": 324, "618133": 324, "047349": 324, "322600": 324, "222872": 324, "042834": 324, "180077": 324, "430602": 324, "209284": 324, "495631": 324, "189252": 324, "623118": 324, "780755": 324, "405726": 324, "643222": 324, "836788": 324, "746180": 324, "378962": 324, "498420": 324, "745719": 324, "565835": 324, "016391": 324, "193803": 324, "882538": 324, "054206": 324, "416539": 324, "288743": 324, "598975": 324, "649295": 324, "743847": 324, "028856": 324, "860963": 324, "709391": 324, "906579": 324, "841825": 324, "571912": 324, "121771": 324, "219260": 324, "791821": 324, "756310": 324, "933335": 324, "360735": 324, "121911": 324, "657069": 324, "952413": 324, "311206": 324, "124618": 324, "229621": 324, "945504": 324, "493299": 324, "630288": 324, "415407": 324, "756085": 324, "131488": 324, "213636": 324, "050337": 324, "463633": 324, "980475": 324, "118333": 324, "749123": 324, "229958": 324, "025404": 324, "813878": 324, "738522": 324, "668408": 324, "112740": 324, "972107": 324, "235064": 324, "396011": 324, "934618": 324, "518106": 324, "392308": 324, "216396": 324, "339562": 324, "024801": 324, "793238": 324, "057118": 324, "556378": 324, "796045": 324, "776264": 324, "019010": 324, "430617": 324, "431370": 324, "731493": 324, "527208": 324, "010968": 324, "724711": 324, "959211": 324, "448445": 324, "131466": 324, "302385": 324, "264697": 324, "597597": 324, "779232": 324, "494133": 324, "292477": 324, "639161": 324, "067293": 324, "167700": 324, "637834": 324, "067793": 324, "249132": 324, "314731": 324, "969084": 324, "239401": 324, "359860": 324, "215238": 324, "477740": 324, "578842": 324, "053376": 324, "340902": 324, "021182": 324, "172446": 324, "684367": 324, "059050": 324, "515114": 324, "245427": 324, "197044": 324, "787564": 324, "106919": 324, "970391": 324, "379183": 324, "982728": 324, "807580": 324, "296212": 324, "639192": 324, "874018": 324, "032032": 324, "252364": 324, "047063": 324, "residual_q3": 324, "residual_outli": 324, "832458": 324, "136329": 324, "090316": 324, "021748": 324, "766581": 324, "001176": 324, "238974": 324, "071653": 324, "388881": 324, "584759": 324, "780298": 324, "680349": 324, "043355": 324, "691710": 324, "827298": 324, "317850": 324, "008777": 324, "291308": 324, "498512": 324, "312807": 324, "178997": 324, "306182": 324, "116610": 324, "468439": 324, "007865": 324, "384037": 324, "344744": 324, "151930": 324, "790639": 324, "416342": 324, "637759": 324, "153920": 324, "135334": 324, "038095": 324, "705065": 324, "359915": 324, "588440": 324, "151899": 324, "730945": 324, "514178": 324, "784304": 324, "977290": 324, "707253": 324, "982678": 324, "384237": 324, "576792": 324, "302778": 324, "342653": 324, "313826": 324, "775998": 324, "274818": 324, "191111": 324, "817604": 324, "421290": 324, "461701": 324, "940801": 324, "437023": 324, "207477": 324, "755739": 324, "individual_predictions_plot": 324, "run_structsearch": 325, "directeffect": [325, 326], "ec": 325, "rectangel": 325, "establish": 325, "speciefi": 325, "moment": 325, "effectcomp": [325, 326], "comprtment": [325, 326], "indirecteffect": [325, 326], "structsearch_run2": 325, "effectcomp_linear": 325, "215004": 325, "745013": 325, "structsearch_run1": 325, "direct_emax": 325, "212603": 325, "747413": 325, "baseline_model": 325, "960017": 325, "structsearch_run3": 325, "effectcomp_emax": 325, "984380": 325, "944396": 325, "pheno_pd_filt": 325, "213077": 325, "872420": 325, "572221": 325, "569820": 325, "571979": 325, "tvcl_estim": 325, "tvv_estim": 325, "ivcl_estim": 325, "002739": 325, "44718": 325, "000003": 325, "sigma_1_1_estim": 325, "pop_b_estim": 325, "iiv_b_estim": 325, "006308": 325, "750050": 325, "000009": 325, "057501": 325, "094082": 325, "sigma_estim": 325, "pop_e_max_estim": 325, "338363": 325, "093417": 325, "144566": 325, "093266": 325, "093323": 325, "177469": 325, "pop_ec_50_estim": 325, "iiv_e_max_estim": 325, "35393": 325, "43433": 325, "pop_met_estim": 325, "pop_slope_estim": 325, "099993": 325, "47537": 325, "101217": 325, "iiv_slope_estim": 325, "337360": 325, "535060": 325, "328655": 325, "008705": 325, "243566": 325, "291495": 325, "355828": 325, "981532": 325, "213992": 325, "321069": 325, "330943": 325, "006418": 325, "241037": 325, "294024": 325, "779": 325, "nexce": 325, "trim": 326, "modelsearch_dir1": 326, "hash": 326, "mytab_mox1": 326, "subfold": 326, "temporari": 326, "finish": 326, "recreat": 326, "frame": 326, "programmat": 326, "pharmpy_vers": 326, "tool_nam": 326, "start_tim": 326, "22t14": 326, "312240": 326, "end_tim": 326, "592109": 326, "common_opt": 326, "tmp": 326, "tool_result": 326, "concis": 326, "newlin": 326, "semi": 326, "colon": 326, "endpoint": 326, "wildcard": 326, "nodepot": 326, "autom": 326, "pk_iiv": 326, "pd_iiv": 326, "gotcha": 327, "cran": 328, "rapid": 328, "remot": 328, "install_github": 328, "install_pharmpi": 328, "session": 328, "packagevers": 328, "print_pharmpy_vers": 328, "reticul": 328, "miniconda": 328, "py_discover_config": 328, "conda_cr": 328, "python_vers": 328, "virtual": 328, "libpython": 328, "lib": 328, "libpython3": 328, "mirror": 328, "pipe": 328, "magrittr": 328}, "objects": {"pharmpy": [[285, 0, 0, "-", "model"], [286, 0, 0, "-", "modeling"], [287, 0, 0, "-", "tools"], [288, 0, 0, "-", "workflows"], [293, 6, 1, "cmdoption-pharmpy-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-version", "--version"], [293, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "Parameter"], [24, 1, 1, "", "Parameters"], [25, 1, 1, "", "RandomVariables"], [26, 1, 1, "", "Results"], [27, 1, 1, "", "Statement"], [28, 1, 1, "", "Statements"], [29, 1, 1, "", "VariabilityHierarchy"], [30, 1, 1, "", "VariabilityLevel"], [31, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_peripheral_compartments"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 2, 1, "", "to_dict"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "parameter_uncertainty_method"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_parameter_uncertainty_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[23, 2, 1, "", "create"], [23, 3, 1, "", "fix"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "init"], [23, 3, 1, "", "lower"], [23, 3, 1, "", "name"], [23, 2, 1, "", "replace"], [23, 3, 1, "", "symbol"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 3, 1, "", "fixed"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "inits"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "names"], [24, 3, 1, "", "nonfixed"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "set_fix"], [24, 2, 1, "", "set_initial_estimates"], [24, 3, 1, "", "symbols"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[25, 3, 1, "", "covariance_matrix"], [25, 2, 1, "", "create"], [25, 3, 1, "", "epsilon_levels"], [25, 3, 1, "", "epsilons"], [25, 3, 1, "", "eta_levels"], [25, 3, 1, "", "etas"], [25, 3, 1, "", "free_symbols"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_covariance"], [25, 2, 1, "", "get_rvs_with_same_dist"], [25, 3, 1, "", "iiv"], [25, 3, 1, "", "iov"], [25, 2, 1, "", "join"], [25, 3, 1, "", "names"], [25, 2, 1, "", "nearest_valid_parameters"], [25, 3, 1, "", "nrvs"], [25, 3, 1, "", "parameter_names"], [25, 2, 1, "", "parameters_sdcorr"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "replace_with_sympy_rvs"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "subs"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "unjoin"], [25, 2, 1, "", "validate_parameters"], [25, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_and_reset_index"], [26, 2, 1, "", "to_csv"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[27, 3, 1, "", "free_symbols"], [27, 3, 1, "", "rhs_symbols"], [27, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[28, 3, 1, "", "after_odes"], [28, 3, 1, "", "before_odes"], [28, 2, 1, "", "dependencies"], [28, 2, 1, "", "direct_dependencies"], [28, 3, 1, "", "error"], [28, 2, 1, "", "find_assignment"], [28, 2, 1, "", "find_assignment_index"], [28, 3, 1, "", "free_symbols"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "full_expression"], [28, 3, 1, "", "ode_system"], [28, 2, 1, "", "reassign"], [28, 2, 1, "", "remove_symbol_definitions"], [28, 2, 1, "", "subs"], [28, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[29, 2, 1, "", "create"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "levels"], [29, 3, 1, "", "names"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "group"], [30, 3, 1, "", "name"], [30, 3, 1, "", "reference"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[32, 5, 1, "", "add_admid"], [33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_bioavailability"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_effect_compartment"], [37, 5, 1, "", "add_estimation_step"], [38, 5, 1, "", "add_iiv"], [39, 5, 1, "", "add_indirect_effect"], [40, 5, 1, "", "add_individual_parameter"], [41, 5, 1, "", "add_iov"], [42, 5, 1, "", "add_lag_time"], [43, 5, 1, "", "add_metabolite"], [44, 5, 1, "", "add_parameter_uncertainty_step"], [45, 5, 1, "", "add_pd_iiv"], [46, 5, 1, "", "add_peripheral_compartment"], [47, 5, 1, "", "add_pk_iiv"], [48, 5, 1, "", "add_population_parameter"], [49, 5, 1, "", "add_time_after_dose"], [50, 5, 1, "", "append_estimation_step_options"], [51, 5, 1, "", "bump_model_number"], [52, 5, 1, "", "calculate_aic"], [53, 5, 1, "", "calculate_bic"], [54, 5, 1, "", "calculate_corr_from_cov"], [55, 5, 1, "", "calculate_corr_from_prec"], [56, 5, 1, "", "calculate_cov_from_corrse"], [57, 5, 1, "", "calculate_cov_from_prec"], [58, 5, 1, "", "calculate_epsilon_gradient_expression"], [59, 5, 1, "", "calculate_eta_gradient_expression"], [60, 5, 1, "", "calculate_eta_shrinkage"], [61, 5, 1, "", "calculate_individual_parameter_statistics"], [62, 5, 1, "", "calculate_individual_shrinkage"], [63, 5, 1, "", "calculate_parameters_from_ucp"], [64, 5, 1, "", "calculate_pk_parameters_statistics"], [65, 5, 1, "", "calculate_prec_from_corrse"], [66, 5, 1, "", "calculate_prec_from_cov"], [67, 5, 1, "", "calculate_se_from_cov"], [68, 5, 1, "", "calculate_se_from_prec"], [69, 5, 1, "", "calculate_ucp_scale"], [70, 5, 1, "", "check_dataset"], [71, 5, 1, "", "check_high_correlations"], [72, 5, 1, "", "check_parameters_near_bounds"], [73, 5, 1, "", "cleanup_model"], [74, 5, 1, "", "convert_model"], [75, 5, 1, "", "create_basic_pk_model"], [76, 5, 1, "", "create_config_template"], [77, 5, 1, "", "create_joint_distribution"], [78, 5, 1, "", "create_rng"], [79, 5, 1, "", "create_symbol"], [80, 5, 1, "", "deidentify_data"], [81, 5, 1, "", "display_odes"], [82, 5, 1, "", "drop_columns"], [83, 5, 1, "", "drop_dropped_columns"], [84, 5, 1, "", "evaluate_epsilon_gradient"], [85, 5, 1, "", "evaluate_eta_gradient"], [86, 5, 1, "", "evaluate_expression"], [87, 5, 1, "", "evaluate_individual_prediction"], [88, 5, 1, "", "evaluate_population_prediction"], [89, 5, 1, "", "evaluate_weighted_residuals"], [90, 5, 1, "", "expand_additional_doses"], [91, 5, 1, "", "filter_dataset"], [92, 5, 1, "", "find_clearance_parameters"], [93, 5, 1, "", "find_volume_parameters"], [94, 5, 1, "", "fix_or_unfix_parameters"], [95, 5, 1, "", "fix_parameters"], [96, 5, 1, "", "fix_parameters_to"], [97, 5, 1, "", "get_admid"], [98, 5, 1, "", "get_baselines"], [99, 5, 1, "", "get_bioavailability"], [100, 5, 1, "", "get_cmt"], [101, 5, 1, "", "get_concentration_parameters_from_data"], [102, 5, 1, "", "get_config_path"], [103, 5, 1, "", "get_covariate_baselines"], [104, 5, 1, "", "get_doseid"], [105, 5, 1, "", "get_doses"], [106, 5, 1, "", "get_dv_symbol"], [107, 5, 1, "", "get_evid"], [108, 5, 1, "", "get_ids"], [109, 5, 1, "", "get_individual_parameters"], [110, 5, 1, "", "get_individual_prediction_expression"], [111, 5, 1, "", "get_initial_conditions"], [112, 5, 1, "", "get_lag_times"], [113, 5, 1, "", "get_mdv"], [114, 5, 1, "", "get_model_code"], [115, 5, 1, "", "get_model_covariates"], [116, 5, 1, "", "get_number_of_individuals"], [117, 5, 1, "", "get_number_of_observations"], [118, 5, 1, "", "get_number_of_observations_per_individual"], [119, 5, 1, "", "get_number_of_peripheral_compartments"], [120, 5, 1, "", "get_number_of_transit_compartments"], [121, 5, 1, "", "get_observation_expression"], [122, 5, 1, "", "get_observations"], [123, 5, 1, "", "get_omegas"], [124, 5, 1, "", "get_parameter_rv"], [125, 5, 1, "", "get_pd_parameters"], [126, 5, 1, "", "get_pk_parameters"], [127, 5, 1, "", "get_population_prediction_expression"], [128, 5, 1, "", "get_rv_parameters"], [129, 5, 1, "", "get_sigmas"], [130, 5, 1, "", "get_thetas"], [131, 5, 1, "", "get_unit_of"], [132, 5, 1, "", "get_zero_order_inputs"], [133, 5, 1, "", "greekify_model"], [134, 5, 1, "", "has_additive_error_model"], [135, 5, 1, "", "has_combined_error_model"], [136, 5, 1, "", "has_covariate_effect"], [137, 5, 1, "", "has_first_order_absorption"], [138, 5, 1, "", "has_first_order_elimination"], [139, 5, 1, "", "has_instantaneous_absorption"], [140, 5, 1, "", "has_linear_odes"], [141, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [142, 5, 1, "", "has_michaelis_menten_elimination"], [143, 5, 1, "", "has_mixed_mm_fo_elimination"], [144, 5, 1, "", "has_odes"], [145, 5, 1, "", "has_presystemic_metabolite"], [146, 5, 1, "", "has_proportional_error_model"], [147, 5, 1, "", "has_random_effect"], [148, 5, 1, "", "has_seq_zo_fo_absorption"], [149, 5, 1, "", "has_weighted_error_model"], [150, 5, 1, "", "has_zero_order_absorption"], [151, 5, 1, "", "has_zero_order_elimination"], [152, 5, 1, "", "is_linearized"], [153, 5, 1, "", "is_real"], [154, 5, 1, "", "list_time_varying_covariates"], [155, 5, 1, "", "load_dataset"], [156, 5, 1, "", "load_example_model"], [157, 5, 1, "", "make_declarative"], [158, 5, 1, "", "mu_reference_model"], [159, 5, 1, "", "omit_data"], [160, 5, 1, "", "plot_cwres_vs_idv"], [161, 5, 1, "", "plot_dv_vs_ipred"], [162, 5, 1, "", "plot_individual_predictions"], [163, 5, 1, "", "plot_iofv_vs_iofv"], [164, 5, 1, "", "plot_transformed_eta_distributions"], [165, 5, 1, "", "print_model_code"], [166, 5, 1, "", "print_model_symbols"], [167, 5, 1, "", "read_dataset_from_datainfo"], [168, 5, 1, "", "read_model"], [169, 5, 1, "", "read_model_from_string"], [170, 5, 1, "", "remove_bioavailability"], [171, 5, 1, "", "remove_covariate_effect"], [172, 5, 1, "", "remove_error_model"], [173, 5, 1, "", "remove_estimation_step"], [174, 5, 1, "", "remove_iiv"], [175, 5, 1, "", "remove_iov"], [176, 5, 1, "", "remove_lag_time"], [177, 5, 1, "", "remove_loq_data"], [178, 5, 1, "", "remove_parameter_uncertainty_step"], [179, 5, 1, "", "remove_peripheral_compartment"], [180, 5, 1, "", "remove_unused_parameters_and_rvs"], [181, 5, 1, "", "rename_symbols"], [182, 5, 1, "", "resample_data"], [183, 5, 1, "", "sample_individual_estimates"], [184, 5, 1, "", "sample_parameters_from_covariance_matrix"], [185, 5, 1, "", "sample_parameters_uniformly"], [186, 5, 1, "", "set_additive_error_model"], [187, 5, 1, "", "set_combined_error_model"], [188, 5, 1, "", "set_covariates"], [189, 5, 1, "", "set_direct_effect"], [190, 5, 1, "", "set_dtbs_error_model"], [191, 5, 1, "", "set_dvid"], [192, 5, 1, "", "set_estimation_step"], [193, 5, 1, "", "set_evaluation_step"], [194, 5, 1, "", "set_first_order_absorption"], [195, 5, 1, "", "set_first_order_elimination"], [196, 5, 1, "", "set_iiv_on_ruv"], [197, 5, 1, "", "set_initial_condition"], [198, 5, 1, "", "set_initial_estimates"], [199, 5, 1, "", "set_instantaneous_absorption"], [200, 5, 1, "", "set_lloq_data"], [201, 5, 1, "", "set_lower_bounds"], [202, 5, 1, "", "set_michaelis_menten_elimination"], [203, 5, 1, "", "set_mixed_mm_fo_elimination"], [204, 5, 1, "", "set_name"], [205, 5, 1, "", "set_ode_solver"], [206, 5, 1, "", "set_peripheral_compartments"], [207, 5, 1, "", "set_power_on_ruv"], [208, 5, 1, "", "set_proportional_error_model"], [209, 5, 1, "", "set_reference_values"], [210, 5, 1, "", "set_seq_zo_fo_absorption"], [211, 5, 1, "", "set_time_varying_error_model"], [212, 5, 1, "", "set_tmdd"], [213, 5, 1, "", "set_transit_compartments"], [214, 5, 1, "", "set_upper_bounds"], [215, 5, 1, "", "set_weighted_error_model"], [216, 5, 1, "", "set_zero_order_absorption"], [217, 5, 1, "", "set_zero_order_elimination"], [218, 5, 1, "", "set_zero_order_input"], [219, 5, 1, "", "simplify_expression"], [220, 5, 1, "", "solve_ode_system"], [221, 5, 1, "", "split_joint_distribution"], [222, 5, 1, "", "transform_blq"], [223, 5, 1, "", "transform_etas_boxcox"], [224, 5, 1, "", "transform_etas_john_draper"], [225, 5, 1, "", "transform_etas_tdist"], [226, 5, 1, "", "translate_nmtran_time"], [227, 5, 1, "", "unconstrain_parameters"], [228, 5, 1, "", "undrop_columns"], [229, 5, 1, "", "unfix_parameters"], [230, 5, 1, "", "unfix_parameters_to"], [231, 5, 1, "", "unload_dataset"], [232, 5, 1, "", "update_initial_individual_estimates"], [233, 5, 1, "", "update_inits"], [234, 5, 1, "", "use_thetas_for_error_stdev"], [235, 5, 1, "", "write_csv"], [236, 5, 1, "", "write_model"]], "pharmpy.tools": [[237, 5, 1, "", "create_report"], [238, 5, 1, "", "create_results"], [239, 5, 1, "", "fit"], [240, 5, 1, "", "get_model_features"], [241, 5, 1, "", "load_example_modelfit_results"], [242, 5, 1, "", "predict_influential_individuals"], [243, 5, 1, "", "predict_influential_outliers"], [244, 5, 1, "", "predict_outliers"], [245, 5, 1, "", "print_fit_summary"], [246, 5, 1, "", "rank_models"], [247, 5, 1, "", "read_modelfit_results"], [248, 5, 1, "", "read_results"], [249, 5, 1, "", "resume_tool"], [250, 5, 1, "", "retrieve_final_model"], [251, 5, 1, "", "retrieve_models"], [252, 5, 1, "", "run_allometry"], [253, 5, 1, "", "run_amd"], [254, 5, 1, "", "run_bootstrap"], [255, 5, 1, "", "run_covsearch"], [256, 5, 1, "", "run_estmethod"], [257, 5, 1, "", "run_iivsearch"], [258, 5, 1, "", "run_iovsearch"], [259, 5, 1, "", "run_modelfit"], [260, 5, 1, "", "run_modelsearch"], [261, 5, 1, "", "run_ruvsearch"], [262, 5, 1, "", "run_structsearch"], [263, 5, 1, "", "run_tool"], [264, 5, 1, "", "summarize_errors"], [265, 5, 1, "", "summarize_individuals"], [266, 5, 1, "", "summarize_individuals_count_table"], [267, 5, 1, "", "summarize_modelfit_results"], [268, 5, 1, "", "write_results"]], "pharmpy.workflows": [[269, 1, 1, "", "LocalDirectoryDatabase"], [270, 1, 1, "", "LocalDirectoryToolDatabase"], [271, 1, 1, "", "LocalModelDirectoryDatabase"], [272, 1, 1, "", "Log"], [273, 1, 1, "", "ModelDatabase"], [274, 1, 1, "", "NullModelDatabase"], [275, 1, 1, "", "NullToolDatabase"], [276, 1, 1, "", "Task"], [277, 1, 1, "", "ToolDatabase"], [278, 1, 1, "", "Workflow"], [279, 1, 1, "", "WorkflowBuilder"], [280, 5, 1, "", "call_workflow"], [281, 3, 1, "", "default_model_database"], [282, 3, 1, "", "default_tool_database"], [283, 5, 1, "", "execute_workflow"], [284, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[269, 2, 1, "", "retrieve_file"], [269, 2, 1, "", "retrieve_local_files"], [269, 2, 1, "", "retrieve_model"], [269, 2, 1, "", "retrieve_modelfit_results"], [269, 2, 1, "", "store_local_file"], [269, 2, 1, "", "store_metadata"], [269, 2, 1, "", "store_model"], [269, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[270, 2, 1, "", "from_dict"], [270, 2, 1, "", "read_metadata"], [270, 2, 1, "", "store_local_file"], [270, 2, 1, "", "store_metadata"], [270, 2, 1, "", "store_results"], [270, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[271, 2, 1, "", "list_models"], [271, 2, 1, "", "snapshot"], [271, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[272, 2, 1, "", "from_dict"], [272, 3, 1, "", "log"], [272, 2, 1, "", "log_error"], [272, 2, 1, "", "log_warning"], [272, 2, 1, "", "to_dataframe"], [272, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[273, 2, 1, "", "retrieve_file"], [273, 2, 1, "", "retrieve_local_files"], [273, 2, 1, "", "retrieve_model"], [273, 2, 1, "", "retrieve_modelfit_results"], [273, 2, 1, "", "snapshot"], [273, 2, 1, "", "store_local_file"], [273, 2, 1, "", "store_metadata"], [273, 2, 1, "", "store_model"], [273, 2, 1, "", "store_modelfit_results"], [273, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[274, 2, 1, "", "retrieve_file"], [274, 2, 1, "", "retrieve_local_files"], [274, 2, 1, "", "retrieve_model"], [274, 2, 1, "", "retrieve_modelfit_results"], [274, 2, 1, "", "store_local_file"], [274, 2, 1, "", "store_metadata"], [274, 2, 1, "", "store_model"], [274, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[275, 2, 1, "", "read_metadata"], [275, 2, 1, "", "store_local_file"], [275, 2, 1, "", "store_metadata"], [275, 2, 1, "", "store_results"]], "pharmpy.workflows.Task": [[276, 2, 1, "", "create"], [276, 3, 1, "", "function"], [276, 3, 1, "", "name"], [276, 2, 1, "", "replace"], [276, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[277, 3, 1, "", "model_database"], [277, 3, 1, "", "path"], [277, 2, 1, "", "read_metadata"], [277, 2, 1, "", "store_local_file"], [277, 2, 1, "", "store_metadata"], [277, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[278, 2, 1, "", "as_dask_dict"], [278, 2, 1, "", "create"], [278, 3, 1, "", "name"], [278, 2, 1, "", "plot_dask"], [278, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[279, 2, 1, "", "add_task"], [279, 2, 1, "", "insert_workflow"], [279, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[293, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [293, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[293, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[293, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [293, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[293, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [293, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[293, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [293, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[293, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [293, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [293, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [293, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [293, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [293, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [293, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[293, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[293, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[293, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[293, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[293, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[293, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[293, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [293, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[293, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[293, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [293, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[293, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[293, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [293, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [293, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[293, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[293, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [293, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [293, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [293, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [293, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[293, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[293, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[293, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[293, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [293, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [293, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [293, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[293, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[293, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[293, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[293, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[293, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[293, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[293, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[293, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[293, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[293, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[293, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[293, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [293, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [293, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [293, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [293, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [293, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [293, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [293, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [293, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [293, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [293, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [293, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [293, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[293, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [293, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[293, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[293, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [293, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [293, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [293, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[293, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[293, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [293, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[293, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[293, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [293, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [293, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[293, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [293, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 295, 315], "dataset": [0, 300, 311, 313, 326], "overview": [0, 317, 321], "pars": 0, "translat": 0, "step": [0, 311, 313, 323], "nm": 0, "tran": 0, "comment": 0, "line": [0, 293], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 313], "date": 0, "id": 0, "check": [0, 296], "tabl": 0, "file": [0, 295, 300], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 296], "all": 0, "zero": 0, "individu": [0, 289, 290, 304, 310, 312, 324], "control": 0, "stream": 0, "gener": [0, 309], "option": [0, 288, 326], "problem": 0, "data": [0, 288, 293], "eta": [0, 313], "code": [0, 294, 296], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 26, 289, 290, 293, 298, 299, 303, 304, 306, 308, 310, 312, 314, 319, 321, 322, 323, 324, 325, 326], "spars": 0, "matrix": [0, 289, 312], "allometri": [1, 2, 293, 313], "run": [1, 2, 293, 296, 298, 303, 306, 308, 314, 322, 325, 326], "argument": [1, 2, 298, 303, 306, 308, 314, 322, 325], "procedur": [1, 322], "The": [1, 289, 290, 293, 295, 299, 301, 303, 304, 306, 310, 311, 314, 319, 321, 322, 323, 324, 325], "automat": 2, "model": [2, 18, 285, 286, 293, 300, 301, 306, 311, 312, 313, 314, 315, 319, 322, 325, 326], "develop": [2, 296, 297, 302], "amd": [2, 293], "input": [2, 297], "search": [2, 306, 314, 325], "space": [2, 314, 325], "order": 2, "subtool": 2, "structur": [2, 306, 313, 321], "modelsearch": [2, 293, 314], "structsearch": [2, 325], "iivsearch": [2, 293, 306], "iovsearch": [2, 293, 308], "residu": [2, 312, 321], "covari": [2, 289, 290, 304, 306, 312, 313, 321], "api": 3, "refer": [3, 290, 293, 304], "assign": 4, "bolu": 5, "columninfo": [6, 300], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 300, 311], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 308, 311, 313], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "paramet": [23, 24, 289, 301, 304, 311, 312, 313, 315], "randomvari": [25, 301], "statement": [27, 28, 301, 311], "variabilityhierarchi": 29, "variabilitylevel": 30, "to_compartmental_system": 31, "add_admid": 32, "add_allometri": 33, "add_bioavail": 34, "add_covariate_effect": 35, "add_effect_compart": 36, "add_estimation_step": 37, "add_iiv": [38, 293], "add_indirect_effect": 39, "add_individual_paramet": 40, "add_iov": [41, 293], "add_lag_tim": 42, "add_metabolit": 43, "add_parameter_uncertainty_step": 44, "add_pd_iiv": 45, "add_peripheral_compart": 46, "add_pk_iiv": 47, "add_population_paramet": 48, "add_time_after_dos": 49, "append_estimation_step_opt": 50, "bump_model_numb": 51, "calculate_a": 52, "calculate_b": 53, "calculate_corr_from_cov": 54, "calculate_corr_from_prec": 55, "calculate_cov_from_corrs": 56, "calculate_cov_from_prec": 57, "calculate_epsilon_gradient_express": 58, "calculate_eta_gradient_express": 59, "calculate_eta_shrinkag": 60, "calculate_individual_parameter_statist": 61, "calculate_individual_shrinkag": 62, "calculate_parameters_from_ucp": 63, "calculate_pk_parameters_statist": 64, "calculate_prec_from_corrs": 65, "calculate_prec_from_cov": 66, "calculate_se_from_cov": 67, "calculate_se_from_prec": 68, "calculate_ucp_scal": 69, "check_dataset": 70, "check_high_correl": 71, "check_parameters_near_bound": 72, "cleanup_model": 73, "convert_model": 74, "create_basic_pk_model": 75, "create_config_templ": 76, "create_joint_distribut": [77, 293], "create_rng": 78, "create_symbol": 79, "deidentify_data": 80, "display_od": 81, "drop_column": 82, "drop_dropped_column": 83, "evaluate_epsilon_gradi": 84, "evaluate_eta_gradi": 85, "evaluate_express": 86, "evaluate_individual_predict": 87, "evaluate_population_predict": 88, "evaluate_weighted_residu": 89, "expand_additional_dos": 90, "filter_dataset": 91, "find_clearance_paramet": 92, "find_volume_paramet": 93, "fix_or_unfix_paramet": 94, "fix_paramet": 95, "fix_parameters_to": 96, "get_admid": 97, "get_baselin": 98, "get_bioavail": 99, "get_cmt": 100, "get_concentration_parameters_from_data": 101, "get_config_path": 102, "get_covariate_baselin": 103, "get_doseid": 104, "get_dos": 105, "get_dv_symbol": 106, "get_evid": 107, "get_id": 108, "get_individual_paramet": 109, "get_individual_prediction_express": 110, "get_initial_condit": 111, "get_lag_tim": 112, "get_mdv": 113, "get_model_cod": 114, "get_model_covari": 115, "get_number_of_individu": 116, "get_number_of_observ": 117, "get_number_of_observations_per_individu": 118, "get_number_of_peripheral_compart": 119, "get_number_of_transit_compart": 120, "get_observation_express": 121, "get_observ": 122, "get_omega": 123, "get_parameter_rv": 124, "get_pd_paramet": 125, "get_pk_paramet": 126, "get_population_prediction_express": 127, "get_rv_paramet": 128, "get_sigma": 129, "get_theta": 130, "get_unit_of": 131, "get_zero_order_input": 132, "greekify_model": 133, "has_additive_error_model": 134, "has_combined_error_model": 135, "has_covariate_effect": 136, "has_first_order_absorpt": 137, "has_first_order_elimin": 138, "has_instantaneous_absorpt": 139, "has_linear_od": 140, "has_linear_odes_with_real_eigenvalu": 141, "has_michaelis_menten_elimin": 142, "has_mixed_mm_fo_elimin": 143, "has_od": 144, "has_presystemic_metabolit": 145, "has_proportional_error_model": 146, "has_random_effect": 147, "has_seq_zo_fo_absorpt": 148, "has_weighted_error_model": 149, "has_zero_order_absorpt": 150, "has_zero_order_elimin": 151, "is_linear": 152, "is_real": 153, "list_time_varying_covari": 154, "load_dataset": 155, "load_example_model": 156, "make_declar": 157, "mu_reference_model": 158, "omit_data": 159, "plot_cwres_vs_idv": 160, "plot_dv_vs_ipr": 161, "plot_individual_predict": 162, "plot_iofv_vs_iofv": 163, "plot_transformed_eta_distribut": 164, "print_model_cod": 165, "print_model_symbol": 166, "read_dataset_from_datainfo": 167, "read_model": 168, "read_model_from_str": 169, "remove_bioavail": 170, "remove_covariate_effect": 171, "remove_error_model": 172, "remove_estimation_step": 173, "remove_iiv": [174, 293], "remove_iov": [175, 293], "remove_lag_tim": 176, "remove_loq_data": 177, "remove_parameter_uncertainty_step": 178, "remove_peripheral_compart": 179, "remove_unused_parameters_and_rv": 180, "rename_symbol": 181, "resample_data": 182, "sample_individual_estim": 183, "sample_parameters_from_covariance_matrix": 184, "sample_parameters_uniformli": 185, "set_additive_error_model": 186, "set_combined_error_model": 187, "set_covari": 188, "set_direct_effect": 189, "set_dtbs_error_model": 190, "set_dvid": 191, "set_estimation_step": 192, "set_evaluation_step": 193, "set_first_order_absorpt": 194, "set_first_order_elimin": 195, "set_iiv_on_ruv": 196, "set_initial_condit": 197, "set_initial_estim": 198, "set_instantaneous_absorpt": 199, "set_lloq_data": 200, "set_lower_bound": 201, "set_michaelis_menten_elimin": 202, "set_mixed_mm_fo_elimin": 203, "set_nam": 204, "set_ode_solv": 205, "set_peripheral_compart": 206, "set_power_on_ruv": 207, "set_proportional_error_model": 208, "set_reference_valu": 209, "set_seq_zo_fo_absorpt": 210, "set_time_varying_error_model": 211, "set_tmdd": 212, "set_transit_compart": 213, "set_upper_bound": 214, "set_weighted_error_model": 215, "set_zero_order_absorpt": 216, "set_zero_order_elimin": 217, "set_zero_order_input": 218, "simplify_express": 219, "solve_ode_system": 220, "split_joint_distribut": 221, "transform_blq": 222, "transform_etas_boxcox": 223, "transform_etas_john_drap": 224, "transform_etas_tdist": 225, "translate_nmtran_tim": 226, "unconstrain_paramet": 227, "undrop_column": 228, "unfix_paramet": 229, "unfix_parameters_to": 230, "unload_dataset": 231, "update_initial_individual_estim": 232, "update_init": [233, 293], "use_thetas_for_error_stdev": 234, "write_csv": 235, "write_model": 236, "create_report": 237, "create_result": 238, "fit": [239, 312], "get_model_featur": 240, "load_example_modelfit_result": 241, "predict_influential_individu": 242, "predict_influential_outli": 243, "predict_outli": 244, "print_fit_summari": 245, "rank_model": 246, "read_modelfit_result": 247, "read_result": 248, "resume_tool": 249, "retrieve_final_model": 250, "retrieve_model": 251, "run_allometri": 252, "run_amd": 253, "run_bootstrap": 254, "run_covsearch": 255, "run_estmethod": 256, "run_iivsearch": 257, "run_iovsearch": 258, "run_modelfit": 259, "run_modelsearch": 260, "run_ruvsearch": 261, "run_structsearch": 262, "run_tool": 263, "summarize_error": 264, "summarize_individu": 265, "summarize_individuals_count_t": 266, "summarize_modelfit_result": 267, "write_result": 268, "localdirectorydatabas": 269, "localdirectorytooldatabas": 270, "localmodeldirectorydatabas": 271, "log": 272, "modeldatabas": 273, "nullmodeldatabas": 274, "nulltooldatabas": 275, "task": 276, "tooldatabas": 277, "workflow": [278, 288, 296], "workflowbuild": 279, "call_workflow": 280, "default_model_databas": 281, "default_tool_databas": 282, "execute_workflow": 283, "split_common_opt": 284, "pharmpi": [285, 286, 287, 288, 292, 293, 294, 295, 296, 300, 301, 307, 311, 316, 320, 326, 328], "packag": [285, 286, 287, 288], "function": [285, 286, 287, 288, 313], "class": [285, 288, 301], "tool": [287, 320, 326], "modul": [288, 301], "bootstrap": [289, 293], "postprocess": [289, 304], "statist": 289, "ofv": [289, 290, 293, 299, 304, 310, 312, 323, 324], "includ": 289, "case": 290, "delet": 290, "diagnost": 290, "cdd": [290, 293], "cook": 290, "score": 290, "jackknif": 290, "cookscor": 290, "ratio": 290, "delta": 290, "skip": 290, "column": 290, "changelog": 291, "0": 291, "102": 291, "2023": 291, "09": 291, "28": 291, "new": [291, 308, 315], "featur": [291, 314, 326], "chang": [291, 316], "bugfix": 291, "101": 291, "01": 291, "100": 291, "08": 291, "25": 291, "99": 291, "23": 291, "98": 291, "07": 291, "21": 291, "97": 291, "06": 291, "96": 291, "05": 291, "26": 291, "95": 291, "22": 291, "94": 291, "04": 291, "93": 291, "19": 291, "92": 291, "91": 291, "03": 291, "90": 291, "02": 291, "24": 291, "89": 291, "88": 291, "2022": 291, "12": 291, "87": 291, "14": 291, "86": 291, "11": 291, "30": 291, "85": 291, "18": 291, "84": 291, "1": 291, "13": 291, "bug": 291, "fix": 291, "83": 291, "82": 291, "10": 291, "81": 291, "80": 291, "79": 291, "16": 291, "78": 291, "20": 291, "77": 291, "76": 291, "75": 291, "74": 291, "73": 291, "72": 291, "71": 291, "70": 291, "17": 291, "69": 291, "29": 291, "68": 291, "27": 291, "67": 291, "66": 291, "65": 291, "64": 291, "63": 291, "62": 291, "61": 291, "31": 291, "59": 291, "58": 291, "4": 291, "57": 291, "56": 291, "55": 291, "54": 291, "53": 291, "52": 291, "51": 291, "50": 291, "49": 291, "48": 291, "47": 291, "46": 291, "45": 291, "44": 291, "43": 291, "42": 291, "41": 291, "2021": 291, "40": 291, "39": 291, "15": 291, "38": 291, "37": 291, "36": 291, "35": 291, "34": 291, "3": 291, "2": [291, 309], "33": 291, "32": 291, "2020": 291, "9": 291, "8": 291, "7": 291, "6": 291, "5": 291, "2018": 291, "citat": 292, "how": 292, "cite": 292, "pharmr": [292, 328], "command": 293, "interfac": 293, "append": 293, "deidentifi": 293, "filter": 293, "print": 293, "resampl": 293, "write": [293, 311, 313, 315], "info": 293, "absorption_r": 293, "add_cov_effect": 293, "boxcox": [293, 321], "elimination_r": 293, "error": [293, 312, 313, 321, 328], "iiv_on_ruv": 293, "john_drap": 293, "peripheral_compart": 293, "power_on_ruv": 293, "sampl": [293, 324], "tdist": [293, 321], "transit_compart": 293, "frem": [293, 304], "linear": [293, 310], "qa": [293, 321], "report": 293, "ruvsearch": [293, 322], "scm": [293, 323], "simev": [293, 324], "summari": [293, 323, 324], "covsearch": [293, 298], "estmethod": [293, 303], "execut": 293, "commun": 294, "conduct": 294, "configur": 295, "avail": 295, "plugin": [295, 315, 317], "nlmixr": 295, "rxode": 295, "environ": [295, 296], "variabl": [295, 304, 311, 313, 315], "contribut": 296, "set": [296, 316], "up": 296, "support": 296, "platform": 296, "instal": [296, 305, 328], "python": [296, 328], "git": 296, "fork": 296, "clone": 296, "repositori": 296, "tox": 296, "graphviz": 296, "us": [296, 315, 328], "build": 296, "document": [296, 302], "unit": [296, 300], "test": 296, "integr": 296, "usabl": 296, "virtual": 296, "standard": [296, 312], "releas": 296, "version": [296, 328], "inform": [296, 313], "contributor": 297, "scientif": 297, "fund": 297, "effect": [298, 304, 321], "wildcard": 298, "algorithm": [298, 303, 306, 308, 314], "crossval": 299, "crossvalid": 299, "retriev": 300, "from": 300, "updat": [300, 303], "type": [300, 325, 326], "scale": 300, "continu": 300, "categori": 300, "drop": 300, "datatyp": 300, "descriptor": 300, "design": 301, "principl": 301, "level": [301, 311], "architectur": 301, "heart": 301, "docstr": 301, "depend": [301, 311], "exhaust": [303, 314], "onli": 303, "evalu": 303, "estim": [303, 304, 311, 312, 313], "method": 303, "solver": 303, "coeffici": 304, "unexplain": 304, "valu": 304, "get": 305, "start": [305, 306], "A": 305, "first": 305, "exampl": [305, 313, 326], "brute": 306, "forc": 306, "number": 306, "iiv": [306, 314], "full": 306, "ad": [306, 311, 313, 314], "compar": [306, 308, 314], "rank": [306, 308, 314], "candid": [306, 308, 314, 323], "welcom": 307, "iov": 308, "licens": 309, "logo": 309, "copyright": 309, "bsd": 309, "claus": 309, "gnu": 309, "lesser": 309, "public": 309, "read": [311, 313, 315], "inspect": 311, "attribut": 311, "name": [311, 315], "descript": [311, 326], "random": [311, 315], "low": 311, "manipul": 311, "object": 311, "creat": [311, 313], "substitut": 311, "symbol": [311, 326], "numer": 311, "modelfit": 312, "final": 312, "rel": 312, "correl": 312, "precis": 312, "indiviud": 312, "predict": [312, 324], "basic": 313, "load": 313, "convert": 313, "transform": 313, "absorpt": 313, "rate": 313, "delai": 313, "elimin": 313, "remov": 313, "popul": 313, "blq": 313, "examin": 313, "modifi": 313, "subject": 313, "observ": 313, "dose": 313, "extract": 313, "group": 313, "after": 313, "concentr": 313, "common": [314, 326], "behaviour": 314, "between": [314, 328], "combin": 314, "exclus": 314, "stepwis": 314, "reduc": 314, "dure": 314, "plot": [316, 324], "theme": 316, "axi": 316, "project": 318, "suggest": 318, "resmod": 319, "psn": 320, "connect": 320, "bia": 321, "fullblock": 321, "pkpd": 325, "drug": 325, "metabolit": 325, "databas": 326, "directori": 326, "metadata": 326, "languag": 326, "mfl": 326, "describ": 326, "interv": 326, "redund": 326, "user": 327, "guid": 327, "r": 328, "troubl": 328, "shoot": 328, "wrong": 328, "when": 328, "conda": 328, "import": 328, "mismatch": 328, "gotcha": 328, "list": 328, "indic": 328}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"bump_model_number": [[51, "bump-model-number"]], "calculate_eta_shrinkage": [[60, "calculate-eta-shrinkage"]], "append_estimation_step_options": [[50, "append-estimation-step-options"]], "convert_model": [[74, "convert-model"]], "calculate_aic": [[52, "calculate-aic"]], "cleanup_model": [[73, "cleanup-model"]], "add_pk_iiv": [[47, "add-pk-iiv"]], "add_individual_parameter": [[40, "add-individual-parameter"]], "add_metabolite": [[43, "add-metabolite"]], "calculate_individual_parameter_statistics": [[61, "calculate-individual-parameter-statistics"]], "calculate_ucp_scale": [[69, "calculate-ucp-scale"]], "calculate_corr_from_cov": [[54, "calculate-corr-from-cov"]], "add_pd_iiv": [[45, "add-pd-iiv"]], "calculate_pk_parameters_statistics": [[64, "calculate-pk-parameters-statistics"]], "calculate_prec_from_corrse": [[65, "calculate-prec-from-corrse"]], "calculate_prec_from_cov": [[66, "calculate-prec-from-cov"]], "create_symbol": [[79, "create-symbol"]], "calculate_se_from_prec": [[68, "calculate-se-from-prec"]], "create_joint_distribution": [[77, "create-joint-distribution"]], "calculate_bic": [[53, "calculate-bic"]], "calculate_cov_from_prec": [[57, "calculate-cov-from-prec"]], "calculate_se_from_cov": [[67, "calculate-se-from-cov"]], "check_parameters_near_bounds": [[72, "check-parameters-near-bounds"]], "calculate_cov_from_corrse": [[56, "calculate-cov-from-corrse"]], "create_rng": [[78, "create-rng"]], "add_time_after_dose": [[49, "add-time-after-dose"]], "add_lag_time": [[42, "add-lag-time"]], "check_high_correlations": [[71, "check-high-correlations"]], "add_peripheral_compartment": [[46, "add-peripheral-compartment"]], "calculate_individual_shrinkage": [[62, "calculate-individual-shrinkage"]], "add_iov": [[41, "add-iov"]], "calculate_eta_gradient_expression": [[59, "calculate-eta-gradient-expression"]], "calculate_epsilon_gradient_expression": [[58, "calculate-epsilon-gradient-expression"]], "create_config_template": [[76, "create-config-template"]], "calculate_corr_from_prec": [[55, "calculate-corr-from-prec"]], "add_parameter_uncertainty_step": [[44, "add-parameter-uncertainty-step"]], "add_population_parameter": [[48, "add-population-parameter"]], "check_dataset": [[70, "check-dataset"]], "calculate_parameters_from_ucp": [[63, "calculate-parameters-from-ucp"]], "create_basic_pk_model": [[75, "create-basic-pk-model"]], "add_allometry": [[33, "add-allometry"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "DatasetWarning": [[12, "datasetwarning"]], "Distribution": [[13, "distribution"], [313, "distribution"]], "Statements": [[28, "statements"], [311, "statements"]], "DataInfo": [[10, "datainfo"], [300, "datainfo"]], "add_iiv": [[38, "add-iiv"]], "Compartment": [[7, "compartment"]], "Parameters": [[24, "parameters"], [311, "parameters"]], "Results": [[26, "results"], [2, "results"], [326, "results"], [298, "results"], [308, "results"]], "add_indirect_effect": [[39, "add-indirect-effect"]], "ColumnInfo": [[6, "columninfo"], [300, "columninfo"]], "add_admid": [[32, "add-admid"]], "add_estimation_step": [[37, "add-estimation-step"]], "EstimationStep": [[14, "estimationstep"]], "add_effect_compartment": [[36, "add-effect-compartment"]], "API Reference": [[3, "api-reference"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "Assignment": [[4, "assignment"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [325, "running"], [322, "running"], [314, "running"], [298, "running"], [308, "running"], [303, "running"], [306, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [325, "arguments"], [322, "arguments"], [314, "arguments"], [298, "arguments"], [308, "arguments"], [303, "arguments"], [306, "arguments"]], "Procedure": [[1, "procedure"], [322, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "to_compartmental_system": [[31, "to-compartmental-system"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "Infusion": [[16, "infusion"]], "Parameter": [[23, "parameter"]], "EstimationSteps": [[15, "estimationsteps"]], "NormalDistribution": [[22, "normaldistribution"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Bolus": [[5, "bolus"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "RandomVariables": [[25, "randomvariables"]], "Model": [[18, "model"]], "Statement": [[27, "statement"]], "add_bioavailability": [[34, "add-bioavailability"]], "DatasetError": [[11, "dataseterror"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "Modelsearch": [[2, "modelsearch"], [314, "modelsearch"]], "Structsearch": [[2, "structsearch"], [325, "structsearch"]], "IIVsearch": [[2, "iivsearch"], [306, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [308, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "ModelError": [[19, "modelerror"]], "VariabilityLevel": [[30, "variabilitylevel"]], "VariabilityHierarchy": [[29, "variabilityhierarchy"]], "scm": [[323, "scm"]], "The scm results": [[323, "the-scm-results"]], "Steps": [[323, "steps"]], "OFV Summary": [[323, "ofv-summary"]], "Candidate Summary": [[323, "candidate-summary"]], "The model types": [[325, "the-model-types"]], "PKPD models": [[325, "pkpd-models"]], "Drug metabolite": [[325, "drug-metabolite"]], "The search space": [[325, "the-search-space"], [314, "the-search-space"]], "PKPD": [[325, "pkpd"]], "The Structsearch results": [[325, "the-structsearch-results"]], "PsN with Pharmpy": [[320, "psn-with-pharmpy"]], "Tools connected to PsN": [[320, "tools-connected-to-psn"]], "Tools": [[326, "tools"]], "Tools in Pharmpy": [[326, "tools-in-pharmpy"]], "Common options": [[326, "common-options"]], "Common features": [[326, "common-features"]], "Tool database": [[326, "tool-database"]], "Running directory": [[326, "running-directory"]], "Metadata": [[326, "metadata"]], "Datasets": [[326, "datasets"]], "Model feature language (MFL)": [[326, "model-feature-language-mfl"]], "Option types": [[326, "option-types"]], "Model features": [[326, "model-features"]], "Symbols": [[326, "symbols"]], "Describe intervals": [[326, "describe-intervals"]], "Redundant descriptions": [[326, "redundant-descriptions"]], "Examples": [[326, "examples"]], "ruvsearch": [[322, "ruvsearch"]], "Models": [[322, "models"]], "The RUVsearch results": [[322, "the-ruvsearch-results"]], "QA": [[321, "qa"]], "The qa results": [[321, "the-qa-results"]], "Overview": [[321, "overview"]], "Structural bias": [[321, "structural-bias"]], "Fullblock": [[321, "fullblock"]], "Boxcox": [[321, "boxcox"]], "Tdist": [[321, "tdist"]], "Residual error": [[321, "residual-error"]], "Covariate effects": [[321, "covariate-effects"], [304, "covariate-effects"]], "Simeval": [[324, "simeval"]], "The simeval results": [[324, "the-simeval-results"]], "Sampled Individual OFVs": [[324, "sampled-individual-ofvs"]], "Individual OFV summary": [[324, "individual-ofv-summary"]], "Individual prediction plot": [[324, "individual-prediction-plot"]], "User guide": [[327, "user-guide"]], "Pharmpy in R": [[328, "pharmpy-in-r"]], "Installing pharmr": [[328, "installing-pharmr"]], "Trouble shooting": [[328, "trouble-shooting"]], "Wrong Python version when using conda": [[328, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[328, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[328, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[328, "using-pharmr"]], "Gotchas": [[328, "gotchas"]], "List indices": [[328, "list-indices"]], "read_results": [[248, "read-results"]], "WorkflowBuilder": [[279, "workflowbuilder"]], "retrieve_models": [[251, "retrieve-models"]], "run_structsearch": [[262, "run-structsearch"]], "summarize_errors": [[264, "summarize-errors"]], "ToolDatabase": [[277, "tooldatabase"]], "load_example_modelfit_results": [[241, "load-example-modelfit-results"]], "get_model_features": [[240, "get-model-features"]], "NullModelDatabase": [[274, "nullmodeldatabase"]], "read_modelfit_results": [[247, "read-modelfit-results"]], "run_bootstrap": [[254, "run-bootstrap"]], "Task": [[276, "task"]], "predict_influential_outliers": [[243, "predict-influential-outliers"]], "run_covsearch": [[255, "run-covsearch"]], "run_tool": [[263, "run-tool"]], "run_allometry": [[252, "run-allometry"]], "resume_tool": [[249, "resume-tool"]], "summarize_modelfit_results": [[267, "summarize-modelfit-results"]], "Log": [[272, "log"]], "run_estmethod": [[256, "run-estmethod"]], "write_results": [[268, "write-results"]], "Workflow": [[278, "workflow"]], "run_amd": [[253, "run-amd"]], "run_iivsearch": [[257, "run-iivsearch"]], "LocalModelDirectoryDatabase": [[271, "localmodeldirectorydatabase"]], "predict_outliers": [[244, "predict-outliers"]], "summarize_individuals_count_table": [[266, "summarize-individuals-count-table"]], "run_iovsearch": [[258, "run-iovsearch"]], "run_modelfit": [[259, "run-modelfit"]], "rank_models": [[246, "rank-models"]], "predict_influential_individuals": [[242, "predict-influential-individuals"]], "LocalDirectoryToolDatabase": [[270, "localdirectorytooldatabase"]], "ModelDatabase": [[273, "modeldatabase"]], "run_modelsearch": [[260, "run-modelsearch"]], "print_fit_summary": [[245, "print-fit-summary"]], "retrieve_final_model": [[250, "retrieve-final-model"]], "run_ruvsearch": [[261, "run-ruvsearch"]], "LocalDirectoryDatabase": [[269, "localdirectorydatabase"]], "summarize_individuals": [[265, "summarize-individuals"]], "NullToolDatabase": [[275, "nulltooldatabase"]], "set_ode_solver": [[205, "set-ode-solver"]], "set_tmdd": [[212, "set-tmdd"]], "update_inits": [[233, "update-inits"]], "simplify_expression": [[219, "simplify-expression"]], "set_peripheral_compartments": [[206, "set-peripheral-compartments"]], "set_proportional_error_model": [[208, "set-proportional-error-model"]], "undrop_columns": [[228, "undrop-columns"]], "transform_etas_tdist": [[225, "transform-etas-tdist"]], "unload_dataset": [[231, "unload-dataset"]], "set_mixed_mm_fo_elimination": [[203, "set-mixed-mm-fo-elimination"]], "set_name": [[204, "set-name"]], "transform_etas_john_draper": [[224, "transform-etas-john-draper"]], "set_lower_bounds": [[201, "set-lower-bounds"]], "set_power_on_ruv": [[207, "set-power-on-ruv"]], "set_reference_values": [[209, "set-reference-values"]], "set_zero_order_input": [[218, "set-zero-order-input"]], "create_results": [[238, "create-results"]], "update_initial_individual_estimates": [[232, "update-initial-individual-estimates"]], "create_report": [[237, "create-report"]], "set_upper_bounds": [[214, "set-upper-bounds"]], "set_zero_order_elimination": [[217, "set-zero-order-elimination"]], "solve_ode_system": [[220, "solve-ode-system"]], "set_weighted_error_model": [[215, "set-weighted-error-model"]], "split_joint_distribution": [[221, "split-joint-distribution"]], "unconstrain_parameters": [[227, "unconstrain-parameters"]], "set_lloq_data": [[200, "set-lloq-data"]], "fit": [[239, "fit"]], "use_thetas_for_error_stdev": [[234, "use-thetas-for-error-stdev"]], "set_zero_order_absorption": [[216, "set-zero-order-absorption"]], "translate_nmtran_time": [[226, "translate-nmtran-time"]], "transform_blq": [[222, "transform-blq"]], "set_transit_compartments": [[213, "set-transit-compartments"]], "set_time_varying_error_model": [[211, "set-time-varying-error-model"]], "write_csv": [[235, "write-csv"]], "unfix_parameters": [[229, "unfix-parameters"]], "transform_etas_boxcox": [[223, "transform-etas-boxcox"]], "write_model": [[236, "write-model"]], "unfix_parameters_to": [[230, "unfix-parameters-to"]], "set_michaelis_menten_elimination": [[202, "set-michaelis-menten-elimination"]], "set_seq_zo_fo_absorption": [[210, "set-seq-zo-fo-absorption"]], "plot_dv_vs_ipred": [[161, "plot-dv-vs-ipred"]], "set_direct_effect": [[189, "set-direct-effect"]], "remove_error_model": [[172, "remove-error-model"]], "remove_lag_time": [[176, "remove-lag-time"]], "set_covariates": [[188, "set-covariates"]], "print_model_code": [[165, "print-model-code"]], "plot_cwres_vs_idv": [[160, "plot-cwres-vs-idv"]], "set_additive_error_model": [[186, "set-additive-error-model"]], "resample_data": [[182, "resample-data"]], "sample_individual_estimates": [[183, "sample-individual-estimates"]], "set_initial_estimates": [[198, "set-initial-estimates"]], "set_dvid": [[191, "set-dvid"]], "set_iiv_on_ruv": [[196, "set-iiv-on-ruv"]], "set_estimation_step": [[192, "set-estimation-step"]], "read_dataset_from_datainfo": [[167, "read-dataset-from-datainfo"]], "set_dtbs_error_model": [[190, "set-dtbs-error-model"]], "remove_bioavailability": [[170, "remove-bioavailability"]], "set_first_order_elimination": [[195, "set-first-order-elimination"]], "remove_estimation_step": [[173, "remove-estimation-step"]], "remove_covariate_effect": [[171, "remove-covariate-effect"]], "set_evaluation_step": [[193, "set-evaluation-step"]], "set_initial_condition": [[197, "set-initial-condition"]], "remove_unused_parameters_and_rvs": [[180, "remove-unused-parameters-and-rvs"]], "plot_iofv_vs_iofv": [[163, "plot-iofv-vs-iofv"]], "remove_parameter_uncertainty_step": [[178, "remove-parameter-uncertainty-step"]], "remove_iov": [[175, "remove-iov"]], "sample_parameters_from_covariance_matrix": [[184, "sample-parameters-from-covariance-matrix"]], "sample_parameters_uniformly": [[185, "sample-parameters-uniformly"]], "set_instantaneous_absorption": [[199, "set-instantaneous-absorption"]], "read_model": [[168, "read-model"]], "print_model_symbols": [[166, "print-model-symbols"]], "read_model_from_string": [[169, "read-model-from-string"]], "plot_individual_predictions": [[162, "plot-individual-predictions"]], "set_first_order_absorption": [[194, "set-first-order-absorption"]], "rename_symbols": [[181, "rename-symbols"]], "remove_loq_data": [[177, "remove-loq-data"]], "remove_peripheral_compartment": [[179, "remove-peripheral-compartment"]], "plot_transformed_eta_distributions": [[164, "plot-transformed-eta-distributions"]], "remove_iiv": [[174, "remove-iiv"]], "set_combined_error_model": [[187, "set-combined-error-model"]], "get_population_prediction_expression": [[127, "get-population-prediction-expression"]], "has_linear_odes_with_real_eigenvalues": [[141, "has-linear-odes-with-real-eigenvalues"]], "has_seq_zo_fo_absorption": [[148, "has-seq-zo-fo-absorption"]], "get_unit_of": [[131, "get-unit-of"]], "get_thetas": [[130, "get-thetas"]], "has_zero_order_absorption": [[150, "has-zero-order-absorption"]], "get_pd_parameters": [[125, "get-pd-parameters"]], "has_first_order_absorption": [[137, "has-first-order-absorption"]], "get_observations": [[122, "get-observations"]], "greekify_model": [[133, "greekify-model"]], "get_zero_order_inputs": [[132, "get-zero-order-inputs"]], "make_declarative": [[157, "make-declarative"]], "get_omegas": [[123, "get-omegas"]], "load_example_model": [[156, "load-example-model"]], "has_random_effect": [[147, "has-random-effect"]], "has_presystemic_metabolite": [[145, "has-presystemic-metabolite"]], "get_parameter_rv": [[124, "get-parameter-rv"]], "has_instantaneous_absorption": [[139, "has-instantaneous-absorption"]], "get_sigmas": [[129, "get-sigmas"]], "has_additive_error_model": [[134, "has-additive-error-model"]], "has_weighted_error_model": [[149, "has-weighted-error-model"]], "get_observation_expression": [[121, "get-observation-expression"]], "get_rv_parameters": [[128, "get-rv-parameters"]], "get_number_of_transit_compartments": [[120, "get-number-of-transit-compartments"]], "has_linear_odes": [[140, "has-linear-odes"]], "has_proportional_error_model": [[146, "has-proportional-error-model"]], "is_linearized": [[152, "is-linearized"]], "get_pk_parameters": [[126, "get-pk-parameters"]], "mu_reference_model": [[158, "mu-reference-model"]], "omit_data": [[159, "omit-data"]], "has_first_order_elimination": [[138, "has-first-order-elimination"]], "has_covariate_effect": [[136, "has-covariate-effect"]], "has_michaelis_menten_elimination": [[142, "has-michaelis-menten-elimination"]], "is_real": [[153, "is-real"]], "has_zero_order_elimination": [[151, "has-zero-order-elimination"]], "has_mixed_mm_fo_elimination": [[143, "has-mixed-mm-fo-elimination"]], "has_odes": [[144, "has-odes"]], "load_dataset": [[155, "load-dataset"]], "has_combined_error_model": [[135, "has-combined-error-model"]], "list_time_varying_covariates": [[154, "list-time-varying-covariates"]], "get_doseid": [[104, "get-doseid"]], "get_bioavailability": [[99, "get-bioavailability"]], "get_model_covariates": [[115, "get-model-covariates"]], "get_mdv": [[113, "get-mdv"]], "get_cmt": [[100, "get-cmt"]], "filter_dataset": [[91, "filter-dataset"]], "evaluate_eta_gradient": [[85, "evaluate-eta-gradient"]], "evaluate_weighted_residuals": [[89, "evaluate-weighted-residuals"]], "get_initial_conditions": [[111, "get-initial-conditions"]], "get_doses": [[105, "get-doses"]], "fix_parameters": [[95, "fix-parameters"]], "get_number_of_individuals": [[116, "get-number-of-individuals"]], "get_dv_symbol": [[106, "get-dv-symbol"]], "evaluate_individual_prediction": [[87, "evaluate-individual-prediction"]], "get_config_path": [[102, "get-config-path"]], "get_individual_prediction_expression": [[110, "get-individual-prediction-expression"]], "expand_additional_doses": [[90, "expand-additional-doses"]], "drop_columns": [[82, "drop-columns"]], "drop_dropped_columns": [[83, "drop-dropped-columns"]], "get_baselines": [[98, "get-baselines"]], "get_individual_parameters": [[109, "get-individual-parameters"]], "evaluate_epsilon_gradient": [[84, "evaluate-epsilon-gradient"]], "fix_parameters_to": [[96, "fix-parameters-to"]], "get_number_of_observations_per_individual": [[118, "get-number-of-observations-per-individual"]], "evaluate_population_prediction": [[88, "evaluate-population-prediction"]], "evaluate_expression": [[86, "evaluate-expression"]], "fix_or_unfix_parameters": [[94, "fix-or-unfix-parameters"]], "deidentify_data": [[80, "deidentify-data"]], "get_model_code": [[114, "get-model-code"]], "get_ids": [[108, "get-ids"]], "get_evid": [[107, "get-evid"]], "get_number_of_observations": [[117, "get-number-of-observations"]], "get_lag_times": [[112, "get-lag-times"]], "get_concentration_parameters_from_data": [[101, "get-concentration-parameters-from-data"]], "get_admid": [[97, "get-admid"]], "display_odes": [[81, "display-odes"]], "find_volume_parameters": [[93, "find-volume-parameters"]], "get_number_of_peripheral_compartments": [[119, "get-number-of-peripheral-compartments"]], "get_covariate_baselines": [[103, "get-covariate-baselines"]], "find_clearance_parameters": [[92, "find-clearance-parameters"]], "Algorithms": [[314, "algorithms"], [303, "algorithms"], [306, "algorithms"]], "Common behaviours between algorithms": [[314, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[314, "feature-combination-exclusions"]], "Exhaustive search": [[314, "exhaustive-search"]], "Exhaustive stepwise search": [[314, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[314, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[314, "adding-iiv-to-the-candidate-models-during-search"]], "Comparing and ranking candidates": [[314, "comparing-and-ranking-candidates"], [308, "comparing-and-ranking-candidates"], [306, "comparing-and-ranking-candidates"]], "The Modelsearch results": [[314, "the-modelsearch-results"]], "Documentation for developers": [[302, "documentation-for-developers"]], "Modeling": [[313, "modeling"]], "Basic functions": [[313, "basic-functions"]], "Reading and writing models": [[313, "reading-and-writing-models"]], "Loading example models": [[313, "loading-example-models"]], "Converting models": [[313, "converting-models"]], "Create basic models": [[313, "create-basic-models"]], "Modeling transformations": [[313, "modeling-transformations"]], "Structural model": [[313, "structural-model"]], "Absorption rate": [[313, "absorption-rate"]], "Absorption delay": [[313, "absorption-delay"]], "Elimination": [[313, "elimination"]], "Parameter variability model": [[313, "parameter-variability-model"]], "Adding and removing parameter variability": [[313, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[313, "adding-and-removing-covariance"]], "Eta transformations": [[313, "eta-transformations"]], "Covariates and allometry": [[313, "covariates-and-allometry"]], "Population parameters": [[313, "population-parameters"]], "Error model": [[313, "error-model"]], "BLQ transformations": [[313, "blq-transformations"]], "Estimation steps": [[313, "estimation-steps"], [311, "estimation-steps"]], "Examining and modifying dataset": [[313, "examining-and-modifying-dataset"]], "Subjects": [[313, "subjects"]], "Observations": [[313, "observations"]], "Dosing": [[313, "dosing"]], "Extract dosing information": [[313, "extract-dosing-information"]], "Dose grouping": [[313, "dose-grouping"]], "Time after dose": [[313, "time-after-dose"]], "Concentration parameters": [[313, "concentration-parameters"]], "Contribute": [[296, "contribute"]], "Set up the development environment": [[296, "set-up-the-development-environment"]], "Supported platforms": [[296, "supported-platforms"]], "Install Python": [[296, "install-python"]], "Install git": [[296, "install-git"]], "Fork and clone the code repository": [[296, "fork-and-clone-the-code-repository"]], "Install tox": [[296, "install-tox"]], "Install graphviz used for building the documentation": [[296, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[296, "using-the-development-environment"]], "Running tox": [[296, "running-tox"]], "Check code formatting": [[296, "check-code-formatting"]], "Run the unit tests": [[296, "run-the-unit-tests"]], "Build and test the documentation": [[296, "build-and-test-the-documentation"]], "Run the integration tests": [[296, "run-the-integration-tests"]], "Build a usable virtual environment": [[296, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[296, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[296, "releasing-pharmpy-and-documentation"]], "Version": [[296, "version"]], "Information for developers": [[296, "information-for-developers"]], "The Pharmpy model": [[311, "the-pharmpy-model"]], "Reading in a model": [[311, "reading-in-a-model"], [315, "reading-in-a-model"]], "Writing a model": [[311, "writing-a-model"], [315, "writing-a-model"]], "Inspecting the model attributes": [[311, "inspecting-the-model-attributes"]], "Name and description": [[311, "name-and-description"]], "Random variables": [[311, "random-variables"]], "Dataset and datainfo": [[311, "dataset-and-datainfo"]], "Dependent variables": [[311, "dependent-variables"]], "Low level manipulations of the model object": [[311, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[311, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[311, "substituting-symbolic-random-variable-distribution-with-numeric"]], "COVsearch": [[298, "covsearch"]], "Effects": [[298, "effects"]], "Wildcards": [[298, "wildcards"]], "Algorithm": [[298, "algorithm"], [308, "algorithm"]], "split_common_options": [[284, "split-common-options"]], "Welcome to Pharmpy": [[307, "welcome-to-pharmpy"]], "Distribution of new IOVs": [[308, "distribution-of-new-iovs"]], "Linearize": [[310, "linearize"]], "The linearize results": [[310, "the-linearize-results"]], "OFVs": [[310, "ofvs"]], "Individual OFVs": [[310, "individual-ofvs"]], "FREM": [[304, "frem"]], "The FREM postprocessing and results": [[304, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[304, "parameter-covariate-coefficients"]], "Individual covariate effects": [[304, "individual-covariate-effects"]], "Unexplained variability": [[304, "unexplained-variability"]], "Parameter estimates": [[304, "parameter-estimates"], [312, "parameter-estimates"]], "OFV": [[304, "ofv"]], "Estimated covariate values": [[304, "estimated-covariate-values"]], "References": [[304, "references"], [290, "references"]], "execute_workflow": [[283, "execute-workflow"]], "Getting started": [[305, "getting-started"]], "Installation": [[305, "installation"]], "A first example": [[305, "a-first-example"]], "default_tool_database": [[282, "default-tool-database"]], "Datasets in Pharmpy": [[300, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[300, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[300, "update-the-dataset-of-a-model"]], "type": [[300, "type"]], "scale": [[300, "scale"]], "continuous": [[300, "continuous"]], "categories": [[300, "categories"]], "unit": [[300, "unit"]], "drop": [[300, "drop"]], "datatype": [[300, "datatype"]], "descriptor": [[300, "descriptor"]], "datainfo file": [[300, "datainfo-file"]], "Changelog": [[291, "changelog"]], "0.102.0 (2023-09-28)": [[291, "id1"]], "New features": [[291, "new-features"], [291, "id3"], [291, "id5"], [291, "id8"], [291, "id12"], [291, "id15"], [291, "id19"], [291, "id25"], [291, "id29"], [291, "id33"], [291, "id36"], [291, "id40"], [291, "id43"], [291, "id46"], [291, "id59"], [291, "id69"], [291, "id76"], [291, "id87"], [291, "id91"], [291, "id98"], [291, "id101"], [291, "id105"], [291, "id111"], [291, "id115"], [291, "id121"], [291, "id126"], [291, "id130"], [291, "id133"], [291, "id141"], [291, "id145"], [291, "id151"], [291, "id160"], [291, "id164"], [291, "id167"], [291, "id171"], [291, "id173"], [291, "id178"], [291, "id181"], [291, "id185"]], "Changes": [[291, "changes"], [291, "id6"], [291, "id9"], [291, "id13"], [291, "id16"], [291, "id18"], [291, "id22"], [291, "id26"], [291, "id30"], [291, "id37"], [291, "id41"], [291, "id44"], [291, "id47"], [291, "id49"], [291, "id51"], [291, "id54"], [291, "id57"], [291, "id60"], [291, "id62"], [291, "id65"], [291, "id70"], [291, "id73"], [291, "id77"], [291, "id80"], [291, "id83"], [291, "id88"], [291, "id92"], [291, "id95"], [291, "id99"], [291, "id102"], [291, "id106"], [291, "id112"], [291, "id116"], [291, "id127"], [291, "id131"], [291, "id136"], [291, "id142"], [291, "id152"], [291, "id157"], [291, "id161"], [291, "id168"], [291, "id174"], [291, "id179"], [291, "id182"], [291, "id186"]], "Bugfixes": [[291, "bugfixes"], [291, "id10"], [291, "id20"], [291, "id23"], [291, "id27"], [291, "id31"], [291, "id34"], [291, "id38"], [291, "id52"], [291, "id55"], [291, "id81"], [291, "id85"], [291, "id89"], [291, "id93"], [291, "id96"], [291, "id103"], [291, "id107"], [291, "id109"], [291, "id113"], [291, "id117"], [291, "id119"], [291, "id122"], [291, "id124"], [291, "id128"], [291, "id134"], [291, "id137"], [291, "id139"], [291, "id143"], [291, "id147"], [291, "id149"], [291, "id153"], [291, "id155"], [291, "id158"], [291, "id162"], [291, "id165"], [291, "id169"], [291, "id176"], [291, "id183"], [291, "id187"]], "0.101.0 (2023-09-01)": [[291, "id2"]], "0.100.0 (2023-08-25)": [[291, "id4"]], "0.99.0 (2023-08-23)": [[291, "id7"]], "0.98.0 (2023-07-21)": [[291, "id11"]], "0.97.0 (2023-06-28)": [[291, "id14"]], "0.96.0 (2023-05-26)": [[291, "id17"]], "0.95.0 (2023-05-22)": [[291, "id21"]], "0.94.0 (2023-04-26)": [[291, "id24"]], "0.93.0 (2023-04-19)": [[291, "id28"]], "0.92.0 (2023-04-05)": [[291, "id32"]], "0.91.0 (2023-03-03)": [[291, "id35"]], "0.90.0 (2023-02-24)": [[291, "id39"]], "0.89.0 (2023-01-26)": [[291, "id42"]], "0.88.0 (2022-12-21)": [[291, "id45"]], "0.87.0 (2022-12-14)": [[291, "id48"]], "0.86.0 (2022-11-30)": [[291, "id50"]], "0.85.0 (2022-11-18)": [[291, "id53"]], "0.84.1 (2022-11-13)": [[291, "id56"]], "Bug fixes": [[291, "bug-fixes"], [291, "id63"], [291, "id67"], [291, "id71"], [291, "id74"], [291, "id78"]], "0.84.0 (2022-11-09)": [[291, "id58"]], "0.83.0 (2022-11-01)": [[291, "id61"]], "0.82.0 (2022-10-24)": [[291, "id64"]], "0.81.1 (2022-10-24)": [[291, "id66"]], "0.81.0 (2022-10-21)": [[291, "id68"]], "0.80.0 (2022-10-19)": [[291, "id72"]], "0.79.0 (2022-10-16)": [[291, "id75"]], "0.78.0 (2022-09-20)": [[291, "id79"]], "0.77.0 (2022-09-08)": [[291, "id82"]], "0.76.1 (2022-09-06)": [[291, "id84"]], "0.76.0 (2022-09-05)": [[291, "id86"]], "0.75.0 (2022-08-10)": [[291, "id90"]], "0.74.0 (2022-07-18)": [[291, "id94"]], "0.73.0 (2022-06-21)": [[291, "id97"]], "0.72.0 (2022-06-08)": [[291, "id100"]], "0.71.0 (2022-05-24)": [[291, "id104"]], "0.70.1 (2022-05-17)": [[291, "id108"]], "0.70.0 (2022-05-13)": [[291, "id110"]], "0.69.0 (2022-04-29)": [[291, "id114"]], "0.68.0 (2022-04-27)": [[291, "id118"]], "0.67.0 (2022-04-25)": [[291, "id120"]], "0.66.0 (2022-04-20)": [[291, "id123"]], "0.65.0 (2022-04-14)": [[291, "id125"]], "0.64.0 (2022-04-12)": [[291, "id129"]], "0.63.0 (2022-04-07)": [[291, "id132"]], "0.62.0 (2022-04-04)": [[291, "id135"]], "New feature": [[291, "new-feature"]], "0.61.1 (2022-03-31)": [[291, "id138"]], "0.61.0 (2022-03-29)": [[291, "id140"]], "0.59.0 (2022-03-25)": [[291, "id144"]], "0.58.4 (2022-03-24)": [[291, "id146"]], "0.58.1 (2022-03-22)": [[291, "id148"]], "0.58.0 (2022-03-22)": [[291, "id150"]], "0.57.0 (2022-03-21)": [[291, "id154"]], "0.56.0 (2022-03-17)": [[291, "id156"]], "0.55.0 (2022-03-16)": [[291, "id159"]], "0.54.0 (2022-03-08)": [[291, "id163"]], "0.53.0 (2022-03-04)": [[291, "id166"]], "0.52.0 (2022-02-25)": [[291, "id170"]], "0.51.0 (2022-02-24)": [[291, "id172"]], "0.50.1 (2022-02-16)": [[291, "id175"]], "0.50.0 (2022-02-16)": [[291, "id177"]], "0.49.0 (2022-02-10)": [[291, "id180"]], "0.48.0 (2022-02-04)": [[291, "id184"]], "0.47.0 (2022-01-28)": [[291, "id188"]], "0.46.0 (2022-01-27)": [[291, "id189"]], "0.45.0 (2022-01-21)": [[291, "id190"]], "0.44.0 (2022-01-20)": [[291, "id191"]], "0.43.0 (2022-01-12)": [[291, "id192"]], "0.42.0 (2022-01-11)": [[291, "id193"]], "0.41.0 (2021-12-21)": [[291, "id194"]], "0.40.0 (2021-12-16)": [[291, "id195"]], "0.39.0 (2021-12-15)": [[291, "id196"]], "0.38.0 (2021-12-08)": [[291, "id197"]], "0.37.1 (2021-11-26)": [[291, "id198"]], "0.37.0 (2021-11-24)": [[291, "id199"]], "0.36.0 (2021-11-11)": [[291, "id200"]], "0.35.0 (2021-11-02)": [[291, "id201"]], "0.34.3 (2021-10-28)": [[291, "id202"]], "0.34.2 (2021-10-26)": [[291, "id203"]], "0.34.1 (2021-10-20)": [[291, "id204"]], "0.34.0 (2021-10-14)": [[291, "id205"]], "0.33.0 (2021-10-11)": [[291, "id206"]], "0.32.0 (2021-09-28)": [[291, "id207"]], "0.31.0 (2021-09-21)": [[291, "id208"]], "0.30.0 (2021-09-06)": [[291, "id209"]], "0.29.0 (2021-08-25)": [[291, "id210"]], "0.28.0 (2021-08-24)": [[291, "id211"]], "0.27.0 (2021-08-09)": [[291, "id212"]], "0.26.1 (2021-08-04)": [[291, "id213"]], "0.26.0 (2021-07-13)": [[291, "id214"]], "0.25.1 (2021-07-08)": [[291, "id215"]], "0.25.0 (2021-06-24)": [[291, "id216"]], "0.24.0 (2021-05-25)": [[291, "id217"]], "0.23.4 (2021-05-03)": [[291, "id218"]], "0.23.3 (2021-04-29)": [[291, "id219"]], "0.23.2 (2021-04-28)": [[291, "id220"]], "0.23.1 (2021-04-28)": [[291, "id221"]], "0.23.0 (2021-04-28)": [[291, "id222"]], "0.22.0 (2021-03-29)": [[291, "id223"]], "0.21.0 (2021-03-22)": [[291, "id224"]], "0.20.1 (2021-03-11)": [[291, "id225"]], "0.20.0 (2021-03-11)": [[291, "id226"]], "0.19.0 (2021-03-02)": [[291, "id227"]], "0.18.0 (2021-03-01)": [[291, "id228"]], "0.17.0 (2021-02-15)": [[291, "id229"]], "0.16.0 (2021-02-08)": [[291, "id230"]], "0.15.0 (2021-02-01)": [[291, "id231"]], "0.14.0 (2021-01-25)": [[291, "id232"]], "0.13.0 (2021-01-18)": [[291, "id233"]], "0.12.0 (2020-12-18)": [[291, "id234"]], "0.11.0 (2020-11-20)": [[291, "id235"]], "0.10.0 (2020-11-16)": [[291, "id236"]], "0.9.0 (2020-10-26)": [[291, "id237"]], "0.8.0 (2020-10-08)": [[291, "id238"]], "0.7.0 (2020-09-28)": [[291, "id239"]], "0.6.0 (2020-09-18)": [[291, "id240"]], "0.5.0 (2020-09-04)": [[291, "id241"]], "0.4.0 (2020-07-24)": [[291, "id242"]], "0.3.0 (2020-06-16)": [[291, "id243"]], "0.2.0 (2020-03-27)": [[291, "id244"]], "0.1.0 (2018-07-22)": [[291, "id245"]], "License": [[309, "license"]], "Logo": [[309, "logo"]], "Copyright": [[309, "copyright"]], "BSD 2-clause License": [[309, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[309, "gnu-lesser-general-public-license"]], "call_workflow": [[280, "call-workflow"]], "Design principles": [[301, "design-principles"]], "Levels of the architecture": [[301, "levels-of-the-architecture"]], "The Heart, The Model Class": [[301, "the-heart-the-model-class"]], "pharmpy.Parameters": [[301, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[301, "pharmpy-randomvariables"]], "pharmpy.Statements": [[301, "pharmpy-statements"]], "The pharmpy.modeling module": [[301, "the-pharmpy-modeling-module"]], "Docstrings": [[301, "docstrings"]], "Dependencies": [[301, "dependencies"]], "Resmod": [[319, "resmod"]], "The resmod results": [[319, "the-resmod-results"]], "Resmod models": [[319, "resmod-models"]], "Citation": [[292, "citation"]], "How to cite Pharmpy and pharmr": [[292, "how-to-cite-pharmpy-and-pharmr"]], "default_model_database": [[281, "default-model-database"]], "Pharmpy Community Code of Conduct": [[294, "pharmpy-community-code-of-conduct"]], "Estmethod": [[303, "estmethod"]], "Exhaustive": [[303, "exhaustive"]], "Exhaustive (with update)": [[303, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[303, "exhaustive-only-evaluation"]], "Estimation methods": [[303, "estimation-methods"]], "Solvers": [[303, "solvers"]], "The Estmethod results": [[303, "the-estmethod-results"]], "Model estimation and results": [[312, "model-estimation-and-results"]], "Fitting a model": [[312, "fitting-a-model"]], "Modelfit results": [[312, "modelfit-results"]], "Final OFV": [[312, "final-ofv"]], "Standard errors of parameter estimates": [[312, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[312, "relative-standard-errors-of-parameter-estimates"]], "Covariance matrix": [[312, "covariance-matrix"], [289, "covariance-matrix"]], "Correlation Matrix": [[312, "correlation-matrix"]], "Precision Matrix": [[312, "precision-matrix"]], "Indiviudal OFV": [[312, "indiviudal-ofv"]], "Predictions": [[312, "predictions"]], "Residuals": [[312, "residuals"]], "Individual estimates": [[312, "individual-estimates"]], "Bootstrap": [[289, "bootstrap"]], "The Bootstrap postprocessing and results": [[289, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[289, "parameter-statistics"]], "OFV statistics": [[289, "ofv-statistics"]], "Included individuals": [[289, "included-individuals"]], "Crossval": [[299, "crossval"]], "The crossval results": [[299, "the-crossval-results"]], "Crossvalidation OFVs": [[299, "crossvalidation-ofvs"]], "Project suggestions": [[318, "project-suggestions"]], "pharmpy.modeling Package": [[286, "module-pharmpy.modeling"]], "Functions": [[286, "functions"], [285, "functions"], [288, "functions"], [287, "functions"]], "pharmpy.model Package": [[285, "module-pharmpy.model"]], "Classes": [[285, "classes"], [288, "classes"]], "Case deletion diagnostics": [[290, "case-deletion-diagnostics"]], "The cdd results": [[290, "the-cdd-results"]], "Case results": [[290, "case-results"]], "Cook score": [[290, "cook-score"]], "Jackknife cookscore": [[290, "jackknife-cookscore"]], "Covariance ratio": [[290, "covariance-ratio"]], "Delta OFV": [[290, "delta-ofv"]], "Skipped individuals": [[290, "skipped-individuals"]], "Case column": [[290, "case-column"]], "Contributors": [[297, "authors"]], "Development": [[297, "development"]], "Scientific input": [[297, "scientific-input"]], "Funding": [[297, "funding"]], "Plugins": [[317, "plugins"]], "Overview of a plugin": [[317, "overview-of-a-plugin"]], "Brute force search for number of IIVs": [[306, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[306, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[306, "full-brute-force-search"]], "Adding IIV to the start model": [[306, "adding-iiv-to-the-start-model"]], "The IIVsearch results": [[306, "the-iivsearch-results"]], "Plots in Pharmpy": [[316, "plots-in-pharmpy"]], "Setting themes": [[316, "setting-themes"]], "Changing axis of plots": [[316, "changing-axis-of-plots"]], "pharmpy.workflows Package": [[288, "module-pharmpy.workflows"]], "Options for the data module": [[288, "id1"]], "The Pharmpy command line interface": [[293, "the-pharmpy-command-line-interface"]], "pharmpy": [[293, "pharmpy"]], "pharmpy data": [[293, "pharmpy-data"]], "pharmpy data append": [[293, "pharmpy-data-append"]], "pharmpy data deidentify": [[293, "pharmpy-data-deidentify"]], "pharmpy data filter": [[293, "pharmpy-data-filter"]], "pharmpy data print": [[293, "pharmpy-data-print"]], "pharmpy data reference": [[293, "pharmpy-data-reference"]], "pharmpy data resample": [[293, "pharmpy-data-resample"]], "pharmpy data write": [[293, "pharmpy-data-write"]], "pharmpy info": [[293, "pharmpy-info"]], "pharmpy model": [[293, "pharmpy-model"]], "pharmpy model absorption_rate": [[293, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[293, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[293, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[293, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[293, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[293, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[293, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[293, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[293, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[293, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[293, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[293, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[293, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[293, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[293, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[293, "pharmpy-model-sample"]], "pharmpy model tdist": [[293, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[293, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[293, "pharmpy-model-update-inits"]], "pharmpy results": [[293, "pharmpy-results"]], "pharmpy results bootstrap": [[293, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[293, "pharmpy-results-cdd"]], "pharmpy results frem": [[293, "pharmpy-results-frem"]], "pharmpy results linearize": [[293, "pharmpy-results-linearize"]], "pharmpy results ofv": [[293, "pharmpy-results-ofv"]], "pharmpy results print": [[293, "pharmpy-results-print"]], "pharmpy results qa": [[293, "pharmpy-results-qa"]], "pharmpy results report": [[293, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[293, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[293, "pharmpy-results-scm"]], "pharmpy results simeval": [[293, "pharmpy-results-simeval"]], "pharmpy results summary": [[293, "pharmpy-results-summary"]], "pharmpy run": [[293, "pharmpy-run"]], "pharmpy run allometry": [[293, "pharmpy-run-allometry"]], "pharmpy run amd": [[293, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[293, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[293, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[293, "pharmpy-run-estmethod"]], "pharmpy run execute": [[293, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[293, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[293, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[293, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[293, "pharmpy-run-ruvsearch"]], "Configuration": [[295, "configuration"]], "The configuration file": [[295, "the-configuration-file"]], "Available configurations": [[295, "available-configurations"]], "pharmpy.plugins.nonmem": [[295, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[295, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[295, "pharmpy-plugins-rxode"]], "Environment variables": [[295, "environment-variables"]], "Using the NONMEM plugin": [[315, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[315, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[315, "new-parameters-and-random-variables"]], "pharmpy.tools Package": [[287, "module-pharmpy.tools"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[23, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[24, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[25, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[26, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[26, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[26, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[26, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[26, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[26, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[27, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[27, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[28, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[28, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[29, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[31, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[32, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_bioavailability"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.omit_data"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_additive_error_model"]], "set_combined_error_model() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[237, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[238, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[239, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[240, "pharmpy.tools.get_model_features"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[241, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[242, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[243, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[244, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[245, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[246, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[247, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[248, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[249, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[250, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[251, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[252, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[253, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[254, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[255, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[256, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[257, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[258, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[259, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[260, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[261, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[262, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[263, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[264, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[265, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[266, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[267, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[268, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[269, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[272, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[272, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[272, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[273, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[274, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[274, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[275, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[275, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[275, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[275, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[275, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[276, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[276, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[276, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[276, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[276, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[276, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[277, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[277, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[277, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[277, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[277, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[277, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[277, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[278, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[278, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[278, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[278, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[278, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[278, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[279, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[279, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[279, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[279, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[280, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[281, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[282, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[283, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[284, "pharmpy.workflows.split_common_options"]], "module": [[285, "module-pharmpy.model"], [286, "module-pharmpy.modeling"], [287, "module-pharmpy.tools"], [288, "module-pharmpy.workflows"]], "pharmpy.model": [[285, "module-pharmpy.model"]], "pharmpy.modeling": [[286, "module-pharmpy.modeling"]], "pharmpy.tools": [[287, "module-pharmpy.tools"]], "pharmpy.workflows": [[288, "module-pharmpy.workflows"]], "--administration": [[293, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[293, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[293, "cmdoption-pharmpy-run-allometry-allometric_variable"], [293, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[293, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[293, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[293, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[293, "cmdoption-pharmpy-run-iivsearch-cutoff"], [293, "cmdoption-pharmpy-run-iovsearch-cutoff"], [293, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[293, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[293, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[293, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[293, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [293, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[293, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[293, "cmdoption-pharmpy-model-add_iov-eta_names"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[293, "cmdoption-pharmpy-model-add_iov-etas"], [293, "cmdoption-pharmpy-model-boxcox-etas"], [293, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [293, "cmdoption-pharmpy-model-john_draper-etas"], [293, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[293, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[293, "cmdoption-pharmpy-data-append-f"], [293, "cmdoption-pharmpy-data-deidentify-f"], [293, "cmdoption-pharmpy-data-filter-f"], [293, "cmdoption-pharmpy-data-reference-f"], [293, "cmdoption-pharmpy-data-write-f"], [293, "cmdoption-pharmpy-model-absorption_rate-f"], [293, "cmdoption-pharmpy-model-add_cov_effect-f"], [293, "cmdoption-pharmpy-model-add_iiv-f"], [293, "cmdoption-pharmpy-model-add_iov-f"], [293, "cmdoption-pharmpy-model-boxcox-f"], [293, "cmdoption-pharmpy-model-create_joint_distribution-f"], [293, "cmdoption-pharmpy-model-elimination_rate-f"], [293, "cmdoption-pharmpy-model-error-f"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [293, "cmdoption-pharmpy-model-john_draper-f"], [293, "cmdoption-pharmpy-model-peripheral_compartments-f"], [293, "cmdoption-pharmpy-model-power_on_ruv-f"], [293, "cmdoption-pharmpy-model-remove_iiv-f"], [293, "cmdoption-pharmpy-model-remove_iov-f"], [293, "cmdoption-pharmpy-model-tdist-f"], [293, "cmdoption-pharmpy-model-transit_compartments-f"], [293, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[293, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[293, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[293, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[293, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[293, "cmdoption-pharmpy-data-append-h"], [293, "cmdoption-pharmpy-data-deidentify-h"], [293, "cmdoption-pharmpy-data-filter-h"], [293, "cmdoption-pharmpy-data-h"], [293, "cmdoption-pharmpy-data-print-h"], [293, "cmdoption-pharmpy-data-reference-h"], [293, "cmdoption-pharmpy-data-resample-h"], [293, "cmdoption-pharmpy-data-write-h"], [293, "cmdoption-pharmpy-h"], [293, "cmdoption-pharmpy-info-h"], [293, "cmdoption-pharmpy-model-absorption_rate-h"], [293, "cmdoption-pharmpy-model-add_cov_effect-h"], [293, "cmdoption-pharmpy-model-add_iiv-h"], [293, "cmdoption-pharmpy-model-add_iov-h"], [293, "cmdoption-pharmpy-model-boxcox-h"], [293, "cmdoption-pharmpy-model-create_joint_distribution-h"], [293, "cmdoption-pharmpy-model-elimination_rate-h"], [293, "cmdoption-pharmpy-model-error-h"], [293, "cmdoption-pharmpy-model-h"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [293, "cmdoption-pharmpy-model-john_draper-h"], [293, "cmdoption-pharmpy-model-peripheral_compartments-h"], [293, "cmdoption-pharmpy-model-power_on_ruv-h"], [293, "cmdoption-pharmpy-model-print-h"], [293, "cmdoption-pharmpy-model-remove_iiv-h"], [293, "cmdoption-pharmpy-model-remove_iov-h"], [293, "cmdoption-pharmpy-model-sample-h"], [293, "cmdoption-pharmpy-model-tdist-h"], [293, "cmdoption-pharmpy-model-transit_compartments-h"], [293, "cmdoption-pharmpy-model-update_inits-h"], [293, "cmdoption-pharmpy-results-bootstrap-h"], [293, "cmdoption-pharmpy-results-cdd-h"], [293, "cmdoption-pharmpy-results-frem-h"], [293, "cmdoption-pharmpy-results-h"], [293, "cmdoption-pharmpy-results-linearize-h"], [293, "cmdoption-pharmpy-results-ofv-h"], [293, "cmdoption-pharmpy-results-print-h"], [293, "cmdoption-pharmpy-results-qa-h"], [293, "cmdoption-pharmpy-results-report-h"], [293, "cmdoption-pharmpy-results-ruvsearch-h"], [293, "cmdoption-pharmpy-results-scm-h"], [293, "cmdoption-pharmpy-results-simeval-h"], [293, "cmdoption-pharmpy-results-summary-h"], [293, "cmdoption-pharmpy-run-allometry-h"], [293, "cmdoption-pharmpy-run-amd-h"], [293, "cmdoption-pharmpy-run-bootstrap-h"], [293, "cmdoption-pharmpy-run-covsearch-h"], [293, "cmdoption-pharmpy-run-estmethod-h"], [293, "cmdoption-pharmpy-run-execute-h"], [293, "cmdoption-pharmpy-run-h"], [293, "cmdoption-pharmpy-run-iivsearch-h"], [293, "cmdoption-pharmpy-run-iovsearch-h"], [293, "cmdoption-pharmpy-run-modelsearch-h"], [293, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[293, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[293, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [293, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[293, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[293, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[293, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[293, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[293, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[293, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[293, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[293, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[293, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[293, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[293, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[293, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[293, "cmdoption-pharmpy-model-add_cov_effect-operation"], [293, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[293, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[293, "cmdoption-pharmpy-data-append-o"], [293, "cmdoption-pharmpy-data-deidentify-o"], [293, "cmdoption-pharmpy-data-filter-o"], [293, "cmdoption-pharmpy-data-reference-o"], [293, "cmdoption-pharmpy-data-write-o"], [293, "cmdoption-pharmpy-model-absorption_rate-o"], [293, "cmdoption-pharmpy-model-add_cov_effect-o"], [293, "cmdoption-pharmpy-model-add_iiv-o"], [293, "cmdoption-pharmpy-model-add_iov-o"], [293, "cmdoption-pharmpy-model-boxcox-o"], [293, "cmdoption-pharmpy-model-create_joint_distribution-o"], [293, "cmdoption-pharmpy-model-elimination_rate-o"], [293, "cmdoption-pharmpy-model-error-o"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [293, "cmdoption-pharmpy-model-john_draper-o"], [293, "cmdoption-pharmpy-model-peripheral_compartments-o"], [293, "cmdoption-pharmpy-model-power_on_ruv-o"], [293, "cmdoption-pharmpy-model-remove_iiv-o"], [293, "cmdoption-pharmpy-model-remove_iov-o"], [293, "cmdoption-pharmpy-model-tdist-o"], [293, "cmdoption-pharmpy-model-transit_compartments-o"], [293, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[293, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[293, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[293, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[293, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[293, "cmdoption-pharmpy-run-allometry-path"], [293, "cmdoption-pharmpy-run-amd-path"], [293, "cmdoption-pharmpy-run-covsearch-path"], [293, "cmdoption-pharmpy-run-estmethod-path"], [293, "cmdoption-pharmpy-run-iivsearch-path"], [293, "cmdoption-pharmpy-run-iovsearch-path"], [293, "cmdoption-pharmpy-run-modelsearch-path"], [293, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[293, "cmdoption-pharmpy-run-iivsearch-rank_type"], [293, "cmdoption-pharmpy-run-iovsearch-rank_type"], [293, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[293, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[293, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[293, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[293, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[293, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[293, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[293, "cmdoption-pharmpy-model-sample-samples"], [293, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[293, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[293, "cmdoption-pharmpy-data-resample-seed"], [293, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[293, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[293, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[293, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[293, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[293, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[293, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[293, "cmdoption-pharmpy-version"]], "-f": [[293, "cmdoption-pharmpy-data-append-f"], [293, "cmdoption-pharmpy-data-deidentify-f"], [293, "cmdoption-pharmpy-data-filter-f"], [293, "cmdoption-pharmpy-data-reference-f"], [293, "cmdoption-pharmpy-data-write-f"], [293, "cmdoption-pharmpy-model-absorption_rate-f"], [293, "cmdoption-pharmpy-model-add_cov_effect-f"], [293, "cmdoption-pharmpy-model-add_iiv-f"], [293, "cmdoption-pharmpy-model-add_iov-f"], [293, "cmdoption-pharmpy-model-boxcox-f"], [293, "cmdoption-pharmpy-model-create_joint_distribution-f"], [293, "cmdoption-pharmpy-model-elimination_rate-f"], [293, "cmdoption-pharmpy-model-error-f"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [293, "cmdoption-pharmpy-model-john_draper-f"], [293, "cmdoption-pharmpy-model-peripheral_compartments-f"], [293, "cmdoption-pharmpy-model-power_on_ruv-f"], [293, "cmdoption-pharmpy-model-remove_iiv-f"], [293, "cmdoption-pharmpy-model-remove_iov-f"], [293, "cmdoption-pharmpy-model-tdist-f"], [293, "cmdoption-pharmpy-model-transit_compartments-f"], [293, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[293, "cmdoption-pharmpy-data-append-h"], [293, "cmdoption-pharmpy-data-deidentify-h"], [293, "cmdoption-pharmpy-data-filter-h"], [293, "cmdoption-pharmpy-data-h"], [293, "cmdoption-pharmpy-data-print-h"], [293, "cmdoption-pharmpy-data-reference-h"], [293, "cmdoption-pharmpy-data-resample-h"], [293, "cmdoption-pharmpy-data-write-h"], [293, "cmdoption-pharmpy-h"], [293, "cmdoption-pharmpy-info-h"], [293, "cmdoption-pharmpy-model-absorption_rate-h"], [293, "cmdoption-pharmpy-model-add_cov_effect-h"], [293, "cmdoption-pharmpy-model-add_iiv-h"], [293, "cmdoption-pharmpy-model-add_iov-h"], [293, "cmdoption-pharmpy-model-boxcox-h"], [293, "cmdoption-pharmpy-model-create_joint_distribution-h"], [293, "cmdoption-pharmpy-model-elimination_rate-h"], [293, "cmdoption-pharmpy-model-error-h"], [293, "cmdoption-pharmpy-model-h"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [293, "cmdoption-pharmpy-model-john_draper-h"], [293, "cmdoption-pharmpy-model-peripheral_compartments-h"], [293, "cmdoption-pharmpy-model-power_on_ruv-h"], [293, "cmdoption-pharmpy-model-print-h"], [293, "cmdoption-pharmpy-model-remove_iiv-h"], [293, "cmdoption-pharmpy-model-remove_iov-h"], [293, "cmdoption-pharmpy-model-sample-h"], [293, "cmdoption-pharmpy-model-tdist-h"], [293, "cmdoption-pharmpy-model-transit_compartments-h"], [293, "cmdoption-pharmpy-model-update_inits-h"], [293, "cmdoption-pharmpy-results-bootstrap-h"], [293, "cmdoption-pharmpy-results-cdd-h"], [293, "cmdoption-pharmpy-results-frem-h"], [293, "cmdoption-pharmpy-results-h"], [293, "cmdoption-pharmpy-results-linearize-h"], [293, "cmdoption-pharmpy-results-ofv-h"], [293, "cmdoption-pharmpy-results-print-h"], [293, "cmdoption-pharmpy-results-qa-h"], [293, "cmdoption-pharmpy-results-report-h"], [293, "cmdoption-pharmpy-results-ruvsearch-h"], [293, "cmdoption-pharmpy-results-scm-h"], [293, "cmdoption-pharmpy-results-simeval-h"], [293, "cmdoption-pharmpy-results-summary-h"], [293, "cmdoption-pharmpy-run-allometry-h"], [293, "cmdoption-pharmpy-run-amd-h"], [293, "cmdoption-pharmpy-run-bootstrap-h"], [293, "cmdoption-pharmpy-run-covsearch-h"], [293, "cmdoption-pharmpy-run-estmethod-h"], [293, "cmdoption-pharmpy-run-execute-h"], [293, "cmdoption-pharmpy-run-h"], [293, "cmdoption-pharmpy-run-iivsearch-h"], [293, "cmdoption-pharmpy-run-iovsearch-h"], [293, "cmdoption-pharmpy-run-modelsearch-h"], [293, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[293, "cmdoption-pharmpy-data-append-o"], [293, "cmdoption-pharmpy-data-deidentify-o"], [293, "cmdoption-pharmpy-data-filter-o"], [293, "cmdoption-pharmpy-data-reference-o"], [293, "cmdoption-pharmpy-data-write-o"], [293, "cmdoption-pharmpy-model-absorption_rate-o"], [293, "cmdoption-pharmpy-model-add_cov_effect-o"], [293, "cmdoption-pharmpy-model-add_iiv-o"], [293, "cmdoption-pharmpy-model-add_iov-o"], [293, "cmdoption-pharmpy-model-boxcox-o"], [293, "cmdoption-pharmpy-model-create_joint_distribution-o"], [293, "cmdoption-pharmpy-model-elimination_rate-o"], [293, "cmdoption-pharmpy-model-error-o"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [293, "cmdoption-pharmpy-model-john_draper-o"], [293, "cmdoption-pharmpy-model-peripheral_compartments-o"], [293, "cmdoption-pharmpy-model-power_on_ruv-o"], [293, "cmdoption-pharmpy-model-remove_iiv-o"], [293, "cmdoption-pharmpy-model-remove_iov-o"], [293, "cmdoption-pharmpy-model-tdist-o"], [293, "cmdoption-pharmpy-model-transit_compartments-o"], [293, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[293, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [293, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [293, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[293, "cmdoption-pharmpy-data-reference-arg-colname"]], "covariate": [[293, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[293, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[293, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[293, "cmdoption-pharmpy-data-append-arg-expression"], [293, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[293, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[293, "cmdoption-pharmpy-data-append-arg-file"], [293, "cmdoption-pharmpy-data-deidentify-arg-file"], [293, "cmdoption-pharmpy-data-filter-arg-file"], [293, "cmdoption-pharmpy-data-print-arg-file"], [293, "cmdoption-pharmpy-data-reference-arg-file"], [293, "cmdoption-pharmpy-data-resample-arg-file"], [293, "cmdoption-pharmpy-data-write-arg-file"], [293, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [293, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [293, "cmdoption-pharmpy-model-add_iiv-arg-file"], [293, "cmdoption-pharmpy-model-add_iov-arg-file"], [293, "cmdoption-pharmpy-model-boxcox-arg-file"], [293, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [293, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [293, "cmdoption-pharmpy-model-error-arg-file"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [293, "cmdoption-pharmpy-model-john_draper-arg-file"], [293, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [293, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [293, "cmdoption-pharmpy-model-print-arg-file"], [293, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [293, "cmdoption-pharmpy-model-remove_iov-arg-file"], [293, "cmdoption-pharmpy-model-sample-arg-file"], [293, "cmdoption-pharmpy-model-tdist-arg-file"], [293, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [293, "cmdoption-pharmpy-model-update_inits-arg-file"], [293, "cmdoption-pharmpy-results-ofv-arg-file"], [293, "cmdoption-pharmpy-results-print-arg-file"], [293, "cmdoption-pharmpy-results-summary-arg-file"], [293, "cmdoption-pharmpy-run-allometry-arg-file"], [293, "cmdoption-pharmpy-run-bootstrap-arg-file"], [293, "cmdoption-pharmpy-run-covsearch-arg-file"], [293, "cmdoption-pharmpy-run-estmethod-arg-file"], [293, "cmdoption-pharmpy-run-execute-arg-file"], [293, "cmdoption-pharmpy-run-iivsearch-arg-file"], [293, "cmdoption-pharmpy-run-iovsearch-arg-file"], [293, "cmdoption-pharmpy-run-modelsearch-arg-file"], [293, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[293, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[293, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[293, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [293, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[293, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[293, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [293, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[293, "cmdoption-pharmpy-h"], [293, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[293, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[293, "cmdoption-pharmpy-data-append-arg-expression"], [293, "cmdoption-pharmpy-data-append-arg-file"], [293, "cmdoption-pharmpy-data-append-f"], [293, "cmdoption-pharmpy-data-append-h"], [293, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[293, "cmdoption-pharmpy-data-deidentify-arg-file"], [293, "cmdoption-pharmpy-data-deidentify-datecols"], [293, "cmdoption-pharmpy-data-deidentify-f"], [293, "cmdoption-pharmpy-data-deidentify-h"], [293, "cmdoption-pharmpy-data-deidentify-idcol"], [293, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[293, "cmdoption-pharmpy-data-filter-arg-expressions"], [293, "cmdoption-pharmpy-data-filter-arg-file"], [293, "cmdoption-pharmpy-data-filter-f"], [293, "cmdoption-pharmpy-data-filter-h"], [293, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[293, "cmdoption-pharmpy-data-print-arg-file"], [293, "cmdoption-pharmpy-data-print-columns"], [293, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[293, "cmdoption-pharmpy-data-reference-arg-colname"], [293, "cmdoption-pharmpy-data-reference-arg-file"], [293, "cmdoption-pharmpy-data-reference-f"], [293, "cmdoption-pharmpy-data-reference-h"], [293, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[293, "cmdoption-pharmpy-data-resample-arg-file"], [293, "cmdoption-pharmpy-data-resample-group"], [293, "cmdoption-pharmpy-data-resample-h"], [293, "cmdoption-pharmpy-data-resample-replace"], [293, "cmdoption-pharmpy-data-resample-resamples"], [293, "cmdoption-pharmpy-data-resample-sample_size"], [293, "cmdoption-pharmpy-data-resample-seed"], [293, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[293, "cmdoption-pharmpy-data-write-arg-file"], [293, "cmdoption-pharmpy-data-write-f"], [293, "cmdoption-pharmpy-data-write-h"], [293, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[293, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[293, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[293, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [293, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [293, "cmdoption-pharmpy-model-absorption_rate-f"], [293, "cmdoption-pharmpy-model-absorption_rate-h"], [293, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[293, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [293, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [293, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [293, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [293, "cmdoption-pharmpy-model-add_cov_effect-f"], [293, "cmdoption-pharmpy-model-add_cov_effect-h"], [293, "cmdoption-pharmpy-model-add_cov_effect-o"], [293, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[293, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [293, "cmdoption-pharmpy-model-add_iiv-arg-file"], [293, "cmdoption-pharmpy-model-add_iiv-arg-param"], [293, "cmdoption-pharmpy-model-add_iiv-eta_name"], [293, "cmdoption-pharmpy-model-add_iiv-f"], [293, "cmdoption-pharmpy-model-add_iiv-h"], [293, "cmdoption-pharmpy-model-add_iiv-o"], [293, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[293, "cmdoption-pharmpy-model-add_iov-arg-file"], [293, "cmdoption-pharmpy-model-add_iov-arg-occ"], [293, "cmdoption-pharmpy-model-add_iov-eta_names"], [293, "cmdoption-pharmpy-model-add_iov-etas"], [293, "cmdoption-pharmpy-model-add_iov-f"], [293, "cmdoption-pharmpy-model-add_iov-h"], [293, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[293, "cmdoption-pharmpy-model-boxcox-arg-file"], [293, "cmdoption-pharmpy-model-boxcox-etas"], [293, "cmdoption-pharmpy-model-boxcox-f"], [293, "cmdoption-pharmpy-model-boxcox-h"], [293, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[293, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [293, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [293, "cmdoption-pharmpy-model-create_joint_distribution-f"], [293, "cmdoption-pharmpy-model-create_joint_distribution-h"], [293, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[293, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [293, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [293, "cmdoption-pharmpy-model-elimination_rate-f"], [293, "cmdoption-pharmpy-model-elimination_rate-h"], [293, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[293, "cmdoption-pharmpy-model-error-arg-error_type"], [293, "cmdoption-pharmpy-model-error-arg-file"], [293, "cmdoption-pharmpy-model-error-f"], [293, "cmdoption-pharmpy-model-error-h"], [293, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[293, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [293, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[293, "cmdoption-pharmpy-model-john_draper-arg-file"], [293, "cmdoption-pharmpy-model-john_draper-etas"], [293, "cmdoption-pharmpy-model-john_draper-f"], [293, "cmdoption-pharmpy-model-john_draper-h"], [293, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[293, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [293, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [293, "cmdoption-pharmpy-model-peripheral_compartments-f"], [293, "cmdoption-pharmpy-model-peripheral_compartments-h"], [293, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[293, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [293, "cmdoption-pharmpy-model-power_on_ruv-eps"], [293, "cmdoption-pharmpy-model-power_on_ruv-f"], [293, "cmdoption-pharmpy-model-power_on_ruv-h"], [293, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[293, "cmdoption-pharmpy-model-print-arg-file"], [293, "cmdoption-pharmpy-model-print-explicit-odes"], [293, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[293, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [293, "cmdoption-pharmpy-model-remove_iiv-f"], [293, "cmdoption-pharmpy-model-remove_iiv-h"], [293, "cmdoption-pharmpy-model-remove_iiv-o"], [293, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[293, "cmdoption-pharmpy-model-remove_iov-arg-file"], [293, "cmdoption-pharmpy-model-remove_iov-f"], [293, "cmdoption-pharmpy-model-remove_iov-h"], [293, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[293, "cmdoption-pharmpy-model-sample-arg-file"], [293, "cmdoption-pharmpy-model-sample-h"], [293, "cmdoption-pharmpy-model-sample-samples"], [293, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[293, "cmdoption-pharmpy-model-tdist-arg-file"], [293, "cmdoption-pharmpy-model-tdist-etas"], [293, "cmdoption-pharmpy-model-tdist-f"], [293, "cmdoption-pharmpy-model-tdist-h"], [293, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[293, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [293, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [293, "cmdoption-pharmpy-model-transit_compartments-f"], [293, "cmdoption-pharmpy-model-transit_compartments-h"], [293, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[293, "cmdoption-pharmpy-model-update_inits-arg-file"], [293, "cmdoption-pharmpy-model-update_inits-f"], [293, "cmdoption-pharmpy-model-update_inits-h"], [293, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[293, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[293, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [293, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[293, "cmdoption-pharmpy-results-cdd-arg-psn"], [293, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[293, "cmdoption-pharmpy-results-frem-arg-psn"], [293, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [293, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [293, "cmdoption-pharmpy-results-frem-h"], [293, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[293, "cmdoption-pharmpy-results-linearize-arg-psn"], [293, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[293, "cmdoption-pharmpy-results-ofv-arg-file"], [293, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[293, "cmdoption-pharmpy-results-print-arg-file"], [293, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[293, "cmdoption-pharmpy-results-qa-arg-psn"], [293, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[293, "cmdoption-pharmpy-results-report-arg-psn"], [293, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[293, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [293, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[293, "cmdoption-pharmpy-results-scm-arg-psn"], [293, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[293, "cmdoption-pharmpy-results-simeval-arg-psn"], [293, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[293, "cmdoption-pharmpy-results-summary-arg-file"], [293, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[293, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[293, "cmdoption-pharmpy-run-allometry-allometric_variable"], [293, "cmdoption-pharmpy-run-allometry-arg-file"], [293, "cmdoption-pharmpy-run-allometry-h"], [293, "cmdoption-pharmpy-run-allometry-initials"], [293, "cmdoption-pharmpy-run-allometry-lower_bounds"], [293, "cmdoption-pharmpy-run-allometry-non_fixed"], [293, "cmdoption-pharmpy-run-allometry-parameters"], [293, "cmdoption-pharmpy-run-allometry-path"], [293, "cmdoption-pharmpy-run-allometry-reference_value"], [293, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[293, "cmdoption-pharmpy-run-amd-administration"], [293, "cmdoption-pharmpy-run-amd-allometric_variable"], [293, "cmdoption-pharmpy-run-amd-arg-input_path"], [293, "cmdoption-pharmpy-run-amd-cl_init"], [293, "cmdoption-pharmpy-run-amd-h"], [293, "cmdoption-pharmpy-run-amd-lloq_limit"], [293, "cmdoption-pharmpy-run-amd-lloq_method"], [293, "cmdoption-pharmpy-run-amd-mat_init"], [293, "cmdoption-pharmpy-run-amd-modeltype"], [293, "cmdoption-pharmpy-run-amd-occasion"], [293, "cmdoption-pharmpy-run-amd-order"], [293, "cmdoption-pharmpy-run-amd-path"], [293, "cmdoption-pharmpy-run-amd-resume"], [293, "cmdoption-pharmpy-run-amd-search_space"], [293, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[293, "cmdoption-pharmpy-run-bootstrap-arg-file"], [293, "cmdoption-pharmpy-run-bootstrap-h"], [293, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[293, "cmdoption-pharmpy-run-covsearch-algorithm"], [293, "cmdoption-pharmpy-run-covsearch-arg-file"], [293, "cmdoption-pharmpy-run-covsearch-effects"], [293, "cmdoption-pharmpy-run-covsearch-h"], [293, "cmdoption-pharmpy-run-covsearch-max_steps"], [293, "cmdoption-pharmpy-run-covsearch-p_backward"], [293, "cmdoption-pharmpy-run-covsearch-p_forward"], [293, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[293, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [293, "cmdoption-pharmpy-run-estmethod-arg-file"], [293, "cmdoption-pharmpy-run-estmethod-h"], [293, "cmdoption-pharmpy-run-estmethod-methods"], [293, "cmdoption-pharmpy-run-estmethod-path"], [293, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[293, "cmdoption-pharmpy-run-execute-arg-file"], [293, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[293, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [293, "cmdoption-pharmpy-run-iivsearch-arg-file"], [293, "cmdoption-pharmpy-run-iivsearch-cutoff"], [293, "cmdoption-pharmpy-run-iivsearch-h"], [293, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [293, "cmdoption-pharmpy-run-iivsearch-path"], [293, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[293, "cmdoption-pharmpy-run-iovsearch-arg-file"], [293, "cmdoption-pharmpy-run-iovsearch-column"], [293, "cmdoption-pharmpy-run-iovsearch-cutoff"], [293, "cmdoption-pharmpy-run-iovsearch-distribution"], [293, "cmdoption-pharmpy-run-iovsearch-h"], [293, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [293, "cmdoption-pharmpy-run-iovsearch-path"], [293, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[293, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [293, "cmdoption-pharmpy-run-modelsearch-arg-file"], [293, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [293, "cmdoption-pharmpy-run-modelsearch-cutoff"], [293, "cmdoption-pharmpy-run-modelsearch-h"], [293, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [293, "cmdoption-pharmpy-run-modelsearch-path"], [293, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[293, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [293, "cmdoption-pharmpy-run-ruvsearch-groups"], [293, "cmdoption-pharmpy-run-ruvsearch-h"], [293, "cmdoption-pharmpy-run-ruvsearch-p_value"], [293, "cmdoption-pharmpy-run-ruvsearch-path"], [293, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[293, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [293, "cmdoption-pharmpy-results-cdd-arg-psn"], [293, "cmdoption-pharmpy-results-frem-arg-psn"], [293, "cmdoption-pharmpy-results-linearize-arg-psn"], [293, "cmdoption-pharmpy-results-qa-arg-psn"], [293, "cmdoption-pharmpy-results-report-arg-psn"], [293, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [293, "cmdoption-pharmpy-results-scm-arg-psn"], [293, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[293, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [293, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})