Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_proportional_error_model", "has_random_effect", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 18, 24, 25, 26, 29, 31, 54, 55, 69, 74, 78, 79, 80, 81, 83, 84, 85, 86, 94, 101, 104, 110, 111, 112, 113, 117, 121, 127, 130, 131, 137, 155, 168, 170, 188, 199, 205, 211, 236, 241, 245, 249, 250, 251, 265, 266, 268, 269, 270, 271, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 296, 297, 298, 300, 301, 302], "section": [0, 270, 273, 284, 296, 300], "i": [0, 1, 2, 3, 6, 8, 18, 24, 25, 26, 27, 29, 31, 33, 35, 36, 37, 39, 40, 42, 43, 47, 49, 56, 57, 66, 68, 69, 70, 73, 74, 76, 78, 80, 81, 83, 84, 85, 92, 94, 97, 100, 101, 105, 109, 110, 111, 112, 123, 124, 125, 128, 129, 133, 138, 139, 143, 144, 157, 158, 160, 164, 165, 166, 168, 169, 172, 173, 174, 175, 176, 178, 179, 182, 183, 187, 188, 189, 190, 192, 195, 196, 197, 200, 202, 203, 204, 211, 213, 214, 219, 221, 223, 229, 230, 234, 235, 236, 237, 243, 245, 249, 250, 251, 255, 264, 265, 266, 268, 269, 270, 271, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 302], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 221, 245, 246, 247, 248, 249, 250, 251, 253, 266, 281, 284, 288, 292, 293, 297, 300], "The": [0, 2, 3, 6, 8, 9, 10, 18, 24, 25, 26, 29, 33, 35, 39, 41, 42, 57, 65, 73, 76, 80, 81, 82, 83, 84, 85, 103, 116, 121, 124, 125, 133, 134, 135, 150, 164, 168, 170, 179, 188, 197, 215, 226, 232, 233, 238, 241, 266, 269, 271, 273, 275, 280, 283, 284, 287, 290, 292, 293, 300, 301, 302], "inform": [0, 1, 2, 6, 8, 121, 266, 268, 273, 276, 278, 281, 282, 283, 284, 288, 289, 293, 297, 298, 300, 301], "intend": [0, 284, 300], "non": [0, 25, 68, 73, 82, 200, 266, 275, 276, 279, 284, 286, 293, 300], "hard": [0, 293], "find": [0, 8, 29, 47, 87, 88, 121, 228, 243, 266, 270, 282, 284, 301, 302], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 271, 273, 275, 278, 280, 281, 283, 284, 286, 287, 288, 289, 297], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 270, 272, 273, 274, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 301], "develop": [0, 230, 266, 284, 292, 293, 300, 302], "remov": [0, 2, 9, 26, 29, 78, 110, 111, 112, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 179, 181, 193, 206, 208, 230, 265, 266, 268, 273, 276, 281, 283, 284, 290, 301], "row": [0, 1, 2, 25, 80, 81, 92, 95, 97, 165, 166, 242, 264, 266, 268, 273, 275, 279, 281, 283, 287, 289, 297, 298], "split": [0, 73, 200, 259, 266, 268, 288, 300], "drop": [0, 2, 6, 18, 78, 79, 207, 266, 289, 293, 298], "column": [0, 1, 2, 6, 8, 10, 18, 25, 31, 39, 45, 57, 76, 78, 79, 80, 81, 82, 86, 94, 95, 97, 101, 144, 145, 149, 164, 165, 171, 173, 190, 201, 205, 207, 219, 220, 221, 230, 235, 241, 242, 264, 266, 268, 273, 275, 279, 281, 283, 286, 287, 288, 289, 297, 298, 300], "error": [0, 2, 11, 19, 20, 24, 26, 29, 50, 51, 52, 53, 57, 60, 61, 62, 63, 64, 119, 124, 125, 133, 135, 148, 155, 168, 170, 187, 188, 190, 194, 201, 212, 223, 240, 243, 248, 264, 266, 273, 278, 281, 283, 286, 289, 290, 297, 298, 300, 301], "handl": [0, 3, 86, 199, 266, 275, 276, 279, 293], "valid": [0, 26, 100, 266, 284, 288], "some": [0, 8, 10, 60, 73, 155, 168, 201, 247, 264, 266, 268, 271, 273, 275, 284, 285, 288, 289, 292, 293, 297, 300], "rule": [0, 66, 284], "These": [0, 271, 276, 279, 284, 285, 288, 292, 293, 300], "were": [0, 26, 29, 240, 264, 265, 266, 275, 278, 279, 284, 289, 300, 302], "test": [0, 2, 126, 139, 232, 233, 235, 237, 238, 266, 268, 272, 273, 278, 280, 281, 283, 287, 289, 293, 297], "7": [0, 1, 2, 35, 50, 52, 53, 58, 62, 63, 81, 92, 97, 112, 114, 221, 264, 265, 273, 275, 279, 281, 283, 284, 285, 287, 289, 294, 296, 297, 298, 299], "4": [0, 1, 2, 6, 50, 52, 53, 58, 62, 63, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 112, 204, 221, 238, 243, 264, 265, 273, 274, 275, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 294, 296, 297, 298, 299], "3": [0, 1, 2, 6, 29, 50, 51, 52, 53, 58, 61, 62, 63, 64, 67, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 99, 102, 112, 114, 148, 161, 165, 166, 167, 192, 201, 202, 203, 204, 219, 220, 221, 242, 264, 265, 273, 274, 275, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 294, 296, 297, 298, 299, 300, 302], "delimet": 0, "between": [0, 8, 9, 26, 73, 201, 241, 255, 264, 265, 266, 268, 278, 279, 283, 284, 290, 293, 296, 297, 301], "comma": [0, 268, 300], "space": [0, 65, 230, 237, 266, 268, 300], "tab": [0, 148, 266, 291], "befor": [0, 2, 29, 166, 167, 210, 266, 268, 285, 289], "after": [0, 6, 29, 110, 111, 112, 190, 228, 240, 243, 247, 265, 266, 268, 274, 279, 284, 285, 286, 289, 293, 294, 296, 298, 299, 302], "ar": [0, 2, 3, 4, 6, 8, 25, 26, 29, 36, 37, 39, 43, 57, 71, 73, 76, 95, 109, 124, 125, 133, 141, 157, 158, 162, 170, 174, 175, 187, 200, 201, 205, 211, 218, 223, 232, 234, 236, 237, 245, 247, 264, 266, 268, 269, 271, 273, 275, 276, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 298, 300, 302], "give": [0, 25, 109, 143, 167, 245, 249, 250, 264, 266, 268, 279, 283, 284, 298], "sic": 0, "begin": [0, 279, 286, 288], "end": [0, 36, 47, 279, 284, 286, 288, 300], "insert": [0, 266], "each": [0, 2, 6, 8, 26, 33, 35, 56, 57, 58, 80, 81, 82, 83, 84, 85, 92, 97, 98, 112, 142, 145, 146, 164, 167, 178, 247, 264, 265, 268, 270, 273, 275, 276, 278, 279, 281, 283, 284, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 302], "can": [0, 1, 2, 6, 10, 18, 25, 26, 29, 49, 57, 65, 74, 82, 121, 164, 199, 228, 233, 236, 247, 250, 251, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 296, 297, 300, 301, 302], "onli": [0, 2, 3, 8, 10, 14, 26, 35, 54, 55, 66, 69, 78, 80, 81, 83, 84, 85, 100, 104, 113, 117, 124, 125, 133, 142, 164, 168, 170, 188, 199, 201, 210, 236, 243, 255, 266, 268, 269, 273, 283, 284, 286, 288, 289, 292, 300], "numer": [0, 6, 14, 30, 80, 81, 83, 84, 264, 266, 275, 286, 293], "e": [0, 6, 18, 26, 69, 75, 110, 111, 112, 143, 158, 172, 237, 264, 266, 271, 275, 278, 279, 281, 283, 284, 286, 288, 289, 290, 293, 297, 300], "other": [0, 7, 9, 18, 26, 29, 41, 70, 146, 236, 259, 264, 266, 269, 271, 276, 281, 284, 293], "charact": [0, 10, 275], "than": [0, 24, 25, 266, 281, 284, 289], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 26, 35, 223, 230, 245, 246, 249, 250, 258, 266, 268, 273, 284, 289, 293, 300], "except": [0, 11, 12, 19, 20, 21, 37, 57, 164, 266, 284], "ii": [0, 6], "datx": [0, 266], "fortran": 0, "short": [0, 271, 284], "form": [0, 23, 26, 164, 266, 284], "exponenti": [0, 35, 37, 43, 178, 268, 273, 279, 288], "notat": 0, "2": [0, 1, 2, 6, 18, 29, 33, 35, 36, 40, 42, 44, 46, 48, 50, 51, 52, 53, 58, 61, 62, 63, 64, 68, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 102, 112, 114, 148, 161, 165, 166, 167, 168, 170, 176, 180, 182, 183, 186, 188, 189, 192, 195, 203, 204, 221, 229, 241, 264, 265, 268, 271, 273, 274, 275, 278, 279, 281, 283, 285, 286, 287, 288, 289, 290, 294, 296, 297, 298, 299, 300], "1": [0, 1, 2, 5, 6, 7, 8, 16, 17, 18, 22, 25, 26, 29, 33, 35, 36, 41, 42, 44, 50, 51, 52, 53, 58, 59, 61, 62, 63, 64, 69, 71, 76, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 99, 100, 102, 112, 114, 120, 123, 141, 142, 143, 144, 148, 152, 161, 164, 165, 166, 167, 169, 175, 176, 177, 178, 182, 183, 186, 187, 189, 190, 192, 195, 196, 199, 201, 202, 203, 204, 211, 221, 229, 230, 231, 232, 237, 241, 264, 265, 268, 270, 271, 273, 274, 275, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 296, 297, 298, 299, 300, 302], "mean": [0, 2, 13, 17, 18, 22, 57, 60, 71, 143, 165, 166, 230, 245, 249, 264, 265, 266, 268, 279, 281, 284, 286, 287, 288, 289, 293, 296, 299, 300], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 24, 25, 26, 29, 31, 57, 59, 60, 65, 76, 77, 82, 87, 88, 103, 109, 115, 116, 118, 119, 120, 121, 144, 145, 150, 164, 165, 166, 168, 170, 180, 181, 188, 190, 193, 227, 236, 238, 240, 243, 245, 249, 250, 255, 264, 265, 267, 268, 271, 272, 273, 275, 276, 281, 283, 284, 285, 286, 288, 289, 292, 293, 297, 298, 300], "d": [0, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 77, 246, 248, 259, 284], "instead": [0, 66, 82, 109, 245, 265, 266, 268, 275, 276, 278, 279, 284, 288, 293], "lone": 0, "an": [0, 4, 6, 8, 10, 15, 16, 18, 25, 26, 29, 32, 33, 38, 39, 46, 65, 98, 101, 124, 125, 126, 128, 129, 132, 133, 135, 139, 141, 143, 154, 164, 168, 179, 203, 215, 218, 219, 220, 221, 240, 241, 243, 246, 248, 266, 268, 270, 271, 273, 275, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 293, 296, 298, 299, 300, 302], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 42, 43, 44, 46, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 97, 98, 99, 105, 114, 115, 119, 120, 122, 123, 141, 142, 143, 148, 152, 153, 156, 161, 165, 166, 167, 170, 172, 174, 175, 178, 179, 180, 181, 187, 188, 190, 193, 200, 201, 202, 203, 206, 209, 211, 218, 220, 221, 229, 230, 232, 238, 242, 243, 264, 265, 268, 271, 273, 275, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 294, 296, 297, 298, 299, 300, 302], "dot": 0, "most": [0, 6, 35, 199, 268, 276, 284, 288, 296], "24": [0, 2, 58, 92, 97, 99, 112, 114, 221, 264, 265, 273, 275, 278, 281, 283, 285, 287, 289, 296, 297, 299], "long": [0, 266, 284, 293], "count": [0, 98, 242, 249, 266, 289], "delimit": 0, "wa": [0, 27, 241, 264, 266, 272, 284, 285, 297, 298], "eaten": 0, "empti": [0, 18, 26, 240, 270, 288], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 26, 27, 29, 40, 47, 66, 73, 78, 89, 90, 91, 105, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 206, 208, 209, 210, 211, 266, 268, 269, 270, 275, 278, 281, 282, 283, 289, 290, 300, 301, 302], "As": [0, 26, 269, 288, 290, 300], "contain": [0, 2, 3, 26, 76, 82, 219, 220, 221, 264, 265, 268, 273, 274, 275, 276, 278, 281, 283, 284, 287, 288, 289, 294, 296, 297, 298, 299, 300], "drope": 0, "input": [0, 7, 8, 9, 10, 26, 29, 35, 37, 39, 63, 64, 74, 79, 122, 126, 134, 148, 152, 166, 178, 197, 230, 241, 252, 266, 268, 273, 275, 278, 281, 283, 286, 288, 289, 290, 293, 297], "ani": [0, 2, 6, 9, 18, 46, 57, 68, 162, 228, 233, 242, 252, 255, 271, 275, 281, 283, 284, 286, 288, 290, 293, 300, 302], "limit": [0, 2, 6, 67, 160, 187, 201, 230, 266, 268, 283, 284, 291], "length": [0, 82, 83, 84, 85, 98, 99, 114, 266, 275], "If": [0, 2, 10, 18, 29, 35, 47, 57, 72, 73, 74, 82, 94, 98, 100, 101, 157, 158, 164, 166, 178, 179, 187, 197, 200, 202, 203, 204, 205, 211, 223, 230, 234, 237, 243, 264, 268, 273, 275, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 300, 302], "ha": [0, 2, 8, 18, 26, 73, 82, 92, 97, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 264, 266, 268, 269, 271, 273, 275, 276, 278, 281, 283, 284, 286, 288, 289, 295, 297, 298, 300, 302], "more": [0, 2, 8, 25, 229, 232, 234, 235, 237, 238, 266, 268, 273, 278, 280, 282, 284, 286, 288, 289, 293, 296, 300, 301], "extra": [0, 266], "consid": [0, 2, 234, 235, 237, 266, 273, 276, 278, 281, 283, 284, 289, 297], "start": [0, 2, 8, 36, 46, 98, 144, 156, 164, 234, 266, 268, 271, 273, 275, 278, 279, 283, 284, 288, 289, 297, 298, 300, 302], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 255, 264, 266, 268, 269, 271, 273, 276, 278, 279, 280, 281, 283, 284, 286, 287, 289, 290, 291, 293, 297, 299, 300, 301, 302], "been": [0, 2, 6, 138, 269, 273, 275, 284, 288, 300, 302], "provid": [0, 26, 166, 187, 268, 269, 272, 273, 275, 281, 283, 284, 288, 289, 302], "default": [0, 1, 2, 6, 7, 18, 24, 26, 31, 33, 35, 36, 37, 43, 47, 49, 56, 73, 74, 78, 100, 103, 105, 109, 116, 123, 124, 125, 133, 134, 157, 158, 160, 164, 165, 166, 168, 170, 174, 175, 178, 179, 187, 188, 190, 200, 202, 203, 204, 213, 214, 217, 223, 229, 234, 235, 237, 243, 245, 249, 250, 258, 263, 266, 268, 270, 273, 281, 283, 286, 288, 289, 290, 291, 297, 302], "where": [0, 2, 33, 42, 228, 264, 265, 266, 269, 270, 273, 275, 278, 279, 283, 284, 288, 289, 290, 293, 300, 302], "rexex": 0, "": [0, 10, 65, 152, 266, 268, 273, 275, 279, 284, 290, 294], "za": 0, "z": [0, 33], "either": [0, 2, 37, 76, 100, 230, 268, 281, 284, 286, 288, 300, 302], "surround": 0, "two": [0, 8, 9, 26, 29, 76, 146, 264, 266, 267, 268, 284, 293, 297, 300], "By": [0, 18, 26, 124, 125, 133, 283, 284, 286], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 26, 29, 47, 65, 144, 154, 165, 201, 215, 234, 235, 236, 237, 249, 264, 265, 266, 268, 273, 278, 281, 283, 284, 286, 287, 288, 289, 290, 291, 293, 297, 298, 300, 302], "interpret": [0, 266, 284], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 25, 26, 27, 29, 33, 39, 49, 57, 65, 73, 74, 76, 80, 81, 82, 83, 84, 85, 109, 123, 143, 144, 162, 164, 165, 166, 167, 168, 170, 176, 178, 185, 187, 188, 194, 201, 205, 210, 212, 213, 217, 219, 220, 221, 223, 229, 230, 232, 233, 234, 235, 236, 237, 238, 245, 246, 247, 249, 250, 251, 253, 258, 264, 265, 266, 268, 270, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 296, 297, 298, 300, 301], "chang": [0, 2, 9, 18, 25, 26, 36, 76, 169, 174, 176, 180, 181, 189, 193, 195, 209, 268, 271, 284, 286, 288, 289, 290, 297, 302], "howev": [0, 281, 284, 288, 290, 300, 302], "one": [0, 2, 6, 8, 9, 10, 14, 22, 24, 25, 26, 35, 69, 78, 82, 90, 124, 125, 133, 149, 164, 166, 173, 178, 194, 205, 207, 208, 212, 217, 236, 240, 242, 245, 249, 250, 253, 266, 268, 269, 271, 275, 276, 278, 279, 283, 284, 286, 288, 289, 290, 293, 300], "legal": [0, 284], "ones": [0, 273, 279], "9": [0, 2, 6, 42, 58, 67, 81, 84, 92, 95, 97, 112, 114, 211, 221, 264, 265, 273, 275, 280, 281, 283, 284, 285, 287, 288, 289, 296, 297, 298, 299, 302], "sinc": [0, 6, 179, 266, 276, 279, 281, 288, 289, 290, 293, 302], "number": [0, 2, 6, 8, 14, 22, 24, 39, 47, 57, 60, 68, 74, 75, 76, 110, 111, 112, 114, 144, 164, 165, 166, 167, 168, 178, 186, 192, 231, 232, 236, 238, 241, 242, 264, 266, 268, 273, 275, 284, 296, 297, 298, 300, 302], "valu": [0, 1, 6, 10, 18, 24, 25, 26, 33, 37, 43, 44, 57, 59, 60, 67, 68, 80, 81, 82, 83, 84, 85, 89, 91, 92, 95, 97, 115, 119, 120, 139, 164, 167, 190, 209, 223, 229, 232, 234, 235, 237, 238, 243, 263, 264, 266, 268, 271, 273, 275, 278, 285, 286, 288, 297, 298, 299], "met": [0, 284], "doubl": 0, "big": 0, "warn": [0, 2, 12, 240, 248, 266, 273, 278, 281, 283, 289, 302], "larger": [0, 284], "pad": 0, "filter": [0, 110, 111, 112, 266, 275], "so": [0, 24, 164, 247, 269, 271, 276, 284, 290, 296, 302], "characterscannot": 0, "neither": [0, 284], "perform": [0, 14, 69, 76, 268, 273, 284, 286, 289, 290], "order": [0, 8, 9, 26, 29, 122, 127, 131, 136, 137, 164, 176, 177, 183, 189, 195, 196, 197, 230, 266, 268, 275, 284, 286, 289, 293, 300], "given": [0, 2, 26, 36, 71, 75, 80, 81, 83, 84, 85, 90, 91, 116, 118, 126, 134, 139, 150, 157, 158, 165, 166, 167, 190, 198, 201, 208, 209, 216, 223, 245, 247, 249, 250, 266, 268, 271, 273, 275, 278, 279, 281, 283, 284, 289, 290, 296, 297], "critic": [0, 269], "case": [0, 2, 73, 86, 124, 125, 133, 164, 243, 266, 273, 280, 281, 283, 284, 288, 289, 295, 301], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 26, 29, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 122, 140, 242, 266, 275, 279, 283, 284, 287, 293, 301, 302], "need": [0, 2, 18, 37, 69, 86, 121, 266, 268, 271, 272, 276, 279, 280, 284, 286, 288, 292, 293, 302], "becaus": [0, 8, 266, 284, 288], "later": [0, 280, 284], "comparison": [0, 289, 293], "It": [0, 18, 245, 269, 270, 271, 275, 276, 280, 281, 282, 284, 286, 287, 288, 291, 296, 300, 302], "possibl": [0, 2, 6, 26, 127, 130, 131, 137, 199, 234, 237, 266, 270, 271, 275, 281, 284, 287, 288, 289, 290, 291, 293, 296, 300, 302], "done": [0, 1, 69, 70, 76, 80, 81, 83, 84, 85, 164, 269, 286, 288, 289, 291, 297], "eq": [0, 8, 32, 288], "ne": 0, "text": [0, 18, 35, 293], "otherwis": [0, 6, 29, 33, 35, 37, 40, 69, 73, 94, 101, 123, 124, 125, 133, 135, 138, 141, 142, 143, 164, 176, 187, 188, 189, 190, 192, 195, 201, 269, 275, 284, 286, 293], "appropri": [0, 269, 284], "letter": [0, 123], "alphanum": 0, "underscor": 0, "real": [0, 129, 139, 275, 276], "special": [0, 6, 205, 275, 276, 284], "digit": [0, 68, 266], "enclos": 0, "ok": [0, 276], "w": [0, 29, 69, 123, 141, 148, 149, 155, 168, 178, 188, 190, 194, 201, 212, 273, 284, 286, 288], "o": [0, 265, 267, 268, 272, 297], "With": [0, 300], "eqn": 0, "ge": 0, "etc": [0, 3, 266, 288, 290, 298, 300], "maximum": [0, 14, 35, 68, 232, 268, 273], "have": [0, 6, 8, 18, 26, 29, 35, 37, 76, 136, 205, 235, 242, 247, 249, 266, 268, 270, 271, 273, 275, 276, 278, 280, 281, 283, 284, 286, 288, 289, 290, 291, 293, 300, 302], "12": [0, 1, 2, 58, 92, 95, 97, 98, 99, 112, 221, 264, 265, 273, 275, 278, 279, 281, 283, 284, 285, 287, 289, 294, 296, 297, 298, 299], "must": [0, 24, 39, 73, 164, 178, 245, 265, 268, 284, 286, 288], "decreas": [0, 276], "within": [0, 164, 269, 284, 300], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 26, 29, 187, 264, 269, 271, 273, 276, 284, 290, 302], "affect": [0, 109, 266, 284, 290], "even": [0, 24, 75, 79, 92, 97, 270, 284, 290], "still": [0, 284, 290, 302], "cannot": [0, 8, 57, 73, 244, 266, 275, 284, 288, 300], "both": [0, 1, 2, 18, 39, 172, 242, 266, 269, 273, 275, 278, 281, 283, 284, 289, 297, 300], "reenter": 0, "think": 0, "risk": [0, 284], "being": [0, 6, 26, 41, 57, 167, 168, 170, 188, 265, 266, 270, 278, 279, 284, 290, 293, 298], "truncat": 0, "encod": [0, 194, 212, 266, 275, 291], "here": [0, 2, 109, 275, 276, 277, 281, 288, 289, 293, 300, 301], "possibli": [0, 293], "partial": [0, 268, 272, 282, 293], "list": [0, 2, 6, 8, 10, 13, 14, 17, 25, 26, 29, 32, 33, 37, 39, 73, 76, 78, 79, 87, 88, 90, 91, 102, 103, 109, 116, 118, 140, 145, 157, 158, 164, 165, 171, 178, 187, 200, 202, 203, 204, 206, 207, 208, 209, 217, 223, 228, 229, 230, 233, 235, 236, 238, 240, 241, 242, 243, 254, 264, 265, 266, 268, 269, 271, 273, 275, 278, 283, 284, 286, 288, 296, 297, 298, 300], "decid": [0, 2, 134, 281, 283, 284, 289, 297], "whether": [0, 24, 33, 35, 37, 73, 126, 134, 164, 178, 219, 221, 230, 243, 246, 258, 266, 268, 281, 284, 288, 289, 300], "put": [0, 144, 164, 266, 276, 279], "up": [0, 269, 273, 302], "written": [0, 266, 284, 286, 290, 300], "scientif": [0, 276], "14": [0, 2, 58, 81, 92, 97, 112, 221, 264, 265, 273, 275, 281, 283, 284, 285, 287, 296, 298, 299], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 98, 179, 264, 288], "describ": [0, 2, 26, 29, 57, 127, 130, 131, 136, 137, 264, 273, 275, 281, 283, 286], "output": [0, 8, 18, 242, 266, 268, 271, 284, 286, 300], "alwai": [0, 166, 266, 275, 289], "synonym": [0, 266], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 24, 25, 26, 30, 31, 32, 35, 37, 38, 39, 44, 47, 57, 68, 70, 73, 75, 76, 78, 83, 84, 85, 90, 93, 98, 99, 103, 106, 109, 112, 114, 116, 118, 123, 124, 125, 126, 133, 140, 141, 144, 146, 154, 157, 158, 163, 164, 168, 170, 171, 173, 178, 179, 184, 187, 188, 197, 200, 202, 203, 204, 207, 208, 218, 223, 228, 229, 230, 235, 239, 240, 243, 245, 246, 247, 249, 250, 252, 253, 254, 255, 263, 265, 266, 268, 270, 273, 275, 281, 283, 284, 287, 288, 289, 292, 297, 298, 300, 301], "avail": [0, 1, 2, 6, 33, 40, 57, 121, 141, 176, 189, 192, 195, 201, 218, 223, 230, 264, 268, 270, 273, 278, 279, 281, 283, 284, 286, 287, 288, 289, 290, 293, 297, 299, 300, 302], "carri": [0, 284], "over": [0, 114, 144, 164, 190, 219, 220, 221, 264, 265, 266, 279, 283, 300], "onc": [0, 142, 273, 290], "covari": [0, 6, 10, 17, 26, 34, 35, 50, 51, 52, 53, 57, 58, 60, 61, 62, 63, 64, 73, 97, 109, 126, 140, 148, 153, 154, 165, 166, 167, 171, 201, 232, 266, 268, 273, 275, 276, 283, 286, 293, 298, 300, 301], "final": [0, 2, 34, 153, 227, 266, 273, 278, 279, 281, 283, 284, 289, 290, 297, 298], "estim": [0, 1, 2, 14, 15, 18, 24, 25, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 56, 57, 58, 60, 67, 68, 71, 73, 82, 89, 90, 91, 146, 147, 148, 152, 153, 156, 161, 165, 166, 167, 168, 170, 174, 175, 176, 180, 182, 183, 187, 188, 189, 192, 194, 195, 196, 202, 203, 204, 208, 209, 210, 211, 212, 217, 218, 229, 230, 233, 243, 264, 265, 266, 268, 273, 274, 276, 278, 281, 282, 283, 285, 286, 289, 292, 293, 296, 297, 300, 301], "oppos": 0, "ext": [0, 266, 300], "per": [0, 6, 14, 25, 69, 110, 111, 112, 114, 165, 166, 190, 242], "est": [0, 34, 36, 46, 153, 156], "first": [0, 2, 18, 26, 35, 40, 75, 92, 97, 100, 124, 125, 127, 131, 133, 146, 168, 170, 174, 176, 177, 183, 188, 189, 192, 195, 266, 268, 273, 279, 281, 283, 284, 290, 293, 300, 302], "call": [0, 18, 242, 255, 266, 270, 271, 284, 290, 302], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 265, 266, 268, 273, 278, 281, 283, 289, 293, 294, 296, 297, 298, 300, 301], "theta": [0, 1, 29, 33, 35, 115, 119, 120, 148, 149, 152, 187, 194, 212, 266, 281, 286, 289, 290, 293, 297], "sigma": [0, 1, 115, 119, 120, 148, 149, 152, 168, 170, 188, 264, 279, 281, 286, 288, 289, 290], "omega": [0, 1, 22, 26, 58, 115, 119, 120, 148, 149, 152, 266, 268, 279, 281, 286, 288, 289, 290, 296, 297], "fix": [0, 1, 2, 24, 25, 33, 44, 49, 73, 89, 90, 91, 115, 119, 120, 172, 180, 181, 193, 200, 206, 208, 209, 229, 268, 281, 284, 286, 293, 300], "offdiagon": 0, "could": [0, 18, 266, 275, 284, 288, 292, 293], "part": [0, 18, 26, 75, 264, 266, 268, 271, 272, 284, 286, 290, 293, 300], "NO": [0, 284], "probabl": 0, "same": [0, 2, 8, 10, 18, 26, 29, 39, 47, 68, 69, 89, 90, 91, 98, 136, 178, 180, 208, 209, 213, 230, 235, 245, 247, 249, 265, 266, 268, 269, 273, 275, 278, 279, 283, 284, 286, 288, 289, 300, 302], "type": [0, 2, 6, 8, 10, 18, 28, 29, 35, 49, 71, 116, 145, 150, 191, 223, 230, 234, 235, 237, 263, 266, 268, 271, 273, 279, 280, 281, 283, 284, 286, 288, 289, 293], "now": [0, 266, 271, 288, 290], "investig": 0, "follow": [0, 2, 35, 143, 200, 264, 266, 268, 269, 271, 273, 275, 276, 278, 280, 281, 283, 284, 286, 288, 289, 290, 292, 300, 302], "like": [0, 26, 284, 288, 290, 293, 300], "One": [0, 26, 144, 145, 252, 293, 302], "last": [0, 29, 175, 243], "left": [0, 4, 57, 286, 288, 292], "justifi": 0, "size": [0, 6, 13, 164, 266, 269, 288, 293], "13": [0, 1, 2, 58, 92, 95, 97, 98, 112, 221, 264, 265, 273, 275, 278, 281, 283, 284, 285, 287, 289, 294, 296, 298, 299], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 253, 263, 264, 265, 266, 267, 269, 270, 271, 273, 278, 279, 280, 282, 283, 284, 285, 292, 293, 296, 298, 299, 301, 302], "n": [0, 6, 17, 22, 26, 42, 73, 76, 161, 166, 167, 186, 192, 200, 203, 236, 264, 265, 266, 268, 279, 281, 286, 288], "flatten": [0, 266], "triangular": 0, "correl": [0, 50, 51, 52, 53, 61, 62, 63, 64, 67, 73, 211, 266, 296], "abov": [0, 33, 35, 37, 67, 264, 265, 273, 279, 284, 302], "off": 0, "diagon": [0, 148, 266, 281, 286, 287, 289], "obj": 0, "right": [0, 4, 8, 284, 286, 288, 302], "also": [0, 2, 26, 79, 164, 266, 270, 271, 273, 275, 276, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 297, 300, 302], "22": [0, 2, 58, 80, 81, 83, 84, 92, 97, 112, 114, 221, 264, 265, 273, 275, 279, 283, 285, 287, 299], "integ": [0, 6, 123, 266, 268, 300], "5": [0, 1, 2, 29, 33, 50, 52, 53, 57, 58, 62, 63, 69, 81, 82, 91, 92, 95, 97, 99, 112, 114, 123, 141, 142, 143, 148, 201, 204, 209, 221, 241, 242, 264, 265, 273, 275, 279, 281, 283, 284, 285, 286, 287, 288, 289, 294, 296, 298, 299], "expon": [0, 1, 33, 229, 268], "regular": [0, 10, 282], "take": [0, 2, 24, 26, 74, 266, 269, 275, 278, 281, 283, 284, 288, 289, 293], "19": [0, 2, 58, 81, 92, 97, 112, 221, 264, 265, 275, 281, 285, 287, 288, 296, 298, 299], "posit": [0, 26, 166, 167, 266, 268, 269, 276], "neg": [0, 300], "For": [0, 2, 8, 35, 37, 110, 111, 112, 143, 205, 229, 232, 234, 235, 237, 238, 264, 265, 268, 270, 271, 273, 278, 279, 280, 284, 286, 288, 289, 290, 293, 300, 302], "20": [0, 2, 58, 84, 92, 97, 112, 221, 264, 265, 273, 275, 284, 285, 287, 294, 296, 297, 298, 299], "In": [0, 73, 86, 269, 271, 273, 281, 283, 284, 286, 288, 293, 300, 302], "observ": [0, 6, 18, 40, 98, 110, 111, 112, 113, 114, 176, 189, 192, 195, 196, 241, 242, 264, 266, 279, 293, 296, 299, 301], "byte": 0, "evid": [0, 101, 266], "toward": [0, 98, 266], "token": [0, 300], "whitespac": 0, "parenthes": [0, 300], "multipl": [0, 4, 26, 29, 124, 125, 133, 240, 266, 273, 276, 286, 297, 298, 300, 301], "open": [0, 269, 271, 282, 284, 291], "keyword": [0, 268], "kept": [0, 86, 266, 268, 281], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 24, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 266, 268, 270, 271, 273, 275, 276, 278, 281, 283, 284, 286, 288, 289, 290, 291, 292, 293, 297, 302], "csv": [0, 2, 27, 152, 213, 244, 266, 268, 273, 275, 278, 281, 283, 288, 289, 297, 300], "wgt": [0, 2, 4, 6, 10, 29, 33, 35, 69, 78, 79, 92, 97, 109, 121, 123, 141, 142, 143, 148, 149, 154, 202, 203, 204, 207, 229, 275, 279, 286, 288, 290, 293, 296, 300], "23": [0, 2, 57, 58, 60, 74, 81, 92, 97, 112, 165, 166, 167, 221, 264, 265, 273, 275, 281, 283, 285, 287, 289, 298, 299], "titl": 0, "crash": [0, 266], "nmtran": [0, 6], "There": [0, 247, 278], "72": 0, "includ": [0, 2, 3, 17, 22, 26, 43, 145, 243, 265, 266, 269, 273, 281, 282, 283, 284, 288, 289, 296, 298, 300], "come": [0, 271, 284], "filenam": [0, 18, 245, 249, 250, 286], "repres": [0, 4, 6, 24, 25, 26, 268, 273, 275, 276, 279, 284, 286, 288], "rel": [0, 14, 266, 279], "path": [0, 1, 2, 10, 18, 27, 47, 71, 96, 150, 151, 213, 214, 215, 216, 224, 225, 226, 228, 230, 244, 245, 246, 247, 249, 250, 251, 253, 258, 266, 268, 270, 273, 275, 278, 281, 283, 286, 288, 289, 297, 298, 300, 302], "work": [0, 266, 269, 271, 278, 284, 286, 293], "directori": [0, 216, 228, 245, 246, 247, 266, 268, 270, 271, 286, 288, 298], "when": [0, 14, 35, 69, 266, 269, 271, 275, 283, 284, 286, 288, 290, 296, 298, 300, 302], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 241, 242, 273, 275, 278, 281, 283, 284, 289, 297], "simpli": [0, 24, 271, 278, 290], "seen": [0, 1, 2, 273, 275, 278, 281, 283, 289, 297], "54": [0, 58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 289, 294, 296, 299], "doe": [0, 2, 47, 75, 96, 160, 201, 245, 246, 247, 250, 251, 266, 276, 278, 281, 283, 284, 289, 290, 296], "pk": [0, 2, 6, 38, 43, 71, 116, 148, 191, 201, 266, 268, 273, 281, 286, 289, 290, 300, 301], "pred": [0, 84, 148, 152, 266, 286, 287, 288, 296, 299], "simpl": [0, 1, 148, 199, 243, 286, 288, 290], "merg": [0, 266, 284], "placement": [0, 270], "place": [0, 2, 270, 284, 288], "seem": 0, "restrict": [0, 247, 284], "automat": [0, 14, 33, 230, 266, 271, 273, 280, 284, 297, 300], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 69, 71, 72, 74, 75, 94, 95, 101, 157, 178, 187, 215, 216, 228, 241, 242, 245, 246, 247, 248, 249, 255, 258, 264, 265, 266, 268, 270, 271, 274, 275, 278, 279, 281, 285, 286, 289, 293, 294, 296, 297, 298, 299, 300, 301], "continu": [0, 2, 6, 18, 35, 266, 269, 271, 273, 279, 284, 293, 300], "factor": [0, 293], "compil": [0, 284], "11138": 0, "445": [0, 281], "though": [0, 284], "outsid": [0, 266, 269, 284], "standard": [0, 50, 51, 52, 53, 56, 57, 60, 61, 62, 63, 64, 212, 215, 264, 266, 276, 279, 284, 290, 293, 296, 297, 299], "gfortran": 0, "8": [0, 2, 6, 50, 51, 52, 53, 58, 61, 62, 63, 64, 92, 97, 99, 112, 114, 221, 264, 265, 273, 275, 281, 283, 284, 285, 287, 288, 294, 296, 297, 298, 299, 302], "hh": 0, "j": [0, 201, 203, 265, 279], "nep": 0, "h": [0, 268], "second": [0, 146, 268, 290], "f": [0, 29, 69, 123, 141, 148, 149, 155, 168, 170, 178, 187, 188, 190, 201, 212, 264, 266, 268, 272, 284, 286, 288, 290], "respect": [0, 2, 266, 269, 273, 278, 279, 284, 288, 289, 290], "ep": [0, 29, 148, 266, 268, 286, 288, 290], "implicit": [0, 266], "kind": [0, 6, 8, 116, 284], "dpsize": 0, "main": [0, 268, 293, 302], "function": [0, 3, 10, 14, 26, 33, 35, 54, 55, 74, 79, 80, 81, 83, 84, 85, 89, 90, 91, 104, 113, 117, 127, 130, 131, 137, 168, 170, 180, 188, 199, 205, 208, 209, 211, 216, 223, 234, 237, 252, 264, 266, 268, 270, 271, 276, 281, 283, 284, 286, 288, 289, 290, 292, 293, 296, 297, 298, 300, 302], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 26, 30, 31, 39, 57, 75, 82, 103, 115, 118, 119, 121, 124, 125, 133, 134, 149, 167, 168, 170, 188, 229, 230, 266, 268, 273, 275, 276, 281, 287, 288, 293, 296, 301, 302], "doesn": [0, 29, 249, 266, 281], "t": [0, 6, 8, 29, 33, 77, 105, 182, 183, 196, 204, 243, 249, 252, 254, 265, 266, 268, 279, 281, 294, 296], "declar": [0, 2, 69, 142, 273, 300], "assign": [0, 6, 29, 69, 266, 268], "stop": 0, "entri": [0, 248], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 24, 25, 26, 29, 54, 55, 69, 75, 100, 104, 109, 113, 117, 121, 124, 125, 133, 142, 149, 163, 168, 170, 187, 188, 230, 266, 273, 276, 286, 288, 293], "separ": [0, 10, 73, 86, 143, 164, 200, 247, 266, 268, 271, 273, 275, 276, 279, 284, 288, 293, 300], "thnn": 0, "nn": [0, 279], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 24, 26, 266, 284, 288], "ad": [0, 9, 18, 35, 37, 42, 86, 234, 235, 237, 266, 268, 273, 283, 284, 290, 297, 298, 301], "x": [0, 1, 2, 25, 33, 69, 80, 81, 95, 165, 264, 273, 275, 279, 281, 283, 287, 288, 289, 291, 297, 298], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 26, 27, 29, 103, 109, 150, 151, 152, 266, 275, 289], "tool": [1, 2, 3, 14, 18, 46, 49, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 80, 81, 82, 83, 84, 85, 155, 165, 166, 167, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 251, 253, 258, 263, 264, 266, 267, 268, 271, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 292, 293, 297, 301, 302], "add": [1, 9, 14, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 69, 86, 105, 187, 188, 266, 268, 273, 275, 281, 284, 289, 290, 291, 300], "allometr": [1, 2, 33, 229, 266, 268, 300], "scale": [1, 2, 6, 18, 33, 56, 59, 65, 229, 266, 268, 279, 288, 291, 300], "pharmr": [1, 2, 3, 266, 271, 273, 276, 278, 280, 281, 282, 283, 289, 297, 301], "command": [1, 266, 271, 273, 278, 280, 281, 282, 283, 284, 288, 289, 297, 301], "line": [1, 69, 266, 273, 278, 280, 281, 282, 283, 284, 288, 289, 297, 301], "To": [1, 2, 268, 271, 273, 278, 280, 281, 283, 284, 288, 289, 291, 297, 300, 302], "initi": [1, 2, 15, 18, 24, 25, 33, 37, 39, 40, 42, 43, 44, 71, 73, 74, 82, 89, 90, 91, 105, 161, 168, 170, 176, 178, 179, 180, 182, 183, 187, 188, 189, 192, 195, 196, 202, 203, 204, 208, 209, 210, 211, 229, 230, 254, 266, 268, 273, 278, 279, 281, 283, 284, 286, 289, 297, 301], "python": [1, 2, 265, 266, 268, 273, 275, 276, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 297, 300, 301], "r": [1, 2, 27, 265, 266, 273, 275, 276, 278, 280, 281, 282, 283, 286, 287, 288, 289, 290, 297, 300, 301], "read_model": [1, 152, 266, 273, 275, 278, 281, 283, 286, 288, 289, 297, 302], "read_modelfit_result": [1, 266, 273, 278, 281, 283, 286, 287, 288, 289, 297], "run_allometri": [1, 266], "start_model": [1, 241, 273, 278, 281, 283, 289, 297, 300], "start_model_result": [1, 273, 278, 281, 283, 289, 297, 300], "re": [1, 2, 216, 225, 226, 227, 231, 232, 239, 246, 251, 253, 265, 273, 278, 281, 283, 286, 287, 288, 289, 297, 299, 300], "code": [1, 18, 20, 69, 108, 109, 121, 127, 130, 131, 137, 148, 152, 187, 188, 214, 266, 273, 278, 281, 282, 283, 284, 289, 290, 292, 293, 297, 301, 302], "redefin": [1, 273, 278, 281, 283, 289, 297], "accordingli": [1, 273, 278, 281, 283, 289, 290, 297], "descript": [1, 2, 6, 18, 30, 241, 242, 243, 263, 264, 266, 270, 273, 275, 278, 281, 283, 286, 289, 293, 297, 298], "modelfitresult": [1, 2, 21, 217, 218, 219, 220, 221, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 266, 273, 278, 281, 283, 289, 297], "allometric_vari": [1, 2, 33, 229, 230, 268], "wt": [1, 29, 33, 229, 232, 273, 298], "reference_valu": [1, 2, 33, 229, 268], "refer": [1, 31, 33, 69, 76, 136, 227, 229, 230, 243, 266, 268, 273, 284, 290, 301, 302], "70": [1, 2, 33, 92, 229, 275, 296], "appli": [1, 2, 18, 168, 170, 178, 187, 188, 202, 203, 204, 229, 266, 268, 269, 275, 279, 284, 289, 296, 300], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 25, 26, 27, 28, 29, 30, 33, 37, 41, 43, 66, 69, 73, 76, 78, 86, 90, 91, 93, 95, 97, 99, 102, 103, 106, 115, 116, 119, 120, 122, 123, 127, 130, 131, 134, 137, 140, 145, 147, 149, 157, 158, 165, 166, 178, 181, 187, 193, 200, 202, 203, 204, 206, 207, 208, 209, 228, 229, 233, 234, 235, 237, 243, 245, 249, 250, 259, 264, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 300, 302], "cl": [1, 2, 4, 8, 25, 29, 33, 35, 37, 39, 42, 57, 69, 75, 77, 87, 103, 116, 118, 123, 126, 134, 139, 141, 142, 143, 148, 149, 154, 157, 161, 169, 176, 177, 182, 183, 186, 189, 195, 199, 202, 203, 204, 229, 232, 273, 279, 281, 283, 286, 288, 290], "q": [1, 33, 42, 161, 229, 266], "v": [1, 8, 25, 29, 33, 57, 69, 77, 88, 103, 116, 121, 123, 141, 142, 143, 148, 149, 157, 169, 176, 177, 182, 183, 189, 195, 196, 199, 229, 232, 271, 273, 279, 283, 286, 288, 290, 299, 300], "75": [1, 2, 33, 229, 273, 278], "lower_bound": [1, 2, 33, 229, 268], "lower": [1, 2, 6, 24, 25, 33, 35, 44, 67, 89, 90, 91, 115, 119, 120, 160, 180, 181, 187, 193, 206, 209, 229, 230, 268, 276, 281, 286, 288], "bound": [1, 24, 25, 33, 44, 68, 167, 181, 193, 202, 203, 204, 206, 211, 229, 266, 268, 286], "upper_bound": [1, 2, 33, 229, 268], "upper": [1, 24, 25, 33, 35, 44, 89, 90, 91, 115, 119, 120, 160, 180, 181, 193, 206, 209, 229, 266, 268, 286, 288], "should": [1, 6, 14, 24, 33, 35, 37, 39, 44, 164, 178, 229, 234, 235, 237, 266, 268, 269, 270, 271, 273, 276, 279, 281, 283, 284, 285, 288, 289, 293, 297], "true": [1, 2, 6, 10, 15, 18, 25, 33, 34, 56, 66, 75, 78, 86, 89, 90, 91, 105, 109, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 153, 154, 166, 172, 174, 175, 178, 187, 188, 192, 207, 208, 209, 210, 214, 221, 229, 243, 244, 266, 273, 275, 278, 281, 283, 288, 289, 290, 291, 297, 298, 299, 302], "No": [1, 6, 250, 251, 284, 289], "select": [1, 2, 164, 202, 204, 242, 264, 266, 268, 273, 281, 283, 286, 289, 291, 297, 298, 300], "see": [1, 2, 6, 8, 18, 35, 37, 221, 229, 230, 232, 234, 235, 237, 238, 268, 269, 270, 271, 273, 275, 276, 278, 281, 283, 284, 285, 288, 289, 290, 293, 297, 300], "about": [1, 2, 6, 269, 273, 275, 278, 280, 281, 283, 284, 288, 289, 297, 300], "actual": [1, 2, 24, 143, 273, 278, 281, 283, 284, 289, 297], "minim": [1, 2, 266, 273, 278, 281, 283, 289, 297], "statu": [1, 2, 266, 273, 276, 278, 281, 283, 284, 289, 297], "time": [1, 2, 6, 7, 9, 10, 25, 29, 33, 39, 40, 69, 71, 78, 79, 92, 98, 99, 106, 114, 123, 140, 141, 142, 143, 144, 148, 149, 152, 159, 176, 179, 189, 190, 192, 195, 205, 230, 238, 266, 268, 273, 278, 279, 281, 283, 284, 286, 287, 289, 290, 293, 296, 297, 299, 300], "you": [1, 2, 271, 273, 278, 280, 281, 282, 283, 284, 288, 289, 290, 293, 297, 301, 302], "look": [1, 2, 29, 47, 103, 134, 273, 278, 281, 283, 289, 290, 297, 300], "summary_model": [1, 2, 266, 273, 278, 281, 283, 289, 297, 300], "tabl": [1, 2, 56, 148, 168, 242, 264, 265, 266, 271, 273, 274, 278, 279, 281, 283, 285, 286, 289, 294, 296, 297, 298, 299, 300], "gener": [1, 2, 6, 57, 60, 70, 74, 144, 164, 165, 166, 167, 252, 254, 266, 268, 273, 275, 278, 279, 281, 282, 283, 289, 292, 293, 297, 300], "summarize_modelfit_result": [1, 2, 266, 273, 278, 281, 283, 289, 297], "minimization_success": [1, 2, 243, 273, 278, 281, 283, 289, 297], "errors_found": [1, 2, 273, 278, 281, 283, 289, 297], "pheno": [1, 8, 10, 15, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 77, 78, 79, 82, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 102, 103, 105, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 280, 286, 288, 290], "phenobarb": [1, 148, 243, 286, 288], "scaled_model": [1, 2], "warnings_found": [1, 2, 273, 278, 281, 283, 289, 297], "ofv": [1, 2, 49, 146, 219, 223, 234, 235, 237, 241, 242, 243, 266, 273, 278, 281, 283, 289, 296, 297], "aic": [1, 48, 223, 234, 235, 237, 266, 281, 283, 289, 297], "bic": [1, 2, 49, 223, 234, 235, 237, 266, 268, 273, 281, 283, 289, 297, 300], "730": [1, 264, 279, 281], "894727": [1, 264, 279], "740": [1, 82, 98, 264, 275], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 243, 273, 278, 281, 283, 289, 297], "estimation_runtim": [1, 2, 273, 278, 281, 283, 289, 297], "_estim": [1, 281, 289], "32": [1, 6, 58, 92, 97, 112, 221, 264, 265, 268, 273, 275, 278, 285, 287, 296, 299], "005818": [1, 279, 288], "121955": 1, "44555": [1, 279], "111053": [1, 279, 288], "201526": [1, 279, 288], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 279, 288], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 222, 241, 245, 246, 247, 248, 249, 250, 251, 253, 264, 266, 273, 278, 279, 281, 283, 289, 294, 297, 300], "predict": [1, 2, 14, 18, 83, 84, 104, 109, 117, 145, 219, 220, 221, 241, 266, 273, 274, 281, 283, 289, 296, 297], "influenti": [1, 2, 219, 220, 242, 266, 273, 281, 283, 289, 297], "individu": [1, 2, 6, 18, 38, 56, 57, 58, 60, 73, 83, 84, 103, 104, 110, 111, 112, 114, 117, 145, 146, 147, 157, 165, 166, 167, 210, 219, 220, 221, 241, 242, 266, 268, 273, 281, 283, 284, 289, 293, 296, 297, 301], "outlier": [1, 2, 220, 221, 242, 266, 273, 281, 283, 289, 297, 299], "summary_individuals_count": [1, 2, 273, 281, 283, 289, 297], "summarize_individuals_count_t": [1, 2, 266, 273, 281, 283, 289, 297], "parent_model": [1, 2, 18, 266, 273, 278, 281, 283, 289, 297], "inf_select": [1, 2, 242, 273, 281, 283, 289, 297], "inf_param": [1, 2, 242, 273, 281, 283, 289, 297], "out_ob": [1, 2, 242, 273, 281, 283, 289, 297], "out_ind": [1, 2, 242, 273, 281, 283, 289, 297], "inf_outli": [1, 2, 242, 273, 281, 283, 289, 297], "differ": [1, 2, 3, 18, 23, 26, 49, 241, 243, 264, 265, 266, 269, 273, 278, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 293, 296, 297, 298, 300, 302], "statist": [1, 6, 57, 60, 203, 273, 275, 279, 281, 283, 286, 288, 289, 297], "summary_individu": [1, 266, 273, 281, 283, 289, 297], "summarize_individu": [1, 242, 266, 273, 281, 283, 289, 297], "outlier_count": [1, 241, 273, 281, 283, 289, 297], "dofv_vs_par": [1, 241, 273, 281, 283, 289, 297], "id": [1, 5, 6, 10, 16, 58, 76, 78, 79, 92, 95, 97, 98, 99, 102, 112, 114, 148, 149, 152, 165, 221, 265, 266, 268, 273, 275, 279, 281, 283, 285, 286, 287, 288, 289, 290, 297, 299], "nan": [1, 2, 95, 211, 266, 273, 275, 278, 279, 281, 283, 289, 296, 297, 298], "742852": 1, "000000": [1, 2, 44, 50, 51, 52, 61, 264, 273, 279, 281, 283, 287, 289, 297], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 25, 39, 58, 73, 81, 92, 95, 97, 98, 112, 160, 179, 181, 193, 197, 201, 203, 221, 264, 265, 273, 275, 278, 279, 280, 281, 283, 284, 285, 287, 289, 294, 296, 297, 298, 299, 300], "092658": 1, "55": [1, 2, 6, 58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 289, 294, 296, 299], "6": [1, 2, 6, 58, 82, 92, 97, 112, 114, 221, 264, 265, 273, 275, 279, 281, 283, 284, 285, 287, 288, 289, 296, 297, 298, 299], "535711": 1, "175743": 1, "56": [1, 58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 299], "764710": 1, "576072": 1, "57": [1, 2, 58, 92, 97, 102, 112, 165, 221, 264, 265, 273, 275, 278, 279, 285, 287, 299], "975589": 1, "539779": 1, "58": [1, 2, 58, 92, 97, 102, 112, 114, 165, 221, 264, 265, 275, 279, 285, 287, 298, 299], "194798": 1, "775689": 1, "59": [1, 58, 92, 95, 97, 99, 102, 110, 112, 114, 165, 221, 264, 265, 273, 275, 278, 279, 285, 287, 289, 299], "11": [1, 2, 58, 80, 81, 83, 92, 95, 97, 98, 112, 221, 264, 265, 273, 275, 279, 280, 281, 283, 284, 285, 287, 288, 289, 294, 296, 298, 299, 300, 302], "175577": 1, "462889": 1, "predicted_dofv": [1, 241, 242, 273, 281, 283, 289, 297], "predicted_residu": [1, 241, 242, 273, 281, 283, 289, 297], "118": [1, 2, 165, 266, 279], "fulli": [2, 300], "best": [2, 266, 273, 281, 283, 284, 289, 297, 300], "dataset": [2, 10, 11, 12, 18, 45, 57, 66, 71, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 94, 95, 98, 101, 102, 107, 110, 111, 112, 114, 121, 136, 144, 150, 160, 164, 171, 201, 205, 213, 230, 235, 265, 266, 268, 271, 279, 282, 283, 286, 288, 299, 301], "combin": [2, 4, 73, 124, 125, 133, 135, 168, 170, 188, 200, 201, 236, 266, 268, 278, 279, 281, 284, 297, 300], "modelsearch": [2, 230, 237, 241, 266, 300], "ruvsearch": [2, 230, 238, 239, 266, 300], "covsearch": [2, 232, 266, 300], "run_amd": [2, 266], "dataset_path": [2, 71], "modeltyp": [2, 71, 230, 268], "pk_oral": [2, 230, 268], "search_spac": [2, 230, 237, 266, 268, 289, 300], "let": [2, 14, 18, 76, 266, 273, 279, 288, 290, 300], "categor": [2, 6, 35, 266, 273, 275, 279, 300], "sex": [2, 269, 273, 293, 300], "ag": [2, 6, 232, 273, 298, 300], "occas": [2, 39, 230, 235, 266, 268, 283, 288], "visi": [2, 283], "c": [2, 9, 203, 267, 272, 278, 279, 283, 284, 288, 290, 297], "specifi": [2, 6, 29, 37, 79, 89, 91, 150, 160, 168, 170, 186, 188, 209, 215, 233, 266, 268, 273, 278, 283, 284, 286, 288], "oral": [2, 71, 300], "drug": [2, 41, 191, 293], "iiv": [2, 17, 22, 26, 31, 37, 39, 43, 49, 73, 103, 134, 157, 178, 200, 230, 234, 235, 237, 266, 268, 273, 283, 300], "we": [2, 269, 271, 273, 279, 280, 282, 284, 288, 290, 293, 302], "our": [2, 269, 271, 272, 284, 293], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 59, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 86, 89, 90, 91, 95, 104, 113, 115, 117, 119, 120, 121, 123, 141, 142, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 264, 266, 268, 270, 273, 275, 276, 278, 281, 283, 284, 286, 288, 289, 290, 293, 297, 300, 302], "build": [2, 230, 267, 268, 276, 288, 300], "pk_iv": [2, 230, 268], "cl_init": [2, 71, 230, 268], "popul": [2, 18, 29, 44, 82, 83, 84, 104, 117, 123, 211, 230, 266, 268, 298], "clearanc": [2, 33, 71, 87, 230, 266, 268, 273, 283, 290], "01": [2, 17, 26, 35, 71, 187, 211, 230, 232, 268, 273, 288, 296, 298], "vc_init": [2, 71, 230, 268], "central": [2, 7, 8, 9, 29, 41, 42, 69, 71, 123, 141, 161, 169, 176, 177, 179, 182, 183, 186, 189, 192, 195, 196, 197, 199, 230, 268, 271, 276, 286, 288], "compart": [2, 6, 8, 9, 32, 40, 41, 42, 93, 94, 106, 122, 159, 161, 179, 186, 192, 197, 230, 266, 268, 289, 300], "volum": [2, 33, 42, 71, 88, 230, 266, 268, 273, 283, 284], "mat_init": [2, 71, 230, 268], "absorpt": [2, 71, 116, 136, 169, 176, 189, 192, 195, 230, 237, 241, 266, 268, 281, 283, 289, 300], "mfl": [2, 230, 232, 241, 266, 268, 273, 289], "depend": [2, 6, 18, 29, 57, 73, 76, 124, 125, 133, 168, 170, 188, 266, 270, 275, 281, 290, 300, 301, 302], "lloq": [2, 6, 160, 201, 230, 266, 268], "quantif": [2, 6, 160, 201, 230, 268], "loq": [2, 160, 230, 268], "data": [2, 6, 18, 31, 80, 81, 82, 83, 84, 85, 97, 109, 148, 149, 152, 160, 168, 170, 172, 188, 201, 230, 242, 264, 266, 275, 279, 283, 284, 286, 288, 290, 293, 300], "bodi": [2, 6, 10, 269, 275, 284, 293], "weight": [2, 6, 10, 85, 124, 125, 133, 135, 194, 212, 273, 275, 293, 297], "correspond": [2, 14, 18, 185, 265, 284, 286, 299, 300], "datainfo": [2, 18, 79, 150, 171, 213, 266, 300, 301], "file": [2, 10, 18, 27, 47, 72, 96, 148, 150, 151, 152, 213, 214, 215, 224, 225, 244, 245, 246, 247, 249, 250, 251, 253, 266, 268, 271, 273, 278, 280, 281, 283, 284, 286, 289, 290, 292, 293, 297, 300, 301], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 248, 253, 266, 270, 273, 275, 284, 286, 288], "model_typ": 2, "elimin": [2, 116, 127, 130, 131, 137, 177, 182, 183, 196, 266, 268, 289, 300], "vc": [2, 42, 161, 273, 281, 283], "mat": [2, 43, 265, 266, 267, 272, 273, 281, 283, 288, 290, 297], "proport": [2, 37, 124, 125, 133, 135, 164, 168, 170, 187, 188, 201, 266, 268], "step": [2, 15, 18, 34, 36, 46, 153, 156, 174, 175, 232, 243, 266, 268, 271, 273, 278, 280, 281, 283, 284, 289, 293, 297, 302], "foce": [2, 14, 15, 34, 36, 153, 174, 175, 266, 268, 278], "interact": [2, 14, 15, 34, 36, 148, 153, 174, 175, 266, 269, 278, 284, 286, 288, 293, 300, 302], "specif": [2, 14, 18, 25, 46, 79, 164, 216, 266, 268, 273, 275, 284, 286, 289, 293, 300], "support": [2, 8, 14, 18, 29, 36, 37, 54, 55, 70, 71, 80, 81, 83, 84, 85, 104, 113, 117, 124, 125, 133, 169, 174, 175, 189, 201, 232, 255, 266, 268, 273, 275, 276, 278, 282, 284, 286, 288, 289, 290, 292, 293, 295, 300], "nonmem": [2, 14, 18, 69, 70, 79, 110, 111, 112, 185, 236, 266, 267, 270, 271, 280, 282, 286, 287, 288, 293, 300, 301], "cmt": [2, 94, 266, 289], "rate": [2, 6, 8, 9, 16, 42, 136, 169, 176, 189, 192, 195, 266, 268, 300], "via": [2, 266, 268, 271, 280, 282, 286, 288, 290, 300, 302], "exclud": [2, 109, 241, 281, 283, 284, 289], "pleas": [2, 271, 280, 284, 300, 302], "featur": [2, 271, 273, 278, 281, 282, 283, 284, 297, 301], "languag": [2, 108, 148, 269, 273, 276, 284, 289], "how": [2, 3, 166, 230, 234, 237, 266, 268, 269, 271, 273, 275, 280, 281, 283, 284, 288, 289, 290, 298, 301], "defin": [2, 8, 60, 109, 121, 136, 143, 149, 266, 273, 276, 284, 286, 288, 299, 300], "zo": [2, 237, 241, 266, 268, 289, 300], "seq": [2, 268, 289, 300], "fo": [2, 14, 36, 174, 175, 266, 268, 278, 289, 293, 300], "mm": [2, 266, 268, 289, 300], "mix": [2, 39, 49, 131, 183, 223, 266, 276, 280, 283, 286, 289, 293, 300], "lagtim": [2, 169, 189, 289, 300], "transit": [2, 8, 186, 192, 266, 268, 289, 300], "peripher": [2, 8, 42, 161, 186, 237, 241, 266, 268, 289, 300], "cat": [2, 35, 273, 300], "iv": [2, 71, 230, 268, 300], "note": [2, 4, 6, 24, 69, 70, 95, 110, 111, 112, 243, 244, 245, 249, 250, 264, 275, 281, 283, 287, 288, 290, 298], "overriden": 2, "ignor": [2, 110, 111, 112, 148, 266, 268, 286, 288, 290], "soon": 2, "explicitli": [2, 268, 283, 284], "stai": [2, 26], "vice": 2, "versa": 2, "instanc": [2, 126, 154, 273, 300], "effect": [2, 35, 37, 49, 126, 134, 154, 157, 187, 223, 232, 266, 268, 276, 280, 284, 286, 293, 298, 300, 301], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 24, 25, 26, 27, 29, 30, 31, 33, 36, 37, 39, 44, 47, 49, 57, 60, 71, 73, 74, 76, 80, 81, 82, 83, 84, 85, 96, 100, 124, 125, 133, 139, 145, 150, 157, 158, 160, 164, 165, 166, 167, 168, 170, 178, 185, 187, 188, 200, 201, 202, 203, 204, 213, 217, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 245, 246, 249, 250, 254, 258, 266, 268, 275, 279, 281, 283, 288, 289, 300], "null": [2, 275, 281, 283, 289, 300, 302], "yield": [2, 144, 164], "workflow": [2, 3, 226, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 266, 280, 282, 284, 293, 300], "want": [2, 269, 271, 273, 281, 282, 283, 284, 288, 289, 290, 292], "desir": [2, 250, 251], "subset": [2, 68, 165], "algorithm": [2, 232, 233, 234, 237, 241, 266, 268, 293, 300], "six": 2, "below": [2, 6, 201, 270, 271, 278, 281, 283, 284, 289, 297], "detail": [2, 229, 232, 234, 235, 237, 238, 278, 284, 289, 296, 297, 300, 301], "regard": [2, 284, 289], "subhead": 2, "distribut": [2, 17, 22, 26, 39, 42, 57, 60, 73, 116, 143, 147, 161, 165, 166, 167, 200, 204, 235, 255, 264, 266, 268, 279, 284, 286, 289, 296, 300, 301], "term": [2, 168, 266, 281, 284, 288], "keep": [2, 14, 24, 164, 245, 266, 269, 276, 281, 284], "well": [2, 57, 273, 275, 278, 281, 283, 284, 288, 289, 296, 297, 300, 301], "iov": [2, 26, 39, 103, 134, 158, 235, 266, 268, 296, 300], "explain": [2, 273, 284, 293, 300], "ruv": [2, 178, 268], "power": [2, 35, 187, 268, 284, 293, 294, 296, 297], "vari": [2, 140, 190, 238, 266, 268, 297], "identifi": [2, 6, 31, 273, 275, 281, 284, 296, 300], "option": [2, 6, 14, 18, 26, 35, 37, 39, 46, 71, 73, 80, 81, 83, 84, 85, 164, 201, 223, 245, 249, 250, 259, 264, 266, 268, 273, 275, 281, 283, 284, 286, 289, 301, 302], "reduced_stepwis": [2, 241, 266, 289, 300], "iiv_strategi": [2, 234, 237, 266, 268, 281, 289, 300], "absorption_delai": [2, 237, 266, 289, 300], "rank_typ": [2, 223, 234, 235, 237, 268, 281, 283, 289, 300], "cutoff": [2, 190, 219, 220, 221, 223, 234, 235, 237, 266, 268, 281, 283, 289, 300], "brute_forc": [2, 234, 266, 281], "fullblock": [2, 234, 237, 266, 281, 289], "tri": [2, 268, 289], "list_of_paramet": [2, 37, 39, 235, 268, 283], "random": [2, 3, 13, 17, 18, 22, 26, 39, 49, 57, 60, 74, 76, 118, 121, 134, 165, 166, 167, 266, 268, 276, 279, 283, 296, 301, 302], "group": [2, 25, 31, 144, 145, 164, 238, 268, 282, 297], "p_valu": [2, 238, 268, 297], "05": [2, 42, 50, 51, 52, 53, 61, 62, 63, 64, 161, 232, 238, 264, 268, 273, 287, 296, 297, 298], "skip": [2, 238, 268, 273, 297], "p_forward": [2, 232, 268, 273], "p_backward": [2, 232, 268, 273], "max_step": [2, 232, 268, 273], "scm": [2, 232, 266, 273, 293, 295], "forward": [2, 232, 266, 268, 273, 298], "backward": [2, 232, 243, 266, 268, 273, 298], "variou": [2, 69, 241, 242, 266, 268, 269, 271, 273, 276, 278, 281, 282, 283, 289, 293, 297], "access": [2, 273, 275, 278, 281, 283, 284, 286, 289, 290, 297, 300, 302], "json": [2, 10, 27, 225, 227, 244, 266, 268, 273, 275, 278, 281, 283, 288, 289, 297, 300], "format": [2, 70, 266, 268, 270, 273, 276, 278, 280, 281, 282, 283, 284, 286, 288, 289, 292, 297], "summary_tool": [2, 266, 273, 278, 281, 283, 289, 297], "candid": [2, 237, 266, 268, 273, 278, 297, 300], "compar": [2, 223, 264, 266, 273, 278, 293, 297, 300], "rank": [2, 223, 234, 235, 237, 266, 268, 273, 297], "selected_model": 2, "901": 2, "722667": 2, "iivsearch_run9": 2, "2272": 2, "503332": 2, "best_ruvsearch_2": [2, 297], "time_varying2": [2, 297], "iiv_on_ruv": [2, 266, 294, 296, 297], "2431": 2, "413432": 2, "iovsearch_run2": [2, 283], "2579": 2, "021315": 2, "2590": 2, "360161": 2, "covsearch_run6": [2, 273], "2593": 2, "888704": 2, "dofv": [2, 219, 220, 241, 264, 265, 266, 273, 294, 296, 297], "n_param": [2, 273, 283, 297], "d_param": [2, 273, 283, 297], "1370": 2, "780665": 2, "158": 2, "910100": 2, "147": [2, 6], "607883": 2, "338847": 2, "528542": 2, "modelsearch_run1": [2, 266], "base_model": [2, 223], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "best_ruvsearch_1": [2, 297], "iovsearch_run1": [2, 283], "iovsearch_run3": [2, 283], "iovsearch_run4": [2, 283], "iovsearch_run5": [2, 283], "iovsearch_run6": [2, 283], "iovsearch_run7": [2, 283], "iovsearch_run8": [2, 283], "iovsearch_run9": 2, "iovsearch_run10": 2, "covsearch_run1": [2, 273], "exp": [2, 29, 35, 37, 148, 202, 203, 204, 232, 273, 286, 288, 290], "covsearch_run2": [2, 273], "covsearch_run3": [2, 273], "covsearch_run4": [2, 273], "covsearch_run5": [2, 273], "fals": [2, 6, 13, 14, 17, 18, 22, 24, 25, 27, 31, 34, 35, 36, 44, 56, 66, 68, 75, 78, 86, 89, 90, 91, 105, 109, 115, 119, 120, 123, 124, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 139, 153, 154, 164, 166, 172, 180, 181, 187, 192, 193, 206, 208, 209, 210, 211, 213, 221, 230, 243, 244, 246, 258, 265, 273, 275, 278, 286, 288, 290, 291, 298, 299], "19029": 2, "146679": 2, "2091": 2, "335789": 2, "2278": 2, "645238": 2, "1623": 2, "449423": 2, "2187": 2, "714827": 2, "2155": 2, "309747": 2, "1562": 2, "182445": 2, "1544": 2, "578087": 2, "1927": 2, "724795": 2, "1419": 2, "684985": 2, "2260": 2, "091630": 2, "2256": 2, "222388": 2, "2253": 2, "280037": 2, "2421": 2, "414958": 2, "018856": 2, "816993": 2, "2555": 2, "387421": 2, "817090": 2, "387607": 2, "413326": 2, "2524": 2, "580897": 2, "2556": 2, "106887": 2, "2502": 2, "502532": 2, "2591": 2, "473342": 2, "816184": 2, "112946": 2, "565747": 2, "739920": 2, "63": [2, 92, 114, 275, 287, 294, 296], "30": [2, 58, 92, 97, 112, 221, 264, 265, 273, 275, 278, 281, 283, 284, 285, 287, 289, 294, 296, 299], "15": [2, 58, 81, 92, 97, 112, 221, 264, 265, 273, 275, 281, 283, 284, 285, 287, 288, 298, 299], "06": [2, 50, 52, 53, 62, 63, 264, 273, 281, 283, 287, 296, 298, 300], "21": [2, 58, 80, 83, 92, 97, 112, 221, 264, 265, 273, 275, 278, 279, 285, 287, 294, 296, 299], "82": 2, "77": [2, 273], "27": [2, 58, 92, 97, 112, 114, 221, 264, 265, 273, 275, 281, 283, 285, 287, 289, 297, 299], "80": [2, 204, 273, 287, 288, 294, 296, 297], "02": [2, 273, 296, 298, 300], "37": [2, 58, 92, 97, 99, 112, 221, 264, 265, 273, 275, 285, 287, 299], "45": [2, 58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 299], "18": [2, 6, 58, 81, 92, 97, 112, 221, 264, 265, 273, 275, 281, 283, 285, 287, 294, 296, 299], "85": 2, "73": [2, 114, 275, 287, 297, 300], "31": [2, 58, 80, 83, 92, 97, 112, 114, 221, 264, 265, 273, 275, 285, 287, 294, 296, 299, 300], "17": [2, 58, 80, 81, 83, 84, 92, 95, 97, 112, 114, 221, 264, 265, 273, 275, 281, 283, 284, 285, 287, 288, 289, 294, 296, 299], "60": [2, 92, 273, 275, 284, 294], "28": [2, 58, 80, 83, 84, 92, 97, 112, 201, 221, 264, 265, 273, 275, 281, 284, 285, 287, 296, 299], "84": [2, 219, 220, 242, 281, 283, 289, 298], "39": [2, 58, 92, 97, 112, 221, 264, 265, 273, 275, 283, 285, 287, 296, 297, 298, 299], "98": [2, 264, 273, 279, 281], "38": [2, 58, 80, 83, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 299], "96": [2, 27, 99, 204, 264, 273, 275, 288, 289], "52": [2, 58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 289, 298, 299], "33": [2, 58, 92, 97, 112, 114, 221, 264, 265, 273, 275, 285, 287, 289, 298, 299], "40": [2, 58, 92, 95, 97, 112, 114, 160, 221, 264, 265, 275, 278, 285, 287, 298, 299], "44": [2, 58, 92, 97, 112, 221, 264, 265, 275, 285, 287, 299], "26": [2, 58, 92, 97, 112, 221, 264, 265, 273, 275, 283, 285, 287, 296, 298, 299], "66": [2, 273, 294], "36": [2, 58, 60, 92, 97, 112, 221, 264, 265, 273, 275, 281, 283, 285, 287, 289, 296, 299], "25": [2, 58, 80, 83, 84, 92, 97, 99, 112, 221, 264, 265, 273, 275, 281, 285, 287, 289, 294, 296, 297, 299], "65": [2, 6, 273], "29": [2, 58, 80, 83, 84, 92, 97, 112, 201, 203, 221, 264, 265, 267, 273, 275, 281, 284, 285, 287, 296, 299], "64": [2, 6], "78": 2, "88": 2, "51": [2, 58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 299, 300], "47": [2, 58, 92, 97, 112, 114, 221, 264, 265, 275, 285, 287, 289, 294, 296, 299], "34": [2, 58, 84, 92, 97, 112, 114, 221, 264, 265, 273, 275, 285, 287, 294, 296, 299], "pop_cl_estim": [2, 273, 278, 283, 297], "pop_vc_estim": [2, 273, 278, 283, 297], "0100": 2, "100": [2, 25, 35, 36, 46, 165, 174, 204, 264, 266, 268, 273, 287, 288, 291, 298], "3711": 2, "125": 2, "228": 2, "5771": 2, "115": 2, "287": [2, 294], "8759": 2, "119": 2, "581": 2, "2667": 2, "105": [2, 273, 278, 297], "292": 2, "5775": 2, "127": [2, 6, 281], "060": 2, "1654": 2, "121": [2, 273, 281, 283, 289, 297], "364": 2, "9392": 2, "138": 2, "630": 2, "9500": 2, "923": 2, "9735": 2, "137": 2, "648": [2, 6, 264], "5006": 2, "116": 2, "034": 2, "6326": 2, "112": [2, 114, 273, 275, 281, 283, 287, 289, 294, 296, 297], "423": 2, "5612": 2, "416": 2, "5406": 2, "706": 2, "0598": 2, "151": [2, 80, 81, 83, 84, 85, 294], "9031": 2, "117": 2, "208": 2, "0793": 2, "438": 2, "439": [2, 281], "9253": 2, "887": [2, 266, 281, 283], "1390": 2, "114": 2, "800": [2, 264, 287], "9254": 2, "888": 2, "1388": 2, "9033": 2, "207": [2, 287], "9409": 2, "401": 2, "0197": 2, "635": 2, "1751": 2, "113": [2, 273, 281, 283, 289, 297], "681": 2, "2749": 2, "103": [2, 273, 281], "868": [2, 279, 281], "2141": 2, "935": 2, "5390": 2, "943": 2, "2723": 2, "795": 2, "2760": [2, 273], "837": 2, "2727": 2, "104": [2, 273, 278, 281, 283, 289], "085": 2, "2814": 2, "101": [2, 273], "532": 2, "pop_mat_estim": [2, 273, 278, 283, 297], "010000": 2, "000100": 2, "459155": 2, "260127": 2, "563136": 2, "355314": 2, "386862": 2, "284833": 2, "224547": 2, "206026": 2, "463798": 2, "479941": 2, "486550": 2, "483385": 2, "495219": 2, "493621": 2, "463074": 2, "463102": 2, "495548": 2, "474613": 2, "495482": 2, "474620": 2, "493613": 2, "460720": 2, "468861": 2, "491231": 2, "461770": 2, "461787": 2, "462003": 2, "466555": 2, "427683": 2, "460977": 2, "460855": 2, "omega_iov_1_estim": [2, 283], "omega_iov_2_estim": [2, 283], "000010": [2, 279], "027698": 2, "000001": [2, 50, 52, 53, 57, 60, 62, 63, 283, 287, 289], "017913": 2, "109449": 2, "050657": 2, "110465": 2, "026922": 2, "026926": 2, "026951": 2, "026901": 2, "026857": 2, "026982": 2, "026914": 2, "omega_iov_2_3_estim": 2, "018497": 2, "018498": 2, "063509": 2, "046262": 2, "052580": 2, "017330": 2, "017318": 2, "017368": 2, "017319": 2, "017210": 2, "017372": 2, "017494": 2, "omega_iov_3_estim": [2, 283], "pop_clage_estim": [2, 273], "012352": 2, "012353": 2, "003156": 2, "003153": 2, "036852": 2, "043941": 2, "046134": 2, "011155": 2, "011139": 2, "004026": 2, "011192": 2, "011151": 2, "011028": 2, "011185": 2, "011372": 2, "pop_clsex_estim": [2, 273], "pop_matage_estim": [2, 273], "05079": 2, "016829": 2, "pop_matsex_estim": [2, 273], "pop_vcage_estim": [2, 273], "485722": 2, "002138": 2, "pop_vcsex_estim": [2, 273], "143849": 2, "dbic": [2, 266, 281, 283, 289], "059033": 2, "110": [2, 273, 281, 283, 289, 297], "464112": 2, "329": 2, "468146": 2, "642": [2, 294], "324437": 2, "695": [2, 266], "010496": 2, "712": 2, "614854": 2, "833": 2, "217496": 2, "439014": 2, "972689": 2, "493822": 2, "841931": 2, "134": 2, "736504": 2, "130": [2, 266], "443586": 2, "120": [2, 99, 275, 287], "402996": 2, "683715": 2, "393070": 2, "71": [2, 273, 297], "089100": 2, "886801": 2, "290565": 2, "177358": 2, "205585": 2, "113181": 2, "752785": 2, "summary_error": [2, 273, 278, 281, 283, 289], "summarize_error": [2, 266, 273, 278, 281, 283, 289], "categori": [2, 6, 18, 35, 39, 149, 240, 268, 273, 278, 281, 283, 288, 289, 300], "error_no": [2, 273, 278, 281, 283, 289], "2023": [2, 284], "03": [2, 273, 294, 296, 298], "402": 2, "messag": [2, 248, 266, 268, 273, 278, 281, 283, 289], "NEAR": [2, 283, 289], "ITS": [2, 14, 36, 174, 175, 266, 268, 283, 289], "boundari": [2, 266, 283, 289], "page": [3, 265, 267, 271, 278, 289, 290], "public": [3, 276], "modul": [3, 8, 266, 270, 286, 288, 292, 302], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 266, 275, 280, 284, 286, 288, 300], "relat": [3, 245, 249, 250, 266, 269, 298], "statement": [3, 4, 8, 18, 23, 33, 35, 37, 38, 39, 42, 43, 69, 123, 141, 142, 143, 155, 157, 161, 162, 168, 169, 170, 176, 177, 178, 182, 183, 186, 187, 188, 189, 190, 192, 195, 196, 199, 201, 202, 203, 204, 212, 266, 268, 273, 284, 288, 293, 301], "transform": [3, 18, 147, 168, 170, 172, 188, 201, 202, 203, 204, 266, 268, 280, 290, 296, 301], "manipul": [3, 25, 282, 286, 288, 290], "built": [3, 141, 218, 268, 271, 282], "run": [3, 73, 145, 147, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 249, 253, 264, 265, 266, 274, 280, 282, 284, 285, 287, 292, 293, 296, 298, 299, 301, 302], "packag": [3, 268, 276, 280, 282, 284, 291, 293, 302], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 26, 29, 37, 54, 55, 57, 82, 93, 104, 106, 113, 117, 121, 139, 168, 170, 179, 187, 188, 197, 198, 266, 268, 269, 284, 286, 288, 293, 299], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 269, 271, 282, 284, 286], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 223, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 266, 273, 279, 281, 283, 284, 285, 286, 288, 289, 290, 291, 296, 297, 298], "represent": [4, 254, 275, 280, 288, 290], "togeth": [4, 26, 169, 189, 271, 276, 279, 285, 297, 302], "sympi": [4, 6, 8, 17, 22, 26, 29, 33, 57, 82, 100, 113, 121, 122, 124, 125, 133, 139, 168, 170, 179, 188, 197, 276, 286, 293], "str": [4, 6, 7, 8, 10, 17, 18, 22, 24, 26, 27, 29, 31, 33, 35, 36, 37, 38, 39, 44, 49, 57, 70, 71, 75, 76, 78, 82, 90, 96, 100, 103, 108, 116, 118, 121, 124, 125, 126, 133, 134, 139, 141, 144, 146, 147, 150, 151, 152, 154, 157, 158, 164, 168, 170, 173, 174, 178, 179, 184, 185, 187, 188, 190, 191, 197, 200, 201, 202, 203, 204, 207, 208, 213, 214, 216, 217, 218, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 263, 266], "expr": [4, 9, 26, 29, 33, 113, 139, 179, 197, 198], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 148, 152, 174, 175, 201, 230, 233, 245, 246, 247, 248, 249, 250, 251, 253, 265, 266, 268, 273, 276, 284, 286, 288, 293, 300, 302], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 26, 29, 269, 284, 293], "hand": [4, 8, 57], "side": [4, 8, 57, 172], "pop_cl": 4, "eta_cl": [4, 37, 39, 290], "rhs_symbol": [4, 8, 28], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 246, 248], "from_dict": [4, 5, 6, 7, 8, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 246, 248], "replac": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 30, 31, 47, 164, 173, 199, 266, 268, 275, 276, 288, 290], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 36, 174, 216, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251, 266], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29, 286], "substitut": [4, 5, 7, 8, 16, 17, 22, 26, 28, 29, 284, 286, 288], "dict": [4, 5, 6, 10, 16, 17, 22, 25, 26, 29, 46, 59, 80, 81, 83, 84, 85, 89, 91, 93, 105, 106, 147, 163, 180, 181, 193, 209, 245, 246, 249, 250, 251, 253, 259, 275, 286], "old": [4, 29, 163, 266, 296], "new": [4, 6, 9, 10, 14, 17, 22, 24, 25, 26, 29, 30, 37, 39, 43, 44, 70, 74, 75, 86, 89, 90, 91, 163, 164, 168, 170, 178, 180, 184, 187, 188, 208, 209, 211, 255, 268, 269, 271, 275, 284, 289, 292, 296, 297, 300, 301], "pair": [4, 5, 8, 16, 17, 22, 26, 29, 35, 67, 241], "return": [4, 6, 8, 9, 10, 15, 18, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 255, 258, 259, 266, 284], "updat": [4, 9, 10, 18, 25, 29, 179, 197, 210, 211, 213, 266, 268, 271, 282, 284, 289, 290, 293, 297, 301, 302], "b": [4, 284, 289], "to_dict": [4, 5, 6, 7, 8, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 246, 248], "amount": [5, 6, 7, 8, 16, 105, 266, 275, 286], "admid": [5, 6, 7, 8, 16, 29, 42, 69, 123, 141, 161, 169, 176, 177, 182, 183, 186, 189, 192, 195, 196, 199, 286, 288], "dose": [5, 6, 7, 8, 9, 16, 40, 86, 93, 98, 99, 105, 109, 136, 159, 190, 266, 288, 301], "int": [5, 8, 16, 29, 33, 36, 41, 46, 57, 60, 68, 74, 98, 100, 110, 111, 124, 125, 133, 156, 164, 165, 166, 167, 168, 170, 174, 175, 186, 188, 192, 231, 232, 236, 238, 240], "administr": [5, 6, 16], "amt": [5, 7, 8, 10, 16, 29, 33, 42, 69, 78, 79, 92, 99, 105, 123, 141, 142, 143, 148, 149, 161, 169, 176, 177, 182, 183, 186, 189, 192, 195, 196, 199, 275, 286, 288, 290], "dictionari": [5, 10, 14, 16, 17, 22, 25, 26, 27, 30, 80, 81, 83, 84, 85, 93, 106, 164, 180, 181, 193, 245, 246, 249, 250, 251, 253, 259, 286], "unknown": [6, 139, 275], "unit": [6, 18, 121], "ratio": [6, 232, 238, 266, 268, 275, 297], "datatyp": [6, 18, 150], "float64": [6, 10, 56, 63, 64, 67, 82, 83, 84, 85, 99, 114, 218, 275, 286, 287, 288], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 266], "colum": 6, "measur": [6, 269, 275, 284], "bool": [6, 18, 24, 27, 31, 33, 35, 44, 56, 66, 68, 75, 78, 86, 105, 109, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 164, 166, 178, 187, 188, 192, 210, 211, 213, 214, 229, 230, 243, 244, 246, 258], "discret": [6, 275, 283], "union": [6, 100, 124, 125, 133, 147, 168, 170, 179, 188, 197], "tupl": [6, 8, 26, 144, 164, 259], "label": [6, 266], "bar": [6, 279], "panda": [6, 10, 266, 276, 293], "dtype": [6, 10, 56, 59, 63, 64, 67, 68, 82, 83, 84, 85, 98, 99, 112, 114, 218, 275, 287, 288], "nomin": [6, 275], "ordin": [6, 275], "rang": [6, 27, 76, 300], "na": 6, "int8": 6, "sign": [6, 203, 284], "bit": 6, "128": 6, "int16": 6, "16": [6, 58, 81, 92, 97, 112, 188, 204, 221, 264, 265, 273, 275, 281, 283, 284, 285, 287, 288, 294, 296, 297, 298, 299], "768": 6, "767": 6, "int32": [6, 10, 275], "483": 6, "647": [6, 264, 281], "int64": [6, 112, 275], "223": [6, 274], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 294], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 82, 98, 275, 287], "073": 6, "709": 6, "551": 6, "615": [6, 294], "float16": 6, "binari": [6, 284], "float": [6, 24, 33, 37, 43, 44, 48, 49, 67, 68, 71, 147, 160, 167, 187, 190, 201, 219, 220, 221, 223, 229, 230, 232, 234, 235, 237, 238, 266], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 79, 205, 266, 268, 286], "tran": [6, 79, 205, 266, 268, 286], "date": [6, 76, 79, 205, 266, 268, 284, 302], "common": [6, 35, 60, 259, 284, 288, 301], "birth": 6, "human": [6, 27, 293], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 275, 293], "concentr": [6, 95, 293], "substanc": 6, "blood": 6, "subject": [6, 14, 92, 102, 242, 284, 301], "uniqu": [6, 31, 47, 75, 164, 245, 255, 266, 268, 275, 300], "pd": [6, 15, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 76, 80, 81, 82, 83, 84, 85, 92, 94, 95, 97, 98, 99, 101, 107, 112, 114, 144, 145, 146, 147, 150, 164, 165, 166, 167, 210, 211, 219, 220, 221, 223, 240, 241, 242, 243, 248, 266, 275], "interv": [6, 275, 276], "ration": 6, "max": [6, 35, 182, 183, 264, 275], "datafram": [6, 15, 18, 25, 27, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 73, 76, 80, 81, 83, 84, 85, 92, 95, 97, 144, 145, 147, 150, 164, 165, 166, 167, 210, 219, 220, 221, 223, 240, 241, 242, 243, 248, 266, 275, 293], "idv": [6, 10, 190, 275, 296], "independ": [6, 8, 275, 284, 291, 296, 300], "dv": [6, 10, 29, 69, 78, 79, 92, 100, 114, 123, 124, 125, 133, 141, 145, 148, 149, 152, 168, 170, 182, 183, 188, 201, 266, 275, 286, 288, 290, 299], "dvid": [6, 18, 41, 100, 124, 125, 133, 168, 170, 173, 188, 286, 294, 296, 297], "infus": [6, 136, 189, 195, 266, 288], "addit": [6, 35, 37, 46, 75, 86, 124, 125, 133, 135, 168, 170, 188, 201, 266, 268, 273, 275, 278, 284, 296, 297, 300], "interdos": 6, "ss": 6, "steadi": [6, 266], "state": [6, 25, 35, 266, 284, 298], "event": [6, 101, 205, 266, 269, 284], "mdv": [6, 107, 266], "miss": [6, 92, 97, 266], "yet": [6, 300], "exactli": 6, "blq": [6, 201, 266], "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 178, 268, 284, 288, 293], "physic": [6, 121, 269, 275, 284], "recogn": [6, 185, 269, 284, 290], "without": [6, 9, 54, 55, 80, 81, 83, 84, 85, 104, 113, 117, 164, 247, 264, 266, 268, 271, 276, 284, 286], "static": [6, 10, 18], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 26, 27, 29, 32, 70, 123, 143, 192, 266, 268, 300], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 24, 26, 66, 67, 68, 100, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 266, 290, 300, 302], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 266, 268, 293], "properti": [6, 14, 17, 22, 24, 25, 30, 284, 286], "lag_tim": [7, 9, 266], "bioavail": [7, 9, 93, 266], "compartment": [7, 8, 266, 268, 286], "system": [7, 8, 9, 14, 23, 29, 32, 54, 55, 57, 77, 80, 81, 83, 84, 85, 104, 105, 113, 117, 128, 129, 132, 136, 179, 197, 199, 249, 266, 268, 270, 271, 282, 284, 286, 290, 301], "lag": [7, 9, 40, 106, 159, 266], "enter": [7, 284], "fraction": [7, 167, 264, 279], "bolu": [7, 8, 29, 42, 69, 123, 141, 161, 169, 176, 177, 182, 183, 186, 192, 196, 199, 266, 268, 286], "comp": [7, 8, 266], "a_centr": [7, 8, 29, 69, 77, 105, 123, 141, 179, 182, 183, 188, 196, 286], "depot": [7, 8, 9, 176, 189, 192, 266, 288, 300], "alag": [7, 266], "a_depot": [7, 8], "builder": [8, 9], "graph": [8, 254, 268, 271], "odesystem": [8, 29, 266], "od": [8, 14, 23, 29, 32, 43, 54, 55, 57, 80, 81, 83, 84, 85, 104, 105, 113, 117, 128, 129, 132, 136, 179, 185, 197, 199, 266, 268, 301], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 192, 300], "k21": [8, 300], "vector": [8, 17, 122, 165, 166, 167, 265, 279, 286], "load_example_model": [8, 10, 15, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 54, 55, 56, 57, 58, 59, 60, 65, 67, 68, 69, 70, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 221, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 266, 280], "pprint": [8, 113], "ode_system": [8, 29, 42, 161, 169, 176, 177, 182, 183, 186, 189, 192, 195, 196, 199, 266, 286], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 42, 254, 284], "compartment_nam": 8, "compartmental_matrix": [8, 286], "matrix": [8, 17, 26, 50, 51, 52, 53, 57, 60, 61, 62, 63, 64, 67, 122, 165, 166, 167, 197, 265, 266, 268, 279, 286], "set_first_order_absorpt": [8, 43, 169, 189, 195, 266, 288], "dosing_compart": 8, "receiv": [8, 284], "equat": [8, 57, 77, 286], "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 9, 68, 122, 136, 137, 143, 179, 189, 195, 196, 197, 266, 283, 289, 291, 300], "set_zero_order_absorpt": [8, 169, 176, 189, 266, 288, 302], "atom": 8, "http": [8, 265, 275, 276, 279, 280, 284, 297], "doc": [8, 271], "org": [8, 265, 267, 275, 279, 284, 297], "latest": [8, 266, 276, 280], "core": [8, 280, 286, 288], "html": [8, 215, 276, 284, 288], "basic": [8, 27, 71, 72, 266, 275, 284, 290, 300, 301], "find_compart": [8, 9], "its": [8, 24, 29, 68, 76, 143, 241, 266, 268, 270, 275, 276, 280, 282, 284, 286, 302], "found": [8, 25, 240, 264, 265, 266, 271, 274, 277, 279, 281, 283, 284, 286, 287, 289, 296, 297, 300, 301, 302], "find_depot": 8, "out": [8, 26, 66, 211, 266, 270, 284, 286, 292, 302], "find_transit_compart": 8, "chain": [8, 288], "singl": [8, 10, 24, 26, 200, 205, 217, 236, 240, 243, 245, 266, 268, 276, 279, 284, 288, 300], "distinguish": [8, 284], "get_bidirect": 8, "bidirect": 8, "interest": [8, 57, 269, 273, 284, 288, 293], "get_compartment_inflow": 8, "go": [8, 124, 125, 133, 236, 243, 266, 275, 284], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 213, 214, 245, 249, 250, 268], "ka": [8, 9, 38, 176, 189, 266, 283], "get_n_connect": 8, "connect": [8, 18, 245, 247, 266, 268, 275, 284, 293, 300, 301], "compartmentalsystem": [9, 266], "newli": [9, 26, 283], "move_dos": 9, "move": [9, 211, 266], "anoth": [9, 18, 29, 255, 288], "remove_compart": 9, "remove_flow": 9, "set_bioavail": 9, "set_dos": 9, "set_input": 9, "set_lag_tim": [9, 266], "force_absolute_path": 10, "sequenc": [10, 15, 25, 26, 29, 73], "metadata": [10, 245, 246, 249, 250, 251, 253, 266], "index": [10, 18, 25, 26, 27, 29, 36, 46, 57, 60, 67, 68, 99, 114, 156, 174, 175, 240, 243, 265, 266, 275, 279, 280, 286, 298, 302], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 76], "idv_column": 10, "apgr": [10, 29, 33, 35, 69, 78, 79, 92, 97, 109, 123, 126, 141, 142, 143, 148, 149, 207, 275, 279, 286, 288, 290, 296], "fa1": [10, 78, 79, 92, 148, 149, 275, 286, 288], "fa2": [10, 78, 79, 92, 148, 149, 275, 286], "example_model": 10, "dta": [10, 148, 286, 288, 290], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 18, 266, 284, 288, 302], "read_json": 10, "read": [10, 150, 151, 152, 224, 225, 230, 244, 245, 246, 249, 250, 251, 253, 266, 270, 275, 280, 284, 292, 293, 295, 300, 301], "set_column": 10, "col": 10, "exist": [10, 29, 35, 46, 47, 72, 75, 96, 98, 245, 246, 247, 266, 268, 270, 275, 283, 300], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 27, 275, 288], "recover": 12, "issu": [12, 21, 266, 271, 282, 302], "hashabl": 13, "level": [13, 17, 22, 26, 30, 31, 103, 134, 266, 268, 275, 282, 286, 288, 293, 298, 300], "variabilitylevel": 13, "parameter_nam": [13, 26, 90, 206, 208, 266, 288, 290], "definit": [13, 14, 18, 29, 58, 166, 167, 221, 266, 268, 273, 279, 284, 286, 300], "varianc": [13, 17, 22, 26, 56, 57, 60, 178, 211, 281, 286, 288, 300], "abstract": [13, 23, 28, 249, 253, 265, 267, 276, 282, 286], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 26], "name1": [13, 17, 22, 146], "name2": [13, 17, 22, 146], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 286, 288], "cov": [14, 15, 26, 34, 35, 36, 50, 57, 58, 60, 62, 63, 153, 166, 174, 175, 265, 266, 271, 278, 279, 288], "evalu": [14, 36, 80, 81, 82, 83, 84, 85, 174, 175, 243, 264, 266, 282, 293, 296, 299], "maximum_evalu": [14, 278], "laplac": [14, 36, 174, 175, 266, 268, 278], "isampl": [14, 36, 46, 174, 266, 278], "niter": [14, 36, 46, 174, 266, 278], "auto": [14, 15, 266, 278], "keep_every_nth_it": [14, 15, 266, 278], "residu": [14, 26, 85, 119, 220, 221, 241, 266, 297, 299, 300], "solver": [14, 185, 233, 266, 268, 300], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 46, 174, 300], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 70, 76, 250, 251, 268, 270, 271, 273, 276, 284, 286, 288, 292], "uncertainti": [14, 57, 58, 60, 165, 166, 167, 266, 268, 279, 287], "epsilon": [14, 26, 54, 55, 80, 81, 149, 178, 187, 194, 201, 212, 266, 268, 276], "calcul": [14, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 82, 95, 223, 264, 265, 266, 279, 281, 282, 283, 289, 301], "deriv": [14, 121, 266, 271, 273], "eta": [14, 26, 29, 37, 39, 54, 55, 56, 58, 73, 80, 81, 83, 143, 147, 148, 149, 152, 157, 158, 178, 200, 202, 203, 204, 266, 268, 276, 279, 281, 283, 286, 290, 296, 300, 301], "preserv": [14, 26, 284], "comput": [14, 271, 272, 273, 284], "sampl": [14, 26, 74, 164, 165, 166, 167, 279], "similar": [14, 264, 278, 284, 289, 297], "em": 14, "result": [14, 18, 26, 49, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 73, 80, 81, 82, 83, 84, 85, 165, 166, 167, 210, 211, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 250, 251, 253, 255, 258, 266, 269, 271, 282, 284, 290, 292, 293, 295, 301], "everi": [14, 275, 284], "nth": 14, "iter": [14, 15, 29, 57, 144, 164, 166, 266, 294, 297], "laplacian": 14, "solv": [14, 266], "advan": [14, 185, 266], "cvode": [14, 185, 268], "advan14": [14, 185, 268], "dgear": [14, 185, 268], "advan8": [14, 185, 268], "dverk": [14, 185, 268], "advan6": [14, 185, 268], "ida": [14, 185, 268], "advan15": [14, 185, 268], "lsoda": [14, 185, 268, 278], "advan13": [14, 185, 268, 288], "lsodi": [14, 185, 268, 278], "advan9": [14, 185, 268], "absolut": [14, 67, 266, 284], "toler": 14, "supported_method": [14, 278], "frozenset": 14, "bay": [14, 174, 175, 268], "imp": [14, 36, 174, 175, 233, 266, 268, 278], "impmap": [14, 36, 174, 175, 266, 268], "saem": [14, 36, 174, 175, 233, 266, 268], "supported_solv": [14, 278], "to_datafram": [15, 25, 248], "overview": [15, 248, 264, 268, 277, 298], "estimation_step": [15, 18, 34, 36, 46, 153, 156, 174, 175, 266], "doctest": [15, 271], "ellipsi": 15, "durat": [16, 189, 195], "mutual": [16, 283, 300], "exclus": [16, 284, 300], "d1": [16, 189, 195, 266], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 26, 39, 73, 200, 279, 283, 286, 301], "omega_cl": [17, 22, 26], "omega_v": [17, 26], "corr_cl_v": [17, 26], "omega_cl_v": [17, 26], "dist": [17, 22, 26, 266, 271], "iiv_cl": [17, 22, 26, 290], "iiv_v": [17, 26, 288], "itself": [17, 22, 284], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 26], "random_vari": [18, 73, 200, 286, 288, 302], "dependent_vari": [18, 266, 286], "y": [18, 25, 29, 69, 100, 121, 123, 141, 148, 149, 152, 155, 168, 170, 178, 187, 188, 190, 201, 212, 286, 288, 290], "observation_transform": [18, 266], "estimationstep": [18, 34, 36, 153, 174, 175, 266, 278], "modelfit_result": [18, 221, 243, 266], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 271, 286, 288, 290, 293], "map": [18, 32, 275], "discript": 18, "extens": [18, 245, 247, 275, 284, 286], "model_cod": [18, 266, 288], "modelfit": [18, 218, 236, 243, 245, 249, 250, 264, 266, 268, 301], "parent": [18, 241, 242, 255, 278], "randomvari": [18, 266], "likelihood": [18, 48, 49, 232, 238, 268, 297], "2ll": [18, 48, 49, 266], "log": [18, 35, 37, 49, 143, 168, 170, 172, 188, 266, 275, 279, 288], "record": [18, 80, 81, 82, 83, 84, 85, 86, 144, 160, 266, 271, 290], "would": [18, 31, 143, 264, 273, 279, 284, 288, 290, 293], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 266, 282, 290, 292, 293, 300], "parse_model_from_str": 18, "update_sourc": [18, 266, 290], "g": [18, 26, 69, 75, 158, 237, 266, 271, 275, 278, 279, 281, 283, 288, 289, 293, 297, 300], "dummypath": [18, 288], "write_fil": 18, "forc": [18, 26, 75, 166, 167, 210, 213, 214, 266, 268, 283, 284], "write": [18, 213, 214, 244, 266, 271, 273, 284, 292, 301], "necessari": [18, 271, 284], "msg": 20, "syntax": [20, 300], "normal": [22, 26, 31, 39, 59, 65, 143, 279, 283, 284], "init": [24, 25, 35, 44, 91, 180, 209, 211, 268, 279, 286], "inf": [24, 286], "param": [24, 268], "tvcl": [24, 29, 33, 37, 39, 69, 82, 123, 141, 142, 143, 148, 149, 157, 264, 279, 286, 288, 290], "005": 24, "boolean": [24, 25, 86, 90, 91, 164, 172, 178, 208, 209, 219, 220, 221, 275], "constrain": [24, 276, 286], "unfix": [24, 89, 90, 91, 180, 206, 208, 209, 266], "back": [24, 65, 266], "previou": [24, 26, 29, 40, 73, 98, 123, 176, 189, 192, 195, 230, 242, 258, 266, 268, 284, 289, 301], "less": 24, "greater": 24, "altern": [24, 203, 271, 284, 288], "constructor": [24, 266], "collect": [25, 26, 279, 284, 288, 300], "usual": [25, 271], "wai": [25, 127, 130, 131, 137, 201, 271, 275, 278, 284, 286, 288, 300, 302], "displai": [25, 77, 168, 279, 284, 288], "summar": [25, 240, 242, 243, 279, 285], "par1": 25, "par2": 25, "pset": 25, "fixed": [25, 89], "nonfix": 25, "set_fix": 25, "set_initial_estim": [25, 266], "eta_level": 26, "epsilon_level": 26, "act": [26, 173], "while": [26, 271, 288, 300, 302], "variabilityhierarchi": 26, "contin": 26, "hierarchi": [26, 30], "rv": [26, 73, 118, 162, 200, 286, 302], "normaldistribut": 26, "covariance_matrix": [26, 50, 57, 60, 62, 63, 166, 264, 266, 287], "nrv": 26, "variance_paramet": 26, "rv1": 26, "rv2": 26, "get_rvs_with_same_dist": 26, "join": [26, 200, 266, 269, 288], "ind": 26, "fill": 26, "name_templ": 26, "param_nam": 26, "taken": [26, 86, 92, 97, 205, 245, 275, 279], "remain": [26, 269, 284], "templat": [26, 35, 37, 72, 270, 288], "overrid": [26, 266, 270, 300], "dist1": 26, "dist2": 26, "_": [26, 242, 265, 279], "unjoin": 26, "nearest_valid_paramet": 26, "parameter_valu": 26, "small": 26, "parameters_sdcorr": 26, "sd": [26, 56, 288, 296, 299], "corr": [26, 52, 61, 296], "assum": [26, 41, 245, 266, 279, 284, 290], "var": [26, 58, 279], "replace_with_sympy_rv": 26, "stat": [26, 29, 300], "std": [26, 288], "rng": [26, 57, 60, 74, 165, 166, 167], "jointnormaldistribut": 26, "validate_paramet": 26, "seri": [26, 52, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 82, 83, 84, 85, 94, 98, 99, 101, 107, 112, 114, 146, 147, 166, 167, 168, 203, 211, 266, 287], "current": [26, 36, 37, 54, 55, 69, 70, 80, 81, 83, 84, 85, 104, 113, 117, 136, 141, 169, 174, 175, 189, 199, 201, 205, 218, 223, 232, 236, 249, 255, 265, 266, 268, 271, 273, 274, 279, 280, 282, 283, 284, 285, 286, 288, 289, 292, 293, 294, 296, 297, 298, 299, 300], "matric": [26, 58, 167, 266, 276, 287], "semidefinit": [26, 266, 276], "use_cach": 26, "symengin": [26, 276, 293], "cach": 26, "__version__": 27, "get_and_reset_index": 27, "attr": 27, "wrapper": [27, 266, 271, 276, 280, 302], "reset": [27, 205, 266], "facilit": 27, "multiindex": [27, 266], "to_csv": [27, 288], "save": [27, 244, 266, 288], "readabl": [27, 247, 249, 275, 284, 293], "print": [27, 66, 148, 149, 222, 266, 286, 288], "lzma": [27, 244], "serial": [27, 266, 275, 293], "compress": [27, 244], "unless": [27, 29, 284], "signific": [29, 68, 234, 235, 237, 266, 284, 298], "after_od": [29, 188], "s\u2081": [29, 33, 69, 123, 141, 142, 143, 149, 188, 286], "eps\u2081": [29, 69, 113, 123, 141, 149, 155, 168, 178, 187, 190, 201, 212, 286, 288], "ipr": [29, 69, 83, 123, 141, 148, 149, 187, 188, 266, 286, 287, 299], "ir": [29, 69, 123, 141, 148, 149, 188, 286], "iwr": [29, 69, 123, 141, 148, 149, 188, 286], "before_od": [29, 33, 35, 142, 143, 202, 203, 204], "btime": [29, 33, 69, 123, 141, 142, 143, 148, 149, 286], "tad": [29, 33, 45, 69, 123, 141, 142, 143, 148, 149, 266, 275, 286, 296], "ptvcl": [29, 33, 35, 44, 50, 51, 52, 53, 59, 61, 62, 63, 64, 67, 68, 69, 89, 90, 91, 120, 123, 141, 142, 143, 148, 149, 166, 167, 180, 181, 193, 198, 202, 203, 204, 206, 208, 209, 211, 218, 286, 287], "tvv": [29, 33, 69, 123, 141, 142, 143, 148, 149, 157, 264, 279, 286, 288, 290], "ptvv": [29, 33, 44, 50, 51, 52, 53, 59, 61, 62, 63, 64, 67, 68, 69, 120, 123, 141, 142, 143, 148, 149, 166, 167, 208, 209, 211, 218, 286, 287], "theta\u2083": [29, 33, 69, 123, 141, 142, 143, 149, 286], "eta\u2081": [29, 33, 69, 73, 113, 123, 141, 142, 143, 149, 200, 286, 288], "\u212f": [29, 33, 43, 69, 123, 141, 142, 143, 178, 286], "eta\u2082": [29, 33, 69, 73, 113, 123, 141, 142, 143, 149, 200, 286, 288], "whole": [29, 268, 275, 284, 300], "s1": [29, 134, 148, 286, 288, 290], "symbol_or_stat": 29, "direct_depend": 29, "direct": [29, 254, 273, 284, 298], "find_assign": [29, 37, 38, 39, 43, 155, 157, 168, 170, 178, 187, 190, 201, 212, 288], "find_assignment_index": 29, "full_express": [29, 35, 202, 203, 204], "expand": [29, 86], "full": [29, 73, 104, 113, 117, 191, 265, 266, 268, 279, 283, 284, 289, 296], "eta_1": [29, 35, 54, 56, 58, 73, 104, 118, 143, 165, 200, 202, 203, 204, 279, 286, 287, 288], "reassign": 29, "sypmpi": 29, "remove_symbol_definit": 29, "elsewher": 29, "longer": [29, 266], "make": [29, 69, 142, 155, 163, 164, 232, 266, 276, 283, 284, 286, 288, 289, 300, 302], "sure": [29, 163, 266, 284, 289, 302], "compartmen": 32, "func": [32, 252], "p": [33, 223, 232, 238, 264, 265, 266, 268, 273, 279, 288, 297, 298], "allometri": [33, 229, 230, 266, 300], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 46, 153, 156, 175, 266, 302], "add_estimation_step": [34, 46, 153, 156, 174, 175, 266], "remove_estimation_step": [34, 36, 46, 153, 174, 175], "append_estimation_step_opt": [34, 36, 153, 156, 174, 175, 266], "remove_covariance_step": [34, 36, 46, 156, 174, 175, 266], "set_evaluation_step": [34, 36, 46, 153, 156, 174], "allow_nest": [35, 266], "linear": [35, 128, 129, 138, 264, 265, 266, 276, 286, 293, 295], "lin": 35, "coveff": [35, 75], "median": [35, 57, 60, 264, 266, 288, 293], "001": [35, 68, 211, 288, 298], "equal": [35, 39, 164, 178, 268, 271, 288], "minimum": [35, 276], "000": [35, 287], "frac": [35, 168, 170, 265, 286, 288, 299], "min": [35, 168, 170, 264, 275], "piecewis": [35, 266], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 288], "theta2": [35, 288], "pow": [35, 288], "mai": [35, 281, 283, 284, 288, 289, 300], "abbrevi": [35, 37, 266, 268, 271, 290], "multipli": [35, 37, 178, 264, 268, 288], "alreadi": [35, 72, 173, 179, 197, 266, 268, 271, 283, 284, 288], "pop_clapgr": 35, "idx": [36, 46, 156, 174, 175, 302], "argument": [36, 80, 81, 83, 84, 85, 174, 216, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 252, 266, 268, 288, 300, 302], "pass": [36, 74, 174, 216, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 255, 284], "opt": [36, 46, 174, 270], "1000": [36, 46, 82, 174, 279], "len": [36, 46, 156, 160], "add_covariance_step": [36, 46, 153, 156, 174, 175, 266], "initial_estim": [37, 43], "09": [37, 43, 170, 178, 188, 273, 281, 288, 289, 290, 294], "eta_nam": [37, 39, 178, 268, 288], "prop": [37, 288], "logit": 37, "user": [37, 96, 266, 276, 281, 283, 284, 286, 287, 288, 289, 290], "remove_iiv": [37, 39, 43, 158, 266, 288, 290], "add_pk_iiv": [37, 39, 157, 158, 266, 289], "add_iov": [37, 43, 157, 158, 266, 288], "remove_iov": [37, 39, 43, 157, 266, 288], "pop_ka": [38, 44], "occ": [39, 235, 268, 273, 283], "disjoint": [39, 283], "accept": [39, 110, 111, 112, 268, 284], "explicit": [39, 266, 268, 269, 283, 300], "copi": [39, 115, 119, 120, 266, 281, 283, 284, 300], "add_iiv": [39, 43, 157, 158, 266, 288, 290], "set_transit_compart": [40, 159, 266, 288], "remove_lag_tim": [40, 266, 288], "drug_dvid": 41, "metabolit": 41, "unidirect": 41, "parameter": 42, "qpn": 42, "vpn": 42, "volumn": 42, "mathsf": [42, 161], "qp1": [42, 161, 266, 288], "vp1": [42, 161, 288], "cdot": [42, 161, 279, 288], "qp2": [42, 161, 266], "vp2": [42, 161], "peripheral1": [42, 161, 186], "v1": [42, 161, 186, 288], "v2": [42, 161, 186], "set_peripheral_compart": [42, 161, 266, 288], "remove_peripheral_compart": [42, 186, 266, 288], "Will": [43, 245, 246, 247], "pop_mat": [43, 288, 290], "eta_mat": 43, "004693": [44, 59, 120, 279, 286], "1000000": [44, 89, 90, 91, 120, 180, 181, 206, 209, 286, 288], "009160": [44, 120, 286], "theta_3": [44, 50, 51, 52, 53, 59, 61, 62, 63, 64, 67, 68, 120, 166, 167, 208, 209, 211, 218, 286, 287], "100000": [44, 120, 278, 286, 288], "99": [44, 120, 148, 211, 264, 266, 273, 286], "ivcl": [44, 50, 51, 52, 53, 59, 61, 62, 63, 64, 67, 68, 73, 115, 148, 149, 166, 167, 200, 209, 211, 218, 264, 279, 286, 287, 288, 290], "030963": [44, 115, 279, 286], "ivv": [44, 50, 51, 52, 53, 59, 61, 62, 63, 64, 67, 68, 73, 115, 148, 149, 166, 167, 200, 209, 211, 218, 264, 279, 286, 287, 288], "031128": [44, 115, 148, 211, 279, 286, 288, 290], "sigma_1_1": [44, 50, 51, 52, 53, 59, 61, 62, 63, 64, 68, 119, 166, 167, 209, 211, 218, 286, 287, 288], "013241": [44, 119, 148, 211, 218, 279, 286, 287, 288], "append": [46, 266], "increas": [47, 271], "until": [47, 243, 284, 302], "do": [47, 166, 264, 266, 268, 279, 284, 288, 290, 297, 302], "noth": [47, 160, 284], "next": [47, 266, 284, 289, 290, 297], "run2": [47, 184, 288], "run3": 47, "n_estimated_paramet": [48, 49], "fit": [48, 49, 147, 201, 222, 236, 241, 243, 249, 266, 284, 286, 297, 301, 302], "variat": 49, "n_random_paramet": 49, "n_individu": 49, "n_fixed_paramet": 49, "n_observ": 49, "n_individ": 49, "n_estimated_iiv_omega_paramet": 49, "load_example_modelfit_result": [49, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 80, 81, 82, 83, 84, 85, 165, 166, 167, 210, 211, 229, 230, 231, 232, 233, 234, 235, 237, 238, 266], "611": 49, "7071686183284": 49, "616": [49, 266, 287], "536606983396": 49, "610": 49, "7412809453149": 49, "594": 49, "431131169692": 49, "411510e": [50, 53, 62, 63, 287], "08": [50, 52, 53, 62, 63, 273, 287], "010000e": [50, 53, 62, 63, 287], "000002": [50, 52, 53, 62, 63, 287], "538630e": [50, 52, 53, 62, 63, 287], "07": [50, 51, 52, 53, 61, 62, 63, 64, 264, 273, 281, 283, 287, 296, 298], "178090e": [50, 53, 62, 63, 287], "233530e": [50, 53, 62, 63, 287], "04": [50, 51, 52, 53, 61, 62, 63, 64, 264, 273, 283, 287, 296, 298], "000804": [50, 52, 53, 62, 63, 273, 287], "000050": [50, 52, 53, 62, 63, 264, 287], "171840e": [50, 53, 62, 63, 287], "461760e": [50, 53, 62, 63, 287], "665010e": [50, 53, 62, 63, 287], "040250e": [50, 53, 62, 63, 287], "007016": [50, 52, 53, 62, 63, 287], "000108": [50, 52, 53, 62, 63, 287], "944800e": [50, 53, 62, 63, 287], "932950e": [50, 53, 62, 63, 287], "093430e": [50, 53, 62, 63, 287], "981380e": [50, 52, 53, 62, 63, 287], "000180": [50, 52, 53, 62, 63, 287], "856650e": [50, 53, 62, 63, 287], "867230e": [50, 53, 62, 63, 287], "000039": [50, 52, 53, 62, 63, 287], "000019": [50, 52, 53, 62, 63, 287], "589820e": [50, 52, 53, 62, 63, 287], "685650e": [50, 53, 62, 63, 287], "000029": [50, 52, 53, 62, 63, 287], "000005": [50, 52, 53, 62, 63, 287], "195640e": [50, 53, 62, 63, 287], "007099": [50, 51, 52, 61, 287], "094640": [50, 51, 52, 61, 287], "388059": [50, 51, 52, 61, 67], "097981": [50, 51, 52, 61, 287], "170820": [50, 51, 52, 61, 287], "356899": [50, 51, 52, 61, 67], "138062": [50, 51, 52, 61, 287], "356662": [50, 51, 52, 61, 67, 287], "238441": [50, 51, 52, 61], "096515": [50, 51, 52, 61], "062991": [50, 51, 52, 61, 287], "153616": [50, 51, 52, 61, 287], "185111": [50, 51, 52, 61, 287], "159170": [50, 51, 52, 61, 287], "027495": [50, 51, 52, 61, 287], "calculate_se_from_cov": [50, 51, 52, 53, 61, 62, 64, 266], "calculate_se_from_prec": [50, 51, 52, 53, 61, 62, 63], "precis": [50, 51, 52, 53, 61, 62, 63, 64, 266, 284], "calculate_cov_from_prec": [50, 51, 52, 61, 62, 63, 64], "calculate_cov_from_corrs": [50, 51, 53, 61, 62, 63, 64, 266], "calculate_prec_from_cov": [50, 51, 52, 53, 61, 63, 64], "calculate_prec_from_corrs": [50, 51, 52, 53, 62, 63, 64], "calculate_corr_from_prec": [50, 52, 53, 61, 62, 63, 64], "precision_matrix": [51, 53, 64, 287], "prec": [51, 53, 64], "995567e": [51, 53, 62, 64], "22660": [51, 53, 61, 62, 64, 287], "028196": [51, 53, 62, 64], "16057": [51, 53, 61, 62, 64, 287], "855248": [51, 53, 62, 64], "203511": [51, 53, 61, 62, 64, 287], "614428": [51, 53, 62, 64], "39474": [51, 53, 61, 62, 64, 287], "250514": [51, 53, 62, 64], "820118": [51, 53, 62, 64], "299536": [51, 53, 62, 64], "266003e": [51, 53, 62, 64], "2129": [51, 53, 61, 62, 64, 287], "904642": [51, 53, 62, 64], "260": [51, 53, 61, 62, 64, 287], "176234": [51, 53, 62, 64], "375": [51, 53, 61, 62, 64, 287], "266233": [51, 53, 62, 64], "2800": [51, 53, 61, 62, 64, 287], "816246": [51, 53, 62, 64], "7718": [51, 53, 61, 62, 64, 287], "769557": [51, 53, 62, 64], "605786e": [51, 53, 62, 64], "187": [51, 53, 61, 62, 64, 287], "038903": [51, 53, 62, 64], "177": [51, 53, 61, 62, 64, 266, 287, 298], "207683": [51, 53, 62, 64], "205": [51, 53, 61, 62, 64, 287], "808480": [51, 53, 62, 64], "2225": [51, 53, 61, 62, 64, 287, 288], "150449": [51, 53, 62, 64], "035116e": [51, 53, 62, 64], "7527": [51, 53, 61, 62, 64, 287], "530027": [51, 53, 62, 64], "2462": [51, 53, 61, 62, 64, 287], "974821": [51, 53, 62, 64], "9977": [51, 53, 61, 62, 64, 287], "488860": [51, 53, 62, 64], "947425e": [51, 53, 62, 64], "22343": [51, 53, 61, 62, 64, 287], "198618": [51, 53, 62, 64], "9370": [51, 53, 61, 62, 64, 287], "758371": [51, 53, 62, 64], "201183e": [51, 53, 62, 64], "249847": [51, 53, 62, 64, 287], "177845": [51, 53, 62, 64], "calculate_corr_from_cov": [51, 52, 53, 61, 62, 63, 64, 266], "se": [52, 61, 272, 273, 287], "correlation_matrix": [52, 61, 67, 287], "standard_error": [52, 61, 287], "411512e": 52, "009998e": 52, "178111e": 52, "233518e": 52, "171834e": 52, "461762e": 52, "665011e": 52, "040245e": 52, "944801e": 52, "932957e": 52, "093431e": 52, "856651e": 52, "867245e": 52, "685661e": 52, "195664e": 52, "gradient": [54, 55, 80, 81, 266], "pheno_linear": [54, 55, 80, 81, 83, 84, 85, 104, 113, 117, 138, 141, 218, 223], "d_eps1": [54, 113], "d_epseta1_1": [54, 113], "oeta1": [54, 104, 117], "d_epseta1_2": [54, 113], "eta_2": [54, 56, 58, 73, 104, 165, 200, 287, 288], "oeta2": [54, 104, 117], "calculate_eta_gradient_express": [54, 266], "d_eta1": [55, 104, 113, 117], "d_eta2": [55, 104, 113, 117], "calculate_epsilon_gradient_express": [55, 266], "parameter_estim": [56, 57, 58, 60, 68, 82, 84, 85, 147, 166, 167, 211, 218, 264, 266, 286, 287, 288], "individual_estim": [56, 73, 80, 81, 83, 147, 165, 210, 266, 287, 288], "shrinkag": [56, 58, 301], "deviat": [56, 212, 264, 279, 285, 287, 296, 299], "pe": [56, 57, 58, 60, 82, 84, 166, 167, 288], "ie": [56, 165, 210, 288], "720481": 56, "240295": 56, "471305": 56, "128389": 56, "calculate_individual_shrinkag": [56, 266], "expr_or_expr": 57, "expect": [57, 60, 269, 284, 296], "arbitrari": [57, 60], "solut": [57, 199], "th": [57, 265, 279], "95": [57, 264, 279], "percentil": [57, 264, 279], "previous": [57, 60, 145, 147, 266, 290], "seed": [57, 60, 74, 165, 167, 268], "create_rng": [57, 60, 165, 166, 167], "k": [57, 265, 266, 271, 273, 279], "stderr": [57, 60, 264, 300], "p5": [57, 60, 279], "004234": [57, 60], "001138": [57, 60], "004907": [57, 60], "001247": [57, 60], "p95": [57, 60, 279], "individual_estimates_covari": [58, 165, 266, 287], "ieta_shr": 58, "847789": 58, "256473": 58, "796643": 58, "210669": 58, "755025": 58, "226957": 58, "764541": 58, "216405": 58, "816192": 58, "203974": 58, "778108": 58, "210992": 58, "659420": 58, "236875": 58, "668551": 58, "240097": 58, "260056": 58, "200374": 58, "725190": 58, "226563": 58, "972110": 58, "421852": 58, "249640": 58, "254119": 58, "730294": 58, "364932": 58, "165785": 58, "194464": 58, "813399": 58, "313554": 58, "797328": 58, "213211": 58, "769059": 58, "278079": 58, "098506": 58, "176778": 58, "749022": 58, "235386": 58, "742181": 58, "222932": 58, "317956": 58, "264473": 58, "943950": 58, "232732": 58, "707183": 58, "259077": 58, "553787": 58, "247717": 58, "826349": 58, "114302": 58, "854777": 58, "341384": 58, "820829": 58, "263235": 58, "999942": 58, "319986": 58, "967084": 58, "432760": 58, "404773": 58, "325215": 58, "999980": 58, "318421": 58, "925283": 58, "167667": 58, "913706": 58, "242106": 58, "875554": 58, "249197": 58, "35": [58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 297, 299], "849135": 58, "294294": 58, "172206": [58, 299], "246422": 58, "747380": 58, "278340": 58, "187440": 58, "231249": 58, "237805": 58, "254485": 58, "999925": 58, "189793": 58, "41": [58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 296, 299], "941906": 58, "170998": 58, "42": [58, 60, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 289, 298, 299], "923801": 58, "244046": 58, "43": [58, 92, 97, 112, 221, 264, 265, 273, 275, 278, 285, 287, 298, 299], "999928": 58, "320403": 58, "237637": 58, "260453": 58, "869540": 58, "194503": 58, "46": [58, 92, 97, 112, 221, 264, 265, 275, 278, 285, 287, 299], "999949": 58, "319750": 58, "983782": 58, "393234": 58, "48": [58, 92, 97, 99, 112, 221, 264, 265, 273, 275, 285, 287, 297, 298, 299], "698267": 58, "169337": 58, "49": [58, 92, 97, 112, 221, 264, 265, 275, 285, 287, 299], "776674": 58, "214962": 58, "50": [58, 92, 97, 112, 221, 264, 265, 275, 285, 287, 289, 294, 296, 299], "688847": 58, "192608": 58, "822213": 58, "202534": 58, "511489": 58, "273601": 58, "53": [58, 92, 97, 112, 221, 264, 265, 273, 275, 285, 287, 294, 296, 299], "964757": 58, "223448": 58, "762153": 58, "181648": 58, "965657": 58, "435741": 58, "995278": 58, "354798": 58, "813382": 58, "263372": 58, "727295": 58, "232867": 58, "738777": 58, "224742": 58, "calculate_eta_shrinkag": [58, 266, 288], "ucp": [59, 65], "ucpscal": [59, 65], "calculate_ucp_scal": [59, 266], "00916": [59, 148, 211, 279, 286, 288, 290], "0309626": [59, 148, 211, 286, 288, 290], "031127999999999996": 59, "013241000000000001": 59, "convers": [59, 266, 282], "pharmacokinet": [60, 201, 275], "pre": 60, "t_half_elim": 60, "173": 60, "337164": 60, "1769": 60, "493756": 60, "843398": 60, "149": [60, 283], "567842": 60, "1317": [60, 273], "474199": 60, "233070": 60, "k_e": 60, "calculate_individual_parameter_statist": [60, 266, 288], "995565e": 61, "041788": 61, "848052": 61, "410335": 61, "240358": 61, "820116": [61, 287], "179011": 61, "266004e": 61, "908225": 61, "176399": 61, "266263": 61, "818557": 61, "757955": 61, "605785e": 61, "038825": 61, "207512": 61, "808434": 61, "144772": 61, "035114e": 61, "518562": 61, "972906": 61, "457873": 61, "947424e": 61, "197906": 61, "736254": 61, "201162e": 61, "249846": 61, "006431": 61, "000210": [63, 64, 287], "026895": [63, 64, 287], "083762": [63, 64, 287], "013415": [63, 64, 287], "007477": [63, 64, 287], "002279": [63, 64, 287], "unconstrain": 65, "calculate_parameters_from_ucp": [65, 266], "verbos": 66, "consist": [66, 273, 284, 300], "across": [66, 266, 284], "consol": 66, "els": [66, 266], "fail": [66, 266, 284, 293], "cor": [67, 271], "highli": 67, "high": [67, 275, 276, 293], "zero_limit": 68, "significant_digit": [68, 266], "close": [68, 211, 266, 279, 284, 285], "distanc": [68, 76, 299], "logic": 68, "cleanup": 69, "what": [69, 284, 290, 293], "inlin": 69, "clean": 69, "might": [69, 284, 288, 293, 300, 302], "certain": [69, 100, 144, 266, 283, 284, 288, 292, 300], "requir": [69, 266, 268, 273, 280, 284, 296], "to_format": 70, "inplac": 70, "nlmixr": [70, 236, 266, 271, 282], "rxode": [70, 266, 282], "underli": [70, 108, 148, 286], "converted_model": 70, "applic": [71, 244, 258, 284, 293, 300], "config": [72, 96, 266, 271, 291], "configur": [72, 266, 290, 301], "overwritten": [72, 245], "block": [73, 157, 187, 266, 268, 279, 281, 288, 289, 296, 300], "iiv_cl_iiv_v": [73, 200], "split_joint_distribut": [73, 266, 288], "through": [74, 268, 269, 270, 273, 284, 286, 300], "numpi": [74, 275, 276, 286], "standard_norm": 74, "5532605888887387": 74, "stem": 75, "force_numb": 75, "coveff1": 75, "temp": 75, "temp1": 75, "cl1": 75, "df": [76, 81, 242, 266, 275, 294, 296], "date_column": 76, "deidentifi": [76, 266], "year": [76, 266, 271, 284], "earliest": 76, "maintain": [76, 269, 271, 272, 282, 284, 292, 293], "leap": 76, "1901": 76, "1902": 76, "1903": 76, "1904": 76, "closest": 76, "preceed": 76, "ordinari": [77, 286], "differenti": [77, 286], "odedisplay": 77, "display": 77, "dt": 77, "column_nam": [78, 207], "mark": [78, 79, 86, 207, 268, 284], "drop_dropped_column": [78, 207, 266], "undrop_column": [78, 266], "undrop": [78, 207], "drop_column": [79, 207, 266], "them": [79, 164, 269, 281, 283, 284, 289, 290, 297, 300], "dy": 80, "deps_1": 80, "771084": [80, 83], "881859": [80, 83], "441728": [80, 83], "113050": [80, 83], "783055": [80, 83], "150": [80, 81, 83, 84, 85, 287], "375041": [80, 83], "833395": [80, 83], "152": [80, 81, 83, 84, 85], "876707": [80, 83], "153": [80, 81, 83, 84, 85, 274], "905095": [80, 83], "154": [80, 81, 83, 84, 85], "099690": [80, 83], "155": [80, 81, 83, 84, 85, 111, 114, 275, 287], "evaluate_eta_gradi": [80, 266], "deta_1": 81, "deta_2": 81, "159537": 81, "609116": 81, "325893": 81, "562289": 81, "104417": 81, "346161": 81, "452951": 81, "682310": 81, "838840": 81, "981836": 81, "424423": 81, "973013": 81, "497185": 81, "344797": 81, "198714": 81, "697161": 81, "987731": 81, "941806": 81, "817067": 81, "309945": 81, "evaluate_epsilon_gradi": [81, 266], "573770": 82, "739": [82, 98, 275], "165105": 82, "741": [82, 98, 264, 275], "742": [82, 98, 264, 275], "743": [82, 98, 275], "evaluate_population_predict": [83, 266], "529739": 84, "179910": [84, 285], "688648": 84, "798916": 84, "023225": 84, "459036": 84, "223295": 84, "217288": 84, "472888": 84, "226455": 84, "evaluate_individual_predict": [84, 266], "wre": [85, 266], "313859": 85, "675721": 85, "544240": 85, "921720": 85, "517677": 85, "223935": 85, "053334": 85, "007023": 85, "931252": 85, "778389": 85, "flag": [86, 266, 299, 300], "origin": [86, 213, 245, 249, 250, 264, 265, 269, 271, 279, 284, 299], "care": [86, 245], "00469307": [89, 90, 91, 148, 181, 193, 206, 211, 286, 288, 290], "fix_paramet": [89, 91, 208, 209, 288], "unfix_paramat": [89, 90, 91, 209], "fix_paramaters_to": [89, 209], "unfix_paramaters_to": [89, 90, 91, 180, 208], "fix_or_unfix_paramet": [90, 91, 208, 209], "fix_parameters_to": [90, 180, 208, 288], "baselin": [92, 97, 140, 266, 279], "present": [94, 101, 268, 275, 279, 284, 300], "extract": [94, 101, 266, 268, 282], "directli": [95, 245, 249, 250, 266, 268, 275, 276, 284, 286, 288, 293, 300], "cmax": [95, 266, 275], "tmax": [95, 266, 275], "cmin": [95, 266, 275], "tmin": [95, 266, 275], "doseid": [95, 98, 275], "589": [95, 99, 275], "get_baselin": [97, 266], "set_covari": 97, "period": [98, 275], "108": [99, 275, 287], "132": [99, 275, 287, 294], "144": [99, 275, 287, 298], "retriev": [102, 103, 110, 111, 116, 118, 227, 228, 245, 249, 250, 266, 286, 287, 288, 301], "get_pk_paramet": [103, 118, 266], "get_rv_paramet": [103, 116, 134, 266], "has_random_effect": [103, 118, 266], "opr": [104, 113, 117], "get_population_prediction_express": [104, 266], "epress": [104, 117], "condit": [105, 179, 266, 279, 284, 297], "item": [109, 270, 284], "activ": [110, 111, 112, 284], "get_number_of_observ": [110, 114, 266, 275], "get_number_of_observations_per_individu": [110, 111, 114, 266], "total": [111, 266, 275], "get_number_of_individu": [111, 112, 266, 275], "observation_count": 112, "accord": [113, 266, 284, 289, 300], "oeta\u2082": 113, "oeta\u2081": 113, "135": [114, 275, 287, 288, 294, 296], "131": [114, 275, 287], "146": [114, 273, 275, 283, 287], "get_theta": [115, 119, 266], "get_sigma": [115, 120, 266], "get_individual_paramet": [116, 118, 134, 266], "get_individual_prediction_express": [117, 266], "get_omega": [119, 120, 266], "structur": [120, 230, 247, 266, 268, 275, 283, 286, 288, 289, 300], "00": [120, 279, 286, 287, 294, 296, 298, 300], "olumn": 121, "milligram": [121, 275], "liter": [121, 275], "kilogram": [121, 275], "named_subscript": 123, "greek": 123, "subscript": 123, "cleanup_model": [123, 266], "\u03b8\u2081": 123, "\u03b8\u2082": 123, "\u03b8\u2083": 123, "\u03b7\u2081": 123, "\u03b7\u2082": 123, "\u03b5\u2081": 123, "mani": [124, 125, 133, 166, 266, 288], "has_proportional_error_model": [124, 125, 135, 266], "has_combined_error_model": [124, 133, 135, 266], "has_weighted_error_model": [124, 125, 133, 266], "has_additive_error_model": [125, 133, 135, 266], "reli": [127, 130, 131, 137, 284], "heurist": [127, 130, 131, 137], "abl": [127, 130, 131, 137, 266, 278, 280, 288, 292, 293], "detect": [127, 130, 131, 137, 266, 280, 286, 292, 302], "has_od": [128, 129, 266], "has_linear_odes_with_real_eigenvalu": [128, 132, 266], "eigenvalu": 129, "has_linear_od": [129, 132, 266], "micha": [130, 131, 182, 183, 268, 300], "menten": [130, 131, 182, 183, 268, 300], "set_michaelis_menten_elimin": [130, 177, 183, 196, 266, 288], "michali": 131, "set_mixed_mm_fo_elimin": [131, 288], "set_zero_order_elimin": [137, 177, 182, 183, 266, 288], "determin": [138, 139, 164, 281, 283, 284, 289], "model1": [138, 266], "model2": 138, "constraint": [139, 181, 193, 198, 206, 208, 266, 276, 293], "get_covariate_baselin": [140, 266], "load": [141, 218], "statment": 142, "mu": [143, 279], "referenc": [143, 288], "theta_1": [143, 286], "mu_1": [143, 279], "\u03bc\u2081": 143, "\u03bc\u2082": 143, "dataset_or_model": [144, 164], "name_pattern": [144, 164], "omitted_": 144, "omiss": 144, "omit": [144, 268, 273, 288], "placehold": [144, 164], "plot": [145, 146, 147, 266, 279, 285, 293], "alt": [145, 146, 147, 264, 279, 285], "chart": [145, 146, 147, 264], "iofv1": 146, "iofv2": 146, "against": [146, 284], "iofv": [146, 242, 264, 266, 285, 287, 299], "scatterplot": 146, "problem": [148, 152, 266, 273, 278, 281, 283, 284, 285, 286, 288, 290], "subroutin": [148, 266, 284, 286, 288, 290], "advan1": [148, 286, 288, 290], "trans2": [148, 286, 288, 290], "IF": [148, 266, 284, 286], "gt": [148, 286], "lt": [148, 286], "uncondit": [148, 286], "cwre": [148, 241, 242, 286, 287, 296, 297], "npde": [148, 286], "noappend": [148, 286], "noprint": [148, 286], "onehead": [148, 286], "sigma\u2081": [149, 286, 288], "\u2081": [149, 286, 288], "home": [151, 266, 286], "run1": [151, 228], "mod": [151, 245, 247, 266, 268, 275, 286, 287, 288, 300], "read_model_from_databas": [151, 152, 266], "databas": [151, 152, 226, 245, 246, 247, 249, 250, 251, 253, 258, 263, 266], "read_model_from_str": [151, 266, 288], "err": [152, 288], "has_covariate_effect": [154, 266], "unrun": 155, "to_remov": [157, 158, 268], "eta_iov_1_1": [158, 288], "add_lag_tim": [159, 192, 266, 288], "uloq": 160, "736": 160, "add_peripheral_compart": [161, 186, 266, 288], "new_nam": [163, 184], "renam": [163, 266], "clash": [163, 245, 247], "occur": [163, 278, 281, 283, 284], "resampl": [164, 231], "stratifi": [164, 268], "sample_s": [164, 268], "resample_": 164, "randomli": [164, 167], "renumb": [164, 268], "upward": 164, "stratif": [164, 268], "valueerror": 164, "rais": [164, 211, 266], "strata": 164, "suppli": [164, 281, 283, 289, 296], "control": [164, 271, 283, 284, 286], "pattern": [164, 284], "samples_per_id": 165, "pool": [165, 281], "iec": 165, "127941": 165, "037273": 165, "065492": 165, "182851": 165, "263323": 165, "265849": 165, "295883": 165, "060346": 165, "012108": 165, "219967": 165, "034279": 165, "040988": 165, "187879": 165, "143184": 165, "088845": 165, "034655": 165, "187779": 165, "014214": 165, "019953": 165, "151151": 165, "sample_parameters_from_covariance_matrix": [165, 167, 266], "sample_parameters_uniformli": [165, 166, 266], "uniform": [165, 166, 167], "force_posdef_sampl": [166, 167, 268], "force_posdef_covmatrix": [166, 268], "never": [166, 289], "005069": 166, "974989": 166, "204629": 166, "024756": 166, "012088": 166, "012943": 166, "004690": 166, "958431": 166, "233231": 166, "038866": 166, "029000": 166, "012516": 166, "004902": 166, "950778": 166, "128388": 166, "019020": 166, "023866": 166, "013413": 166, "sample_individual_estim": [166, 167, 266], "estiat": [166, 167], "reject": 167, "004878": 167, "908216": 167, "149441": 167, "029179": 167, "025472": 167, "012947": 167, "004828": 167, "014444": 167, "149958": 167, "028853": 167, "027653": 167, "013348": 167, "004347": 167, "053837": 167, "165804": 167, "028465": 167, "026798": 167, "013727": 167, "data_tran": [168, 170, 188, 266, 288], "series_term": 168, "\u00b2": [168, 170], "epsilon_1": [168, 170, 188], "expans": [168, 288], "approxim": [168, 284], "\u03b5\u2090": [168, 170, 288], "set_proportional_error_model": [168, 170, 266, 288], "set_combined_error_model": [168, 188, 266, 288, 297], "epsilon_2": 170, "remove_error_model": [170, 188, 266, 288], "\u03b5\u209a": [170, 188, 288], "set_additive_error_model": [170, 188, 266, 288], "fix_to_log": 172, "dynam": [172, 255, 284], "lambda": [172, 202, 203, 294, 296], "zeta": [172, 294, 296], "emul": 172, "set_bolus_order_absorpt": [176, 189, 195], "list_of_ep": [178, 187], "same_eta": [178, 268], "chosen": [178, 266, 281, 288, 300], "eta_rv1": [178, 288], "set_power_on_ruv": [178, 266, 288, 297], "get_initial_condit": [179, 266], "set_upper_bound": [181, 206], "unconstrain_paramet": [181, 193, 208], "clmm": [182, 183, 196, 288], "km": [182, 183, 196, 266, 288], "set_first_order_elimin": [182, 183, 196, 266, 288], "prefer": [185, 284], "q2": 186, "q3": 186, "v3": 186, "peripheral2": 186, "lower_limit": 187, "zero_protect": [187, 188, 266], "autodetect": 187, "protect": [187, 188, 266, 284], "power\u2081": 187, "set_iiv_on_ruv": [187, 266, 288, 297], "225e": 188, "ipredadj": 188, "sequenti": [189, 266, 268, 289, 300], "quantil": [190, 264, 266], "time_vari": [190, 296, 297], "target": [191, 298], "mediat": 191, "disposit": 191, "tmdd": 191, "keep_depot": [192, 266], "transit1": [192, 288], "transit2": [192, 288], "k23": 192, "transit3": [192, 288], "k34": 192, "k40": 192, "set_lower_bound": [193, 206], "use_thetas_for_error_stdev": [194, 266, 288], "smallest": [196, 275], "get_zero_order_input": [197, 266], "simplifi": [198, 266, 267, 276, 293], "ab": [198, 203, 268, 288], "analyt": 199, "becom": [200, 266, 268, 293], "create_joint_distribut": [200, 266, 288], "m4": 201, "m1": [201, 266, 298], "m3": 201, "beal": 201, "sl": 201, "pharmacodyn": 201, "2001": 201, "oct": 201, "481": 201, "504": 201, "doi": [201, 203, 279, 297], "1023": 201, "1012299115260": 201, "erratum": 201, "2002": 201, "jun": 201, "309": 201, "pmid": 201, "11768292": 201, "cumd": 201, "cumdz": 201, "remove_loq_data": [201, 266], "list_of_eta": [202, 203, 204], "boxcox": [202, 266], "lambda1": [202, 203, 288], "transform_etas_tdist": [202, 203, 266, 288], "transform_etas_john_drap": [202, 204, 266, 288], "john": [203, 266, 268], "draper": [203, 266, 268], "spelect": 203, "1980": 203, "famili": [203, 284], "journal": [203, 297], "royal": 203, "societi": 203, "190": [203, 294], "197": 203, "2307": 203, "2986305": 203, "transform_etas_boxcox": [203, 204, 266, 288], "degre": [204, 296], "freedom": [204, 284, 296], "df1": [204, 288], "translat": [205, 266], "hour": [205, 275], "caution": 205, "account": 205, "unfix_paramet": [206, 266, 288], "had": [210, 284], "move_est_close_to_bound": 211, "00469555": 211, "984258": [211, 218, 287], "15892": 211, "0293508": [211, 286], "027906": [211, 218, 286, 287], "sd_eps_1": [212, 288], "set_weighted_error_model": [212, 266, 288], "whose": [213, 284], "suffix": 213, "overwrit": [213, 214], "newdataset": 213, "report": [215, 266, 271, 282, 293], "recalcul": 216, "frem_dir1": 216, "read_result": [216, 227, 266, 300], "model_or_model": [217, 236], "run_tool": [217, 230, 241, 266], "004696": [218, 287], "158920": [218, 287], "029351": [218, 287], "machin": [219, 220, 221, 245, 249, 250, 275, 280, 284], "learn": [219, 220, 221, 280], "threshold": [219, 220, 221, 268, 273], "signal": [219, 220, 285], "raw": [219, 220, 221, 242, 264, 266, 275], "delta": [219, 264, 266, 285], "tell": [219, 221, 284], "predict_influential_outli": [219, 221, 266], "predict_outli": [219, 220, 266], "outlier_cutoff": 220, "influential_cutoff": 220, "singal": [220, 221], "influential_outli": 220, "predict_influential_individu": [220, 221, 266], "simev": [221, 266, 295], "281443": 221, "057392": 221, "119105": 221, "846849": 221, "600540": 221, "014008": 221, "750734": 221, "247175": 221, "117002": 221, "835389": 221, "529582": 221, "035670": 221, "292333": 221, "303278": 221, "565949": 221, "078192": 221, "291295": 221, "466421": 221, "402343": 221, "699996": 221, "567987": 221, "526776": 221, "303918": 221, "177588": 221, "272142": 221, "390000": 221, "775876": 221, "501528": 221, "700951": 221, "352599": 221, "294196": 221, "744014": 221, "215364": [221, 298], "208691": 221, "713130": 221, "300293": 221, "810736": 221, "459877": 221, "675125": 221, "563835": 221, "526945": 221, "449199": 221, "720714": 221, "792248": 221, "860923": 221, "731858": 221, "247131": 221, "894190": 221, "282737": 221, "153398": 221, "200546": 221, "902774": 221, "586427": 221, "183329": 221, "036930": 221, "639868": 221, "765279": 221, "209665": 221, "225693": 221, "errors_allow": [223, 266], "bic_typ": 223, "rounding_error": 223, "maxevals_exceed": 223, "lrt": 223, "denot": [223, 279, 288], "model_1": [223, 279], "model_2": [223, 279], "extern": [224, 271, 275, 276, 280, 288, 292, 293], "create_result": [225, 266, 288], "resum": [226, 230, 258, 268, 300], "resmod_dir1": 226, "retrieve_model": [227, 245, 249, 250, 266, 300], "tooldatabas": [228, 246, 251, 255, 258], "modeldatabas": [228, 245, 247, 253], "tooldir_path": 228, "retrieve_final_model": [228, 266], "allometryresult": 229, "lloq_method": [230, 268], "lloq_limit": [230, 268], "amd": [230, 266, 300], "reult": 230, "search": [230, 232, 237, 266, 268, 273, 283, 293, 300], "transform_blq": [230, 266, 268], "runord": [230, 268], "compon": [230, 268, 276, 280, 284, 296], "run_iiv": [230, 266], "bootstrap": [231, 266, 295], "bootstrapresult": [231, 266], "500": 231, "try": [232, 268, 278, 293, 302], "mode": [232, 233, 234, 235, 237, 266, 279, 284], "covsearchresult": 232, "estmethod": [233, 266, 300], "exhaust": [233, 237, 266], "exhaustive_with_upd": [233, 278], "exhaustive_only_ev": [233, 266, 278], "estmethodresult": 233, "reduc": [233, 266, 278, 298], "no_add": [234, 237, 266, 281, 289], "iivsearch": [234, 266, 300], "brute_force_no_of_eta": [234, 281], "brute_force_block_structur": [234, 281], "strategi": [234, 237, 266, 281, 289], "add_diagon": [234, 237, 266, 281, 289], "iivsearchresult": 234, "iovsearch": [235, 266, 300], "iovsearchresult": 235, "modelsearchresult": 237, "bin": [238, 296, 302], "attempt": [238, 273, 284], "ruvsearchresult": 238, "arg": 239, "kei": [241, 249, 284, 297], "fit_result": 241, "mathrm": [242, 299], "veebar": 242, "least": [242, 284, 300], "outli": [242, 299], "criteria": [242, 266, 268, 273, 281, 283, 289, 297], "include_all_estimation_step": 243, "runtim": [243, 266, 278], "wasn": [243, 266], "estmat": 243, "586": [243, 285, 287], "276056": [243, 285], "again": [244, 288, 302], "Not": [244, 275, 284], "file_extens": [245, 247], "nontransactionalmodeldatabas": [245, 250], "implement": [245, 247, 249, 250, 284, 286, 293, 300], "local": [245, 246, 247, 249, 250, 251, 253, 271, 281, 284], "store": [245, 246, 247, 249, 250, 251, 253, 266, 290, 300], "modelnam": 245, "recommend": [245, 302], "localmodeldirectorydatabas": 245, "retrieve_fil": [245, 249, 250], "filesystem": [245, 249, 250], "model_nam": [245, 247, 249, 250, 279], "retrieve_local_fil": [245, 249, 250], "destination_path": [245, 249, 250], "retrieve_modelfit_result": [245, 249, 250], "store_local_fil": [245, 246, 249, 250, 251, 253], "new_filenam": [245, 249, 250], "store_metadata": [245, 246, 249, 250, 251, 253], "store_model": [245, 249, 250], "store_modelfit_result": [245, 249, 250], "toolnam": [246, 251, 253, 300], "exist_ok": 246, "read_metadata": [246, 251, 253], "source_path": [246, 251, 253], "store_result": [246, 251, 253], "transactionalmodeldatabas": 247, "subdirectori": [247, 300], "list_model": 247, "snapshot": [247, 249], "context": [247, 249, 284, 293], "transact": [247, 249, 284], "writabl": [247, 249], "timestamp": 248, "log_error": 248, "log_warn": 248, "abc": [249, 253], "baseclass": 249, "primari": 249, "center": 249, "around": [249, 269], "belong": 249, "dummi": [250, 251], "anyth": [250, 251, 271, 281, 284], "task_input": 252, "model_databas": 253, "task": [254, 288, 292, 293], "acycl": 254, "node": [254, 255], "edg": 254, "wf": 255, "unique_nam": 255, "db": 255, "dask": [255, 266, 293], "whatev": [255, 284], "alia": [256, 257], "localdirectorydatabas": [256, 263], "localdirectorytooldatabas": [257, 263, 300], "dispatch": [258, 263, 266, 300], "execut": [258, 266, 284], "executiondispatch": 258, "default_dispatch": 263, "local_dask": [263, 300], "default_model_databas": 263, "default_tool_databas": 263, "psn": [264, 265, 266, 268, 274, 279, 285, 294, 296, 298, 299, 300, 301], "parameter_statist": 264, "bia": [264, 266], "rse": [264, 287], "divid": [264, 268, 290], "005856": 264, "005820": 264, "000038": 264, "000487": 264, "083167": 264, "455435": 264, "443165": 264, "009885": 264, "099305": 264, "068231": 264, "141376": 264, "109797": 264, "030323": 264, "114986": 264, "813337": 264, "195880": 264, "195844": 264, "005646": 264, "046548": 264, "237634": 264, "015546": 264, "015112": 264, "000872": 264, "003434": 264, "220871": 264, "parameter_distribut": 264, "lowest": [264, 279], "highest": [264, 266, 279, 290], "interpol": 264, "fall": [264, 266], "x_0": 264, "x_1": 264, "np": [264, 275, 286], "004762": 264, "004767": [264, 273], "004805": 264, "004974": 264, "005120": 264, "211220": 264, "214364": 264, "242657": 264, "290449": 264, "307106": 264, "000011": 264, "012961": 264, "100104": 264, "100376": 264, "102825": 264, "116900": 264, "125456": 264, "007812": 264, "007857": 264, "008261": 264, "009741": 264, "011116": 264, "97": [264, 273], "006669": 264, "006685": 264, "007429": 264, "007593": 264, "007612": 264, "613679": 264, "646879": 264, "726604": 264, "730551": 264, "730990": 264, "338957": 264, "371005": 264, "536153": 264, "545316": 264, "546334": 264, "281203": 264, "300874": 264, "306057": 264, "306101": 264, "306106": 264, "021677": 264, "023708": 264, "025429": 264, "026581": 264, "026710": 264, "parameter_estimates_histogram": 264, "histogram": [264, 266], "repeatchart": 264, "005298": 264, "30730": 264, "074931": 264, "136423": 264, "011374": 264, "006048": 264, "38692": 264, "029844": 264, "189763": 264, "019143": 264, "005624": 264, "53224": 264, "118806": 264, "219550": 264, "019831": 264, "005771": [264, 273], "40115": 264, "034322": 264, "150905": 264, "012287": 264, "005933": 264, "42119": 264, "074050": 264, "171158": 264, "017394": 264, "005275": 264, "59087": 264, "289793": 264, "248009": 264, "016396": 264, "005847": 264, "44711": 264, "109860": 264, "206296": 264, "016346": 264, "005939": 264, "52688": 264, "040057": 264, "210552": 264, "013631": 264, "005998": 264, "41948": 264, "192046": 264, "175269": 264, "013485": 264, "005479": 264, "43956": 264, "109733": 264, "197253": 264, "011771": 264, "ofv_statist": 264, "bootstrap_bootdata_ofv": 264, "original_bootdata_ofv": 264, "sum": [264, 274], "bootstrap_origdata_ofv": 264, "boostrap": 264, "original_origdata_ofv": 264, "delta_bootdata": 264, "delta_origdata": 264, "722": 264, "220925": 264, "386171": 264, "134966": 264, "245796": 264, "929008": 264, "620085": 264, "523805": 264, "737": 264, "632473": 264, "951710": 264, "024871": 264, "110934": 264, "218525": 264, "629078": 264, "737746": 264, "ofv_distribut": 264, "parameter_distriut": 264, "601": 264, "007583": 264, "602": 264, "266529": 264, "613": 264, "597036": 264, "641": 264, "950291": 264, "621": 264, "273905": 264, "622": 264, "073513": 264, "629": 264, "269987": 264, "806391": 264, "915431": 264, "955989": 264, "731": 264, "321004": 264, "879050": 264, "021463": 264, "059207": 264, "398901": 264, "299364": 264, "020705": 264, "061262": 264, "426277": 264, "984323": 264, "879224": 264, "788": 264, "101562": 264, "803": 264, "869362": 264, "661": 264, "714778": 264, "121734": 264, "810": [264, 287], "417314": 264, "732": 264, "165644": 264, "757": 264, "877092": 264, "369737": 264, "671690": 264, "375800": 264, "162811": 264, "270917": 264, "982365": 264, "475010": 264, "828": 264, "178008": 264, "839": 264, "691272": 264, "840": [264, 294], "970524": 264, "836": 264, "395339": 264, "846": 264, "981350": 264, "848": 264, "157573": 264, "859": 264, "964343": 264, "893": [264, 281], "228440": 264, "896": [264, 279], "924451": 264, "443675": 264, "246668": 264, "558111": 264, "129": 264, "069616": 264, "162": 264, "333713": 264, "166": 264, "029724": 264, "ofv_plot": 264, "layerchart": [264, 285], "dofv_quantiles_plot": 264, "show": [264, 268, 279, 284, 296, 299], "metric": [264, 265, 287], "chi": 264, "squar": 264, "907310": 264, "911844": 264, "750": 264, "388987": 264, "670": 264, "684132": 264, "675": 264, "846450": 264, "738": 264, "099607": 264, "248779": 264, "734": 264, "876739": 264, "733": [264, 297], "182039": 264, "626": 264, "440820": 264, "637": 264, "427606": 264, "748": 264, "285576": 264, "239599": 264, "025253": 264, "519551": 264, "781": 264, "380852": 264, "793": 264, "303365": 264, "994494": 264, "754": 264, "666705": 264, "688168": 264, "664": 264, "288159": 264, "671": 264, "883942": 264, "255718": 264, "974215": 264, "332959": 264, "052283": 264, "689": 264, "940217": 264, "693": 264, "963948": 264, "735": 264, "763734": 264, "004534": 264, "494261": 264, "162318": 264, "204881": 264, "627961": 264, "287312": 264, "986786": 264, "390849": 264, "785654": 264, "624824": 264, "922512": 264, "099768": 264, "595783": 264, "360991": 264, "358744": 264, "157557": 264, "023731": 264, "869007": 264, "372000e": 264, "000015": 264, "000003": 264, "098000e": 264, "462220e": 264, "009862": 264, "002316": 264, "002320": 264, "320640e": 264, "531300e": 264, "013222": 264, "000146": 264, "961337e": 264, "572900e": 264, "002167": 264, "014550e": 264, "000033": 264, "000196": 264, "178980e": 264, "included_individu": 264, "case_result": [265, 266], "cook_scor": 265, "jackknife_cook_scor": 265, "delta_ofv": 265, "dofv_influenti": 265, "130159": 265, "121389": 265, "015207": 265, "348263": 265, "336159": 265, "144045": 265, "192433": 265, "181125": 265, "031030": 265, "163095": 265, "155901": 265, "026142": 265, "422651": 265, "404915": 265, "190732": 265, "374312": 265, "343311": 265, "097063": 265, "169869": 265, "163883": 265, "026223": 265, "263865": 265, "254943": 265, "058123": 265, "757098": 265, "673587": 265, "477910": 265, "150161": 265, "144191": 265, "023623": 265, "361646": 265, "352901": 265, "217902": 265, "255533": 265, "215005": 265, "035375": 265, "191848": 265, "187019": 265, "038199": 265, "376365": 265, "337975": 265, "096680": 265, "142806": 265, "137340": 265, "014709": 265, "193393": 265, "179744": 265, "031711": 265, "131746": 265, "122842": 265, "020637": 265, "176644": 265, "932149": 265, "036787": 265, "128197": 265, "120498": 265, "019030": 265, "141093": 265, "138101": 265, "029021": 265, "176582": 265, "153583": 265, "035291": 265, "104396": 265, "100064": 265, "015499": 265, "552071": 265, "501458": 265, "278595": 265, "242334": 265, "217068": 265, "047627": 265, "792099": 265, "715951": 265, "798775": 265, "135247": 265, "133493": 265, "021356": 265, "442779": 265, "424958": 265, "125763": 265, "132903": 265, "127188": 265, "010157": 265, "081122": 265, "076790": 265, "005443": 265, "183624": 265, "168501": 265, "027707": 265, "113959": 265, "111168": 265, "012363": 265, "532749": 265, "515747": 265, "325048": 265, "094133": 265, "091212": 265, "014747": 265, "447798": 265, "406737": 265, "194457": 265, "364978": 265, "352973": 265, "124295": 265, "270838": 265, "252922": 265, "063675": 265, "129553": 265, "121963": 265, "014043": 265, "254914": 265, "243250": 265, "064025": 265, "207529": 265, "194633": 265, "046887": 265, "239182": 265, "218112": 265, "044252": 265, "181986": 265, "173826": 265, "020285": 265, "604112": 265, "584208": 265, "604211": 265, "407717": 265, "369648": 265, "154161": 265, "215722": 265, "196744": 265, "043742": 265, "214167": 265, "200091": 265, "036238": 265, "094284": 265, "089002": 265, "007506": 265, "074174": 265, "072365": 265, "007535": 265, "743323": 265, "717468": 265, "654313": 265, "153971": 265, "147360": 265, "014502": 265, "284706": 265, "278460": 265, "072960": 265, "331587": 265, "309374": 265, "116933": 265, "447965": 265, "421612": 265, "129593": 265, "184872": 265, "175196": 265, "029896": 265, "430382": 265, "415446": 265, "141657": 265, "409307": 265, "369197": 265, "189729": 265, "084764": 265, "079718": 265, "007416": 265, "107600": 265, "103145": 265, "013947": 265, "154672": 265, "150761": 265, "028236": 265, "155632": 265, "150461": 265, "034848": 265, "covariance_ratio": 265, "skipped_individu": 265, "050505": 265, "963884": 265, "058896": 265, "087449": 265, "985403": 265, "029066": 265, "101636": 265, "086424": 265, "017369": 265, "094799": 265, "849310": 265, "121111": 265, "049151": 265, "096456": 265, "070088": 265, "040691": 265, "065881": 265, "606158": 265, "205007": 265, "099191": 265, "143483": 265, "050691": 265, "086007": 265, "156273": 265, "919336": 265, "056714": 265, "999221": 265, "029600": 265, "034017": 265, "108785": 265, "038495": 265, "954054": 265, "053618": 265, "096334": 265, "943556": 265, "125423": 265, "086167": 265, "145822": 265, "113939": 265, "114399": 265, "057664": 265, "788608": 265, "063991": 265, "115559": 265, "160549": 265, "034685": 265, "035618": 265, "714976": 265, "092664": 265, "089158": 265, "054565": 265, "002555": 265, "032356": 265, "003056": 265, "936719": 265, "122771": 265, "078285": 265, "096841": 265, "068821": 265, "sqrt": 265, "p_i": 265, "p_": 265, "orig": 265, "operatornam": [265, 279, 299], "sum_": 265, "overlin": [265, 279], "_j": 265, "_k": [265, 279], "det": 265, "Then": [265, 279], "ofv_": 265, "iofv_": 265, "iofv_k": 265, "ofv_k": 265, "case_column": 265, "rikard": [265, 267, 272, 293, 297], "nordgren": [265, 267, 272, 293, 297], "sebastian": [265, 267, 272], "ueckert": [265, 267, 272], "svetlana": 265, "freiberga": 265, "karlsson": [265, 267, 272, 279, 297], "faster": [265, 266, 293], "2018": [265, 284, 297], "abstr": [265, 267], "8683": 265, "www": [265, 267, 284], "meet": [265, 267, 269, 284, 293], "saddl": 266, "llq": 266, "preced": 266, "reorder": 266, "incorrectli": 266, "ofv_iter": 266, "parameter_estimates_iter": 266, "caus": [266, 284, 293], "model4": 266, "frem": [266, 286, 295, 296], "create_report": 266, "write_model": [266, 286, 288, 290], "did": [266, 298], "dadt": 266, "de": 266, "complex": [266, 271, 280], "set_zero_order_input": 266, "set_tmdd": 266, "plugin": [266, 270, 271, 276, 277, 282, 301], "generate_model_cod": [266, 286], "get_model_cod": 266, "advan7": 266, "didn": 266, "header": 266, "is_linear": 266, "plot_transformed_eta_distribut": 266, "create_config_templ": 266, "get_dv_symbol": 266, "set_initial_condit": 266, "abbr": [266, 288, 290], "create_basic_pk_model": 266, "add_metabolit": 266, "set_dvid": 266, "regress": 266, "defdos": [266, 288], "sometim": 266, "wrong": 266, "bad": 266, "1551": 266, "is_real": 266, "advan5": [266, 288], "copy_model": 266, "nlmixr2": 266, "display_od": 266, "rework": 266, "run_covsearch": [266, 273], "explicitodesystem": 266, "eval": 266, "successfulli": [266, 302], "round": [266, 275], "subtool": [266, 300], "proxi": [266, 284], "1314": 266, "1355": [266, 273], "1378": [266, 281], "typo": 266, "1377": 266, "1381": 266, "1064": [266, 281], "afd7707": 266, "1139": 266, "1394": 266, "too": [266, 284], "1117": 266, "timeout": 266, "loop": 266, "wait": 266, "lst": [266, 300], "much": [266, 293], "phi": [266, 271, 300], "correctli": 266, "ncomp": 266, "deidentify_data": 266, "cli": 266, "anonym": 266, "setter": 266, "multivari": 266, "1293": 266, "1302": [266, 273], "1303": [266, 289], "last20": 266, "run_modelsearch": [266, 289, 300], "run_iovsearch": [266, 283], "run_ruvsearch": [266, 297], "run_iivsearch": [266, 281], "nomem": 266, "rh": 266, "1180": 266, "1162": 266, "1032": 266, "add_covariate_effect": [266, 288], "1004": 266, "remove_covariate_effect": 266, "1181": 266, "9fd701521": 266, "best_model": 266, "final_model_nam": 266, "a7fbcbfe2": 266, "update_initial_individual_estim": 266, "modelsearch_candidate1": [266, 289, 300], "modifi": [266, 284, 291], "wors": 266, "calculate_b": [266, 281, 283, 289], "calculate_a": 266, "check_parameters_near_bound": 266, "check_high_correl": 266, "plot_iofv_vs_iofv": 266, "plot_individual_predict": 266, "evaluate_express": 266, "evaluate_weighted_residu": 266, "parameter_esimt": 266, "calculate_pk_parameters_statist": 266, "update_init": [266, 288], "predict_": 266, "print_fit_summari": 266, "write_result": 266, "rank_model": 266, "speedup": 266, "297a64041": 266, "individual_ofv": [266, 287], "1101": 266, "57fc4fee8": 266, "fd417aaf": 266, "convert_model": 266, "d5458e36": 266, "keyerror": 266, "localmodeldirectori": 266, "filenotfounderror": 266, "1193bd39": 266, "unus": 266, "submodul": 266, "bb96a13c": 266, "update_paramet": 266, "0ca786c5": 266, "dd056da3": 266, "915bc9c7": 266, "get_config_path": [266, 270], "disabl": [266, 269], "82b32278": 266, "unwant": 266, "debug": 266, "1131a610": 266, "ebfafb45": 266, "1173": 266, "fb070ee1": 266, "1049": [266, 281], "pyreadr": 266, "easier": [266, 276, 286], "instal": [266, 268, 284, 301], "mac": [266, 271], "get_evid": 266, "get_cmt": 266, "resmod": [266, 295], "916": 266, "strict": [266, 284], "1055": 266, "attibut": 266, "1092": 266, "exlud": 266, "unreport": 266, "1076": 266, "988": 266, "1c65359": 266, "42fe72f": 266, "1001": 266, "lead": [266, 288], "uneven": 266, "branch": [266, 271], "stepwis": [266, 273, 298, 300], "694": 266, "properli": 266, "708": 266, "comment": [266, 290], "790": 266, "974": [266, 294], "produc": [266, 284], "1017": 266, "989": 266, "71f4cf23": 266, "dsl": 266, "932": 266, "973": 266, "cfc09bad": 266, "975": 266, "917": 266, "977": 266, "908": 266, "fd564168": 266, "088a046a": 266, "c76fa476": 266, "430f1d2e": 266, "make_declar": 266, "greekify_model": 266, "find_clearance_paramet": 266, "find_volume_paramet": 266, "vp": 266, "newer": 266, "820": [266, 287], "seprat": 266, "sporad": 266, "race": [266, 269], "lazi": 266, "duplic": 266, "745": 266, "1st": 266, "3rd": 266, "710": 266, "licens": 266, "advanx": 266, "add_time_after_dos": [266, 275], "intercompartment": 266, "defob": 266, "choos": [266, 281, 284, 289, 290, 291], "gl": 266, "solve_ode_system": 266, "meta": 266, "switch": [266, 293], "read_dataset_from_datainfo": 266, "addl": 266, "linalgerror": 266, "656": [266, 281], "tflite": [266, 280], "649": 266, "mdt": [266, 288], "654": 266, "expand_additional_dos": 266, "better": [266, 289, 297], "modelsyntaxerror": 266, "588": 266, "625": [266, 281], "578": 266, "vc1": 266, "577": 266, "success": [266, 269, 273, 278, 281, 283], "632": [266, 294], "636": 266, "590": 266, "gl_real": 266, "sampled_iofv": [266, 299], "version": [266, 268, 280, 284, 300], "subblock": 266, "check_dataset": 266, "tensorflow": 266, "modelbuild": 266, "add_mdt_iiv": 266, "three": [266, 276, 284, 290], "add_eta": [266, 296], "etas_as_fullblock": 266, "iiv_as_fullblock": 266, "add_mdt_eta": 266, "wip": 266, "don": 266, "calculate_se_from_inf": 266, "calculate_cov_from_inf": 266, "calculate_inf_from_cov": 266, "calculate_inf_from_corrs": 266, "calculate_corr_from_inf": 266, "528": 266, "457": 266, "translate_nmtran_tim": 266, "print_model_cod": [266, 280, 286], "has_michaelis_menten_elimin": 266, "has_zero_order_elimin": 266, "has_first_order_elimin": 266, "has_mixed_mm_fo_elimin": 266, "2c": 266, "1c": 266, "timevari": 266, "create_symbol": 266, "remove_unused_parameters_and_rv": 266, "mu_reference_model": 266, "simplify_express": 266, "bump_model_numb": 266, "get_doseid": [266, 275], "get_unit_of": 266, "get_concentration_parameters_from_data": [266, 275], "write_csv": 266, "resample_data": 266, "omit_data": 266, "get_observation_express": 266, "get_individu": 266, "get_dos": [266, 275], "list_time_varying_covari": 266, "estmeth": 266, "optim": [266, 276, 286, 293], "incorrect": 266, "add_allometri": 266, "insert_aft": 266, "modelstat": 266, "power_on_ruv": 266, "estimationmethod": 266, "guard": 266, "avoid": [266, 276, 284, 302], "cdd": 266, "bipp": [266, 268], "5000": 266, "shift": 266, "nest": 266, "due": [266, 297], "set_dtbs_error_model": [266, 288], "dure": [266, 302], "logger": 266, "parametr": 266, "broken": 266, "parallel": [266, 300], "print_model_symbol": 266, "get_observ": [266, 275], "parameter_sampl": 266, "api": [266, 276, 288, 292, 293, 301], "improv": [266, 296], "eta_shrinkag": 266, "summarize_model": 266, "window": [266, 271, 280, 284], "rstudio": [266, 293, 302], "zero_order_absorpt": 266, "first_order_absorpt": 266, "bolus_absorpt": 266, "set_bolus_absorpt": [266, 288], "seq_zo_fo_absorpt": 266, "set_seq_zo_fo_absorpt": [266, 288], "have_zero_order_absorpt": 266, "has_zero_order_absorpt": 266, "individual_shrinkag": 266, "individual_parameter_statist": 266, "pk_paramet": 266, "create_rv_block": 266, "split_rv_block": 266, "nind": 266, "nob": 266, "nobsi": 266, "remove_error": 266, "additive_error": 266, "proportional_error": 266, "combined_error": 266, "has_additive_error": 266, "has_proportional_error": 266, "has_combined_error": 266, "theta_as_stdev": 266, "set_dtbs_error": 266, "tdist": [266, 294], "john_drap": 266, "add_paramet": 266, "add_individual_paramet": [266, 288], "first_order_elimin": 266, "zero_order_elimin": 266, "michaelis_menten_elimin": 266, "mixed_mm_fo_elimin": 266, "revert": 266, "thread": [266, 269], "site": 266, "crossval": [266, 295], "qa": [266, 295], "plain": [266, 270, 271], "sdcorr": 266, "data_transform": [266, 288], "evalut": 266, "dependent_variable_symbol": 266, "releas": [266, 284, 302], "claus": 266, "interfac": [266, 276, 280, 282, 284, 286, 288, 293, 301, 302], "com": 266, "stdin": 266, "123": [266, 273, 281, 283, 287, 289, 297], "clearer": 266, "prioriti": [266, 290], "aggregatedmodelfitresult": 266, "priorit": [266, 290], "half": [266, 294, 296], "life": [266, 294, 296], "set_nam": 266, "parameter_init": 266, "base_parameter_chang": [266, 279], "parameter_vari": [266, 279, 296], "coeffici": 266, "frem_result": 266, "simevalresult": 266, "nonfixed_init": 266, "parameterset": 266, "migrat": 266, "github": [266, 271, 280, 282, 293, 302], "action": [266, 268, 269, 271, 284, 293], "columntyp": 266, "to_base_model": 266, "comined_mm_fo_elimin": 266, "absorption_r": 266, "pretti": 266, "qaresult": 266, "nmtranparseerror": 266, "error_model": 266, "pharmpyconfigpath": [266, 270], "environ": [266, 269, 301, 302], "linearizeresult": 266, "reset_indic": 266, "multiindic": 266, "functionsadd_lag_tim": 266, "yaml": 266, "view": [266, 284, 298], "assumpt": [266, 284], "0th": [266, 268], "parser": [266, 293], "individul": 266, "extend": [266, 284, 296, 298], "postprocess": [266, 295], "librari": [266, 280, 282, 284, 293, 302], "stella": [267, 272, 293], "belin": [267, 272, 293], "gunnar": [267, 272], "yngman": [267, 272, 279], "simon": [267, 272], "carter": [267, 272], "buatoi": [267, 272], "jo\u00e3o": [267, 272], "abrant": [267, 272], "andrew": [267, 272], "hooker": [267, 272], "assemblerr": 267, "novel": 267, "process": [267, 297], "2021": [267, 279], "9656": 267, "subcommand": 268, "top": [268, 275, 300], "often": [268, 271, 286, 298], "help": [268, 269, 273, 293, 300, 302], "verb": 268, "particular": [268, 269, 271, 275, 284, 285], "welcom": [268, 269, 271, 284], "usag": 268, "exit": 268, "program": [268, 269, 280, 284], "pheno_r": [268, 275, 286, 287], "prettyprint": 268, "output_fil": 268, "idcol": 268, "datecol": 268, "match": 268, "pager": 268, "stdout": [268, 300], "datasetsmultipl": 268, "1th": 268, "quot": 268, "comb": 268, "elimini": 268, "propot": 268, "error_typ": 268, "givenbi": 268, "cov_sampl": 268, "posdef": 268, "non_fix": 268, "input_path": 268, "particip": 269, "project": [269, 271, 282, 284, 302], "made": [269, 284, 286], "member": 269, "globe": 269, "divers": 269, "skill": [269, 293], "person": [269, 284], "experi": 269, "growth": 269, "everyon": [269, 271, 284], "guidelin": 269, "insid": [269, 284], "goal": 269, "inclus": [269, 284, 296], "grow": 269, "pledg": 269, "treat": [269, 271, 284], "peopl": 269, "harass": 269, "bulli": 269, "regardless": [269, 284, 286], "sexual": 269, "orient": 269, "gender": 269, "ident": 269, "appear": [269, 302], "nation": [269, 272], "ethnic": 269, "religion": 269, "imageri": 269, "sexist": 269, "racist": 269, "exclusionari": 269, "joke": 269, "acknowledg": [269, 284], "citat": 269, "request": [269, 271], "author": [269, 284], "own": [269, 270, 276, 284], "cite": 269, "those": [269, 284, 288, 300], "realiz": 269, "varieti": 269, "opinion": 269, "background": 269, "serv": [269, 284, 293], "enrich": 269, "discuss": 269, "pro": 269, "con": 269, "technologi": 269, "proactiv": 269, "ensur": [269, 284], "heard": 269, "feel": [269, 293], "confid": 269, "freeli": 269, "question": 269, "answer": 269, "respectfulli": 269, "pai": 269, "attent": 269, "feedback": 269, "forum": 269, "especi": 269, "contribut": [269, 282, 284], "conscienti": 269, "percept": 269, "wider": 269, "respond": 269, "strive": 269, "behavior": 269, "encourag": [269, 271, 276, 282], "product": [269, 278, 284], "debat": 269, "disagr": 269, "entir": [269, 271, 284, 300], "silent": 269, "violat": [269, 284], "contact": [269, 284], "talk": 269, "privat": [269, 284], "situat": 269, "onlin": 269, "offlin": 269, "mail": [269, 284], "social": 269, "media": 269, "confer": 269, "associ": [269, 283, 284], "adapt": [269, 284, 293], "astropi": 269, "conf": 270, "ini": 270, "default_nonmem_path": 270, "nmfe751": 270, "create_default_config": 270, "pharmpyconfigfil": 270, "your": [271, 280, 282, 284, 288, 290, 300, 302], "bug": 271, "appreci": 271, "suggest": [271, 282], "suitabl": [271, 293], "student": [271, 293], "commun": [271, 284], "aspir": 271, "conduct": [271, 289], "foster": 271, "linux": [271, 280], "maco": [271, 280], "ll": 271, "badg": 271, "pip": [271, 280], "python3": 271, "pip3": 271, "guid": 271, "former": 271, "ubuntu": 271, "apt": 271, "url": [271, 280], "render": [271, 284, 293], "On": [271, 293], "sudo": 271, "brew": 271, "unnecessari": [271, 284], "thing": [271, 284], "instruct": 271, "black": 271, "formatt": 271, "flake8": 271, "linter": 271, "isort": 271, "lint": 271, "reformat": 271, "py39": 271, "test_paramet": 271, "py": [271, 280], "test_get_theta": 271, "apart": 271, "suit": 271, "purpos": [271, 284], "test_modelsearch": 271, "test_summary_individu": 271, "pull": 271, "manag": 271, "contributor": [271, 284], "emploi": 271, "commit": [271, 284], "push": 271, "name_of_branch": 271, "deploy": 271, "setup": 271, "pypi": [271, 280], "io": [271, 276, 280], "trigger": [271, 286], "tag": 271, "changelog": 271, "bump": 271, "semant": 271, "bumpvers": 271, "cfg": 271, "sh": 271, "patch": 271, "minor": 271, "major": [271, 284], "copyright": 271, "coi": 271, "stream": [271, 286], "verbatim": [271, 284], "farmaci": 272, "uu": 272, "kajsa": 272, "harl": 272, "zhe": [272, 293], "huang": [272, 293], "aurelien": 272, "oom": 272, "johan": 272, "borg": 272, "piyanan": 272, "assawasuwannakit": 272, "xiaomei": 272, "chen": 272, "alzahra": 272, "hamdan": 272, "osama": 272, "qutishat": 272, "shijun": 272, "wang": 272, "tianwu": 272, "yang": 272, "warm": 272, "thank": 272, "sponsor": 272, "hoffman": 272, "la": 272, "roch": 272, "ltd": 272, "pharmetheu": 272, "uppsala": [272, 282], "univers": [272, 282], "enabl": [272, 284], "resourc": 272, "swedish": 272, "infrastructur": 272, "snic": 272, "uppmax": 272, "research": [272, 293], "council": 272, "inter": [273, 281], "five": 273, "sentenc": 273, "manual": [273, 275, 300], "rewritten": 273, "notic": [273, 284], "semicolon": 273, "mox2": [273, 278, 281, 283, 289, 300], "covsearch_run7": 273, "covsearch_run8": 273, "covsearch_run9": 273, "covsearch_run10": 273, "covsearch_run11": 273, "covsearch_run12": 273, "covsearch_run13": 273, "covsearch_run14": 273, "covsearch_run15": 273, "covsearch_run16": 273, "covsearch_run17": 273, "covsearch_run18": 273, "covsearch_run19": 273, "covsearch_run20": 273, "covsearch_run21": 273, "covsearch_run22": 273, "covsearch_run23": 273, "covsearch_run24": 273, "covsearch_run25": 273, "covsearch_run26": 273, "covsearch_run27": 273, "covsearch_run28": 273, "covsearch_run29": 273, "covsearch_run30": 273, "covsearch_run31": 273, "covsearch_run32": 273, "covsearch_run33": 273, "covsearch_run34": 273, "covsearch_run35": 273, "covsearch_run36": 273, "covsearch_run37": 273, "covsearch_run38": 273, "covsearch_run39": 273, "covsearch_run40": 273, "covsearch_run41": 273, "covsearch_run42": 273, "covsearch_run43": 273, "covsearch_run44": 273, "covsearch_run45": 273, "covsearch_run46": 273, "covsearch_run47": 273, "covsearch_run48": 273, "covsearch_run49": 273, "covsearch_run50": 273, "covsearch_run51": 273, "covsearch_run52": 273, "covsearch_run53": 273, "covsearch_run54": 273, "pvalu": [273, 298], "goal_pvalu": [273, 298], "is_backward": [273, 298], "047127e": 273, "710000e": 273, "568110e": 273, "494490e": 273, "498453e": 273, "459287e": 273, "280678e": 273, "923500e": 273, "003390e": 273, "984500e": 273, "372293e": 273, "176965e": 273, "207550e": 273, "626878e": 273, "564495e": 273, "539960e": 273, "762000e": 273, "823200e": 273, "417058e": 273, "759040e": 273, "469024e": 273, "811054e": 273, "642452e": 273, "840779e": 273, "261720e": 273, "651215e": 273, "954671e": 273, "163414e": 273, "926594e": 273, "491049e": 273, "423998e": 273, "706676e": 273, "374390e": 273, "054865e": 273, "105347e": 273, "300000e": 273, "029682e": 273, "641559e": 273, "748923e": 273, "363918e": 273, "203548e": 273, "052323e": 273, "567877e": 273, "507358e": 273, "510000e": 273, "1292": [273, 278, 281, 283, 289], "186761": [273, 278, 281, 283, 289], "742325": 273, "929085": 273, "315057": 273, "1346": 273, "501817": 273, "978215": 273, "1332": 273, "164976": 273, "062682": 273, "1312": 273, "249442": 273, "061671": 273, "248431": 273, "056538": 273, "1313": [273, 289], "243298": 273, "732689": 273, "919450": 273, "651626": 273, "1335": 273, "838386": 273, "814832": 273, "1334": 273, "001593": 273, "363759": 273, "550520": 273, "989077": 273, "175838": 273, "136326": 273, "323087": 273, "387950": 273, "1316": 273, "574711": 273, "961688": 273, "148448": 273, "743393": 273, "930153": 273, "617998": 273, "1340": 273, "804759": 273, "641996": 273, "1345": 273, "828756": 273, "288366": 273, "1357": 273, "475127": 273, "263168": 273, "1343": [273, 281], "449928": 273, "814686": 273, "1319": 273, "001446": 273, "181808": 273, "368568": 273, "957602": 273, "144362": 273, "567343": 273, "1347": 273, "754104": 273, "426389": 273, "613149": 273, "324567": 273, "1358": [273, 288], "511327": 273, "446030": 273, "632790": 273, "549224": 273, "1326": 273, "735985": 273, "997342": 273, "184102": 273, "617389": 273, "1351": 273, "804150": 273, "900404": 273, "1350": 273, "087164": 273, "566615": 273, "1391": 273, "753375": 273, "929659": 273, "1352": 273, "116420": 273, "990522": 273, "177283": 273, "217267": 273, "404028": 273, "62": [273, 294], "729333": 273, "1354": 273, "916093": 273, "379219": 273, "1393": 273, "565980": 273, "67": [273, 296, 298], "670588": 273, "1359": 273, "857348": 273, "016040": 273, "202801": 273, "926496": 273, "113256": 273, "139": 273, "462177": 273, "1431": 273, "648937": 273, "83": [273, 294, 296], "706655": 273, "1375": 273, "893415": 273, "798603": 273, "1367": 273, "985364": 273, "801019": 273, "1438": 273, "987780": 273, "92": 273, "443408": 273, "1384": 273, "630169": 273, "997461": 273, "1439": 273, "184221": 273, "322869": 273, "509630": 273, "925020": 273, "111781": 273, "142": 273, "814402": 273, "1435": 273, "001163": 273, "862830": 273, "049591": 273, "449696": 273, "636456": 273, "801017": 273, "987778": 273, "89": [273, 289], "86": 273, "1414": 273, "872375": 273, "93": [273, 278], "810457": 273, "76": 273, "630168": 273, "68": 273, "5328": [273, 278, 281, 283, 289], "2300": [273, 278, 281, 289], "433676": [273, 278, 281, 283, 289], "2632": 273, "2400": 273, "447194": 273, "8757": 273, "106": [273, 281, 294, 296, 297], "2690": 273, "429235": 273, "4824": 273, "0490": 273, "435646": 273, "1536": 273, "7690": 273, "430342": 273, "9763": 273, "102": 273, "8640": 273, "428158": 273, "9807": 273, "1030": 273, "505090": 273, "3823": 273, "4790": 273, "453248": 273, "3323": 273, "5279": 273, "434088": 273, "7087": 273, "109": [273, 289], "1750": 273, "459561": 273, "8501": 273, "4740": 273, "428178": 273, "4821": 273, "0270": 273, "435683": 273, "1635": 273, "5920": 273, "433194": 273, "0931": 273, "1120": 273, "435607": 273, "1216": 273, "2180": 273, "519385": 273, "3873": 273, "4580": 273, "453399": 273, "4279": 273, "6231": 273, "442192": 273, "9115": 273, "9240": 273, "466270": 273, "7337": 273, "9590": 273, "409478": 273, "3781": 273, "415011": 273, "1007": 273, "5110": 273, "446059": 273, "1211": 273, "8490": 273, "522201": 273, "2833": 273, "7400": 273, "430777": 273, "3688": 273, "9010": 273, "444906": 273, "9130": 273, "7450": 273, "468161": 273, "8124": 273, "7120": 273, "407766": 273, "3789": 273, "2080": 273, "416694": 273, "1985": 273, "6770": 273, "441794": 273, "2994": 273, "94": 273, "1796": 273, "587939": 273, "4692": 273, "3027": 273, "440385": 273, "0941": 273, "6170": 273, "463834": 273, "6693": 273, "2570": 273, "413923": 273, "3618": 273, "427491": 273, "2658": 273, "5620": 273, "521096": 273, "4546": 273, "9522": 273, "446657": 273, "0732": 273, "0130": 273, "454492": 273, "7145": 273, "9771": 273, "451302": 273, "3318": 273, "9710": 273, "477444": 273, "4944": 273, "3068": 273, "502124": 273, "0790": 273, "7890": 273, "462595": 273, "7389": 273, "8006": 273, "491811": 273, "6677": 273, "7770": 273, "477864": 273, "6488": 273, "0460": 273, "472418": 273, "9834": 273, "9929": 273, "474434": 273, "0359": 273, "2120": 273, "478021": 273, "0706": 273, "1991": 273, "474688": 273, "0336": 273, "8083": 273, "475373": 273, "0636": 273, "2525": 273, "473063": 273, "0292": 273, "8033": 273, "473542": 273, "0651": 273, "9375": 273, "483644": 273, "0661": 273, "5310": 273, "462817": 273, "0432": 273, "1300": [273, 283], "446808": 273, "7913": 273, "90": 273, "1894": 273, "489466": 273, "9838": 273, "9945": 273, "474441": 273, "0361": 273, "478038": 273, "ruv_prop_estim": [273, 278, 283, 297], "209972": [273, 278, 281, 283, 289], "197452": 273, "005338": 273, "192852": 273, "199549": 273, "193411": 273, "195608": 273, "192557": 273, "198783": 273, "191425": 273, "192934": 273, "192682": 273, "000659": 273, "199545": 273, "000303": 273, "193747": 273, "000956": 273, "197305": 273, "006150": 273, "194664": 273, "005918": 273, "198812": 273, "000334": 273, "192753": 273, "006503": 273, "194238": 273, "009567": 273, "189160": 273, "005291": 273, "195766": 273, "003125": 273, "195730": 273, "195098": 273, "006600": 273, "195843": 273, "001364": 273, "189330": 273, "003100": 273, "193116": 273, "008094": 273, "189540": 273, "006380": 273, "196038": 273, "002606": 273, "197429": 273, "000340": 273, "204599": 273, "002549": 273, "190442": 273, "000522": 273, "195705": 273, "005726": 273, "192398": 273, "002984": 273, "196915": 273, "000299": 273, "198387": 273, "001229": 273, "190453": 273, "000216": 273, "197082": 273, "005988": 273, "191512": 273, "002433": 273, "194217": 273, "000649": 273, "191075": 273, "001918": 273, "197129": 273, "005915": 273, "183751": 273, "001489": 273, "187999": 273, "001004": 273, "194026": 273, "005955": 273, "187663": 273, "002481": 273, "193344": 273, "009365": 273, "187822": 273, "002901": 273, "187730": 273, "187425": 273, "002946": 273, "184713": 273, "006622": 273, "187724": 273, "002919": 273, "187525": 273, "003050": 273, "192812": 273, "005142": 273, "183104": 273, "001493": 273, "187672": 273, "002483": 273, "193349": 273, "009366": 273, "pop_clwt_estim": 273, "382904": 273, "010536": 273, "387669": 273, "010497": 273, "396947": 273, "010523": 273, "385807": 273, "010703": 273, "554417": 273, "011851": 273, "519989": 273, "012179": 273, "808497": 273, "011109": 273, "737404": [273, 299], "007109": 273, "709206": 273, "000803": 273, "736659": 273, "000429": 273, "706752": 273, "000822": 273, "662625": 273, "002097": 273, "709124": 273, "000793": 273, "704774": 273, "427285": 273, "003711": 273, "779125": 273, "001087": 273, "007108": 273, "059279": 273, "517590": 273, "056724": 273, "520520": 273, "063392": 273, "057943": 273, "019268": 273, "348000": 273, "008419": 273, "040813": 273, "045624": 273, "023159": 273, "057041": 273, "059912": 273, "003577": 273, "495110": 273, "070972": 273, "033397": 273, "013863": 273, "012482": 273, "367050": 273, "020109": 273, "442940": 273, "030354": 273, "491875": 273, "038044": 273, "224276": 273, "001885": 273, "848782": 273, "017435": 273, "646840": 273, "585757": 273, "000169": 273, "367142": 273, "002221": 273, "737357": 273, "009685": 273, "033267": 273, "009238": 273, "267484": 273, "012667": 273, "165471": 273, "005033": 273, "094740": 273, "010833": 273, "065816": 273, "004749": 273, "096523": 273, "005557": 273, "098655": 273, "107862": 273, "012020": 273, "118838": 273, "005781": 273, "002862": 273, "222520": 273, "005160": 273, "361570": 273, "008017": 273, "030930": 273, "005034": 273, "094706": 273, "010829": 273, "065876": 273, "pop_matwt_estim": 273, "019706": 273, "014651": 273, "020136": 273, "014954": 273, "022336": 273, "011936": 273, "005508": 273, "002344": 273, "013967": 273, "034213": 273, "034044": 273, "009672": 273, "008593": 273, "017124": 273, "000315": 273, "022223": 273, "019316": 273, "009542": 273, "010323": 273, "008652": 273, "018053": 273, "019211": 273, "001906": 273, "014021": 273, "011399": 273, "003565": 273, "010903": 273, "014331": 273, "013699": 273, "015830": 273, "000202": [273, 299], "002078": 273, "009019": 273, "005773": 273, "012366": 273, "002607": 273, "002247": 273, "005768": 273, "011567": 273, "006160": 273, "014272": 273, "004566": 273, "010938": 273, "002378": 273, "007473": 273, "011606": 273, "010672": 273, "000456": 273, "009445": 273, "014649": 273, "012169": 273, "002248": 273, "pop_vcwt_estim": 273, "953372": 273, "013320": 273, "984897": 273, "012092": 273, "972469": 273, "011946": 273, "954734": 273, "010781": 273, "009540": 273, "009922": 273, "989687": 273, "009576": 273, "986758": 273, "869150": 273, "632058": 273, "008418": 273, "751771": 273, "007571": 273, "416489": 273, "013879": 273, "724866": 273, "008196": 273, "746265": 273, "007399": 273, "727224": 273, "008331": 273, "666572": 273, "010074": 273, "751144": 273, "008031": 273, "711725": 273, "008833": 273, "012851": 273, "967468": 273, "751794": 273, "007573": 273, "416464": 273, "013880": 273, "1403": [273, 281, 283, 289, 297], "1404": [273, 281, 283, 289, 297], "1405": [273, 281, 283, 289, 297], "1406": [273, 281, 283, 289, 297], "1407": [273, 281, 283, 289, 297], "757118": [273, 281, 283, 289], "659694": [273, 281, 283, 289], "302503": [273, 281, 283, 289], "464327": [273, 281, 283, 289], "034898": [273, 281, 283, 289], "482240": 273, "223632": 273, "357442": 273, "119299": 273, "565277": 273, "696443": 273, "062486": 273, "234841": 273, "088594": 273, "953572": 273, "857979": 273, "193305": 273, "003283": 273, "861988": 273, "188718": 273, "005806": 273, "962325": 273, "455479": 273, "289527": 273, "216857": 273, "4015": 273, "2022": [273, 278, 281, 283, 289, 300], "462": 273, "nhowev": [273, 278, 283], "reduced_ofv": [273, 298], "extended_ofv": [273, 298], "ofv_drop": [273, 298], "extended_st": [273, 298], "621435": 273, "246753": 273, "394001": 273, "645626": 273, "219363": 273, "001068": 273, "875674": 273, "899671": 273, "152040": 273, "126842": 273, "678359": 273, "045482": 273, "821275": 273, "431017": 273, "290062": 273, "366965": 273, "488428": 273, "591623": 273, "039740": 273, "659788": 273, "942802": 273, "017391": 273, "380435": 273, "441298": 273, "668043": 273, "180108": 273, "388697": 273, "680065": 273, "025518": 273, "935973": 273, "446136": 273, "690615": 273, "782563": 273, "002416": 273, "644805": 273, "554053": 273, "674591": 273, "072441": 273, "183059": 273, "134631": 273, "547765": 273, "311846": 273, "373764": 273, "196444": 273, "delta_df": [273, 298], "extended_signific": [273, 298], "covariate_effect": [273, 279, 296, 298], "ofv_summari": [273, 298], "candidate_summari": [273, 298], "n_test": [273, 298], "n_ok": [273, 298], "n_localmin": [273, 298], "n_fail": [273, 298], "stepinclud": [273, 298], "estimation_ofv": 274, "prediction_ofv": 274, "545": 274, "863847": 274, "186": 274, "192727": 274, "512": 274, "953185": 274, "694832": 274, "547": 274, "843632": 274, "184": [274, 294, 298], "022535": 274, "579": 274, "109635": 274, "596550": 274, "prediction_ofv_sum": 274, "747": 274, "506644594254": 274, "read_raw_dataset": 275, "arrai": [275, 286, 300], "get_id": 275, "largest": 275, "ser": 275, "di": 275, "role": 275, "identif": [275, 297], "mostli": [275, 276, 293], "steven": 275, "typologi": 275, "en": [275, 276, 279], "wikipedia": 275, "wiki": [275, 284], "level_of_measur": 275, "annot": 275, "kg": 275, "mg": 275, "l": 275, "low": [275, 286, 288], "understand": [275, 292], "accompani": [275, 284], "And": [275, 284, 300], "under": [276, 282, 284, 298, 302], "construct": [276, 292], "complet": 276, "four": 276, "distinct": 276, "layer": [276, 289, 291], "worklow": 276, "higher": [276, 282, 286, 288, 299], "coupl": 276, "mathemat": [276, 286, 293], "concid": 276, "live": 276, "namespac": 276, "mutablesequ": 276, "scalar": [276, 286], "element": [276, 287, 302], "concern": [276, 284], "expos": 276, "numpydoc": 276, "readthedoc": 276, "ecosystem": 276, "thu": [276, 281, 284, 286, 300], "wrap": 276, "share": [276, 284, 291], "leak": 276, "third": [276, 284], "parti": [276, 284], "break": 276, "run_estmethod": 278, "chapter": [278, 289], "few": 278, "cartesian": 278, "addition": [278, 289, 300], "9999": 278, "examin": [278, 280], "runtime_estim": 278, "estmethod_run2": 278, "2422": 278, "465718": 278, "81": [278, 281, 287], "estmethod_run1": 278, "2271": 278, "769243": 278, "run_typ": 278, "1299": [278, 283], "696027": 278, "2420": 278, "117263": 278, "145": 278, "2702": 278, "1840": 278, "3241": 278, "6578": 278, "iiv_cl_estim": [278, 283, 297], "iiv_vc_estim": [278, 283, 297], "481858": [278, 281, 283, 289], "593654": [278, 281, 283, 289], "439589": 278, "483291": 278, "598179": 278, "901289": 278, "419533": 278, "408292": 278, "iiv_mat_estim": [278, 283, 297], "000130": [278, 283, 289], "322572": 278, "197647": 278, "865979": 278, "105366": 278, "10000": 278, "787": 278, "WITH": [278, 281, 283, 284], "THE": [278, 281, 283, 284], "creation": 279, "model_3b": 279, "u": [279, 288], "eta_i": 279, "leq": 279, "n_": 279, "par": [279, 286], "eta_k": 279, "bmatrix": 279, "vdot": 279, "eta_": [279, 286, 288], "sim": [279, 286, 288, 299], "mathcal": [279, 286, 288], "mu_2": 279, "omega_": [279, 286, 288], "n1": 279, "n2": 279, "ddot": 279, "latter": 279, "partit": 279, "5th": 279, "630859": 279, "868770": 279, "176754": 279, "95th": 279, "925602": 279, "082310": 279, "244607": 279, "569077": 279, "600360": 279, "632538": 279, "532478": 279, "824355": 279, "138312": 279, "577861": 279, "761430": 279, "991915": 279, "003863": 279, "148763": 279, "297579": 279, "600771": 279, "631260": 279, "661025": 279, "315965": 279, "549669": 279, "811532": 279, "margin": 279, "ij": 279, "ijk": 279, "omega_k": 279, "sigma_1": 279, "sigma_2": 279, "sigma_i": 279, "turn": [279, 286], "percent": 279, "red": 279, "figur": 279, "vconcatchart": 279, "sigma_": [279, 286, 288], "020503": 279, "628814": 279, "009309": 279, "544459": 279, "026950": 279, "613127": 279, "050396": 279, "551581": 279, "individual_effect": 279, "913307": 279, "899565": 279, "923297": 279, "939015": 279, "926632": 279, "948404": 279, "933506": 279, "894967": 279, "970755": 279, "010192": 279, "973823": 279, "047109": 279, "992728": 279, "986142": 279, "999404": 279, "361911": 279, "322628": 279, "418737": 279, "894772": 279, "868658": 279, "917333": 279, "947797": 279, "923656": 279, "969732": 279, "771958": 279, "748072": 279, "790423": 279, "790120": 279, "768277": 279, "806911": 279, "percentu": 279, "unexplained_vari": 279, "sd_observ": 279, "sd_5th": 279, "sd_95th": 279, "469535": 279, "359934": 279, "547612": 279, "465490": 279, "352335": 279, "538174": 279, "165502": 279, "141580": 279, "190726": 279, "159149": 279, "134989": 279, "183613": 279, "420471": 279, "327104": 279, "490419": 279, "404440": 279, "306148": 279, "467046": 279, "143317": 279, "122348": 279, "166012": 279, "141826": 279, "120282": 279, "163610": 279, "percetil": 279, "025328": 279, "022571": 279, "020115": 279, "216681": 279, "188254": 279, "163572": 279, "027391": 279, "021634": 279, "020540": 279, "intermedi": 279, "model_4": [279, 286], "parameter_inits_and_estim": 279, "model_3": 279, "115195": 279, "007066": 279, "209016": 279, "125999": 279, "020191": 279, "224959": 279, "126000": 279, "007084": 279, "38635": 279, "220463": 279, "195326": 279, "176796": 279, "bsv_apgr": [279, 286], "010583": 279, "107027": 279, "000008": 279, "171529": 279, "404278": 279, "012042": 279, "115427": 279, "000032": 279, "208475": 279, "415588": 279, "000030": 279, "062712": 279, "117271": 279, "039930": 279, "446939": 279, "402075": 279, "bsv_wgt": [279, 286], "244579": 279, "244448": 279, "002173": 279, "002170": 279, "244080": 279, "007763": 279, "007760": 279, "249237": 279, "034610": 279, "015250": 279, "relative_chang": 279, "773218": 279, "095327": 279, "520526": 279, "271369": 279, "110618": 279, "974324": 279, "657803": 279, "852": 279, "803483": 279, "753": 279, "302743": 279, "themselv": 279, "ideal": 279, "estimated_covari": 279, "stdev": 279, "423728": 279, "237640": 279, "525424": 279, "704565": 279, "nyberg": 279, "hb": 279, "jonsson": 279, "mo": 279, "introduct": 279, "cpt": 279, "pharmacometr": [279, 282, 284, 300], "syst": 279, "pharmacol": 279, "1002": 279, "psp4": 279, "12741": 279, "plan": 280, "stabl": 280, "googl": [280, 293], "coral": 280, "repo": 280, "tflite_runtim": 280, "nonlinear": 280, "sever": [280, 296], "read_model_result": 281, "aspect": [281, 296, 300], "explor": [281, 293], "naiv": 281, "minima": 281, "\u03b4ofv": [281, 283, 289], "\u03b4aic": [281, 283, 289], "\u03b4bic": [281, 283, 289], "iivsearch_no_of_etas_candidate3": 281, "282024": 281, "iivsearch_no_of_etas_candidate2": 281, "217": 281, "691571": 281, "iivsearch_no_of_etas_candidate6": 281, "385": 281, "641987": 281, "iivsearch_no_of_etas_candidate1": 281, "631": 281, "871991": 281, "iivsearch_no_of_etas_candidate5": 281, "633": [281, 287], "419500": 281, "iivsearch_no_of_etas_candidate4": 281, "815": 281, "076729": 281, "iivsearch_no_of_etas_candidate7": 281, "834": 281, "249063": 281, "iivsearch_block_structure_candidate1": 281, "971960": 281, "1283": 281, "597406": 281, "1279": 281, "315382": 281, "1061": 281, "623812": 281, "673395": 281, "443392": 281, "645": 281, "895882": 281, "464": 281, "238653": 281, "066319": 281, "1365": 281, "569365": 281, "178325": 281, "1280": 281, "1278": [281, 289], "1070": 281, "204731": 281, "1058": 281, "897": 281, "963854": 281, "024311": 281, "644": 281, "650": 281, "186341": 281, "640": 281, "468": 281, "529112": 281, "458": 281, "437": 281, "440744": 281, "1364": 281, "1261": [281, 283], "189012": 281, "1259": [281, 289], "530267": [281, 289], "1039": 281, "215418": [281, 298], "641723": 281, "034998": 281, "620": 281, "864210": 281, "206982": 281, "417": 281, "411370": 281, "160972": 281, "5333": 281, "0366": 281, "1164": 281, "2929": 281, "8058": 281, "9055": 281, "2270": 281, "9424": 281, "1360": 281, "239": 281, "1090": 281, "234": 281, "6680": 281, "9380": 281, "6690": 281, "9880": 281, "433544": 281, "114210": 281, "347648": 281, "316164": 281, "310155": 281, "922906": 281, "434563": 281, "436279": 281, "481830": 281, "594777": 281, "396159": 281, "516927": 281, "593578": 281, "414690": 281, "247930": 281, "656304": 281, "00013": 281, "31998": 281, "08352": 281, "43473": 281, "209975": 281, "401593": 281, "574966": 281, "736398": 281, "750954": 281, "744891": 281, "810669": 281, "215885": 281, "iiv_cl_iiv_vc_estim": 281, "498114": 281, "965311": 281, "348227": 281, "596114": 281, "524856": 281, "831038": 281, "973037": 281, "826292": 281, "168816": 281, "275494": 281, "612863": 281, "081253": 281, "444919": 281, "093815": 281, "067016": 281, "554482": 281, "103963": 281, "060027": 281, "670815": 281, "108198": 281, "049148": 281, "371": 281, "post": [282, 297], "sens": 283, "brute": 283, "approach": 283, "nonzero": 283, "constant": 283, "540508": 283, "1265": 283, "694052": 283, "230772": 283, "384316": 283, "230394": 283, "383938": 283, "1262": 283, "153544": 283, "750000": 283, "403544": 283, "750400": 283, "403145": 283, "060114": 283, "093431": 283, "043077": 283, "1257": 283, "110467": 283, "782429": 283, "1115": 283, "911624": 283, "015062": 283, "707566": 283, "017679": 283, "017280": 283, "707992": 283, "707614": 283, "017728": 283, "1145": 283, "944840": 283, "230": 283, "1954": 283, "242": [283, 294, 296], "440613": 283, "665": 283, "439784": 283, "1951": 283, "241": 283, "1950": 283, "440611": 283, "1402": 283, "439785": 283, "439783": 283, "2313": 283, "438628": 283, "474140": 283, "586866": 283, "311861": 283, "472835": 283, "590422": 283, "320387": 283, "474125": 283, "586859": 283, "311859": 283, "474111": 283, "586860": 283, "311903": 283, "590425": 283, "320393": 283, "472840": 283, "590424": 283, "320395": 283, "572627": 283, "290631": 283, "194680": 283, "002735": 283, "195532": 283, "194676": 283, "194675": 283, "195531": 283, "197005": 283, "483460": 283, "000006": 283, "000000e": [283, 298], "241921": 283, "119820": 283, "001912": 283, "068405": 283, "121866": 283, "620420": 283, "271367": 283, "291396": 283, "230854": 283, "051358": 283, "936871": 283, "267222": 283, "042977": 283, "050766": 283, "059323": 283, "250083": 283, "291876": 283, "187631": 283, "020838": 283, "612880": 283, "660334": 283, "657": 283, "279": [283, 294], "adopt": 284, "wikimedia": 284, "bowl_of_hygieia_by_david": 284, "svg": 284, "cc": 284, "BY": 284, "sa": 284, "font": 284, "pt": 284, "san": 284, "relicens": 284, "lgpl": 284, "know": 284, "maintaint": 284, "softwar": [284, 293, 300], "redistribut": 284, "publish": 284, "foundat": 284, "hope": 284, "warranti": 284, "impli": 284, "merchant": 284, "FOR": 284, "modif": [284, 296], "permit": 284, "retain": 284, "disclaim": 284, "reproduc": 284, "materi": 284, "holder": 284, "AND": 284, "AS": 284, "OR": 284, "BUT": 284, "NOT": 284, "TO": 284, "OF": 284, "IN": 284, "shall": 284, "BE": 284, "liabl": 284, "indirect": 284, "incident": 284, "exemplari": 284, "consequenti": 284, "damag": 284, "procur": 284, "good": 284, "servic": 284, "loss": 284, "profit": 284, "busi": 284, "interrupt": 284, "ON": 284, "theori": [284, 286], "liabil": 284, "contract": 284, "tort": 284, "neglig": 284, "aris": 284, "advis": 284, "SUCH": 284, "june": 284, "2007": 284, "inc": 284, "fsf": 284, "preambl": 284, "copyleft": 284, "practic": 284, "design": [284, 286, 288, 293, 300], "awai": 284, "contrast": 284, "guarante": 284, "speak": 284, "price": 284, "charg": 284, "wish": [284, 288], "piec": 284, "prevent": 284, "deni": 284, "ask": [284, 302], "surrend": 284, "therefor": 284, "respons": 284, "grati": 284, "fee": 284, "recipi": 284, "gpl": 284, "assert": 284, "offer": [284, 288], "permiss": 284, "clearli": 284, "sake": 284, "erron": 284, "devic": 284, "although": 284, "manufactur": 284, "fundament": 284, "incompat": 284, "aim": [284, 296], "systemat": 284, "abus": 284, "area": [284, 293], "unaccept": 284, "prohibit": 284, "substanti": 284, "domain": [284, 291, 300], "stand": 284, "readi": 284, "provis": 284, "futur": 284, "threaten": 284, "constantli": 284, "patent": 284, "danger": 284, "proprietari": 284, "assur": 284, "law": 284, "semiconductor": 284, "mask": 284, "license": 284, "address": 284, "organ": [284, 286], "fashion": 284, "exact": 284, "earlier": 284, "cover": [284, 289, 290, 292, 301], "unmodifi": 284, "propag": 284, "secondarili": 284, "infring": 284, "countri": 284, "convei": 284, "mere": 284, "network": 284, "transfer": 284, "extent": 284, "conveni": [284, 286], "promin": 284, "visibl": 284, "menu": 284, "criterion": 284, "offici": 284, "wide": 284, "among": 284, "essenti": 284, "kernel": 284, "script": [284, 300], "link": [284, 297], "subprogram": 284, "intim": 284, "regener": 284, "grant": 284, "irrevoc": 284, "affirm": 284, "unlimit": 284, "constitut": 284, "fair": 284, "equival": [284, 300], "sole": 284, "facil": 284, "compli": 284, "behalf": 284, "relationship": [284, 298], "circumst": 284, "sublicens": 284, "anti": 284, "circumvent": 284, "deem": 284, "technolog": 284, "fulfil": 284, "oblig": 284, "articl": 284, "wipo": 284, "treati": 284, "decemb": 284, "1996": 284, "waiv": 284, "forbid": 284, "exercis": 284, "intent": 284, "enforc": 284, "medium": [284, 293], "conspicu": 284, "intact": 284, "absenc": 284, "along": 284, "relev": [284, 290, 300], "anyon": 284, "who": [284, 290], "possess": 284, "invalid": 284, "natur": 284, "storag": 284, "aggreg": 284, "beyond": 284, "embodi": 284, "durabl": 284, "customarili": 284, "interchang": 284, "spare": 284, "reason": [284, 293], "cost": 284, "server": 284, "occasion": 284, "noncommerci": 284, "subsect": 284, "6b": 284, "further": 284, "clear": [284, 302], "sai": [284, 290], "host": 284, "satisfi": 284, "peer": 284, "transmiss": 284, "6d": 284, "portion": 284, "consum": 284, "tangibl": 284, "household": 284, "sold": 284, "incorpor": 284, "dwell": 284, "doubt": 284, "resolv": [284, 291], "favor": 284, "coverag": 284, "typic": [284, 300], "commerci": 284, "industri": 284, "procedur": 284, "suffic": 284, "interf": 284, "perpetu": 284, "character": 284, "But": 284, "nor": 284, "abil": 284, "rom": 284, "advers": 284, "protocol": 284, "publicli": 284, "password": 284, "unpack": 284, "supplement": 284, "govern": 284, "notwithstand": 284, "misrepresent": 284, "licensor": 284, "declin": 284, "trademark": 284, "trade": 284, "indemnif": 284, "contractu": 284, "impos": 284, "surviv": 284, "termin": 284, "expressli": 284, "void": 284, "paragraph": 284, "ceas": 284, "reinstat": 284, "provision": 284, "perman": 284, "notifi": 284, "prior": 284, "dai": 284, "cessat": 284, "moreov": 284, "cure": 284, "receipt": 284, "qualifi": 284, "ancillari": 284, "consequ": 284, "likewis": 284, "downstream": 284, "complianc": 284, "entiti": 284, "asset": 284, "subdivid": 284, "predecessor": 284, "plu": 284, "effort": 284, "royalti": 284, "litig": 284, "cross": 284, "claim": 284, "counterclaim": 284, "lawsuit": 284, "alleg": 284, "sell": 284, "sale": 284, "acquir": 284, "hereaft": 284, "manner": [284, 289], "worldwid": 284, "agreement": 284, "denomin": 284, "coven": 284, "sue": 284, "knowingli": 284, "readili": 284, "arrang": 284, "depriv": 284, "yourself": 284, "benefit": [284, 293], "knowledg": 284, "believ": 284, "pursuant": 284, "convey": 284, "discriminatori": 284, "scope": 284, "payment": 284, "primarili": 284, "march": 284, "constru": 284, "defens": 284, "court": 284, "contradict": 284, "excus": 284, "simultan": [284, 289], "pertin": 284, "agre": 284, "whom": 284, "refrain": 284, "affero": 284, "revis": 284, "Such": 284, "spirit": 284, "ever": 284, "THERE": 284, "qualiti": 284, "prove": 284, "defect": 284, "repair": 284, "WILL": 284, "inabl": 284, "BEING": 284, "inaccur": 284, "sustain": 284, "failur": [284, 293], "review": 284, "waiver": 284, "civil": 284, "greatest": 284, "achiev": 284, "attach": 284, "safest": 284, "pointer": 284, "brief": 284, "idea": [284, 293], "electron": 284, "paper": 284, "hypothet": 284, "Of": 284, "cours": 284, "gui": 284, "box": [284, 296], "employ": 284, "programm": 284, "school": 284, "philosophi": 284, "why": 284, "7b2feb6f20b626a559d3150f6638c111f20b5213": 284, "lin_evalu": 285, "lin_estim": 285, "268756": 285, "problemat": 285, "947354": 285, "939053": 285, "008301": 285, "970582": 285, "012053": 285, "041471": 285, "982345": 285, "979456": 285, "002889": 285, "457096": 285, "435700": 285, "021396": 285, "839445": 285, "838391": 285, "001054": 285, "257222": 285, "278016": 285, "020794": 285, "098344": 285, "077164": 285, "021179": 285, "538623": 285, "520111": 285, "018512": 285, "647972": 285, "673400": 285, "025427": 285, "394648": 285, "373180": 285, "021468": 285, "480163": 285, "505680": 285, "025517": 285, "650236": 285, "629298": 285, "020938": 285, "991406": [285, 287], "988587": 285, "002820": 285, "378873": 285, "372846": 285, "006028": 285, "739906": 285, "725640": 285, "014265": 285, "328801": 285, "326482": 285, "002319": 285, "113286": 285, "104515": 285, "008771": 285, "212076": 285, "325127": 285, "113051": 285, "334048": 285, "321306": 285, "012742": 285, "327782": 285, "306287": 285, "021495": 285, "821537": 285, "795371": 285, "026165": 285, "631283": 285, "620311": 285, "010972": 285, "861666": 285, "855927": 285, "005739": 285, "915260": 285, "913348": 285, "001913": 285, "988972": 285, "024483": 285, "035512": 285, "279274": 285, "269277": 285, "009997": 285, "733179": 285, "729199": 285, "003980": 285, "830055": 285, "827764": 285, "002290": 285, "851725": 285, "847176": 285, "004549": 285, "212098": 285, "192122": 285, "019976": 285, "774789": 285, "773559": 285, "001230": 285, "352292": 285, "351131": 285, "001162": 285, "172644": 285, "165200": 285, "007443": 285, "427375": 285, "420258": 285, "007117": 285, "381438": 285, "412378": 285, "030941": 285, "624011": 285, "614613": 285, "009397": 285, "970630": 285, "955216": 285, "015414": 285, "177025": 285, "002885": 285, "206543": 285, "180626": 285, "025916": 285, "955033": 285, "945036": 285, "982451": 285, "972114": 285, "010337": 285, "051495": 285, "098643": 285, "047147": 285, "424500": 285, "425925": 285, "001425": 285, "734347": 285, "702764": 285, "031583": 285, "018483": 285, "997957": 285, "020526": 285, "810285": [285, 287], "807205": 285, "003080": 285, "279257": 285, "276411": 285, "002846": 285, "168465": 285, "267932": 285, "099467": 285, "190512": 285, "178815": 285, "011697": 285, "749138": 285, "727859": 285, "021278": 285, "598562": 285, "616685": 285, "018123": 285, "237457": 285, "251607": 285, "014150": 285, "568928": 285, "581417": 285, "012489": 285, "800065": 285, "795239": 285, "004826": 285, "098027": 285, "103873": 285, "005846": 285, "586253": [285, 287], "582931": 285, "003323": 285, "663950": 285, "650298": 285, "013652": 285, "850995": 285, "833333": 285, "017662": 285, "605848": 285, "592551": 285, "013297": 285, "iofv_plot": 285, "At": 286, "heart": 286, "li": [286, 300], "subclass": 286, "principl": 286, "pharmi": 286, "transpar": 286, "mymodel": [286, 288], "inspect": 286, "sdtab1": 286, "parset": 286, "displaystyl": [286, 288], "eps_": [286, 288], "eta1": 286, "frem_path": 286, "frem_model": 286, "frem_model_result": 286, "omega\u2082": 286, "omega\u2083": 286, "omega\u2084": 286, "\u2082": 286, "eta\u2083": [286, 288], "\u2083": 286, "eta\u2084": [286, 288], "eps\u2082": 286, "epscov": 286, "bsv_": 286, "omega_2_1": 286, "omega_3_1": 286, "omega_4_1": 286, "omega_3_2": 286, "omega_4_2": 286, "omega_4_3": 286, "000286193": 286, "0676481": 286, "0256033": 286, "0235094": 286, "00161838": 286, "24458": 286, "omega_est": 286, "0393482": 286, "0168369": 286, "0442286": 286, "0426757": 286, "0259374": 286, "0654878": 286, "00168063": 286, "983027": 286, "240423": 286, "98305": 286, "choleski": 286, "198363807182661": 286, "0848788911603008": 286, "136868454493349": 286, "222967085720797": 286, "616745467855979": 286, "743597812371906": 286, "215138540674925": 286, "145697201390566": 286, "508675383095755": 286, "810424017694199": 286, "pure": 286, "astyp": 286, "numeric64": 286, "linalg": 286, "19836381": 286, "08487889": 286, "13686845": 286, "22296709": 286, "61674547": 286, "74359781": 286, "21513854": 286, "1456972": 286, "50867538": 286, "81042402": 286, "quit": 286, "flexibl": 286, "cumbersom": 286, "easili": 286, "a_": [286, 288], "unimport": 286, "testdata": 287, "2760562818805": 287, "parameter_estimates_sdcorr": 287, "171321": 287, "167051": 287, "115069": 287, "Or": 287, "standard_errors_sdcorr": 287, "039153": 287, "022378": 287, "009904": 287, "relative_standard_error": 287, "044731": 287, "027325": 287, "527072": 287, "457068": 287, "267918": 287, "172147": 287, "proper": 287, "388058": 287, "356900": 287, "238442": 287, "096516": 287, "invers": 287, "29955600": 287, "400": 287, "910": 287, "267": 287, "039": 287, "809": 287, "520": 287, "980": 287, "200": 287, "450": 287, "947352": 287, "970591": 287, "982342": 287, "457091": 287, "839437": 287, "257230": 287, "098338": 287, "538621": 287, "647969": 287, "394643": 287, "480164": 287, "650233": 287, "378880": 287, "739902": 287, "328800": 287, "113284": 287, "212096": 287, "334047": 287, "327778": 287, "821533": 287, "631281": 287, "861669": 287, "915261": 287, "988977": 287, "279273": 287, "733181": 287, "830053": 287, "851724": 287, "212095": 287, "774791": 287, "352283": 287, "172643": 287, "427376": 287, "381444": 287, "624014": 287, "970627": 287, "177028": 287, "206540": 287, "955029": 287, "982447": 287, "051499": 287, "424503": 287, "734342": 287, "018477": 287, "279258": 287, "168486": 287, "190508": 287, "749134": 287, "598565": 287, "237467": 287, "568934": 287, "800062": 287, "098025": 287, "663948": 287, "850993": 287, "605845": 287, "143": 287, "045": [287, 294], "971": 287, "881": 287, "575": 287, "080": 287, "063": 287, "427": 287, "668": 287, "543": 287, "662": 287, "478": 287, "667": 287, "253": 287, "495": 287, "918": 287, "67071": 287, "401100": 287, "35080": 287, "587770": 287, "36360": 287, "278800": 287, "19730": 287, "670700": 287, "21710": 287, "352600": 287, "86050": 287, "067200": 287, "35060": 287, "059269": 287, "72100": 287, "036754": 287, "10860": 287, "814140": 287, "28180": 287, "699410": 287, "eb": 287, "043861": 287, "005430": 287, "166321": 287, "131833": 287, "095934": 287, "130868": 287, "009154": 287, "017388": 287, "102019": 287, "283500": 287, "019417": 287, "099839": 287, "045946": 287, "059072": 287, "024270": 287, "189351": 287, "248536": 287, "091872": 287, "009545": 287, "012052": 287, "066151": 287, "293685": 287, "030236": 287, "074789": 287, "094502": 287, "147433": 287, "076820": 287, "105604": 287, "020051": 287, "066265": 287, "086035": 287, "023260": 287, "067138": 287, "030859": 287, "337255": 287, "035532": 287, "032579": 287, "028410": 287, "003589": 287, "080613": 287, "060233": 287, "052854": 287, "004469": 287, "057344": 287, "051992": 287, "212941": 287, "137510": 287, "004111": 287, "023282": 287, "302636": 287, "039069": 287, "119442": 287, "044956": 287, "263320": 287, "000776": 287, "083231": 287, "003150": 287, "012752": 287, "049654": 287, "080932": 287, "000555": 287, "099614": 287, "061864": 287, "332738": 287, "038156": 287, "067641": 287, "038017": 287, "184137": 287, "156617": 287, "208753": 287, "114558": 287, "053036": 287, "008405": 287, "026004": 287, "144920": 287, "081646": 287, "083320": 287, "015380": 287, "000392": 287, "078062": 287, "018966": 287, "112030": 287, "112715": 287, "383786": 287, "001730": 287, "167583": 287, "042068": 287, "066598": 287, "037600": 287, "000093": 287, "010662": 287, "009775": 287, "058306": 287, "229005": 287, "033958": 287, "008959": 287, "092312": 287, "050987": 287, "192569": 287, "002727": 287, "225657": 287, "115824": 287, "204269": 287, "054792": 287, "066334": 287, "123689": 287, "239678": 287, "047215": 287, "186615": 287, "000949": 287, "010812": 287, "015929": 287, "017213": 287, "005234": 287, "122552": 287, "076677": 287, "095696": 287, "024883": 287, "002999": 287, "007157": 287, "model_ref": 288, "easi": [288, 293], "pipelin": 288, "unfix_parameters_to": 288, "print_model_diff": 288, "ipython": 288, "pkmat": 288, "errori": 288, "pkcl": 288, "vd1": 288, "advan2": 288, "s2": 288, "vka": 288, "pkmdt": 288, "matd1": 288, "pop_mdt": 288, "trans1": 288, "transit4": 288, "s5": 288, "vk12": 288, "mdtk23": 288, "mdtk34": 288, "mdtk45": 288, "mdtk50": 288, "valag1": 288, "similarli": [288, 302], "tol": 288, "pkkm": 288, "desdadt": 288, "pop_clmm": 288, "067": 288, "pop_km": 288, "iiv_clmm": 288, "pkclmm": 288, "002346535": 288, "advan3": 288, "trans4": 288, "pkvp1": 288, "v1q": 288, "qp1v2": 288, "pop_qp1": 288, "050458": 288, "pop_vp1": 288, "onto": 288, "pkwgt_median": 288, "30000cl": 288, "clwgt": 288, "wgt_median": 288, "clwgtv": 288, "pop_clwgt": 288, "user_effect": 288, "30000wgt_std": 288, "704565cl": 288, "wgt_std": 288, "pketab1": 288, "etab1": 288, "etab2": 288, "lambda2": 288, "analog": 288, "pketat1": 288, "384": 288, "etat1": 288, "pketad1": 288, "etad1": 288, "eta_s1": 288, "iiv_s1": 288, "eta_v": 288, "eta_new": 288, "eta_3": 288, "iiv_": 288, "eta_iov_1_2": 288, "pkiov_1": 288, "0if": 288, "iov_1": 288, "eta_iov_1_1if": 288, "eta_iov_1_2etai1": 288, "etai1": 288, "00309626": 288, "omega_iov_1": 288, "eta_iov_2_1": 288, "eta_iov_2_2": 288, "eta_iov_1_2iov_2": 288, "iov_2": 288, "eta_iov_2_1if": 288, "eta_iov_2_2etai1": 288, "etai2": 288, "0031128": 288, "omega_iov_2": 288, "eta_4": 288, "pkdummyeta": 288, "dummyomega": 288, "leav": 288, "isn": 288, "runnabl": 288, "epsilon_a": 288, "approx": 288, "taylor": 288, "epsilon_": 288, "proportin": 288, "epsilon_p": 288, "sigma_prop": [288, 297], "sigma_add": [288, 297], "eps_1": 288, "iiv_ruv1": 288, "ruv1": 288, "someim": 288, "correspondng": 288, "11506954418958998": 288, "errorw": 288, "fy": 288, "model_block": 288, "s_": 288, "445550": 288, "bootstrap_dir1": 288, "597341": 288, "039061": 288, "365446": 288, "019725": 288, "secondary_paramet": 288, "delai": [289, 300], "grammar": [289, 293], "exhaustive_stepwis": 289, "obtain": 289, "basi": 289, "subsequ": [289, 290, 300], "modelsearch_candidate2": [289, 300], "594608": 289, "1272": 289, "124874": 289, "modelsearch_candidate3": [289, 300], "558028": 289, "088295": 289, "modelsearch_candidate4": [289, 300], "956313": 289, "1270": 289, "486580": 289, "287000": 289, "1260": 289, "817266": 289, "362287": 289, "1327": 289, "153182": 289, "1325": 289, "551467": 289, "1307": 289, "301235": 289, "1295": 289, "1305": 289, "1289": 289, "2927": 289, "4334": 289, "7778": 289, "0058": 289, "1640": 289, "260324": 289, "7646": 289, "824443": 289, "5477": 289, "607839": 289, "1147": 289, "842498": 289, "470974": 289, "595276": 289, "526185": 289, "930160": 289, "495109": 289, "322680": 289, "470531": 289, "515250": 289, "312692": 289, "194221": 289, "202201": 289, "207885": 289, "232322": 289, "199750": 289, "205369": 289, "193439": 289, "pop_qp1_estim": 289, "pop_vp1_estim": 289, "pop_mdt_estim": 289, "155413": 289, "4192": 289, "6100": 289, "172730": 289, "3977": 289, "4562": 289, "158070": 289, "8042": 289, "8517": 289, "iiv_mdt_estim": 289, "156289": 289, "192020": 289, "092419": 289, "262429": 289, "720369": 289, "464263": 289, "127061": 289, "906722": 289, "053781": 289, "923055": 289, "795863": 289, "030658": 289, "661330": 289, "168680": 289, "833073": 289, "041529": 289, "205858": 289, "064930": 289, "609673": 289, "396329": 289, "928556": 289, "365": 289, "330": 289, "topic": 290, "scheme": 290, "theta_cl": 290, "mention": 290, "ve": 290, "despit": 290, "write_etas_in_abbr": 290, "altair": [291, 293], "vega": 291, "lite": 291, "ggplot": 291, "editor": 291, "clamp": 291, "vconcat": 291, "spec": 291, "inten": 292, "export": 292, "strictli": 292, "necessesari": 292, "detect_model": 292, "summer": 293, "master": 293, "thesi": 293, "internship": 293, "email": 293, "team": 293, "tox": 293, "pytest": 293, "sphinx": 293, "wise": 293, "known": 293, "trial": 293, "involv": 293, "outcom": 293, "350h": 293, "difficulti": 293, "mentor": 293, "scipi": 293, "focu": 293, "proof": 293, "concept": 293, "algebra": 293, "simul": [293, 299], "scratch": 293, "lark": 293, "earlei": 293, "lalr": 293, "stricter": 293, "175h": 293, "almost": 293, "compat": 293, "benefici": 293, "diff": 293, "potenti": 293, "eas": 293, "jupyt": 293, "holoview": 293, "bokeh": 293, "monitor": 293, "ongo": 293, "veri": 293, "happen": [293, 302], "converg": 293, "sort": [293, 300], "dashboard": 293, "complement": 293, "realtim": 293, "restart": [293, 302], "middl": 293, "worflow": 293, "cv": [294, 296], "772": [294, 296], "700": 294, "042": [294, 296], "sdeps_0": [294, 296], "t1": 294, "298": 294, "sdeps_t1": 294, "t2": 294, "886": 294, "sdeps_t2": 294, "t3": 294, "272": 294, "sdeps_t3": 294, "t4": 294, "716": 294, "sdeps_t4": 294, "t5": 294, "218": 294, "sdeps_t5": 294, "t6": 294, "928": 294, "sdeps_t6": 294, "t7": 294, "092": 294, "sdeps_t7": 294, "t8": 294, "914": 294, "sdeps_t8": 294, "t9": 294, "sdeps_t9": 294, "390": [294, 296], "159": [294, 296], "t0": [294, 296], "271": [294, 296], "sdeps_t0": [294, 296], "956": [294, 296], "717": 294, "014": 294, "983": 294, "884": 294, "017": 294, "955": 294, "958": 294, "969": 294, "933": 294, "022": 294, "819": 294, "007": 294, "755": 294, "982": 294, "387": 294, "th_0": 294, "257": 294, "867": 294, "th_t1": 294, "211": 294, "th_t2": 294, "277": 294, "761": 294, "th_t3": 294, "033": 294, "th_t4": 294, "367": 294, "th_t5": 294, "204": 294, "170": 294, "th_t6": 294, "078": 294, "th_t7": 294, "841": 294, "th_t8": 294, "th_t9": 294, "030": 294, "124": 294, "289": 294, "386": 294, "203": 294, "019": 294, "delta_pow": [294, 296], "037": [294, 296], "autocorrel": [294, 296], "dtb": [294, 296], "91": [294, 296], "idv_varying_ruv": 294, "idv_varying_ruv_cutoff0": 294, "idv_varying_ruv_cutoff1": 294, "idv_varying_ruv_cutoff2": 294, "idv_varying_ruv_cutoff3": 294, "idv_varying_ruv_cutoff4": 294, "idv_varying_ruv_cutoff5": 294, "idv_varying_ruv_cutoff6": 294, "idv_varying_ruv_cutoff7": 294, "idv_varying_ruv_cutoff8": 294, "idv_varying_combin": 294, "idv_varying_theta": 294, "sdep": 294, "delet": 295, "diagnost": 295, "impact": 296, "improement": 296, "592698": 296, "197887": 296, "007493": 296, "521171": 296, "et1apgr": 296, "487930": 296, "residual_error_model": 296, "910000": 296, "030000": 296, "diagnos": 296, "structural_bia": 296, "cpred": 296, "binmin": 296, "binmax": 296, "binid": 296, "258": 296, "strutur": 296, "mdel": 296, "fullblock_paramet": 296, "183463": 296, "171306": 296, "554610": 296, "154408": 296, "167053": 296, "cox": 296, "boxcox_paramet": 296, "shape": 296, "new_sd": 296, "old_sd": 296, "922083": 296, "182037": 296, "332800": 296, "166021": 296, "tdist_paramet": 296, "79": 296, "9997": 296, "168477": 296, "9986": 296, "166469": 296, "residual_error": 296, "additional_paramet": 296, "coeff": 296, "48793": 296, "033334": 296, "48218": 296, "052342": 296, "59034": 296, "008371": 296, "00887": 296, "003273": 296, "set_time_varying_error_model": 297, "ibrahim": 297, "quickli": [297, 300], "assess": 297, "inde": 297, "cwres_model": 297, "479721": 297, "385268": 297, "002792": 297, "time_varying1": 297, "117041": 297, "555154": 297, "time_varying3": 297, "336641": 297, "091207": 297, "065738": 297, "654562": 297, "046578": 297, "519115": 297, "612710": 297, "643741": 297, "027766": 297, "000367": 297, "967365": 297, "00123": 297, "0976": 297, "12252": 297, "14299": 297, "000337": 297, "05242": 297, "006105": 297, "10545": 297, "12659": 297, "15573": 297, "00054": 297, "04769": 297, "030825": 297, "mox3": 297, "2460": 297, "704469": 297, "957378": 297, "2473": 297, "661847": 297, "269102": 297, "2495": 297, "973571": 297, "2444": 297, "2455": 297, "2475": 297, "2423": 297, "757516": 297, "2435": 297, "047712": 297, "2453": 297, "068976": 297, "707": 297, "5434": 297, "531596": 297, "794": 297, "3091": 297, "528620": 297, "3094": 297, "532547": 297, "iiv_vc_iiv_cl_estim": 297, "077743": 297, "038888": 297, "076793": 297, "039924": 297, "071628": 297, "038470": 297, "072309": 297, "704770": 297, "093311": 297, "074889": 297, "707665": 297, "081095": 297, "075048": 297, "705429": 297, "044311": 297, "iiv_ruv1_estim": 297, "time_varying_estim": 297, "039675": 297, "040734": 297, "42509": 297, "215727": 297, "655144": 297, "708324": 297, "762729": 297, "236530": 297, "229762": 297, "715966": 297, "423148": 297, "419741": 297, "774540": 297, "164274": 297, "450202": 297, "195425": 297, "960585": 297, "090461": 297, "848498": 297, "052021": 297, "239462": 297, "065148": 297, "571348": 297, "244582": 297, "161981": 297, "509910": 297, "373696": 297, "084489": 297, "647643": 297, "344772": 297, "083776": 297, "259395": 297, "101415": 297, "024651": 297, "443542": 297, "124023": 297, "183089": 297, "977222": 297, "219": 297, "moustafa": 297, "m": 297, "maria": 297, "kjellsson": 297, "aap": 297, "1208": 297, "s12248": 297, "018": 297, "0240": 297, "pha": 298, "219210": 298, "90878": 298, "219167": 298, "36222": 298, "bmi": 298, "219171": 298, "47564": 298, "cycll": 298, "219203": 298, "94536": 298, "diag": 298, "219206": 298, "01527": 298, "disdur": 298, "219032": 298, "86056": 298, "215321": 298, "70954": 298, "215306": 298, "67698": 298, "phia": 298, "men": 298, "215407": 298, "40295": 298, "phib": 298, "georeg": 298, "215373": 298, "77800": 298, "216968": 298, "25989": 298, "slp": 298, "215359": 298, "18150": 298, "54656": 298, "140000e": 298, "43314": 298, "390000e": 298, "96342": 298, "319000e": 298, "89351": 298, "695800e": 298, "178": 298, "04822": 298, "290000e": 298, "03256": 298, "060000e": 298, "72597": 298, "10102": 298, "580000e": 298, "1661": 298, "58291": 298, "50452": 298, "phaag": 298, "phabmi": 298, "phacycl": 298, "phadiag": 298, "phadisdur": 298, "backward_scm_dir1": 298, "phawt": 298, "phiamen": 298, "phibgeoreg": 298, "phibmen": 298, "slpgeoreg": 298, "304": 298, "beween": 298, "slightli": 298, "215961": 298, "46277": 298, "3249": 298, "44601": 298, "215748": 298, "07194": 298, "213": 298, "39083": 298, "215570": 298, "57352": 298, "49842": 298, "215486": 298, "23440": 298, "33912": 298, "87007": 298, "36433": 298, "215357": 298, "74693": 298, "61": 298, "12314": 298, "215337": 298, "95044": 298, "79649": 298, "24090": 298, "215332": 298, "91461": 298, "23763": 298, "67861": 298, "00163": 298, "215450": 298, "74783": 298, "07085": 298, "215491": 298, "11568": 298, "43870": 298, "500000e": 298, "700000e": 298, "170000e": 298, "260000e": 298, "360000e": 298, "600000e": 298, "020000e": 298, "620000e": 298, "430000e": 298, "200000e": 298, "lbest": 298, "cpl": 298, "165042": 299, "215148": 299, "488686": 299, "885525": 299, "860736": 299, "853273": 299, "083424": 299, "993262": 299, "824880": 299, "080061": 299, "568383": 299, "533799": 299, "180960": 299, "905658": 299, "916884": 299, "276361": 299, "376218": 299, "322738": 299, "364078": 299, "313336": 299, "638247": 299, "489785": 299, "898802": 299, "546277": 299, "351839": 299, "542369": 299, "136159": 299, "968860": 299, "773450": 299, "058260": 299, "221459": 299, "873918": 299, "151210": 299, "210594": 299, "600450": 299, "775938": 299, "135159": 299, "899285": 299, "551158": 299, "639544": 299, "104682": 299, "793703": 299, "562788": 299, "230477": 299, "796073": 299, "185132": 299, "354616": 299, "330868": 299, "328937": 299, "479966": 299, "486179": 299, "720261": 299, "884839": 299, "438225": 299, "929665": 299, "432346": 299, "121901": 299, "436720": 299, "367480": 299, "924846": 299, "247238": 299, "694969": 299, "512627": 299, "341680": 299, "054791": 299, "024193": 299, "484284": 299, "387386": 299, "842566": 299, "759167": 299, "864669": 299, "548598": 299, "114753": 299, "853355": 299, "638560": 299, "317393": 299, "280139": 299, "424024": 299, "178961": 299, "695800": 299, "622712": 299, "331177": 299, "631655": 299, "413680": 299, "238692": 299, "541680": 299, "361556": 299, "371773": 299, "758919": 299, "704503": 299, "713778": 299, "316351": 299, "422555": 299, "966413": 299, "814952": 299, "026935": 299, "335429": 299, "937635": 299, "266944": 299, "878300": 299, "715708": 299, "009725": 299, "461262": 299, "462408": 299, "212573": 299, "868224": 299, "383043": 299, "459161": 299, "501489": 299, "179394": 299, "003027": 299, "933191": 299, "676905": 299, "260472": 299, "219194": 299, "218010": 299, "380865": 299, "585174": 299, "956306": 299, "398492": 299, "630512": 299, "051986": 299, "546036": 299, "726349": 299, "445912": 299, "191401": 299, "816485": 299, "767349": 299, "682987": 299, "099846": 299, "876780": 299, "553003": 299, "776532": 299, "822404": 299, "802797": 299, "991350": 299, "924166": 299, "846457": 299, "015416": 299, "565671": 299, "662582": 299, "326447": 299, "115117": 299, "207434": 299, "838099": 299, "341361": 299, "488859": 299, "782192": 299, "806515": 299, "434087": 299, "297823": 299, "086788": 299, "743671": 299, "574493": 299, "296737": 299, "599116": 299, "409142": 299, "516464": 299, "880881": 299, "994987": 299, "574667": 299, "831345": 299, "755737": 299, "793265": 299, "630846": 299, "072216": 299, "874349": 299, "901408": 299, "851982": 299, "912201": 299, "483346": 299, "711150": 299, "676572": 299, "693935": 299, "401748": 299, "069326": 299, "793645": 299, "800871": 299, "954047": 299, "905528": 299, "926835": 299, "077897": 299, "928532": 299, "748099": 299, "731336": 299, "186642": 299, "985533": 299, "819544": 299, "366585": 299, "247095": 299, "504667": 299, "773375": 299, "551558": 299, "843029": 299, "551208": 299, "765259": 299, "455400": 299, "762211": 299, "042324": 299, "187278": 299, "552114": 299, "257409": 299, "502366": 299, "056323": 299, "406685": 299, "802175": 299, "040276": 299, "360000": 299, "305631": 299, "370226": 299, "496993": 299, "639042": 299, "515088": 299, "716192": 299, "544260": 299, "597045": 299, "454421": 299, "977219": 299, "751915": 299, "676934": 299, "022410": 299, "400720": 299, "889492": 299, "641421": 299, "952586": 299, "597599": 299, "424237": 299, "974785": 299, "835458": 299, "853009": 299, "073683": 299, "087082": 299, "098997": 299, "886356": 299, "819836": 299, "374133": 299, "879430": 299, "151935": 299, "963905": 299, "712658": 299, "285544": 299, "415675": 299, "178975": 299, "567520": 299, "351619": 299, "044583": 299, "277992": 299, "396594": 299, "264764": 299, "999275": 299, "255630": 299, "360173": 299, "688954": 299, "358567": 299, "572606": 299, "899880": 299, "408061": 299, "414926": 299, "841335": 299, "496109": 299, "244786": 299, "473731": 299, "297200": 299, "907778": 299, "253768": 299, "222423": 299, "416676": 299, "864820": 299, "606428": 299, "362886": 299, "731451": 299, "206488": 299, "069317": 299, "862927": 299, "693535": 299, "988252": 299, "746436": 299, "911020": 299, "716822": 299, "965455": 299, "764024": 299, "517867": 299, "763155": 299, "453899": 299, "125029": 299, "500103": 299, "133073": 299, "346212": 299, "686115": 299, "783555": 299, "583418": 299, "585654": 299, "027851": 299, "462547": 299, "043157": 299, "972480": 299, "363551": 299, "960296": 299, "402983": 299, "036534": 299, "225458": 299, "723710": 299, "892175": 299, "587323": 299, "032512": 299, "378125": 299, "699366": 299, "408322": 299, "242420": 299, "950516": 299, "788249": 299, "269137": 299, "509957": 299, "159667": 299, "512603": 299, "884049": 299, "777419": 299, "448461": 299, "481351": 299, "625663": 299, "175264": 299, "601504": 299, "416254": 299, "541949": 299, "907322": 299, "194473": 299, "487277": 299, "418469": 299, "371639": 299, "344235": 299, "606033": 299, "550825": 299, "547459": 299, "675347": 299, "663661": 299, "308617": 299, "584165": 299, "875052": 299, "247584": 299, "271405": 299, "500411": 299, "631308": 299, "824837": 299, "432371": 299, "804622": 299, "876965": 299, "881148": 299, "758791": 299, "348849": 299, "323449": 299, "319025": 299, "885439": 299, "366355": 299, "230120": 299, "921633": 299, "995045": 299, "575351": 299, "027733": 299, "946876": 299, "482883": 299, "300884": 299, "654589": 299, "604188": 299, "005653": 299, "928279": 299, "370783": 299, "467337": 299, "098483": 299, "795252": 299, "957716": 299, "472019": 299, "706108": 299, "078494": 299, "664634": 299, "318875": 299, "916754": 299, "823449": 299, "527835": 299, "526828": 299, "136767": 299, "405150": 299, "615899": 299, "293600": 299, "488282": 299, "406903": 299, "818812": 299, "376893": 299, "736463": 299, "892761": 299, "446579": 299, "114640": 299, "061750": 299, "849137": 299, "615092": 299, "408347": 299, "925921": 299, "423537": 299, "018308": 299, "867625": 299, "962122": 299, "705806": 299, "664954": 299, "078385": 299, "086333": 299, "056381": 299, "282087": 299, "882876": 299, "603301": 299, "449888": 299, "678095": 299, "037941": 299, "748996": 299, "138213": 299, "166879": 299, "708577": 299, "272954": 299, "929655": 299, "567697": 299, "989005": 299, "421235": 299, "563473": 299, "388393": 299, "621329": 299, "480043": 299, "959843": 299, "277388": 299, "110075": 299, "300601": 299, "811596": 299, "366018": 299, "905147": 299, "570879": 299, "786560": 299, "961895": 299, "534496": 299, "351180": 299, "612812": 299, "231970": 299, "900845": 299, "806204": 299, "584818": 299, "988276": 299, "749003": 299, "998400": 299, "892200": 299, "725509": 299, "196823": 299, "225727": 299, "018880": 299, "212538": 299, "851698": 299, "348921": 299, "250063": 299, "140249": 299, "429352": 299, "382526": 299, "944073": 299, "659430": 299, "191840": 299, "857266": 299, "485191": 299, "775355": 299, "956378": 299, "002572": 299, "733704": 299, "794788": 299, "668763": 299, "151243": 299, "707700": 299, "382384": 299, "455902": 299, "931900": 299, "538437": 299, "498709": 299, "425364": 299, "376121": 299, "196475": 299, "497867": 299, "030662": 299, "372391": 299, "848184": 299, "565811": 299, "662370": 299, "826862": 299, "572217": 299, "630121": 299, "580405": 299, "119652": 299, "298009": 299, "035731": 299, "275622": 299, "134650": 299, "361844": 299, "957232": 299, "155311": 299, "266702": 299, "169391": 299, "361498": 299, "363698": 299, "868679": 299, "106708": 299, "024682": 299, "434510": 299, "982047": 299, "904024": 299, "575363": 299, "073635": 299, "169297": 299, "840067": 299, "253049": 299, "169888": 299, "856403": 299, "884553": 299, "497236": 299, "564632": 299, "118999": 299, "893425": 299, "765897": 299, "695028": 299, "509070": 299, "046265": 299, "586789": 299, "516160": 299, "324755": 299, "684344": 299, "249772": 299, "916145": 299, "394438": 299, "493584": 299, "659481": 299, "744242": 299, "119216": 299, "933397": 299, "936980": 299, "269584": 299, "448507": 299, "178177": 299, "605768": 299, "518105": 299, "477206": 299, "980420": 299, "132983": 299, "320820": 299, "408266": 299, "811144": 299, "105503": 299, "180204": 299, "337790": 299, "031564": 299, "850645": 299, "457112": 299, "195385": 299, "525306": 299, "052073": 299, "814145": 299, "016286": 299, "404922": 299, "435102": 299, "602344": 299, "846592": 299, "815026": 299, "589215": 299, "451814": 299, "243399": 299, "926077": 299, "923185": 299, "866250": 299, "933824": 299, "944302": 299, "824234": 299, "495039": 299, "087071": 299, "735586": 299, "903583": 299, "573838": 299, "611250": 299, "556035": 299, "501681": 299, "749030": 299, "860290": 299, "874004": 299, "372005": 299, "941132": 299, "153441": 299, "133006": 299, "357159": 299, "193338": 299, "054769": 299, "iofv_summari": 299, "orgin": 299, "ob": 299, "sampled_mean": 299, "sampled_stdev": 299, "residual_q1": 299, "743042": 299, "219056": 299, "682820": 299, "550173": 299, "035912": 299, "049484": 299, "184218": 299, "853744": 299, "006216": 299, "975298": 299, "041599": 299, "817153": 299, "833045": 299, "781196": 299, "154061": 299, "813525": 299, "398238": 299, "645044": 299, "535071": 299, "205425": 299, "092618": 299, "104527": 299, "106160": 299, "955250": 299, "058617": 299, "344659": 299, "355728": 299, "480441": 299, "205000": 299, "804075": 299, "093249": 299, "372011": 299, "653334": 299, "076303": 299, "579270": 299, "515891": 299, "726464": 299, "480796": 299, "226795": 299, "894556": 299, "321253": 299, "216333": 299, "282456": 299, "045968": 299, "751381": 299, "998817": 299, "568506": 299, "544129": 299, "725055": 299, "084491": 299, "216676": 299, "724839": 299, "269729": 299, "664468": 299, "086120": 299, "099508": 299, "844053": 299, "234199": 299, "780837": 299, "277342": 299, "322169": 299, "051428": 299, "923117": 299, "660772": 299, "466385": 299, "260479": 299, "909214": 299, "004430": 299, "115441": 299, "597439": 299, "671231": 299, "358037": 299, "499079": 299, "674971": 299, "086542": 299, "331370": 299, "633905": 299, "558617": 299, "085015": 299, "554653": 299, "936751": 299, "068515": 299, "800265": 299, "310055": 299, "124015": 299, "712276": 299, "729628": 299, "167439": 299, "715703": 299, "274087": 299, "019852": 299, "305414": 299, "613668": 299, "109257": 299, "443973": 299, "056317": 299, "238664": 299, "161298": 299, "229080": 299, "385458": 299, "248420": 299, "105258": 299, "155784": 299, "539027": 299, "615940": 299, "605320": 299, "132029": 299, "756164": 299, "869343": 299, "544161": 299, "814910": 299, "779158": 299, "268737": 299, "897306": 299, "707535": 299, "453306": 299, "105961": 299, "531367": 299, "507478": 299, "179203": 299, "964192": 299, "235433": 299, "534690": 299, "029698": 299, "870557": 299, "187065": 299, "049483": 299, "611648": 299, "535116": 299, "053927": 299, "077425": 299, "840121": 299, "621227": 299, "470444": 299, "449597": 299, "941064": 299, "849583": 299, "418397": 299, "769517": 299, "495183": 299, "074840": 299, "265168": 299, "489546": 299, "543569": 299, "924754": 299, "255799": 299, "423379": 299, "792450": 299, "651388": 299, "107140": 299, "103779": 299, "709601": 299, "655290": 299, "365991": 299, "222470": 299, "908651": 299, "744590": 299, "726324": 299, "426971": 299, "126409": 299, "743926": 299, "055593": 299, "673502": 299, "381335": 299, "618133": 299, "047349": 299, "322600": 299, "222872": 299, "042834": 299, "180077": 299, "430602": 299, "209284": 299, "495631": 299, "189252": 299, "623118": 299, "780755": 299, "405726": 299, "643222": 299, "836788": 299, "746180": 299, "378962": 299, "498420": 299, "745719": 299, "565835": 299, "016391": 299, "193803": 299, "882538": 299, "054206": 299, "416539": 299, "288743": 299, "598975": 299, "649295": 299, "743847": 299, "028856": 299, "860963": 299, "709391": 299, "906579": 299, "841825": 299, "571912": 299, "121771": 299, "219260": 299, "791821": 299, "756310": 299, "933335": 299, "360735": 299, "121911": 299, "657069": 299, "952413": 299, "311206": 299, "124618": 299, "229621": 299, "945504": 299, "493299": 299, "630288": 299, "415407": 299, "756085": 299, "131488": 299, "213636": 299, "050337": 299, "463633": 299, "980475": 299, "118333": 299, "749123": 299, "229958": 299, "025404": 299, "813878": 299, "738522": 299, "668408": 299, "112740": 299, "972107": 299, "235064": 299, "396011": 299, "934618": 299, "518106": 299, "392308": 299, "216396": 299, "339562": 299, "024801": 299, "793238": 299, "057118": 299, "556378": 299, "796045": 299, "776264": 299, "019010": 299, "430617": 299, "431370": 299, "731493": 299, "527208": 299, "010968": 299, "724711": 299, "959211": 299, "448445": 299, "131466": 299, "302385": 299, "264697": 299, "597597": 299, "779232": 299, "494133": 299, "292477": 299, "639161": 299, "067293": 299, "167700": 299, "637834": 299, "067793": 299, "249132": 299, "314731": 299, "969084": 299, "239401": 299, "359860": 299, "215238": 299, "477740": 299, "578842": 299, "053376": 299, "340902": 299, "021182": 299, "172446": 299, "684367": 299, "059050": 299, "515114": 299, "245427": 299, "197044": 299, "787564": 299, "106919": 299, "970391": 299, "379183": 299, "982728": 299, "807580": 299, "296212": 299, "639192": 299, "874018": 299, "032032": 299, "252364": 299, "047063": 299, "residual_q3": 299, "residual_outli": 299, "832458": 299, "136329": 299, "090316": 299, "021748": 299, "766581": 299, "001176": 299, "238974": 299, "071653": 299, "388881": 299, "584759": 299, "780298": 299, "680349": 299, "043355": 299, "691710": 299, "827298": 299, "317850": 299, "008777": 299, "291308": 299, "498512": 299, "312807": 299, "178997": 299, "306182": 299, "116610": 299, "468439": 299, "007865": 299, "384037": 299, "344744": 299, "151930": 299, "790639": 299, "416342": 299, "637759": 299, "153920": 299, "135334": 299, "038095": 299, "705065": 299, "359915": 299, "588440": 299, "151899": 299, "730945": 299, "514178": 299, "784304": 299, "977290": 299, "707253": 299, "982678": 299, "384237": 299, "576792": 299, "302778": 299, "342653": 299, "313826": 299, "775998": 299, "274818": 299, "191111": 299, "817604": 299, "421290": 299, "461701": 299, "940801": 299, "437023": 299, "207477": 299, "755739": 299, "individual_predictions_plot": 299, "trim": 300, "modelsearch_dir1": 300, "hash": 300, "mytab_mox1": 300, "subfold": 300, "temporari": 300, "finish": 300, "recreat": 300, "frame": 300, "programmat": 300, "pharmpy_vers": 300, "tool_nam": 300, "start_tim": 300, "22t14": 300, "312240": 300, "end_tim": 300, "592109": 300, "common_opt": 300, "tmp": 300, "tool_result": 300, "locat": 300, "concis": 300, "newlin": 300, "semi": 300, "colon": 300, "endpoint": 300, "wildcard": 300, "nodepot": 300, "autom": 300, "gotcha": 301, "cran": 302, "rapid": 302, "remot": 302, "install_github": 302, "ref": 302, "install_pharmpi": 302, "session": 302, "packagevers": 302, "print_pharmpy_vers": 302, "reticul": 302, "miniconda": 302, "py_discover_config": 302, "conda_cr": 302, "python_vers": 302, "virtual": 302, "libpython": 302, "lib": 302, "libpython3": 302, "global": 302, "mirror": 302, "pipe": 302, "magrittr": 302}, "objects": {"pharmpy": [[260, 0, 0, "-", "model"], [261, 0, 0, "-", "modeling"], [262, 0, 0, "-", "tools"], [263, 0, 0, "-", "workflows"], [268, 6, 1, "cmdoption-pharmpy-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-version", "--version"], [268, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "ODESystem"], [24, 1, 1, "", "Parameter"], [25, 1, 1, "", "Parameters"], [26, 1, 1, "", "RandomVariables"], [27, 1, 1, "", "Results"], [28, 1, 1, "", "Statement"], [29, 1, 1, "", "Statements"], [30, 1, 1, "", "VariabilityHierarchy"], [31, 1, 1, "", "VariabilityLevel"], [32, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "admid"], [5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartment"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "admid"], [16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "init"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "name"], [24, 2, 1, "", "replace"], [24, 3, 1, "", "symbol"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "fixed"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "inits"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "names"], [25, 3, 1, "", "nonfixed"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "set_fix"], [25, 2, 1, "", "set_initial_estimates"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[26, 3, 1, "", "covariance_matrix"], [26, 2, 1, "", "create"], [26, 3, 1, "", "epsilon_levels"], [26, 3, 1, "", "epsilons"], [26, 3, 1, "", "eta_levels"], [26, 3, 1, "", "etas"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_rvs_with_same_dist"], [26, 3, 1, "", "iiv"], [26, 3, 1, "", "iov"], [26, 2, 1, "", "join"], [26, 3, 1, "", "names"], [26, 2, 1, "", "nearest_valid_parameters"], [26, 3, 1, "", "nrvs"], [26, 3, 1, "", "parameter_names"], [26, 2, 1, "", "parameters_sdcorr"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "replace_with_sympy_rvs"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "unjoin"], [26, 2, 1, "", "validate_parameters"], [26, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_and_reset_index"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[28, 3, 1, "", "free_symbols"], [28, 3, 1, "", "rhs_symbols"], [28, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[29, 3, 1, "", "after_odes"], [29, 3, 1, "", "before_odes"], [29, 2, 1, "", "dependencies"], [29, 2, 1, "", "direct_dependencies"], [29, 3, 1, "", "error"], [29, 2, 1, "", "find_assignment"], [29, 2, 1, "", "find_assignment_index"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "full_expression"], [29, 3, 1, "", "ode_system"], [29, 2, 1, "", "reassign"], [29, 2, 1, "", "remove_symbol_definitions"], [29, 2, 1, "", "subs"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "levels"], [30, 3, 1, "", "names"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[31, 2, 1, "", "create"], [31, 2, 1, "", "from_dict"], [31, 3, 1, "", "group"], [31, 3, 1, "", "name"], [31, 3, 1, "", "reference"], [31, 2, 1, "", "replace"], [31, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_metabolite"], [42, 5, 1, "", "add_peripheral_compartment"], [43, 5, 1, "", "add_pk_iiv"], [44, 5, 1, "", "add_population_parameter"], [45, 5, 1, "", "add_time_after_dose"], [46, 5, 1, "", "append_estimation_step_options"], [47, 5, 1, "", "bump_model_number"], [48, 5, 1, "", "calculate_aic"], [49, 5, 1, "", "calculate_bic"], [50, 5, 1, "", "calculate_corr_from_cov"], [51, 5, 1, "", "calculate_corr_from_prec"], [52, 5, 1, "", "calculate_cov_from_corrse"], [53, 5, 1, "", "calculate_cov_from_prec"], [54, 5, 1, "", "calculate_epsilon_gradient_expression"], [55, 5, 1, "", "calculate_eta_gradient_expression"], [56, 5, 1, "", "calculate_eta_shrinkage"], [57, 5, 1, "", "calculate_individual_parameter_statistics"], [58, 5, 1, "", "calculate_individual_shrinkage"], [59, 5, 1, "", "calculate_parameters_from_ucp"], [60, 5, 1, "", "calculate_pk_parameters_statistics"], [61, 5, 1, "", "calculate_prec_from_corrse"], [62, 5, 1, "", "calculate_prec_from_cov"], [63, 5, 1, "", "calculate_se_from_cov"], [64, 5, 1, "", "calculate_se_from_prec"], [65, 5, 1, "", "calculate_ucp_scale"], [66, 5, 1, "", "check_dataset"], [67, 5, 1, "", "check_high_correlations"], [68, 5, 1, "", "check_parameters_near_bounds"], [69, 5, 1, "", "cleanup_model"], [70, 5, 1, "", "convert_model"], [71, 5, 1, "", "create_basic_pk_model"], [72, 5, 1, "", "create_config_template"], [73, 5, 1, "", "create_joint_distribution"], [74, 5, 1, "", "create_rng"], [75, 5, 1, "", "create_symbol"], [76, 5, 1, "", "deidentify_data"], [77, 5, 1, "", "display_odes"], [78, 5, 1, "", "drop_columns"], [79, 5, 1, "", "drop_dropped_columns"], [80, 5, 1, "", "evaluate_epsilon_gradient"], [81, 5, 1, "", "evaluate_eta_gradient"], [82, 5, 1, "", "evaluate_expression"], [83, 5, 1, "", "evaluate_individual_prediction"], [84, 5, 1, "", "evaluate_population_prediction"], [85, 5, 1, "", "evaluate_weighted_residuals"], [86, 5, 1, "", "expand_additional_doses"], [87, 5, 1, "", "find_clearance_parameters"], [88, 5, 1, "", "find_volume_parameters"], [89, 5, 1, "", "fix_or_unfix_parameters"], [90, 5, 1, "", "fix_parameters"], [91, 5, 1, "", "fix_parameters_to"], [92, 5, 1, "", "get_baselines"], [93, 5, 1, "", "get_bioavailability"], [94, 5, 1, "", "get_cmt"], [95, 5, 1, "", "get_concentration_parameters_from_data"], [96, 5, 1, "", "get_config_path"], [97, 5, 1, "", "get_covariate_baselines"], [98, 5, 1, "", "get_doseid"], [99, 5, 1, "", "get_doses"], [100, 5, 1, "", "get_dv_symbol"], [101, 5, 1, "", "get_evid"], [102, 5, 1, "", "get_ids"], [103, 5, 1, "", "get_individual_parameters"], [104, 5, 1, "", "get_individual_prediction_expression"], [105, 5, 1, "", "get_initial_conditions"], [106, 5, 1, "", "get_lag_times"], [107, 5, 1, "", "get_mdv"], [108, 5, 1, "", "get_model_code"], [109, 5, 1, "", "get_model_covariates"], [110, 5, 1, "", "get_number_of_individuals"], [111, 5, 1, "", "get_number_of_observations"], [112, 5, 1, "", "get_number_of_observations_per_individual"], [113, 5, 1, "", "get_observation_expression"], [114, 5, 1, "", "get_observations"], [115, 5, 1, "", "get_omegas"], [116, 5, 1, "", "get_pk_parameters"], [117, 5, 1, "", "get_population_prediction_expression"], [118, 5, 1, "", "get_rv_parameters"], [119, 5, 1, "", "get_sigmas"], [120, 5, 1, "", "get_thetas"], [121, 5, 1, "", "get_unit_of"], [122, 5, 1, "", "get_zero_order_inputs"], [123, 5, 1, "", "greekify_model"], [124, 5, 1, "", "has_additive_error_model"], [125, 5, 1, "", "has_combined_error_model"], [126, 5, 1, "", "has_covariate_effect"], [127, 5, 1, "", "has_first_order_elimination"], [128, 5, 1, "", "has_linear_odes"], [129, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [130, 5, 1, "", "has_michaelis_menten_elimination"], [131, 5, 1, "", "has_mixed_mm_fo_elimination"], [132, 5, 1, "", "has_odes"], [133, 5, 1, "", "has_proportional_error_model"], [134, 5, 1, "", "has_random_effect"], [135, 5, 1, "", "has_weighted_error_model"], [136, 5, 1, "", "has_zero_order_absorption"], [137, 5, 1, "", "has_zero_order_elimination"], [138, 5, 1, "", "is_linearized"], [139, 5, 1, "", "is_real"], [140, 5, 1, "", "list_time_varying_covariates"], [141, 5, 1, "", "load_example_model"], [142, 5, 1, "", "make_declarative"], [143, 5, 1, "", "mu_reference_model"], [144, 5, 1, "", "omit_data"], [145, 5, 1, "", "plot_individual_predictions"], [146, 5, 1, "", "plot_iofv_vs_iofv"], [147, 5, 1, "", "plot_transformed_eta_distributions"], [148, 5, 1, "", "print_model_code"], [149, 5, 1, "", "print_model_symbols"], [150, 5, 1, "", "read_dataset_from_datainfo"], [151, 5, 1, "", "read_model"], [152, 5, 1, "", "read_model_from_string"], [153, 5, 1, "", "remove_covariance_step"], [154, 5, 1, "", "remove_covariate_effect"], [155, 5, 1, "", "remove_error_model"], [156, 5, 1, "", "remove_estimation_step"], [157, 5, 1, "", "remove_iiv"], [158, 5, 1, "", "remove_iov"], [159, 5, 1, "", "remove_lag_time"], [160, 5, 1, "", "remove_loq_data"], [161, 5, 1, "", "remove_peripheral_compartment"], [162, 5, 1, "", "remove_unused_parameters_and_rvs"], [163, 5, 1, "", "rename_symbols"], [164, 5, 1, "", "resample_data"], [165, 5, 1, "", "sample_individual_estimates"], [166, 5, 1, "", "sample_parameters_from_covariance_matrix"], [167, 5, 1, "", "sample_parameters_uniformly"], [168, 5, 1, "", "set_additive_error_model"], [169, 5, 1, "", "set_bolus_absorption"], [170, 5, 1, "", "set_combined_error_model"], [171, 5, 1, "", "set_covariates"], [172, 5, 1, "", "set_dtbs_error_model"], [173, 5, 1, "", "set_dvid"], [174, 5, 1, "", "set_estimation_step"], [175, 5, 1, "", "set_evaluation_step"], [176, 5, 1, "", "set_first_order_absorption"], [177, 5, 1, "", "set_first_order_elimination"], [178, 5, 1, "", "set_iiv_on_ruv"], [179, 5, 1, "", "set_initial_condition"], [180, 5, 1, "", "set_initial_estimates"], [181, 5, 1, "", "set_lower_bounds"], [182, 5, 1, "", "set_michaelis_menten_elimination"], [183, 5, 1, "", "set_mixed_mm_fo_elimination"], [184, 5, 1, "", "set_name"], [185, 5, 1, "", "set_ode_solver"], [186, 5, 1, "", "set_peripheral_compartments"], [187, 5, 1, "", "set_power_on_ruv"], [188, 5, 1, "", "set_proportional_error_model"], [189, 5, 1, "", "set_seq_zo_fo_absorption"], [190, 5, 1, "", "set_time_varying_error_model"], [191, 5, 1, "", "set_tmdd"], [192, 5, 1, "", "set_transit_compartments"], [193, 5, 1, "", "set_upper_bounds"], [194, 5, 1, "", "set_weighted_error_model"], [195, 5, 1, "", "set_zero_order_absorption"], [196, 5, 1, "", "set_zero_order_elimination"], [197, 5, 1, "", "set_zero_order_input"], [198, 5, 1, "", "simplify_expression"], [199, 5, 1, "", "solve_ode_system"], [200, 5, 1, "", "split_joint_distribution"], [201, 5, 1, "", "transform_blq"], [202, 5, 1, "", "transform_etas_boxcox"], [203, 5, 1, "", "transform_etas_john_draper"], [204, 5, 1, "", "transform_etas_tdist"], [205, 5, 1, "", "translate_nmtran_time"], [206, 5, 1, "", "unconstrain_parameters"], [207, 5, 1, "", "undrop_columns"], [208, 5, 1, "", "unfix_parameters"], [209, 5, 1, "", "unfix_parameters_to"], [210, 5, 1, "", "update_initial_individual_estimates"], [211, 5, 1, "", "update_inits"], [212, 5, 1, "", "use_thetas_for_error_stdev"], [213, 5, 1, "", "write_csv"], [214, 5, 1, "", "write_model"]], "pharmpy.tools": [[215, 5, 1, "", "create_report"], [216, 5, 1, "", "create_results"], [217, 5, 1, "", "fit"], [218, 5, 1, "", "load_example_modelfit_results"], [219, 5, 1, "", "predict_influential_individuals"], [220, 5, 1, "", "predict_influential_outliers"], [221, 5, 1, "", "predict_outliers"], [222, 5, 1, "", "print_fit_summary"], [223, 5, 1, "", "rank_models"], [224, 5, 1, "", "read_modelfit_results"], [225, 5, 1, "", "read_results"], [226, 5, 1, "", "resume_tool"], [227, 5, 1, "", "retrieve_final_model"], [228, 5, 1, "", "retrieve_models"], [229, 5, 1, "", "run_allometry"], [230, 5, 1, "", "run_amd"], [231, 5, 1, "", "run_bootstrap"], [232, 5, 1, "", "run_covsearch"], [233, 5, 1, "", "run_estmethod"], [234, 5, 1, "", "run_iivsearch"], [235, 5, 1, "", "run_iovsearch"], [236, 5, 1, "", "run_modelfit"], [237, 5, 1, "", "run_modelsearch"], [238, 5, 1, "", "run_ruvsearch"], [239, 5, 1, "", "run_tool"], [240, 5, 1, "", "summarize_errors"], [241, 5, 1, "", "summarize_individuals"], [242, 5, 1, "", "summarize_individuals_count_table"], [243, 5, 1, "", "summarize_modelfit_results"], [244, 5, 1, "", "write_results"]], "pharmpy.workflows": [[245, 1, 1, "", "LocalDirectoryDatabase"], [246, 1, 1, "", "LocalDirectoryToolDatabase"], [247, 1, 1, "", "LocalModelDirectoryDatabase"], [248, 1, 1, "", "Log"], [249, 1, 1, "", "ModelDatabase"], [250, 1, 1, "", "NullModelDatabase"], [251, 1, 1, "", "NullToolDatabase"], [252, 1, 1, "", "Task"], [253, 1, 1, "", "ToolDatabase"], [254, 1, 1, "", "Workflow"], [255, 5, 1, "", "call_workflow"], [256, 3, 1, "", "default_model_database"], [257, 3, 1, "", "default_tool_database"], [258, 5, 1, "", "execute_workflow"], [259, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[245, 2, 1, "", "retrieve_file"], [245, 2, 1, "", "retrieve_local_files"], [245, 2, 1, "", "retrieve_model"], [245, 2, 1, "", "retrieve_modelfit_results"], [245, 2, 1, "", "store_local_file"], [245, 2, 1, "", "store_metadata"], [245, 2, 1, "", "store_model"], [245, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[246, 2, 1, "", "from_dict"], [246, 2, 1, "", "read_metadata"], [246, 2, 1, "", "store_local_file"], [246, 2, 1, "", "store_metadata"], [246, 2, 1, "", "store_results"], [246, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[247, 2, 1, "", "list_models"], [247, 2, 1, "", "snapshot"], [247, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[248, 2, 1, "", "from_dict"], [248, 3, 1, "", "log"], [248, 2, 1, "", "log_error"], [248, 2, 1, "", "log_warning"], [248, 2, 1, "", "to_dataframe"], [248, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[249, 2, 1, "", "retrieve_file"], [249, 2, 1, "", "retrieve_local_files"], [249, 2, 1, "", "retrieve_model"], [249, 2, 1, "", "retrieve_modelfit_results"], [249, 2, 1, "", "snapshot"], [249, 2, 1, "", "store_local_file"], [249, 2, 1, "", "store_metadata"], [249, 2, 1, "", "store_model"], [249, 2, 1, "", "store_modelfit_results"], [249, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[250, 2, 1, "", "retrieve_file"], [250, 2, 1, "", "retrieve_local_files"], [250, 2, 1, "", "retrieve_model"], [250, 2, 1, "", "retrieve_modelfit_results"], [250, 2, 1, "", "store_local_file"], [250, 2, 1, "", "store_metadata"], [250, 2, 1, "", "store_model"], [250, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[251, 2, 1, "", "read_metadata"], [251, 2, 1, "", "store_local_file"], [251, 2, 1, "", "store_metadata"], [251, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[253, 3, 1, "", "model_database"], [253, 3, 1, "", "path"], [253, 2, 1, "", "read_metadata"], [253, 2, 1, "", "store_local_file"], [253, 2, 1, "", "store_metadata"], [253, 2, 1, "", "store_results"]], "pharmpy-data-append": [[268, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [268, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[268, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[268, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [268, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[268, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [268, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[268, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [268, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [268, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [268, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [268, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [268, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [268, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[268, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[268, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[268, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[268, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[268, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[268, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[268, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [268, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[268, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[268, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [268, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[268, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[268, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [268, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [268, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[268, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[268, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [268, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [268, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [268, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [268, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[268, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[268, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[268, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[268, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [268, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [268, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [268, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[268, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[268, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[268, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[268, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[268, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[268, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[268, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[268, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[268, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[268, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[268, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[268, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [268, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [268, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [268, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [268, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [268, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [268, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [268, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [268, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [268, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [268, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [268, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[268, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [268, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[268, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[268, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [268, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [268, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [268, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[268, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[268, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [268, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[268, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[268, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [268, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [268, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[268, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [268, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 290], "dataset": [0, 275, 300], "overview": [0, 292, 296], "pars": 0, "translat": 0, "step": [0, 298], "nm": 0, "tran": 0, "comment": 0, "line": [0, 268], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 275, 288], "date": 0, "id": 0, "check": [0, 271], "tabl": 0, "file": [0, 270, 275, 288], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 271], "all": 0, "zero": [0, 288], "individu": [0, 264, 265, 279, 285, 287, 288, 299], "control": 0, "stream": 0, "gener": [0, 284], "option": [0, 263, 300], "problem": 0, "data": [0, 263, 268], "eta": [0, 288], "code": [0, 269, 271, 286, 288], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 27, 264, 265, 268, 273, 274, 278, 279, 281, 283, 285, 287, 288, 289, 294, 296, 297, 298, 299, 300], "spars": 0, "matrix": [0, 264, 287], "allometri": [1, 2, 268], "run": [1, 2, 268, 271, 273, 278, 281, 283, 288, 289, 297, 300], "argument": [1, 2, 273, 278, 281, 283, 289, 297], "procedur": [1, 297], "The": [1, 264, 265, 268, 270, 274, 276, 278, 279, 281, 285, 286, 288, 289, 294, 296, 297, 298, 299], "automat": 2, "model": [2, 18, 260, 261, 268, 275, 276, 281, 286, 288, 289, 290, 294, 297, 300], "develop": [2, 271, 272, 277], "amd": [2, 268], "input": [2, 272], "search": [2, 281, 289], "space": [2, 289], "order": [2, 288], "subtool": 2, "structur": [2, 281, 296], "iivsearch": [2, 268, 281], "iovsearch": [2, 268, 283], "residu": [2, 287, 296], "covari": [2, 264, 265, 279, 281, 287, 288, 296], "api": 3, "refer": [3, 265, 279], "assign": 4, "bolu": [5, 288], "columninfo": [6, 275], "compart": [7, 288], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 275], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 283, 288], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "odesystem": 23, "paramet": [24, 25, 264, 275, 276, 279, 286, 287, 288, 290], "randomvari": [26, 276], "statement": [28, 29, 276, 286], "variabilityhierarchi": 30, "variabilitylevel": 31, "to_compartmental_system": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 268], "add_individual_paramet": 38, "add_iov": [39, 268], "add_lag_tim": 40, "add_metabolit": 41, "add_peripheral_compart": 42, "add_pk_iiv": 43, "add_population_paramet": 44, "add_time_after_dos": 45, "append_estimation_step_opt": 46, "bump_model_numb": 47, "calculate_a": 48, "calculate_b": 49, "calculate_corr_from_cov": 50, "calculate_corr_from_prec": 51, "calculate_cov_from_corrs": 52, "calculate_cov_from_prec": 53, "calculate_epsilon_gradient_express": 54, "calculate_eta_gradient_express": 55, "calculate_eta_shrinkag": 56, "calculate_individual_parameter_statist": 57, "calculate_individual_shrinkag": 58, "calculate_parameters_from_ucp": 59, "calculate_pk_parameters_statist": 60, "calculate_prec_from_corrs": 61, "calculate_prec_from_cov": 62, "calculate_se_from_cov": 63, "calculate_se_from_prec": 64, "calculate_ucp_scal": 65, "check_dataset": 66, "check_high_correl": 67, "check_parameters_near_bound": 68, "cleanup_model": 69, "convert_model": 70, "create_basic_pk_model": 71, "create_config_templ": 72, "create_joint_distribut": [73, 268], "create_rng": 74, "create_symbol": 75, "deidentify_data": 76, "display_od": 77, "drop_column": 78, "drop_dropped_column": 79, "evaluate_epsilon_gradi": 80, "evaluate_eta_gradi": 81, "evaluate_express": 82, "evaluate_individual_predict": 83, "evaluate_population_predict": 84, "evaluate_weighted_residu": 85, "expand_additional_dos": 86, "find_clearance_paramet": 87, "find_volume_paramet": 88, "fix_or_unfix_paramet": 89, "fix_paramet": 90, "fix_parameters_to": 91, "get_baselin": 92, "get_bioavail": 93, "get_cmt": 94, "get_concentration_parameters_from_data": 95, "get_config_path": 96, "get_covariate_baselin": 97, "get_doseid": 98, "get_dos": 99, "get_dv_symbol": 100, "get_evid": 101, "get_id": 102, "get_individual_paramet": 103, "get_individual_prediction_express": 104, "get_initial_condit": 105, "get_lag_tim": 106, "get_mdv": 107, "get_model_cod": 108, "get_model_covari": 109, "get_number_of_individu": 110, "get_number_of_observ": 111, "get_number_of_observations_per_individu": 112, "get_observation_express": 113, "get_observ": 114, "get_omega": 115, "get_pk_paramet": 116, "get_population_prediction_express": 117, "get_rv_paramet": 118, "get_sigma": 119, "get_theta": 120, "get_unit_of": 121, "get_zero_order_input": 122, "greekify_model": 123, "has_additive_error_model": 124, "has_combined_error_model": 125, "has_covariate_effect": 126, "has_first_order_elimin": 127, "has_linear_od": 128, "has_linear_odes_with_real_eigenvalu": 129, "has_michaelis_menten_elimin": 130, "has_mixed_mm_fo_elimin": 131, "has_od": 132, "has_proportional_error_model": 133, "has_random_effect": 134, "has_weighted_error_model": 135, "has_zero_order_absorpt": 136, "has_zero_order_elimin": 137, "is_linear": 138, "is_real": 139, "list_time_varying_covari": 140, "load_example_model": 141, "make_declar": 142, "mu_reference_model": 143, "omit_data": 144, "plot_individual_predict": 145, "plot_iofv_vs_iofv": 146, "plot_transformed_eta_distribut": 147, "print_model_cod": 148, "print_model_symbol": 149, "read_dataset_from_datainfo": 150, "read_model": 151, "read_model_from_str": 152, "remove_covariance_step": 153, "remove_covariate_effect": 154, "remove_error_model": 155, "remove_estimation_step": 156, "remove_iiv": [157, 268], "remove_iov": [158, 268], "remove_lag_tim": 159, "remove_loq_data": 160, "remove_peripheral_compart": 161, "remove_unused_parameters_and_rv": 162, "rename_symbol": 163, "resample_data": 164, "sample_individual_estim": 165, "sample_parameters_from_covariance_matrix": 166, "sample_parameters_uniformli": 167, "set_additive_error_model": 168, "set_bolus_absorpt": 169, "set_combined_error_model": 170, "set_covari": 171, "set_dtbs_error_model": 172, "set_dvid": 173, "set_estimation_step": 174, "set_evaluation_step": 175, "set_first_order_absorpt": 176, "set_first_order_elimin": 177, "set_iiv_on_ruv": 178, "set_initial_condit": 179, "set_initial_estim": 180, "set_lower_bound": 181, "set_michaelis_menten_elimin": 182, "set_mixed_mm_fo_elimin": 183, "set_nam": 184, "set_ode_solv": 185, "set_peripheral_compart": 186, "set_power_on_ruv": 187, "set_proportional_error_model": 188, "set_seq_zo_fo_absorpt": 189, "set_time_varying_error_model": 190, "set_tmdd": 191, "set_transit_compart": 192, "set_upper_bound": 193, "set_weighted_error_model": 194, "set_zero_order_absorpt": 195, "set_zero_order_elimin": 196, "set_zero_order_input": 197, "simplify_express": 198, "solve_ode_system": 199, "split_joint_distribut": 200, "transform_blq": 201, "transform_etas_boxcox": 202, "transform_etas_john_drap": 203, "transform_etas_tdist": 204, "translate_nmtran_tim": 205, "unconstrain_paramet": 206, "undrop_column": 207, "unfix_paramet": 208, "unfix_parameters_to": 209, "update_initial_individual_estim": 210, "update_init": [211, 268], "use_thetas_for_error_stdev": 212, "write_csv": 213, "write_model": 214, "create_report": 215, "create_result": 216, "fit": [217, 288], "load_example_modelfit_result": 218, "predict_influential_individu": 219, "predict_influential_outli": 220, "predict_outli": 221, "print_fit_summari": 222, "rank_model": 223, "read_modelfit_result": 224, "read_result": 225, "resume_tool": 226, "retrieve_final_model": 227, "retrieve_model": 228, "run_allometri": 229, "run_amd": 230, "run_bootstrap": 231, "run_covsearch": 232, "run_estmethod": 233, "run_iivsearch": 234, "run_iovsearch": 235, "run_modelfit": 236, "run_modelsearch": 237, "run_ruvsearch": 238, "run_tool": 239, "summarize_error": 240, "summarize_individu": 241, "summarize_individuals_count_t": 242, "summarize_modelfit_result": 243, "write_result": 244, "localdirectorydatabas": 245, "localdirectorytooldatabas": 246, "localmodeldirectorydatabas": 247, "log": 248, "modeldatabas": 249, "nullmodeldatabas": 250, "nulltooldatabas": 251, "task": 252, "tooldatabas": 253, "workflow": [254, 263, 271], "call_workflow": 255, "default_model_databas": 256, "default_tool_databas": 257, "execute_workflow": 258, "split_common_opt": 259, "pharmpi": [260, 261, 262, 263, 267, 268, 269, 271, 275, 276, 282, 286, 291, 295, 300, 302], "packag": [260, 261, 262, 263], "function": [260, 261, 262, 263], "class": [260, 263, 276], "tool": [262, 295, 300], "modul": [263, 276], "bootstrap": [264, 268], "postprocess": [264, 279], "statist": 264, "ofv": [264, 265, 268, 274, 279, 285, 287, 298, 299], "includ": 264, "case": 265, "delet": 265, "diagnost": 265, "cdd": [265, 268], "cook": 265, "score": 265, "jackknif": 265, "cookscor": 265, "ratio": 265, "delta": 265, "skip": 265, "column": 265, "changelog": 266, "0": 266, "96": 266, "2023": 266, "05": 266, "26": 266, "chang": [266, 291], "new": [266, 283, 288, 290], "featur": [266, 289, 300], "bugfix": 266, "95": 266, "22": 266, "94": 266, "04": 266, "93": 266, "19": 266, "92": 266, "91": 266, "03": 266, "90": 266, "02": 266, "24": 266, "89": 266, "01": 266, "88": 266, "2022": 266, "12": 266, "21": 266, "87": 266, "14": 266, "86": 266, "11": 266, "30": 266, "85": 266, "18": 266, "84": 266, "1": 266, "13": 266, "bug": 266, "fix": [266, 288], "09": 266, "83": 266, "82": 266, "10": 266, "81": 266, "80": 266, "79": 266, "16": 266, "78": 266, "20": 266, "77": 266, "08": 266, "76": 266, "06": 266, "75": 266, "74": 266, "07": 266, "73": 266, "72": 266, "71": 266, "70": 266, "17": 266, "69": 266, "29": 266, "68": 266, "27": 266, "67": 266, "25": 266, "66": 266, "65": 266, "64": 266, "63": 266, "62": 266, "61": 266, "31": 266, "59": 266, "58": 266, "4": 266, "57": 266, "56": 266, "55": 266, "54": 266, "53": 266, "52": 266, "51": 266, "50": 266, "49": 266, "48": 266, "47": 266, "28": 266, "46": 266, "45": 266, "44": 266, "43": 266, "42": 266, "41": 266, "2021": 266, "40": 266, "39": 266, "15": 266, "38": 266, "37": 266, "36": 266, "35": 266, "34": 266, "3": 266, "2": [266, 284], "33": 266, "32": 266, "23": 266, "2020": 266, "9": 266, "8": 266, "7": 266, "6": 266, "5": 266, "2018": 266, "citat": 267, "how": 267, "cite": 267, "pharmr": [267, 302], "command": 268, "interfac": 268, "append": 268, "deidentifi": 268, "filter": 268, "print": 268, "resampl": 268, "write": [268, 286, 288, 290], "info": 268, "absorption_r": 268, "add_cov_effect": 268, "boxcox": [268, 288, 296], "elimination_r": 268, "error": [268, 287, 288, 296, 302], "iiv_on_ruv": 268, "john_drap": 268, "peripheral_compart": 268, "power_on_ruv": 268, "sampl": [268, 299], "tdist": [268, 296], "transit_compart": 268, "frem": [268, 279], "linear": [268, 285], "qa": [268, 296], "report": 268, "ruvsearch": [268, 297], "scm": [268, 298], "simev": [268, 299], "summari": [268, 298, 299], "covsearch": [268, 273], "estmethod": [268, 278], "execut": 268, "modelsearch": [268, 289], "commun": 269, "conduct": 269, "configur": 270, "environ": [270, 271], "variabl": [270, 279, 286, 290], "contribut": 271, "set": [271, 286, 288, 291], "up": 271, "support": 271, "platform": 271, "instal": [271, 280, 302], "python": [271, 302], "git": 271, "fork": 271, "clone": 271, "repositori": 271, "tox": 271, "graphviz": 271, "us": [271, 290, 302], "build": 271, "document": [271, 277], "unit": [271, 275], "test": 271, "integr": 271, "usabl": 271, "virtual": 271, "standard": [271, 287, 288], "releas": 271, "version": [271, 302], "inform": [271, 275], "contributor": 272, "scientif": 272, "fund": 272, "effect": [273, 279, 288, 296], "wildcard": 273, "algorithm": [273, 278, 281, 283, 289], "crossval": 274, "crossvalid": 274, "retriev": 275, "from": [275, 288], "updat": [275, 278, 288], "subject": 275, "observ": 275, "dose": 275, "extract": 275, "group": 275, "after": 275, "concentr": 275, "type": [275, 300], "scale": 275, "continu": 275, "categori": 275, "drop": 275, "datatyp": 275, "descriptor": 275, "design": 276, "principl": 276, "level": 276, "architectur": 276, "heart": 276, "docstr": 276, "depend": [276, 286], "exhaust": [278, 289], "onli": 278, "evalu": 278, "method": 278, "solver": 278, "coeffici": 279, "unexplain": 279, "estim": [279, 287, 288], "valu": 279, "get": [280, 286, 288], "start": [280, 281], "A": 280, "first": [280, 288], "exampl": [280, 300], "brute": 281, "forc": 281, "number": [281, 288], "iiv": [281, 288, 289], "full": 281, "ad": [281, 288, 289], "compar": [281, 283, 289], "rank": [281, 283, 289], "candid": [281, 283, 289, 298], "welcom": 282, "iov": [283, 288], "licens": 284, "logo": 284, "copyright": 284, "bsd": 284, "claus": 284, "gnu": 284, "lesser": 284, "public": 284, "read": [286, 287, 288, 290], "name": [286, 290], "random": [286, 290], "modelfit": 287, "final": 287, "rel": 287, "correl": 287, "precis": 287, "indiviud": 287, "predict": [287, 299], "basic": 288, "sourc": 288, "string": 288, "unfix": 288, "add": 288, "pk": 288, "od": 288, "system": 288, "absorpt": 288, "rate": 288, "sequenti": 288, "delai": 288, "transit": 288, "lag": 288, "elimin": 288, "micha": 288, "menten": 288, "mix": 288, "peripher": 288, "remov": 288, "transform": 288, "approxim": 288, "t": 288, "john": 288, "draper": 288, "an": 288, "addit": 288, "proport": 288, "combin": [288, 289], "appli": 288, "ruv": 288, "power": 288, "deviat": 288, "epsilon": 288, "theta": 288, "weight": 288, "dtb": 288, "creat": 288, "joint": 288, "multipl": 288, "between": [288, 289, 302], "initi": 288, "previou": 288, "psn": [288, 295], "shrinkag": 288, "calcul": 288, "common": [289, 300], "behaviour": 289, "exclus": 289, "stepwis": 289, "reduc": 289, "dure": 289, "plugin": [290, 292], "plot": [291, 299], "theme": 291, "axi": 291, "project": 293, "suggest": 293, "resmod": 294, "connect": 295, "bia": 296, "fullblock": 296, "databas": 300, "directori": 300, "metadata": 300, "languag": 300, "mfl": 300, "symbol": 300, "describ": 300, "interv": 300, "redund": 300, "descript": 300, "user": 301, "guid": 301, "r": 302, "troubl": 302, "shoot": 302, "wrong": 302, "import": 302, "mismatch": 302, "gotcha": 302, "list": 302, "indic": 302}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"add_peripheral_compartment": [[42, "add-peripheral-compartment"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "calculate_eta_gradient_expression": [[55, "calculate-eta-gradient-expression"]], "calculate_eta_shrinkage": [[56, "calculate-eta-shrinkage"]], "add_population_parameter": [[44, "add-population-parameter"]], "calculate_aic": [[48, "calculate-aic"]], "check_parameters_near_bounds": [[68, "check-parameters-near-bounds"]], "calculate_se_from_prec": [[64, "calculate-se-from-prec"]], "cleanup_model": [[69, "cleanup-model"]], "calculate_cov_from_prec": [[53, "calculate-cov-from-prec"]], "calculate_corr_from_prec": [[51, "calculate-corr-from-prec"]], "calculate_se_from_cov": [[63, "calculate-se-from-cov"]], "create_symbol": [[75, "create-symbol"]], "check_high_correlations": [[67, "check-high-correlations"]], "add_time_after_dose": [[45, "add-time-after-dose"]], "bump_model_number": [[47, "bump-model-number"]], "append_estimation_step_options": [[46, "append-estimation-step-options"]], "calculate_prec_from_cov": [[62, "calculate-prec-from-cov"]], "check_dataset": [[66, "check-dataset"]], "calculate_individual_parameter_statistics": [[57, "calculate-individual-parameter-statistics"]], "calculate_individual_shrinkage": [[58, "calculate-individual-shrinkage"]], "create_rng": [[74, "create-rng"]], "calculate_bic": [[49, "calculate-bic"]], "add_lag_time": [[40, "add-lag-time"]], "convert_model": [[70, "convert-model"]], "create_config_template": [[72, "create-config-template"]], "calculate_cov_from_corrse": [[52, "calculate-cov-from-corrse"]], "calculate_ucp_scale": [[65, "calculate-ucp-scale"]], "calculate_prec_from_corrse": [[61, "calculate-prec-from-corrse"]], "add_pk_iiv": [[43, "add-pk-iiv"]], "calculate_corr_from_cov": [[50, "calculate-corr-from-cov"]], "add_iov": [[39, "add-iov"]], "calculate_pk_parameters_statistics": [[60, "calculate-pk-parameters-statistics"]], "add_metabolite": [[41, "add-metabolite"]], "create_joint_distribution": [[73, "create-joint-distribution"]], "create_basic_pk_model": [[71, "create-basic-pk-model"]], "calculate_parameters_from_ucp": [[59, "calculate-parameters-from-ucp"]], "calculate_epsilon_gradient_expression": [[54, "calculate-epsilon-gradient-expression"]], "Statements": [[29, "statements"]], "DatasetError": [[11, "dataseterror"]], "EstimationSteps": [[15, "estimationsteps"]], "VariabilityHierarchy": [[30, "variabilityhierarchy"]], "Results": [[27, "results"], [2, "results"], [300, "results"], [273, "results"], [283, "results"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Running": [[2, "running"], [1, "running"], [297, "running"], [273, "running"], [278, "running"], [283, "running"], [281, "running"], [289, "running"]], "Arguments": [[2, "arguments"], [1, "arguments"], [297, "arguments"], [273, "arguments"], [278, "arguments"], [283, "arguments"], [281, "arguments"], [289, "arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [281, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [283, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Parameters": [[25, "parameters"], [288, "parameters"]], "DataInfo": [[10, "datainfo"], [275, "datainfo"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "ColumnInfo": [[6, "columninfo"], [275, "columninfo"]], "Assignment": [[4, "assignment"]], "to_compartmental_system": [[32, "to-compartmental-system"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "RandomVariables": [[26, "randomvariables"]], "API Reference": [[3, "api-reference"]], "VariabilityLevel": [[31, "variabilitylevel"]], "ModelError": [[19, "modelerror"]], "EstimationStep": [[14, "estimationstep"]], "Parameter": [[24, "parameter"]], "add_iiv": [[37, "add-iiv"]], "Statement": [[28, "statement"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "DatasetWarning": [[12, "datasetwarning"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "add_covariance_step": [[34, "add-covariance-step"]], "add_estimation_step": [[36, "add-estimation-step"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "NormalDistribution": [[22, "normaldistribution"]], "Bolus": [[5, "bolus"]], "Infusion": [[16, "infusion"]], "Compartment": [[7, "compartment"]], "add_allometry": [[33, "add-allometry"]], "ODESystem": [[23, "odesystem"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [297, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "Distribution": [[13, "distribution"], [288, "distribution"]], "Model": [[18, "model"]], "call_workflow": [[255, "call-workflow"]], "run_modelsearch": [[237, "run-modelsearch"]], "ToolDatabase": [[253, "tooldatabase"]], "default_tool_database": [[257, "default-tool-database"]], "Workflow": [[254, "workflow"]], "Bootstrap": [[264, "bootstrap"]], "The Bootstrap postprocessing and results": [[264, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[264, "parameter-statistics"]], "OFV statistics": [[264, "ofv-statistics"]], "Covariance matrix": [[264, "covariance-matrix"], [287, "covariance-matrix"]], "Included individuals": [[264, "included-individuals"]], "Task": [[252, "task"]], "Log": [[248, "log"]], "NullToolDatabase": [[251, "nulltooldatabase"]], "summarize_individuals_count_table": [[242, "summarize-individuals-count-table"]], "run_iovsearch": [[235, "run-iovsearch"]], "run_estmethod": [[233, "run-estmethod"]], "run_amd": [[230, "run-amd"]], "write_results": [[244, "write-results"]], "retrieve_models": [[228, "retrieve-models"]], "LocalDirectoryDatabase": [[245, "localdirectorydatabase"]], "run_tool": [[239, "run-tool"]], "pharmpy.modeling Package": [[261, "module-pharmpy.modeling"]], "Functions": [[261, "functions"], [262, "functions"], [260, "functions"], [263, "functions"]], "run_allometry": [[229, "run-allometry"]], "NullModelDatabase": [[250, "nullmodeldatabase"]], "run_covsearch": [[232, "run-covsearch"]], "run_ruvsearch": [[238, "run-ruvsearch"]], "summarize_individuals": [[241, "summarize-individuals"]], "summarize_modelfit_results": [[243, "summarize-modelfit-results"]], "LocalDirectoryToolDatabase": [[246, "localdirectorytooldatabase"]], "run_bootstrap": [[231, "run-bootstrap"]], "default_model_database": [[256, "default-model-database"]], "pharmpy.tools Package": [[262, "module-pharmpy.tools"]], "pharmpy.model Package": [[260, "module-pharmpy.model"]], "Classes": [[260, "classes"], [263, "classes"]], "run_iivsearch": [[234, "run-iivsearch"]], "summarize_errors": [[240, "summarize-errors"]], "execute_workflow": [[258, "execute-workflow"]], "LocalModelDirectoryDatabase": [[247, "localmodeldirectorydatabase"]], "ModelDatabase": [[249, "modeldatabase"]], "pharmpy.workflows Package": [[263, "module-pharmpy.workflows"]], "Options for the data module": [[263, "id1"]], "Case deletion diagnostics": [[265, "case-deletion-diagnostics"]], "The cdd results": [[265, "the-cdd-results"]], "Case results": [[265, "case-results"]], "Cook score": [[265, "cook-score"]], "Jackknife cookscore": [[265, "jackknife-cookscore"]], "Covariance ratio": [[265, "covariance-ratio"]], "Delta OFV": [[265, "delta-ofv"]], "Skipped individuals": [[265, "skipped-individuals"]], "Case column": [[265, "case-column"]], "References": [[265, "references"], [279, "references"]], "run_modelfit": [[236, "run-modelfit"]], "split_common_options": [[259, "split-common-options"]], "unconstrain_parameters": [[206, "unconstrain-parameters"]], "resume_tool": [[226, "resume-tool"]], "unfix_parameters_to": [[209, "unfix-parameters-to"]], "set_tmdd": [[191, "set-tmdd"]], "simplify_expression": [[198, "simplify-expression"]], "transform_etas_tdist": [[204, "transform-etas-tdist"]], "write_model": [[214, "write-model"]], "use_thetas_for_error_stdev": [[212, "use-thetas-for-error-stdev"]], "predict_outliers": [[221, "predict-outliers"]], "retrieve_final_model": [[227, "retrieve-final-model"]], "load_example_modelfit_results": [[218, "load-example-modelfit-results"]], "split_joint_distribution": [[200, "split-joint-distribution"]], "print_fit_summary": [[222, "print-fit-summary"]], "undrop_columns": [[207, "undrop-columns"]], "predict_influential_individuals": [[219, "predict-influential-individuals"]], "solve_ode_system": [[199, "solve-ode-system"]], "set_upper_bounds": [[193, "set-upper-bounds"]], "rank_models": [[223, "rank-models"]], "set_zero_order_input": [[197, "set-zero-order-input"]], "transform_etas_boxcox": [[202, "transform-etas-boxcox"]], "update_inits": [[211, "update-inits"]], "update_initial_individual_estimates": [[210, "update-initial-individual-estimates"]], "set_zero_order_absorption": [[195, "set-zero-order-absorption"]], "transform_blq": [[201, "transform-blq"]], "write_csv": [[213, "write-csv"]], "set_weighted_error_model": [[194, "set-weighted-error-model"]], "predict_influential_outliers": [[220, "predict-influential-outliers"]], "set_transit_compartments": [[192, "set-transit-compartments"]], "read_modelfit_results": [[224, "read-modelfit-results"]], "fit": [[217, "fit"]], "create_report": [[215, "create-report"]], "translate_nmtran_time": [[205, "translate-nmtran-time"]], "transform_etas_john_draper": [[203, "transform-etas-john-draper"]], "set_time_varying_error_model": [[190, "set-time-varying-error-model"]], "read_results": [[225, "read-results"]], "set_zero_order_elimination": [[196, "set-zero-order-elimination"]], "create_results": [[216, "create-results"]], "unfix_parameters": [[208, "unfix-parameters"]], "rename_symbols": [[163, "rename-symbols"]], "set_michaelis_menten_elimination": [[182, "set-michaelis-menten-elimination"]], "sample_parameters_from_covariance_matrix": [[166, "sample-parameters-from-covariance-matrix"]], "set_first_order_absorption": [[176, "set-first-order-absorption"]], "set_covariates": [[171, "set-covariates"]], "set_evaluation_step": [[175, "set-evaluation-step"]], "remove_covariance_step": [[153, "remove-covariance-step"]], "set_name": [[184, "set-name"]], "set_iiv_on_ruv": [[178, "set-iiv-on-ruv"]], "remove_unused_parameters_and_rvs": [[162, "remove-unused-parameters-and-rvs"]], "remove_iiv": [[157, "remove-iiv"]], "remove_peripheral_compartment": [[161, "remove-peripheral-compartment"]], "set_estimation_step": [[174, "set-estimation-step"]], "set_combined_error_model": [[170, "set-combined-error-model"]], "remove_loq_data": [[160, "remove-loq-data"]], "set_mixed_mm_fo_elimination": [[183, "set-mixed-mm-fo-elimination"]], "sample_individual_estimates": [[165, "sample-individual-estimates"]], "remove_lag_time": [[159, "remove-lag-time"]], "remove_estimation_step": [[156, "remove-estimation-step"]], "resample_data": [[164, "resample-data"]], "set_power_on_ruv": [[187, "set-power-on-ruv"]], "set_seq_zo_fo_absorption": [[189, "set-seq-zo-fo-absorption"]], "set_proportional_error_model": [[188, "set-proportional-error-model"]], "set_initial_condition": [[179, "set-initial-condition"]], "set_lower_bounds": [[181, "set-lower-bounds"]], "set_additive_error_model": [[168, "set-additive-error-model"]], "set_initial_estimates": [[180, "set-initial-estimates"]], "sample_parameters_uniformly": [[167, "sample-parameters-uniformly"]], "remove_iov": [[158, "remove-iov"]], "set_ode_solver": [[185, "set-ode-solver"]], "set_bolus_absorption": [[169, "set-bolus-absorption"]], "set_dvid": [[173, "set-dvid"]], "set_first_order_elimination": [[177, "set-first-order-elimination"]], "remove_covariate_effect": [[154, "remove-covariate-effect"]], "set_dtbs_error_model": [[172, "set-dtbs-error-model"]], "remove_error_model": [[155, "remove-error-model"]], "set_peripheral_compartments": [[186, "set-peripheral-compartments"]], "read_model_from_string": [[152, "read-model-from-string"]], "has_additive_error_model": [[124, "has-additive-error-model"]], "list_time_varying_covariates": [[140, "list-time-varying-covariates"]], "print_model_symbols": [[149, "print-model-symbols"]], "get_rv_parameters": [[118, "get-rv-parameters"]], "get_thetas": [[120, "get-thetas"]], "get_pk_parameters": [[116, "get-pk-parameters"]], "has_linear_odes_with_real_eigenvalues": [[129, "has-linear-odes-with-real-eigenvalues"]], "has_proportional_error_model": [[133, "has-proportional-error-model"]], "has_first_order_elimination": [[127, "has-first-order-elimination"]], "plot_transformed_eta_distributions": [[147, "plot-transformed-eta-distributions"]], "get_zero_order_inputs": [[122, "get-zero-order-inputs"]], "is_linearized": [[138, "is-linearized"]], "has_zero_order_elimination": [[137, "has-zero-order-elimination"]], "get_sigmas": [[119, "get-sigmas"]], "has_combined_error_model": [[125, "has-combined-error-model"]], "greekify_model": [[123, "greekify-model"]], "mu_reference_model": [[143, "mu-reference-model"]], "plot_individual_predictions": [[145, "plot-individual-predictions"]], "get_population_prediction_expression": [[117, "get-population-prediction-expression"]], "has_zero_order_absorption": [[136, "has-zero-order-absorption"]], "has_mixed_mm_fo_elimination": [[131, "has-mixed-mm-fo-elimination"]], "has_random_effect": [[134, "has-random-effect"]], "has_linear_odes": [[128, "has-linear-odes"]], "has_odes": [[132, "has-odes"]], "get_omegas": [[115, "get-omegas"]], "get_observations": [[114, "get-observations"]], "load_example_model": [[141, "load-example-model"]], "has_michaelis_menten_elimination": [[130, "has-michaelis-menten-elimination"]], "has_covariate_effect": [[126, "has-covariate-effect"]], "get_unit_of": [[121, "get-unit-of"]], "read_model": [[151, "read-model"]], "is_real": [[139, "is-real"]], "has_weighted_error_model": [[135, "has-weighted-error-model"]], "omit_data": [[144, "omit-data"]], "print_model_code": [[148, "print-model-code"]], "plot_iofv_vs_iofv": [[146, "plot-iofv-vs-iofv"]], "read_dataset_from_datainfo": [[150, "read-dataset-from-datainfo"]], "make_declarative": [[142, "make-declarative"]], "get_evid": [[101, "get-evid"]], "evaluate_epsilon_gradient": [[80, "evaluate-epsilon-gradient"]], "fix_parameters": [[90, "fix-parameters"]], "get_ids": [[102, "get-ids"]], "get_initial_conditions": [[105, "get-initial-conditions"]], "get_mdv": [[107, "get-mdv"]], "get_number_of_individuals": [[110, "get-number-of-individuals"]], "get_covariate_baselines": [[97, "get-covariate-baselines"]], "get_concentration_parameters_from_data": [[95, "get-concentration-parameters-from-data"]], "evaluate_population_prediction": [[84, "evaluate-population-prediction"]], "get_lag_times": [[106, "get-lag-times"]], "get_dv_symbol": [[100, "get-dv-symbol"]], "evaluate_individual_prediction": [[83, "evaluate-individual-prediction"]], "get_doses": [[99, "get-doses"]], "get_observation_expression": [[113, "get-observation-expression"]], "get_model_code": [[108, "get-model-code"]], "drop_dropped_columns": [[79, "drop-dropped-columns"]], "get_config_path": [[96, "get-config-path"]], "get_doseid": [[98, "get-doseid"]], "get_number_of_observations_per_individual": [[112, "get-number-of-observations-per-individual"]], "evaluate_weighted_residuals": [[85, "evaluate-weighted-residuals"]], "get_model_covariates": [[109, "get-model-covariates"]], "display_odes": [[77, "display-odes"]], "find_clearance_parameters": [[87, "find-clearance-parameters"]], "get_cmt": [[94, "get-cmt"]], "get_number_of_observations": [[111, "get-number-of-observations"]], "deidentify_data": [[76, "deidentify-data"]], "get_individual_prediction_expression": [[104, "get-individual-prediction-expression"]], "fix_parameters_to": [[91, "fix-parameters-to"]], "get_bioavailability": [[93, "get-bioavailability"]], "evaluate_eta_gradient": [[81, "evaluate-eta-gradient"]], "fix_or_unfix_parameters": [[89, "fix-or-unfix-parameters"]], "expand_additional_doses": [[86, "expand-additional-doses"]], "get_baselines": [[92, "get-baselines"]], "evaluate_expression": [[82, "evaluate-expression"]], "get_individual_parameters": [[103, "get-individual-parameters"]], "drop_columns": [[78, "drop-columns"]], "find_volume_parameters": [[88, "find-volume-parameters"]], "Citation": [[267, "citation"]], "How to cite Pharmpy and pharmr": [[267, "how-to-cite-pharmpy-and-pharmr"]], "Contributors": [[272, "authors"]], "Development": [[272, "development"]], "Scientific input": [[272, "scientific-input"]], "Funding": [[272, "funding"]], "Tools": [[300, "tools"]], "Tools in Pharmpy": [[300, "tools-in-pharmpy"]], "Common options": [[300, "common-options"]], "Common features": [[300, "common-features"]], "Tool database": [[300, "tool-database"]], "Running directory": [[300, "running-directory"]], "Metadata": [[300, "metadata"]], "Datasets": [[300, "datasets"]], "Model feature language (MFL)": [[300, "model-feature-language-mfl"]], "Option types": [[300, "option-types"]], "Model features": [[300, "model-features"]], "Symbols": [[300, "symbols"]], "Describe intervals": [[300, "describe-intervals"]], "Redundant descriptions": [[300, "redundant-descriptions"]], "Examples": [[300, "examples"]], "Welcome to Pharmpy": [[282, "welcome-to-pharmpy"]], "Plots in Pharmpy": [[291, "plots-in-pharmpy"]], "Setting themes": [[291, "setting-themes"]], "Changing axis of plots": [[291, "changing-axis-of-plots"]], "License": [[284, "license"]], "Logo": [[284, "logo"]], "Copyright": [[284, "copyright"]], "BSD 2-clause License": [[284, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[284, "gnu-lesser-general-public-license"]], "Resmod": [[294, "resmod"]], "The resmod results": [[294, "the-resmod-results"]], "Resmod models": [[294, "resmod-models"]], "ruvsearch": [[297, "ruvsearch"]], "Models": [[297, "models"]], "The RUVsearch results": [[297, "the-ruvsearch-results"]], "Design principles": [[276, "design-principles"]], "Levels of the architecture": [[276, "levels-of-the-architecture"]], "The Heart, The Model Class": [[276, "the-heart-the-model-class"]], "pharmpy.Parameters": [[276, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[276, "pharmpy-randomvariables"]], "pharmpy.Statements": [[276, "pharmpy-statements"]], "The pharmpy.modeling module": [[276, "the-pharmpy-modeling-module"]], "Docstrings": [[276, "docstrings"]], "Dependencies": [[276, "dependencies"]], "Crossval": [[274, "crossval"]], "The crossval results": [[274, "the-crossval-results"]], "Crossvalidation OFVs": [[274, "crossvalidation-ofvs"]], "Using the NONMEM plugin": [[290, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[290, "names-of-parameters-and-random-variables"]], "Reading in a model": [[290, "reading-in-a-model"], [286, "reading-in-a-model"]], "New parameters and random variables": [[290, "new-parameters-and-random-variables"]], "Writing a model": [[290, "writing-a-model"], [286, "writing-a-model"]], "PsN with Pharmpy": [[295, "psn-with-pharmpy"]], "Tools connected to PsN": [[295, "tools-connected-to-psn"]], "Project suggestions": [[293, "project-suggestions"]], "Configuration": [[270, "configuration"]], "The configuration file": [[270, "the-configuration-file"]], "Environment variables": [[270, "environment-variables"]], "Pharmpy in R": [[302, "pharmpy-in-r"]], "Installing pharmr": [[302, "installing-pharmr"]], "Trouble shooting": [[302, "trouble-shooting"]], "Wrong Python version": [[302, "wrong-python-version"]], "Error importing Pharmpy": [[302, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[302, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[302, "using-pharmr"]], "Gotchas": [[302, "gotchas"]], "List indices": [[302, "list-indices"]], "The Pharmpy command line interface": [[268, "the-pharmpy-command-line-interface"]], "pharmpy": [[268, "pharmpy"]], "pharmpy data": [[268, "pharmpy-data"]], "pharmpy data append": [[268, "pharmpy-data-append"]], "pharmpy data deidentify": [[268, "pharmpy-data-deidentify"]], "pharmpy data filter": [[268, "pharmpy-data-filter"]], "pharmpy data print": [[268, "pharmpy-data-print"]], "pharmpy data resample": [[268, "pharmpy-data-resample"]], "pharmpy data write": [[268, "pharmpy-data-write"]], "pharmpy info": [[268, "pharmpy-info"]], "pharmpy model": [[268, "pharmpy-model"]], "pharmpy model absorption_rate": [[268, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[268, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[268, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[268, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[268, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[268, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[268, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[268, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[268, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[268, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[268, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[268, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[268, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[268, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[268, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[268, "pharmpy-model-sample"]], "pharmpy model tdist": [[268, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[268, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[268, "pharmpy-model-update-inits"]], "pharmpy results": [[268, "pharmpy-results"]], "pharmpy results bootstrap": [[268, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[268, "pharmpy-results-cdd"]], "pharmpy results frem": [[268, "pharmpy-results-frem"]], "pharmpy results linearize": [[268, "pharmpy-results-linearize"]], "pharmpy results ofv": [[268, "pharmpy-results-ofv"]], "pharmpy results print": [[268, "pharmpy-results-print"]], "pharmpy results qa": [[268, "pharmpy-results-qa"]], "pharmpy results report": [[268, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[268, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[268, "pharmpy-results-scm"]], "pharmpy results simeval": [[268, "pharmpy-results-simeval"]], "pharmpy results summary": [[268, "pharmpy-results-summary"]], "pharmpy run": [[268, "pharmpy-run"]], "pharmpy run allometry": [[268, "pharmpy-run-allometry"]], "pharmpy run amd": [[268, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[268, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[268, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[268, "pharmpy-run-estmethod"]], "pharmpy run execute": [[268, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[268, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[268, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[268, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[268, "pharmpy-run-ruvsearch"]], "The Pharmpy model": [[286, "the-pharmpy-model"]], "Model name": [[286, "model-name"]], "Getting the model code": [[286, "getting-the-model-code"], [288, "getting-the-model-code"]], "Model parameters": [[286, "model-parameters"]], "Parameter sets": [[286, "parameter-sets"]], "Random variables": [[286, "random-variables"]], "Model statements": [[286, "model-statements"]], "Dependent variables": [[286, "dependent-variables"]], "Contribute": [[271, "contribute"]], "Set up the development environment": [[271, "set-up-the-development-environment"]], "Supported platforms": [[271, "supported-platforms"]], "Install Python": [[271, "install-python"]], "Install git": [[271, "install-git"]], "Fork and clone the code repository": [[271, "fork-and-clone-the-code-repository"]], "Install tox": [[271, "install-tox"]], "Install graphviz used for building the documentation": [[271, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[271, "using-the-development-environment"]], "Running tox": [[271, "running-tox"]], "Check code formatting": [[271, "check-code-formatting"]], "Run the unit tests": [[271, "run-the-unit-tests"]], "Build and test the documentation": [[271, "build-and-test-the-documentation"]], "Run the integration tests": [[271, "run-the-integration-tests"]], "Build a usable virtual environment": [[271, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[271, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[271, "releasing-pharmpy-and-documentation"]], "Version": [[271, "version"]], "Information for developers": [[271, "information-for-developers"]], "COVsearch": [[273, "covsearch"]], "Effects": [[273, "effects"]], "Wildcards": [[273, "wildcards"]], "Algorithm": [[273, "algorithm"], [283, "algorithm"]], "Modeling": [[288, "modeling"]], "Basic modeling": [[288, "basic-modeling"]], "Reading, writing and updating source models": [[288, "reading-writing-and-updating-source-models"]], "Read model from file": [[288, "read-model-from-file"]], "Read model from string": [[288, "read-model-from-string"]], "Write model to file": [[288, "write-model-to-file"]], "Fix and unfix parameters": [[288, "fix-and-unfix-parameters"]], "Add parameter": [[288, "add-parameter"]], "PK models and ODE systems": [[288, "pk-models-and-ode-systems"]], "Absorption rate": [[288, "absorption-rate"]], "Bolus absorption": [[288, "bolus-absorption"]], "Zero order": [[288, "zero-order"]], "First order": [[288, "first-order"]], "Sequential zero-order then first-order": [[288, "sequential-zero-order-then-first-order"]], "Absorption delay": [[288, "absorption-delay"]], "Transit compartments": [[288, "transit-compartments"]], "Lag time": [[288, "lag-time"]], "Elimination rate": [[288, "elimination-rate"]], "First-order elimination": [[288, "first-order-elimination"]], "Zero-order elimination": [[288, "zero-order-elimination"]], "Michaelis-Menten elimination": [[288, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[288, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[288, "add-peripheral-compartment"]], "Remove peripheral compartment": [[288, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[288, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[288, "adding-covariate-effects"]], "Transformation of etas": [[288, "transformation-of-etas"]], "Boxcox": [[288, "boxcox"], [296, "boxcox"]], "Approximate t-distribution": [[288, "approximate-t-distribution"]], "John Draper": [[288, "john-draper"]], "Adding new etas": [[288, "adding-new-etas"]], "Adding IIVs": [[288, "adding-iivs"]], "Adding IOVs": [[288, "adding-iovs"]], "Removing etas": [[288, "removing-etas"]], "Remove IIVs": [[288, "remove-iivs"]], "Remove IOVs": [[288, "remove-iovs"]], "The error model": [[288, "the-error-model"]], "Removing the error model": [[288, "removing-the-error-model"]], "Setting an additive error model": [[288, "setting-an-additive-error-model"]], "Setting a proportional error model": [[288, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[288, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[288, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[288, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[288, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[288, "weighted-error-model"]], "dTBS error model": [[288, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[288, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[288, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[288, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[288, "fitting-a-model"]], "Getting results from a PsN run": [[288, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[288, "eta-shrinkage"]], "Individual parameter calculations": [[288, "individual-parameter-calculations"]], "Estmethod": [[278, "estmethod"]], "Algorithms": [[278, "algorithms"], [281, "algorithms"], [289, "algorithms"]], "Exhaustive": [[278, "exhaustive"]], "Exhaustive (with update)": [[278, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[278, "exhaustive-only-evaluation"]], "Methods": [[278, "methods"]], "Solvers": [[278, "solvers"]], "The Estmethod results": [[278, "the-estmethod-results"]], "FREM": [[279, "frem"]], "The FREM postprocessing and results": [[279, "the-frem-postprocessing-and-results"]], "Covariate effects": [[279, "covariate-effects"], [296, "covariate-effects"]], "Parameter covariate coefficients": [[279, "parameter-covariate-coefficients"]], "Individual covariate effects": [[279, "individual-covariate-effects"]], "Unexplained variability": [[279, "unexplained-variability"]], "Parameter estimates": [[279, "parameter-estimates"], [287, "parameter-estimates"]], "OFV": [[279, "ofv"]], "Estimated covariate values": [[279, "estimated-covariate-values"]], "Pharmpy Community Code of Conduct": [[269, "pharmpy-community-code-of-conduct"]], "Changelog": [[266, "changelog"]], "0.96.0 (2023-05-26)": [[266, "id1"]], "Changes": [[266, "changes"], [266, "id3"], [266, "id7"], [266, "id11"], [266, "id18"], [266, "id22"], [266, "id25"], [266, "id28"], [266, "id30"], [266, "id32"], [266, "id35"], [266, "id38"], [266, "id41"], [266, "id43"], [266, "id46"], [266, "id51"], [266, "id54"], [266, "id58"], [266, "id61"], [266, "id64"], [266, "id69"], [266, "id73"], [266, "id76"], [266, "id80"], [266, "id83"], [266, "id87"], [266, "id93"], [266, "id97"], [266, "id108"], [266, "id112"], [266, "id117"], [266, "id123"], [266, "id133"], [266, "id138"], [266, "id142"], [266, "id149"], [266, "id155"], [266, "id160"], [266, "id163"], [266, "id167"]], "New features": [[266, "new-features"], [266, "id6"], [266, "id10"], [266, "id14"], [266, "id17"], [266, "id21"], [266, "id24"], [266, "id27"], [266, "id40"], [266, "id50"], [266, "id57"], [266, "id68"], [266, "id72"], [266, "id79"], [266, "id82"], [266, "id86"], [266, "id92"], [266, "id96"], [266, "id102"], [266, "id107"], [266, "id111"], [266, "id114"], [266, "id122"], [266, "id126"], [266, "id132"], [266, "id141"], [266, "id145"], [266, "id148"], [266, "id152"], [266, "id154"], [266, "id159"], [266, "id162"], [266, "id166"]], "Bugfixes": [[266, "bugfixes"], [266, "id4"], [266, "id8"], [266, "id12"], [266, "id15"], [266, "id19"], [266, "id33"], [266, "id36"], [266, "id62"], [266, "id66"], [266, "id70"], [266, "id74"], [266, "id77"], [266, "id84"], [266, "id88"], [266, "id90"], [266, "id94"], [266, "id98"], [266, "id100"], [266, "id103"], [266, "id105"], [266, "id109"], [266, "id115"], [266, "id118"], [266, "id120"], [266, "id124"], [266, "id128"], [266, "id130"], [266, "id134"], [266, "id136"], [266, "id139"], [266, "id143"], [266, "id146"], [266, "id150"], [266, "id157"], [266, "id164"], [266, "id168"]], "0.95.0 (2023-05-22)": [[266, "id2"]], "0.94.0 (2023-04-26)": [[266, "id5"]], "0.93.0 (2023-04-19)": [[266, "id9"]], "0.92.0 (2023-04-05)": [[266, "id13"]], "0.91.0 (2023-03-03)": [[266, "id16"]], "0.90.0 (2023-02-24)": [[266, "id20"]], "0.89.0 (2023-01-26)": [[266, "id23"]], "0.88.0 (2022-12-21)": [[266, "id26"]], "0.87.0 (2022-12-14)": [[266, "id29"]], "0.86.0 (2022-11-30)": [[266, "id31"]], "0.85.0 (2022-11-18)": [[266, "id34"]], "0.84.1 (2022-11-13)": [[266, "id37"]], "Bug fixes": [[266, "bug-fixes"], [266, "id44"], [266, "id48"], [266, "id52"], [266, "id55"], [266, "id59"]], "0.84.0 (2022-11-09)": [[266, "id39"]], "0.83.0 (2022-11-01)": [[266, "id42"]], "0.82.0 (2022-10-24)": [[266, "id45"]], "0.81.1 (2022-10-24)": [[266, "id47"]], "0.81.0 (2022-10-21)": [[266, "id49"]], "0.80.0 (2022-10-19)": [[266, "id53"]], "0.79.0 (2022-10-16)": [[266, "id56"]], "0.78.0 (2022-09-20)": [[266, "id60"]], "0.77.0 (2022-09-08)": [[266, "id63"]], "0.76.1 (2022-09-06)": [[266, "id65"]], "0.76.0 (2022-09-05)": [[266, "id67"]], "0.75.0 (2022-08-10)": [[266, "id71"]], "0.74.0 (2022-07-18)": [[266, "id75"]], "0.73.0 (2022-06-21)": [[266, "id78"]], "0.72.0 (2022-06-08)": [[266, "id81"]], "0.71.0 (2022-05-24)": [[266, "id85"]], "0.70.1 (2022-05-17)": [[266, "id89"]], "0.70.0 (2022-05-13)": [[266, "id91"]], "0.69.0 (2022-04-29)": [[266, "id95"]], "0.68.0 (2022-04-27)": [[266, "id99"]], "0.67.0 (2022-04-25)": [[266, "id101"]], "0.66.0 (2022-04-20)": [[266, "id104"]], "0.65.0 (2022-04-14)": [[266, "id106"]], "0.64.0 (2022-04-12)": [[266, "id110"]], "0.63.0 (2022-04-07)": [[266, "id113"]], "0.62.0 (2022-04-04)": [[266, "id116"]], "New feature": [[266, "new-feature"]], "0.61.1 (2022-03-31)": [[266, "id119"]], "0.61.0 (2022-03-29)": [[266, "id121"]], "0.59.0 (2022-03-25)": [[266, "id125"]], "0.58.4 (2022-03-24)": [[266, "id127"]], "0.58.1 (2022-03-22)": [[266, "id129"]], "0.58.0 (2022-03-22)": [[266, "id131"]], "0.57.0 (2022-03-21)": [[266, "id135"]], "0.56.0 (2022-03-17)": [[266, "id137"]], "0.55.0 (2022-03-16)": [[266, "id140"]], "0.54.0 (2022-03-08)": [[266, "id144"]], "0.53.0 (2022-03-04)": [[266, "id147"]], "0.52.0 (2022-02-25)": [[266, "id151"]], "0.51.0 (2022-02-24)": [[266, "id153"]], "0.50.1 (2022-02-16)": [[266, "id156"]], "0.50.0 (2022-02-16)": [[266, "id158"]], "0.49.0 (2022-02-10)": [[266, "id161"]], "0.48.0 (2022-02-04)": [[266, "id165"]], "0.47.0 (2022-01-28)": [[266, "id169"]], "0.46.0 (2022-01-27)": [[266, "id170"]], "0.45.0 (2022-01-21)": [[266, "id171"]], "0.44.0 (2022-01-20)": [[266, "id172"]], "0.43.0 (2022-01-12)": [[266, "id173"]], "0.42.0 (2022-01-11)": [[266, "id174"]], "0.41.0 (2021-12-21)": [[266, "id175"]], "0.40.0 (2021-12-16)": [[266, "id176"]], "0.39.0 (2021-12-15)": [[266, "id177"]], "0.38.0 (2021-12-08)": [[266, "id178"]], "0.37.1 (2021-11-26)": [[266, "id179"]], "0.37.0 (2021-11-24)": [[266, "id180"]], "0.36.0 (2021-11-11)": [[266, "id181"]], "0.35.0 (2021-11-02)": [[266, "id182"]], "0.34.3 (2021-10-28)": [[266, "id183"]], "0.34.2 (2021-10-26)": [[266, "id184"]], "0.34.1 (2021-10-20)": [[266, "id185"]], "0.34.0 (2021-10-14)": [[266, "id186"]], "0.33.0 (2021-10-11)": [[266, "id187"]], "0.32.0 (2021-09-28)": [[266, "id188"]], "0.31.0 (2021-09-21)": [[266, "id189"]], "0.30.0 (2021-09-06)": [[266, "id190"]], "0.29.0 (2021-08-25)": [[266, "id191"]], "0.28.0 (2021-08-24)": [[266, "id192"]], "0.27.0 (2021-08-09)": [[266, "id193"]], "0.26.1 (2021-08-04)": [[266, "id194"]], "0.26.0 (2021-07-13)": [[266, "id195"]], "0.25.1 (2021-07-08)": [[266, "id196"]], "0.25.0 (2021-06-24)": [[266, "id197"]], "0.24.0 (2021-05-25)": [[266, "id198"]], "0.23.4 (2021-05-03)": [[266, "id199"]], "0.23.3 (2021-04-29)": [[266, "id200"]], "0.23.2 (2021-04-28)": [[266, "id201"]], "0.23.1 (2021-04-28)": [[266, "id202"]], "0.23.0 (2021-04-28)": [[266, "id203"]], "0.22.0 (2021-03-29)": [[266, "id204"]], "0.21.0 (2021-03-22)": [[266, "id205"]], "0.20.1 (2021-03-11)": [[266, "id206"]], "0.20.0 (2021-03-11)": [[266, "id207"]], "0.19.0 (2021-03-02)": [[266, "id208"]], "0.18.0 (2021-03-01)": [[266, "id209"]], "0.17.0 (2021-02-15)": [[266, "id210"]], "0.16.0 (2021-02-08)": [[266, "id211"]], "0.15.0 (2021-02-01)": [[266, "id212"]], "0.14.0 (2021-01-25)": [[266, "id213"]], "0.13.0 (2021-01-18)": [[266, "id214"]], "0.12.0 (2020-12-18)": [[266, "id215"]], "0.11.0 (2020-11-20)": [[266, "id216"]], "0.10.0 (2020-11-16)": [[266, "id217"]], "0.9.0 (2020-10-26)": [[266, "id218"]], "0.8.0 (2020-10-08)": [[266, "id219"]], "0.7.0 (2020-09-28)": [[266, "id220"]], "0.6.0 (2020-09-18)": [[266, "id221"]], "0.5.0 (2020-09-04)": [[266, "id222"]], "0.4.0 (2020-07-24)": [[266, "id223"]], "0.3.0 (2020-06-16)": [[266, "id224"]], "0.2.0 (2020-03-27)": [[266, "id225"]], "0.1.0 (2018-07-22)": [[266, "id226"]], "Plugins": [[292, "plugins"]], "Overview of a plugin": [[292, "overview-of-a-plugin"]], "Distribution of new IOVs": [[283, "distribution-of-new-iovs"]], "Comparing and ranking candidates": [[283, "comparing-and-ranking-candidates"], [281, "comparing-and-ranking-candidates"], [289, "comparing-and-ranking-candidates"]], "Getting started": [[280, "getting-started"]], "Installation": [[280, "installation"]], "A first example": [[280, "a-first-example"]], "Brute force search for number of IIVs": [[281, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[281, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[281, "full-brute-force-search"]], "Adding IIV to the start model": [[281, "adding-iiv-to-the-start-model"]], "The IIVsearch results": [[281, "the-iivsearch-results"]], "scm": [[298, "scm"]], "The scm results": [[298, "the-scm-results"]], "Steps": [[298, "steps"]], "OFV Summary": [[298, "ofv-summary"]], "Candidate Summary": [[298, "candidate-summary"]], "Datasets in Pharmpy": [[275, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[275, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[275, "update-the-dataset-of-a-model"]], "Subjects": [[275, "subjects"]], "Observations": [[275, "observations"]], "Dosing": [[275, "dosing"]], "Extract dosing information": [[275, "extract-dosing-information"]], "Dose grouping": [[275, "dose-grouping"]], "Time after dose": [[275, "time-after-dose"]], "Concentration parameters": [[275, "concentration-parameters"]], "type": [[275, "type"]], "scale": [[275, "scale"]], "continuous": [[275, "continuous"]], "categories": [[275, "categories"]], "unit": [[275, "unit"]], "drop": [[275, "drop"]], "datatype": [[275, "datatype"]], "descriptor": [[275, "descriptor"]], "datainfo file": [[275, "datainfo-file"]], "Documentation for developers": [[277, "documentation-for-developers"]], "QA": [[296, "qa"]], "The qa results": [[296, "the-qa-results"]], "Overview": [[296, "overview"]], "Structural bias": [[296, "structural-bias"]], "Fullblock": [[296, "fullblock"]], "Tdist": [[296, "tdist"]], "Residual error": [[296, "residual-error"]], "Simeval": [[299, "simeval"]], "The simeval results": [[299, "the-simeval-results"]], "Sampled Individual OFVs": [[299, "sampled-individual-ofvs"]], "Individual OFV summary": [[299, "individual-ofv-summary"]], "Individual prediction plot": [[299, "individual-prediction-plot"]], "Modelsearch": [[289, "modelsearch"]], "The search space": [[289, "the-search-space"]], "Common behaviours between algorithms": [[289, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[289, "feature-combination-exclusions"]], "Exhaustive search": [[289, "exhaustive-search"]], "Exhaustive stepwise search": [[289, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[289, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[289, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[289, "the-modelsearch-results"]], "User guide": [[301, "user-guide"]], "Reading modelfit results": [[287, "reading-modelfit-results"]], "Modelfit results": [[287, "modelfit-results"]], "Final OFV": [[287, "final-ofv"]], "Standard errors of parameter estimates": [[287, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[287, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[287, "correlation-matrix"]], "Precision Matrix": [[287, "precision-matrix"]], "Indiviudal OFV": [[287, "indiviudal-ofv"]], "Predictions": [[287, "predictions"]], "Residuals": [[287, "residuals"]], "Individual estimates": [[287, "individual-estimates"]], "Linearize": [[285, "linearize"]], "The linearize results": [[285, "the-linearize-results"]], "OFVs": [[285, "ofvs"]], "Individual OFVs": [[285, "individual-ofvs"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "admid (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.admid"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "admid (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.admid"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[23, "pharmpy.model.ODESystem"]], "parameter (class in pharmpy.model)": [[24, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[25, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[26, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[27, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[27, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[28, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[28, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[29, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[29, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[32, "pharmpy.model.to_compartmental_system"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_metabolite"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.fix_parameters_to"]], "get_baselines() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_first_order_elimination"]], "has_linear_odes() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.has_odes"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_random_effect"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[215, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[216, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[217, "pharmpy.tools.fit"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[218, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[219, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[220, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[221, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[222, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[223, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[224, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[225, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[226, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[227, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[228, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[229, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[230, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[231, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[232, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[233, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[234, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[235, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[236, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[237, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[238, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[239, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[240, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[241, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[242, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[243, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[244, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[245, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[245, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[246, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[247, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[247, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[247, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[247, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[248, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[248, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[248, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[248, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[248, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[248, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[248, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[249, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[249, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[250, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[250, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[251, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[251, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[251, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[251, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[251, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[252, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[253, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[253, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[253, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[253, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[253, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[253, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[253, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[254, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[255, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[256, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[257, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[258, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[259, "pharmpy.workflows.split_common_options"]], "module": [[260, "module-pharmpy.model"], [261, "module-pharmpy.modeling"], [262, "module-pharmpy.tools"], [263, "module-pharmpy.workflows"]], "pharmpy.model": [[260, "module-pharmpy.model"]], "pharmpy.modeling": [[261, "module-pharmpy.modeling"]], "pharmpy.tools": [[262, "module-pharmpy.tools"]], "pharmpy.workflows": [[263, "module-pharmpy.workflows"]], "--algorithm": [[268, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[268, "cmdoption-pharmpy-run-allometry-allometric_variable"], [268, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[268, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[268, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[268, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[268, "cmdoption-pharmpy-run-iivsearch-cutoff"], [268, "cmdoption-pharmpy-run-iovsearch-cutoff"], [268, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[268, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[268, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[268, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[268, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [268, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[268, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[268, "cmdoption-pharmpy-model-add_iov-eta_names"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[268, "cmdoption-pharmpy-model-add_iov-etas"], [268, "cmdoption-pharmpy-model-boxcox-etas"], [268, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [268, "cmdoption-pharmpy-model-john_draper-etas"], [268, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[268, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[268, "cmdoption-pharmpy-data-append-f"], [268, "cmdoption-pharmpy-data-deidentify-f"], [268, "cmdoption-pharmpy-data-filter-f"], [268, "cmdoption-pharmpy-data-write-f"], [268, "cmdoption-pharmpy-model-absorption_rate-f"], [268, "cmdoption-pharmpy-model-add_cov_effect-f"], [268, "cmdoption-pharmpy-model-add_iiv-f"], [268, "cmdoption-pharmpy-model-add_iov-f"], [268, "cmdoption-pharmpy-model-boxcox-f"], [268, "cmdoption-pharmpy-model-create_joint_distribution-f"], [268, "cmdoption-pharmpy-model-elimination_rate-f"], [268, "cmdoption-pharmpy-model-error-f"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [268, "cmdoption-pharmpy-model-john_draper-f"], [268, "cmdoption-pharmpy-model-peripheral_compartments-f"], [268, "cmdoption-pharmpy-model-power_on_ruv-f"], [268, "cmdoption-pharmpy-model-remove_iiv-f"], [268, "cmdoption-pharmpy-model-remove_iov-f"], [268, "cmdoption-pharmpy-model-tdist-f"], [268, "cmdoption-pharmpy-model-transit_compartments-f"], [268, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[268, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[268, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[268, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[268, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[268, "cmdoption-pharmpy-data-append-h"], [268, "cmdoption-pharmpy-data-deidentify-h"], [268, "cmdoption-pharmpy-data-filter-h"], [268, "cmdoption-pharmpy-data-h"], [268, "cmdoption-pharmpy-data-print-h"], [268, "cmdoption-pharmpy-data-resample-h"], [268, "cmdoption-pharmpy-data-write-h"], [268, "cmdoption-pharmpy-h"], [268, "cmdoption-pharmpy-info-h"], [268, "cmdoption-pharmpy-model-absorption_rate-h"], [268, "cmdoption-pharmpy-model-add_cov_effect-h"], [268, "cmdoption-pharmpy-model-add_iiv-h"], [268, "cmdoption-pharmpy-model-add_iov-h"], [268, "cmdoption-pharmpy-model-boxcox-h"], [268, "cmdoption-pharmpy-model-create_joint_distribution-h"], [268, "cmdoption-pharmpy-model-elimination_rate-h"], [268, "cmdoption-pharmpy-model-error-h"], [268, "cmdoption-pharmpy-model-h"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [268, "cmdoption-pharmpy-model-john_draper-h"], [268, "cmdoption-pharmpy-model-peripheral_compartments-h"], [268, "cmdoption-pharmpy-model-power_on_ruv-h"], [268, "cmdoption-pharmpy-model-print-h"], [268, "cmdoption-pharmpy-model-remove_iiv-h"], [268, "cmdoption-pharmpy-model-remove_iov-h"], [268, "cmdoption-pharmpy-model-sample-h"], [268, "cmdoption-pharmpy-model-tdist-h"], [268, "cmdoption-pharmpy-model-transit_compartments-h"], [268, "cmdoption-pharmpy-model-update_inits-h"], [268, "cmdoption-pharmpy-results-bootstrap-h"], [268, "cmdoption-pharmpy-results-cdd-h"], [268, "cmdoption-pharmpy-results-frem-h"], [268, "cmdoption-pharmpy-results-h"], [268, "cmdoption-pharmpy-results-linearize-h"], [268, "cmdoption-pharmpy-results-ofv-h"], [268, "cmdoption-pharmpy-results-print-h"], [268, "cmdoption-pharmpy-results-qa-h"], [268, "cmdoption-pharmpy-results-report-h"], [268, "cmdoption-pharmpy-results-ruvsearch-h"], [268, "cmdoption-pharmpy-results-scm-h"], [268, "cmdoption-pharmpy-results-simeval-h"], [268, "cmdoption-pharmpy-results-summary-h"], [268, "cmdoption-pharmpy-run-allometry-h"], [268, "cmdoption-pharmpy-run-amd-h"], [268, "cmdoption-pharmpy-run-bootstrap-h"], [268, "cmdoption-pharmpy-run-covsearch-h"], [268, "cmdoption-pharmpy-run-estmethod-h"], [268, "cmdoption-pharmpy-run-execute-h"], [268, "cmdoption-pharmpy-run-h"], [268, "cmdoption-pharmpy-run-iivsearch-h"], [268, "cmdoption-pharmpy-run-iovsearch-h"], [268, "cmdoption-pharmpy-run-modelsearch-h"], [268, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[268, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[268, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [268, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[268, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[268, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[268, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[268, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[268, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[268, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[268, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[268, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[268, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[268, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[268, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[268, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[268, "cmdoption-pharmpy-model-add_cov_effect-operation"], [268, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[268, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[268, "cmdoption-pharmpy-data-append-o"], [268, "cmdoption-pharmpy-data-deidentify-o"], [268, "cmdoption-pharmpy-data-filter-o"], [268, "cmdoption-pharmpy-data-write-o"], [268, "cmdoption-pharmpy-model-absorption_rate-o"], [268, "cmdoption-pharmpy-model-add_cov_effect-o"], [268, "cmdoption-pharmpy-model-add_iiv-o"], [268, "cmdoption-pharmpy-model-add_iov-o"], [268, "cmdoption-pharmpy-model-boxcox-o"], [268, "cmdoption-pharmpy-model-create_joint_distribution-o"], [268, "cmdoption-pharmpy-model-elimination_rate-o"], [268, "cmdoption-pharmpy-model-error-o"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [268, "cmdoption-pharmpy-model-john_draper-o"], [268, "cmdoption-pharmpy-model-peripheral_compartments-o"], [268, "cmdoption-pharmpy-model-power_on_ruv-o"], [268, "cmdoption-pharmpy-model-remove_iiv-o"], [268, "cmdoption-pharmpy-model-remove_iov-o"], [268, "cmdoption-pharmpy-model-tdist-o"], [268, "cmdoption-pharmpy-model-transit_compartments-o"], [268, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[268, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[268, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[268, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[268, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[268, "cmdoption-pharmpy-run-allometry-path"], [268, "cmdoption-pharmpy-run-amd-path"], [268, "cmdoption-pharmpy-run-covsearch-path"], [268, "cmdoption-pharmpy-run-estmethod-path"], [268, "cmdoption-pharmpy-run-iivsearch-path"], [268, "cmdoption-pharmpy-run-iovsearch-path"], [268, "cmdoption-pharmpy-run-modelsearch-path"], [268, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[268, "cmdoption-pharmpy-run-iivsearch-rank_type"], [268, "cmdoption-pharmpy-run-iovsearch-rank_type"], [268, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[268, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[268, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[268, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[268, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[268, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[268, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[268, "cmdoption-pharmpy-model-sample-samples"], [268, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[268, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[268, "cmdoption-pharmpy-data-resample-seed"], [268, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[268, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[268, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[268, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[268, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[268, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[268, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[268, "cmdoption-pharmpy-version"]], "-f": [[268, "cmdoption-pharmpy-data-append-f"], [268, "cmdoption-pharmpy-data-deidentify-f"], [268, "cmdoption-pharmpy-data-filter-f"], [268, "cmdoption-pharmpy-data-write-f"], [268, "cmdoption-pharmpy-model-absorption_rate-f"], [268, "cmdoption-pharmpy-model-add_cov_effect-f"], [268, "cmdoption-pharmpy-model-add_iiv-f"], [268, "cmdoption-pharmpy-model-add_iov-f"], [268, "cmdoption-pharmpy-model-boxcox-f"], [268, "cmdoption-pharmpy-model-create_joint_distribution-f"], [268, "cmdoption-pharmpy-model-elimination_rate-f"], [268, "cmdoption-pharmpy-model-error-f"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [268, "cmdoption-pharmpy-model-john_draper-f"], [268, "cmdoption-pharmpy-model-peripheral_compartments-f"], [268, "cmdoption-pharmpy-model-power_on_ruv-f"], [268, "cmdoption-pharmpy-model-remove_iiv-f"], [268, "cmdoption-pharmpy-model-remove_iov-f"], [268, "cmdoption-pharmpy-model-tdist-f"], [268, "cmdoption-pharmpy-model-transit_compartments-f"], [268, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[268, "cmdoption-pharmpy-data-append-h"], [268, "cmdoption-pharmpy-data-deidentify-h"], [268, "cmdoption-pharmpy-data-filter-h"], [268, "cmdoption-pharmpy-data-h"], [268, "cmdoption-pharmpy-data-print-h"], [268, "cmdoption-pharmpy-data-resample-h"], [268, "cmdoption-pharmpy-data-write-h"], [268, "cmdoption-pharmpy-h"], [268, "cmdoption-pharmpy-info-h"], [268, "cmdoption-pharmpy-model-absorption_rate-h"], [268, "cmdoption-pharmpy-model-add_cov_effect-h"], [268, "cmdoption-pharmpy-model-add_iiv-h"], [268, "cmdoption-pharmpy-model-add_iov-h"], [268, "cmdoption-pharmpy-model-boxcox-h"], [268, "cmdoption-pharmpy-model-create_joint_distribution-h"], [268, "cmdoption-pharmpy-model-elimination_rate-h"], [268, "cmdoption-pharmpy-model-error-h"], [268, "cmdoption-pharmpy-model-h"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [268, "cmdoption-pharmpy-model-john_draper-h"], [268, "cmdoption-pharmpy-model-peripheral_compartments-h"], [268, "cmdoption-pharmpy-model-power_on_ruv-h"], [268, "cmdoption-pharmpy-model-print-h"], [268, "cmdoption-pharmpy-model-remove_iiv-h"], [268, "cmdoption-pharmpy-model-remove_iov-h"], [268, "cmdoption-pharmpy-model-sample-h"], [268, "cmdoption-pharmpy-model-tdist-h"], [268, "cmdoption-pharmpy-model-transit_compartments-h"], [268, "cmdoption-pharmpy-model-update_inits-h"], [268, "cmdoption-pharmpy-results-bootstrap-h"], [268, "cmdoption-pharmpy-results-cdd-h"], [268, "cmdoption-pharmpy-results-frem-h"], [268, "cmdoption-pharmpy-results-h"], [268, "cmdoption-pharmpy-results-linearize-h"], [268, "cmdoption-pharmpy-results-ofv-h"], [268, "cmdoption-pharmpy-results-print-h"], [268, "cmdoption-pharmpy-results-qa-h"], [268, "cmdoption-pharmpy-results-report-h"], [268, "cmdoption-pharmpy-results-ruvsearch-h"], [268, "cmdoption-pharmpy-results-scm-h"], [268, "cmdoption-pharmpy-results-simeval-h"], [268, "cmdoption-pharmpy-results-summary-h"], [268, "cmdoption-pharmpy-run-allometry-h"], [268, "cmdoption-pharmpy-run-amd-h"], [268, "cmdoption-pharmpy-run-bootstrap-h"], [268, "cmdoption-pharmpy-run-covsearch-h"], [268, "cmdoption-pharmpy-run-estmethod-h"], [268, "cmdoption-pharmpy-run-execute-h"], [268, "cmdoption-pharmpy-run-h"], [268, "cmdoption-pharmpy-run-iivsearch-h"], [268, "cmdoption-pharmpy-run-iovsearch-h"], [268, "cmdoption-pharmpy-run-modelsearch-h"], [268, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[268, "cmdoption-pharmpy-data-append-o"], [268, "cmdoption-pharmpy-data-deidentify-o"], [268, "cmdoption-pharmpy-data-filter-o"], [268, "cmdoption-pharmpy-data-write-o"], [268, "cmdoption-pharmpy-model-absorption_rate-o"], [268, "cmdoption-pharmpy-model-add_cov_effect-o"], [268, "cmdoption-pharmpy-model-add_iiv-o"], [268, "cmdoption-pharmpy-model-add_iov-o"], [268, "cmdoption-pharmpy-model-boxcox-o"], [268, "cmdoption-pharmpy-model-create_joint_distribution-o"], [268, "cmdoption-pharmpy-model-elimination_rate-o"], [268, "cmdoption-pharmpy-model-error-o"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [268, "cmdoption-pharmpy-model-john_draper-o"], [268, "cmdoption-pharmpy-model-peripheral_compartments-o"], [268, "cmdoption-pharmpy-model-power_on_ruv-o"], [268, "cmdoption-pharmpy-model-remove_iiv-o"], [268, "cmdoption-pharmpy-model-remove_iov-o"], [268, "cmdoption-pharmpy-model-tdist-o"], [268, "cmdoption-pharmpy-model-transit_compartments-o"], [268, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[268, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [268, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [268, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[268, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[268, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[268, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[268, "cmdoption-pharmpy-data-append-arg-expression"], [268, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[268, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[268, "cmdoption-pharmpy-data-append-arg-file"], [268, "cmdoption-pharmpy-data-deidentify-arg-file"], [268, "cmdoption-pharmpy-data-filter-arg-file"], [268, "cmdoption-pharmpy-data-print-arg-file"], [268, "cmdoption-pharmpy-data-resample-arg-file"], [268, "cmdoption-pharmpy-data-write-arg-file"], [268, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [268, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [268, "cmdoption-pharmpy-model-add_iiv-arg-file"], [268, "cmdoption-pharmpy-model-add_iov-arg-file"], [268, "cmdoption-pharmpy-model-boxcox-arg-file"], [268, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [268, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [268, "cmdoption-pharmpy-model-error-arg-file"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [268, "cmdoption-pharmpy-model-john_draper-arg-file"], [268, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [268, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [268, "cmdoption-pharmpy-model-print-arg-file"], [268, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [268, "cmdoption-pharmpy-model-remove_iov-arg-file"], [268, "cmdoption-pharmpy-model-sample-arg-file"], [268, "cmdoption-pharmpy-model-tdist-arg-file"], [268, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [268, "cmdoption-pharmpy-model-update_inits-arg-file"], [268, "cmdoption-pharmpy-results-ofv-arg-file"], [268, "cmdoption-pharmpy-results-print-arg-file"], [268, "cmdoption-pharmpy-results-summary-arg-file"], [268, "cmdoption-pharmpy-run-allometry-arg-file"], [268, "cmdoption-pharmpy-run-bootstrap-arg-file"], [268, "cmdoption-pharmpy-run-covsearch-arg-file"], [268, "cmdoption-pharmpy-run-estmethod-arg-file"], [268, "cmdoption-pharmpy-run-execute-arg-file"], [268, "cmdoption-pharmpy-run-iivsearch-arg-file"], [268, "cmdoption-pharmpy-run-iovsearch-arg-file"], [268, "cmdoption-pharmpy-run-modelsearch-arg-file"], [268, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[268, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[268, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[268, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [268, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[268, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[268, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [268, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[268, "cmdoption-pharmpy-h"], [268, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[268, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[268, "cmdoption-pharmpy-data-append-arg-expression"], [268, "cmdoption-pharmpy-data-append-arg-file"], [268, "cmdoption-pharmpy-data-append-f"], [268, "cmdoption-pharmpy-data-append-h"], [268, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[268, "cmdoption-pharmpy-data-deidentify-arg-file"], [268, "cmdoption-pharmpy-data-deidentify-datecols"], [268, "cmdoption-pharmpy-data-deidentify-f"], [268, "cmdoption-pharmpy-data-deidentify-h"], [268, "cmdoption-pharmpy-data-deidentify-idcol"], [268, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[268, "cmdoption-pharmpy-data-filter-arg-expressions"], [268, "cmdoption-pharmpy-data-filter-arg-file"], [268, "cmdoption-pharmpy-data-filter-f"], [268, "cmdoption-pharmpy-data-filter-h"], [268, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[268, "cmdoption-pharmpy-data-print-arg-file"], [268, "cmdoption-pharmpy-data-print-columns"], [268, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[268, "cmdoption-pharmpy-data-resample-arg-file"], [268, "cmdoption-pharmpy-data-resample-group"], [268, "cmdoption-pharmpy-data-resample-h"], [268, "cmdoption-pharmpy-data-resample-replace"], [268, "cmdoption-pharmpy-data-resample-resamples"], [268, "cmdoption-pharmpy-data-resample-sample_size"], [268, "cmdoption-pharmpy-data-resample-seed"], [268, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[268, "cmdoption-pharmpy-data-write-arg-file"], [268, "cmdoption-pharmpy-data-write-f"], [268, "cmdoption-pharmpy-data-write-h"], [268, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[268, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[268, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[268, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [268, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [268, "cmdoption-pharmpy-model-absorption_rate-f"], [268, "cmdoption-pharmpy-model-absorption_rate-h"], [268, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[268, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [268, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [268, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [268, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [268, "cmdoption-pharmpy-model-add_cov_effect-f"], [268, "cmdoption-pharmpy-model-add_cov_effect-h"], [268, "cmdoption-pharmpy-model-add_cov_effect-o"], [268, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[268, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [268, "cmdoption-pharmpy-model-add_iiv-arg-file"], [268, "cmdoption-pharmpy-model-add_iiv-arg-param"], [268, "cmdoption-pharmpy-model-add_iiv-eta_name"], [268, "cmdoption-pharmpy-model-add_iiv-f"], [268, "cmdoption-pharmpy-model-add_iiv-h"], [268, "cmdoption-pharmpy-model-add_iiv-o"], [268, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[268, "cmdoption-pharmpy-model-add_iov-arg-file"], [268, "cmdoption-pharmpy-model-add_iov-arg-occ"], [268, "cmdoption-pharmpy-model-add_iov-eta_names"], [268, "cmdoption-pharmpy-model-add_iov-etas"], [268, "cmdoption-pharmpy-model-add_iov-f"], [268, "cmdoption-pharmpy-model-add_iov-h"], [268, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[268, "cmdoption-pharmpy-model-boxcox-arg-file"], [268, "cmdoption-pharmpy-model-boxcox-etas"], [268, "cmdoption-pharmpy-model-boxcox-f"], [268, "cmdoption-pharmpy-model-boxcox-h"], [268, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[268, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [268, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [268, "cmdoption-pharmpy-model-create_joint_distribution-f"], [268, "cmdoption-pharmpy-model-create_joint_distribution-h"], [268, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[268, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [268, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [268, "cmdoption-pharmpy-model-elimination_rate-f"], [268, "cmdoption-pharmpy-model-elimination_rate-h"], [268, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[268, "cmdoption-pharmpy-model-error-arg-error_type"], [268, "cmdoption-pharmpy-model-error-arg-file"], [268, "cmdoption-pharmpy-model-error-f"], [268, "cmdoption-pharmpy-model-error-h"], [268, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[268, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [268, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[268, "cmdoption-pharmpy-model-john_draper-arg-file"], [268, "cmdoption-pharmpy-model-john_draper-etas"], [268, "cmdoption-pharmpy-model-john_draper-f"], [268, "cmdoption-pharmpy-model-john_draper-h"], [268, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[268, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [268, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [268, "cmdoption-pharmpy-model-peripheral_compartments-f"], [268, "cmdoption-pharmpy-model-peripheral_compartments-h"], [268, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[268, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [268, "cmdoption-pharmpy-model-power_on_ruv-eps"], [268, "cmdoption-pharmpy-model-power_on_ruv-f"], [268, "cmdoption-pharmpy-model-power_on_ruv-h"], [268, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[268, "cmdoption-pharmpy-model-print-arg-file"], [268, "cmdoption-pharmpy-model-print-explicit-odes"], [268, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[268, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [268, "cmdoption-pharmpy-model-remove_iiv-f"], [268, "cmdoption-pharmpy-model-remove_iiv-h"], [268, "cmdoption-pharmpy-model-remove_iiv-o"], [268, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[268, "cmdoption-pharmpy-model-remove_iov-arg-file"], [268, "cmdoption-pharmpy-model-remove_iov-f"], [268, "cmdoption-pharmpy-model-remove_iov-h"], [268, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[268, "cmdoption-pharmpy-model-sample-arg-file"], [268, "cmdoption-pharmpy-model-sample-h"], [268, "cmdoption-pharmpy-model-sample-samples"], [268, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[268, "cmdoption-pharmpy-model-tdist-arg-file"], [268, "cmdoption-pharmpy-model-tdist-etas"], [268, "cmdoption-pharmpy-model-tdist-f"], [268, "cmdoption-pharmpy-model-tdist-h"], [268, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[268, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [268, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [268, "cmdoption-pharmpy-model-transit_compartments-f"], [268, "cmdoption-pharmpy-model-transit_compartments-h"], [268, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[268, "cmdoption-pharmpy-model-update_inits-arg-file"], [268, "cmdoption-pharmpy-model-update_inits-f"], [268, "cmdoption-pharmpy-model-update_inits-h"], [268, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[268, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[268, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [268, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[268, "cmdoption-pharmpy-results-cdd-arg-psn"], [268, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[268, "cmdoption-pharmpy-results-frem-arg-psn"], [268, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [268, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [268, "cmdoption-pharmpy-results-frem-h"], [268, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[268, "cmdoption-pharmpy-results-linearize-arg-psn"], [268, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[268, "cmdoption-pharmpy-results-ofv-arg-file"], [268, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[268, "cmdoption-pharmpy-results-print-arg-file"], [268, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[268, "cmdoption-pharmpy-results-qa-arg-psn"], [268, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[268, "cmdoption-pharmpy-results-report-arg-psn"], [268, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[268, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [268, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[268, "cmdoption-pharmpy-results-scm-arg-psn"], [268, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[268, "cmdoption-pharmpy-results-simeval-arg-psn"], [268, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[268, "cmdoption-pharmpy-results-summary-arg-file"], [268, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[268, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[268, "cmdoption-pharmpy-run-allometry-allometric_variable"], [268, "cmdoption-pharmpy-run-allometry-arg-file"], [268, "cmdoption-pharmpy-run-allometry-h"], [268, "cmdoption-pharmpy-run-allometry-initials"], [268, "cmdoption-pharmpy-run-allometry-lower_bounds"], [268, "cmdoption-pharmpy-run-allometry-non_fixed"], [268, "cmdoption-pharmpy-run-allometry-parameters"], [268, "cmdoption-pharmpy-run-allometry-path"], [268, "cmdoption-pharmpy-run-allometry-reference_value"], [268, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[268, "cmdoption-pharmpy-run-amd-allometric_variable"], [268, "cmdoption-pharmpy-run-amd-arg-input_path"], [268, "cmdoption-pharmpy-run-amd-cl_init"], [268, "cmdoption-pharmpy-run-amd-h"], [268, "cmdoption-pharmpy-run-amd-lloq_limit"], [268, "cmdoption-pharmpy-run-amd-lloq_method"], [268, "cmdoption-pharmpy-run-amd-mat_init"], [268, "cmdoption-pharmpy-run-amd-modeltype"], [268, "cmdoption-pharmpy-run-amd-occasion"], [268, "cmdoption-pharmpy-run-amd-order"], [268, "cmdoption-pharmpy-run-amd-path"], [268, "cmdoption-pharmpy-run-amd-resume"], [268, "cmdoption-pharmpy-run-amd-search_space"], [268, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[268, "cmdoption-pharmpy-run-bootstrap-arg-file"], [268, "cmdoption-pharmpy-run-bootstrap-h"], [268, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[268, "cmdoption-pharmpy-run-covsearch-algorithm"], [268, "cmdoption-pharmpy-run-covsearch-arg-file"], [268, "cmdoption-pharmpy-run-covsearch-effects"], [268, "cmdoption-pharmpy-run-covsearch-h"], [268, "cmdoption-pharmpy-run-covsearch-max_steps"], [268, "cmdoption-pharmpy-run-covsearch-p_backward"], [268, "cmdoption-pharmpy-run-covsearch-p_forward"], [268, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[268, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [268, "cmdoption-pharmpy-run-estmethod-arg-file"], [268, "cmdoption-pharmpy-run-estmethod-h"], [268, "cmdoption-pharmpy-run-estmethod-methods"], [268, "cmdoption-pharmpy-run-estmethod-path"], [268, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[268, "cmdoption-pharmpy-run-execute-arg-file"], [268, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[268, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [268, "cmdoption-pharmpy-run-iivsearch-arg-file"], [268, "cmdoption-pharmpy-run-iivsearch-cutoff"], [268, "cmdoption-pharmpy-run-iivsearch-h"], [268, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [268, "cmdoption-pharmpy-run-iivsearch-path"], [268, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[268, "cmdoption-pharmpy-run-iovsearch-arg-file"], [268, "cmdoption-pharmpy-run-iovsearch-column"], [268, "cmdoption-pharmpy-run-iovsearch-cutoff"], [268, "cmdoption-pharmpy-run-iovsearch-distribution"], [268, "cmdoption-pharmpy-run-iovsearch-h"], [268, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [268, "cmdoption-pharmpy-run-iovsearch-path"], [268, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[268, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [268, "cmdoption-pharmpy-run-modelsearch-arg-file"], [268, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [268, "cmdoption-pharmpy-run-modelsearch-cutoff"], [268, "cmdoption-pharmpy-run-modelsearch-h"], [268, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [268, "cmdoption-pharmpy-run-modelsearch-path"], [268, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[268, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [268, "cmdoption-pharmpy-run-ruvsearch-groups"], [268, "cmdoption-pharmpy-run-ruvsearch-h"], [268, "cmdoption-pharmpy-run-ruvsearch-p_value"], [268, "cmdoption-pharmpy-run-ruvsearch-path"], [268, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[268, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [268, "cmdoption-pharmpy-results-cdd-arg-psn"], [268, "cmdoption-pharmpy-results-frem-arg-psn"], [268, "cmdoption-pharmpy-results-linearize-arg-psn"], [268, "cmdoption-pharmpy-results-qa-arg-psn"], [268, "cmdoption-pharmpy-results-report-arg-psn"], [268, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [268, "cmdoption-pharmpy-results-scm-arg-psn"], [268, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[268, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [268, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})