Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_covariance_step", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_proportional_error_model", "has_random_effect", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 18, 24, 25, 26, 29, 31, 57, 58, 72, 77, 81, 82, 83, 84, 86, 87, 88, 89, 95, 98, 105, 108, 114, 115, 116, 117, 122, 126, 132, 135, 136, 142, 161, 174, 176, 196, 208, 214, 220, 245, 251, 255, 259, 260, 261, 276, 277, 279, 280, 281, 282, 284, 286, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 307, 308, 309, 311, 312, 313], "section": [0, 281, 284, 295, 297, 307, 311], "i": [0, 1, 2, 6, 8, 18, 24, 25, 26, 27, 29, 31, 34, 37, 39, 40, 42, 43, 45, 46, 50, 52, 59, 60, 69, 71, 72, 73, 76, 77, 79, 81, 83, 84, 86, 87, 88, 95, 96, 98, 101, 104, 105, 109, 113, 114, 115, 116, 128, 129, 130, 133, 134, 138, 143, 144, 148, 149, 163, 164, 170, 171, 172, 174, 175, 179, 180, 181, 182, 183, 185, 186, 190, 191, 195, 196, 198, 199, 201, 204, 205, 206, 209, 211, 212, 213, 220, 222, 223, 228, 230, 232, 238, 239, 243, 244, 245, 246, 247, 253, 255, 259, 260, 261, 266, 275, 276, 277, 279, 280, 281, 282, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 313], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 230, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 292, 295, 299, 303, 304, 308, 311], "The": [0, 2, 3, 6, 8, 9, 10, 18, 24, 25, 26, 29, 34, 37, 42, 44, 45, 60, 68, 76, 79, 83, 84, 85, 86, 87, 88, 107, 121, 126, 129, 130, 138, 139, 140, 155, 170, 174, 176, 186, 188, 196, 206, 224, 235, 241, 242, 247, 251, 277, 280, 282, 284, 286, 291, 294, 295, 298, 299, 301, 303, 304, 311, 312, 313], "inform": [0, 1, 2, 6, 8, 126, 277, 279, 284, 286, 287, 289, 292, 293, 294, 295, 297, 300, 304, 308, 309, 311, 312], "intend": [0, 295, 297, 311], "non": [0, 25, 71, 76, 85, 209, 277, 286, 287, 290, 295, 297, 299, 304, 311], "hard": [0, 304], "find": [0, 8, 29, 50, 90, 91, 126, 237, 253, 277, 293, 295, 312, 313], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 282, 284, 286, 289, 291, 292, 294, 295, 297, 298, 299, 300, 308], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 283, 284, 285, 289, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301, 304, 305, 307, 308, 309, 310, 312], "develop": [0, 239, 277, 295, 303, 304, 311, 313], "remov": [0, 2, 9, 26, 29, 81, 114, 115, 116, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 186, 189, 202, 215, 217, 239, 276, 277, 279, 284, 287, 292, 294, 295, 301], "row": [0, 1, 2, 25, 83, 84, 96, 99, 101, 171, 172, 197, 252, 275, 277, 279, 284, 286, 290, 292, 294, 298, 299, 300, 308, 309], "split": [0, 76, 209, 270, 277, 279, 297, 311], "drop": [0, 2, 6, 18, 81, 82, 216, 277, 300, 304, 309], "column": [0, 1, 2, 6, 8, 10, 18, 25, 31, 33, 42, 48, 60, 79, 81, 82, 83, 84, 85, 89, 95, 98, 99, 101, 105, 149, 150, 154, 166, 170, 171, 177, 180, 188, 197, 199, 210, 214, 216, 228, 229, 230, 239, 244, 251, 252, 275, 277, 279, 284, 286, 290, 292, 294, 297, 298, 299, 300, 308, 309, 311], "error": [0, 2, 11, 19, 20, 24, 26, 29, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 124, 129, 130, 138, 140, 153, 161, 174, 176, 195, 196, 199, 203, 210, 221, 232, 247, 250, 253, 258, 275, 277, 284, 289, 292, 294, 300, 301, 308, 309, 311], "handl": [0, 3, 89, 208, 277, 286, 287, 290, 304], "valid": [0, 26, 38, 104, 178, 277, 295], "some": [0, 8, 10, 63, 76, 161, 174, 210, 257, 275, 277, 279, 282, 284, 286, 295, 296, 299, 300, 303, 304, 308, 311], "rule": [0, 69, 295], "These": [0, 282, 287, 290, 295, 296, 299, 303, 304, 311], "were": [0, 26, 29, 250, 275, 276, 277, 286, 289, 290, 295, 298, 300, 311, 313], "test": [0, 2, 131, 144, 241, 242, 244, 246, 247, 277, 279, 283, 284, 286, 289, 291, 292, 294, 298, 300, 304, 308], "7": [0, 1, 2, 37, 53, 55, 56, 61, 65, 66, 84, 96, 101, 116, 118, 197, 230, 275, 276, 284, 286, 290, 292, 294, 295, 296, 298, 299, 300, 305, 307, 308, 309, 310], "4": [0, 1, 2, 6, 53, 55, 56, 61, 65, 66, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 116, 197, 213, 230, 247, 253, 275, 276, 284, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 305, 307, 308, 309, 310], "3": [0, 1, 2, 6, 29, 53, 54, 55, 56, 61, 64, 65, 66, 67, 70, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 103, 106, 116, 118, 153, 167, 171, 172, 173, 197, 201, 210, 211, 212, 213, 228, 229, 230, 247, 252, 275, 276, 284, 285, 286, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 305, 307, 308, 309, 310, 311, 313], "delimet": 0, "between": [0, 8, 9, 26, 76, 210, 251, 266, 275, 276, 277, 279, 289, 290, 294, 295, 301, 304, 307, 308], "comma": [0, 279, 311], "space": [0, 68, 239, 246, 277, 279, 311], "tab": [0, 153, 277, 299, 302], "befor": [0, 2, 29, 172, 173, 219, 277, 279, 296, 300], "after": [0, 6, 29, 114, 115, 116, 199, 237, 250, 253, 257, 276, 277, 279, 285, 286, 290, 295, 296, 297, 300, 304, 305, 307, 309, 310, 313], "ar": [0, 2, 3, 4, 6, 8, 25, 26, 29, 38, 39, 40, 42, 46, 60, 74, 76, 79, 98, 99, 113, 129, 130, 138, 146, 163, 164, 166, 168, 176, 178, 181, 182, 195, 200, 209, 210, 214, 220, 227, 232, 241, 243, 245, 246, 255, 257, 275, 277, 279, 280, 282, 284, 286, 287, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 309, 311, 313], "give": [0, 25, 113, 148, 173, 195, 255, 259, 260, 275, 277, 279, 290, 294, 295, 297, 309], "sic": 0, "begin": [0, 290, 297, 299], "end": [0, 39, 50, 290, 295, 297, 299, 311], "insert": [0, 265, 277], "each": [0, 2, 6, 8, 26, 34, 37, 59, 60, 61, 83, 84, 85, 86, 87, 88, 96, 101, 102, 116, 147, 150, 151, 166, 170, 173, 185, 195, 197, 257, 275, 276, 279, 281, 284, 286, 287, 289, 290, 292, 294, 295, 297, 298, 299, 300, 301, 307, 308, 309, 310, 311, 313], "can": [0, 1, 2, 6, 10, 18, 25, 26, 29, 35, 52, 60, 68, 77, 85, 126, 170, 208, 237, 242, 245, 257, 260, 261, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 307, 308, 311, 312, 313], "onli": [0, 2, 3, 8, 10, 14, 26, 37, 57, 58, 69, 72, 81, 83, 84, 86, 87, 88, 104, 108, 117, 122, 129, 130, 138, 147, 170, 174, 176, 185, 195, 196, 197, 199, 208, 219, 245, 247, 248, 253, 266, 277, 279, 280, 284, 294, 295, 297, 300, 303, 311], "numer": [0, 6, 14, 30, 83, 84, 86, 87, 275, 277, 286, 304], "e": [0, 6, 18, 26, 38, 72, 78, 114, 115, 116, 148, 164, 178, 179, 246, 275, 277, 282, 286, 289, 290, 292, 294, 295, 297, 299, 300, 301, 304, 308, 311], "other": [0, 7, 9, 18, 26, 29, 44, 73, 151, 245, 265, 270, 275, 277, 280, 282, 287, 292, 295, 304], "charact": [0, 10, 286], "than": [0, 24, 25, 277, 292, 295, 300], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 26, 37, 232, 239, 255, 256, 259, 260, 269, 277, 279, 284, 295, 297, 300, 304, 311], "except": [0, 11, 12, 19, 20, 21, 40, 60, 170, 277, 295], "ii": [0, 6], "datx": [0, 277], "fortran": 0, "short": [0, 282, 295], "form": [0, 23, 26, 170, 277, 295], "exponenti": [0, 37, 40, 46, 185, 279, 284, 290], "notat": 0, "2": [0, 1, 2, 6, 18, 29, 33, 34, 37, 39, 43, 45, 47, 49, 51, 53, 54, 55, 56, 61, 64, 65, 66, 67, 71, 83, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 106, 116, 118, 153, 167, 171, 172, 173, 174, 176, 183, 187, 190, 191, 194, 196, 197, 198, 201, 204, 212, 213, 230, 238, 247, 251, 275, 276, 279, 282, 284, 285, 286, 289, 290, 292, 294, 296, 297, 298, 299, 300, 301, 305, 307, 308, 309, 310, 311], "1": [0, 1, 2, 5, 6, 7, 8, 16, 17, 18, 22, 25, 26, 29, 33, 34, 35, 37, 39, 44, 45, 47, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 72, 74, 79, 83, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 103, 104, 106, 116, 118, 125, 128, 146, 147, 148, 149, 153, 157, 167, 170, 171, 172, 173, 175, 182, 183, 184, 185, 190, 191, 194, 195, 197, 198, 199, 201, 204, 205, 208, 210, 211, 212, 213, 220, 230, 238, 239, 240, 241, 246, 247, 251, 275, 276, 279, 281, 282, 284, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 307, 308, 309, 310, 311, 313], "mean": [0, 2, 13, 17, 18, 22, 60, 63, 74, 148, 171, 172, 239, 255, 259, 275, 276, 277, 279, 290, 292, 295, 297, 298, 299, 300, 304, 307, 310, 311], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 24, 25, 26, 29, 31, 60, 62, 63, 68, 79, 80, 85, 90, 91, 107, 113, 119, 120, 121, 123, 124, 125, 126, 149, 150, 155, 170, 171, 172, 174, 176, 187, 189, 196, 199, 202, 236, 245, 247, 250, 253, 255, 259, 260, 266, 275, 276, 278, 279, 282, 283, 284, 286, 287, 292, 294, 295, 296, 297, 299, 300, 303, 304, 308, 309, 311], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 80, 256, 258, 270, 295, 299], "instead": [0, 69, 85, 113, 255, 276, 277, 279, 286, 287, 289, 290, 295, 304], "lone": 0, "an": [0, 4, 6, 8, 10, 15, 16, 18, 25, 26, 29, 32, 33, 34, 38, 41, 42, 49, 68, 95, 102, 105, 129, 130, 131, 133, 134, 137, 138, 140, 144, 146, 148, 160, 170, 174, 178, 186, 212, 224, 227, 228, 229, 230, 250, 251, 253, 256, 258, 277, 279, 281, 282, 284, 286, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 304, 307, 309, 310, 311, 313], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 24, 25, 26, 27, 29, 34, 36, 37, 38, 39, 40, 45, 46, 47, 49, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 99, 101, 102, 103, 109, 118, 119, 124, 125, 127, 128, 146, 147, 148, 153, 157, 159, 162, 166, 167, 171, 172, 173, 176, 178, 179, 181, 182, 185, 186, 187, 188, 189, 195, 196, 197, 199, 202, 209, 210, 211, 212, 215, 218, 220, 227, 229, 230, 238, 239, 241, 247, 252, 253, 275, 276, 279, 282, 284, 286, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 305, 307, 308, 309, 310, 311, 313], "dot": 0, "most": [0, 6, 37, 208, 279, 287, 295, 307], "24": [0, 2, 61, 96, 101, 103, 116, 118, 197, 230, 275, 276, 284, 286, 289, 292, 294, 296, 298, 299, 300, 307, 308, 310], "long": [0, 277, 295, 304], "count": [0, 102, 252, 259, 277, 300], "delimit": 0, "wa": [0, 27, 251, 275, 277, 283, 295, 296, 308, 309], "eaten": 0, "empti": [0, 18, 26, 250, 281], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 26, 27, 29, 35, 43, 50, 69, 76, 81, 92, 93, 94, 109, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 215, 217, 218, 219, 220, 277, 279, 280, 281, 286, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 311, 313], "As": [0, 26, 280, 299, 301, 311], "contain": [0, 2, 3, 26, 79, 85, 228, 229, 230, 275, 276, 279, 284, 285, 286, 287, 289, 292, 294, 295, 297, 298, 300, 305, 307, 308, 309, 310, 311], "drope": 0, "input": [0, 7, 8, 9, 10, 26, 29, 37, 38, 40, 42, 66, 67, 77, 82, 127, 131, 139, 153, 157, 172, 185, 206, 239, 251, 262, 265, 277, 279, 284, 286, 289, 292, 294, 299, 300, 301, 304, 308], "ani": [0, 2, 6, 9, 18, 49, 60, 71, 168, 237, 242, 252, 262, 266, 282, 286, 291, 292, 294, 295, 297, 298, 299, 301, 304, 311, 313], "limit": [0, 2, 6, 70, 166, 188, 195, 210, 239, 277, 279, 294, 295, 302], "length": [0, 85, 86, 87, 88, 102, 103, 118, 277, 299], "If": [0, 2, 10, 18, 29, 37, 50, 60, 75, 76, 77, 85, 95, 98, 102, 104, 105, 163, 164, 170, 172, 185, 186, 195, 206, 209, 211, 212, 213, 214, 220, 232, 239, 243, 246, 253, 265, 275, 279, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 304, 311, 313], "ha": [0, 2, 8, 18, 26, 76, 85, 96, 101, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 275, 277, 279, 280, 282, 284, 286, 287, 289, 292, 294, 295, 297, 299, 300, 306, 308, 309, 311, 313], "more": [0, 2, 8, 25, 238, 241, 243, 244, 246, 247, 248, 277, 279, 284, 289, 291, 293, 295, 297, 299, 300, 304, 307, 311, 312], "extra": [0, 18, 277], "consid": [0, 2, 243, 244, 246, 277, 284, 287, 289, 292, 294, 295, 300, 308], "start": [0, 2, 8, 39, 49, 102, 149, 162, 170, 243, 248, 277, 279, 282, 284, 289, 290, 294, 295, 297, 298, 299, 300, 308, 309, 311, 313], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 266, 275, 277, 279, 280, 282, 284, 287, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 308, 310, 311, 312, 313], "been": [0, 2, 6, 143, 280, 284, 286, 295, 299, 311, 313], "provid": [0, 26, 172, 195, 279, 280, 283, 284, 286, 292, 294, 295, 300, 313], "default": [0, 1, 2, 6, 7, 18, 24, 26, 31, 34, 37, 39, 40, 46, 50, 52, 59, 76, 77, 81, 104, 107, 109, 113, 121, 128, 129, 130, 138, 139, 163, 164, 170, 171, 172, 174, 176, 181, 182, 185, 186, 195, 196, 199, 209, 211, 212, 213, 222, 223, 226, 232, 238, 243, 244, 246, 253, 255, 259, 260, 269, 274, 277, 279, 281, 284, 292, 294, 297, 299, 300, 301, 302, 308, 313], "where": [0, 2, 34, 45, 237, 275, 276, 277, 280, 281, 284, 286, 289, 290, 294, 295, 299, 300, 301, 304, 311, 313], "rexex": 0, "": [0, 10, 14, 68, 157, 277, 279, 284, 286, 290, 295, 301, 305], "za": 0, "z": [0, 34], "either": [0, 2, 40, 79, 104, 239, 248, 279, 292, 295, 297, 299, 311, 313], "surround": 0, "two": [0, 8, 9, 26, 29, 79, 151, 275, 277, 278, 279, 295, 304, 308, 311], "By": [0, 18, 26, 129, 130, 138, 294, 295, 297], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 26, 29, 50, 68, 149, 160, 171, 210, 224, 243, 244, 245, 246, 247, 259, 275, 276, 277, 279, 281, 284, 289, 292, 294, 295, 297, 298, 299, 300, 301, 302, 304, 308, 309, 311, 313], "interpret": [0, 277, 295, 313], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 25, 26, 27, 29, 34, 36, 42, 52, 60, 68, 76, 77, 79, 83, 84, 85, 86, 87, 88, 113, 128, 148, 149, 168, 170, 171, 172, 173, 174, 176, 183, 185, 193, 195, 196, 203, 210, 214, 219, 221, 222, 226, 228, 229, 230, 232, 238, 239, 241, 242, 243, 244, 245, 246, 247, 255, 256, 257, 259, 260, 261, 263, 265, 269, 275, 276, 277, 279, 281, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 309, 311, 312], "chang": [0, 2, 9, 18, 25, 26, 39, 79, 175, 181, 183, 187, 189, 195, 198, 202, 204, 218, 279, 282, 295, 297, 299, 300, 301, 308, 313], "howev": [0, 292, 295, 301, 311, 313], "one": [0, 2, 6, 8, 9, 10, 14, 22, 24, 25, 26, 37, 72, 81, 85, 93, 129, 130, 138, 154, 170, 172, 180, 185, 203, 214, 216, 217, 221, 226, 245, 247, 250, 252, 255, 259, 260, 263, 277, 279, 280, 282, 286, 287, 289, 290, 294, 295, 297, 299, 300, 301, 304, 311], "legal": [0, 295], "ones": [0, 284, 290], "9": [0, 2, 6, 45, 61, 70, 84, 87, 96, 99, 101, 116, 118, 220, 230, 275, 276, 284, 286, 291, 292, 294, 295, 296, 298, 299, 300, 307, 308, 309, 310, 313], "sinc": [0, 6, 186, 277, 286, 287, 290, 292, 299, 300, 301, 304, 313], "number": [0, 2, 6, 8, 14, 22, 24, 42, 50, 60, 63, 71, 77, 78, 79, 114, 115, 116, 118, 149, 166, 170, 171, 172, 173, 174, 185, 194, 201, 240, 241, 245, 247, 251, 252, 275, 277, 279, 284, 286, 295, 299, 307, 308, 309, 311, 313], "valu": [0, 1, 6, 10, 18, 24, 25, 26, 34, 40, 46, 47, 60, 62, 63, 70, 71, 83, 84, 85, 86, 87, 88, 92, 94, 96, 99, 101, 119, 124, 125, 144, 166, 170, 173, 188, 197, 199, 218, 232, 238, 241, 243, 244, 246, 247, 253, 274, 275, 277, 279, 282, 284, 286, 289, 296, 297, 299, 308, 309, 310], "met": [0, 295], "doubl": 0, "big": 0, "warn": [0, 2, 12, 250, 258, 277, 284, 289, 292, 294, 300, 313], "larger": [0, 295], "pad": 0, "filter": [0, 114, 115, 116, 277, 286], "so": [0, 24, 170, 257, 280, 282, 287, 295, 301, 307, 313], "characterscannot": 0, "neither": [0, 295], "perform": [0, 14, 72, 79, 279, 284, 295, 297, 299, 300, 301], "order": [0, 8, 9, 26, 29, 33, 127, 132, 136, 141, 142, 170, 183, 184, 191, 198, 204, 205, 206, 239, 277, 279, 286, 291, 295, 297, 298, 299, 300, 304, 311], "given": [0, 2, 26, 39, 74, 78, 83, 84, 86, 87, 88, 93, 94, 120, 121, 123, 131, 139, 144, 155, 163, 164, 171, 172, 173, 199, 207, 210, 217, 218, 225, 232, 255, 257, 259, 260, 265, 277, 279, 282, 284, 286, 289, 290, 292, 294, 295, 300, 301, 307, 308], "critic": [0, 280], "case": [0, 2, 76, 89, 129, 130, 138, 170, 253, 277, 284, 292, 294, 295, 297, 299, 300, 306, 312], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 26, 29, 33, 95, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 122, 124, 125, 127, 145, 252, 277, 286, 290, 294, 295, 297, 298, 304, 313], "need": [0, 2, 18, 40, 72, 89, 126, 277, 279, 281, 282, 283, 287, 290, 291, 295, 297, 298, 303, 304, 311, 313], "becaus": [0, 8, 277, 295], "later": [0, 291, 295], "comparison": [0, 300, 304], "It": [0, 18, 255, 280, 281, 282, 286, 287, 291, 292, 293, 295, 297, 298, 299, 302, 307, 311, 313], "possibl": [0, 2, 6, 26, 132, 135, 136, 142, 208, 243, 246, 277, 281, 282, 286, 292, 295, 297, 298, 299, 300, 301, 302, 304, 307, 311, 313], "done": [0, 1, 72, 73, 79, 83, 84, 86, 87, 88, 170, 280, 297, 300, 302, 308], "eq": [0, 8, 32, 299], "ne": 0, "text": [0, 18, 37, 38, 178, 297, 299, 304], "otherwis": [0, 6, 29, 34, 35, 37, 40, 43, 72, 76, 95, 98, 105, 128, 129, 130, 138, 140, 143, 146, 147, 148, 170, 183, 195, 196, 198, 199, 201, 204, 210, 280, 286, 295, 297, 299, 304], "appropri": [0, 280, 295], "letter": [0, 128], "alphanum": 0, "underscor": 0, "real": [0, 134, 144, 286, 287], "special": [0, 6, 214, 286, 287, 295], "digit": [0, 71, 277], "enclos": 0, "ok": [0, 287], "w": [0, 29, 72, 128, 146, 153, 154, 161, 174, 185, 196, 199, 203, 210, 221, 284, 295, 297, 299], "o": [0, 276, 278, 279, 283, 308], "With": [0, 311], "eqn": 0, "ge": [0, 299], "etc": [0, 3, 277, 299, 301, 309, 311], "maximum": [0, 14, 37, 71, 241, 279, 284], "have": [0, 6, 8, 18, 26, 29, 37, 40, 79, 141, 214, 244, 252, 257, 259, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 295, 297, 298, 300, 301, 302, 304, 311, 313], "12": [0, 1, 2, 61, 96, 99, 101, 102, 103, 116, 197, 230, 275, 276, 284, 286, 289, 290, 292, 294, 295, 296, 298, 299, 300, 305, 307, 308, 309, 310], "must": [0, 24, 42, 76, 170, 185, 255, 276, 279, 295, 297], "decreas": [0, 287], "within": [0, 170, 280, 295, 311], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 26, 29, 195, 275, 280, 282, 284, 287, 295, 301, 313], "affect": [0, 113, 195, 277, 295, 301], "even": [0, 24, 78, 82, 96, 101, 281, 295, 301], "still": [0, 295, 301, 313], "cannot": [0, 8, 60, 76, 254, 277, 286, 295, 311], "both": [0, 1, 2, 18, 42, 179, 252, 277, 280, 284, 286, 289, 292, 294, 295, 298, 300, 308, 311], "reenter": 0, "think": 0, "risk": [0, 295], "being": [0, 6, 26, 44, 60, 173, 174, 176, 196, 276, 277, 281, 289, 290, 295, 301, 304, 309], "truncat": 0, "encod": [0, 203, 221, 277, 286, 302], "here": [0, 2, 113, 286, 287, 288, 291, 292, 298, 299, 300, 304, 311, 312], "possibli": [0, 304], "partial": [0, 279, 283, 304], "list": [0, 2, 6, 8, 10, 13, 14, 17, 25, 26, 29, 32, 34, 40, 42, 76, 79, 81, 82, 90, 91, 93, 94, 106, 107, 113, 120, 121, 123, 145, 150, 163, 164, 170, 171, 177, 185, 195, 209, 211, 212, 213, 215, 216, 217, 218, 226, 232, 237, 238, 239, 242, 243, 244, 245, 247, 250, 251, 252, 253, 264, 265, 275, 276, 277, 279, 280, 282, 284, 286, 289, 294, 295, 297, 299, 307, 308, 309, 311], "decid": [0, 2, 139, 292, 294, 295, 300, 308], "whether": [0, 24, 34, 37, 40, 76, 131, 139, 170, 185, 228, 230, 239, 253, 256, 269, 277, 279, 292, 295, 300, 311], "put": [0, 8, 149, 170, 277, 287, 290], "up": [0, 280, 281, 284, 291, 298, 311, 313], "written": [0, 277, 295, 297, 299, 301, 311], "scientif": [0, 287], "14": [0, 2, 61, 84, 96, 101, 116, 230, 275, 276, 284, 292, 294, 295, 296, 298, 299, 307, 309, 310], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 102, 186, 275, 299], "describ": [0, 2, 26, 29, 60, 132, 135, 136, 141, 142, 275, 284, 286, 292, 294, 297], "output": [0, 8, 18, 252, 265, 277, 279, 282, 295, 297, 299, 311], "alwai": [0, 172, 277, 286, 299, 300], "synonym": [0, 277], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 24, 25, 26, 30, 31, 32, 37, 38, 40, 41, 42, 47, 50, 60, 71, 73, 76, 78, 79, 81, 86, 87, 88, 93, 97, 102, 103, 107, 110, 113, 116, 118, 120, 121, 123, 128, 129, 130, 131, 138, 145, 146, 149, 151, 160, 163, 164, 166, 169, 170, 174, 176, 177, 178, 180, 185, 186, 188, 192, 195, 196, 197, 199, 206, 209, 211, 212, 213, 216, 217, 227, 232, 237, 238, 239, 244, 249, 250, 253, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 274, 276, 277, 279, 281, 284, 286, 292, 294, 295, 298, 299, 300, 303, 308, 309, 311], "avail": [0, 1, 2, 6, 34, 43, 60, 126, 146, 183, 198, 201, 204, 210, 227, 232, 239, 275, 279, 284, 289, 290, 292, 294, 295, 297, 298, 299, 300, 301, 304, 308, 310, 311, 312, 313], "carri": [0, 295], "over": [0, 118, 149, 170, 199, 228, 229, 230, 275, 276, 277, 290, 294, 311], "onc": [0, 147, 284, 301], "covari": [0, 6, 10, 17, 26, 36, 37, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 76, 101, 113, 131, 145, 153, 159, 160, 171, 172, 173, 177, 210, 241, 242, 277, 279, 284, 286, 287, 294, 304, 309, 311], "final": [0, 2, 36, 159, 236, 277, 284, 289, 290, 292, 294, 295, 299, 300, 301, 308, 309], "estim": [0, 1, 2, 3, 14, 15, 18, 24, 25, 34, 36, 37, 39, 40, 42, 43, 45, 46, 47, 49, 59, 60, 61, 63, 70, 71, 74, 76, 85, 92, 93, 94, 151, 152, 153, 157, 159, 162, 167, 171, 172, 173, 174, 176, 181, 182, 183, 187, 190, 191, 195, 196, 198, 201, 203, 204, 205, 211, 212, 213, 217, 218, 219, 220, 221, 226, 227, 238, 239, 242, 253, 275, 276, 277, 279, 284, 285, 287, 289, 292, 293, 294, 296, 300, 303, 304, 307, 308, 311, 312], "oppos": 0, "ext": [0, 277, 311], "per": [0, 6, 14, 25, 72, 114, 115, 116, 118, 171, 172, 195, 199, 252], "est": [0, 36, 39, 49, 159, 162, 297, 299], "first": [0, 2, 26, 35, 37, 43, 78, 96, 101, 104, 129, 130, 132, 136, 138, 151, 158, 174, 176, 181, 183, 184, 185, 191, 196, 198, 199, 201, 204, 277, 279, 284, 290, 292, 294, 295, 299, 301, 304, 311, 313], "call": [0, 252, 266, 277, 281, 282, 295, 301, 313], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 276, 277, 279, 284, 289, 292, 294, 300, 304, 305, 307, 308, 309, 311], "theta": [0, 1, 29, 34, 37, 119, 124, 125, 153, 154, 157, 195, 203, 221, 277, 292, 299, 300, 301, 304, 308], "sigma": [0, 1, 119, 124, 125, 153, 154, 157, 174, 176, 196, 275, 290, 292, 299, 300, 301], "omega": [0, 1, 22, 26, 61, 119, 124, 125, 153, 154, 157, 277, 279, 290, 292, 297, 299, 300, 301, 307, 308], "fix": [0, 1, 2, 24, 25, 34, 47, 52, 76, 92, 93, 94, 119, 124, 125, 179, 187, 189, 202, 209, 215, 217, 218, 238, 279, 292, 295, 297, 299, 304, 311], "offdiagon": 0, "could": [0, 18, 277, 286, 295, 299, 303, 304], "part": [0, 18, 26, 78, 275, 277, 279, 282, 283, 295, 297, 301, 304, 311], "NO": [0, 295], "probabl": 0, "same": [0, 2, 8, 10, 18, 26, 29, 42, 50, 71, 72, 92, 93, 94, 102, 141, 185, 187, 195, 217, 218, 222, 239, 244, 255, 257, 259, 276, 277, 279, 280, 284, 286, 289, 290, 294, 295, 297, 299, 300, 311, 313], "type": [0, 2, 6, 8, 10, 18, 28, 29, 37, 52, 74, 121, 150, 155, 200, 232, 239, 243, 244, 246, 248, 274, 277, 279, 282, 284, 290, 291, 292, 294, 295, 297, 300, 304], "now": [0, 277, 282, 299, 301], "investig": 0, "follow": [0, 2, 37, 148, 209, 275, 277, 279, 280, 282, 284, 286, 287, 289, 291, 292, 294, 295, 297, 299, 300, 301, 303, 311, 313], "like": [0, 26, 286, 295, 301, 304, 311], "One": [0, 26, 149, 150, 262, 265, 304, 313], "last": [0, 8, 29, 182, 253], "left": [0, 4, 60, 297, 299, 303], "justifi": 0, "size": [0, 6, 13, 170, 277, 280, 304], "13": [0, 1, 2, 61, 96, 99, 101, 102, 116, 230, 275, 276, 284, 289, 292, 294, 295, 296, 298, 299, 300, 305, 307, 309, 310], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 263, 274, 275, 276, 277, 278, 280, 281, 282, 284, 289, 290, 291, 293, 294, 295, 296, 303, 304, 307, 309, 310, 312, 313], "n": [0, 6, 17, 22, 26, 38, 45, 76, 79, 167, 172, 173, 178, 194, 201, 209, 212, 245, 275, 276, 277, 279, 290, 292, 297, 299], "flatten": [0, 277], "triangular": 0, "correl": [0, 53, 54, 55, 56, 64, 65, 66, 67, 70, 76, 220, 277, 307], "abov": [0, 34, 37, 40, 70, 166, 275, 276, 284, 290, 295, 299, 313], "off": 0, "diagon": [0, 153, 277, 292, 298, 299, 300], "obj": 0, "right": [0, 4, 8, 295, 297, 299, 313], "also": [0, 2, 26, 82, 170, 277, 281, 282, 284, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 308, 311, 313], "22": [0, 2, 61, 83, 84, 86, 87, 96, 101, 116, 118, 230, 275, 276, 284, 290, 294, 296, 298, 299, 310], "integ": [0, 6, 128, 277, 279, 311], "5": [0, 1, 2, 29, 34, 37, 53, 55, 56, 60, 61, 65, 66, 72, 84, 85, 94, 96, 99, 101, 103, 116, 118, 128, 146, 147, 148, 153, 197, 210, 213, 218, 230, 251, 252, 275, 276, 284, 286, 290, 292, 294, 295, 296, 297, 298, 299, 300, 305, 307, 309, 310], "expon": [0, 1, 34, 238, 279], "regular": [0, 10, 293], "take": [0, 2, 24, 26, 77, 277, 280, 286, 289, 292, 294, 295, 300, 304], "19": [0, 2, 61, 84, 96, 101, 116, 230, 275, 276, 292, 296, 298, 299, 307, 309, 310], "posit": [0, 26, 172, 173, 277, 279, 280, 287], "neg": [0, 311], "For": [0, 2, 8, 37, 40, 114, 115, 116, 148, 197, 214, 238, 241, 243, 244, 246, 247, 248, 275, 276, 279, 281, 282, 284, 289, 290, 291, 295, 297, 300, 301, 304, 311, 313], "20": [0, 2, 61, 87, 96, 101, 116, 230, 275, 276, 284, 295, 296, 298, 299, 305, 307, 308, 309, 310], "In": [0, 76, 89, 280, 282, 284, 291, 292, 294, 295, 297, 298, 299, 304, 311, 313], "observ": [0, 6, 14, 18, 43, 102, 114, 115, 116, 117, 118, 183, 198, 201, 204, 205, 251, 252, 275, 277, 290, 304, 307, 310], "byte": 0, "evid": [0, 105, 277], "toward": [0, 102, 277], "token": [0, 311], "whitespac": 0, "parenthes": [0, 311], "multipl": [0, 4, 8, 26, 29, 98, 129, 130, 138, 250, 265, 277, 284, 287, 297, 299, 308, 309, 311], "open": [0, 280, 282, 293, 295, 302], "keyword": [0, 279], "kept": [0, 89, 277, 279, 292], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 24, 25, 26, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 277, 279, 281, 282, 284, 286, 287, 289, 292, 294, 295, 297, 300, 301, 302, 303, 304, 308, 313], "csv": [0, 2, 27, 157, 222, 254, 277, 279, 284, 286, 289, 292, 294, 299, 300, 308, 311], "wgt": [0, 2, 4, 6, 10, 29, 34, 37, 72, 81, 82, 96, 101, 113, 126, 128, 146, 147, 148, 153, 154, 160, 197, 211, 212, 213, 216, 238, 286, 290, 297, 299, 301, 304, 307, 311], "23": [0, 2, 60, 61, 63, 77, 84, 96, 101, 116, 171, 172, 173, 230, 275, 276, 284, 292, 294, 296, 298, 299, 300, 309, 310], "titl": 0, "crash": [0, 277], "nmtran": [0, 6, 14], "There": [0, 257, 289, 299], "72": 0, "includ": [0, 2, 3, 17, 22, 26, 46, 150, 253, 276, 277, 280, 284, 292, 293, 294, 295, 298, 299, 300, 307, 309, 311], "come": [0, 282, 295], "filenam": [0, 18, 255, 259, 260, 264, 297], "repres": [0, 4, 6, 24, 25, 26, 35, 279, 284, 286, 287, 290, 295, 297], "rel": [0, 14, 277, 290], "path": [0, 1, 2, 10, 18, 27, 50, 74, 100, 155, 156, 222, 223, 224, 225, 233, 234, 235, 237, 239, 254, 255, 256, 257, 259, 260, 261, 263, 264, 269, 277, 279, 281, 284, 286, 289, 291, 292, 294, 297, 298, 299, 300, 308, 309, 311, 313], "work": [0, 277, 280, 282, 286, 289, 295, 297, 304], "directori": [0, 225, 237, 255, 256, 257, 277, 279, 281, 282, 297, 309], "when": [0, 14, 37, 72, 277, 280, 282, 286, 294, 295, 297, 301, 307, 309, 311], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 251, 252, 284, 286, 289, 292, 294, 295, 300, 308], "simpli": [0, 24, 282, 289, 301], "seen": [0, 1, 2, 284, 286, 289, 292, 294, 300, 308], "54": [0, 61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 300, 305, 307, 310], "doe": [0, 2, 50, 78, 100, 166, 210, 255, 256, 257, 260, 261, 277, 287, 289, 292, 294, 295, 300, 301, 307], "pk": [0, 2, 6, 41, 46, 74, 121, 153, 200, 210, 248, 277, 279, 284, 292, 299, 300, 301, 311], "pred": [0, 87, 153, 157, 277, 298, 299, 307, 310], "simpl": [0, 1, 153, 208, 253, 299, 301], "merg": [0, 277, 295], "placement": [0, 281], "place": [0, 2, 281, 295], "seem": 0, "restrict": [0, 257, 295], "automat": [0, 14, 34, 239, 277, 282, 284, 291, 295, 308, 311], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 33, 72, 74, 75, 77, 78, 95, 98, 99, 105, 163, 185, 195, 224, 225, 237, 251, 252, 255, 256, 257, 258, 259, 262, 264, 266, 269, 275, 276, 277, 279, 281, 282, 285, 286, 289, 290, 292, 296, 300, 304, 305, 307, 308, 309, 310, 311, 312], "continu": [0, 2, 6, 18, 37, 277, 280, 282, 284, 290, 295, 304, 311], "factor": [0, 304], "compil": [0, 295], "11138": 0, "445": [0, 292], "though": [0, 295], "outsid": [0, 277, 280, 295], "standard": [0, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 67, 221, 224, 275, 277, 287, 290, 295, 299, 301, 304, 307, 308, 310], "gfortran": 0, "8": [0, 2, 6, 53, 54, 55, 56, 61, 64, 65, 66, 67, 96, 101, 103, 116, 118, 197, 230, 275, 276, 284, 286, 292, 294, 295, 296, 298, 299, 305, 307, 308, 309, 310, 313], "hh": 0, "j": [0, 210, 212, 276, 290], "nep": 0, "h": [0, 279], "second": [0, 151, 279, 301], "f": [0, 29, 72, 128, 146, 153, 154, 161, 174, 176, 185, 195, 196, 199, 210, 221, 275, 277, 279, 283, 295, 297, 299, 301], "respect": [0, 2, 277, 280, 284, 289, 290, 295, 299, 300, 301], "ep": [0, 29, 153, 277, 279, 299, 301], "implicit": [0, 277], "kind": [0, 6, 8, 121, 295], "dpsize": 0, "main": [0, 279, 304, 313], "function": [0, 3, 10, 14, 26, 34, 37, 38, 57, 58, 77, 82, 83, 84, 86, 87, 88, 92, 93, 94, 108, 117, 122, 132, 135, 136, 142, 174, 176, 178, 187, 195, 196, 208, 214, 217, 218, 220, 225, 232, 243, 246, 262, 275, 277, 279, 281, 282, 286, 287, 292, 294, 295, 297, 298, 300, 301, 303, 304, 307, 308, 309, 311, 312, 313], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 26, 30, 31, 42, 60, 78, 85, 107, 119, 123, 124, 126, 129, 130, 138, 139, 154, 173, 174, 176, 185, 195, 196, 199, 238, 239, 277, 279, 284, 286, 287, 292, 298, 304, 307, 312, 313], "doesn": [0, 29, 259, 277, 292], "t": [0, 6, 8, 29, 34, 38, 80, 109, 190, 191, 205, 213, 253, 259, 262, 264, 276, 277, 279, 290, 292, 299, 305, 307], "declar": [0, 2, 72, 147, 284, 311], "assign": [0, 6, 29, 72, 277, 279, 297], "stop": 0, "entri": [0, 258], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 24, 25, 26, 29, 57, 58, 72, 78, 104, 108, 113, 117, 122, 126, 129, 130, 138, 147, 154, 169, 174, 176, 185, 195, 196, 199, 239, 277, 284, 287, 299, 304], "separ": [0, 10, 76, 89, 148, 170, 209, 257, 277, 279, 282, 284, 286, 287, 290, 295, 304, 311], "thnn": 0, "nn": [0, 290], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 24, 26, 166, 188, 277, 295, 299], "ad": [0, 9, 18, 35, 37, 40, 45, 89, 243, 244, 246, 265, 277, 279, 284, 294, 295, 301, 308, 309], "x": [0, 1, 2, 25, 34, 72, 83, 84, 99, 171, 197, 275, 284, 286, 290, 292, 294, 298, 299, 300, 302, 308, 309], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 26, 27, 29, 107, 113, 155, 156, 157, 277, 286, 299, 300], "tool": [1, 2, 3, 14, 18, 49, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 83, 84, 85, 86, 87, 88, 161, 171, 172, 173, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 261, 263, 269, 274, 275, 277, 278, 279, 282, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 300, 303, 304, 308, 312, 313], "add": [1, 9, 14, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 72, 89, 109, 178, 195, 196, 265, 277, 279, 284, 292, 295, 299, 300, 301, 302, 311], "allometr": [1, 2, 34, 238, 277, 279, 311], "scale": [1, 2, 6, 18, 34, 59, 62, 68, 238, 277, 279, 290, 302, 311], "pharmr": [1, 2, 3, 277, 282, 284, 287, 289, 291, 292, 293, 294, 300, 308, 312], "command": [1, 277, 282, 284, 289, 291, 292, 293, 294, 295, 299, 300, 308, 312], "line": [1, 72, 277, 284, 289, 291, 292, 293, 294, 295, 299, 300, 308, 312], "To": [1, 2, 279, 281, 282, 284, 289, 291, 292, 294, 295, 298, 299, 300, 302, 308, 311, 313], "initi": [1, 2, 15, 18, 24, 25, 34, 40, 42, 43, 45, 46, 47, 74, 76, 77, 85, 92, 93, 94, 109, 167, 174, 176, 183, 185, 186, 187, 190, 191, 195, 196, 198, 201, 204, 205, 211, 212, 213, 217, 218, 219, 220, 238, 239, 264, 277, 279, 284, 289, 290, 292, 294, 295, 297, 299, 300, 308], "python": [1, 2, 276, 277, 279, 284, 286, 287, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 308, 311, 312], "r": [1, 2, 14, 27, 276, 277, 281, 284, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 308, 311, 312], "read_model": [1, 157, 277, 284, 286, 289, 292, 294, 297, 299, 300, 308, 313], "read_modelfit_result": [1, 277, 284, 289, 292, 294, 297, 298, 300, 308], "run_allometri": [1, 277], "start_model": [1, 251, 284, 289, 292, 294, 300, 308, 311], "start_model_result": [1, 284, 289, 292, 294, 300, 308, 311], "re": [1, 2, 225, 234, 235, 236, 240, 241, 249, 256, 261, 263, 276, 284, 289, 292, 294, 298, 300, 308, 310, 311], "code": [1, 14, 18, 20, 72, 112, 113, 126, 132, 135, 136, 142, 153, 157, 195, 196, 223, 277, 284, 289, 292, 293, 294, 295, 299, 300, 301, 303, 304, 308, 313], "redefin": [1, 284, 289, 292, 294, 300, 308], "accordingli": [1, 284, 289, 292, 294, 300, 301, 308], "descript": [1, 2, 6, 18, 30, 251, 252, 253, 274, 275, 277, 281, 284, 286, 289, 292, 294, 300, 304, 308, 309], "modelfitresult": [1, 2, 21, 226, 227, 228, 229, 230, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 277, 284, 289, 292, 294, 300, 308], "allometric_vari": [1, 2, 34, 238, 239, 279], "wt": [1, 29, 34, 238, 241, 284, 309], "reference_valu": [1, 2, 34, 238, 279], "refer": [1, 31, 34, 72, 79, 141, 197, 236, 238, 239, 253, 277, 279, 284, 295, 299, 301, 312, 313], "70": [1, 2, 34, 96, 238, 299, 307], "appli": [1, 2, 18, 174, 176, 185, 195, 196, 211, 212, 213, 238, 277, 279, 280, 286, 290, 295, 299, 300, 307, 311], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 18, 25, 26, 27, 28, 29, 30, 34, 40, 44, 46, 69, 72, 76, 79, 81, 89, 93, 94, 97, 99, 101, 103, 106, 107, 110, 119, 121, 124, 125, 127, 128, 132, 135, 136, 139, 142, 145, 150, 152, 154, 163, 164, 171, 172, 185, 189, 195, 197, 202, 209, 211, 212, 213, 215, 216, 217, 218, 237, 238, 242, 243, 244, 246, 253, 255, 259, 260, 265, 270, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 292, 294, 295, 297, 298, 299, 300, 301, 303, 304, 305, 311, 313], "cl": [1, 2, 4, 8, 25, 29, 34, 37, 40, 42, 45, 60, 72, 78, 80, 90, 107, 121, 123, 128, 131, 139, 144, 146, 147, 148, 153, 154, 160, 163, 167, 175, 183, 184, 190, 191, 194, 198, 204, 208, 211, 212, 213, 238, 241, 284, 290, 292, 294, 297, 299, 301], "q": [1, 34, 45, 167, 238, 277, 299], "v": [1, 8, 25, 29, 34, 38, 60, 72, 80, 91, 107, 121, 126, 128, 146, 147, 148, 153, 154, 163, 175, 178, 183, 184, 190, 191, 198, 204, 205, 208, 238, 241, 282, 284, 290, 294, 297, 299, 301, 310, 311], "75": [1, 2, 34, 238, 284, 289], "lower_bound": [1, 2, 34, 238, 279], "lower": [1, 2, 6, 24, 25, 34, 37, 47, 70, 92, 93, 94, 119, 124, 125, 166, 187, 188, 189, 195, 202, 215, 218, 238, 239, 279, 287, 292, 297, 299], "bound": [1, 24, 25, 34, 47, 71, 173, 189, 202, 211, 212, 213, 215, 220, 238, 277, 279, 297], "upper_bound": [1, 2, 34, 238, 279], "upper": [1, 24, 25, 34, 37, 47, 92, 93, 94, 119, 124, 125, 166, 187, 189, 202, 215, 218, 238, 277, 279, 297, 299], "should": [1, 6, 24, 34, 37, 40, 42, 47, 170, 185, 238, 243, 244, 246, 277, 279, 280, 281, 282, 284, 287, 290, 292, 294, 295, 296, 300, 304, 308], "true": [1, 2, 6, 10, 15, 18, 25, 34, 35, 36, 59, 69, 78, 81, 89, 92, 93, 94, 109, 113, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 159, 160, 172, 179, 181, 182, 185, 195, 196, 201, 216, 217, 218, 219, 223, 230, 238, 253, 254, 277, 284, 286, 289, 292, 294, 297, 299, 300, 301, 302, 308, 309, 310, 313], "No": [1, 6, 260, 261, 295, 300], "select": [1, 2, 170, 197, 211, 213, 252, 275, 277, 279, 284, 292, 294, 297, 300, 302, 308, 309, 311], "see": [1, 2, 6, 8, 18, 37, 40, 230, 238, 239, 241, 243, 244, 246, 247, 248, 279, 280, 281, 282, 284, 286, 287, 289, 292, 294, 295, 296, 297, 299, 300, 301, 304, 308, 311], "about": [1, 2, 6, 280, 284, 286, 289, 291, 292, 294, 295, 299, 300, 308, 311], "actual": [1, 2, 24, 148, 284, 289, 292, 294, 295, 300, 308], "minim": [1, 2, 277, 284, 289, 292, 294, 300, 308], "statu": [1, 2, 277, 284, 287, 289, 292, 294, 295, 300, 308], "time": [1, 2, 6, 7, 9, 10, 25, 29, 34, 42, 43, 72, 74, 81, 82, 96, 102, 103, 110, 118, 128, 145, 146, 147, 148, 149, 153, 154, 157, 165, 183, 186, 197, 198, 199, 201, 204, 214, 239, 247, 277, 279, 284, 286, 289, 290, 292, 294, 295, 297, 298, 300, 301, 304, 307, 308, 310, 311], "you": [1, 2, 281, 282, 284, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 308, 311, 312, 313], "look": [1, 2, 29, 50, 107, 139, 284, 289, 292, 294, 300, 301, 308, 311], "summary_model": [1, 2, 277, 284, 289, 292, 294, 300, 308, 311], "tabl": [1, 2, 59, 153, 174, 252, 275, 276, 277, 282, 284, 285, 289, 290, 292, 294, 296, 299, 300, 305, 307, 308, 309, 310, 311], "gener": [1, 2, 6, 60, 63, 73, 77, 149, 170, 171, 172, 173, 262, 264, 277, 279, 284, 286, 289, 290, 292, 293, 294, 299, 300, 303, 304, 308, 311], "summarize_modelfit_result": [1, 2, 277, 284, 289, 292, 294, 300, 308], "minimization_success": [1, 2, 253, 284, 289, 292, 294, 300, 308], "errors_found": [1, 2, 284, 289, 292, 294, 300, 308], "pheno": [1, 8, 10, 15, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 85, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 230, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 286, 291, 297, 298, 299, 301], "phenobarb": [1, 153, 253, 299], "scaled_model": [1, 2], "warnings_found": [1, 2, 284, 289, 292, 294, 300, 308], "ofv": [1, 2, 52, 151, 228, 232, 243, 244, 246, 251, 252, 253, 277, 284, 289, 292, 294, 300, 307, 308], "aic": [1, 51, 232, 243, 244, 246, 277, 292, 294, 300, 308], "bic": [1, 2, 52, 232, 243, 244, 246, 277, 279, 284, 292, 294, 300, 308, 311], "730": [1, 275, 290, 292], "894727": [1, 275, 290], "740": [1, 85, 102, 197, 275, 286, 299], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 253, 284, 289, 292, 294, 300, 308], "estimation_runtim": [1, 2, 284, 289, 292, 294, 300, 308], "_estim": [1, 292, 300], "32": [1, 6, 61, 96, 101, 116, 230, 275, 276, 279, 284, 289, 296, 298, 299, 307, 310], "005818": [1, 290], "121955": 1, "44555": [1, 290], "111053": [1, 290], "201526": [1, 290], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 290], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 231, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 275, 277, 284, 289, 290, 292, 294, 300, 305, 308, 311], "predict": [1, 2, 14, 18, 86, 87, 108, 113, 122, 150, 228, 229, 230, 251, 277, 284, 285, 292, 294, 300, 307, 308], "influenti": [1, 2, 228, 229, 252, 277, 284, 292, 294, 300, 308], "individu": [1, 2, 6, 18, 41, 59, 60, 61, 63, 76, 86, 87, 107, 108, 114, 115, 116, 118, 122, 150, 151, 152, 163, 166, 171, 172, 173, 219, 228, 229, 230, 251, 252, 277, 279, 284, 292, 294, 295, 299, 300, 304, 307, 308], "outlier": [1, 2, 229, 230, 252, 277, 284, 292, 294, 300, 308, 310], "summary_individuals_count": [1, 2, 284, 292, 294, 300, 308], "summarize_individuals_count_t": [1, 2, 277, 284, 292, 294, 300, 308], "parent_model": [1, 2, 18, 277, 284, 289, 292, 294, 300, 308], "inf_select": [1, 2, 252, 284, 292, 294, 300, 308], "inf_param": [1, 2, 252, 284, 292, 294, 300, 308], "out_ob": [1, 2, 252, 284, 292, 294, 300, 308], "out_ind": [1, 2, 252, 284, 292, 294, 300, 308], "inf_outli": [1, 2, 252, 284, 292, 294, 300, 308], "differ": [1, 2, 3, 18, 23, 26, 52, 251, 253, 275, 276, 277, 280, 281, 284, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 313], "statist": [1, 6, 60, 63, 212, 284, 286, 290, 292, 294, 297, 300, 308], "summary_individu": [1, 277, 284, 292, 294, 300, 308], "summarize_individu": [1, 252, 277, 284, 292, 294, 300, 308], "outlier_count": [1, 251, 284, 292, 294, 300, 308], "dofv_vs_par": [1, 251, 284, 292, 294, 300, 308], "id": [1, 5, 6, 10, 16, 61, 79, 81, 82, 96, 99, 101, 102, 103, 106, 116, 118, 153, 154, 157, 171, 197, 230, 276, 277, 279, 284, 286, 290, 292, 294, 296, 298, 299, 300, 301, 308, 310], "nan": [1, 2, 99, 220, 277, 284, 289, 290, 292, 294, 299, 300, 307, 308, 309], "742852": 1, "000000": [1, 2, 47, 53, 54, 55, 64, 275, 284, 290, 292, 294, 298, 300, 308], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 25, 42, 61, 76, 84, 96, 99, 101, 102, 116, 166, 186, 188, 189, 202, 206, 210, 212, 230, 275, 276, 284, 286, 289, 290, 291, 292, 294, 295, 296, 298, 299, 300, 305, 307, 308, 309, 310, 311], "092658": 1, "55": [1, 2, 6, 61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 300, 305, 307, 310], "6": [1, 2, 6, 61, 85, 96, 101, 116, 118, 197, 230, 275, 276, 284, 286, 290, 292, 294, 295, 296, 298, 299, 300, 307, 308, 309, 310], "535711": 1, "175743": 1, "56": [1, 61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 310], "764710": 1, "576072": 1, "57": [1, 2, 61, 96, 101, 106, 116, 171, 230, 275, 276, 284, 289, 290, 296, 298, 299, 310], "975589": 1, "539779": 1, "58": [1, 2, 61, 96, 101, 106, 116, 118, 171, 230, 275, 276, 290, 296, 298, 299, 309, 310], "194798": 1, "775689": 1, "59": [1, 61, 96, 99, 101, 103, 106, 114, 116, 118, 171, 197, 230, 275, 276, 284, 286, 289, 290, 296, 298, 299, 300, 310], "11": [1, 2, 61, 83, 84, 86, 96, 99, 101, 102, 116, 230, 275, 276, 284, 290, 291, 292, 294, 295, 296, 298, 299, 300, 305, 307, 309, 310, 311, 313], "175577": 1, "462889": 1, "predicted_dofv": [1, 251, 252, 284, 292, 294, 300, 308], "predicted_residu": [1, 251, 252, 284, 292, 294, 300, 308], "118": [1, 2, 171, 277, 290], "fulli": [2, 311], "best": [2, 277, 284, 292, 294, 295, 300, 308, 311], "dataset": [2, 10, 11, 12, 18, 33, 48, 60, 69, 74, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 102, 105, 106, 111, 114, 115, 116, 118, 126, 141, 149, 155, 166, 170, 177, 197, 210, 214, 222, 239, 244, 276, 277, 279, 282, 290, 293, 294, 310, 312], "combin": [2, 4, 76, 129, 130, 138, 140, 174, 176, 196, 209, 210, 245, 277, 279, 289, 290, 292, 295, 299, 308, 311], "modelsearch": [2, 239, 246, 251, 277, 311], "ruvsearch": [2, 239, 247, 249, 277, 311], "covsearch": [2, 241, 277, 311], "run_amd": [2, 277], "dataset_path": [2, 74, 299], "modeltyp": [2, 74, 239, 279, 299], "pk_oral": [2, 279], "search_spac": [2, 239, 246, 277, 279, 300, 311], "let": [2, 14, 18, 79, 277, 284, 290, 299, 301, 311], "categor": [2, 6, 37, 277, 284, 286, 290, 311], "sex": [2, 280, 284, 304, 311], "ag": [2, 6, 241, 284, 309, 311], "occas": [2, 42, 239, 244, 277, 279, 294, 299], "visi": [2, 294], "c": [2, 9, 38, 178, 212, 278, 283, 289, 290, 294, 295, 299, 301, 308], "specifi": [2, 6, 29, 40, 82, 92, 94, 155, 166, 174, 176, 194, 195, 196, 218, 224, 242, 277, 279, 281, 284, 289, 294, 295, 297, 298], "oral": [2, 33, 74, 95, 239, 248, 277, 299, 311], "drug": [2, 44, 200, 304], "iiv": [2, 17, 22, 26, 31, 40, 42, 46, 52, 76, 107, 139, 163, 185, 209, 239, 243, 244, 246, 277, 279, 284, 294, 297, 299, 311], "we": [2, 280, 282, 284, 290, 291, 293, 295, 297, 299, 301, 304, 313], "our": [2, 280, 282, 283, 295, 304], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 62, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 89, 92, 93, 94, 99, 108, 117, 119, 122, 124, 125, 126, 128, 146, 147, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 269, 275, 277, 279, 281, 284, 286, 287, 289, 292, 294, 295, 299, 300, 301, 304, 308, 311, 312, 313], "build": [2, 239, 278, 279, 287, 299, 311], "pk_iv": [2, 279], "cl_init": [2, 74, 239, 279, 299], "popul": [2, 18, 29, 47, 85, 86, 87, 108, 122, 128, 220, 239, 277, 279, 309], "clearanc": [2, 34, 74, 90, 239, 277, 279, 284, 294, 301], "01": [2, 17, 26, 37, 74, 195, 220, 239, 241, 279, 284, 299, 307, 309], "vc_init": [2, 74, 239, 279, 299], "central": [2, 7, 8, 9, 29, 44, 45, 72, 74, 128, 146, 167, 175, 183, 184, 186, 190, 191, 194, 198, 201, 204, 205, 206, 208, 239, 279, 282, 287, 297, 299], "compart": [2, 6, 8, 9, 32, 35, 38, 43, 44, 45, 97, 98, 110, 127, 158, 165, 167, 186, 194, 201, 206, 239, 277, 279, 299, 300, 311], "volum": [2, 34, 45, 74, 91, 239, 277, 279, 284, 294, 295], "mat_init": [2, 74, 239, 279, 299], "absorpt": [2, 74, 121, 141, 175, 183, 198, 201, 204, 239, 246, 251, 277, 279, 292, 294, 300, 311], "mfl": [2, 239, 241, 251, 277, 279, 284, 300], "depend": [2, 6, 18, 29, 33, 60, 76, 79, 129, 130, 138, 174, 176, 185, 195, 196, 199, 277, 281, 286, 292, 301, 311, 313], "lloq": [2, 6, 166, 188, 210, 239, 277, 279, 299], "quantif": [2, 6, 166, 188, 210, 239, 279], "loq": [2, 166, 239, 279], "data": [2, 6, 18, 31, 83, 84, 85, 86, 87, 88, 101, 113, 153, 154, 157, 166, 174, 176, 179, 188, 196, 210, 239, 252, 275, 277, 286, 290, 294, 295, 297, 299, 301, 304, 311], "bodi": [2, 6, 10, 280, 286, 295, 304], "weight": [2, 6, 10, 88, 129, 130, 138, 140, 203, 221, 284, 286, 304, 308], "correspond": [2, 14, 18, 193, 276, 295, 297, 310, 311], "datainfo": [2, 18, 33, 82, 155, 177, 222, 277, 311, 312], "file": [2, 10, 18, 27, 50, 75, 100, 153, 155, 156, 157, 222, 223, 224, 233, 234, 254, 255, 256, 257, 259, 260, 261, 263, 264, 277, 279, 282, 284, 289, 291, 292, 294, 295, 297, 298, 299, 300, 301, 303, 304, 308, 311, 312], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 258, 262, 263, 264, 277, 281, 284, 286, 295, 298, 299, 312], "model_typ": [2, 248], "elimin": [2, 121, 132, 135, 136, 142, 184, 190, 191, 205, 277, 279, 300, 311], "vc": [2, 45, 167, 284, 292, 294, 299], "mat": [2, 46, 276, 277, 278, 283, 284, 292, 294, 299, 301, 308], "proport": [2, 40, 129, 130, 138, 140, 170, 174, 176, 195, 196, 210, 277, 279, 299], "step": [2, 15, 18, 36, 38, 39, 49, 159, 162, 178, 181, 182, 241, 253, 277, 279, 282, 284, 289, 291, 292, 294, 295, 300, 304, 308, 313], "foce": [2, 14, 15, 36, 39, 159, 181, 182, 277, 279, 289, 297, 299], "interact": [2, 14, 15, 36, 39, 153, 159, 181, 182, 277, 280, 289, 295, 297, 299, 304, 311, 313], "specif": [2, 14, 18, 25, 49, 82, 170, 195, 225, 277, 279, 284, 286, 295, 297, 300, 304, 311], "support": [2, 8, 14, 18, 29, 39, 40, 57, 58, 73, 74, 83, 84, 86, 87, 88, 98, 108, 117, 122, 129, 130, 138, 175, 181, 182, 198, 200, 210, 241, 247, 266, 277, 279, 284, 286, 287, 289, 293, 295, 297, 298, 299, 300, 301, 303, 304, 306, 311], "nonmem": [2, 14, 18, 72, 73, 82, 114, 115, 116, 193, 245, 277, 278, 282, 286, 291, 293, 297, 298, 299, 304, 311], "cmt": [2, 33, 98, 277, 300], "rate": [2, 6, 8, 9, 16, 45, 141, 175, 183, 198, 201, 204, 277, 279, 311], "via": [2, 277, 279, 281, 282, 291, 293, 297, 299, 301, 311, 313], "exclud": [2, 113, 251, 292, 294, 295, 300], "pleas": [2, 282, 291, 295, 297, 299, 311, 313], "featur": [2, 282, 284, 289, 292, 293, 294, 295, 308, 312], "languag": [2, 112, 153, 280, 284, 287, 295, 300], "how": [2, 3, 172, 239, 243, 246, 277, 279, 280, 282, 284, 286, 291, 292, 294, 295, 297, 299, 300, 301, 309, 312], "defin": [2, 8, 63, 113, 126, 141, 148, 154, 277, 284, 287, 295, 297, 310, 311], "zo": [2, 246, 251, 277, 279, 300, 311], "seq": [2, 279, 300, 311], "fo": [2, 14, 39, 181, 182, 277, 279, 289, 300, 304, 311], "mm": [2, 277, 279, 300, 311], "mix": [2, 42, 52, 136, 191, 232, 277, 287, 291, 294, 297, 300, 304, 311], "lagtim": [2, 175, 198, 300, 311], "transit": [2, 8, 194, 201, 277, 279, 300, 311], "peripher": [2, 8, 45, 167, 194, 246, 251, 277, 279, 299, 300, 311], "cat": [2, 37, 284, 311], "iv": [2, 33, 74, 95, 239, 277, 279, 311], "note": [2, 4, 6, 24, 72, 73, 99, 114, 115, 116, 195, 253, 254, 255, 259, 260, 275, 286, 292, 294, 298, 299, 301, 309], "overriden": 2, "ignor": [2, 114, 115, 116, 153, 277, 279, 299, 301], "soon": 2, "explicitli": [2, 279, 294, 295], "stai": [2, 26], "vice": 2, "versa": 2, "instanc": [2, 131, 160, 284, 311], "effect": [2, 37, 38, 40, 52, 131, 139, 160, 163, 178, 195, 232, 241, 277, 279, 287, 291, 295, 297, 299, 304, 309, 311], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 24, 25, 26, 27, 29, 30, 31, 34, 36, 39, 40, 42, 47, 50, 52, 60, 63, 74, 76, 77, 79, 83, 84, 85, 86, 87, 88, 100, 104, 129, 130, 138, 144, 150, 155, 159, 163, 164, 166, 170, 171, 172, 173, 174, 176, 185, 188, 193, 195, 196, 199, 209, 210, 211, 212, 213, 222, 226, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 259, 260, 264, 265, 269, 277, 279, 281, 286, 290, 292, 294, 297, 299, 300, 311], "null": [2, 286, 292, 294, 300, 311, 313], "yield": [2, 149, 170], "workflow": [2, 3, 235, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 277, 291, 293, 295, 304, 311], "want": [2, 280, 282, 284, 292, 293, 294, 295, 299, 300, 301, 303], "desir": [2, 260, 261], "subset": [2, 71, 171, 297], "algorithm": [2, 241, 242, 243, 246, 251, 277, 279, 304, 311], "six": 2, "below": [2, 6, 166, 188, 210, 281, 282, 289, 292, 294, 295, 300, 308], "detail": [2, 238, 241, 243, 244, 246, 247, 248, 289, 295, 297, 300, 307, 308, 311, 312], "regard": [2, 295, 300], "subhead": 2, "distribut": [2, 17, 22, 26, 42, 45, 60, 63, 76, 121, 148, 152, 167, 171, 172, 173, 209, 213, 244, 266, 275, 277, 279, 290, 295, 300, 307, 311], "term": [2, 174, 277, 292, 295], "keep": [2, 14, 24, 166, 170, 243, 255, 277, 280, 287, 292, 295], "well": [2, 60, 284, 289, 292, 294, 295, 299, 300, 307, 308, 311, 312], "iov": [2, 26, 42, 107, 139, 164, 244, 277, 279, 299, 307, 311], "explain": [2, 284, 295, 304, 311], "ruv": [2, 185, 279], "power": [2, 37, 195, 210, 279, 295, 299, 304, 305, 307, 308], "vari": [2, 145, 199, 247, 277, 279, 308], "identifi": [2, 6, 31, 284, 286, 292, 295, 307, 311], "option": [2, 6, 14, 18, 26, 37, 40, 42, 49, 74, 76, 83, 84, 86, 87, 88, 170, 210, 232, 255, 259, 260, 270, 275, 277, 279, 284, 292, 294, 295, 297, 299, 300, 312, 313], "reduced_stepwis": [2, 251, 277, 300, 311], "iiv_strategi": [2, 243, 246, 277, 279, 292, 300, 311], "absorption_delai": [2, 246, 277, 300, 311], "rank_typ": [2, 232, 243, 244, 246, 279, 292, 294, 300, 311], "cutoff": [2, 199, 228, 229, 230, 232, 243, 244, 246, 277, 279, 292, 294, 300, 311], "brute_forc": [2, 243, 277, 292], "fullblock": [2, 243, 246, 277, 292, 300], "tri": [2, 279, 300], "list_of_paramet": [2, 40, 42, 244, 279, 294], "random": [2, 3, 13, 17, 18, 22, 26, 42, 52, 60, 63, 77, 79, 123, 126, 139, 171, 172, 173, 277, 279, 287, 290, 294, 299, 307, 313], "group": [2, 25, 31, 149, 150, 170, 247, 279, 293, 308], "p_valu": [2, 247, 279, 308], "05": [2, 45, 53, 54, 55, 56, 64, 65, 66, 67, 167, 241, 247, 275, 279, 284, 298, 299, 307, 308, 309], "skip": [2, 247, 279, 284, 308], "p_forward": [2, 241, 279, 284], "p_backward": [2, 241, 279, 284], "max_step": [2, 241, 279, 284], "scm": [2, 241, 277, 284, 304, 306], "forward": [2, 241, 277, 279, 284, 309], "backward": [2, 241, 253, 277, 279, 284, 309], "variou": [2, 72, 251, 252, 277, 279, 280, 282, 284, 287, 289, 292, 293, 294, 300, 304, 308], "access": [2, 284, 286, 289, 292, 294, 295, 297, 299, 300, 301, 308, 311, 313], "json": [2, 10, 27, 234, 236, 254, 277, 279, 284, 286, 289, 292, 294, 300, 308, 311], "format": [2, 18, 73, 277, 279, 281, 284, 287, 289, 291, 292, 293, 294, 295, 297, 299, 300, 303, 308], "summary_tool": [2, 277, 284, 289, 292, 294, 300, 308], "candid": [2, 246, 277, 279, 284, 289, 308, 311], "compar": [2, 232, 275, 277, 284, 289, 304, 308, 311], "rank": [2, 232, 243, 244, 246, 277, 279, 284, 308], "selected_model": 2, "901": 2, "722667": 2, "iivsearch_run9": 2, "2272": 2, "503332": 2, "best_ruvsearch_2": [2, 308], "time_varying2": [2, 308], "iiv_on_ruv": [2, 277, 305, 307, 308], "2431": 2, "413432": 2, "iovsearch_run2": [2, 294], "2579": 2, "021315": 2, "2590": 2, "360161": 2, "covsearch_run6": [2, 284], "2593": 2, "888704": 2, "dofv": [2, 228, 229, 251, 275, 276, 277, 284, 305, 307, 308], "n_param": [2, 284, 294, 308], "d_param": [2, 284, 294, 308], "1370": 2, "780665": 2, "158": 2, "910100": 2, "147": [2, 6], "607883": 2, "338847": 2, "528542": 2, "modelsearch_run1": [2, 277], "base_model": [2, 232], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "best_ruvsearch_1": [2, 308], "iovsearch_run1": [2, 294], "iovsearch_run3": [2, 294], "iovsearch_run4": [2, 294], "iovsearch_run5": [2, 294], "iovsearch_run6": [2, 294], "iovsearch_run7": [2, 294], "iovsearch_run8": [2, 294], "iovsearch_run9": 2, "iovsearch_run10": 2, "covsearch_run1": [2, 284], "exp": [2, 29, 37, 40, 153, 211, 212, 213, 241, 284, 299, 301], "covsearch_run2": [2, 284], "covsearch_run3": [2, 284], "covsearch_run4": [2, 284], "covsearch_run5": [2, 284], "fals": [2, 6, 13, 14, 17, 18, 22, 24, 25, 27, 31, 37, 39, 47, 59, 69, 71, 78, 81, 89, 92, 93, 94, 109, 113, 119, 124, 125, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 160, 170, 172, 179, 187, 189, 195, 201, 202, 215, 217, 218, 219, 220, 222, 230, 239, 253, 254, 256, 269, 276, 284, 286, 289, 297, 299, 301, 302, 309, 310], "19029": 2, "146679": 2, "2091": 2, "335789": 2, "2278": 2, "645238": 2, "1623": 2, "449423": 2, "2187": 2, "714827": 2, "2155": 2, "309747": 2, "1562": 2, "182445": 2, "1544": 2, "578087": 2, "1927": 2, "724795": 2, "1419": 2, "684985": 2, "2260": 2, "091630": 2, "2256": 2, "222388": 2, "2253": 2, "280037": 2, "2421": 2, "414958": 2, "018856": 2, "816993": 2, "2555": 2, "387421": 2, "817090": 2, "387607": 2, "413326": 2, "2524": 2, "580897": 2, "2556": 2, "106887": 2, "2502": 2, "502532": 2, "2591": 2, "473342": 2, "816184": 2, "112946": 2, "565747": 2, "739920": 2, "63": [2, 96, 118, 298, 299, 305, 307], "30": [2, 61, 96, 101, 116, 230, 275, 276, 284, 289, 292, 294, 295, 296, 298, 299, 300, 305, 307, 310], "15": [2, 61, 84, 96, 101, 116, 230, 275, 276, 284, 292, 294, 295, 296, 298, 299, 309, 310], "06": [2, 53, 55, 56, 65, 66, 275, 284, 292, 294, 298, 307, 309, 311], "21": [2, 61, 83, 86, 96, 101, 116, 230, 275, 276, 284, 289, 290, 296, 298, 299, 305, 307, 310], "82": 2, "77": [2, 284], "27": [2, 61, 96, 101, 116, 118, 230, 275, 276, 284, 292, 294, 296, 298, 299, 300, 308, 310], "80": [2, 213, 284, 298, 305, 307, 308], "02": [2, 284, 307, 309, 311], "37": [2, 61, 96, 101, 103, 116, 197, 230, 275, 276, 284, 286, 296, 298, 299, 310], "45": [2, 61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 310], "18": [2, 6, 61, 84, 96, 101, 116, 230, 275, 276, 284, 292, 294, 296, 298, 299, 305, 307, 310], "85": 2, "73": [2, 118, 298, 299, 308, 311], "31": [2, 61, 83, 86, 96, 101, 116, 118, 230, 275, 276, 284, 296, 298, 299, 305, 307, 310, 311], "17": [2, 61, 83, 84, 86, 87, 96, 99, 101, 116, 118, 197, 230, 275, 276, 284, 286, 292, 294, 295, 296, 298, 299, 300, 305, 307, 310], "60": [2, 96, 284, 295, 299, 305], "28": [2, 61, 83, 86, 87, 96, 101, 116, 210, 230, 275, 276, 284, 292, 295, 296, 298, 299, 307, 310], "84": [2, 228, 229, 252, 292, 294, 300, 309], "39": [2, 61, 96, 101, 116, 230, 275, 276, 284, 294, 296, 298, 299, 307, 308, 309, 310], "98": [2, 275, 284, 290, 292], "38": [2, 61, 83, 86, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 310], "96": [2, 103, 213, 275, 284, 299, 300], "52": [2, 61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 300, 309, 310], "33": [2, 61, 96, 101, 116, 118, 230, 275, 276, 284, 296, 298, 299, 300, 309, 310], "40": [2, 61, 96, 99, 101, 116, 118, 166, 197, 230, 275, 276, 286, 289, 296, 298, 299, 309, 310], "44": [2, 61, 96, 101, 116, 230, 275, 276, 296, 298, 299, 310], "26": [2, 61, 96, 101, 116, 230, 275, 276, 284, 294, 296, 298, 299, 307, 309, 310], "66": [2, 284, 305], "36": [2, 61, 63, 96, 101, 116, 230, 275, 276, 284, 292, 294, 296, 298, 299, 300, 307, 310], "25": [2, 61, 83, 86, 87, 96, 101, 103, 116, 230, 275, 276, 284, 286, 292, 296, 298, 299, 300, 305, 307, 308, 310], "65": [2, 6, 284], "29": [2, 61, 83, 86, 87, 96, 101, 116, 210, 212, 230, 275, 276, 278, 284, 292, 295, 296, 298, 299, 307, 310], "64": [2, 6], "78": 2, "88": 2, "51": [2, 61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 310, 311], "47": [2, 61, 96, 101, 116, 118, 230, 275, 276, 296, 298, 299, 300, 305, 307, 310], "34": [2, 61, 87, 96, 101, 116, 118, 230, 275, 276, 284, 296, 298, 299, 305, 307, 310], "pop_cl_estim": [2, 284, 289, 294, 308], "pop_vc_estim": [2, 284, 289, 294, 308], "0100": 2, "100": [2, 25, 37, 39, 49, 171, 181, 213, 275, 277, 279, 284, 298, 299, 302, 309], "3711": 2, "125": 2, "228": 2, "5771": 2, "115": 2, "287": [2, 305], "8759": 2, "119": 2, "581": 2, "2667": 2, "105": [2, 284, 289, 308], "292": 2, "5775": 2, "127": [2, 6, 292], "060": 2, "1654": 2, "121": [2, 284, 292, 294, 300, 308], "364": 2, "9392": 2, "138": 2, "630": 2, "9500": 2, "923": 2, "9735": 2, "137": 2, "648": [2, 6, 275], "5006": 2, "116": 2, "034": 2, "6326": 2, "112": [2, 118, 284, 292, 294, 298, 299, 300, 305, 307, 308], "423": 2, "5612": 2, "416": 2, "5406": 2, "706": 2, "0598": 2, "151": [2, 83, 84, 86, 87, 88, 305], "9031": 2, "117": 2, "208": 2, "0793": 2, "438": 2, "439": [2, 292], "9253": 2, "887": [2, 277, 292, 294], "1390": 2, "114": 2, "800": [2, 275, 298], "9254": 2, "888": 2, "1388": 2, "9033": 2, "207": [2, 298], "9409": 2, "401": 2, "0197": 2, "635": 2, "1751": 2, "113": [2, 284, 292, 294, 300, 308], "681": 2, "2749": 2, "103": [2, 284, 292], "868": [2, 290, 292], "2141": 2, "935": 2, "5390": 2, "943": 2, "2723": 2, "795": 2, "2760": [2, 284], "837": 2, "2727": 2, "104": [2, 284, 289, 292, 294, 300], "085": 2, "2814": 2, "101": [2, 284], "532": 2, "pop_mat_estim": [2, 284, 289, 294, 308], "010000": 2, "000100": 2, "459155": 2, "260127": 2, "563136": 2, "355314": 2, "386862": 2, "284833": 2, "224547": 2, "206026": 2, "463798": 2, "479941": 2, "486550": 2, "483385": 2, "495219": 2, "493621": 2, "463074": 2, "463102": 2, "495548": 2, "474613": 2, "495482": 2, "474620": 2, "493613": 2, "460720": 2, "468861": 2, "491231": 2, "461770": 2, "461787": 2, "462003": 2, "466555": 2, "427683": 2, "460977": 2, "460855": 2, "omega_iov_1_estim": [2, 294], "omega_iov_2_estim": [2, 294], "000010": [2, 290], "027698": 2, "000001": [2, 53, 55, 56, 60, 63, 65, 66, 294, 298, 300], "017913": 2, "109449": 2, "050657": 2, "110465": 2, "026922": 2, "026926": 2, "026951": 2, "026901": 2, "026857": 2, "026982": 2, "026914": 2, "omega_iov_2_3_estim": 2, "018497": 2, "018498": 2, "063509": 2, "046262": 2, "052580": 2, "017330": 2, "017318": 2, "017368": 2, "017319": 2, "017210": 2, "017372": 2, "017494": 2, "omega_iov_3_estim": [2, 294], "pop_clage_estim": [2, 284], "012352": 2, "012353": 2, "003156": 2, "003153": 2, "036852": 2, "043941": 2, "046134": 2, "011155": 2, "011139": 2, "004026": 2, "011192": 2, "011151": 2, "011028": 2, "011185": 2, "011372": 2, "pop_clsex_estim": [2, 284], "pop_matage_estim": [2, 284], "05079": 2, "016829": 2, "pop_matsex_estim": [2, 284], "pop_vcage_estim": [2, 284], "485722": 2, "002138": 2, "pop_vcsex_estim": [2, 284], "143849": 2, "dbic": [2, 277, 292, 294, 300], "059033": 2, "110": [2, 284, 292, 294, 300, 308], "464112": 2, "329": 2, "468146": 2, "642": [2, 305], "324437": 2, "695": [2, 277], "010496": 2, "712": 2, "614854": 2, "833": 2, "217496": 2, "439014": 2, "972689": 2, "493822": 2, "841931": 2, "134": 2, "736504": 2, "130": [2, 277], "443586": 2, "120": [2, 103, 197, 286, 298, 299], "402996": 2, "683715": 2, "393070": 2, "71": [2, 284, 308], "089100": 2, "886801": 2, "290565": 2, "177358": 2, "205585": 2, "113181": 2, "752785": 2, "summary_error": [2, 284, 289, 292, 294, 300], "summarize_error": [2, 277, 284, 289, 292, 294, 300], "categori": [2, 6, 18, 37, 42, 154, 250, 279, 284, 289, 292, 294, 300, 311], "error_no": [2, 284, 289, 292, 294, 300], "2023": [2, 295], "03": [2, 284, 305, 307, 309], "402": 2, "messag": [2, 258, 277, 279, 284, 289, 292, 294, 300], "NEAR": [2, 294, 300], "ITS": [2, 14, 39, 181, 182, 277, 279, 294, 300], "boundari": [2, 277, 294, 300], "page": [3, 276, 278, 282, 289, 300, 301], "public": [3, 287], "modul": [3, 8, 277, 281, 286, 297, 299, 303, 313], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 286, 291, 295, 297, 299, 311], "relat": [3, 255, 259, 260, 277, 280, 309], "statement": [3, 4, 8, 18, 23, 34, 35, 37, 38, 40, 41, 42, 45, 46, 72, 128, 146, 147, 148, 161, 163, 167, 168, 174, 175, 176, 178, 183, 184, 185, 190, 191, 194, 195, 196, 198, 199, 201, 204, 205, 208, 210, 211, 212, 213, 221, 277, 279, 284, 295, 299, 304], "transform": [3, 18, 152, 174, 176, 179, 196, 210, 211, 212, 213, 277, 279, 291, 301, 307, 312], "manipul": [3, 25, 286, 293, 299, 301, 312], "built": [3, 146, 227, 279, 282, 293], "run": [3, 76, 150, 152, 195, 225, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 259, 263, 275, 276, 277, 285, 291, 293, 295, 296, 298, 303, 304, 307, 309, 310, 313], "packag": [3, 279, 287, 291, 293, 295, 302, 304, 313], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 26, 29, 40, 57, 58, 60, 85, 97, 108, 110, 117, 122, 126, 144, 174, 176, 186, 188, 195, 196, 206, 207, 277, 279, 280, 295, 297, 304, 310], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 280, 282, 293, 295, 297], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 232, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 284, 290, 292, 294, 295, 296, 297, 299, 300, 301, 302, 307, 308, 309], "represent": [4, 264, 286, 291, 301], "togeth": [4, 26, 175, 198, 282, 287, 290, 296, 308, 313], "sympi": [4, 6, 8, 17, 22, 26, 29, 34, 60, 85, 104, 117, 126, 127, 129, 130, 138, 144, 174, 176, 185, 186, 188, 195, 196, 199, 206, 287, 297, 304], "str": [4, 6, 7, 8, 10, 17, 18, 22, 24, 26, 27, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 47, 52, 60, 73, 74, 78, 79, 81, 85, 93, 100, 104, 107, 112, 120, 121, 123, 126, 129, 130, 131, 138, 139, 144, 146, 149, 151, 152, 155, 156, 157, 160, 163, 164, 166, 170, 174, 176, 178, 180, 181, 185, 186, 188, 192, 193, 195, 196, 199, 200, 206, 209, 210, 211, 212, 213, 216, 217, 222, 223, 225, 226, 227, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 274, 277], "expr": [4, 9, 26, 29, 34, 38, 117, 144, 178, 186, 206, 207], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 39, 153, 157, 181, 182, 210, 239, 242, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 276, 277, 279, 284, 287, 295, 297, 299, 304, 311, 313], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 26, 29, 280, 295, 304], "hand": [4, 8, 60], "side": [4, 8, 60, 179], "pop_cl": [4, 299], "eta_cl": [4, 40, 42, 299, 301], "rhs_symbol": [4, 8, 28], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 256, 258, 262, 264], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 256, 258], "replac": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 30, 31, 50, 170, 180, 197, 208, 262, 264, 265, 277, 279, 286, 287, 299, 301], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 39, 181, 225, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 260, 261, 262, 264, 277], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29, 297], "substitut": [4, 5, 7, 8, 16, 17, 22, 26, 28, 29, 295, 299], "dict": [4, 5, 6, 10, 16, 17, 22, 25, 26, 29, 49, 62, 83, 84, 86, 87, 88, 92, 94, 97, 109, 110, 152, 169, 187, 189, 197, 202, 218, 255, 256, 259, 260, 261, 263, 264, 270, 286, 297], "old": [4, 29, 169, 277, 307], "new": [4, 6, 9, 10, 14, 17, 22, 24, 25, 26, 29, 30, 35, 40, 42, 46, 47, 73, 77, 78, 89, 92, 93, 94, 169, 170, 174, 176, 185, 187, 188, 192, 195, 196, 217, 218, 220, 265, 266, 279, 280, 282, 286, 295, 299, 300, 303, 307, 308, 311], "pair": [4, 5, 8, 16, 17, 22, 26, 29, 37, 70, 197, 251], "return": [4, 6, 8, 9, 10, 15, 18, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 264, 266, 269, 270, 277, 295, 299], "updat": [4, 9, 10, 18, 25, 29, 186, 206, 219, 220, 222, 277, 279, 282, 293, 295, 299, 300, 301, 304, 308, 312, 313], "b": [4, 295, 300], "to_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 256, 258], "amount": [5, 6, 7, 8, 16, 38, 109, 277, 286, 297], "admid": [5, 6, 7, 8, 16, 29, 33, 45, 72, 95, 128, 146, 167, 175, 183, 184, 190, 191, 194, 198, 201, 204, 205, 208, 297, 299], "dose": [5, 6, 7, 8, 9, 16, 33, 35, 43, 89, 95, 97, 98, 102, 103, 109, 113, 141, 158, 165, 197, 199, 277, 286], "int": [5, 8, 16, 29, 34, 39, 44, 49, 60, 63, 71, 77, 102, 104, 114, 115, 129, 130, 138, 162, 166, 170, 171, 172, 173, 174, 176, 181, 182, 185, 194, 195, 196, 199, 201, 240, 241, 245, 247, 250], "administr": [5, 6, 16, 95, 239, 248], "amt": [5, 7, 8, 10, 16, 29, 34, 45, 72, 81, 82, 96, 103, 109, 128, 146, 147, 148, 153, 154, 167, 175, 183, 184, 190, 191, 194, 197, 198, 201, 204, 205, 208, 286, 297, 299, 301], "dictionari": [5, 10, 14, 16, 17, 22, 25, 26, 27, 30, 83, 84, 86, 87, 88, 97, 110, 170, 187, 189, 202, 255, 256, 259, 260, 261, 263, 264, 270, 297], "unknown": [6, 144, 286], "unit": [6, 18, 126], "ratio": [6, 241, 247, 277, 279, 286, 308], "datatyp": [6, 18, 155], "float64": [6, 10, 59, 66, 67, 70, 85, 86, 87, 88, 103, 118, 227, 286, 297, 298, 299], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 262, 264, 277, 299], "colum": 6, "measur": [6, 280, 286, 295], "bool": [6, 18, 24, 27, 31, 34, 35, 37, 47, 59, 69, 71, 78, 81, 89, 109, 113, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 170, 172, 185, 195, 196, 201, 219, 220, 222, 223, 238, 239, 253, 254, 256, 269], "discret": [6, 286, 294], "union": [6, 104, 129, 130, 138, 152, 174, 176, 185, 186, 195, 196, 199, 206], "tupl": [6, 8, 26, 149, 170, 262, 270], "label": [6, 277], "bar": [6, 290], "panda": [6, 10, 277, 286, 287, 304], "dtype": [6, 10, 59, 62, 66, 67, 70, 71, 85, 86, 87, 88, 102, 103, 116, 118, 227, 286, 298, 299], "nomin": [6, 286], "ordin": [6, 286], "rang": [6, 27, 79, 311], "na": 6, "int8": 6, "sign": [6, 212, 295], "bit": 6, "128": 6, "int16": 6, "16": [6, 61, 84, 96, 101, 116, 196, 213, 230, 275, 276, 284, 292, 294, 295, 296, 298, 299, 305, 307, 308, 309, 310], "768": 6, "767": 6, "int32": [6, 10, 286], "483": 6, "647": [6, 275, 292], "int64": [6, 116, 299], "223": [6, 285], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 305], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 85, 102, 197, 286, 298, 299], "073": 6, "709": 6, "551": 6, "615": [6, 305], "float16": 6, "binari": [6, 295], "float": [6, 24, 34, 40, 46, 47, 51, 52, 70, 71, 74, 152, 166, 173, 188, 195, 199, 210, 228, 229, 230, 232, 238, 239, 241, 243, 244, 246, 247, 277], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 82, 214, 277, 279, 297], "tran": [6, 82, 214, 277, 279, 297], "date": [6, 79, 82, 214, 277, 279, 295, 313], "common": [6, 37, 63, 270, 295, 312], "birth": 6, "human": [6, 27, 304], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 286, 304], "concentr": [6, 99, 286, 304], "substanc": 6, "blood": 6, "subject": [6, 14, 96, 106, 252, 286, 295], "uniqu": [6, 31, 50, 78, 170, 255, 266, 277, 279, 299, 311], "pd": [6, 15, 38, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 76, 79, 83, 84, 85, 86, 87, 88, 95, 96, 98, 99, 101, 102, 103, 105, 111, 116, 118, 120, 149, 150, 151, 152, 155, 170, 171, 172, 173, 178, 219, 220, 228, 229, 230, 232, 250, 251, 252, 253, 258, 277, 286], "interv": [6, 286, 287], "ration": 6, "max": [6, 37, 38, 178, 190, 191, 275, 299], "datafram": [6, 15, 18, 25, 27, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 76, 79, 83, 84, 86, 87, 88, 96, 99, 101, 149, 150, 152, 155, 170, 171, 172, 173, 219, 228, 229, 230, 232, 250, 251, 252, 253, 258, 277, 286, 304], "idv": [6, 10, 199, 286, 307], "independ": [6, 8, 286, 295, 297, 299, 302, 307, 311], "dv": [6, 10, 29, 72, 81, 82, 96, 104, 118, 128, 129, 130, 138, 146, 150, 153, 154, 157, 174, 176, 185, 188, 190, 191, 195, 196, 197, 199, 210, 247, 277, 286, 297, 299, 301, 310], "dvid": [6, 18, 44, 104, 129, 130, 138, 174, 176, 180, 185, 195, 196, 199, 297, 305, 307, 308], "infus": [6, 141, 198, 204, 277, 299], "addit": [6, 37, 40, 49, 78, 89, 129, 130, 138, 140, 174, 176, 196, 210, 277, 279, 284, 286, 289, 295, 307, 308, 311], "interdos": 6, "ss": 6, "steadi": [6, 277], "state": [6, 25, 37, 277, 295, 309], "event": [6, 105, 197, 214, 277, 280, 295], "mdv": [6, 111, 277], "miss": [6, 96, 101, 277], "yet": [6, 311], "exactli": 6, "blqdv": [6, 277], "unkown": 6, "hasn": 6, "custom": [6, 37, 40, 42, 185, 279, 295, 304], "physic": [6, 126, 280, 286, 295], "recogn": [6, 193, 280, 295, 301], "without": [6, 9, 57, 58, 83, 84, 86, 87, 88, 108, 117, 122, 170, 257, 275, 277, 279, 282, 287, 295, 297], "static": [6, 10, 18, 262], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 26, 27, 29, 32, 73, 128, 148, 201, 277, 279, 311], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 24, 26, 69, 70, 71, 104, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 277, 297, 299, 301, 311, 313], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 277, 279, 304], "properti": [6, 14, 17, 22, 24, 25, 30, 295, 297], "lag_tim": [7, 9, 277], "bioavail": [7, 9, 35, 97, 158, 277], "compartment": [7, 8, 32, 277, 279, 297], "system": [7, 8, 9, 14, 23, 29, 32, 57, 58, 60, 80, 83, 84, 86, 87, 88, 108, 109, 117, 122, 133, 134, 137, 141, 186, 206, 208, 259, 277, 279, 281, 282, 293, 295, 297, 301], "lag": [7, 9, 43, 110, 165, 277], "enter": [7, 295], "fraction": [7, 173, 275, 290], "bolu": [7, 8, 29, 45, 72, 128, 146, 167, 175, 183, 184, 190, 191, 194, 201, 205, 208, 277, 279, 297, 299], "comp": [7, 8, 277], "a_centr": [7, 8, 29, 38, 72, 80, 109, 128, 146, 178, 186, 190, 191, 196, 205, 297, 299], "depot": [7, 8, 9, 183, 198, 201, 277, 299, 311], "alag": [7, 277], "a_depot": [7, 8], "builder": [8, 9, 264, 265], "graph": [8, 264, 279, 282], "odesystem": [8, 29, 277, 297], "od": [8, 14, 23, 29, 32, 46, 57, 58, 60, 83, 84, 86, 87, 88, 108, 109, 117, 122, 133, 134, 137, 141, 186, 193, 206, 208, 277, 279], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 201, 311], "k21": [8, 311], "vector": [8, 17, 127, 171, 172, 173, 276, 290, 297], "load_example_model": [8, 10, 15, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 230, 232, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 277, 291, 298, 299], "pprint": [8, 117], "ode_system": [8, 29, 38, 45, 167, 175, 183, 184, 190, 191, 194, 198, 201, 204, 205, 208, 277, 297, 299], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 45, 264, 295], "compartment_nam": 8, "compartmental_matrix": [8, 297], "matrix": [8, 14, 17, 26, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 70, 127, 171, 172, 173, 206, 276, 277, 279, 290, 297, 299], "set_first_order_absorpt": [8, 46, 175, 198, 204, 277, 299], "dosing_compart": 8, "receiv": [8, 295], "equat": [8, 60, 80, 297, 299], "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 9, 71, 127, 141, 142, 148, 186, 198, 204, 205, 206, 277, 294, 299, 300, 302, 311], "set_zero_order_absorpt": [8, 175, 183, 198, 277, 299, 313], "atom": 8, "http": [8, 276, 286, 287, 290, 291, 295, 308], "doc": [8, 282], "org": [8, 276, 278, 286, 290, 295, 308], "latest": [8, 277, 287, 291], "core": [8, 291, 297], "html": [8, 224, 287, 295], "basic": [8, 27, 74, 75, 277, 286, 295, 301, 311, 312], "find_compart": [8, 9, 38], "its": [8, 24, 29, 71, 79, 148, 251, 277, 279, 286, 287, 291, 293, 295, 297, 299, 313], "found": [8, 25, 250, 265, 275, 276, 277, 282, 285, 288, 290, 291, 292, 294, 295, 297, 298, 300, 307, 308, 311, 312, 313], "find_depot": 8, "out": [8, 26, 69, 220, 277, 295, 297, 303, 313], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 24, 26, 209, 214, 226, 245, 250, 253, 255, 277, 279, 287, 290, 295, 311], "distinguish": [8, 295], "get_bidirect": 8, "bidirect": 8, "interest": [8, 60, 280, 284, 295, 304], "get_compartment_inflow": 8, "go": [8, 129, 130, 138, 245, 253, 277, 286, 295, 299], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 222, 223, 255, 259, 260, 279], "ka": [8, 9, 41, 183, 198, 277, 294, 299], "get_n_connect": 8, "connect": [8, 18, 195, 255, 257, 265, 277, 279, 286, 295, 304, 311, 312], "compartmentalsystem": [9, 277], "newli": [9, 26, 294], "move_dos": 9, "move": [9, 220, 277], "anoth": [9, 18, 29, 266, 299], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 158], "set_dos": 9, "set_input": 9, "set_lag_tim": [9, 277], "force_absolute_path": 10, "sequenc": [10, 15, 25, 26, 29, 76], "metadata": [10, 255, 256, 259, 260, 261, 263, 277], "index": [10, 18, 25, 26, 27, 29, 39, 49, 60, 63, 70, 71, 103, 118, 162, 181, 182, 250, 253, 276, 277, 290, 291, 297, 299, 309, 313], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 79], "idv_column": 10, "apgr": [10, 29, 34, 37, 72, 81, 82, 96, 101, 113, 128, 131, 146, 147, 148, 153, 154, 197, 216, 286, 290, 297, 299, 301, 307], "fa1": [10, 81, 82, 96, 153, 154, 197, 286, 299], "fa2": [10, 81, 82, 96, 153, 154, 197, 286, 299], "example_model": 10, "dta": [10, 153, 286, 299, 301], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 277, 295, 299, 313], "read_json": 10, "read": [10, 155, 156, 157, 233, 234, 239, 254, 255, 256, 259, 260, 261, 263, 277, 281, 286, 291, 295, 298, 303, 304, 306, 311, 312], "set_column": 10, "col": 10, "exist": [10, 29, 37, 49, 50, 75, 78, 100, 102, 255, 256, 257, 277, 279, 281, 286, 294, 311], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 27, 286], "recover": 12, "issu": [12, 21, 277, 282, 293, 313], "hashabl": 13, "level": [13, 17, 22, 26, 30, 31, 107, 139, 277, 279, 286, 293, 299, 304, 309, 311, 312], "variabilitylevel": 13, "parameter_nam": [13, 26, 93, 215, 217, 277, 301], "definit": [13, 14, 18, 29, 61, 172, 173, 230, 277, 279, 284, 290, 295, 297, 311], "varianc": [13, 17, 22, 26, 59, 60, 63, 185, 220, 292, 297, 311], "abstract": [13, 23, 28, 259, 263, 276, 278, 287, 293, 297], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 26], "name1": [13, 17, 22, 151], "name2": [13, 17, 22, 151], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 297, 299], "cov": [14, 15, 26, 36, 37, 39, 53, 60, 61, 63, 65, 66, 159, 172, 181, 182, 242, 276, 277, 282, 289, 290, 297, 299], "evalu": [14, 39, 83, 84, 85, 86, 87, 88, 181, 182, 242, 253, 275, 277, 293, 297, 299, 304, 307, 310], "maximum_evalu": [14, 289, 297, 299], "laplac": [14, 39, 181, 182, 277, 279, 289, 297, 299], "isampl": [14, 39, 49, 181, 277, 289, 297, 299], "niter": [14, 39, 49, 181, 277, 289, 297, 299], "auto": [14, 15, 277, 289, 297, 299], "keep_every_nth_it": [14, 15, 277, 289, 297, 299], "residu": [14, 26, 88, 124, 229, 230, 251, 277, 308, 310, 311], "solver": [14, 193, 242, 277, 279, 311], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 39, 49, 181, 297, 299, 311], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 37, 40, 73, 79, 260, 261, 279, 281, 282, 284, 287, 295, 297, 299, 303], "uncertainti": [14, 60, 61, 63, 171, 172, 173, 277, 279, 290, 298], "sandwich": [14, 15, 36, 181, 182, 297], "cross": [14, 295], "product": [14, 280, 289, 295], "gradient": [14, 57, 58, 83, 84, 277], "fim": 14, "epsilon": [14, 26, 57, 58, 83, 84, 154, 185, 195, 203, 210, 221, 277, 279, 287, 299], "calcul": [14, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 85, 99, 232, 275, 276, 277, 290, 292, 293, 294, 300], "deriv": [14, 126, 277, 282, 284, 299], "eta": [14, 26, 29, 40, 42, 57, 58, 59, 61, 76, 83, 84, 86, 148, 152, 153, 154, 157, 163, 164, 185, 209, 211, 212, 213, 277, 279, 287, 290, 292, 294, 297, 301, 307, 311], "preserv": [14, 26, 295], "comput": [14, 282, 283, 284, 295], "sampl": [14, 26, 77, 170, 171, 172, 173, 290], "similar": [14, 275, 289, 295, 300, 308], "em": 14, "result": [14, 18, 26, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 76, 83, 84, 85, 86, 87, 88, 171, 172, 173, 219, 220, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 263, 266, 269, 277, 280, 282, 293, 295, 301, 303, 304, 306, 312], "everi": [14, 286, 295], "nth": 14, "iter": [14, 15, 29, 60, 149, 170, 172, 247, 277, 299, 305, 308], "laplacian": 14, "solv": [14, 277], "advan": [14, 193, 277, 299], "cvode": [14, 193, 279], "advan14": [14, 193, 279], "dgear": [14, 193, 279], "advan8": [14, 193, 279], "dverk": [14, 193, 279], "advan6": [14, 193, 279], "ida": [14, 193, 279], "advan15": [14, 193, 279], "lsoda": [14, 193, 279, 289], "advan13": [14, 193, 279, 299], "lsodi": [14, 193, 279, 289], "advan9": [14, 193, 279], "absolut": [14, 70, 277, 295], "toler": 14, "supported_cov": 14, "frozenset": 14, "cpg": 14, "ofim": 14, "supported_method": [14, 289], "bay": [14, 181, 182, 279], "imp": [14, 39, 181, 182, 242, 277, 279, 289, 299], "impmap": [14, 39, 181, 182, 277, 279], "saem": [14, 39, 181, 182, 242, 277, 279], "supported_solv": [14, 289], "to_datafram": [15, 25, 258], "overview": [15, 258, 275, 279, 288, 297, 309], "estimation_step": [15, 18, 36, 39, 49, 159, 162, 181, 182, 277, 297, 299], "doctest": 15, "ellipsi": 15, "durat": [16, 198, 204, 299], "mutual": [16, 294, 311], "exclus": [16, 295, 311], "d1": [16, 198, 204, 277, 299], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 26, 42, 76, 209, 290, 294, 299], "omega_cl": [17, 22, 26], "omega_v": [17, 26], "corr_cl_v": [17, 26], "omega_cl_v": [17, 26], "dist": [17, 22, 26, 277, 282, 297], "iiv_cl": [17, 22, 26, 299, 301], "iiv_v": [17, 26], "itself": [17, 22, 295], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 26], "random_vari": [18, 76, 209, 297, 299, 313], "dependent_vari": [18, 277, 297], "y": [18, 25, 29, 72, 104, 126, 128, 146, 153, 154, 157, 161, 174, 176, 185, 195, 196, 199, 210, 221, 297, 299, 301], "observation_transform": [18, 277], "estimationstep": [18, 36, 39, 159, 181, 182, 277, 289, 297], "modelfit_result": [18, 230, 253, 277], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 282, 297, 301, 304], "map": [18, 32, 286], "discript": 18, "extens": [18, 255, 257, 286, 295, 297], "model_cod": [18, 277], "modelfit": [18, 227, 245, 253, 255, 259, 260, 275, 277, 279, 312], "parent": [18, 251, 252, 266, 289], "randomvari": [18, 277, 297], "likelihood": [18, 51, 52, 241, 247, 279, 308], "2ll": [18, 51, 52, 277], "log": [18, 37, 38, 40, 52, 148, 174, 176, 178, 179, 196, 277, 286, 290], "record": [18, 83, 84, 85, 86, 87, 88, 89, 149, 166, 188, 277, 282, 301], "would": [18, 31, 148, 275, 284, 290, 295, 299, 301, 304], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 277, 293, 301, 303, 304, 311], "parse_model_from_str": 18, "update_sourc": [18, 277, 301], "g": [18, 26, 72, 78, 164, 246, 277, 282, 286, 289, 290, 292, 294, 300, 304, 308, 311], "dummypath": [18, 299], "write_fil": 18, "forc": [18, 26, 78, 172, 173, 219, 222, 223, 277, 279, 294, 295], "write": [18, 222, 223, 254, 277, 282, 284, 295, 303, 312], "extern": [18, 233, 282, 286, 287, 291, 303, 304], "msg": 20, "syntax": [20, 311], "normal": [22, 26, 31, 42, 62, 68, 148, 290, 294, 295], "init": [24, 25, 37, 47, 94, 187, 218, 220, 279, 290, 297], "inf": [24, 299], "param": [24, 279], "tvcl": [24, 29, 34, 40, 42, 72, 85, 128, 146, 147, 148, 153, 154, 163, 275, 290, 297, 299, 301], "005": 24, "boolean": [24, 25, 89, 93, 94, 170, 179, 185, 217, 218, 228, 229, 230, 286], "constrain": [24, 287, 297], "unfix": [24, 92, 93, 94, 187, 215, 217, 218, 277], "back": [24, 68, 277], "previou": [24, 26, 29, 43, 76, 102, 128, 183, 198, 201, 204, 239, 252, 269, 277, 279, 295, 300], "less": 24, "greater": 24, "altern": [24, 212, 282, 295], "constructor": [24, 277], "collect": [25, 26, 290, 295, 311], "usual": [25, 282], "wai": [25, 132, 135, 136, 142, 210, 282, 286, 289, 295, 297, 311, 313], "displai": [25, 80, 174, 290, 295], "summar": [25, 250, 252, 253, 290, 296], "par1": 25, "par2": 25, "pset": 25, "fixed": [25, 92], "nonfix": 25, "set_fix": 25, "set_initial_estim": [25, 277, 299], "eta_level": 26, "epsilon_level": 26, "act": [26, 180], "while": [26, 282, 299, 311, 313], "variabilityhierarchi": 26, "contin": 26, "hierarchi": [26, 30], "rv": [26, 76, 123, 168, 209, 297, 313], "normaldistribut": [26, 297], "covariance_matrix": [26, 53, 60, 63, 65, 66, 172, 275, 277, 298], "nrv": 26, "variance_paramet": 26, "rv1": 26, "rv2": 26, "get_rvs_with_same_dist": 26, "join": [26, 209, 277, 280], "ind": 26, "fill": 26, "name_templ": 26, "param_nam": 26, "taken": [26, 89, 96, 101, 214, 255, 286, 290], "remain": [26, 280, 295], "templat": [26, 37, 40, 75, 281], "overrid": [26, 277, 281, 311], "dist1": 26, "dist2": 26, "_": [26, 252, 276, 290], "unjoin": 26, "nearest_valid_paramet": 26, "parameter_valu": 26, "small": 26, "parameters_sdcorr": 26, "sd": [26, 59, 299, 307, 310], "corr": [26, 55, 64, 307], "assum": [26, 44, 255, 277, 290, 295, 301], "var": [26, 61, 290], "replace_with_sympy_rv": 26, "stat": [26, 29, 311], "std": [26, 299], "rng": [26, 60, 63, 77, 171, 172, 173], "jointnormaldistribut": [26, 297], "validate_paramet": 26, "seri": [26, 55, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 85, 86, 87, 88, 95, 98, 102, 103, 105, 111, 116, 118, 151, 152, 172, 173, 174, 212, 220, 277, 298], "current": [26, 39, 40, 57, 58, 72, 73, 83, 84, 86, 87, 88, 108, 117, 122, 141, 146, 175, 181, 182, 198, 208, 210, 214, 227, 232, 241, 245, 248, 259, 266, 276, 277, 279, 282, 284, 285, 290, 291, 293, 294, 295, 296, 297, 300, 303, 304, 305, 307, 308, 309, 310, 311], "matric": [26, 61, 173, 277, 287, 298], "semidefinit": [26, 277, 287], "use_cach": 26, "symengin": [26, 287, 304], "cach": 26, "__version__": 27, "99": [27, 47, 125, 153, 220, 275, 284, 297, 299], "get_and_reset_index": 27, "attr": 27, "wrapper": [27, 277, 282, 287, 291, 313], "reset": [27, 214, 277], "facilit": 27, "multiindex": [27, 277], "to_csv": 27, "save": [27, 254, 264, 277], "readabl": [27, 257, 259, 286, 295, 304], "print": [27, 69, 153, 154, 231, 277, 299], "lzma": [27, 254], "serial": [27, 277, 286, 304], "compress": [27, 254], "unless": [27, 29, 295], "signific": [29, 71, 243, 244, 246, 277, 295, 309], "after_od": [29, 196], "s\u2081": [29, 34, 72, 128, 146, 147, 148, 154, 196, 297], "eps\u2081": [29, 72, 117, 128, 146, 154, 161, 174, 185, 195, 199, 210, 221, 297], "ipr": [29, 72, 86, 128, 146, 153, 154, 195, 196, 277, 297, 298, 299, 310], "ir": [29, 72, 128, 146, 153, 154, 196, 297, 299], "iwr": [29, 72, 128, 146, 153, 154, 196, 297, 299], "before_od": [29, 34, 37, 147, 148, 211, 212, 213], "btime": [29, 34, 72, 128, 146, 147, 148, 153, 154, 297, 299], "tad": [29, 34, 48, 72, 128, 146, 147, 148, 153, 154, 277, 297, 299, 307], "ptvcl": [29, 34, 37, 47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 92, 93, 94, 125, 128, 146, 147, 148, 153, 154, 172, 173, 187, 189, 202, 207, 211, 212, 213, 215, 217, 218, 220, 227, 297, 298, 299], "tvv": [29, 34, 72, 128, 146, 147, 148, 153, 154, 163, 275, 290, 297, 299, 301], "ptvv": [29, 34, 47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 125, 128, 146, 147, 148, 153, 154, 172, 173, 217, 218, 220, 227, 297, 298, 299], "theta\u2083": [29, 34, 72, 128, 146, 147, 148, 154, 297], "eta\u2081": [29, 34, 72, 76, 117, 128, 146, 147, 148, 154, 209, 297], "\u212f": [29, 34, 46, 72, 128, 146, 147, 148, 185, 297, 299], "eta\u2082": [29, 34, 72, 76, 117, 128, 146, 147, 148, 154, 209, 297], "whole": [29, 279, 286, 295, 311], "s1": [29, 139, 153, 299, 301], "symbol_or_stat": 29, "direct_depend": 29, "direct": [29, 264, 284, 295, 309], "find_assign": [29, 40, 41, 42, 46, 161, 163, 174, 176, 178, 185, 195, 199, 210, 221], "find_assignment_index": 29, "full_express": [29, 37, 211, 212, 213], "expand": [29, 89], "full": [29, 76, 108, 117, 122, 200, 276, 277, 279, 281, 290, 294, 295, 300, 307], "eta_1": [29, 37, 57, 59, 61, 76, 108, 123, 148, 171, 209, 211, 212, 213, 290, 297, 298, 299], "reassign": 29, "sypmpi": 29, "remove_symbol_definit": 29, "elsewher": 29, "longer": [29, 277], "make": [29, 72, 147, 161, 169, 170, 241, 277, 287, 294, 295, 297, 300, 311, 313], "sure": [29, 169, 277, 295, 300, 313], "func": [32, 262], "presenc": 33, "correctli": [33, 277], "get_admid": 33, "get_cmt": [33, 277, 299], "p": [34, 232, 241, 247, 275, 276, 277, 279, 284, 290, 299, 308, 309], "allometri": [34, 238, 239, 277, 311], "allo_cl": 34, "allo_v": 34, "add_paramet": [35, 277], "remove_bioavail": [35, 277], "set_estimation_step": [36, 39, 49, 159, 162, 182, 277, 299, 313], "add_estimation_step": [36, 49, 159, 162, 181, 182, 277, 299], "remove_estimation_step": [36, 39, 49, 159, 181, 182, 299], "append_estimation_step_opt": [36, 39, 159, 162, 181, 182, 277, 299], "remove_covariance_step": [36, 39, 49, 162, 181, 182, 277, 299], "set_evaluation_step": [36, 39, 49, 159, 162, 181, 299], "allow_nest": [37, 277], "linear": [37, 38, 120, 133, 134, 143, 178, 275, 276, 277, 287, 297, 299, 304, 306], "lin": 37, "coveff": [37, 78], "median": [37, 60, 63, 275, 277, 299, 304], "001": [37, 71, 220, 299, 309], "equal": [37, 42, 170, 185, 279, 282], "minimum": [37, 287], "000": [37, 298], "frac": [37, 38, 174, 176, 178, 276, 297, 299, 310], "min": [37, 174, 176, 275, 299], "piecewis": [37, 277], "hockei": 37, "stick": 37, "piece_lin": 37, "theta1": [37, 299], "theta2": [37, 299], "pow": [37, 299], "mai": [37, 292, 294, 295, 299, 300, 311], "abbrevi": [37, 40, 277, 279, 282, 301], "multipli": [37, 40, 185, 275, 279, 299], "alreadi": [37, 75, 180, 186, 206, 277, 279, 282, 294, 295], "pop_clapgr": 37, "implement": [38, 178, 255, 257, 259, 260, 295, 297, 304, 311], "baselin": [38, 96, 101, 145, 178, 277, 290], "e_0": [38, 178], "slope": [38, 120, 178], "cdot": [38, 45, 167, 178, 290, 297, 299], "emax": [38, 178], "e_": [38, 178], "ec_": [38, 178], "50": [38, 61, 96, 101, 116, 178, 230, 275, 276, 296, 298, 299, 300, 305, 307, 310], "biggl": [38, 178], "lbrace": [38, 178], "quad": [38, 178], "leq": [38, 178, 290], "atop": [38, 178], "els": [38, 69, 178, 277, 299], "sigmoid": [38, 178], "c_0": [38, 178], "loglin": [38, 178], "a_effect": 38, "ke0": 38, "idx": [39, 49, 162, 181, 182, 313], "argument": [39, 83, 84, 86, 87, 88, 181, 225, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 262, 277, 279, 311, 313], "pass": [39, 77, 181, 225, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 266, 295], "opt": [39, 49, 181, 281], "1000": [39, 49, 85, 181, 290], "len": [39, 49, 162, 166], "add_covariance_step": [39, 49, 159, 162, 181, 182, 277, 299], "initial_estim": [40, 46], "09": [40, 46, 176, 185, 196, 284, 292, 299, 300, 301, 305], "eta_nam": [40, 42, 185, 279], "prop": [40, 299], "logit": [40, 277], "rescal": 40, "re_log": 40, "user": [40, 100, 277, 286, 287, 292, 294, 295, 297, 298, 299, 300, 301], "remove_iiv": [40, 42, 46, 164, 277, 299, 301], "add_pk_iiv": [40, 42, 163, 164, 277, 299, 300], "add_iov": [40, 46, 163, 164, 277, 299], "remove_iov": [40, 42, 46, 163, 277, 299], "pop_ka": [41, 47], "occ": [42, 244, 279, 284, 294], "disjoint": [42, 294], "accept": [42, 114, 115, 116, 279, 295], "explicit": [42, 277, 279, 280, 294, 311], "copi": [42, 119, 124, 125, 277, 292, 294, 295, 299, 311], "add_iiv": [42, 46, 163, 164, 277, 299, 301], "set_transit_compart": [43, 165, 277, 299], "remove_lag_tim": [43, 277, 299], "drug_dvid": 44, "metabolit": 44, "unidirect": 44, "parameter": 45, "qpn": 45, "vpn": 45, "volumn": 45, "mathsf": [45, 167], "qp1": [45, 167, 277, 299], "vp1": [45, 167, 299], "qp2": [45, 167, 277], "vp2": [45, 167], "peripheral1": [45, 167, 194, 299], "v1": [45, 167, 194, 299], "v2": [45, 167, 194, 299], "set_peripheral_compart": [45, 167, 277, 299], "remove_peripheral_compart": [45, 194, 277, 299], "Will": [46, 255, 256, 257], "pop_mat": [46, 299, 301], "eta_mat": [46, 299], "004693": [47, 62, 125, 290, 297], "1000000": [47, 92, 93, 94, 125, 187, 189, 215, 218, 297], "009160": [47, 125, 297], "theta_3": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 125, 172, 173, 217, 218, 220, 227, 297, 298, 299], "100000": [47, 125, 289, 297, 299], "ivcl": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 76, 119, 153, 154, 172, 173, 209, 218, 220, 227, 275, 290, 297, 298, 299, 301], "030963": [47, 119, 290, 297], "ivv": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 76, 119, 153, 154, 172, 173, 209, 218, 220, 227, 275, 290, 297, 298, 299], "031128": [47, 119, 153, 220, 290, 297, 299, 301], "sigma_1_1": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 71, 124, 172, 173, 218, 220, 227, 297, 298, 299], "013241": [47, 124, 153, 220, 227, 290, 297, 298, 299], "append": [49, 277], "increas": [50, 282], "until": [50, 253, 295, 313], "do": [50, 172, 275, 277, 279, 290, 295, 301, 308, 313], "noth": [50, 166, 295], "next": [50, 277, 295, 299, 300, 301, 308], "run2": [50, 192, 299], "run3": [50, 299], "n_estimated_paramet": [51, 52], "fit": [51, 52, 152, 210, 231, 245, 251, 253, 259, 277, 295, 297, 299, 308, 312, 313], "variat": 52, "n_random_paramet": 52, "n_individu": 52, "n_fixed_paramet": 52, "n_observ": 52, "n_individ": 52, "n_estimated_iiv_omega_paramet": 52, "load_example_modelfit_result": [52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 83, 84, 85, 86, 87, 88, 171, 172, 173, 219, 220, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 277], "611": 52, "7071686183284": 52, "616": [52, 277, 298], "536606983396": 52, "610": 52, "7412809453149": 52, "594": 52, "431131169692": 52, "411510e": [53, 56, 65, 66, 298], "08": [53, 55, 56, 65, 66, 284, 298], "010000e": [53, 56, 65, 66, 298], "000002": [53, 55, 56, 65, 66, 298], "538630e": [53, 55, 56, 65, 66, 298], "07": [53, 54, 55, 56, 64, 65, 66, 67, 275, 284, 292, 294, 298, 307, 309], "178090e": [53, 56, 65, 66, 298], "233530e": [53, 56, 65, 66, 298], "04": [53, 54, 55, 56, 64, 65, 66, 67, 275, 284, 294, 298, 307, 309], "000804": [53, 55, 56, 65, 66, 284, 298], "000050": [53, 55, 56, 65, 66, 275, 298], "171840e": [53, 56, 65, 66, 298], "461760e": [53, 56, 65, 66, 298], "665010e": [53, 56, 65, 66, 298], "040250e": [53, 56, 65, 66, 298], "007016": [53, 55, 56, 65, 66, 298], "000108": [53, 55, 56, 65, 66, 298], "944800e": [53, 56, 65, 66, 298], "932950e": [53, 56, 65, 66, 298], "093430e": [53, 56, 65, 66, 298], "981380e": [53, 55, 56, 65, 66, 298], "000180": [53, 55, 56, 65, 66, 298], "856650e": [53, 56, 65, 66, 298], "867230e": [53, 56, 65, 66, 298], "000039": [53, 55, 56, 65, 66, 298], "000019": [53, 55, 56, 65, 66, 298], "589820e": [53, 55, 56, 65, 66, 298], "685650e": [53, 56, 65, 66, 298], "000029": [53, 55, 56, 65, 66, 298], "000005": [53, 55, 56, 65, 66, 298], "195640e": [53, 56, 65, 66, 298], "007099": [53, 54, 55, 64, 298], "094640": [53, 54, 55, 64, 298], "388059": [53, 54, 55, 64, 70], "097981": [53, 54, 55, 64, 298], "170820": [53, 54, 55, 64, 298], "356899": [53, 54, 55, 64, 70], "138062": [53, 54, 55, 64, 298], "356662": [53, 54, 55, 64, 70, 298], "238441": [53, 54, 55, 64], "096515": [53, 54, 55, 64], "062991": [53, 54, 55, 64, 298], "153616": [53, 54, 55, 64, 298], "185111": [53, 54, 55, 64, 298], "159170": [53, 54, 55, 64, 298], "027495": [53, 54, 55, 64, 298], "calculate_se_from_cov": [53, 54, 55, 56, 64, 65, 67, 277], "calculate_se_from_prec": [53, 54, 55, 56, 64, 65, 66], "precis": [53, 54, 55, 56, 64, 65, 66, 67, 277, 295], "calculate_cov_from_prec": [53, 54, 55, 64, 65, 66, 67], "calculate_cov_from_corrs": [53, 54, 56, 64, 65, 66, 67, 277], "calculate_prec_from_cov": [53, 54, 55, 56, 64, 66, 67], "calculate_prec_from_corrs": [53, 54, 55, 56, 65, 66, 67], "calculate_corr_from_prec": [53, 55, 56, 64, 65, 66, 67], "precision_matrix": [54, 56, 67, 298], "prec": [54, 56, 67], "995567e": [54, 56, 65, 67], "22660": [54, 56, 64, 65, 67, 298], "028196": [54, 56, 65, 67], "16057": [54, 56, 64, 65, 67, 298], "855248": [54, 56, 65, 67], "203511": [54, 56, 64, 65, 67, 298], "614428": [54, 56, 65, 67], "39474": [54, 56, 64, 65, 67, 298], "250514": [54, 56, 65, 67], "820118": [54, 56, 65, 67], "299536": [54, 56, 65, 67], "266003e": [54, 56, 65, 67], "2129": [54, 56, 64, 65, 67, 298], "904642": [54, 56, 65, 67], "260": [54, 56, 64, 65, 67, 298], "176234": [54, 56, 65, 67], "375": [54, 56, 64, 65, 67, 298], "266233": [54, 56, 65, 67], "2800": [54, 56, 64, 65, 67, 298], "816246": [54, 56, 65, 67], "7718": [54, 56, 64, 65, 67, 298], "769557": [54, 56, 65, 67], "605786e": [54, 56, 65, 67], "187": [54, 56, 64, 65, 67, 298], "038903": [54, 56, 65, 67], "177": [54, 56, 64, 65, 67, 277, 298, 309], "207683": [54, 56, 65, 67], "205": [54, 56, 64, 65, 67, 298], "808480": [54, 56, 65, 67], "2225": [54, 56, 64, 65, 67, 298], "150449": [54, 56, 65, 67], "035116e": [54, 56, 65, 67], "7527": [54, 56, 64, 65, 67, 298], "530027": [54, 56, 65, 67], "2462": [54, 56, 64, 65, 67, 298], "974821": [54, 56, 65, 67], "9977": [54, 56, 64, 65, 67, 298], "488860": [54, 56, 65, 67], "947425e": [54, 56, 65, 67], "22343": [54, 56, 64, 65, 67, 298], "198618": [54, 56, 65, 67], "9370": [54, 56, 64, 65, 67, 298], "758371": [54, 56, 65, 67], "201183e": [54, 56, 65, 67], "249847": [54, 56, 65, 67, 298], "177845": [54, 56, 65, 67], "calculate_corr_from_cov": [54, 55, 56, 64, 65, 66, 67, 277], "se": [55, 64, 283, 284, 298], "correlation_matrix": [55, 64, 70, 298], "standard_error": [55, 64, 298], "411512e": 55, "009998e": 55, "178111e": 55, "233518e": 55, "171834e": 55, "461762e": 55, "665011e": 55, "040245e": 55, "944801e": 55, "932957e": 55, "093431e": 55, "856651e": 55, "867245e": 55, "685661e": 55, "195664e": 55, "pheno_linear": [57, 58, 83, 84, 86, 87, 88, 108, 117, 122, 143, 146, 227, 232], "d_eps1": [57, 117], "d_epseta1_1": [57, 117], "oeta1": [57, 108, 122], "d_epseta1_2": [57, 117], "eta_2": [57, 59, 61, 76, 108, 171, 209, 298, 299], "oeta2": [57, 108, 122], "calculate_eta_gradient_express": [57, 277], "d_eta1": [58, 108, 117, 122], "d_eta2": [58, 108, 117, 122], "calculate_epsilon_gradient_express": [58, 277], "parameter_estim": [59, 60, 61, 63, 71, 85, 87, 88, 152, 172, 173, 220, 227, 275, 277, 297, 298], "individual_estim": [59, 76, 83, 84, 86, 152, 171, 219, 277, 298], "shrinkag": [59, 61], "deviat": [59, 221, 275, 290, 296, 298, 299, 307, 310], "pe": [59, 60, 61, 63, 85, 87, 172, 173], "ie": [59, 171, 219], "720481": 59, "240295": 59, "471305": 59, "128389": 59, "calculate_individual_shrinkag": [59, 277], "expr_or_expr": 60, "expect": [60, 63, 280, 281, 295, 307], "arbitrari": [60, 63], "solut": [60, 208], "th": [60, 276, 290], "95": [60, 275, 290], "percentil": [60, 275, 290], "previous": [60, 63, 150, 152, 277, 301], "seed": [60, 63, 77, 171, 173, 279], "create_rng": [60, 63, 171, 172, 173], "k": [60, 276, 277, 282, 284, 290], "stderr": [60, 63, 275, 311], "p5": [60, 63, 290], "004234": [60, 63], "001138": [60, 63], "004907": [60, 63], "001247": [60, 63], "p95": [60, 63, 290], "individual_estimates_covari": [61, 171, 277, 298], "ieta_shr": 61, "847789": 61, "256473": 61, "796643": 61, "210669": 61, "755025": 61, "226957": 61, "764541": 61, "216405": 61, "816192": 61, "203974": 61, "778108": 61, "210992": 61, "659420": 61, "236875": 61, "668551": 61, "240097": 61, "260056": 61, "200374": 61, "725190": 61, "226563": 61, "972110": 61, "421852": 61, "249640": 61, "254119": 61, "730294": 61, "364932": 61, "165785": 61, "194464": 61, "813399": 61, "313554": 61, "797328": 61, "213211": 61, "769059": 61, "278079": 61, "098506": 61, "176778": 61, "749022": 61, "235386": 61, "742181": 61, "222932": 61, "317956": 61, "264473": 61, "943950": 61, "232732": 61, "707183": 61, "259077": 61, "553787": 61, "247717": 61, "826349": 61, "114302": 61, "854777": 61, "341384": 61, "820829": 61, "263235": 61, "999942": 61, "319986": 61, "967084": 61, "432760": 61, "404773": 61, "325215": 61, "999980": 61, "318421": 61, "925283": 61, "167667": 61, "913706": 61, "242106": 61, "875554": 61, "249197": 61, "35": [61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 308, 310], "849135": 61, "294294": 61, "172206": [61, 310], "246422": 61, "747380": 61, "278340": 61, "187440": 61, "231249": 61, "237805": 61, "254485": 61, "999925": 61, "189793": 61, "41": [61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 307, 310], "941906": 61, "170998": 61, "42": [61, 63, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 300, 309, 310], "923801": 61, "244046": 61, "43": [61, 96, 101, 116, 230, 275, 276, 284, 289, 296, 298, 299, 309, 310], "999928": 61, "320403": 61, "237637": 61, "260453": 61, "869540": 61, "194503": 61, "46": [61, 96, 101, 116, 230, 275, 276, 289, 296, 298, 299, 310], "999949": 61, "319750": 61, "983782": 61, "393234": 61, "48": [61, 96, 101, 103, 116, 230, 275, 276, 284, 296, 298, 299, 308, 309, 310], "698267": 61, "169337": 61, "49": [61, 96, 101, 116, 230, 275, 276, 296, 298, 299, 310], "776674": 61, "214962": 61, "688847": 61, "192608": 61, "822213": 61, "202534": 61, "511489": 61, "273601": 61, "53": [61, 96, 101, 116, 230, 275, 276, 284, 296, 298, 299, 305, 307, 310], "964757": 61, "223448": 61, "762153": 61, "181648": 61, "965657": 61, "435741": 61, "995278": 61, "354798": 61, "813382": 61, "263372": 61, "727295": 61, "232867": 61, "738777": 61, "224742": 61, "calculate_eta_shrinkag": [61, 277], "ucp": [62, 68], "ucpscal": [62, 68], "calculate_ucp_scal": [62, 277], "00916": [62, 153, 220, 290, 297, 299, 301], "0309626": [62, 153, 220, 297, 299, 301], "031127999999999996": 62, "013241000000000001": 62, "convers": [62, 277, 293], "pharmacokinet": [63, 210, 299], "pre": 63, "t_half_elim": 63, "173": 63, "337164": 63, "1769": 63, "493756": 63, "843398": 63, "149": [63, 294], "567842": 63, "1317": [63, 284], "474199": 63, "233070": 63, "k_e": 63, "calculate_individual_parameter_statist": [63, 277], "995565e": 64, "041788": 64, "848052": 64, "410335": 64, "240358": 64, "820116": [64, 298], "179011": 64, "266004e": 64, "908225": 64, "176399": 64, "266263": 64, "818557": 64, "757955": 64, "605785e": 64, "038825": 64, "207512": 64, "808434": 64, "144772": 64, "035114e": 64, "518562": 64, "972906": 64, "457873": 64, "947424e": 64, "197906": 64, "736254": 64, "201162e": 64, "249846": 64, "006431": 64, "000210": [66, 67, 298], "026895": [66, 67, 298], "083762": [66, 67, 298], "013415": [66, 67, 298], "007477": [66, 67, 298], "002279": [66, 67, 298], "unconstrain": 68, "calculate_parameters_from_ucp": [68, 277], "verbos": 69, "consist": [69, 284, 295, 311], "across": [69, 277, 295], "consol": 69, "fail": [69, 277, 295, 304], "cor": [70, 282], "highli": 70, "high": [70, 286, 287, 304], "zero_limit": 71, "significant_digit": [71, 277], "close": [71, 220, 277, 290, 295, 296], "distanc": [71, 79, 310], "logic": 71, "cleanup": 72, "what": [72, 295, 301, 304], "inlin": 72, "clean": 72, "might": [72, 295, 304, 311, 313], "certain": [72, 104, 149, 277, 281, 294, 295, 303, 311], "requir": [72, 277, 279, 284, 291, 295, 307], "to_format": 73, "inplac": 73, "nlmixr": [73, 245, 277, 282, 298, 299], "rxode": [73, 277, 298], "underli": [73, 112, 153, 297], "converted_model": 73, "applic": [74, 254, 269, 295, 304, 311], "config": [75, 100, 277, 281, 282, 302], "configur": [75, 277, 291, 298, 301, 311, 312], "overwritten": [75, 255], "block": [76, 163, 195, 277, 279, 290, 292, 299, 300, 307, 311], "iiv_cl_iiv_v": [76, 209], "split_joint_distribut": [76, 277, 299], "through": [77, 279, 280, 281, 284, 295, 297, 299, 311], "numpi": [77, 286, 287, 297], "standard_norm": 77, "5532605888887387": 77, "stem": 78, "force_numb": 78, "coveff1": 78, "temp": 78, "temp1": 78, "cl1": 78, "df": [79, 84, 252, 277, 286, 305, 307], "date_column": 79, "deidentifi": [79, 277], "year": [79, 277, 282, 295], "earliest": 79, "maintain": [79, 280, 282, 283, 293, 295, 303, 304], "leap": 79, "1901": 79, "1902": 79, "1903": 79, "1904": 79, "closest": 79, "preceed": 79, "ordinari": [80, 297], "differenti": [80, 297], "odedisplay": 80, "display": 80, "dt": [80, 299], "column_nam": [81, 216], "mark": [81, 82, 89, 216, 279, 295], "drop_dropped_column": [81, 216, 277, 299], "undrop_column": [81, 277, 299], "undrop": [81, 216], "drop_column": [82, 216, 277, 299], "them": [82, 170, 280, 292, 294, 295, 300, 301, 308, 311], "dy": 83, "deps_1": 83, "771084": [83, 86], "881859": [83, 86], "441728": [83, 86], "113050": [83, 86], "783055": [83, 86], "150": [83, 84, 86, 87, 88, 298], "375041": [83, 86], "833395": [83, 86], "152": [83, 84, 86, 87, 88], "876707": [83, 86], "153": [83, 84, 86, 87, 88, 285], "905095": [83, 86], "154": [83, 84, 86, 87, 88], "099690": [83, 86], "155": [83, 84, 86, 87, 88, 115, 118, 298, 299], "evaluate_eta_gradi": [83, 277], "deta_1": 84, "deta_2": 84, "159537": 84, "609116": 84, "325893": 84, "562289": 84, "104417": 84, "346161": 84, "452951": 84, "682310": 84, "838840": 84, "981836": 84, "424423": 84, "973013": 84, "497185": 84, "344797": 84, "198714": 84, "697161": 84, "987731": 84, "941806": 84, "817067": 84, "309945": 84, "evaluate_epsilon_gradi": [84, 277], "573770": 85, "739": [85, 102, 197, 286, 299], "165105": 85, "741": [85, 102, 197, 275, 286, 299], "742": [85, 102, 197, 275, 286, 299], "743": [85, 102, 197, 286, 299], "evaluate_population_predict": [86, 277], "529739": 87, "179910": [87, 296], "688648": 87, "798916": 87, "023225": 87, "459036": 87, "223295": 87, "217288": 87, "472888": 87, "226455": 87, "evaluate_individual_predict": [87, 277], "wre": [88, 277], "313859": 88, "675721": 88, "544240": 88, "921720": 88, "517677": 88, "223935": 88, "053334": 88, "007023": 88, "931252": 88, "778389": 88, "flag": [89, 277, 299, 310, 311], "origin": [89, 222, 255, 259, 260, 275, 276, 280, 282, 290, 295, 310], "care": [89, 255], "00469307": [92, 93, 94, 153, 189, 202, 215, 220, 297, 299, 301], "fix_paramet": [92, 94, 217, 218, 299], "unfix_paramat": [92, 93, 94, 218], "fix_paramaters_to": [92, 218], "unfix_paramaters_to": [92, 93, 94, 187, 217], "fix_or_unfix_paramet": [93, 94, 217, 218, 299], "fix_parameters_to": [93, 187, 217, 299], "present": [95, 98, 105, 279, 286, 290, 295, 311], "extract": [95, 98, 105, 277, 279, 293, 297], "directli": [99, 255, 259, 260, 277, 279, 287, 295, 297, 299, 304, 311], "cmax": [99, 277, 299], "tmax": [99, 277, 299], "cmin": [99, 277, 299], "tmin": [99, 277, 299], "doseid": [99, 102, 299], "589": [99, 103, 299], "get_baselin": [101, 277, 299], "set_covari": [101, 299], "period": [102, 299], "108": [103, 197, 286, 298, 299], "132": [103, 197, 286, 298, 299, 305], "144": [103, 197, 286, 298, 299, 309], "retriev": [106, 107, 114, 115, 120, 121, 123, 236, 237, 255, 259, 260, 277, 297, 298, 299, 312], "get_pk_paramet": [107, 120, 123, 277], "get_rv_paramet": [107, 121, 139, 277], "has_random_effect": [107, 123, 277], "opr": [108, 117, 122], "get_population_prediction_express": [108, 277], "epress": [108, 122], "condit": [109, 186, 277, 290, 295, 308], "item": [113, 281, 295], "activ": [114, 115, 116, 295], "get_number_of_observ": [114, 118, 277, 299], "get_number_of_observations_per_individu": [114, 115, 118, 277, 299], "total": [115, 277, 299], "get_number_of_individu": [115, 116, 277, 299], "observation_count": 116, "accord": [117, 277, 295, 300, 311], "oeta\u2082": 117, "oeta\u2081": 117, "135": [118, 298, 299, 305, 307], "131": [118, 298, 299], "146": [118, 197, 284, 286, 294, 298, 299], "get_theta": [119, 124, 277], "get_sigma": [119, 125, 277], "set_direct_effect": [120, 277], "e0": 120, "get_individual_paramet": [121, 123, 139, 277], "get_individual_prediction_express": [122, 277], "get_omega": [124, 125, 277], "structur": [125, 239, 257, 277, 279, 286, 294, 297, 300, 311], "00": [125, 290, 297, 298, 299, 305, 307, 309, 311], "olumn": 126, "milligram": [126, 286], "liter": [126, 286], "kilogram": [126, 286], "named_subscript": 128, "greek": 128, "subscript": 128, "cleanup_model": [128, 277], "\u03b8\u2081": 128, "\u03b8\u2082": 128, "\u03b8\u2083": 128, "\u03b7\u2081": 128, "\u03b7\u2082": 128, "\u03b5\u2081": 128, "mani": [129, 130, 138, 172, 277, 299], "has_proportional_error_model": [129, 130, 140, 277], "has_combined_error_model": [129, 138, 140, 277], "has_weighted_error_model": [129, 130, 138, 277], "has_additive_error_model": [130, 138, 140, 277], "reli": [132, 135, 136, 142, 295], "heurist": [132, 135, 136, 142], "abl": [132, 135, 136, 142, 277, 289, 291, 303, 304], "detect": [132, 135, 136, 142, 277, 291, 297, 303, 313], "has_od": [133, 134, 277], "has_linear_odes_with_real_eigenvalu": [133, 137, 277], "eigenvalu": 134, "has_linear_od": [134, 137, 277], "micha": [135, 136, 190, 191, 279, 311], "menten": [135, 136, 190, 191, 279, 311], "set_michaelis_menten_elimin": [135, 184, 191, 205, 277, 299], "michali": 136, "set_mixed_mm_fo_elimin": [136, 299], "set_zero_order_elimin": [142, 184, 190, 191, 277, 299], "determin": [143, 144, 170, 292, 294, 295, 300], "model1": [143, 277], "model2": 143, "constraint": [144, 189, 202, 207, 215, 217, 277, 287, 304], "get_covariate_baselin": [145, 277, 299], "load": [146, 227, 291], "statment": 147, "mu": [148, 290], "referenc": 148, "theta_1": [148, 297], "mu_1": [148, 290], "\u03bc\u2081": 148, "\u03bc\u2082": 148, "dataset_or_model": [149, 170], "name_pattern": [149, 170], "omitted_": 149, "omiss": 149, "omit": [149, 279, 284], "placehold": [149, 170], "plot": [150, 151, 152, 277, 290, 296, 304], "alt": [150, 151, 152, 275, 290, 296], "chart": [150, 151, 152, 275], "iofv1": 151, "iofv2": 151, "against": [151, 295], "iofv": [151, 252, 275, 277, 296, 298, 310], "scatterplot": 151, "problem": [153, 157, 277, 284, 289, 292, 294, 295, 296, 299, 301], "subroutin": [153, 277, 295, 299, 301], "advan1": [153, 299, 301], "trans2": [153, 299, 301], "IF": [153, 277, 295, 299], "gt": [153, 299], "lt": [153, 299], "uncondit": [153, 299], "cwre": [153, 251, 252, 298, 299, 307, 308], "npde": [153, 299], "noappend": [153, 299], "noprint": [153, 299], "onehead": [153, 299], "sigma\u2081": [154, 297], "\u2081": [154, 297], "home": [156, 277, 286, 297], "run1": [156, 237, 299], "mod": [156, 255, 257, 277, 279, 286, 297, 298, 299, 311], "read_model_from_databas": [156, 157, 277], "databas": [156, 157, 235, 255, 256, 257, 259, 260, 261, 263, 269, 274, 277], "read_model_from_str": [156, 277, 299], "err": [157, 299], "has_covariate_effect": [160, 277], "unrun": 161, "to_remov": [163, 164, 279], "eta_iov_1_1": 164, "add_lag_tim": [165, 201, 277, 299], "uloq": 166, "blq": [166, 188, 210, 247, 277], "alq": 166, "736": 166, "add_peripheral_compart": [167, 194, 277, 299], "new_nam": [169, 192], "renam": [169, 277], "clash": [169, 255, 257], "occur": [169, 195, 289, 292, 294, 295], "resampl": [170, 240], "stratifi": [170, 279], "sample_s": [170, 279], "resample_": 170, "randomli": [170, 173], "renumb": [170, 279], "upward": 170, "stratif": [170, 279], "valueerror": 170, "rais": [170, 220, 277], "strata": 170, "suppli": [170, 292, 294, 300, 307], "control": [170, 282, 294, 295, 297], "pattern": [170, 295], "samples_per_id": 171, "pool": [171, 292], "iec": 171, "127941": 171, "037273": 171, "065492": 171, "182851": 171, "263323": 171, "265849": 171, "295883": 171, "060346": 171, "012108": 171, "219967": 171, "034279": 171, "040988": 171, "187879": 171, "143184": 171, "088845": 171, "034655": 171, "187779": 171, "014214": 171, "019953": 171, "151151": 171, "sample_parameters_from_covariance_matrix": [171, 173, 277], "sample_parameters_uniformli": [171, 172, 277], "uniform": [171, 172, 173], "force_posdef_sampl": [172, 173, 279], "force_posdef_covmatrix": [172, 279], "never": [172, 300], "005069": 172, "974989": 172, "204629": 172, "024756": 172, "012088": 172, "012943": 172, "004690": 172, "958431": 172, "233231": 172, "038866": 172, "029000": 172, "012516": 172, "004902": 172, "950778": 172, "128388": 172, "019020": 172, "023866": 172, "013413": 172, "sample_individual_estim": [172, 173, 277], "estiat": [172, 173], "reject": 173, "004878": 173, "908216": 173, "149441": 173, "029179": 173, "025472": 173, "012947": 173, "004828": 173, "014444": 173, "149958": 173, "028853": 173, "027653": 173, "013348": 173, "004347": 173, "053837": 173, "165804": 173, "028465": 173, "026798": 173, "013727": 173, "data_tran": [174, 176, 196, 277], "series_term": 174, "\u00b2": [174, 176], "epsilon_1": [174, 176, 196], "expans": 174, "approxim": [174, 295], "\u03b5\u2090": [174, 176, 299], "set_proportional_error_model": [174, 176, 277, 299], "set_combined_error_model": [174, 196, 277, 299, 308], "epsilon_2": 176, "remove_error_model": [176, 196, 277, 299], "\u03b5\u209a": [176, 196, 299], "set_additive_error_model": [176, 196, 277, 299], "e\u2080": 178, "fix_to_log": 179, "dynam": [179, 266, 295], "lambda": [179, 211, 212, 305, 307], "zeta": [179, 305, 307], "emul": 179, "set_bolus_order_absorpt": [183, 198, 204], "list_of_ep": [185, 195], "same_eta": [185, 279], "chosen": [185, 277, 292, 299, 311], "eta_rv1": 185, "set_power_on_ruv": [185, 277, 299, 308], "get_initial_condit": [186, 277], "set_upper_bound": [189, 215, 299], "unconstrain_paramet": [189, 202, 217, 299], "clmm": [190, 191, 205, 299], "km": [190, 191, 205, 277, 299], "set_first_order_elimin": [190, 191, 205, 277, 299], "prefer": [193, 295], "q2": 194, "q3": 194, "v3": 194, "peripheral2": 194, "lower_limit": 195, "zero_protect": [195, 196, 277], "said": 195, "regardless": [195, 280, 295, 297], "autodetect": 195, "protect": [195, 196, 277, 295], "power\u2081": 195, "set_iiv_on_ruv": [195, 277, 299, 308], "225e": [196, 299], "ipredadj": [196, 299], "ref": [197, 313], "sequenti": [198, 277, 279, 300, 311], "quantil": [199, 275, 277], "time_vari": [199, 307, 308], "target": [200, 309], "mediat": 200, "disposit": 200, "ib": 200, "cr": 200, "crib": 200, "qss": 200, "wagner": 200, "mmapp": 200, "tmdd": [200, 239, 248, 277], "keep_depot": [201, 277], "transit1": 201, "transit2": 201, "k23": 201, "transit3": 201, "k34": 201, "k40": 201, "set_lower_bound": [202, 215, 299], "use_thetas_for_error_stdev": [203, 277, 299], "smallest": [205, 299], "get_zero_order_input": [206, 277], "simplifi": [207, 277, 278, 287, 299, 304], "ab": [207, 212, 279, 299], "analyt": 208, "becom": [209, 277, 279, 304], "create_joint_distribut": [209, 277, 299], "m4": [210, 299], "m1": [210, 277, 309], "m3": [210, 299], "m5": 210, "m6": 210, "m7": 210, "beal": 210, "sl": 210, "pharmacodyn": 210, "2001": 210, "oct": 210, "481": 210, "504": 210, "doi": [210, 212, 290, 308], "1023": 210, "1012299115260": 210, "erratum": 210, "2002": 210, "jun": 210, "309": 210, "pmid": 210, "11768292": 210, "cumd": [210, 299], "cumdz": [210, 299], "remove_loq_data": [210, 277, 299], "list_of_eta": [211, 212, 213], "boxcox": [211, 277], "lambda1": [211, 212], "transform_etas_tdist": [211, 212, 277, 299], "transform_etas_john_drap": [211, 213, 277, 299], "john": [212, 277, 279], "draper": [212, 277, 279], "spelect": 212, "1980": 212, "famili": [212, 295], "journal": [212, 308], "royal": 212, "societi": 212, "190": [212, 305], "197": 212, "2307": 212, "2986305": 212, "transform_etas_boxcox": [212, 213, 277, 299], "degre": [213, 307], "freedom": [213, 295, 307], "df1": 213, "translat": [214, 277], "hour": [214, 286], "caution": 214, "account": 214, "unfix_paramet": [215, 277, 299], "had": [219, 295, 299], "move_est_close_to_bound": 220, "00469555": 220, "984258": [220, 227, 298], "15892": 220, "0293508": [220, 297], "027906": [220, 227, 297, 298], "sd_eps_1": 221, "set_weighted_error_model": [221, 277, 299], "whose": [222, 295], "suffix": 222, "overwrit": [222, 223], "newdataset": 222, "report": [224, 277, 282, 293, 304], "recalcul": 225, "frem_dir1": 225, "read_result": [225, 236, 277, 311], "model_or_model": [226, 245], "run_tool": [226, 239, 251, 277], "004696": [227, 298], "158920": [227, 298], "029351": [227, 298], "machin": [228, 229, 230, 255, 259, 260, 286, 291, 295], "learn": [228, 229, 230, 291], "threshold": [228, 229, 230, 279, 284], "signal": [228, 229, 296], "raw": [228, 229, 230, 252, 275, 277, 286], "delta": [228, 275, 277, 296], "tell": [228, 230, 295], "predict_influential_outli": [228, 230, 277], "predict_outli": [228, 229, 277], "outlier_cutoff": 229, "influential_cutoff": 229, "singal": [229, 230], "influential_outli": 229, "predict_influential_individu": [229, 230, 277], "simev": [230, 277, 306], "281443": 230, "057392": 230, "119105": 230, "846849": 230, "600540": 230, "014008": 230, "750734": 230, "247175": 230, "117002": 230, "835389": 230, "529582": 230, "035670": 230, "292333": 230, "303278": 230, "565949": 230, "078192": 230, "291295": 230, "466421": 230, "402343": 230, "699996": 230, "567987": 230, "526776": 230, "303918": 230, "177588": 230, "272142": 230, "390000": 230, "775876": 230, "501528": 230, "700951": 230, "352599": 230, "294196": 230, "744014": 230, "215364": [230, 309], "208691": 230, "713130": 230, "300293": 230, "810736": 230, "459877": 230, "675125": 230, "563835": 230, "526945": 230, "449199": 230, "720714": 230, "792248": 230, "860923": 230, "731858": 230, "247131": 230, "894190": 230, "282737": 230, "153398": 230, "200546": 230, "902774": 230, "586427": 230, "183329": 230, "036930": 230, "639868": 230, "765279": 230, "209665": 230, "225693": 230, "errors_allow": [232, 277], "bic_typ": 232, "rounding_error": 232, "maxevals_exceed": 232, "lrt": 232, "denot": [232, 290, 299], "model_1": [232, 290], "model_2": [232, 290], "create_result": [234, 277], "resum": [235, 239, 269, 279, 311], "resmod_dir1": 235, "retrieve_model": [236, 255, 259, 260, 277, 311], "tooldatabas": [237, 256, 261, 266, 269], "modeldatabas": [237, 255, 257, 263], "tooldir_path": 237, "retrieve_final_model": [237, 277], "allometryresult": 238, "basic_pk": 239, "lloq_method": [239, 279], "lloq_limit": [239, 279], "amd": [239, 277, 311], "reult": 239, "rout": [239, 248], "search": [239, 241, 246, 277, 279, 284, 294, 304, 311], "transform_blq": [239, 277, 279, 299], "runord": [239, 279], "compon": [239, 279, 287, 291, 295, 297, 307], "run_iiv": [239, 277], "bootstrap": [240, 277, 306], "bootstrapresult": [240, 277], "500": 240, "try": [241, 279, 289, 304, 313], "mode": [241, 242, 244, 246, 248, 277, 290, 295], "covsearchresult": 241, "estmethod": [242, 277, 311], "exhaust": [242, 246, 277], "exhaustive_with_upd": [242, 289], "exhaustive_only_ev": [242, 277, 289], "estmethodresult": 242, "reduc": [242, 277, 289, 309], "no_add": [243, 246, 277, 292, 300], "iivsearch": [243, 277, 311], "brute_force_no_of_eta": [243, 292], "brute_force_block_structur": [243, 292], "strategi": [243, 246, 277, 292, 300], "add_diagon": [243, 246, 277, 292, 300], "kee": 243, "iivsearchresult": 243, "iovsearch": [244, 277, 311], "iovsearchresult": 244, "modelsearchresult": 246, "max_it": [247, 277], "bin": [247, 307, 313], "attempt": [247, 284, 295], "assess": [247, 308], "ruvsearchresult": 247, "structsearch": [248, 277], "pkpd": [248, 277], "structsearchresult": 248, "arg": 249, "kei": [251, 259, 295, 308], "fit_result": 251, "mathrm": [252, 310], "veebar": 252, "least": [252, 295, 311], "outli": [252, 310], "criteria": [252, 277, 279, 284, 292, 294, 300, 308], "include_all_estimation_step": 253, "runtim": [253, 277, 289], "wasn": [253, 277], "estmat": 253, "586": [253, 296, 298], "276056": [253, 296], "again": [254, 313], "Not": [254, 286, 295], "file_extens": [255, 257], "nontransactionalmodeldatabas": [255, 260], "local": [255, 256, 257, 259, 260, 261, 263, 282, 292, 295], "store": [255, 256, 257, 259, 260, 261, 263, 277, 301, 311], "modelnam": 255, "recommend": [255, 313], "localmodeldirectorydatabas": 255, "retrieve_fil": [255, 259, 260], "filesystem": [255, 259, 260], "model_nam": [255, 257, 259, 260, 290], "retrieve_local_fil": [255, 259, 260], "destination_path": [255, 259, 260], "retrieve_modelfit_result": [255, 259, 260], "store_local_fil": [255, 256, 259, 260, 261, 263], "new_filenam": [255, 259, 260], "store_metadata": [255, 256, 259, 260, 261, 263], "store_model": [255, 259, 260], "store_modelfit_result": [255, 259, 260], "toolnam": [256, 261, 263, 311], "exist_ok": 256, "read_metadata": [256, 261, 263], "source_path": [256, 261, 263], "store_result": [256, 261, 263], "transactionalmodeldatabas": 257, "subdirectori": [257, 311], "list_model": 257, "snapshot": [257, 259], "context": [257, 259, 295, 304], "transact": [257, 259, 295], "writabl": [257, 259], "timestamp": 258, "log_error": 258, "log_warn": 258, "abc": [259, 263], "baseclass": 259, "primari": 259, "center": 259, "around": [259, 280], "belong": 259, "dummi": [260, 261], "anyth": [260, 261, 282, 292, 295], "task_input": 262, "model_databas": 263, "workflowbas": [264, 265], "acycl": 264, "task": [264, 265, 277, 303, 304], "node": [264, 266], "edg": 264, "as_dask_dict": 264, "dask": [264, 266, 277, 304], "plot_dask": 264, "visual": 264, "add_task": 265, "predecessor": [265, 295], "insert_workflow": 265, "replace_task": 265, "new_task": 265, "wf": 266, "unique_nam": 266, "db": 266, "whatev": [266, 295], "alia": [267, 268], "localdirectorydatabas": [267, 274], "localdirectorytooldatabas": [268, 274, 311], "dispatch": [269, 274, 277, 311], "execut": [269, 277, 295], "executiondispatch": 269, "default_dispatch": 274, "local_dask": [274, 311], "default_model_databas": 274, "default_tool_databas": 274, "psn": [275, 276, 277, 279, 285, 290, 296, 305, 307, 309, 310, 311, 312], "parameter_statist": 275, "bia": [275, 277], "rse": [275, 298], "divid": [275, 279, 301], "005856": 275, "005820": 275, "000038": 275, "000487": 275, "083167": 275, "455435": 275, "443165": 275, "009885": 275, "099305": 275, "068231": 275, "141376": 275, "109797": 275, "030323": 275, "114986": 275, "813337": 275, "195880": 275, "195844": 275, "005646": 275, "046548": 275, "237634": 275, "015546": 275, "015112": 275, "000872": 275, "003434": 275, "220871": 275, "parameter_distribut": 275, "lowest": [275, 290], "highest": [275, 277, 290, 301], "interpol": 275, "fall": [275, 277], "x_0": 275, "x_1": 275, "np": [275, 286, 297], "004762": 275, "004767": [275, 284], "004805": 275, "004974": 275, "005120": 275, "211220": 275, "214364": 275, "242657": 275, "290449": 275, "307106": 275, "000011": 275, "012961": 275, "100104": 275, "100376": 275, "102825": 275, "116900": 275, "125456": 275, "007812": 275, "007857": 275, "008261": 275, "009741": 275, "011116": 275, "97": [275, 284], "006669": 275, "006685": 275, "007429": 275, "007593": 275, "007612": 275, "613679": 275, "646879": 275, "726604": 275, "730551": 275, "730990": 275, "338957": 275, "371005": 275, "536153": 275, "545316": 275, "546334": 275, "281203": 275, "300874": 275, "306057": 275, "306101": 275, "306106": 275, "021677": 275, "023708": 275, "025429": 275, "026581": 275, "026710": 275, "parameter_estimates_histogram": 275, "histogram": [275, 277], "repeatchart": 275, "005298": 275, "30730": 275, "074931": 275, "136423": 275, "011374": 275, "006048": 275, "38692": 275, "029844": 275, "189763": 275, "019143": 275, "005624": 275, "53224": 275, "118806": 275, "219550": 275, "019831": 275, "005771": [275, 284], "40115": 275, "034322": 275, "150905": 275, "012287": 275, "005933": 275, "42119": 275, "074050": 275, "171158": 275, "017394": 275, "005275": 275, "59087": 275, "289793": 275, "248009": 275, "016396": 275, "005847": 275, "44711": 275, "109860": 275, "206296": 275, "016346": 275, "005939": 275, "52688": 275, "040057": 275, "210552": 275, "013631": 275, "005998": 275, "41948": 275, "192046": 275, "175269": 275, "013485": 275, "005479": 275, "43956": 275, "109733": 275, "197253": 275, "011771": 275, "ofv_statist": 275, "bootstrap_bootdata_ofv": 275, "original_bootdata_ofv": 275, "sum": [275, 285], "bootstrap_origdata_ofv": 275, "boostrap": 275, "original_origdata_ofv": 275, "delta_bootdata": 275, "delta_origdata": 275, "722": 275, "220925": 275, "386171": 275, "134966": 275, "245796": 275, "929008": 275, "620085": 275, "523805": 275, "737": 275, "632473": 275, "951710": 275, "024871": 275, "110934": 275, "218525": 275, "629078": 275, "737746": 275, "ofv_distribut": 275, "parameter_distriut": 275, "601": 275, "007583": 275, "602": 275, "266529": 275, "613": 275, "597036": 275, "641": 275, "950291": 275, "621": 275, "273905": 275, "622": 275, "073513": 275, "629": 275, "269987": 275, "806391": 275, "915431": 275, "955989": 275, "731": 275, "321004": 275, "879050": 275, "021463": 275, "059207": 275, "398901": 275, "299364": 275, "020705": 275, "061262": 275, "426277": 275, "984323": 275, "879224": 275, "788": 275, "101562": 275, "803": 275, "869362": 275, "661": 275, "714778": 275, "121734": 275, "810": [275, 298], "417314": 275, "732": 275, "165644": 275, "757": 275, "877092": 275, "369737": 275, "671690": 275, "375800": 275, "162811": 275, "270917": 275, "982365": 275, "475010": 275, "828": 275, "178008": 275, "839": 275, "691272": 275, "840": [275, 305], "970524": 275, "836": 275, "395339": 275, "846": 275, "981350": 275, "848": 275, "157573": 275, "859": 275, "964343": 275, "893": [275, 292], "228440": 275, "896": [275, 290], "924451": 275, "443675": 275, "246668": 275, "558111": 275, "129": 275, "069616": 275, "162": 275, "333713": 275, "166": 275, "029724": 275, "ofv_plot": 275, "layerchart": [275, 296], "dofv_quantiles_plot": 275, "show": [275, 279, 290, 295, 307, 310], "metric": [275, 276, 298], "chi": 275, "squar": 275, "907310": 275, "911844": 275, "750": 275, "388987": 275, "670": 275, "684132": 275, "675": 275, "846450": 275, "738": 275, "099607": 275, "248779": 275, "734": 275, "876739": 275, "733": [275, 308], "182039": 275, "626": 275, "440820": 275, "637": 275, "427606": 275, "748": 275, "285576": 275, "239599": 275, "025253": 275, "519551": 275, "781": 275, "380852": 275, "793": 275, "303365": 275, "994494": 275, "754": 275, "666705": 275, "688168": 275, "664": 275, "288159": 275, "671": 275, "883942": 275, "255718": 275, "974215": 275, "332959": 275, "052283": 275, "689": 275, "940217": 275, "693": 275, "963948": 275, "735": 275, "763734": 275, "004534": 275, "494261": 275, "162318": 275, "204881": 275, "627961": 275, "287312": 275, "986786": 275, "390849": 275, "785654": 275, "624824": 275, "922512": 275, "099768": 275, "595783": 275, "360991": 275, "358744": 275, "157557": 275, "023731": 275, "869007": 275, "372000e": 275, "000015": 275, "000003": 275, "098000e": 275, "462220e": 275, "009862": 275, "002316": 275, "002320": 275, "320640e": 275, "531300e": 275, "013222": 275, "000146": 275, "961337e": 275, "572900e": 275, "002167": 275, "014550e": 275, "000033": 275, "000196": 275, "178980e": 275, "included_individu": 275, "case_result": [276, 277], "cook_scor": 276, "jackknife_cook_scor": 276, "delta_ofv": 276, "dofv_influenti": 276, "130159": 276, "121389": 276, "015207": 276, "348263": 276, "336159": 276, "144045": 276, "192433": 276, "181125": 276, "031030": 276, "163095": 276, "155901": 276, "026142": 276, "422651": 276, "404915": 276, "190732": 276, "374312": 276, "343311": 276, "097063": 276, "169869": 276, "163883": 276, "026223": 276, "263865": 276, "254943": 276, "058123": 276, "757098": 276, "673587": 276, "477910": 276, "150161": 276, "144191": 276, "023623": 276, "361646": 276, "352901": 276, "217902": 276, "255533": 276, "215005": 276, "035375": 276, "191848": 276, "187019": 276, "038199": 276, "376365": 276, "337975": 276, "096680": 276, "142806": 276, "137340": 276, "014709": 276, "193393": 276, "179744": 276, "031711": 276, "131746": 276, "122842": 276, "020637": 276, "176644": 276, "932149": 276, "036787": 276, "128197": 276, "120498": 276, "019030": 276, "141093": 276, "138101": 276, "029021": 276, "176582": 276, "153583": 276, "035291": 276, "104396": 276, "100064": 276, "015499": 276, "552071": 276, "501458": 276, "278595": 276, "242334": 276, "217068": 276, "047627": 276, "792099": 276, "715951": 276, "798775": 276, "135247": 276, "133493": 276, "021356": 276, "442779": 276, "424958": 276, "125763": 276, "132903": 276, "127188": 276, "010157": 276, "081122": 276, "076790": 276, "005443": 276, "183624": 276, "168501": 276, "027707": 276, "113959": 276, "111168": 276, "012363": 276, "532749": 276, "515747": 276, "325048": 276, "094133": 276, "091212": 276, "014747": 276, "447798": 276, "406737": 276, "194457": 276, "364978": 276, "352973": 276, "124295": 276, "270838": 276, "252922": 276, "063675": 276, "129553": 276, "121963": 276, "014043": 276, "254914": 276, "243250": 276, "064025": 276, "207529": 276, "194633": 276, "046887": 276, "239182": 276, "218112": 276, "044252": 276, "181986": 276, "173826": 276, "020285": 276, "604112": 276, "584208": 276, "604211": 276, "407717": 276, "369648": 276, "154161": 276, "215722": 276, "196744": 276, "043742": 276, "214167": 276, "200091": 276, "036238": 276, "094284": 276, "089002": 276, "007506": 276, "074174": 276, "072365": 276, "007535": 276, "743323": 276, "717468": 276, "654313": 276, "153971": 276, "147360": 276, "014502": 276, "284706": 276, "278460": 276, "072960": 276, "331587": 276, "309374": 276, "116933": 276, "447965": 276, "421612": 276, "129593": 276, "184872": 276, "175196": 276, "029896": 276, "430382": 276, "415446": 276, "141657": 276, "409307": 276, "369197": 276, "189729": 276, "084764": 276, "079718": 276, "007416": 276, "107600": 276, "103145": 276, "013947": 276, "154672": 276, "150761": 276, "028236": 276, "155632": 276, "150461": 276, "034848": 276, "covariance_ratio": 276, "skipped_individu": 276, "050505": 276, "963884": 276, "058896": 276, "087449": 276, "985403": 276, "029066": 276, "101636": 276, "086424": 276, "017369": 276, "094799": 276, "849310": 276, "121111": 276, "049151": 276, "096456": 276, "070088": 276, "040691": 276, "065881": 276, "606158": 276, "205007": 276, "099191": 276, "143483": 276, "050691": 276, "086007": 276, "156273": 276, "919336": 276, "056714": 276, "999221": 276, "029600": 276, "034017": 276, "108785": 276, "038495": 276, "954054": 276, "053618": 276, "096334": 276, "943556": 276, "125423": 276, "086167": 276, "145822": 276, "113939": 276, "114399": 276, "057664": 276, "788608": 276, "063991": 276, "115559": 276, "160549": 276, "034685": 276, "035618": 276, "714976": 276, "092664": 276, "089158": 276, "054565": 276, "002555": 276, "032356": 276, "003056": 276, "936719": 276, "122771": 276, "078285": 276, "096841": 276, "068821": 276, "sqrt": [276, 299], "p_i": 276, "p_": 276, "orig": 276, "operatornam": [276, 290, 310], "sum_": 276, "overlin": [276, 290], "_j": 276, "_k": [276, 290], "det": 276, "Then": [276, 290, 299], "ofv_": 276, "iofv_": 276, "iofv_k": 276, "ofv_k": 276, "case_column": 276, "rikard": [276, 278, 283, 304, 308], "nordgren": [276, 278, 283, 304, 308], "sebastian": [276, 278, 283], "ueckert": [276, 278, 283], "svetlana": 276, "freiberga": 276, "karlsson": [276, 278, 283, 290, 308], "faster": [276, 277, 304], "2018": [276, 295, 308], "abstr": [276, 278], "8683": 276, "www": [276, 278, 295], "meet": [276, 278, 280, 295, 304], "set_reference_valu": 277, "set_lloq_data": 277, "create_basic_pk_model": [277, 299], "add_bioavail": 277, "autogener": 277, "typ": 277, "add_effect_compart": 277, "reorgan": 277, "saddl": 277, "llq": 277, "preced": 277, "reorder": 277, "incorrectli": 277, "ofv_iter": 277, "parameter_estimates_iter": 277, "caus": [277, 295, 304], "model4": 277, "frem": [277, 297, 306, 307], "create_report": 277, "write_model": [277, 297, 299, 301], "did": [277, 309], "dadt": [277, 299], "de": [277, 299], "complex": [277, 282, 291], "set_zero_order_input": 277, "set_tmdd": 277, "plugin": [277, 282, 287, 288, 293], "generate_model_cod": 277, "get_model_cod": 277, "advan7": 277, "didn": 277, "header": 277, "is_linear": 277, "plot_transformed_eta_distribut": 277, "create_config_templ": [277, 281], "get_dv_symbol": 277, "set_initial_condit": 277, "abbr": [277, 299, 301], "add_metabolit": 277, "set_dvid": [277, 299], "regress": 277, "defdos": [277, 299], "sometim": 277, "wrong": 277, "bad": 277, "1551": 277, "is_real": 277, "advan5": 277, "copy_model": 277, "nlmixr2": [277, 293, 299], "display_od": 277, "rework": 277, "run_covsearch": [277, 284], "explicitodesystem": 277, "eval": 277, "successfulli": [277, 313], "round": [277, 286], "subtool": [277, 311], "proxi": [277, 295], "1314": 277, "1355": [277, 284], "1378": [277, 292], "typo": 277, "1377": 277, "1381": 277, "1064": [277, 292], "afd7707": 277, "1139": 277, "1394": 277, "too": [277, 295], "1117": 277, "timeout": 277, "loop": 277, "wait": 277, "lst": [277, 311], "much": [277, 304], "phi": [277, 282, 299, 311], "ncomp": 277, "deidentify_data": [277, 299], "cli": 277, "anonym": 277, "setter": 277, "multivari": 277, "1293": 277, "1302": [277, 284], "1303": [277, 300], "last20": 277, "run_modelsearch": [277, 300, 311], "run_iovsearch": [277, 294], "run_ruvsearch": [277, 308], "run_iivsearch": [277, 292], "nomem": 277, "rh": 277, "1180": 277, "1162": 277, "1032": 277, "add_covariate_effect": [277, 299], "1004": 277, "remove_covariate_effect": [277, 299], "1181": 277, "9fd701521": 277, "best_model": 277, "final_model_nam": 277, "a7fbcbfe2": 277, "update_initial_individual_estim": 277, "modelsearch_candidate1": [277, 300, 311], "modifi": [277, 286, 295, 302, 312], "wors": 277, "calculate_b": [277, 292, 294, 300], "calculate_a": 277, "check_parameters_near_bound": 277, "check_high_correl": 277, "plot_iofv_vs_iofv": 277, "plot_individual_predict": 277, "evaluate_express": 277, "evaluate_weighted_residu": 277, "parameter_esimt": 277, "calculate_pk_parameters_statist": 277, "update_init": [277, 299], "predict_": 277, "print_fit_summari": 277, "write_result": 277, "rank_model": 277, "speedup": 277, "297a64041": 277, "individual_ofv": [277, 298], "1101": 277, "57fc4fee8": 277, "fd417aaf": 277, "convert_model": [277, 299], "d5458e36": 277, "keyerror": 277, "localmodeldirectori": 277, "filenotfounderror": 277, "1193bd39": 277, "unus": 277, "submodul": 277, "bb96a13c": 277, "update_paramet": 277, "0ca786c5": 277, "dd056da3": 277, "915bc9c7": 277, "get_config_path": [277, 281], "disabl": [277, 280, 281], "82b32278": 277, "unwant": 277, "debug": 277, "1131a610": 277, "ebfafb45": 277, "1173": 277, "fb070ee1": 277, "1049": [277, 292], "pyreadr": 277, "easier": [277, 287, 297], "instal": [277, 279, 281, 295, 312], "mac": [277, 282], "get_evid": [277, 299], "resmod": [277, 306], "916": 277, "strict": [277, 295], "1055": 277, "attibut": 277, "1092": 277, "exlud": 277, "unreport": 277, "1076": 277, "988": 277, "1c65359": 277, "42fe72f": 277, "1001": 277, "lead": 277, "uneven": 277, "branch": [277, 282], "stepwis": [277, 284, 309, 311], "694": 277, "properli": 277, "708": 277, "comment": [277, 301], "790": 277, "974": [277, 305], "produc": [277, 295], "1017": 277, "989": 277, "71f4cf23": 277, "dsl": 277, "932": 277, "973": 277, "cfc09bad": 277, "975": 277, "917": 277, "977": 277, "908": 277, "fd564168": 277, "088a046a": 277, "c76fa476": 277, "430f1d2e": 277, "make_declar": 277, "greekify_model": 277, "find_clearance_paramet": 277, "find_volume_paramet": 277, "vp": 277, "newer": 277, "820": [277, 298], "seprat": 277, "sporad": 277, "race": [277, 280], "lazi": 277, "duplic": 277, "745": 277, "1st": 277, "3rd": 277, "710": 277, "licens": [277, 281], "advanx": 277, "add_time_after_dos": [277, 299], "intercompartment": 277, "defob": 277, "choos": [277, 292, 295, 300, 301, 302], "gl": 277, "solve_ode_system": 277, "meta": 277, "switch": [277, 304], "read_dataset_from_datainfo": [277, 299], "addl": 277, "linalgerror": 277, "656": [277, 292], "tflite": [277, 291], "649": 277, "mdt": [277, 299], "654": 277, "expand_additional_dos": [277, 299], "better": [277, 300, 308], "modelsyntaxerror": 277, "588": 277, "625": [277, 292], "578": 277, "vc1": 277, "577": 277, "success": [277, 280, 284, 289, 292, 294], "632": [277, 305], "636": 277, "590": 277, "gl_real": 277, "sampled_iofv": [277, 310], "version": [277, 279, 291, 295, 311], "subblock": 277, "check_dataset": [277, 299], "tensorflow": 277, "modelbuild": 277, "add_mdt_iiv": 277, "three": [277, 287, 295, 301], "add_eta": [277, 307], "etas_as_fullblock": 277, "iiv_as_fullblock": 277, "add_mdt_eta": 277, "wip": 277, "don": 277, "calculate_se_from_inf": 277, "calculate_cov_from_inf": 277, "calculate_inf_from_cov": 277, "calculate_inf_from_corrs": 277, "calculate_corr_from_inf": 277, "528": 277, "457": 277, "translate_nmtran_tim": [277, 299], "print_model_cod": [277, 291, 299], "has_michaelis_menten_elimin": 277, "has_zero_order_elimin": 277, "has_first_order_elimin": 277, "has_mixed_mm_fo_elimin": 277, "2c": 277, "1c": 277, "timevari": 277, "create_symbol": 277, "remove_unused_parameters_and_rv": 277, "mu_reference_model": 277, "simplify_express": 277, "bump_model_numb": 277, "get_doseid": [277, 299], "get_unit_of": 277, "get_concentration_parameters_from_data": [277, 299], "write_csv": 277, "resample_data": 277, "omit_data": 277, "get_observation_express": 277, "get_individu": 277, "get_dos": [277, 299], "list_time_varying_covari": [277, 299], "estmeth": 277, "optim": [277, 287, 297, 304], "incorrect": 277, "add_allometri": [277, 299], "insert_aft": 277, "modelstat": 277, "power_on_ruv": 277, "estimationmethod": 277, "guard": 277, "avoid": [277, 287, 295, 313], "cdd": 277, "bipp": [277, 279], "5000": 277, "shift": 277, "nest": 277, "due": [277, 308], "set_dtbs_error_model": [277, 299], "dure": [277, 313], "logger": 277, "parametr": 277, "broken": 277, "parallel": [277, 311], "print_model_symbol": 277, "get_observ": [277, 299], "parameter_sampl": 277, "api": [277, 287, 299, 303, 304, 312], "improv": [277, 307], "eta_shrinkag": 277, "summarize_model": 277, "window": [277, 282, 291, 295], "rstudio": [277, 304, 313], "zero_order_absorpt": 277, "first_order_absorpt": 277, "bolus_absorpt": 277, "set_bolus_absorpt": [277, 299], "seq_zo_fo_absorpt": 277, "set_seq_zo_fo_absorpt": [277, 299], "have_zero_order_absorpt": 277, "has_zero_order_absorpt": 277, "individual_shrinkag": 277, "individual_parameter_statist": 277, "pk_paramet": 277, "create_rv_block": 277, "split_rv_block": 277, "nind": 277, "nob": 277, "nobsi": 277, "remove_error": 277, "additive_error": 277, "proportional_error": 277, "combined_error": 277, "has_additive_error": 277, "has_proportional_error": 277, "has_combined_error": 277, "theta_as_stdev": 277, "set_dtbs_error": 277, "tdist": [277, 305], "john_drap": 277, "add_individual_paramet": 277, "first_order_elimin": 277, "zero_order_elimin": 277, "michaelis_menten_elimin": 277, "mixed_mm_fo_elimin": 277, "revert": 277, "thread": [277, 280], "site": 277, "crossval": [277, 306], "qa": [277, 306], "plain": [277, 281, 282], "sdcorr": 277, "data_transform": 277, "evalut": 277, "dependent_variable_symbol": 277, "releas": [277, 295, 313], "claus": 277, "interfac": [277, 287, 291, 293, 295, 297, 299, 304, 312, 313], "com": 277, "stdin": 277, "123": [277, 284, 292, 294, 298, 300, 308], "clearer": 277, "prioriti": [277, 301], "aggregatedmodelfitresult": 277, "priorit": [277, 301], "half": [277, 305, 307], "life": [277, 305, 307], "set_nam": 277, "parameter_init": 277, "base_parameter_chang": [277, 290], "parameter_vari": [277, 290, 307], "coeffici": 277, "frem_result": 277, "simevalresult": 277, "nonfixed_init": 277, "parameterset": 277, "migrat": 277, "github": [277, 282, 291, 293, 304, 313], "action": [277, 279, 280, 282, 295, 304], "columntyp": 277, "to_base_model": 277, "comined_mm_fo_elimin": 277, "absorption_r": 277, "pretti": 277, "qaresult": 277, "nmtranparseerror": 277, "error_model": 277, "pharmpyconfigpath": [277, 281], "environ": [277, 280, 312, 313], "linearizeresult": 277, "reset_indic": 277, "multiindic": 277, "functionsadd_lag_tim": 277, "yaml": 277, "view": [277, 295, 309], "assumpt": [277, 295], "0th": [277, 279], "parser": [277, 304], "individul": 277, "extend": [277, 295, 307, 309], "postprocess": [277, 306], "librari": [277, 291, 293, 295, 304, 313], "stella": [278, 283, 304], "belin": [278, 283, 304], "gunnar": [278, 283], "yngman": [278, 283, 290], "simon": [278, 283], "carter": [278, 283], "buatoi": [278, 283], "jo\u00e3o": [278, 283], "abrant": [278, 283], "andrew": [278, 283], "hooker": [278, 283], "assemblerr": 278, "novel": 278, "process": [278, 308], "2021": [278, 290], "9656": 278, "subcommand": 279, "top": [279, 286, 311], "often": [279, 282, 297, 309], "help": [279, 280, 284, 299, 304, 311, 313], "verb": 279, "particular": [279, 280, 282, 286, 295, 296], "welcom": [279, 280, 282, 295], "usag": 279, "exit": 279, "program": [279, 280, 291, 295], "pheno_r": [279, 286, 297, 298, 299], "prettyprint": 279, "output_fil": 279, "idcol": 279, "datecol": 279, "match": 279, "pager": 279, "stdout": [279, 311], "datasetsmultipl": 279, "1th": 279, "quot": 279, "comb": 279, "elimini": 279, "propot": 279, "error_typ": 279, "givenbi": 279, "cov_sampl": 279, "posdef": 279, "non_fix": 279, "input_path": 279, "particip": 280, "project": [280, 282, 293, 295, 313], "made": [280, 295, 297], "member": 280, "globe": 280, "divers": 280, "skill": [280, 304], "person": [280, 295], "experi": 280, "growth": 280, "everyon": [280, 282, 295], "guidelin": 280, "insid": [280, 295], "goal": 280, "inclus": [280, 295, 307], "grow": 280, "pledg": 280, "treat": [280, 282, 295], "peopl": 280, "harass": 280, "bulli": 280, "sexual": 280, "orient": 280, "gender": 280, "ident": 280, "appear": [280, 313], "nation": [280, 283], "ethnic": 280, "religion": 280, "imageri": 280, "sexist": 280, "racist": 280, "exclusionari": 280, "joke": 280, "acknowledg": [280, 295], "citat": 280, "request": [280, 282], "author": [280, 295], "own": [280, 281, 287, 295], "cite": 280, "those": [280, 295, 299, 311], "realiz": 280, "varieti": 280, "opinion": 280, "background": 280, "serv": [280, 295, 304], "enrich": 280, "discuss": 280, "pro": 280, "con": 280, "technologi": 280, "proactiv": 280, "ensur": [280, 295], "heard": 280, "feel": [280, 304], "confid": 280, "freeli": 280, "question": 280, "answer": 280, "respectfulli": 280, "pai": 280, "attent": 280, "feedback": 280, "forum": 280, "especi": 280, "contribut": [280, 293, 295], "conscienti": 280, "percept": 280, "wider": 280, "respond": 280, "strive": 280, "behavior": 280, "encourag": [280, 282, 287, 293], "debat": 280, "disagr": 280, "entir": [280, 282, 295, 311], "silent": 280, "violat": [280, 295], "contact": [280, 295], "talk": 280, "privat": [280, 295], "situat": 280, "onlin": 280, "offlin": 280, "mail": [280, 295], "social": 280, "media": 280, "confer": 280, "associ": [280, 294, 295], "adapt": [280, 295, 304], "astropi": 280, "global": [281, 313], "nonmen": 281, "conf": 281, "ini": [281, 299], "default_nonmem_path": 281, "nmfe751": 281, "licfil": 281, "rpath": 281, "temporarili": 281, "pharmpyconfigfil": 281, "your": [282, 291, 293, 295, 301, 311, 313], "bug": 282, "appreci": 282, "suggest": [282, 293], "suitabl": [282, 304], "student": [282, 304], "commun": [282, 295], "aspir": 282, "conduct": [282, 300], "foster": 282, "linux": [282, 291], "maco": [282, 291], "ll": [282, 299], "badg": 282, "pip": [282, 291], "python3": 282, "pip3": 282, "guid": [282, 286, 297, 299], "former": 282, "ubuntu": 282, "apt": 282, "url": [282, 291], "render": [282, 295, 304], "On": [282, 304], "sudo": 282, "brew": 282, "unnecessari": [282, 295], "thing": [282, 295], "instruct": [282, 291, 298, 311], "black": 282, "formatt": 282, "flake8": 282, "linter": 282, "isort": 282, "lint": 282, "reformat": 282, "py39": 282, "test_paramet": 282, "py": [282, 291], "test_get_theta": 282, "apart": 282, "suit": 282, "purpos": [282, 295], "test_modelsearch": 282, "test_summary_individu": 282, "pull": 282, "manag": 282, "contributor": [282, 295], "emploi": 282, "commit": [282, 295], "push": 282, "name_of_branch": 282, "deploy": 282, "setup": 282, "pypi": [282, 291], "io": [282, 287, 291], "trigger": [282, 297], "tag": 282, "changelog": 282, "bump": 282, "semant": 282, "bumpvers": 282, "cfg": 282, "sh": 282, "patch": 282, "minor": 282, "major": [282, 295], "copyright": 282, "necessari": [282, 295], "coi": 282, "stream": [282, 297], "verbatim": [282, 295], "farmaci": 283, "uu": 283, "kajsa": 283, "harl": 283, "zhe": [283, 304], "huang": [283, 304], "aurelien": 283, "oom": 283, "johan": 283, "borg": 283, "antonia": 283, "hufnagl": 283, "piyanan": 283, "assawasuwannakit": 283, "xiaomei": 283, "chen": 283, "alzahra": 283, "hamdan": 283, "osama": 283, "qutishat": 283, "shijun": 283, "wang": 283, "tianwu": 283, "yang": 283, "keqi": 283, "shi": 283, "xuanlin": 283, "liu": 283, "samia": 283, "moham": 283, "yersultan": 283, "mirasbekov": 283, "warm": 283, "thank": 283, "sponsor": 283, "hoffman": 283, "la": 283, "roch": 283, "ltd": 283, "pharmetheu": 283, "uppsala": [283, 293], "univers": [283, 293], "enabl": [283, 295], "resourc": 283, "swedish": 283, "infrastructur": 283, "snic": 283, "uppmax": 283, "research": [283, 304], "council": 283, "inter": [284, 292, 299], "five": 284, "sentenc": 284, "manual": [284, 286, 311], "rewritten": 284, "notic": [284, 295], "semicolon": 284, "mox2": [284, 289, 292, 294, 300, 311], "covsearch_run7": 284, "covsearch_run8": 284, "covsearch_run9": 284, "covsearch_run10": 284, "covsearch_run11": 284, "covsearch_run12": 284, "covsearch_run13": 284, "covsearch_run14": 284, "covsearch_run15": 284, "covsearch_run16": 284, "covsearch_run17": 284, "covsearch_run18": 284, "covsearch_run19": 284, "covsearch_run20": 284, "covsearch_run21": 284, "covsearch_run22": 284, "covsearch_run23": 284, "covsearch_run24": 284, "covsearch_run25": 284, "covsearch_run26": 284, "covsearch_run27": 284, "covsearch_run28": 284, "covsearch_run29": 284, "covsearch_run30": 284, "covsearch_run31": 284, "covsearch_run32": 284, "covsearch_run33": 284, "covsearch_run34": 284, "covsearch_run35": 284, "covsearch_run36": 284, "covsearch_run37": 284, "covsearch_run38": 284, "covsearch_run39": 284, "covsearch_run40": 284, "covsearch_run41": 284, "covsearch_run42": 284, "covsearch_run43": 284, "covsearch_run44": 284, "covsearch_run45": 284, "covsearch_run46": 284, "covsearch_run47": 284, "covsearch_run48": 284, "covsearch_run49": 284, "covsearch_run50": 284, "covsearch_run51": 284, "covsearch_run52": 284, "covsearch_run53": 284, "covsearch_run54": 284, "pvalu": [284, 309], "goal_pvalu": [284, 309], "is_backward": [284, 309], "047127e": 284, "710000e": 284, "568110e": 284, "494490e": 284, "498453e": 284, "459287e": 284, "280678e": 284, "923500e": 284, "003390e": 284, "984500e": 284, "372293e": 284, "176965e": 284, "207550e": 284, "626878e": 284, "564495e": 284, "539960e": 284, "762000e": 284, "823200e": 284, "417058e": 284, "759040e": 284, "469024e": 284, "811054e": 284, "642452e": 284, "840779e": 284, "261720e": 284, "651215e": 284, "954671e": 284, "163414e": 284, "926594e": 284, "491049e": 284, "423998e": 284, "706676e": 284, "374390e": 284, "054865e": 284, "105347e": 284, "300000e": 284, "029682e": 284, "641559e": 284, "748923e": 284, "363918e": 284, "203548e": 284, "052323e": 284, "567877e": 284, "507358e": 284, "510000e": 284, "1292": [284, 289, 292, 294, 300], "186761": [284, 289, 292, 294, 300], "742325": 284, "929085": 284, "315057": 284, "1346": 284, "501817": 284, "978215": 284, "1332": 284, "164976": 284, "062682": 284, "1312": 284, "249442": 284, "061671": 284, "248431": 284, "056538": 284, "1313": [284, 300], "243298": 284, "732689": 284, "919450": 284, "651626": 284, "1335": 284, "838386": 284, "814832": 284, "1334": 284, "001593": 284, "363759": 284, "550520": 284, "989077": 284, "175838": 284, "136326": 284, "323087": 284, "387950": 284, "1316": 284, "574711": 284, "961688": 284, "148448": 284, "743393": 284, "930153": 284, "617998": 284, "1340": 284, "804759": 284, "641996": 284, "1345": 284, "828756": 284, "288366": 284, "1357": 284, "475127": 284, "263168": 284, "1343": [284, 292], "449928": 284, "814686": 284, "1319": 284, "001446": 284, "181808": 284, "368568": 284, "957602": 284, "144362": 284, "567343": 284, "1347": 284, "754104": 284, "426389": 284, "613149": 284, "324567": 284, "1358": [284, 299], "511327": 284, "446030": 284, "632790": 284, "549224": 284, "1326": 284, "735985": 284, "997342": 284, "184102": 284, "617389": 284, "1351": 284, "804150": 284, "900404": 284, "1350": 284, "087164": 284, "566615": 284, "1391": 284, "753375": 284, "929659": 284, "1352": 284, "116420": 284, "990522": 284, "177283": 284, "217267": 284, "404028": 284, "62": [284, 305], "729333": 284, "1354": 284, "916093": 284, "379219": 284, "1393": 284, "565980": 284, "67": [284, 307, 309], "670588": 284, "1359": 284, "857348": 284, "016040": 284, "202801": 284, "926496": 284, "113256": 284, "139": 284, "462177": 284, "1431": 284, "648937": 284, "83": [284, 305, 307], "706655": 284, "1375": 284, "893415": 284, "798603": 284, "1367": 284, "985364": 284, "801019": 284, "1438": 284, "987780": 284, "92": 284, "443408": 284, "1384": 284, "630169": 284, "997461": 284, "1439": 284, "184221": 284, "322869": 284, "509630": 284, "925020": 284, "111781": 284, "142": 284, "814402": 284, "1435": 284, "001163": 284, "862830": 284, "049591": 284, "449696": 284, "636456": 284, "801017": 284, "987778": 284, "89": [284, 300], "86": 284, "1414": 284, "872375": 284, "93": [284, 289], "810457": 284, "76": 284, "630168": 284, "68": 284, "5328": [284, 289, 292, 294, 300], "2300": [284, 289, 292, 300], "433676": [284, 289, 292, 294, 300], "2632": 284, "2400": 284, "447194": 284, "8757": 284, "106": [284, 292, 305, 307, 308], "2690": 284, "429235": 284, "4824": 284, "0490": 284, "435646": 284, "1536": 284, "7690": 284, "430342": 284, "9763": 284, "102": 284, "8640": 284, "428158": 284, "9807": 284, "1030": 284, "505090": 284, "3823": 284, "4790": 284, "453248": 284, "3323": 284, "5279": 284, "434088": 284, "7087": 284, "109": [284, 300], "1750": 284, "459561": 284, "8501": 284, "4740": 284, "428178": 284, "4821": 284, "0270": 284, "435683": 284, "1635": 284, "5920": 284, "433194": 284, "0931": 284, "1120": 284, "435607": 284, "1216": 284, "2180": 284, "519385": 284, "3873": 284, "4580": 284, "453399": 284, "4279": 284, "6231": 284, "442192": 284, "9115": 284, "9240": 284, "466270": 284, "7337": 284, "9590": 284, "409478": 284, "3781": 284, "415011": 284, "1007": 284, "5110": 284, "446059": 284, "1211": 284, "8490": 284, "522201": 284, "2833": 284, "7400": 284, "430777": 284, "3688": 284, "9010": 284, "444906": 284, "9130": 284, "7450": 284, "468161": 284, "8124": 284, "7120": 284, "407766": 284, "3789": 284, "2080": 284, "416694": 284, "1985": 284, "6770": 284, "441794": 284, "2994": 284, "94": 284, "1796": 284, "587939": 284, "4692": 284, "3027": 284, "440385": 284, "0941": 284, "6170": 284, "463834": 284, "6693": 284, "2570": 284, "413923": 284, "3618": 284, "427491": 284, "2658": 284, "5620": 284, "521096": 284, "4546": 284, "9522": 284, "446657": 284, "0732": 284, "0130": 284, "454492": 284, "7145": 284, "9771": 284, "451302": 284, "3318": 284, "9710": 284, "477444": 284, "4944": 284, "3068": 284, "502124": 284, "0790": 284, "7890": 284, "462595": 284, "7389": 284, "8006": 284, "491811": 284, "6677": 284, "7770": 284, "477864": 284, "6488": 284, "0460": 284, "472418": 284, "9834": 284, "9929": 284, "474434": 284, "0359": 284, "2120": 284, "478021": 284, "0706": 284, "1991": 284, "474688": 284, "0336": 284, "8083": 284, "475373": 284, "0636": 284, "2525": 284, "473063": 284, "0292": 284, "8033": 284, "473542": 284, "0651": 284, "9375": 284, "483644": 284, "0661": 284, "5310": 284, "462817": 284, "0432": 284, "1300": [284, 294], "446808": 284, "7913": 284, "90": 284, "1894": 284, "489466": 284, "9838": 284, "9945": 284, "474441": 284, "0361": 284, "478038": 284, "ruv_prop_estim": [284, 289, 294, 308], "209972": [284, 289, 292, 294, 300], "197452": 284, "005338": 284, "192852": 284, "199549": 284, "193411": 284, "195608": 284, "192557": 284, "198783": 284, "191425": 284, "192934": 284, "192682": 284, "000659": 284, "199545": 284, "000303": 284, "193747": 284, "000956": 284, "197305": 284, "006150": 284, "194664": 284, "005918": 284, "198812": 284, "000334": 284, "192753": 284, "006503": 284, "194238": 284, "009567": 284, "189160": 284, "005291": 284, "195766": 284, "003125": 284, "195730": 284, "195098": 284, "006600": 284, "195843": 284, "001364": 284, "189330": 284, "003100": 284, "193116": 284, "008094": 284, "189540": 284, "006380": 284, "196038": 284, "002606": 284, "197429": 284, "000340": 284, "204599": 284, "002549": 284, "190442": 284, "000522": 284, "195705": 284, "005726": 284, "192398": 284, "002984": 284, "196915": 284, "000299": 284, "198387": 284, "001229": 284, "190453": 284, "000216": 284, "197082": 284, "005988": 284, "191512": 284, "002433": 284, "194217": 284, "000649": 284, "191075": 284, "001918": 284, "197129": 284, "005915": 284, "183751": 284, "001489": 284, "187999": 284, "001004": 284, "194026": 284, "005955": 284, "187663": 284, "002481": 284, "193344": 284, "009365": 284, "187822": 284, "002901": 284, "187730": 284, "187425": 284, "002946": 284, "184713": 284, "006622": 284, "187724": 284, "002919": 284, "187525": 284, "003050": 284, "192812": 284, "005142": 284, "183104": 284, "001493": 284, "187672": 284, "002483": 284, "193349": 284, "009366": 284, "pop_clwt_estim": 284, "382904": 284, "010536": 284, "387669": 284, "010497": 284, "396947": 284, "010523": 284, "385807": 284, "010703": 284, "554417": 284, "011851": 284, "519989": 284, "012179": 284, "808497": 284, "011109": 284, "737404": [284, 310], "007109": 284, "709206": 284, "000803": 284, "736659": 284, "000429": 284, "706752": 284, "000822": 284, "662625": 284, "002097": 284, "709124": 284, "000793": 284, "704774": 284, "427285": 284, "003711": 284, "779125": 284, "001087": 284, "007108": 284, "059279": 284, "517590": 284, "056724": 284, "520520": 284, "063392": 284, "057943": 284, "019268": 284, "348000": 284, "008419": 284, "040813": 284, "045624": 284, "023159": 284, "057041": 284, "059912": 284, "003577": 284, "495110": 284, "070972": 284, "033397": 284, "013863": 284, "012482": 284, "367050": 284, "020109": 284, "442940": 284, "030354": 284, "491875": 284, "038044": 284, "224276": 284, "001885": 284, "848782": 284, "017435": 284, "646840": 284, "585757": 284, "000169": 284, "367142": 284, "002221": 284, "737357": 284, "009685": 284, "033267": 284, "009238": 284, "267484": 284, "012667": 284, "165471": 284, "005033": 284, "094740": 284, "010833": 284, "065816": 284, "004749": 284, "096523": 284, "005557": 284, "098655": 284, "107862": 284, "012020": 284, "118838": 284, "005781": 284, "002862": 284, "222520": 284, "005160": 284, "361570": 284, "008017": 284, "030930": 284, "005034": 284, "094706": 284, "010829": 284, "065876": 284, "pop_matwt_estim": 284, "019706": 284, "014651": 284, "020136": 284, "014954": 284, "022336": 284, "011936": 284, "005508": 284, "002344": 284, "013967": 284, "034213": 284, "034044": 284, "009672": 284, "008593": 284, "017124": 284, "000315": 284, "022223": 284, "019316": 284, "009542": 284, "010323": 284, "008652": 284, "018053": 284, "019211": 284, "001906": 284, "014021": 284, "011399": 284, "003565": 284, "010903": 284, "014331": 284, "013699": 284, "015830": 284, "000202": [284, 310], "002078": 284, "009019": 284, "005773": 284, "012366": 284, "002607": 284, "002247": 284, "005768": 284, "011567": 284, "006160": 284, "014272": 284, "004566": 284, "010938": 284, "002378": 284, "007473": 284, "011606": 284, "010672": 284, "000456": 284, "009445": 284, "014649": 284, "012169": 284, "002248": 284, "pop_vcwt_estim": 284, "953372": 284, "013320": 284, "984897": 284, "012092": 284, "972469": 284, "011946": 284, "954734": 284, "010781": 284, "009540": 284, "009922": 284, "989687": 284, "009576": 284, "986758": 284, "869150": 284, "632058": 284, "008418": 284, "751771": 284, "007571": 284, "416489": 284, "013879": 284, "724866": 284, "008196": 284, "746265": 284, "007399": 284, "727224": 284, "008331": 284, "666572": 284, "010074": 284, "751144": 284, "008031": 284, "711725": 284, "008833": 284, "012851": 284, "967468": 284, "751794": 284, "007573": 284, "416464": 284, "013880": 284, "1403": [284, 292, 294, 300, 308], "1404": [284, 292, 294, 300, 308], "1405": [284, 292, 294, 300, 308], "1406": [284, 292, 294, 300, 308], "1407": [284, 292, 294, 300, 308], "757118": [284, 292, 294, 300], "659694": [284, 292, 294, 300], "302503": [284, 292, 294, 300], "464327": [284, 292, 294, 300], "034898": [284, 292, 294, 300], "482240": 284, "223632": 284, "357442": 284, "119299": 284, "565277": 284, "696443": 284, "062486": 284, "234841": 284, "088594": 284, "953572": 284, "857979": 284, "193305": 284, "003283": 284, "861988": 284, "188718": 284, "005806": 284, "962325": 284, "455479": 284, "289527": 284, "216857": 284, "4015": 284, "2022": [284, 289, 292, 294, 300, 311], "462": 284, "nhowev": [284, 289, 294], "reduced_ofv": [284, 309], "extended_ofv": [284, 309], "ofv_drop": [284, 309], "extended_st": [284, 309], "621435": 284, "246753": 284, "394001": 284, "645626": 284, "219363": 284, "001068": 284, "875674": 284, "899671": 284, "152040": 284, "126842": 284, "678359": 284, "045482": 284, "821275": 284, "431017": 284, "290062": 284, "366965": 284, "488428": 284, "591623": 284, "039740": 284, "659788": 284, "942802": 284, "017391": 284, "380435": 284, "441298": 284, "668043": 284, "180108": 284, "388697": 284, "680065": 284, "025518": 284, "935973": 284, "446136": 284, "690615": 284, "782563": 284, "002416": 284, "644805": 284, "554053": 284, "674591": 284, "072441": 284, "183059": 284, "134631": 284, "547765": 284, "311846": 284, "373764": 284, "196444": 284, "delta_df": [284, 309], "extended_signific": [284, 309], "covariate_effect": [284, 290, 307, 309], "ofv_summari": [284, 309], "candidate_summari": [284, 309], "n_test": [284, 309], "n_ok": [284, 309], "n_localmin": [284, 309], "n_fail": [284, 309], "stepinclud": [284, 309], "estimation_ofv": 285, "prediction_ofv": 285, "545": 285, "863847": 285, "186": 285, "192727": 285, "512": 285, "953185": 285, "694832": 285, "547": 285, "843632": 285, "184": [285, 305, 309], "022535": 285, "579": 285, "109635": 285, "596550": 285, "prediction_ofv_sum": 285, "747": 285, "506644594254": 285, "read_raw_dataset": 286, "sever": [286, 291, 299, 307], "examin": [286, 289, 291, 312], "di": 286, "role": 286, "identif": [286, 308], "mostli": [286, 287, 304], "steven": 286, "typologi": 286, "en": [286, 287, 290], "wikipedia": 286, "wiki": [286, 295], "level_of_measur": 286, "annot": 286, "kg": 286, "mg": 286, "l": 286, "low": [286, 299, 312], "understand": [286, 303], "accompani": [286, 295], "runner": 286, "testdata": [286, 298], "arrai": [286, 297, 299, 311], "And": [286, 295, 299, 311], "under": [287, 293, 295, 309, 313], "construct": [287, 303], "complet": 287, "four": 287, "distinct": 287, "layer": [287, 300, 302], "worklow": 287, "higher": [287, 293, 297, 299, 310], "coupl": 287, "mathemat": [287, 297, 304], "concid": 287, "live": 287, "namespac": 287, "mutablesequ": 287, "scalar": [287, 297], "element": [287, 298, 313], "concern": [287, 295], "expos": 287, "numpydoc": 287, "readthedoc": 287, "ecosystem": 287, "thu": [287, 292, 295, 297, 311], "wrap": 287, "share": [287, 295, 302], "leak": 287, "third": [287, 295], "parti": [287, 295], "break": 287, "run_estmethod": 289, "chapter": [289, 300], "few": 289, "cartesian": 289, "addition": [289, 300, 311], "9999": 289, "runtime_estim": 289, "estmethod_run2": 289, "2422": 289, "465718": 289, "81": [289, 292, 298], "estmethod_run1": 289, "2271": 289, "769243": 289, "run_typ": 289, "1299": [289, 294], "696027": 289, "2420": 289, "117263": 289, "145": 289, "2702": 289, "1840": 289, "3241": 289, "6578": 289, "iiv_cl_estim": [289, 294, 308], "iiv_vc_estim": [289, 294, 308], "481858": [289, 292, 294, 300], "593654": [289, 292, 294, 300], "439589": 289, "483291": 289, "598179": 289, "901289": 289, "419533": 289, "408292": 289, "iiv_mat_estim": [289, 294, 308], "000130": [289, 294, 300], "322572": 289, "197647": 289, "865979": 289, "105366": 289, "10000": 289, "787": 289, "WITH": [289, 292, 294, 295], "THE": [289, 292, 294, 295], "creation": 290, "model_3b": 290, "u": [290, 299], "eta_i": 290, "n_": 290, "par": [290, 297], "eta_k": 290, "bmatrix": 290, "vdot": 290, "eta_": [290, 297, 299], "sim": [290, 297, 299, 310], "mathcal": [290, 297, 299], "mu_2": 290, "omega_": [290, 297], "n1": 290, "n2": 290, "ddot": 290, "latter": 290, "partit": 290, "5th": 290, "630859": 290, "868770": 290, "176754": 290, "95th": 290, "925602": 290, "082310": 290, "244607": 290, "569077": 290, "600360": 290, "632538": 290, "532478": 290, "824355": 290, "138312": 290, "577861": 290, "761430": 290, "991915": 290, "003863": 290, "148763": 290, "297579": 290, "600771": 290, "631260": 290, "661025": 290, "315965": 290, "549669": 290, "811532": 290, "margin": 290, "ij": 290, "ijk": 290, "omega_k": 290, "sigma_1": 290, "sigma_2": 290, "sigma_i": 290, "turn": [290, 297], "percent": 290, "red": 290, "figur": 290, "vconcatchart": 290, "sigma_": [290, 297], "020503": 290, "628814": 290, "009309": 290, "544459": 290, "026950": 290, "613127": 290, "050396": 290, "551581": 290, "individual_effect": 290, "913307": 290, "899565": 290, "923297": 290, "939015": 290, "926632": 290, "948404": 290, "933506": 290, "894967": 290, "970755": 290, "010192": 290, "973823": 290, "047109": 290, "992728": 290, "986142": 290, "999404": 290, "361911": 290, "322628": 290, "418737": 290, "894772": 290, "868658": 290, "917333": 290, "947797": 290, "923656": 290, "969732": 290, "771958": 290, "748072": 290, "790423": 290, "790120": 290, "768277": 290, "806911": 290, "percentu": 290, "unexplained_vari": 290, "sd_observ": 290, "sd_5th": 290, "sd_95th": 290, "469535": 290, "359934": 290, "547612": 290, "465490": 290, "352335": 290, "538174": 290, "165502": 290, "141580": 290, "190726": 290, "159149": 290, "134989": 290, "183613": 290, "420471": 290, "327104": 290, "490419": 290, "404440": 290, "306148": 290, "467046": 290, "143317": 290, "122348": 290, "166012": 290, "141826": 290, "120282": 290, "163610": 290, "percetil": 290, "025328": 290, "022571": 290, "020115": 290, "216681": 290, "188254": 290, "163572": 290, "027391": 290, "021634": 290, "020540": 290, "intermedi": 290, "model_4": [290, 297], "parameter_inits_and_estim": 290, "model_3": 290, "115195": 290, "007066": 290, "209016": 290, "125999": 290, "020191": 290, "224959": 290, "126000": 290, "007084": 290, "38635": 290, "220463": 290, "195326": 290, "176796": 290, "bsv_apgr": [290, 297], "010583": 290, "107027": 290, "000008": 290, "171529": 290, "404278": 290, "012042": 290, "115427": 290, "000032": 290, "208475": 290, "415588": 290, "000030": 290, "062712": 290, "117271": 290, "039930": 290, "446939": 290, "402075": 290, "bsv_wgt": [290, 297], "244579": 290, "244448": 290, "002173": 290, "002170": 290, "244080": 290, "007763": 290, "007760": 290, "249237": 290, "034610": 290, "015250": 290, "relative_chang": 290, "773218": 290, "095327": 290, "520526": 290, "271369": 290, "110618": 290, "974324": 290, "657803": 290, "852": 290, "803483": 290, "753": 290, "302743": 290, "themselv": 290, "ideal": 290, "estimated_covari": 290, "stdev": 290, "423728": 290, "237640": 290, "525424": 290, "704565": [290, 299], "nyberg": 290, "hb": 290, "jonsson": 290, "mo": 290, "introduct": 290, "cpt": 290, "pharmacometr": [290, 293, 295, 311], "syst": 290, "pharmacol": 290, "1002": 290, "psp4": 290, "12741": 290, "plan": 291, "stabl": 291, "googl": [291, 304], "coral": 291, "repo": 291, "tflite_runtim": 291, "nonlinear": 291, "read_model_result": 292, "aspect": [292, 299, 307, 311], "explor": [292, 304], "naiv": 292, "minima": 292, "\u03b4ofv": [292, 294, 300], "\u03b4aic": [292, 294, 300], "\u03b4bic": [292, 294, 300], "iivsearch_no_of_etas_candidate3": 292, "282024": 292, "iivsearch_no_of_etas_candidate2": 292, "217": 292, "691571": 292, "iivsearch_no_of_etas_candidate6": 292, "385": 292, "641987": 292, "iivsearch_no_of_etas_candidate1": 292, "631": 292, "871991": 292, "iivsearch_no_of_etas_candidate5": 292, "633": [292, 298], "419500": 292, "iivsearch_no_of_etas_candidate4": 292, "815": 292, "076729": 292, "iivsearch_no_of_etas_candidate7": 292, "834": 292, "249063": 292, "iivsearch_block_structure_candidate1": 292, "971960": 292, "1283": 292, "597406": 292, "1279": 292, "315382": 292, "1061": 292, "623812": 292, "673395": 292, "443392": 292, "645": 292, "895882": 292, "464": 292, "238653": 292, "066319": 292, "1365": 292, "569365": 292, "178325": 292, "1280": 292, "1278": [292, 300], "1070": 292, "204731": 292, "1058": 292, "897": 292, "963854": 292, "024311": 292, "644": 292, "650": 292, "186341": 292, "640": 292, "468": 292, "529112": 292, "458": 292, "437": 292, "440744": 292, "1364": 292, "1261": [292, 294], "189012": 292, "1259": [292, 300], "530267": [292, 300], "1039": 292, "215418": [292, 309], "641723": 292, "034998": 292, "620": 292, "864210": 292, "206982": 292, "417": 292, "411370": 292, "160972": 292, "5333": 292, "0366": 292, "1164": 292, "2929": 292, "8058": 292, "9055": 292, "2270": 292, "9424": 292, "1360": 292, "239": 292, "1090": 292, "234": 292, "6680": 292, "9380": 292, "6690": 292, "9880": 292, "433544": 292, "114210": 292, "347648": 292, "316164": 292, "310155": 292, "922906": 292, "434563": 292, "436279": 292, "481830": 292, "594777": 292, "396159": 292, "516927": 292, "593578": 292, "414690": 292, "247930": 292, "656304": 292, "00013": 292, "31998": 292, "08352": 292, "43473": 292, "209975": 292, "401593": 292, "574966": 292, "736398": 292, "750954": 292, "744891": 292, "810669": 292, "215885": 292, "iiv_cl_iiv_vc_estim": 292, "498114": 292, "965311": 292, "348227": 292, "596114": 292, "524856": 292, "831038": 292, "973037": 292, "826292": 292, "168816": 292, "275494": 292, "612863": 292, "081253": 292, "444919": 292, "093815": 292, "067016": 292, "554482": 292, "103963": 292, "060027": 292, "670815": 292, "108198": 292, "049148": 292, "371": 292, "rxode2": [293, 299], "post": [293, 308], "sens": 294, "brute": 294, "approach": 294, "nonzero": 294, "constant": 294, "540508": 294, "1265": 294, "694052": 294, "230772": 294, "384316": 294, "230394": 294, "383938": 294, "1262": 294, "153544": 294, "750000": 294, "403544": 294, "750400": 294, "403145": 294, "060114": 294, "093431": 294, "043077": 294, "1257": 294, "110467": 294, "782429": 294, "1115": 294, "911624": 294, "015062": 294, "707566": 294, "017679": 294, "017280": 294, "707992": 294, "707614": 294, "017728": 294, "1145": 294, "944840": 294, "230": 294, "1954": 294, "242": [294, 305, 307], "440613": 294, "665": 294, "439784": 294, "1951": 294, "241": 294, "1950": 294, "440611": 294, "1402": 294, "439785": 294, "439783": 294, "2313": 294, "438628": 294, "474140": 294, "586866": 294, "311861": 294, "472835": 294, "590422": 294, "320387": 294, "474125": 294, "586859": 294, "311859": 294, "474111": 294, "586860": 294, "311903": 294, "590425": 294, "320393": 294, "472840": 294, "590424": 294, "320395": 294, "572627": 294, "290631": 294, "194680": 294, "002735": 294, "195532": 294, "194676": 294, "194675": 294, "195531": 294, "197005": 294, "483460": 294, "000006": 294, "000000e": [294, 309], "241921": 294, "119820": 294, "001912": 294, "068405": 294, "121866": 294, "620420": 294, "271367": 294, "291396": 294, "230854": 294, "051358": 294, "936871": 294, "267222": 294, "042977": 294, "050766": 294, "059323": 294, "250083": 294, "291876": 294, "187631": 294, "020838": 294, "612880": 294, "660334": 294, "657": 294, "279": [294, 305], "adopt": 295, "wikimedia": 295, "bowl_of_hygieia_by_david": 295, "svg": 295, "cc": 295, "BY": 295, "sa": 295, "font": 295, "pt": 295, "san": 295, "relicens": 295, "lgpl": 295, "know": 295, "maintaint": 295, "softwar": [295, 297, 298, 299, 304, 311], "redistribut": 295, "publish": 295, "foundat": 295, "hope": 295, "warranti": 295, "impli": 295, "merchant": 295, "FOR": 295, "modif": [295, 307], "permit": 295, "retain": 295, "disclaim": 295, "reproduc": 295, "materi": 295, "holder": 295, "AND": 295, "AS": 295, "OR": 295, "BUT": 295, "NOT": 295, "TO": 295, "OF": 295, "IN": 295, "shall": 295, "BE": 295, "liabl": 295, "indirect": 295, "incident": 295, "exemplari": 295, "consequenti": 295, "damag": 295, "procur": 295, "good": 295, "servic": 295, "loss": 295, "profit": 295, "busi": 295, "interrupt": 295, "ON": 295, "theori": [295, 297], "liabil": 295, "contract": 295, "tort": 295, "neglig": 295, "aris": 295, "advis": 295, "SUCH": 295, "june": 295, "2007": 295, "inc": 295, "fsf": 295, "preambl": 295, "copyleft": 295, "practic": 295, "design": [295, 297, 304, 311], "awai": 295, "contrast": 295, "guarante": 295, "speak": 295, "price": 295, "charg": 295, "wish": 295, "piec": 295, "prevent": 295, "deni": 295, "ask": [295, 313], "surrend": 295, "therefor": 295, "respons": 295, "grati": 295, "fee": 295, "recipi": 295, "gpl": 295, "assert": 295, "offer": [295, 299], "permiss": 295, "clearli": 295, "sake": 295, "erron": 295, "devic": 295, "although": 295, "manufactur": 295, "fundament": 295, "incompat": 295, "aim": [295, 307], "systemat": 295, "abus": 295, "area": [295, 304], "unaccept": 295, "prohibit": 295, "substanti": 295, "domain": [295, 302, 311], "stand": 295, "readi": 295, "provis": 295, "futur": 295, "threaten": 295, "constantli": 295, "patent": 295, "danger": 295, "proprietari": 295, "assur": 295, "law": 295, "semiconductor": 295, "mask": 295, "license": 295, "address": 295, "organ": [295, 297], "fashion": 295, "exact": 295, "earlier": 295, "cover": [295, 300, 301, 303, 312], "unmodifi": 295, "propag": 295, "secondarili": 295, "infring": 295, "countri": 295, "convei": 295, "mere": 295, "network": 295, "transfer": 295, "extent": 295, "conveni": [295, 297], "promin": 295, "visibl": 295, "menu": 295, "criterion": 295, "offici": 295, "wide": 295, "among": 295, "essenti": 295, "kernel": 295, "script": [295, 311], "link": [295, 308], "subprogram": 295, "intim": 295, "regener": 295, "grant": 295, "irrevoc": 295, "affirm": 295, "unlimit": 295, "constitut": 295, "fair": 295, "equival": [295, 311], "sole": 295, "facil": 295, "compli": 295, "behalf": 295, "relationship": [295, 309], "circumst": 295, "sublicens": 295, "anti": 295, "circumvent": 295, "deem": 295, "technolog": 295, "fulfil": 295, "oblig": 295, "articl": 295, "wipo": 295, "treati": 295, "decemb": 295, "1996": 295, "waiv": 295, "forbid": 295, "exercis": 295, "intent": 295, "enforc": 295, "medium": [295, 304], "conspicu": 295, "intact": 295, "absenc": 295, "along": 295, "relev": [295, 301, 311], "anyon": 295, "who": [295, 301], "possess": 295, "invalid": 295, "natur": 295, "storag": 295, "aggreg": 295, "beyond": 295, "embodi": 295, "durabl": 295, "customarili": 295, "interchang": 295, "spare": 295, "reason": [295, 304], "cost": 295, "server": 295, "occasion": 295, "noncommerci": 295, "subsect": 295, "6b": 295, "further": [295, 297], "clear": [295, 313], "sai": [295, 301], "host": 295, "satisfi": 295, "peer": 295, "transmiss": 295, "6d": 295, "portion": 295, "consum": 295, "tangibl": 295, "household": 295, "sold": 295, "incorpor": 295, "dwell": 295, "doubt": 295, "resolv": [295, 302], "favor": 295, "coverag": 295, "typic": [295, 311], "commerci": 295, "industri": 295, "procedur": 295, "suffic": 295, "interf": 295, "perpetu": 295, "character": 295, "But": 295, "nor": 295, "abil": 295, "rom": 295, "advers": 295, "protocol": 295, "publicli": 295, "password": 295, "unpack": 295, "supplement": 295, "govern": 295, "notwithstand": 295, "misrepresent": 295, "licensor": 295, "declin": 295, "trademark": 295, "trade": 295, "indemnif": 295, "contractu": 295, "impos": 295, "surviv": 295, "termin": 295, "expressli": 295, "void": 295, "paragraph": 295, "ceas": 295, "reinstat": 295, "provision": 295, "perman": 295, "notifi": 295, "prior": 295, "dai": 295, "cessat": 295, "moreov": 295, "cure": 295, "receipt": 295, "qualifi": 295, "ancillari": 295, "consequ": 295, "likewis": 295, "downstream": 295, "complianc": 295, "entiti": 295, "asset": 295, "subdivid": 295, "plu": 295, "effort": 295, "royalti": 295, "litig": 295, "claim": 295, "counterclaim": 295, "lawsuit": 295, "alleg": 295, "sell": 295, "sale": 295, "acquir": 295, "hereaft": 295, "manner": [295, 300], "worldwid": 295, "agreement": 295, "denomin": 295, "coven": 295, "sue": 295, "knowingli": 295, "readili": 295, "arrang": 295, "depriv": 295, "yourself": 295, "benefit": [295, 304], "knowledg": 295, "believ": 295, "pursuant": 295, "convey": 295, "discriminatori": 295, "scope": 295, "payment": 295, "primarili": 295, "march": 295, "constru": 295, "defens": 295, "court": 295, "contradict": 295, "excus": 295, "simultan": [295, 300], "pertin": 295, "agre": 295, "whom": 295, "refrain": 295, "affero": 295, "revis": 295, "Such": 295, "spirit": 295, "ever": 295, "THERE": 295, "qualiti": 295, "prove": 295, "defect": 295, "repair": 295, "WILL": 295, "inabl": 295, "BEING": 295, "inaccur": 295, "sustain": 295, "failur": [295, 304], "review": 295, "waiver": 295, "civil": 295, "greatest": 295, "achiev": 295, "attach": 295, "safest": 295, "pointer": 295, "brief": 295, "idea": [295, 304], "electron": 295, "paper": 295, "hypothet": 295, "Of": 295, "cours": 295, "gui": 295, "box": [295, 307], "employ": 295, "programm": 295, "school": 295, "philosophi": 295, "why": 295, "7b2feb6f20b626a559d3150f6638c111f20b5213": 295, "lin_evalu": 296, "lin_estim": 296, "268756": 296, "problemat": 296, "947354": 296, "939053": 296, "008301": 296, "970582": 296, "012053": 296, "041471": 296, "982345": 296, "979456": 296, "002889": 296, "457096": 296, "435700": 296, "021396": 296, "839445": 296, "838391": 296, "001054": 296, "257222": 296, "278016": 296, "020794": 296, "098344": 296, "077164": 296, "021179": 296, "538623": 296, "520111": 296, "018512": 296, "647972": 296, "673400": 296, "025427": 296, "394648": 296, "373180": 296, "021468": 296, "480163": 296, "505680": 296, "025517": 296, "650236": 296, "629298": 296, "020938": 296, "991406": [296, 298], "988587": 296, "002820": 296, "378873": 296, "372846": 296, "006028": 296, "739906": 296, "725640": 296, "014265": 296, "328801": 296, "326482": 296, "002319": 296, "113286": 296, "104515": 296, "008771": 296, "212076": 296, "325127": 296, "113051": 296, "334048": 296, "321306": 296, "012742": 296, "327782": 296, "306287": 296, "021495": 296, "821537": 296, "795371": 296, "026165": 296, "631283": 296, "620311": 296, "010972": 296, "861666": 296, "855927": 296, "005739": 296, "915260": 296, "913348": 296, "001913": 296, "988972": 296, "024483": 296, "035512": 296, "279274": 296, "269277": 296, "009997": 296, "733179": 296, "729199": 296, "003980": 296, "830055": 296, "827764": 296, "002290": 296, "851725": 296, "847176": 296, "004549": 296, "212098": 296, "192122": 296, "019976": 296, "774789": 296, "773559": 296, "001230": 296, "352292": 296, "351131": 296, "001162": 296, "172644": 296, "165200": 296, "007443": 296, "427375": 296, "420258": 296, "007117": 296, "381438": 296, "412378": 296, "030941": 296, "624011": 296, "614613": 296, "009397": 296, "970630": 296, "955216": 296, "015414": 296, "177025": 296, "002885": 296, "206543": 296, "180626": 296, "025916": 296, "955033": 296, "945036": 296, "982451": 296, "972114": 296, "010337": 296, "051495": 296, "098643": 296, "047147": 296, "424500": 296, "425925": 296, "001425": 296, "734347": 296, "702764": 296, "031583": 296, "018483": 296, "997957": 296, "020526": 296, "810285": [296, 298], "807205": 296, "003080": 296, "279257": 296, "276411": 296, "002846": 296, "168465": 296, "267932": 296, "099467": 296, "190512": 296, "178815": 296, "011697": 296, "749138": 296, "727859": 296, "021278": 296, "598562": 296, "616685": 296, "018123": 296, "237457": 296, "251607": 296, "014150": 296, "568928": 296, "581417": 296, "012489": 296, "800065": 296, "795239": 296, "004826": 296, "098027": 296, "103873": 296, "005846": 296, "586253": [296, 298], "582931": 296, "003323": 296, "663950": 296, "650298": 296, "013652": 296, "850995": 296, "833333": 296, "017662": 296, "605848": 296, "592551": 296, "013297": 296, "iofv_plot": 296, "At": 297, "heart": 297, "li": [297, 311], "subclass": 297, "principl": 297, "mymodel": [297, 299], "parset": 297, "displaystyl": [297, 299], "eps_": 297, "similarli": [297, 313], "theta_": 297, "s_": 297, "a_": [297, 299], "quit": 297, "flexibl": 297, "cumbersom": 297, "easili": 297, "unimport": 297, "frem_path": 297, "frem_model": 297, "frem_model_result": 297, "omega\u2082": 297, "omega\u2083": 297, "omega\u2084": 297, "\u2082": 297, "eta\u2083": 297, "\u2083": 297, "eta\u2084": 297, "eps\u2082": 297, "epscov": 297, "bsv_": 297, "omega_2_1": 297, "omega_3_1": 297, "omega_4_1": 297, "omega_3_2": 297, "omega_4_2": 297, "omega_4_3": 297, "000286193": 297, "0676481": 297, "0256033": 297, "0235094": 297, "00161838": 297, "24458": 297, "omega_est": 297, "0393482": 297, "0168369": 297, "0442286": 297, "0426757": 297, "0259374": 297, "0654878": 297, "00168063": 297, "983027": 297, "240423": 297, "98305": 297, "choleski": 297, "198363807182661": 297, "0848788911603008": 297, "136868454493349": 297, "222967085720797": 297, "616745467855979": 297, "743597812371906": 297, "215138540674925": 297, "145697201390566": 297, "508675383095755": 297, "810424017694199": 297, "pure": 297, "astyp": 297, "numeric64": 297, "linalg": 297, "19836381": 297, "08487889": 297, "13686845": 297, "22296709": 297, "61674547": 297, "74359781": 297, "21513854": 297, "1456972": 297, "50867538": 297, "81042402": 297, "esim": 298, "2760562818805": 298, "parameter_estimates_sdcorr": 298, "171321": 298, "167051": 298, "115069": 298, "Or": 298, "standard_errors_sdcorr": 298, "039153": 298, "022378": 298, "009904": 298, "relative_standard_error": 298, "044731": 298, "027325": 298, "527072": 298, "457068": 298, "267918": 298, "172147": 298, "proper": 298, "388058": 298, "356900": 298, "238442": 298, "096516": 298, "invers": 298, "29955600": 298, "400": 298, "910": 298, "267": 298, "039": 298, "809": 298, "520": 298, "980": 298, "200": 298, "450": 298, "947352": 298, "970591": 298, "982342": 298, "457091": 298, "839437": 298, "257230": 298, "098338": 298, "538621": 298, "647969": 298, "394643": 298, "480164": 298, "650233": 298, "378880": 298, "739902": 298, "328800": 298, "113284": 298, "212096": 298, "334047": 298, "327778": 298, "821533": 298, "631281": 298, "861669": 298, "915261": 298, "988977": 298, "279273": 298, "733181": 298, "830053": 298, "851724": 298, "212095": 298, "774791": 298, "352283": 298, "172643": 298, "427376": 298, "381444": 298, "624014": 298, "970627": 298, "177028": 298, "206540": 298, "955029": 298, "982447": 298, "051499": 298, "424503": 298, "734342": 298, "018477": 298, "279258": 298, "168486": 298, "190508": 298, "749134": 298, "598565": 298, "237467": 298, "568934": 298, "800062": 298, "098025": 298, "663948": 298, "850993": 298, "605845": 298, "143": 298, "045": [298, 305], "971": 298, "881": 298, "575": 298, "080": 298, "063": 298, "427": 298, "668": 298, "543": 298, "662": 298, "478": 298, "667": 298, "253": 298, "495": 298, "918": 298, "67071": 298, "401100": 298, "35080": 298, "587770": 298, "36360": 298, "278800": 298, "19730": 298, "670700": 298, "21710": 298, "352600": 298, "86050": 298, "067200": 298, "35060": 298, "059269": 298, "72100": 298, "036754": 298, "10860": 298, "814140": 298, "28180": 298, "699410": 298, "eb": 298, "043861": 298, "005430": 298, "166321": 298, "131833": 298, "095934": 298, "130868": 298, "009154": 298, "017388": 298, "102019": 298, "283500": 298, "019417": 298, "099839": 298, "045946": 298, "059072": 298, "024270": 298, "189351": 298, "248536": 298, "091872": 298, "009545": 298, "012052": 298, "066151": 298, "293685": 298, "030236": 298, "074789": 298, "094502": 298, "147433": 298, "076820": 298, "105604": 298, "020051": 298, "066265": 298, "086035": 298, "023260": 298, "067138": 298, "030859": 298, "337255": 298, "035532": 298, "032579": 298, "028410": 298, "003589": 298, "080613": 298, "060233": 298, "052854": 298, "004469": 298, "057344": 298, "051992": 298, "212941": 298, "137510": 298, "004111": 298, "023282": 298, "302636": 298, "039069": 298, "119442": 298, "044956": 298, "263320": 298, "000776": 298, "083231": 298, "003150": 298, "012752": 298, "049654": 298, "080932": 298, "000555": 298, "099614": 298, "061864": 298, "332738": 298, "038156": 298, "067641": 298, "038017": 298, "184137": 298, "156617": 298, "208753": 298, "114558": 298, "053036": 298, "008405": 298, "026004": 298, "144920": 298, "081646": 298, "083320": 298, "015380": 298, "000392": 298, "078062": 298, "018966": 298, "112030": 298, "112715": 298, "383786": 298, "001730": 298, "167583": 298, "042068": 298, "066598": 298, "037600": 298, "000093": 298, "010662": 298, "009775": 298, "058306": 298, "229005": 298, "033958": 298, "008959": 298, "092312": 298, "050987": 298, "192569": 298, "002727": 298, "225657": 298, "115824": 298, "204269": 298, "054792": 298, "066334": 298, "123689": 298, "239678": 298, "047215": 298, "186615": 298, "000949": 298, "010812": 298, "015929": 298, "017213": 298, "005234": 298, "122552": 298, "076677": 298, "095696": 298, "024883": 298, "002999": 298, "007157": 298, "inspect": [299, 312], "model_nlmixr": 299, "diff": [299, 304], "add_error": 299, "prop_error": 299, "focei": 299, "model_start": 299, "eta_vc": 299, "pop_vc": 299, "pop_": 299, "225": 299, "epsilon_": 299, "iiv_cl_iiv_vc": 299, "iiv_vc": 299, "\u03c3": 299, "iiv_mat": 299, "iiv_": 299, "advan2": 299, "THEN": 299, "22500000000000e": 299, "cond": 299, "maxev": 299, "99999": 299, "cipredi": 299, "mytab": 299, "tlag": 299, "alag1": 299, "pop_mdt": 299, "advan3": 299, "trans4": 299, "pop_qp1": 299, "pop_vp1": 299, "run4": 299, "tol": 299, "pop_clmm": 299, "pop_km": 299, "iiv_clmm": 299, "iiv_clmm_iiv_vc": 299, "iiv_cl_iiv_mat": 299, "iiv_vc_iiv_mat": 299, "0094868": 299, "onto": 299, "wgt_median": 299, "30000": 299, "clwgt": 299, "pop_clwgt": 299, "user_effect": 299, "wgt_std": 299, "add_population_paramet": 299, "unfix_parameters_to": 299, "\u03b5\u209a\u2081": 299, "p1": 299, "set_time_varying_error_model": [299, 308], "100000000000000": 299, "f_flag": 299, "f_": 299, "geq": 299, "get_id": 299, "get_mdv": 299, "largest": 299, "ser": 299, "delai": [300, 311], "grammar": [300, 304], "exhaustive_stepwis": 300, "obtain": 300, "basi": 300, "subsequ": [300, 301, 311], "modelsearch_candidate2": [300, 311], "594608": 300, "1272": 300, "124874": 300, "modelsearch_candidate3": [300, 311], "558028": 300, "088295": 300, "modelsearch_candidate4": [300, 311], "956313": 300, "1270": 300, "486580": 300, "287000": 300, "1260": 300, "817266": 300, "362287": 300, "1327": 300, "153182": 300, "1325": 300, "551467": 300, "1307": 300, "301235": 300, "1295": 300, "1305": 300, "1289": 300, "2927": 300, "4334": 300, "7778": 300, "0058": 300, "1640": 300, "260324": 300, "7646": 300, "824443": 300, "5477": 300, "607839": 300, "1147": 300, "842498": 300, "470974": 300, "595276": 300, "526185": 300, "930160": 300, "495109": 300, "322680": 300, "470531": 300, "515250": 300, "312692": 300, "194221": 300, "202201": 300, "207885": 300, "232322": 300, "199750": 300, "205369": 300, "193439": 300, "pop_qp1_estim": 300, "pop_vp1_estim": 300, "pop_mdt_estim": 300, "155413": 300, "4192": 300, "6100": 300, "172730": 300, "3977": 300, "4562": 300, "158070": 300, "8042": 300, "8517": 300, "iiv_mdt_estim": 300, "156289": 300, "192020": 300, "092419": 300, "262429": 300, "720369": 300, "464263": 300, "127061": 300, "906722": 300, "053781": 300, "923055": 300, "795863": 300, "030658": 300, "661330": 300, "168680": 300, "833073": 300, "041529": 300, "205858": 300, "064930": 300, "609673": 300, "396329": 300, "928556": 300, "365": 300, "330": 300, "topic": 301, "scheme": 301, "theta_cl": 301, "mention": 301, "ve": 301, "despit": 301, "write_etas_in_abbr": 301, "altair": [302, 304], "vega": 302, "lite": 302, "ggplot": 302, "editor": 302, "clamp": 302, "vconcat": 302, "spec": 302, "inten": 303, "export": 303, "strictli": 303, "necessesari": 303, "detect_model": 303, "summer": 304, "master": 304, "thesi": 304, "internship": 304, "email": 304, "team": 304, "tox": 304, "pytest": 304, "sphinx": 304, "wise": 304, "known": 304, "trial": 304, "involv": 304, "outcom": 304, "350h": 304, "difficulti": 304, "mentor": 304, "scipi": 304, "focu": 304, "proof": 304, "concept": 304, "algebra": 304, "simul": [304, 310], "scratch": 304, "lark": 304, "earlei": 304, "lalr": 304, "stricter": 304, "175h": 304, "almost": 304, "compat": 304, "benefici": 304, "easi": 304, "potenti": 304, "eas": 304, "jupyt": 304, "holoview": 304, "bokeh": 304, "monitor": 304, "ongo": 304, "veri": 304, "happen": [304, 313], "converg": 304, "sort": [304, 311], "dashboard": 304, "complement": 304, "realtim": 304, "restart": [304, 313], "middl": 304, "worflow": 304, "cv": [305, 307], "772": [305, 307], "700": 305, "042": [305, 307], "sdeps_0": [305, 307], "t1": 305, "298": 305, "sdeps_t1": 305, "t2": 305, "886": 305, "sdeps_t2": 305, "t3": 305, "272": 305, "sdeps_t3": 305, "t4": 305, "716": 305, "sdeps_t4": 305, "t5": 305, "218": 305, "sdeps_t5": 305, "t6": 305, "928": 305, "sdeps_t6": 305, "t7": 305, "092": 305, "sdeps_t7": 305, "t8": 305, "914": 305, "sdeps_t8": 305, "t9": 305, "sdeps_t9": 305, "390": [305, 307], "159": [305, 307], "t0": [305, 307], "271": [305, 307], "sdeps_t0": [305, 307], "956": [305, 307], "717": 305, "014": 305, "983": 305, "884": 305, "017": 305, "955": 305, "958": 305, "969": 305, "933": 305, "022": 305, "819": 305, "007": 305, "755": 305, "982": 305, "387": 305, "th_0": 305, "257": 305, "867": 305, "th_t1": 305, "211": 305, "th_t2": 305, "277": 305, "761": 305, "th_t3": 305, "033": 305, "th_t4": 305, "367": 305, "th_t5": 305, "204": 305, "170": 305, "th_t6": 305, "078": 305, "th_t7": 305, "841": 305, "th_t8": 305, "th_t9": 305, "030": 305, "124": 305, "289": 305, "386": 305, "203": 305, "019": 305, "delta_pow": [305, 307], "037": [305, 307], "autocorrel": [305, 307], "dtb": [305, 307], "91": [305, 307], "idv_varying_ruv": 305, "idv_varying_ruv_cutoff0": 305, "idv_varying_ruv_cutoff1": 305, "idv_varying_ruv_cutoff2": 305, "idv_varying_ruv_cutoff3": 305, "idv_varying_ruv_cutoff4": 305, "idv_varying_ruv_cutoff5": 305, "idv_varying_ruv_cutoff6": 305, "idv_varying_ruv_cutoff7": 305, "idv_varying_ruv_cutoff8": 305, "idv_varying_combin": 305, "idv_varying_theta": 305, "sdep": 305, "delet": 306, "diagnost": 306, "impact": 307, "improement": 307, "592698": 307, "197887": 307, "007493": 307, "521171": 307, "et1apgr": 307, "487930": 307, "residual_error_model": 307, "910000": 307, "030000": 307, "diagnos": 307, "structural_bia": 307, "cpred": 307, "binmin": 307, "binmax": 307, "binid": 307, "258": 307, "strutur": 307, "mdel": 307, "fullblock_paramet": 307, "183463": 307, "171306": 307, "554610": 307, "154408": 307, "167053": 307, "cox": 307, "boxcox_paramet": 307, "shape": 307, "new_sd": 307, "old_sd": 307, "922083": 307, "182037": 307, "332800": 307, "166021": 307, "tdist_paramet": 307, "79": 307, "9997": 307, "168477": 307, "9986": 307, "166469": 307, "residual_error": 307, "additional_paramet": 307, "coeff": 307, "48793": 307, "033334": 307, "48218": 307, "052342": 307, "59034": 307, "008371": 307, "00887": 307, "003273": 307, "ibrahim": 308, "quickli": [308, 311], "inde": 308, "cwres_model": 308, "479721": 308, "385268": 308, "002792": 308, "time_varying1": 308, "117041": 308, "555154": 308, "time_varying3": 308, "336641": 308, "091207": 308, "065738": 308, "654562": 308, "046578": 308, "519115": 308, "612710": 308, "643741": 308, "027766": 308, "sigma_add": 308, "000367": 308, "sigma_prop": 308, "967365": 308, "00123": 308, "0976": 308, "12252": 308, "14299": 308, "000337": 308, "05242": 308, "006105": 308, "10545": 308, "12659": 308, "15573": 308, "00054": 308, "04769": 308, "030825": 308, "mox3": 308, "2460": 308, "704469": 308, "957378": 308, "2473": 308, "661847": 308, "269102": 308, "2495": 308, "973571": 308, "2444": 308, "2455": 308, "2475": 308, "2423": 308, "757516": 308, "2435": 308, "047712": 308, "2453": 308, "068976": 308, "707": 308, "5434": 308, "531596": 308, "794": 308, "3091": 308, "528620": 308, "3094": 308, "532547": 308, "iiv_vc_iiv_cl_estim": 308, "077743": 308, "038888": 308, "076793": 308, "039924": 308, "071628": 308, "038470": 308, "072309": 308, "704770": 308, "093311": 308, "074889": 308, "707665": 308, "081095": 308, "075048": 308, "705429": 308, "044311": 308, "iiv_ruv1_estim": 308, "time_varying_estim": 308, "039675": 308, "040734": 308, "42509": 308, "215727": 308, "655144": 308, "708324": 308, "762729": 308, "236530": 308, "229762": 308, "715966": 308, "423148": 308, "419741": 308, "774540": 308, "164274": 308, "450202": 308, "195425": 308, "960585": 308, "090461": 308, "848498": 308, "052021": 308, "239462": 308, "065148": 308, "571348": 308, "244582": 308, "161981": 308, "509910": 308, "373696": 308, "084489": 308, "647643": 308, "344772": 308, "083776": 308, "259395": 308, "101415": 308, "024651": 308, "443542": 308, "124023": 308, "183089": 308, "977222": 308, "219": 308, "moustafa": 308, "m": 308, "maria": 308, "kjellsson": 308, "aap": 308, "1208": 308, "s12248": 308, "018": 308, "0240": 308, "pha": 309, "219210": 309, "90878": 309, "219167": 309, "36222": 309, "bmi": 309, "219171": 309, "47564": 309, "cycll": 309, "219203": 309, "94536": 309, "diag": 309, "219206": 309, "01527": 309, "disdur": 309, "219032": 309, "86056": 309, "215321": 309, "70954": 309, "215306": 309, "67698": 309, "phia": 309, "men": 309, "215407": 309, "40295": 309, "phib": 309, "georeg": 309, "215373": 309, "77800": 309, "216968": 309, "25989": 309, "slp": 309, "215359": 309, "18150": 309, "54656": 309, "140000e": 309, "43314": 309, "390000e": 309, "96342": 309, "319000e": 309, "89351": 309, "695800e": 309, "178": 309, "04822": 309, "290000e": 309, "03256": 309, "060000e": 309, "72597": 309, "10102": 309, "580000e": 309, "1661": 309, "58291": 309, "50452": 309, "phaag": 309, "phabmi": 309, "phacycl": 309, "phadiag": 309, "phadisdur": 309, "backward_scm_dir1": 309, "phawt": 309, "phiamen": 309, "phibgeoreg": 309, "phibmen": 309, "slpgeoreg": 309, "304": 309, "beween": 309, "slightli": 309, "215961": 309, "46277": 309, "3249": 309, "44601": 309, "215748": 309, "07194": 309, "213": 309, "39083": 309, "215570": 309, "57352": 309, "49842": 309, "215486": 309, "23440": 309, "33912": 309, "87007": 309, "36433": 309, "215357": 309, "74693": 309, "61": 309, "12314": 309, "215337": 309, "95044": 309, "79649": 309, "24090": 309, "215332": 309, "91461": 309, "23763": 309, "67861": 309, "00163": 309, "215450": 309, "74783": 309, "07085": 309, "215491": 309, "11568": 309, "43870": 309, "500000e": 309, "700000e": 309, "170000e": 309, "260000e": 309, "360000e": 309, "600000e": 309, "020000e": 309, "620000e": 309, "430000e": 309, "200000e": 309, "lbest": 309, "cpl": 309, "165042": 310, "995045": 310, "575351": 310, "921633": 310, "488686": 310, "230120": 310, "083424": 310, "482883": 310, "300884": 310, "946876": 310, "824880": 310, "027733": 310, "180960": 310, "005653": 310, "928279": 310, "604188": 310, "916884": 310, "654589": 310, "364078": 310, "098483": 310, "795252": 310, "467337": 310, "638247": 310, "370783": 310, "351839": 310, "706108": 310, "078494": 310, "472019": 310, "136159": 310, "957716": 310, "221459": 310, "916754": 310, "823449": 310, "318875": 310, "151210": 310, "664634": 310, "135159": 310, "136767": 310, "405150": 310, "526828": 310, "551158": 310, "527835": 310, "562788": 310, "488282": 310, "406903": 310, "293600": 310, "796073": 310, "615899": 310, "328937": 310, "736463": 310, "892761": 310, "376893": 310, "486179": 310, "818812": 310, "929665": 310, "061750": 310, "849137": 310, "114640": 310, "121901": 310, "446579": 310, "247238": 310, "925921": 310, "423537": 310, "408347": 310, "512627": 310, "615092": 310, "484284": 310, "962122": 310, "705806": 310, "867625": 310, "842566": 310, "018308": 310, "114753": 310, "086333": 310, "056381": 310, "078385": 310, "638560": 310, "664954": 310, "178961": 310, "603301": 310, "449888": 310, "882876": 310, "622712": 310, "282087": 310, "238692": 310, "748996": 310, "138213": 310, "037941": 310, "361556": 310, "678095": 310, "713778": 310, "272954": 310, "929655": 310, "708577": 310, "422555": 310, "166879": 310, "335429": 310, "421235": 310, "563473": 310, "989005": 310, "266944": 310, "567697": 310, "461262": 310, "480043": 310, "959843": 310, "621329": 310, "212573": 310, "388393": 310, "501489": 310, "300601": 310, "811596": 310, "110075": 310, "003027": 310, "277388": 310, "219194": 310, "570879": 310, "786560": 310, "905147": 310, "380865": 310, "366018": 310, "630512": 310, "351180": 310, "612812": 310, "534496": 310, "546036": 310, "961895": 310, "816485": 310, "806204": 310, "584818": 310, "900845": 310, "682987": 310, "231970": 310, "776532": 310, "998400": 310, "892200": 310, "749003": 310, "802797": 310, "988276": 310, "015416": 310, "225727": 310, "018880": 310, "196823": 310, "662582": 310, "725509": 310, "838099": 310, "348921": 310, "250063": 310, "851698": 310, "488859": 310, "212538": 310, "297823": 310, "382526": 310, "944073": 310, "429352": 310, "743671": 310, "140249": 310, "409142": 310, "857266": 310, "485191": 310, "191840": 310, "880881": 310, "659430": 310, "755737": 310, "002572": 310, "733704": 310, "956378": 310, "630846": 310, "775355": 310, "851982": 310, "151243": 310, "707700": 310, "668763": 310, "483346": 310, "794788": 310, "401748": 310, "931900": 310, "538437": 310, "455902": 310, "793645": 310, "382384": 310, "926835": 310, "376121": 310, "196475": 310, "425364": 310, "928532": 310, "498709": 310, "985533": 310, "372391": 310, "848184": 310, "030662": 310, "366585": 310, "497867": 310, "551558": 310, "826862": 310, "572217": 310, "662370": 310, "551208": 310, "565811": 310, "042324": 310, "119652": 310, "298009": 310, "580405": 310, "552114": 310, "630121": 310, "406685": 310, "134650": 310, "361844": 310, "275622": 310, "040276": 310, "035731": 310, "496993": 310, "266702": 310, "169391": 310, "155311": 310, "515088": 310, "957232": 310, "454421": 310, "868679": 310, "106708": 310, "363698": 310, "751915": 310, "361498": 310, "889492": 310, "982047": 310, "904024": 310, "434510": 310, "952586": 310, "024682": 310, "835458": 310, "169297": 310, "840067": 310, "073635": 310, "073683": 310, "575363": 310, "819836": 310, "856403": 310, "884553": 310, "169888": 310, "879430": 310, "253049": 310, "285544": 310, "118999": 310, "893425": 310, "564632": 310, "178975": 310, "497236": 310, "277992": 310, "509070": 310, "046265": 310, "695028": 310, "264764": 310, "765897": 310, "688954": 310, "324755": 310, "684344": 310, "516160": 310, "572606": 310, "586789": 310, "841335": 310, "394438": 310, "493584": 310, "916145": 310, "244786": 310, "249772": 310, "253768": 310, "119216": 310, "933397": 310, "744242": 310, "416676": 310, "659481": 310, "731451": 310, "448507": 310, "178177": 310, "269584": 310, "069317": 310, "936980": 310, "746436": 310, "518105": 310, "477206": 310, "716822": 310, "605768": 310, "763155": 310, "320820": 310, "408266": 310, "132983": 310, "125029": 310, "980420": 310, "686115": 310, "180204": 310, "337790": 310, "105503": 310, "583418": 310, "811144": 310, "043157": 310, "457112": 310, "195385": 310, "850645": 310, "363551": 310, "031564": 310, "225458": 310, "814145": 310, "016286": 310, "052073": 310, "892175": 310, "525306": 310, "699366": 310, "602344": 310, "846592": 310, "435102": 310, "242420": 310, "404922": 310, "509957": 310, "451814": 310, "243399": 310, "589215": 310, "512603": 310, "815026": 310, "481351": 310, "866250": 310, "933824": 310, "923185": 310, "175264": 310, "926077": 310, "495039": 310, "087071": 310, "824234": 310, "194473": 310, "944302": 310, "344235": 310, "573838": 310, "611250": 310, "903583": 310, "550825": 310, "735586": 310, "308617": 310, "749030": 310, "860290": 310, "501681": 310, "875052": 310, "556035": 310, "631308": 310, "941132": 310, "153441": 310, "372005": 310, "432371": 310, "874004": 310, "758791": 310, "193338": 310, "054769": 310, "357159": 310, "323449": 310, "133006": 310, "215148": 310, "853273": 310, "885525": 310, "860736": 310, "993262": 310, "533799": 310, "080061": 310, "568383": 310, "905658": 310, "322738": 310, "276361": 310, "376218": 310, "313336": 310, "546277": 310, "489785": 310, "898802": 310, "542369": 310, "058260": 310, "968860": 310, "773450": 310, "873918": 310, "775938": 310, "210594": 310, "600450": 310, "899285": 310, "793703": 310, "639544": 310, "104682": 310, "230477": 310, "330868": 310, "185132": 310, "354616": 310, "479966": 310, "438225": 310, "720261": 310, "884839": 310, "432346": 310, "924846": 310, "436720": 310, "367480": 310, "694969": 310, "024193": 310, "341680": 310, "054791": 310, "387386": 310, "548598": 310, "759167": 310, "864669": 310, "853355": 310, "424024": 310, "317393": 310, "280139": 310, "695800": 310, "413680": 310, "331177": 310, "631655": 310, "541680": 310, "704503": 310, "371773": 310, "758919": 310, "316351": 310, "026935": 310, "966413": 310, "814952": 310, "937635": 310, "009725": 310, "878300": 310, "715708": 310, "462408": 310, "459161": 310, "868224": 310, "383043": 310, "179394": 310, "260472": 310, "933191": 310, "676905": 310, "218010": 310, "398492": 310, "585174": 310, "956306": 310, "051986": 310, "191401": 310, "726349": 310, "445912": 310, "767349": 310, "553003": 310, "099846": 310, "876780": 310, "822404": 310, "846457": 310, "991350": 310, "924166": 310, "565671": 310, "207434": 310, "326447": 310, "115117": 310, "341361": 310, "434087": 310, "782192": 310, "806515": 310, "086788": 310, "599116": 310, "574493": 310, "296737": 310, "516464": 310, "831345": 310, "994987": 310, "574667": 310, "793265": 310, "901408": 310, "072216": 310, "874349": 310, "912201": 310, "693935": 310, "711150": 310, "676572": 310, "069326": 310, "905528": 310, "800871": 310, "954047": 310, "077897": 310, "186642": 310, "748099": 310, "731336": 310, "819544": 310, "773375": 310, "247095": 310, "504667": 310, "843029": 310, "762211": 310, "765259": 310, "455400": 310, "187278": 310, "056323": 310, "257409": 310, "502366": 310, "802175": 310, "370226": 310, "360000": 310, "305631": 310, "639042": 310, "597045": 310, "716192": 310, "544260": 310, "977219": 310, "400720": 310, "676934": 310, "022410": 310, "641421": 310, "974785": 310, "597599": 310, "424237": 310, "853009": 310, "886356": 310, "087082": 310, "098997": 310, "374133": 310, "712658": 310, "151935": 310, "963905": 310, "415675": 310, "044583": 310, "567520": 310, "351619": 310, "396594": 310, "360173": 310, "999275": 310, "255630": 310, "358567": 310, "414926": 310, "899880": 310, "408061": 310, "496109": 310, "907778": 310, "473731": 310, "297200": 310, "222423": 310, "362886": 310, "864820": 310, "606428": 310, "206488": 310, "988252": 310, "862927": 310, "693535": 310, "911020": 310, "517867": 310, "965455": 310, "764024": 310, "453899": 310, "346212": 310, "500103": 310, "133073": 310, "783555": 310, "462547": 310, "585654": 310, "027851": 310, "972480": 310, "036534": 310, "960296": 310, "402983": 310, "723710": 310, "378125": 310, "587323": 310, "032512": 310, "408322": 310, "269137": 310, "950516": 310, "788249": 310, "159667": 310, "448461": 310, "884049": 310, "777419": 310, "625663": 310, "541949": 310, "601504": 310, "416254": 310, "907322": 310, "371639": 310, "487277": 310, "418469": 310, "606033": 310, "663661": 310, "547459": 310, "675347": 310, "584165": 310, "500411": 310, "247584": 310, "271405": 310, "824837": 310, "881148": 310, "804622": 310, "876965": 310, "348849": 310, "366355": 310, "319025": 310, "885439": 310, "iofv_summari": 310, "orgin": 310, "ob": 310, "sampled_mean": 310, "sampled_stdev": 310, "residual_q1": 310, "743042": 310, "219056": 310, "682820": 310, "550173": 310, "035912": 310, "049484": 310, "184218": 310, "853744": 310, "006216": 310, "975298": 310, "041599": 310, "817153": 310, "833045": 310, "781196": 310, "154061": 310, "813525": 310, "398238": 310, "645044": 310, "535071": 310, "205425": 310, "092618": 310, "104527": 310, "106160": 310, "955250": 310, "058617": 310, "344659": 310, "355728": 310, "480441": 310, "205000": 310, "804075": 310, "093249": 310, "372011": 310, "653334": 310, "076303": 310, "579270": 310, "515891": 310, "726464": 310, "480796": 310, "226795": 310, "894556": 310, "321253": 310, "216333": 310, "282456": 310, "045968": 310, "751381": 310, "998817": 310, "568506": 310, "544129": 310, "725055": 310, "084491": 310, "216676": 310, "724839": 310, "269729": 310, "664468": 310, "086120": 310, "099508": 310, "844053": 310, "234199": 310, "780837": 310, "277342": 310, "322169": 310, "051428": 310, "923117": 310, "660772": 310, "466385": 310, "260479": 310, "909214": 310, "004430": 310, "115441": 310, "597439": 310, "671231": 310, "358037": 310, "499079": 310, "674971": 310, "086542": 310, "331370": 310, "633905": 310, "558617": 310, "085015": 310, "554653": 310, "936751": 310, "068515": 310, "800265": 310, "310055": 310, "124015": 310, "712276": 310, "729628": 310, "167439": 310, "715703": 310, "274087": 310, "019852": 310, "305414": 310, "613668": 310, "109257": 310, "443973": 310, "056317": 310, "238664": 310, "161298": 310, "229080": 310, "385458": 310, "248420": 310, "105258": 310, "155784": 310, "539027": 310, "615940": 310, "605320": 310, "132029": 310, "756164": 310, "869343": 310, "544161": 310, "814910": 310, "779158": 310, "268737": 310, "897306": 310, "707535": 310, "453306": 310, "105961": 310, "531367": 310, "507478": 310, "179203": 310, "964192": 310, "235433": 310, "534690": 310, "029698": 310, "870557": 310, "187065": 310, "049483": 310, "611648": 310, "535116": 310, "053927": 310, "077425": 310, "840121": 310, "621227": 310, "470444": 310, "449597": 310, "941064": 310, "849583": 310, "418397": 310, "769517": 310, "495183": 310, "074840": 310, "265168": 310, "489546": 310, "543569": 310, "924754": 310, "255799": 310, "423379": 310, "792450": 310, "651388": 310, "107140": 310, "103779": 310, "709601": 310, "655290": 310, "365991": 310, "222470": 310, "908651": 310, "744590": 310, "726324": 310, "426971": 310, "126409": 310, "743926": 310, "055593": 310, "673502": 310, "381335": 310, "618133": 310, "047349": 310, "322600": 310, "222872": 310, "042834": 310, "180077": 310, "430602": 310, "209284": 310, "495631": 310, "189252": 310, "623118": 310, "780755": 310, "405726": 310, "643222": 310, "836788": 310, "746180": 310, "378962": 310, "498420": 310, "745719": 310, "565835": 310, "016391": 310, "193803": 310, "882538": 310, "054206": 310, "416539": 310, "288743": 310, "598975": 310, "649295": 310, "743847": 310, "028856": 310, "860963": 310, "709391": 310, "906579": 310, "841825": 310, "571912": 310, "121771": 310, "219260": 310, "791821": 310, "756310": 310, "933335": 310, "360735": 310, "121911": 310, "657069": 310, "952413": 310, "311206": 310, "124618": 310, "229621": 310, "945504": 310, "493299": 310, "630288": 310, "415407": 310, "756085": 310, "131488": 310, "213636": 310, "050337": 310, "463633": 310, "980475": 310, "118333": 310, "749123": 310, "229958": 310, "025404": 310, "813878": 310, "738522": 310, "668408": 310, "112740": 310, "972107": 310, "235064": 310, "396011": 310, "934618": 310, "518106": 310, "392308": 310, "216396": 310, "339562": 310, "024801": 310, "793238": 310, "057118": 310, "556378": 310, "796045": 310, "776264": 310, "019010": 310, "430617": 310, "431370": 310, "731493": 310, "527208": 310, "010968": 310, "724711": 310, "959211": 310, "448445": 310, "131466": 310, "302385": 310, "264697": 310, "597597": 310, "779232": 310, "494133": 310, "292477": 310, "639161": 310, "067293": 310, "167700": 310, "637834": 310, "067793": 310, "249132": 310, "314731": 310, "969084": 310, "239401": 310, "359860": 310, "215238": 310, "477740": 310, "578842": 310, "053376": 310, "340902": 310, "021182": 310, "172446": 310, "684367": 310, "059050": 310, "515114": 310, "245427": 310, "197044": 310, "787564": 310, "106919": 310, "970391": 310, "379183": 310, "982728": 310, "807580": 310, "296212": 310, "639192": 310, "874018": 310, "032032": 310, "252364": 310, "047063": 310, "residual_q3": 310, "residual_outli": 310, "832458": 310, "136329": 310, "090316": 310, "021748": 310, "766581": 310, "001176": 310, "238974": 310, "071653": 310, "388881": 310, "584759": 310, "780298": 310, "680349": 310, "043355": 310, "691710": 310, "827298": 310, "317850": 310, "008777": 310, "291308": 310, "498512": 310, "312807": 310, "178997": 310, "306182": 310, "116610": 310, "468439": 310, "007865": 310, "384037": 310, "344744": 310, "151930": 310, "790639": 310, "416342": 310, "637759": 310, "153920": 310, "135334": 310, "038095": 310, "705065": 310, "359915": 310, "588440": 310, "151899": 310, "730945": 310, "514178": 310, "784304": 310, "977290": 310, "707253": 310, "982678": 310, "384237": 310, "576792": 310, "302778": 310, "342653": 310, "313826": 310, "775998": 310, "274818": 310, "191111": 310, "817604": 310, "421290": 310, "461701": 310, "940801": 310, "437023": 310, "207477": 310, "755739": 310, "individual_predictions_plot": 310, "trim": 311, "modelsearch_dir1": 311, "hash": 311, "mytab_mox1": 311, "subfold": 311, "temporari": 311, "finish": 311, "recreat": 311, "frame": 311, "programmat": 311, "pharmpy_vers": 311, "tool_nam": 311, "start_tim": 311, "22t14": 311, "312240": 311, "end_tim": 311, "592109": 311, "common_opt": 311, "tmp": 311, "tool_result": 311, "locat": 311, "concis": 311, "newlin": 311, "semi": 311, "colon": 311, "endpoint": 311, "wildcard": 311, "nodepot": 311, "autom": 311, "gotcha": 312, "cran": 313, "rapid": 313, "remot": 313, "install_github": 313, "install_pharmpi": 313, "session": 313, "packagevers": 313, "print_pharmpy_vers": 313, "reticul": 313, "miniconda": 313, "py_discover_config": 313, "conda_cr": 313, "python_vers": 313, "virtual": 313, "libpython": 313, "lib": 313, "libpython3": 313, "mirror": 313, "pipe": 313, "magrittr": 313}, "objects": {"pharmpy": [[271, 0, 0, "-", "model"], [272, 0, 0, "-", "modeling"], [273, 0, 0, "-", "tools"], [274, 0, 0, "-", "workflows"], [279, 6, 1, "cmdoption-pharmpy-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-version", "--version"], [279, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "ODESystem"], [24, 1, 1, "", "Parameter"], [25, 1, 1, "", "Parameters"], [26, 1, 1, "", "RandomVariables"], [27, 1, 1, "", "Results"], [28, 1, 1, "", "Statement"], [29, 1, 1, "", "Statements"], [30, 1, 1, "", "VariabilityHierarchy"], [31, 1, 1, "", "VariabilityLevel"], [32, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "admid"], [5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartment"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_covs"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "admid"], [16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "init"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "name"], [24, 2, 1, "", "replace"], [24, 3, 1, "", "symbol"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "fixed"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "inits"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "names"], [25, 3, 1, "", "nonfixed"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "set_fix"], [25, 2, 1, "", "set_initial_estimates"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[26, 3, 1, "", "covariance_matrix"], [26, 2, 1, "", "create"], [26, 3, 1, "", "epsilon_levels"], [26, 3, 1, "", "epsilons"], [26, 3, 1, "", "eta_levels"], [26, 3, 1, "", "etas"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_rvs_with_same_dist"], [26, 3, 1, "", "iiv"], [26, 3, 1, "", "iov"], [26, 2, 1, "", "join"], [26, 3, 1, "", "names"], [26, 2, 1, "", "nearest_valid_parameters"], [26, 3, 1, "", "nrvs"], [26, 3, 1, "", "parameter_names"], [26, 2, 1, "", "parameters_sdcorr"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "replace_with_sympy_rvs"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "unjoin"], [26, 2, 1, "", "validate_parameters"], [26, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_and_reset_index"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[28, 3, 1, "", "free_symbols"], [28, 3, 1, "", "rhs_symbols"], [28, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[29, 3, 1, "", "after_odes"], [29, 3, 1, "", "before_odes"], [29, 2, 1, "", "dependencies"], [29, 2, 1, "", "direct_dependencies"], [29, 3, 1, "", "error"], [29, 2, 1, "", "find_assignment"], [29, 2, 1, "", "find_assignment_index"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "full_expression"], [29, 3, 1, "", "ode_system"], [29, 2, 1, "", "reassign"], [29, 2, 1, "", "remove_symbol_definitions"], [29, 2, 1, "", "subs"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "levels"], [30, 3, 1, "", "names"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[31, 2, 1, "", "create"], [31, 2, 1, "", "from_dict"], [31, 3, 1, "", "group"], [31, 3, 1, "", "name"], [31, 3, 1, "", "reference"], [31, 2, 1, "", "replace"], [31, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[33, 5, 1, "", "add_admid"], [34, 5, 1, "", "add_allometry"], [35, 5, 1, "", "add_bioavailability"], [36, 5, 1, "", "add_covariance_step"], [37, 5, 1, "", "add_covariate_effect"], [38, 5, 1, "", "add_effect_compartment"], [39, 5, 1, "", "add_estimation_step"], [40, 5, 1, "", "add_iiv"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_peripheral_compartment"], [46, 5, 1, "", "add_pk_iiv"], [47, 5, 1, "", "add_population_parameter"], [48, 5, 1, "", "add_time_after_dose"], [49, 5, 1, "", "append_estimation_step_options"], [50, 5, 1, "", "bump_model_number"], [51, 5, 1, "", "calculate_aic"], [52, 5, 1, "", "calculate_bic"], [53, 5, 1, "", "calculate_corr_from_cov"], [54, 5, 1, "", "calculate_corr_from_prec"], [55, 5, 1, "", "calculate_cov_from_corrse"], [56, 5, 1, "", "calculate_cov_from_prec"], [57, 5, 1, "", "calculate_epsilon_gradient_expression"], [58, 5, 1, "", "calculate_eta_gradient_expression"], [59, 5, 1, "", "calculate_eta_shrinkage"], [60, 5, 1, "", "calculate_individual_parameter_statistics"], [61, 5, 1, "", "calculate_individual_shrinkage"], [62, 5, 1, "", "calculate_parameters_from_ucp"], [63, 5, 1, "", "calculate_pk_parameters_statistics"], [64, 5, 1, "", "calculate_prec_from_corrse"], [65, 5, 1, "", "calculate_prec_from_cov"], [66, 5, 1, "", "calculate_se_from_cov"], [67, 5, 1, "", "calculate_se_from_prec"], [68, 5, 1, "", "calculate_ucp_scale"], [69, 5, 1, "", "check_dataset"], [70, 5, 1, "", "check_high_correlations"], [71, 5, 1, "", "check_parameters_near_bounds"], [72, 5, 1, "", "cleanup_model"], [73, 5, 1, "", "convert_model"], [74, 5, 1, "", "create_basic_pk_model"], [75, 5, 1, "", "create_config_template"], [76, 5, 1, "", "create_joint_distribution"], [77, 5, 1, "", "create_rng"], [78, 5, 1, "", "create_symbol"], [79, 5, 1, "", "deidentify_data"], [80, 5, 1, "", "display_odes"], [81, 5, 1, "", "drop_columns"], [82, 5, 1, "", "drop_dropped_columns"], [83, 5, 1, "", "evaluate_epsilon_gradient"], [84, 5, 1, "", "evaluate_eta_gradient"], [85, 5, 1, "", "evaluate_expression"], [86, 5, 1, "", "evaluate_individual_prediction"], [87, 5, 1, "", "evaluate_population_prediction"], [88, 5, 1, "", "evaluate_weighted_residuals"], [89, 5, 1, "", "expand_additional_doses"], [90, 5, 1, "", "find_clearance_parameters"], [91, 5, 1, "", "find_volume_parameters"], [92, 5, 1, "", "fix_or_unfix_parameters"], [93, 5, 1, "", "fix_parameters"], [94, 5, 1, "", "fix_parameters_to"], [95, 5, 1, "", "get_admid"], [96, 5, 1, "", "get_baselines"], [97, 5, 1, "", "get_bioavailability"], [98, 5, 1, "", "get_cmt"], [99, 5, 1, "", "get_concentration_parameters_from_data"], [100, 5, 1, "", "get_config_path"], [101, 5, 1, "", "get_covariate_baselines"], [102, 5, 1, "", "get_doseid"], [103, 5, 1, "", "get_doses"], [104, 5, 1, "", "get_dv_symbol"], [105, 5, 1, "", "get_evid"], [106, 5, 1, "", "get_ids"], [107, 5, 1, "", "get_individual_parameters"], [108, 5, 1, "", "get_individual_prediction_expression"], [109, 5, 1, "", "get_initial_conditions"], [110, 5, 1, "", "get_lag_times"], [111, 5, 1, "", "get_mdv"], [112, 5, 1, "", "get_model_code"], [113, 5, 1, "", "get_model_covariates"], [114, 5, 1, "", "get_number_of_individuals"], [115, 5, 1, "", "get_number_of_observations"], [116, 5, 1, "", "get_number_of_observations_per_individual"], [117, 5, 1, "", "get_observation_expression"], [118, 5, 1, "", "get_observations"], [119, 5, 1, "", "get_omegas"], [120, 5, 1, "", "get_pd_parameters"], [121, 5, 1, "", "get_pk_parameters"], [122, 5, 1, "", "get_population_prediction_expression"], [123, 5, 1, "", "get_rv_parameters"], [124, 5, 1, "", "get_sigmas"], [125, 5, 1, "", "get_thetas"], [126, 5, 1, "", "get_unit_of"], [127, 5, 1, "", "get_zero_order_inputs"], [128, 5, 1, "", "greekify_model"], [129, 5, 1, "", "has_additive_error_model"], [130, 5, 1, "", "has_combined_error_model"], [131, 5, 1, "", "has_covariate_effect"], [132, 5, 1, "", "has_first_order_elimination"], [133, 5, 1, "", "has_linear_odes"], [134, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [135, 5, 1, "", "has_michaelis_menten_elimination"], [136, 5, 1, "", "has_mixed_mm_fo_elimination"], [137, 5, 1, "", "has_odes"], [138, 5, 1, "", "has_proportional_error_model"], [139, 5, 1, "", "has_random_effect"], [140, 5, 1, "", "has_weighted_error_model"], [141, 5, 1, "", "has_zero_order_absorption"], [142, 5, 1, "", "has_zero_order_elimination"], [143, 5, 1, "", "is_linearized"], [144, 5, 1, "", "is_real"], [145, 5, 1, "", "list_time_varying_covariates"], [146, 5, 1, "", "load_example_model"], [147, 5, 1, "", "make_declarative"], [148, 5, 1, "", "mu_reference_model"], [149, 5, 1, "", "omit_data"], [150, 5, 1, "", "plot_individual_predictions"], [151, 5, 1, "", "plot_iofv_vs_iofv"], [152, 5, 1, "", "plot_transformed_eta_distributions"], [153, 5, 1, "", "print_model_code"], [154, 5, 1, "", "print_model_symbols"], [155, 5, 1, "", "read_dataset_from_datainfo"], [156, 5, 1, "", "read_model"], [157, 5, 1, "", "read_model_from_string"], [158, 5, 1, "", "remove_bioavailability"], [159, 5, 1, "", "remove_covariance_step"], [160, 5, 1, "", "remove_covariate_effect"], [161, 5, 1, "", "remove_error_model"], [162, 5, 1, "", "remove_estimation_step"], [163, 5, 1, "", "remove_iiv"], [164, 5, 1, "", "remove_iov"], [165, 5, 1, "", "remove_lag_time"], [166, 5, 1, "", "remove_loq_data"], [167, 5, 1, "", "remove_peripheral_compartment"], [168, 5, 1, "", "remove_unused_parameters_and_rvs"], [169, 5, 1, "", "rename_symbols"], [170, 5, 1, "", "resample_data"], [171, 5, 1, "", "sample_individual_estimates"], [172, 5, 1, "", "sample_parameters_from_covariance_matrix"], [173, 5, 1, "", "sample_parameters_uniformly"], [174, 5, 1, "", "set_additive_error_model"], [175, 5, 1, "", "set_bolus_absorption"], [176, 5, 1, "", "set_combined_error_model"], [177, 5, 1, "", "set_covariates"], [178, 5, 1, "", "set_direct_effect"], [179, 5, 1, "", "set_dtbs_error_model"], [180, 5, 1, "", "set_dvid"], [181, 5, 1, "", "set_estimation_step"], [182, 5, 1, "", "set_evaluation_step"], [183, 5, 1, "", "set_first_order_absorption"], [184, 5, 1, "", "set_first_order_elimination"], [185, 5, 1, "", "set_iiv_on_ruv"], [186, 5, 1, "", "set_initial_condition"], [187, 5, 1, "", "set_initial_estimates"], [188, 5, 1, "", "set_lloq_data"], [189, 5, 1, "", "set_lower_bounds"], [190, 5, 1, "", "set_michaelis_menten_elimination"], [191, 5, 1, "", "set_mixed_mm_fo_elimination"], [192, 5, 1, "", "set_name"], [193, 5, 1, "", "set_ode_solver"], [194, 5, 1, "", "set_peripheral_compartments"], [195, 5, 1, "", "set_power_on_ruv"], [196, 5, 1, "", "set_proportional_error_model"], [197, 5, 1, "", "set_reference_values"], [198, 5, 1, "", "set_seq_zo_fo_absorption"], [199, 5, 1, "", "set_time_varying_error_model"], [200, 5, 1, "", "set_tmdd"], [201, 5, 1, "", "set_transit_compartments"], [202, 5, 1, "", "set_upper_bounds"], [203, 5, 1, "", "set_weighted_error_model"], [204, 5, 1, "", "set_zero_order_absorption"], [205, 5, 1, "", "set_zero_order_elimination"], [206, 5, 1, "", "set_zero_order_input"], [207, 5, 1, "", "simplify_expression"], [208, 5, 1, "", "solve_ode_system"], [209, 5, 1, "", "split_joint_distribution"], [210, 5, 1, "", "transform_blq"], [211, 5, 1, "", "transform_etas_boxcox"], [212, 5, 1, "", "transform_etas_john_draper"], [213, 5, 1, "", "transform_etas_tdist"], [214, 5, 1, "", "translate_nmtran_time"], [215, 5, 1, "", "unconstrain_parameters"], [216, 5, 1, "", "undrop_columns"], [217, 5, 1, "", "unfix_parameters"], [218, 5, 1, "", "unfix_parameters_to"], [219, 5, 1, "", "update_initial_individual_estimates"], [220, 5, 1, "", "update_inits"], [221, 5, 1, "", "use_thetas_for_error_stdev"], [222, 5, 1, "", "write_csv"], [223, 5, 1, "", "write_model"]], "pharmpy.tools": [[224, 5, 1, "", "create_report"], [225, 5, 1, "", "create_results"], [226, 5, 1, "", "fit"], [227, 5, 1, "", "load_example_modelfit_results"], [228, 5, 1, "", "predict_influential_individuals"], [229, 5, 1, "", "predict_influential_outliers"], [230, 5, 1, "", "predict_outliers"], [231, 5, 1, "", "print_fit_summary"], [232, 5, 1, "", "rank_models"], [233, 5, 1, "", "read_modelfit_results"], [234, 5, 1, "", "read_results"], [235, 5, 1, "", "resume_tool"], [236, 5, 1, "", "retrieve_final_model"], [237, 5, 1, "", "retrieve_models"], [238, 5, 1, "", "run_allometry"], [239, 5, 1, "", "run_amd"], [240, 5, 1, "", "run_bootstrap"], [241, 5, 1, "", "run_covsearch"], [242, 5, 1, "", "run_estmethod"], [243, 5, 1, "", "run_iivsearch"], [244, 5, 1, "", "run_iovsearch"], [245, 5, 1, "", "run_modelfit"], [246, 5, 1, "", "run_modelsearch"], [247, 5, 1, "", "run_ruvsearch"], [248, 5, 1, "", "run_structsearch"], [249, 5, 1, "", "run_tool"], [250, 5, 1, "", "summarize_errors"], [251, 5, 1, "", "summarize_individuals"], [252, 5, 1, "", "summarize_individuals_count_table"], [253, 5, 1, "", "summarize_modelfit_results"], [254, 5, 1, "", "write_results"]], "pharmpy.workflows": [[255, 1, 1, "", "LocalDirectoryDatabase"], [256, 1, 1, "", "LocalDirectoryToolDatabase"], [257, 1, 1, "", "LocalModelDirectoryDatabase"], [258, 1, 1, "", "Log"], [259, 1, 1, "", "ModelDatabase"], [260, 1, 1, "", "NullModelDatabase"], [261, 1, 1, "", "NullToolDatabase"], [262, 1, 1, "", "Task"], [263, 1, 1, "", "ToolDatabase"], [264, 1, 1, "", "Workflow"], [265, 1, 1, "", "WorkflowBuilder"], [266, 5, 1, "", "call_workflow"], [267, 3, 1, "", "default_model_database"], [268, 3, 1, "", "default_tool_database"], [269, 5, 1, "", "execute_workflow"], [270, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[255, 2, 1, "", "retrieve_file"], [255, 2, 1, "", "retrieve_local_files"], [255, 2, 1, "", "retrieve_model"], [255, 2, 1, "", "retrieve_modelfit_results"], [255, 2, 1, "", "store_local_file"], [255, 2, 1, "", "store_metadata"], [255, 2, 1, "", "store_model"], [255, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[256, 2, 1, "", "from_dict"], [256, 2, 1, "", "read_metadata"], [256, 2, 1, "", "store_local_file"], [256, 2, 1, "", "store_metadata"], [256, 2, 1, "", "store_results"], [256, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[257, 2, 1, "", "list_models"], [257, 2, 1, "", "snapshot"], [257, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[258, 2, 1, "", "from_dict"], [258, 3, 1, "", "log"], [258, 2, 1, "", "log_error"], [258, 2, 1, "", "log_warning"], [258, 2, 1, "", "to_dataframe"], [258, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[259, 2, 1, "", "retrieve_file"], [259, 2, 1, "", "retrieve_local_files"], [259, 2, 1, "", "retrieve_model"], [259, 2, 1, "", "retrieve_modelfit_results"], [259, 2, 1, "", "snapshot"], [259, 2, 1, "", "store_local_file"], [259, 2, 1, "", "store_metadata"], [259, 2, 1, "", "store_model"], [259, 2, 1, "", "store_modelfit_results"], [259, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[260, 2, 1, "", "retrieve_file"], [260, 2, 1, "", "retrieve_local_files"], [260, 2, 1, "", "retrieve_model"], [260, 2, 1, "", "retrieve_modelfit_results"], [260, 2, 1, "", "store_local_file"], [260, 2, 1, "", "store_metadata"], [260, 2, 1, "", "store_model"], [260, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[261, 2, 1, "", "read_metadata"], [261, 2, 1, "", "store_local_file"], [261, 2, 1, "", "store_metadata"], [261, 2, 1, "", "store_results"]], "pharmpy.workflows.Task": [[262, 2, 1, "", "create"], [262, 3, 1, "", "function"], [262, 3, 1, "", "name"], [262, 2, 1, "", "replace"], [262, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[263, 3, 1, "", "model_database"], [263, 3, 1, "", "path"], [263, 2, 1, "", "read_metadata"], [263, 2, 1, "", "store_local_file"], [263, 2, 1, "", "store_metadata"], [263, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[264, 2, 1, "", "as_dask_dict"], [264, 2, 1, "", "create"], [264, 3, 1, "", "name"], [264, 2, 1, "", "plot_dask"], [264, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[265, 2, 1, "", "add_task"], [265, 2, 1, "", "insert_workflow"], [265, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[279, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [279, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[279, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[279, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [279, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[279, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [279, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[279, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [279, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [279, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [279, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [279, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [279, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [279, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[279, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[279, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[279, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[279, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[279, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[279, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[279, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [279, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[279, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[279, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [279, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[279, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[279, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [279, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [279, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[279, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[279, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [279, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [279, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [279, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [279, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[279, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[279, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[279, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[279, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [279, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [279, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [279, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[279, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[279, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[279, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[279, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[279, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[279, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[279, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[279, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[279, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[279, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[279, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[279, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [279, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [279, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [279, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [279, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [279, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [279, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [279, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [279, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [279, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [279, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [279, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[279, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [279, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[279, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[279, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [279, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [279, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [279, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[279, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[279, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [279, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[279, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[279, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [279, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [279, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[279, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [279, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 281, 301], "dataset": [0, 286, 297, 299, 311], "overview": [0, 303, 307], "pars": 0, "translat": 0, "step": [0, 297, 299, 309], "nm": 0, "tran": 0, "comment": 0, "line": [0, 279], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 299], "date": 0, "id": 0, "check": [0, 282], "tabl": 0, "file": [0, 281, 286], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 282], "all": 0, "zero": 0, "individu": [0, 275, 276, 290, 296, 298, 310], "control": 0, "stream": 0, "gener": [0, 295], "option": [0, 274, 311], "problem": 0, "data": [0, 274, 279], "eta": [0, 299], "code": [0, 280, 282], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 27, 275, 276, 279, 284, 285, 289, 290, 292, 294, 296, 298, 300, 305, 307, 308, 309, 310, 311], "spars": 0, "matrix": [0, 275, 298], "allometri": [1, 2, 279, 299], "run": [1, 2, 279, 282, 284, 289, 292, 294, 300, 308, 311], "argument": [1, 2, 284, 289, 292, 294, 300, 308], "procedur": [1, 308], "The": [1, 275, 276, 279, 281, 285, 287, 289, 290, 292, 296, 297, 300, 305, 307, 308, 309, 310], "automat": 2, "model": [2, 18, 271, 272, 279, 286, 287, 292, 297, 298, 299, 300, 301, 305, 308, 311], "develop": [2, 282, 283, 288], "amd": [2, 279], "input": [2, 283], "search": [2, 292, 300], "space": [2, 300], "order": 2, "subtool": 2, "structur": [2, 292, 299, 307], "iivsearch": [2, 279, 292], "iovsearch": [2, 279, 294], "residu": [2, 298, 307], "covari": [2, 275, 276, 290, 292, 298, 299, 307], "api": 3, "refer": [3, 276, 290], "assign": 4, "bolu": 5, "columninfo": [6, 286], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 286, 297], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 294, 297, 299], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "odesystem": 23, "paramet": [24, 25, 275, 287, 290, 297, 298, 299, 301], "randomvari": [26, 287], "statement": [28, 29, 287, 297], "variabilityhierarchi": 30, "variabilitylevel": 31, "to_compartmental_system": 32, "add_admid": 33, "add_allometri": 34, "add_bioavail": 35, "add_covariance_step": 36, "add_covariate_effect": 37, "add_effect_compart": 38, "add_estimation_step": 39, "add_iiv": [40, 279], "add_individual_paramet": 41, "add_iov": [42, 279], "add_lag_tim": 43, "add_metabolit": 44, "add_peripheral_compart": 45, "add_pk_iiv": 46, "add_population_paramet": 47, "add_time_after_dos": 48, "append_estimation_step_opt": 49, "bump_model_numb": 50, "calculate_a": 51, "calculate_b": 52, "calculate_corr_from_cov": 53, "calculate_corr_from_prec": 54, "calculate_cov_from_corrs": 55, "calculate_cov_from_prec": 56, "calculate_epsilon_gradient_express": 57, "calculate_eta_gradient_express": 58, "calculate_eta_shrinkag": 59, "calculate_individual_parameter_statist": 60, "calculate_individual_shrinkag": 61, "calculate_parameters_from_ucp": 62, "calculate_pk_parameters_statist": 63, "calculate_prec_from_corrs": 64, "calculate_prec_from_cov": 65, "calculate_se_from_cov": 66, "calculate_se_from_prec": 67, "calculate_ucp_scal": 68, "check_dataset": 69, "check_high_correl": 70, "check_parameters_near_bound": 71, "cleanup_model": 72, "convert_model": 73, "create_basic_pk_model": 74, "create_config_templ": 75, "create_joint_distribut": [76, 279], "create_rng": 77, "create_symbol": 78, "deidentify_data": 79, "display_od": 80, "drop_column": 81, "drop_dropped_column": 82, "evaluate_epsilon_gradi": 83, "evaluate_eta_gradi": 84, "evaluate_express": 85, "evaluate_individual_predict": 86, "evaluate_population_predict": 87, "evaluate_weighted_residu": 88, "expand_additional_dos": 89, "find_clearance_paramet": 90, "find_volume_paramet": 91, "fix_or_unfix_paramet": 92, "fix_paramet": 93, "fix_parameters_to": 94, "get_admid": 95, "get_baselin": 96, "get_bioavail": 97, "get_cmt": 98, "get_concentration_parameters_from_data": 99, "get_config_path": 100, "get_covariate_baselin": 101, "get_doseid": 102, "get_dos": 103, "get_dv_symbol": 104, "get_evid": 105, "get_id": 106, "get_individual_paramet": 107, "get_individual_prediction_express": 108, "get_initial_condit": 109, "get_lag_tim": 110, "get_mdv": 111, "get_model_cod": 112, "get_model_covari": 113, "get_number_of_individu": 114, "get_number_of_observ": 115, "get_number_of_observations_per_individu": 116, "get_observation_express": 117, "get_observ": 118, "get_omega": 119, "get_pd_paramet": 120, "get_pk_paramet": 121, "get_population_prediction_express": 122, "get_rv_paramet": 123, "get_sigma": 124, "get_theta": 125, "get_unit_of": 126, "get_zero_order_input": 127, "greekify_model": 128, "has_additive_error_model": 129, "has_combined_error_model": 130, "has_covariate_effect": 131, "has_first_order_elimin": 132, "has_linear_od": 133, "has_linear_odes_with_real_eigenvalu": 134, "has_michaelis_menten_elimin": 135, "has_mixed_mm_fo_elimin": 136, "has_od": 137, "has_proportional_error_model": 138, "has_random_effect": 139, "has_weighted_error_model": 140, "has_zero_order_absorpt": 141, "has_zero_order_elimin": 142, "is_linear": 143, "is_real": 144, "list_time_varying_covari": 145, "load_example_model": 146, "make_declar": 147, "mu_reference_model": 148, "omit_data": 149, "plot_individual_predict": 150, "plot_iofv_vs_iofv": 151, "plot_transformed_eta_distribut": 152, "print_model_cod": 153, "print_model_symbol": 154, "read_dataset_from_datainfo": 155, "read_model": 156, "read_model_from_str": 157, "remove_bioavail": 158, "remove_covariance_step": 159, "remove_covariate_effect": 160, "remove_error_model": 161, "remove_estimation_step": 162, "remove_iiv": [163, 279], "remove_iov": [164, 279], "remove_lag_tim": 165, "remove_loq_data": 166, "remove_peripheral_compart": 167, "remove_unused_parameters_and_rv": 168, "rename_symbol": 169, "resample_data": 170, "sample_individual_estim": 171, "sample_parameters_from_covariance_matrix": 172, "sample_parameters_uniformli": 173, "set_additive_error_model": 174, "set_bolus_absorpt": 175, "set_combined_error_model": 176, "set_covari": 177, "set_direct_effect": 178, "set_dtbs_error_model": 179, "set_dvid": 180, "set_estimation_step": 181, "set_evaluation_step": 182, "set_first_order_absorpt": 183, "set_first_order_elimin": 184, "set_iiv_on_ruv": 185, "set_initial_condit": 186, "set_initial_estim": 187, "set_lloq_data": 188, "set_lower_bound": 189, "set_michaelis_menten_elimin": 190, "set_mixed_mm_fo_elimin": 191, "set_nam": 192, "set_ode_solv": 193, "set_peripheral_compart": 194, "set_power_on_ruv": 195, "set_proportional_error_model": 196, "set_reference_valu": 197, "set_seq_zo_fo_absorpt": 198, "set_time_varying_error_model": 199, "set_tmdd": 200, "set_transit_compart": 201, "set_upper_bound": 202, "set_weighted_error_model": 203, "set_zero_order_absorpt": 204, "set_zero_order_elimin": 205, "set_zero_order_input": 206, "simplify_express": 207, "solve_ode_system": 208, "split_joint_distribut": 209, "transform_blq": 210, "transform_etas_boxcox": 211, "transform_etas_john_drap": 212, "transform_etas_tdist": 213, "translate_nmtran_tim": 214, "unconstrain_paramet": 215, "undrop_column": 216, "unfix_paramet": 217, "unfix_parameters_to": 218, "update_initial_individual_estim": 219, "update_init": [220, 279], "use_thetas_for_error_stdev": 221, "write_csv": 222, "write_model": 223, "create_report": 224, "create_result": 225, "fit": [226, 298], "load_example_modelfit_result": 227, "predict_influential_individu": 228, "predict_influential_outli": 229, "predict_outli": 230, "print_fit_summari": 231, "rank_model": 232, "read_modelfit_result": 233, "read_result": 234, "resume_tool": 235, "retrieve_final_model": 236, "retrieve_model": 237, "run_allometri": 238, "run_amd": 239, "run_bootstrap": 240, "run_covsearch": 241, "run_estmethod": 242, "run_iivsearch": 243, "run_iovsearch": 244, "run_modelfit": 245, "run_modelsearch": 246, "run_ruvsearch": 247, "run_structsearch": 248, "run_tool": 249, "summarize_error": 250, "summarize_individu": 251, "summarize_individuals_count_t": 252, "summarize_modelfit_result": 253, "write_result": 254, "localdirectorydatabas": 255, "localdirectorytooldatabas": 256, "localmodeldirectorydatabas": 257, "log": 258, "modeldatabas": 259, "nullmodeldatabas": 260, "nulltooldatabas": 261, "task": 262, "tooldatabas": 263, "workflow": [264, 274, 282], "workflowbuild": 265, "call_workflow": 266, "default_model_databas": 267, "default_tool_databas": 268, "execute_workflow": 269, "split_common_opt": 270, "pharmpi": [271, 272, 273, 274, 278, 279, 280, 281, 282, 286, 287, 293, 297, 302, 306, 311, 313], "packag": [271, 272, 273, 274], "function": [271, 272, 273, 274, 299], "class": [271, 274, 287], "tool": [273, 306, 311], "modul": [274, 287], "bootstrap": [275, 279], "postprocess": [275, 290], "statist": 275, "ofv": [275, 276, 279, 285, 290, 296, 298, 309, 310], "includ": 275, "case": 276, "delet": 276, "diagnost": 276, "cdd": [276, 279], "cook": 276, "score": 276, "jackknif": 276, "cookscor": 276, "ratio": 276, "delta": 276, "skip": 276, "column": 276, "changelog": 277, "0": 277, "99": 277, "2023": 277, "08": 277, "23": 277, "new": [277, 294, 301], "featur": [277, 300, 311], "chang": [277, 302], "bugfix": 277, "98": 277, "07": 277, "21": 277, "97": 277, "06": 277, "28": 277, "96": 277, "05": 277, "26": 277, "95": 277, "22": 277, "94": 277, "04": 277, "93": 277, "19": 277, "92": 277, "91": 277, "03": 277, "90": 277, "02": 277, "24": 277, "89": 277, "01": 277, "88": 277, "2022": 277, "12": 277, "87": 277, "14": 277, "86": 277, "11": 277, "30": 277, "85": 277, "18": 277, "84": 277, "1": 277, "13": 277, "bug": 277, "fix": 277, "09": 277, "83": 277, "82": 277, "10": 277, "81": 277, "80": 277, "79": 277, "16": 277, "78": 277, "20": 277, "77": 277, "76": 277, "75": 277, "74": 277, "73": 277, "72": 277, "71": 277, "70": 277, "17": 277, "69": 277, "29": 277, "68": 277, "27": 277, "67": 277, "25": 277, "66": 277, "65": 277, "64": 277, "63": 277, "62": 277, "61": 277, "31": 277, "59": 277, "58": 277, "4": 277, "57": 277, "56": 277, "55": 277, "54": 277, "53": 277, "52": 277, "51": 277, "50": 277, "49": 277, "48": 277, "47": 277, "46": 277, "45": 277, "44": 277, "43": 277, "42": 277, "41": 277, "2021": 277, "40": 277, "39": 277, "15": 277, "38": 277, "37": 277, "36": 277, "35": 277, "34": 277, "3": 277, "2": [277, 295], "33": 277, "32": 277, "2020": 277, "9": 277, "8": 277, "7": 277, "6": 277, "5": 277, "2018": 277, "citat": 278, "how": 278, "cite": 278, "pharmr": [278, 313], "command": 279, "interfac": 279, "append": 279, "deidentifi": 279, "filter": 279, "print": 279, "resampl": 279, "write": [279, 297, 299, 301], "info": 279, "absorption_r": 279, "add_cov_effect": 279, "boxcox": [279, 307], "elimination_r": 279, "error": [279, 298, 299, 307, 313], "iiv_on_ruv": 279, "john_drap": 279, "peripheral_compart": 279, "power_on_ruv": 279, "sampl": [279, 310], "tdist": [279, 307], "transit_compart": 279, "frem": [279, 290], "linear": [279, 296], "qa": [279, 307], "report": 279, "ruvsearch": [279, 308], "scm": [279, 309], "simev": [279, 310], "summari": [279, 309, 310], "covsearch": [279, 284], "estmethod": [279, 289], "execut": 279, "modelsearch": [279, 300], "commun": 280, "conduct": 280, "configur": 281, "avail": 281, "plugin": [281, 301, 303], "nlmixr": 281, "rxode": 281, "environ": [281, 282], "variabl": [281, 290, 297, 299, 301], "contribut": 282, "set": [282, 302], "up": 282, "support": 282, "platform": 282, "instal": [282, 291, 313], "python": [282, 313], "git": 282, "fork": 282, "clone": 282, "repositori": 282, "tox": 282, "graphviz": 282, "us": [282, 301, 313], "build": 282, "document": [282, 288], "unit": [282, 286], "test": 282, "integr": 282, "usabl": 282, "virtual": 282, "standard": [282, 298], "releas": 282, "version": [282, 313], "inform": [282, 299], "contributor": 283, "scientif": 283, "fund": 283, "effect": [284, 290, 307], "wildcard": 284, "algorithm": [284, 289, 292, 294, 300], "crossval": 285, "crossvalid": 285, "retriev": 286, "from": 286, "updat": [286, 289], "type": [286, 311], "scale": 286, "continu": 286, "categori": 286, "drop": 286, "datatyp": 286, "descriptor": 286, "design": 287, "principl": 287, "level": [287, 297], "architectur": 287, "heart": 287, "docstr": 287, "depend": [287, 297], "exhaust": [289, 300], "onli": 289, "evalu": 289, "method": 289, "solver": 289, "coeffici": 290, "unexplain": 290, "estim": [290, 297, 298, 299], "valu": 290, "get": 291, "start": [291, 292], "A": 291, "first": 291, "exampl": [291, 299, 311], "brute": 292, "forc": 292, "number": 292, "iiv": [292, 300], "full": 292, "ad": [292, 297, 299, 300], "compar": [292, 294, 300], "rank": [292, 294, 300], "candid": [292, 294, 300, 309], "welcom": 293, "iov": 294, "licens": 295, "logo": 295, "copyright": 295, "bsd": 295, "claus": 295, "gnu": 295, "lesser": 295, "public": 295, "read": [297, 299, 301], "inspect": 297, "attribut": 297, "name": [297, 301], "descript": [297, 311], "random": [297, 301], "low": 297, "manipul": 297, "object": 297, "creat": [297, 299], "substitut": 297, "symbol": [297, 311], "numer": 297, "modelfit": 298, "final": 298, "rel": 298, "correl": 298, "precis": 298, "indiviud": 298, "predict": [298, 310], "basic": 299, "load": 299, "convert": 299, "transform": 299, "absorpt": 299, "rate": 299, "delai": 299, "elimin": 299, "remov": 299, "popul": 299, "blq": 299, "examin": 299, "modifi": 299, "subject": 299, "observ": 299, "dose": 299, "extract": 299, "group": 299, "after": 299, "concentr": 299, "common": [300, 311], "behaviour": 300, "between": [300, 313], "combin": 300, "exclus": 300, "stepwis": 300, "reduc": 300, "dure": 300, "plot": [302, 310], "theme": 302, "axi": 302, "project": 304, "suggest": 304, "resmod": 305, "psn": 306, "connect": 306, "bia": 307, "fullblock": 307, "databas": 311, "directori": 311, "metadata": 311, "languag": 311, "mfl": 311, "describ": 311, "interv": 311, "redund": 311, "user": 312, "guid": 312, "r": 313, "troubl": 313, "shoot": 313, "wrong": 313, "when": 313, "conda": 313, "import": 313, "mismatch": 313, "gotcha": 313, "list": 313, "indic": 313}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"calculate_eta_shrinkage": [[59, "calculate-eta-shrinkage"]], "create_basic_pk_model": [[74, "create-basic-pk-model"]], "calculate_bic": [[52, "calculate-bic"]], "calculate_aic": [[51, "calculate-aic"]], "calculate_pk_parameters_statistics": [[63, "calculate-pk-parameters-statistics"]], "create_joint_distribution": [[76, "create-joint-distribution"]], "add_population_parameter": [[47, "add-population-parameter"]], "add_peripheral_compartment": [[45, "add-peripheral-compartment"]], "calculate_prec_from_cov": [[65, "calculate-prec-from-cov"]], "add_metabolite": [[44, "add-metabolite"]], "calculate_ucp_scale": [[68, "calculate-ucp-scale"]], "bump_model_number": [[50, "bump-model-number"]], "add_lag_time": [[43, "add-lag-time"]], "calculate_corr_from_prec": [[54, "calculate-corr-from-prec"]], "calculate_prec_from_corrse": [[64, "calculate-prec-from-corrse"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "add_iov": [[42, "add-iov"]], "add_iiv": [[40, "add-iiv"]], "calculate_se_from_prec": [[67, "calculate-se-from-prec"]], "calculate_cov_from_prec": [[56, "calculate-cov-from-prec"]], "calculate_eta_gradient_expression": [[58, "calculate-eta-gradient-expression"]], "calculate_individual_shrinkage": [[61, "calculate-individual-shrinkage"]], "calculate_corr_from_cov": [[53, "calculate-corr-from-cov"]], "create_config_template": [[75, "create-config-template"]], "calculate_cov_from_corrse": [[55, "calculate-cov-from-corrse"]], "convert_model": [[73, "convert-model"]], "calculate_se_from_cov": [[66, "calculate-se-from-cov"]], "create_rng": [[77, "create-rng"]], "calculate_epsilon_gradient_expression": [[57, "calculate-epsilon-gradient-expression"]], "calculate_individual_parameter_statistics": [[60, "calculate-individual-parameter-statistics"]], "add_time_after_dose": [[48, "add-time-after-dose"]], "cleanup_model": [[72, "cleanup-model"]], "calculate_parameters_from_ucp": [[62, "calculate-parameters-from-ucp"]], "add_pk_iiv": [[46, "add-pk-iiv"]], "add_estimation_step": [[39, "add-estimation-step"]], "check_high_correlations": [[70, "check-high-correlations"]], "append_estimation_step_options": [[49, "append-estimation-step-options"]], "check_dataset": [[69, "check-dataset"]], "check_parameters_near_bounds": [[71, "check-parameters-near-bounds"]], "User guide": [[312, "user-guide"]], "Pharmpy in R": [[313, "pharmpy-in-r"]], "Installing pharmr": [[313, "installing-pharmr"]], "Trouble shooting": [[313, "trouble-shooting"]], "Wrong Python version when using conda": [[313, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[313, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[313, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[313, "using-pharmr"]], "Gotchas": [[313, "gotchas"]], "List indices": [[313, "list-indices"]], "EstimationStep": [[14, "estimationstep"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "Compartment": [[7, "compartment"]], "add_covariate_effect": [[37, "add-covariate-effect"]], "add_admid": [[33, "add-admid"]], "add_bioavailability": [[35, "add-bioavailability"]], "RandomVariables": [[26, "randomvariables"]], "ColumnInfo": [[6, "columninfo"], [286, "columninfo"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Running": [[2, "running"], [1, "running"], [284, "running"], [308, "running"], [292, "running"], [294, "running"], [300, "running"], [289, "running"]], "Arguments": [[2, "arguments"], [1, "arguments"], [284, "arguments"], [308, "arguments"], [292, "arguments"], [294, "arguments"], [300, "arguments"], [289, "arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [292, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [294, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [27, "results"], [284, "results"], [311, "results"], [294, "results"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "Bolus": [[5, "bolus"]], "ModelError": [[19, "modelerror"]], "Statement": [[28, "statement"]], "Infusion": [[16, "infusion"]], "NormalDistribution": [[22, "normaldistribution"]], "Model": [[18, "model"]], "DataInfo": [[10, "datainfo"], [286, "datainfo"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "DatasetWarning": [[12, "datasetwarning"]], "add_effect_compartment": [[38, "add-effect-compartment"]], "Assignment": [[4, "assignment"]], "add_allometry": [[34, "add-allometry"]], "ODESystem": [[23, "odesystem"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [308, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "DatasetError": [[11, "dataseterror"]], "add_covariance_step": [[36, "add-covariance-step"]], "Statements": [[29, "statements"], [297, "statements"]], "to_compartmental_system": [[32, "to-compartmental-system"]], "Distribution": [[13, "distribution"], [299, "distribution"]], "VariabilityHierarchy": [[30, "variabilityhierarchy"]], "API Reference": [[3, "api-reference"]], "Parameter": [[24, "parameter"]], "Parameters": [[25, "parameters"], [297, "parameters"]], "VariabilityLevel": [[31, "variabilitylevel"]], "EstimationSteps": [[15, "estimationsteps"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "Task": [[262, "task"]], "default_tool_database": [[268, "default-tool-database"]], "Workflow": [[264, "workflow"]], "run_amd": [[239, "run-amd"]], "LocalDirectoryToolDatabase": [[256, "localdirectorytooldatabase"]], "run_iovsearch": [[244, "run-iovsearch"]], "NullModelDatabase": [[260, "nullmodeldatabase"]], "resume_tool": [[235, "resume-tool"]], "execute_workflow": [[269, "execute-workflow"]], "Log": [[258, "log"]], "write_results": [[254, "write-results"]], "ToolDatabase": [[263, "tooldatabase"]], "run_ruvsearch": [[247, "run-ruvsearch"]], "default_model_database": [[267, "default-model-database"]], "pharmpy.modeling Package": [[272, "pharmpy-modeling-package"]], "Functions": [[272, "functions"], [271, "functions"], [273, "functions"], [274, "functions"]], "run_modelfit": [[245, "run-modelfit"]], "summarize_individuals_count_table": [[252, "summarize-individuals-count-table"]], "LocalDirectoryDatabase": [[255, "localdirectorydatabase"]], "retrieve_models": [[237, "retrieve-models"]], "run_tool": [[249, "run-tool"]], "WorkflowBuilder": [[265, "workflowbuilder"]], "retrieve_final_model": [[236, "retrieve-final-model"]], "run_iivsearch": [[243, "run-iivsearch"]], "run_estmethod": [[242, "run-estmethod"]], "read_results": [[234, "read-results"]], "split_common_options": [[270, "split-common-options"]], "pharmpy.model Package": [[271, "pharmpy-model-package"]], "Classes": [[271, "classes"], [274, "classes"]], "LocalModelDirectoryDatabase": [[257, "localmodeldirectorydatabase"]], "run_modelsearch": [[246, "run-modelsearch"]], "run_covsearch": [[241, "run-covsearch"]], "run_allometry": [[238, "run-allometry"]], "ModelDatabase": [[259, "modeldatabase"]], "run_bootstrap": [[240, "run-bootstrap"]], "run_structsearch": [[248, "run-structsearch"]], "summarize_errors": [[250, "summarize-errors"]], "summarize_individuals": [[251, "summarize-individuals"]], "NullToolDatabase": [[261, "nulltooldatabase"]], "call_workflow": [[266, "call-workflow"]], "summarize_modelfit_results": [[253, "summarize-modelfit-results"]], "create_report": [[224, "create-report"]], "predict_influential_outliers": [[229, "predict-influential-outliers"]], "predict_influential_individuals": [[228, "predict-influential-individuals"]], "unfix_parameters": [[217, "unfix-parameters"]], "set_zero_order_elimination": [[205, "set-zero-order-elimination"]], "use_thetas_for_error_stdev": [[221, "use-thetas-for-error-stdev"]], "set_upper_bounds": [[202, "set-upper-bounds"]], "fit": [[226, "fit"]], "read_modelfit_results": [[233, "read-modelfit-results"]], "set_seq_zo_fo_absorption": [[198, "set-seq-zo-fo-absorption"]], "solve_ode_system": [[208, "solve-ode-system"]], "unconstrain_parameters": [[215, "unconstrain-parameters"]], "set_tmdd": [[200, "set-tmdd"]], "set_power_on_ruv": [[195, "set-power-on-ruv"]], "simplify_expression": [[207, "simplify-expression"]], "create_results": [[225, "create-results"]], "transform_etas_tdist": [[213, "transform-etas-tdist"]], "set_transit_compartments": [[201, "set-transit-compartments"]], "rank_models": [[232, "rank-models"]], "transform_etas_john_draper": [[212, "transform-etas-john-draper"]], "transform_etas_boxcox": [[211, "transform-etas-boxcox"]], "transform_blq": [[210, "transform-blq"]], "split_joint_distribution": [[209, "split-joint-distribution"]], "set_proportional_error_model": [[196, "set-proportional-error-model"]], "translate_nmtran_time": [[214, "translate-nmtran-time"]], "unfix_parameters_to": [[218, "unfix-parameters-to"]], "update_inits": [[220, "update-inits"]], "undrop_columns": [[216, "undrop-columns"]], "set_reference_values": [[197, "set-reference-values"]], "write_csv": [[222, "write-csv"]], "set_zero_order_absorption": [[204, "set-zero-order-absorption"]], "set_zero_order_input": [[206, "set-zero-order-input"]], "set_time_varying_error_model": [[199, "set-time-varying-error-model"]], "predict_outliers": [[230, "predict-outliers"]], "set_weighted_error_model": [[203, "set-weighted-error-model"]], "update_initial_individual_estimates": [[219, "update-initial-individual-estimates"]], "write_model": [[223, "write-model"]], "load_example_modelfit_results": [[227, "load-example-modelfit-results"]], "print_fit_summary": [[231, "print-fit-summary"]], "set_lower_bounds": [[189, "set-lower-bounds"]], "set_combined_error_model": [[176, "set-combined-error-model"]], "set_dtbs_error_model": [[179, "set-dtbs-error-model"]], "set_name": [[192, "set-name"]], "set_first_order_elimination": [[184, "set-first-order-elimination"]], "set_iiv_on_ruv": [[185, "set-iiv-on-ruv"]], "resample_data": [[170, "resample-data"]], "read_model_from_string": [[157, "read-model-from-string"]], "set_dvid": [[180, "set-dvid"]], "set_estimation_step": [[181, "set-estimation-step"]], "sample_individual_estimates": [[171, "sample-individual-estimates"]], "set_evaluation_step": [[182, "set-evaluation-step"]], "read_model": [[156, "read-model"]], "sample_parameters_uniformly": [[173, "sample-parameters-uniformly"]], "set_peripheral_compartments": [[194, "set-peripheral-compartments"]], "remove_bioavailability": [[158, "remove-bioavailability"]], "remove_covariance_step": [[159, "remove-covariance-step"]], "set_initial_estimates": [[187, "set-initial-estimates"]], "set_covariates": [[177, "set-covariates"]], "set_direct_effect": [[178, "set-direct-effect"]], "set_ode_solver": [[193, "set-ode-solver"]], "remove_peripheral_compartment": [[167, "remove-peripheral-compartment"]], "set_lloq_data": [[188, "set-lloq-data"]], "set_first_order_absorption": [[183, "set-first-order-absorption"]], "rename_symbols": [[169, "rename-symbols"]], "remove_unused_parameters_and_rvs": [[168, "remove-unused-parameters-and-rvs"]], "remove_lag_time": [[165, "remove-lag-time"]], "set_additive_error_model": [[174, "set-additive-error-model"]], "remove_iiv": [[163, "remove-iiv"]], "set_michaelis_menten_elimination": [[190, "set-michaelis-menten-elimination"]], "remove_error_model": [[161, "remove-error-model"]], "remove_iov": [[164, "remove-iov"]], "set_initial_condition": [[186, "set-initial-condition"]], "set_bolus_absorption": [[175, "set-bolus-absorption"]], "remove_estimation_step": [[162, "remove-estimation-step"]], "remove_loq_data": [[166, "remove-loq-data"]], "set_mixed_mm_fo_elimination": [[191, "set-mixed-mm-fo-elimination"]], "sample_parameters_from_covariance_matrix": [[172, "sample-parameters-from-covariance-matrix"]], "remove_covariate_effect": [[160, "remove-covariate-effect"]], "print_model_symbols": [[154, "print-model-symbols"]], "has_zero_order_elimination": [[142, "has-zero-order-elimination"]], "get_unit_of": [[126, "get-unit-of"]], "get_sigmas": [[124, "get-sigmas"]], "has_covariate_effect": [[131, "has-covariate-effect"]], "has_michaelis_menten_elimination": [[135, "has-michaelis-menten-elimination"]], "has_odes": [[137, "has-odes"]], "print_model_code": [[153, "print-model-code"]], "has_additive_error_model": [[129, "has-additive-error-model"]], "greekify_model": [[128, "greekify-model"]], "has_weighted_error_model": [[140, "has-weighted-error-model"]], "is_real": [[144, "is-real"]], "has_linear_odes": [[133, "has-linear-odes"]], "get_omegas": [[119, "get-omegas"]], "has_linear_odes_with_real_eigenvalues": [[134, "has-linear-odes-with-real-eigenvalues"]], "get_zero_order_inputs": [[127, "get-zero-order-inputs"]], "list_time_varying_covariates": [[145, "list-time-varying-covariates"]], "omit_data": [[149, "omit-data"]], "get_observations": [[118, "get-observations"]], "get_thetas": [[125, "get-thetas"]], "has_proportional_error_model": [[138, "has-proportional-error-model"]], "has_random_effect": [[139, "has-random-effect"]], "get_pk_parameters": [[121, "get-pk-parameters"]], "get_pd_parameters": [[120, "get-pd-parameters"]], "load_example_model": [[146, "load-example-model"]], "has_zero_order_absorption": [[141, "has-zero-order-absorption"]], "has_combined_error_model": [[130, "has-combined-error-model"]], "make_declarative": [[147, "make-declarative"]], "get_population_prediction_expression": [[122, "get-population-prediction-expression"]], "has_first_order_elimination": [[132, "has-first-order-elimination"]], "has_mixed_mm_fo_elimination": [[136, "has-mixed-mm-fo-elimination"]], "is_linearized": [[143, "is-linearized"]], "plot_individual_predictions": [[150, "plot-individual-predictions"]], "plot_iofv_vs_iofv": [[151, "plot-iofv-vs-iofv"]], "plot_transformed_eta_distributions": [[152, "plot-transformed-eta-distributions"]], "get_observation_expression": [[117, "get-observation-expression"]], "mu_reference_model": [[148, "mu-reference-model"]], "get_rv_parameters": [[123, "get-rv-parameters"]], "read_dataset_from_datainfo": [[155, "read-dataset-from-datainfo"]], "get_cmt": [[98, "get-cmt"]], "get_ids": [[106, "get-ids"]], "drop_columns": [[81, "drop-columns"]], "get_admid": [[95, "get-admid"]], "deidentify_data": [[79, "deidentify-data"]], "display_odes": [[80, "display-odes"]], "get_concentration_parameters_from_data": [[99, "get-concentration-parameters-from-data"]], "evaluate_expression": [[85, "evaluate-expression"]], "get_bioavailability": [[97, "get-bioavailability"]], "get_number_of_observations": [[115, "get-number-of-observations"]], "evaluate_individual_prediction": [[86, "evaluate-individual-prediction"]], "get_dv_symbol": [[104, "get-dv-symbol"]], "get_initial_conditions": [[109, "get-initial-conditions"]], "get_individual_parameters": [[107, "get-individual-parameters"]], "get_number_of_observations_per_individual": [[116, "get-number-of-observations-per-individual"]], "get_lag_times": [[110, "get-lag-times"]], "get_config_path": [[100, "get-config-path"]], "get_covariate_baselines": [[101, "get-covariate-baselines"]], "get_baselines": [[96, "get-baselines"]], "fix_parameters": [[93, "fix-parameters"]], "get_mdv": [[111, "get-mdv"]], "find_clearance_parameters": [[90, "find-clearance-parameters"]], "get_model_covariates": [[113, "get-model-covariates"]], "get_model_code": [[112, "get-model-code"]], "evaluate_population_prediction": [[87, "evaluate-population-prediction"]], "expand_additional_doses": [[89, "expand-additional-doses"]], "fix_or_unfix_parameters": [[92, "fix-or-unfix-parameters"]], "evaluate_eta_gradient": [[84, "evaluate-eta-gradient"]], "drop_dropped_columns": [[82, "drop-dropped-columns"]], "create_symbol": [[78, "create-symbol"]], "get_individual_prediction_expression": [[108, "get-individual-prediction-expression"]], "find_volume_parameters": [[91, "find-volume-parameters"]], "evaluate_epsilon_gradient": [[83, "evaluate-epsilon-gradient"]], "fix_parameters_to": [[94, "fix-parameters-to"]], "get_doses": [[103, "get-doses"]], "get_doseid": [[102, "get-doseid"]], "evaluate_weighted_residuals": [[88, "evaluate-weighted-residuals"]], "get_number_of_individuals": [[114, "get-number-of-individuals"]], "get_evid": [[105, "get-evid"]], "Model estimation and results": [[298, "model-estimation-and-results"]], "Fitting a model": [[298, "fitting-a-model"]], "Modelfit results": [[298, "modelfit-results"]], "Final OFV": [[298, "final-ofv"]], "Parameter estimates": [[298, "parameter-estimates"], [290, "parameter-estimates"]], "Standard errors of parameter estimates": [[298, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[298, "relative-standard-errors-of-parameter-estimates"]], "Covariance matrix": [[298, "covariance-matrix"], [275, "covariance-matrix"]], "Correlation Matrix": [[298, "correlation-matrix"]], "Precision Matrix": [[298, "precision-matrix"]], "Indiviudal OFV": [[298, "indiviudal-ofv"]], "Predictions": [[298, "predictions"]], "Residuals": [[298, "residuals"]], "Individual estimates": [[298, "individual-estimates"]], "Pharmpy Community Code of Conduct": [[280, "pharmpy-community-code-of-conduct"]], "COVsearch": [[284, "covsearch"]], "Effects": [[284, "effects"]], "Wildcards": [[284, "wildcards"]], "Algorithm": [[284, "algorithm"], [294, "algorithm"]], "Simeval": [[310, "simeval"]], "The simeval results": [[310, "the-simeval-results"]], "Sampled Individual OFVs": [[310, "sampled-individual-ofvs"]], "Individual OFV summary": [[310, "individual-ofv-summary"]], "Individual prediction plot": [[310, "individual-prediction-plot"]], "pharmpy.tools Package": [[273, "pharmpy-tools-package"]], "Datasets in Pharmpy": [[286, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[286, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[286, "update-the-dataset-of-a-model"]], "type": [[286, "type"]], "scale": [[286, "scale"]], "continuous": [[286, "continuous"]], "categories": [[286, "categories"]], "unit": [[286, "unit"]], "drop": [[286, "drop"]], "datatype": [[286, "datatype"]], "descriptor": [[286, "descriptor"]], "datainfo file": [[286, "datainfo-file"]], "QA": [[307, "qa"]], "The qa results": [[307, "the-qa-results"]], "Overview": [[307, "overview"]], "Structural bias": [[307, "structural-bias"]], "Fullblock": [[307, "fullblock"]], "Boxcox": [[307, "boxcox"]], "Tdist": [[307, "tdist"]], "Residual error": [[307, "residual-error"]], "Covariate effects": [[307, "covariate-effects"], [290, "covariate-effects"]], "ruvsearch": [[308, "ruvsearch"]], "Models": [[308, "models"]], "The RUVsearch results": [[308, "the-ruvsearch-results"]], "Tools": [[311, "tools"]], "Tools in Pharmpy": [[311, "tools-in-pharmpy"]], "Common options": [[311, "common-options"]], "Common features": [[311, "common-features"]], "Tool database": [[311, "tool-database"]], "Running directory": [[311, "running-directory"]], "Metadata": [[311, "metadata"]], "Datasets": [[311, "datasets"]], "Model feature language (MFL)": [[311, "model-feature-language-mfl"]], "Option types": [[311, "option-types"]], "Model features": [[311, "model-features"]], "Symbols": [[311, "symbols"]], "Describe intervals": [[311, "describe-intervals"]], "Redundant descriptions": [[311, "redundant-descriptions"]], "Examples": [[311, "examples"]], "Documentation for developers": [[288, "documentation-for-developers"]], "Contributors": [[283, "authors"]], "Development": [[283, "development"]], "Scientific input": [[283, "scientific-input"]], "Funding": [[283, "funding"]], "Bootstrap": [[275, "bootstrap"]], "The Bootstrap postprocessing and results": [[275, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[275, "parameter-statistics"]], "OFV statistics": [[275, "ofv-statistics"]], "Included individuals": [[275, "included-individuals"]], "Welcome to Pharmpy": [[293, "welcome-to-pharmpy"]], "PsN with Pharmpy": [[306, "psn-with-pharmpy"]], "Tools connected to PsN": [[306, "tools-connected-to-psn"]], "pharmpy.workflows Package": [[274, "pharmpy-workflows-package"]], "Options for the data module": [[274, "id1"]], "Design principles": [[287, "design-principles"]], "Levels of the architecture": [[287, "levels-of-the-architecture"]], "The Heart, The Model Class": [[287, "the-heart-the-model-class"]], "pharmpy.Parameters": [[287, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[287, "pharmpy-randomvariables"]], "pharmpy.Statements": [[287, "pharmpy-statements"]], "The pharmpy.modeling module": [[287, "the-pharmpy-modeling-module"]], "Docstrings": [[287, "docstrings"]], "Dependencies": [[287, "dependencies"]], "License": [[295, "license"]], "Logo": [[295, "logo"]], "Copyright": [[295, "copyright"]], "BSD 2-clause License": [[295, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[295, "gnu-lesser-general-public-license"]], "Algorithms": [[292, "algorithms"], [300, "algorithms"], [289, "algorithms"]], "Brute force search for number of IIVs": [[292, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[292, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[292, "full-brute-force-search"]], "Adding IIV to the start model": [[292, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[292, "comparing-and-ranking-candidates"], [294, "comparing-and-ranking-candidates"], [300, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[292, "the-iivsearch-results"]], "Configuration": [[281, "configuration"]], "The configuration file": [[281, "the-configuration-file"]], "Available configurations": [[281, "available-configurations"]], "pharmpy.plugins.nonmem": [[281, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[281, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[281, "pharmpy-plugins-rxode"]], "Environment variables": [[281, "environment-variables"]], "Getting started": [[291, "getting-started"]], "Installation": [[291, "installation"]], "A first example": [[291, "a-first-example"]], "Linearize": [[296, "linearize"]], "The linearize results": [[296, "the-linearize-results"]], "OFVs": [[296, "ofvs"]], "Individual OFVs": [[296, "individual-ofvs"]], "Distribution of new IOVs": [[294, "distribution-of-new-iovs"]], "Citation": [[278, "citation"]], "How to cite Pharmpy and pharmr": [[278, "how-to-cite-pharmpy-and-pharmr"]], "Project suggestions": [[304, "project-suggestions"]], "Resmod": [[305, "resmod"]], "The resmod results": [[305, "the-resmod-results"]], "Resmod models": [[305, "resmod-models"]], "Changelog": [[277, "changelog"]], "0.99.0 (2023-08-23)": [[277, "id1"]], "New features": [[277, "new-features"], [277, "id3"], [277, "id6"], [277, "id10"], [277, "id16"], [277, "id20"], [277, "id24"], [277, "id27"], [277, "id31"], [277, "id34"], [277, "id37"], [277, "id50"], [277, "id60"], [277, "id67"], [277, "id78"], [277, "id82"], [277, "id89"], [277, "id92"], [277, "id96"], [277, "id102"], [277, "id106"], [277, "id112"], [277, "id117"], [277, "id121"], [277, "id124"], [277, "id132"], [277, "id136"], [277, "id142"], [277, "id151"], [277, "id155"], [277, "id158"], [277, "id162"], [277, "id164"], [277, "id169"], [277, "id172"], [277, "id176"]], "Changes": [[277, "changes"], [277, "id4"], [277, "id7"], [277, "id9"], [277, "id13"], [277, "id17"], [277, "id21"], [277, "id28"], [277, "id32"], [277, "id35"], [277, "id38"], [277, "id40"], [277, "id42"], [277, "id45"], [277, "id48"], [277, "id51"], [277, "id53"], [277, "id56"], [277, "id61"], [277, "id64"], [277, "id68"], [277, "id71"], [277, "id74"], [277, "id79"], [277, "id83"], [277, "id86"], [277, "id90"], [277, "id93"], [277, "id97"], [277, "id103"], [277, "id107"], [277, "id118"], [277, "id122"], [277, "id127"], [277, "id133"], [277, "id143"], [277, "id148"], [277, "id152"], [277, "id159"], [277, "id165"], [277, "id170"], [277, "id173"], [277, "id177"]], "Bugfixes": [[277, "bugfixes"], [277, "id11"], [277, "id14"], [277, "id18"], [277, "id22"], [277, "id25"], [277, "id29"], [277, "id43"], [277, "id46"], [277, "id72"], [277, "id76"], [277, "id80"], [277, "id84"], [277, "id87"], [277, "id94"], [277, "id98"], [277, "id100"], [277, "id104"], [277, "id108"], [277, "id110"], [277, "id113"], [277, "id115"], [277, "id119"], [277, "id125"], [277, "id128"], [277, "id130"], [277, "id134"], [277, "id138"], [277, "id140"], [277, "id144"], [277, "id146"], [277, "id149"], [277, "id153"], [277, "id156"], [277, "id160"], [277, "id167"], [277, "id174"], [277, "id178"]], "0.98.0 (2023-07-21)": [[277, "id2"]], "0.97.0 (2023-06-28)": [[277, "id5"]], "0.96.0 (2023-05-26)": [[277, "id8"]], "0.95.0 (2023-05-22)": [[277, "id12"]], "0.94.0 (2023-04-26)": [[277, "id15"]], "0.93.0 (2023-04-19)": [[277, "id19"]], "0.92.0 (2023-04-05)": [[277, "id23"]], "0.91.0 (2023-03-03)": [[277, "id26"]], "0.90.0 (2023-02-24)": [[277, "id30"]], "0.89.0 (2023-01-26)": [[277, "id33"]], "0.88.0 (2022-12-21)": [[277, "id36"]], "0.87.0 (2022-12-14)": [[277, "id39"]], "0.86.0 (2022-11-30)": [[277, "id41"]], "0.85.0 (2022-11-18)": [[277, "id44"]], "0.84.1 (2022-11-13)": [[277, "id47"]], "Bug fixes": [[277, "bug-fixes"], [277, "id54"], [277, "id58"], [277, "id62"], [277, "id65"], [277, "id69"]], "0.84.0 (2022-11-09)": [[277, "id49"]], "0.83.0 (2022-11-01)": [[277, "id52"]], "0.82.0 (2022-10-24)": [[277, "id55"]], "0.81.1 (2022-10-24)": [[277, "id57"]], "0.81.0 (2022-10-21)": [[277, "id59"]], "0.80.0 (2022-10-19)": [[277, "id63"]], "0.79.0 (2022-10-16)": [[277, "id66"]], "0.78.0 (2022-09-20)": [[277, "id70"]], "0.77.0 (2022-09-08)": [[277, "id73"]], "0.76.1 (2022-09-06)": [[277, "id75"]], "0.76.0 (2022-09-05)": [[277, "id77"]], "0.75.0 (2022-08-10)": [[277, "id81"]], "0.74.0 (2022-07-18)": [[277, "id85"]], "0.73.0 (2022-06-21)": [[277, "id88"]], "0.72.0 (2022-06-08)": [[277, "id91"]], "0.71.0 (2022-05-24)": [[277, "id95"]], "0.70.1 (2022-05-17)": [[277, "id99"]], "0.70.0 (2022-05-13)": [[277, "id101"]], "0.69.0 (2022-04-29)": [[277, "id105"]], "0.68.0 (2022-04-27)": [[277, "id109"]], "0.67.0 (2022-04-25)": [[277, "id111"]], "0.66.0 (2022-04-20)": [[277, "id114"]], "0.65.0 (2022-04-14)": [[277, "id116"]], "0.64.0 (2022-04-12)": [[277, "id120"]], "0.63.0 (2022-04-07)": [[277, "id123"]], "0.62.0 (2022-04-04)": [[277, "id126"]], "New feature": [[277, "new-feature"]], "0.61.1 (2022-03-31)": [[277, "id129"]], "0.61.0 (2022-03-29)": [[277, "id131"]], "0.59.0 (2022-03-25)": [[277, "id135"]], "0.58.4 (2022-03-24)": [[277, "id137"]], "0.58.1 (2022-03-22)": [[277, "id139"]], "0.58.0 (2022-03-22)": [[277, "id141"]], "0.57.0 (2022-03-21)": [[277, "id145"]], "0.56.0 (2022-03-17)": [[277, "id147"]], "0.55.0 (2022-03-16)": [[277, "id150"]], "0.54.0 (2022-03-08)": [[277, "id154"]], "0.53.0 (2022-03-04)": [[277, "id157"]], "0.52.0 (2022-02-25)": [[277, "id161"]], "0.51.0 (2022-02-24)": [[277, "id163"]], "0.50.1 (2022-02-16)": [[277, "id166"]], "0.50.0 (2022-02-16)": [[277, "id168"]], "0.49.0 (2022-02-10)": [[277, "id171"]], "0.48.0 (2022-02-04)": [[277, "id175"]], "0.47.0 (2022-01-28)": [[277, "id179"]], "0.46.0 (2022-01-27)": [[277, "id180"]], "0.45.0 (2022-01-21)": [[277, "id181"]], "0.44.0 (2022-01-20)": [[277, "id182"]], "0.43.0 (2022-01-12)": [[277, "id183"]], "0.42.0 (2022-01-11)": [[277, "id184"]], "0.41.0 (2021-12-21)": [[277, "id185"]], "0.40.0 (2021-12-16)": [[277, "id186"]], "0.39.0 (2021-12-15)": [[277, "id187"]], "0.38.0 (2021-12-08)": [[277, "id188"]], "0.37.1 (2021-11-26)": [[277, "id189"]], "0.37.0 (2021-11-24)": [[277, "id190"]], "0.36.0 (2021-11-11)": [[277, "id191"]], "0.35.0 (2021-11-02)": [[277, "id192"]], "0.34.3 (2021-10-28)": [[277, "id193"]], "0.34.2 (2021-10-26)": [[277, "id194"]], "0.34.1 (2021-10-20)": [[277, "id195"]], "0.34.0 (2021-10-14)": [[277, "id196"]], "0.33.0 (2021-10-11)": [[277, "id197"]], "0.32.0 (2021-09-28)": [[277, "id198"]], "0.31.0 (2021-09-21)": [[277, "id199"]], "0.30.0 (2021-09-06)": [[277, "id200"]], "0.29.0 (2021-08-25)": [[277, "id201"]], "0.28.0 (2021-08-24)": [[277, "id202"]], "0.27.0 (2021-08-09)": [[277, "id203"]], "0.26.1 (2021-08-04)": [[277, "id204"]], "0.26.0 (2021-07-13)": [[277, "id205"]], "0.25.1 (2021-07-08)": [[277, "id206"]], "0.25.0 (2021-06-24)": [[277, "id207"]], "0.24.0 (2021-05-25)": [[277, "id208"]], "0.23.4 (2021-05-03)": [[277, "id209"]], "0.23.3 (2021-04-29)": [[277, "id210"]], "0.23.2 (2021-04-28)": [[277, "id211"]], "0.23.1 (2021-04-28)": [[277, "id212"]], "0.23.0 (2021-04-28)": [[277, "id213"]], "0.22.0 (2021-03-29)": [[277, "id214"]], "0.21.0 (2021-03-22)": [[277, "id215"]], "0.20.1 (2021-03-11)": [[277, "id216"]], "0.20.0 (2021-03-11)": [[277, "id217"]], "0.19.0 (2021-03-02)": [[277, "id218"]], "0.18.0 (2021-03-01)": [[277, "id219"]], "0.17.0 (2021-02-15)": [[277, "id220"]], "0.16.0 (2021-02-08)": [[277, "id221"]], "0.15.0 (2021-02-01)": [[277, "id222"]], "0.14.0 (2021-01-25)": [[277, "id223"]], "0.13.0 (2021-01-18)": [[277, "id224"]], "0.12.0 (2020-12-18)": [[277, "id225"]], "0.11.0 (2020-11-20)": [[277, "id226"]], "0.10.0 (2020-11-16)": [[277, "id227"]], "0.9.0 (2020-10-26)": [[277, "id228"]], "0.8.0 (2020-10-08)": [[277, "id229"]], "0.7.0 (2020-09-28)": [[277, "id230"]], "0.6.0 (2020-09-18)": [[277, "id231"]], "0.5.0 (2020-09-04)": [[277, "id232"]], "0.4.0 (2020-07-24)": [[277, "id233"]], "0.3.0 (2020-06-16)": [[277, "id234"]], "0.2.0 (2020-03-27)": [[277, "id235"]], "0.1.0 (2018-07-22)": [[277, "id236"]], "Crossval": [[285, "crossval"]], "The crossval results": [[285, "the-crossval-results"]], "Crossvalidation OFVs": [[285, "crossvalidation-ofvs"]], "FREM": [[290, "frem"]], "The FREM postprocessing and results": [[290, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[290, "parameter-covariate-coefficients"]], "Individual covariate effects": [[290, "individual-covariate-effects"]], "Unexplained variability": [[290, "unexplained-variability"]], "OFV": [[290, "ofv"]], "Estimated covariate values": [[290, "estimated-covariate-values"]], "References": [[290, "references"], [276, "references"]], "Contribute": [[282, "contribute"]], "Set up the development environment": [[282, "set-up-the-development-environment"]], "Supported platforms": [[282, "supported-platforms"]], "Install Python": [[282, "install-python"]], "Install git": [[282, "install-git"]], "Fork and clone the code repository": [[282, "fork-and-clone-the-code-repository"]], "Install tox": [[282, "install-tox"]], "Install graphviz used for building the documentation": [[282, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[282, "using-the-development-environment"]], "Running tox": [[282, "running-tox"]], "Check code formatting": [[282, "check-code-formatting"]], "Run the unit tests": [[282, "run-the-unit-tests"]], "Build and test the documentation": [[282, "build-and-test-the-documentation"]], "Run the integration tests": [[282, "run-the-integration-tests"]], "Build a usable virtual environment": [[282, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[282, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[282, "releasing-pharmpy-and-documentation"]], "Version": [[282, "version"]], "Information for developers": [[282, "information-for-developers"]], "Plugins": [[303, "plugins"]], "Overview of a plugin": [[303, "overview-of-a-plugin"]], "The Pharmpy model": [[297, "the-pharmpy-model"]], "Reading in a model": [[297, "reading-in-a-model"], [301, "reading-in-a-model"]], "Writing a model": [[297, "writing-a-model"], [301, "writing-a-model"]], "Inspecting the model attributes": [[297, "inspecting-the-model-attributes"]], "Name and description": [[297, "name-and-description"]], "Random variables": [[297, "random-variables"]], "Dataset and datainfo": [[297, "dataset-and-datainfo"]], "Estimation steps": [[297, "estimation-steps"], [299, "estimation-steps"]], "Dependent variables": [[297, "dependent-variables"]], "Low level manipulations of the model object": [[297, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[297, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[297, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Modelsearch": [[300, "modelsearch"]], "The search space": [[300, "the-search-space"]], "Common behaviours between algorithms": [[300, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[300, "feature-combination-exclusions"]], "Exhaustive search": [[300, "exhaustive-search"]], "Exhaustive stepwise search": [[300, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[300, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[300, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[300, "the-modelsearch-results"]], "Using the NONMEM plugin": [[301, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[301, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[301, "new-parameters-and-random-variables"]], "Modeling": [[299, "modeling"]], "Basic functions": [[299, "basic-functions"]], "Reading and writing models": [[299, "reading-and-writing-models"]], "Loading example models": [[299, "loading-example-models"]], "Converting models": [[299, "converting-models"]], "Create basic models": [[299, "create-basic-models"]], "Modeling transformations": [[299, "modeling-transformations"]], "Structural model": [[299, "structural-model"]], "Absorption rate": [[299, "absorption-rate"]], "Absorption delay": [[299, "absorption-delay"]], "Elimination": [[299, "elimination"]], "Parameter variability model": [[299, "parameter-variability-model"]], "Adding and removing parameter variability": [[299, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[299, "adding-and-removing-covariance"]], "Eta transformations": [[299, "eta-transformations"]], "Covariates and allometry": [[299, "covariates-and-allometry"]], "Population parameters": [[299, "population-parameters"]], "Error model": [[299, "error-model"]], "BLQ transformations": [[299, "blq-transformations"]], "Examining and modifying dataset": [[299, "examining-and-modifying-dataset"]], "Subjects": [[299, "subjects"]], "Observations": [[299, "observations"]], "Dosing": [[299, "dosing"]], "Extract dosing information": [[299, "extract-dosing-information"]], "Dose grouping": [[299, "dose-grouping"]], "Time after dose": [[299, "time-after-dose"]], "Concentration parameters": [[299, "concentration-parameters"]], "Plots in Pharmpy": [[302, "plots-in-pharmpy"]], "Setting themes": [[302, "setting-themes"]], "Changing axis of plots": [[302, "changing-axis-of-plots"]], "scm": [[309, "scm"]], "The scm results": [[309, "the-scm-results"]], "Steps": [[309, "steps"]], "OFV Summary": [[309, "ofv-summary"]], "Candidate Summary": [[309, "candidate-summary"]], "The Pharmpy command line interface": [[279, "the-pharmpy-command-line-interface"]], "pharmpy": [[279, "pharmpy"]], "pharmpy data": [[279, "pharmpy-data"]], "pharmpy data append": [[279, "pharmpy-data-append"]], "pharmpy data deidentify": [[279, "pharmpy-data-deidentify"]], "pharmpy data filter": [[279, "pharmpy-data-filter"]], "pharmpy data print": [[279, "pharmpy-data-print"]], "pharmpy data resample": [[279, "pharmpy-data-resample"]], "pharmpy data write": [[279, "pharmpy-data-write"]], "pharmpy info": [[279, "pharmpy-info"]], "pharmpy model": [[279, "pharmpy-model"]], "pharmpy model absorption_rate": [[279, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[279, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[279, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[279, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[279, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[279, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[279, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[279, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[279, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[279, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[279, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[279, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[279, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[279, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[279, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[279, "pharmpy-model-sample"]], "pharmpy model tdist": [[279, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[279, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[279, "pharmpy-model-update-inits"]], "pharmpy results": [[279, "pharmpy-results"]], "pharmpy results bootstrap": [[279, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[279, "pharmpy-results-cdd"]], "pharmpy results frem": [[279, "pharmpy-results-frem"]], "pharmpy results linearize": [[279, "pharmpy-results-linearize"]], "pharmpy results ofv": [[279, "pharmpy-results-ofv"]], "pharmpy results print": [[279, "pharmpy-results-print"]], "pharmpy results qa": [[279, "pharmpy-results-qa"]], "pharmpy results report": [[279, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[279, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[279, "pharmpy-results-scm"]], "pharmpy results simeval": [[279, "pharmpy-results-simeval"]], "pharmpy results summary": [[279, "pharmpy-results-summary"]], "pharmpy run": [[279, "pharmpy-run"]], "pharmpy run allometry": [[279, "pharmpy-run-allometry"]], "pharmpy run amd": [[279, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[279, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[279, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[279, "pharmpy-run-estmethod"]], "pharmpy run execute": [[279, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[279, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[279, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[279, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[279, "pharmpy-run-ruvsearch"]], "Case deletion diagnostics": [[276, "case-deletion-diagnostics"]], "The cdd results": [[276, "the-cdd-results"]], "Case results": [[276, "case-results"]], "Cook score": [[276, "cook-score"]], "Jackknife cookscore": [[276, "jackknife-cookscore"]], "Covariance ratio": [[276, "covariance-ratio"]], "Delta OFV": [[276, "delta-ofv"]], "Skipped individuals": [[276, "skipped-individuals"]], "Case column": [[276, "case-column"]], "Estmethod": [[289, "estmethod"]], "Exhaustive": [[289, "exhaustive"]], "Exhaustive (with update)": [[289, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[289, "exhaustive-only-evaluation"]], "Methods": [[289, "methods"]], "Solvers": [[289, "solvers"]], "The Estmethod results": [[289, "the-estmethod-results"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "admid (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.admid"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_covs (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_covs"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "admid (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.admid"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[23, "pharmpy.model.ODESystem"]], "parameter (class in pharmpy.model)": [[24, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[25, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[26, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[27, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[27, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[28, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[28, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[29, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[29, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[32, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_bioavailability"]], "add_covariance_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_omegas"]], "get_pd_parameters() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.has_first_order_elimination"]], "has_linear_odes() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_odes"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_random_effect"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.remove_bioavailability"]], "remove_covariance_step() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_initial_estimates"]], "set_lloq_data() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[224, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[225, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[226, "pharmpy.tools.fit"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[227, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[228, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[229, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[230, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[231, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[232, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[233, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[234, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[235, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[236, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[237, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[238, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[239, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[240, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[241, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[242, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[243, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[244, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[245, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[246, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[247, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[248, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[249, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[250, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[251, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[252, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[253, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[254, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[255, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[255, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[256, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[257, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[257, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[257, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[257, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[258, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[258, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[258, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[258, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[258, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[258, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[258, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[259, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[259, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[260, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[260, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[261, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[261, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[261, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[261, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[261, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[262, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[262, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[262, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[262, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[262, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[262, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[263, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[263, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[263, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[263, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[263, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[263, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[263, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[264, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[264, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[264, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[264, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[264, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[264, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[265, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[265, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[265, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[265, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[266, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[267, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[268, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[269, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[270, "pharmpy.workflows.split_common_options"]], "module": [[271, "module-pharmpy.model"], [272, "module-pharmpy.modeling"], [273, "module-pharmpy.tools"], [274, "module-pharmpy.workflows"]], "pharmpy.model": [[271, "module-pharmpy.model"]], "pharmpy.modeling": [[272, "module-pharmpy.modeling"]], "pharmpy.tools": [[273, "module-pharmpy.tools"]], "pharmpy.workflows": [[274, "module-pharmpy.workflows"]], "--algorithm": [[279, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[279, "cmdoption-pharmpy-run-allometry-allometric_variable"], [279, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[279, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[279, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[279, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[279, "cmdoption-pharmpy-run-iivsearch-cutoff"], [279, "cmdoption-pharmpy-run-iovsearch-cutoff"], [279, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[279, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[279, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[279, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[279, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [279, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[279, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[279, "cmdoption-pharmpy-model-add_iov-eta_names"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[279, "cmdoption-pharmpy-model-add_iov-etas"], [279, "cmdoption-pharmpy-model-boxcox-etas"], [279, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [279, "cmdoption-pharmpy-model-john_draper-etas"], [279, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[279, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[279, "cmdoption-pharmpy-data-append-f"], [279, "cmdoption-pharmpy-data-deidentify-f"], [279, "cmdoption-pharmpy-data-filter-f"], [279, "cmdoption-pharmpy-data-write-f"], [279, "cmdoption-pharmpy-model-absorption_rate-f"], [279, "cmdoption-pharmpy-model-add_cov_effect-f"], [279, "cmdoption-pharmpy-model-add_iiv-f"], [279, "cmdoption-pharmpy-model-add_iov-f"], [279, "cmdoption-pharmpy-model-boxcox-f"], [279, "cmdoption-pharmpy-model-create_joint_distribution-f"], [279, "cmdoption-pharmpy-model-elimination_rate-f"], [279, "cmdoption-pharmpy-model-error-f"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [279, "cmdoption-pharmpy-model-john_draper-f"], [279, "cmdoption-pharmpy-model-peripheral_compartments-f"], [279, "cmdoption-pharmpy-model-power_on_ruv-f"], [279, "cmdoption-pharmpy-model-remove_iiv-f"], [279, "cmdoption-pharmpy-model-remove_iov-f"], [279, "cmdoption-pharmpy-model-tdist-f"], [279, "cmdoption-pharmpy-model-transit_compartments-f"], [279, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[279, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[279, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[279, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[279, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[279, "cmdoption-pharmpy-data-append-h"], [279, "cmdoption-pharmpy-data-deidentify-h"], [279, "cmdoption-pharmpy-data-filter-h"], [279, "cmdoption-pharmpy-data-h"], [279, "cmdoption-pharmpy-data-print-h"], [279, "cmdoption-pharmpy-data-resample-h"], [279, "cmdoption-pharmpy-data-write-h"], [279, "cmdoption-pharmpy-h"], [279, "cmdoption-pharmpy-info-h"], [279, "cmdoption-pharmpy-model-absorption_rate-h"], [279, "cmdoption-pharmpy-model-add_cov_effect-h"], [279, "cmdoption-pharmpy-model-add_iiv-h"], [279, "cmdoption-pharmpy-model-add_iov-h"], [279, "cmdoption-pharmpy-model-boxcox-h"], [279, "cmdoption-pharmpy-model-create_joint_distribution-h"], [279, "cmdoption-pharmpy-model-elimination_rate-h"], [279, "cmdoption-pharmpy-model-error-h"], [279, "cmdoption-pharmpy-model-h"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [279, "cmdoption-pharmpy-model-john_draper-h"], [279, "cmdoption-pharmpy-model-peripheral_compartments-h"], [279, "cmdoption-pharmpy-model-power_on_ruv-h"], [279, "cmdoption-pharmpy-model-print-h"], [279, "cmdoption-pharmpy-model-remove_iiv-h"], [279, "cmdoption-pharmpy-model-remove_iov-h"], [279, "cmdoption-pharmpy-model-sample-h"], [279, "cmdoption-pharmpy-model-tdist-h"], [279, "cmdoption-pharmpy-model-transit_compartments-h"], [279, "cmdoption-pharmpy-model-update_inits-h"], [279, "cmdoption-pharmpy-results-bootstrap-h"], [279, "cmdoption-pharmpy-results-cdd-h"], [279, "cmdoption-pharmpy-results-frem-h"], [279, "cmdoption-pharmpy-results-h"], [279, "cmdoption-pharmpy-results-linearize-h"], [279, "cmdoption-pharmpy-results-ofv-h"], [279, "cmdoption-pharmpy-results-print-h"], [279, "cmdoption-pharmpy-results-qa-h"], [279, "cmdoption-pharmpy-results-report-h"], [279, "cmdoption-pharmpy-results-ruvsearch-h"], [279, "cmdoption-pharmpy-results-scm-h"], [279, "cmdoption-pharmpy-results-simeval-h"], [279, "cmdoption-pharmpy-results-summary-h"], [279, "cmdoption-pharmpy-run-allometry-h"], [279, "cmdoption-pharmpy-run-amd-h"], [279, "cmdoption-pharmpy-run-bootstrap-h"], [279, "cmdoption-pharmpy-run-covsearch-h"], [279, "cmdoption-pharmpy-run-estmethod-h"], [279, "cmdoption-pharmpy-run-execute-h"], [279, "cmdoption-pharmpy-run-h"], [279, "cmdoption-pharmpy-run-iivsearch-h"], [279, "cmdoption-pharmpy-run-iovsearch-h"], [279, "cmdoption-pharmpy-run-modelsearch-h"], [279, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[279, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[279, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [279, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[279, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[279, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[279, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[279, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[279, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[279, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[279, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[279, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[279, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[279, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[279, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[279, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[279, "cmdoption-pharmpy-model-add_cov_effect-operation"], [279, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[279, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[279, "cmdoption-pharmpy-data-append-o"], [279, "cmdoption-pharmpy-data-deidentify-o"], [279, "cmdoption-pharmpy-data-filter-o"], [279, "cmdoption-pharmpy-data-write-o"], [279, "cmdoption-pharmpy-model-absorption_rate-o"], [279, "cmdoption-pharmpy-model-add_cov_effect-o"], [279, "cmdoption-pharmpy-model-add_iiv-o"], [279, "cmdoption-pharmpy-model-add_iov-o"], [279, "cmdoption-pharmpy-model-boxcox-o"], [279, "cmdoption-pharmpy-model-create_joint_distribution-o"], [279, "cmdoption-pharmpy-model-elimination_rate-o"], [279, "cmdoption-pharmpy-model-error-o"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [279, "cmdoption-pharmpy-model-john_draper-o"], [279, "cmdoption-pharmpy-model-peripheral_compartments-o"], [279, "cmdoption-pharmpy-model-power_on_ruv-o"], [279, "cmdoption-pharmpy-model-remove_iiv-o"], [279, "cmdoption-pharmpy-model-remove_iov-o"], [279, "cmdoption-pharmpy-model-tdist-o"], [279, "cmdoption-pharmpy-model-transit_compartments-o"], [279, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[279, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[279, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[279, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[279, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[279, "cmdoption-pharmpy-run-allometry-path"], [279, "cmdoption-pharmpy-run-amd-path"], [279, "cmdoption-pharmpy-run-covsearch-path"], [279, "cmdoption-pharmpy-run-estmethod-path"], [279, "cmdoption-pharmpy-run-iivsearch-path"], [279, "cmdoption-pharmpy-run-iovsearch-path"], [279, "cmdoption-pharmpy-run-modelsearch-path"], [279, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[279, "cmdoption-pharmpy-run-iivsearch-rank_type"], [279, "cmdoption-pharmpy-run-iovsearch-rank_type"], [279, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[279, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[279, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[279, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[279, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[279, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[279, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[279, "cmdoption-pharmpy-model-sample-samples"], [279, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[279, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[279, "cmdoption-pharmpy-data-resample-seed"], [279, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[279, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[279, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[279, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[279, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[279, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[279, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[279, "cmdoption-pharmpy-version"]], "-f": [[279, "cmdoption-pharmpy-data-append-f"], [279, "cmdoption-pharmpy-data-deidentify-f"], [279, "cmdoption-pharmpy-data-filter-f"], [279, "cmdoption-pharmpy-data-write-f"], [279, "cmdoption-pharmpy-model-absorption_rate-f"], [279, "cmdoption-pharmpy-model-add_cov_effect-f"], [279, "cmdoption-pharmpy-model-add_iiv-f"], [279, "cmdoption-pharmpy-model-add_iov-f"], [279, "cmdoption-pharmpy-model-boxcox-f"], [279, "cmdoption-pharmpy-model-create_joint_distribution-f"], [279, "cmdoption-pharmpy-model-elimination_rate-f"], [279, "cmdoption-pharmpy-model-error-f"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [279, "cmdoption-pharmpy-model-john_draper-f"], [279, "cmdoption-pharmpy-model-peripheral_compartments-f"], [279, "cmdoption-pharmpy-model-power_on_ruv-f"], [279, "cmdoption-pharmpy-model-remove_iiv-f"], [279, "cmdoption-pharmpy-model-remove_iov-f"], [279, "cmdoption-pharmpy-model-tdist-f"], [279, "cmdoption-pharmpy-model-transit_compartments-f"], [279, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[279, "cmdoption-pharmpy-data-append-h"], [279, "cmdoption-pharmpy-data-deidentify-h"], [279, "cmdoption-pharmpy-data-filter-h"], [279, "cmdoption-pharmpy-data-h"], [279, "cmdoption-pharmpy-data-print-h"], [279, "cmdoption-pharmpy-data-resample-h"], [279, "cmdoption-pharmpy-data-write-h"], [279, "cmdoption-pharmpy-h"], [279, "cmdoption-pharmpy-info-h"], [279, "cmdoption-pharmpy-model-absorption_rate-h"], [279, "cmdoption-pharmpy-model-add_cov_effect-h"], [279, "cmdoption-pharmpy-model-add_iiv-h"], [279, "cmdoption-pharmpy-model-add_iov-h"], [279, "cmdoption-pharmpy-model-boxcox-h"], [279, "cmdoption-pharmpy-model-create_joint_distribution-h"], [279, "cmdoption-pharmpy-model-elimination_rate-h"], [279, "cmdoption-pharmpy-model-error-h"], [279, "cmdoption-pharmpy-model-h"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [279, "cmdoption-pharmpy-model-john_draper-h"], [279, "cmdoption-pharmpy-model-peripheral_compartments-h"], [279, "cmdoption-pharmpy-model-power_on_ruv-h"], [279, "cmdoption-pharmpy-model-print-h"], [279, "cmdoption-pharmpy-model-remove_iiv-h"], [279, "cmdoption-pharmpy-model-remove_iov-h"], [279, "cmdoption-pharmpy-model-sample-h"], [279, "cmdoption-pharmpy-model-tdist-h"], [279, "cmdoption-pharmpy-model-transit_compartments-h"], [279, "cmdoption-pharmpy-model-update_inits-h"], [279, "cmdoption-pharmpy-results-bootstrap-h"], [279, "cmdoption-pharmpy-results-cdd-h"], [279, "cmdoption-pharmpy-results-frem-h"], [279, "cmdoption-pharmpy-results-h"], [279, "cmdoption-pharmpy-results-linearize-h"], [279, "cmdoption-pharmpy-results-ofv-h"], [279, "cmdoption-pharmpy-results-print-h"], [279, "cmdoption-pharmpy-results-qa-h"], [279, "cmdoption-pharmpy-results-report-h"], [279, "cmdoption-pharmpy-results-ruvsearch-h"], [279, "cmdoption-pharmpy-results-scm-h"], [279, "cmdoption-pharmpy-results-simeval-h"], [279, "cmdoption-pharmpy-results-summary-h"], [279, "cmdoption-pharmpy-run-allometry-h"], [279, "cmdoption-pharmpy-run-amd-h"], [279, "cmdoption-pharmpy-run-bootstrap-h"], [279, "cmdoption-pharmpy-run-covsearch-h"], [279, "cmdoption-pharmpy-run-estmethod-h"], [279, "cmdoption-pharmpy-run-execute-h"], [279, "cmdoption-pharmpy-run-h"], [279, "cmdoption-pharmpy-run-iivsearch-h"], [279, "cmdoption-pharmpy-run-iovsearch-h"], [279, "cmdoption-pharmpy-run-modelsearch-h"], [279, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[279, "cmdoption-pharmpy-data-append-o"], [279, "cmdoption-pharmpy-data-deidentify-o"], [279, "cmdoption-pharmpy-data-filter-o"], [279, "cmdoption-pharmpy-data-write-o"], [279, "cmdoption-pharmpy-model-absorption_rate-o"], [279, "cmdoption-pharmpy-model-add_cov_effect-o"], [279, "cmdoption-pharmpy-model-add_iiv-o"], [279, "cmdoption-pharmpy-model-add_iov-o"], [279, "cmdoption-pharmpy-model-boxcox-o"], [279, "cmdoption-pharmpy-model-create_joint_distribution-o"], [279, "cmdoption-pharmpy-model-elimination_rate-o"], [279, "cmdoption-pharmpy-model-error-o"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [279, "cmdoption-pharmpy-model-john_draper-o"], [279, "cmdoption-pharmpy-model-peripheral_compartments-o"], [279, "cmdoption-pharmpy-model-power_on_ruv-o"], [279, "cmdoption-pharmpy-model-remove_iiv-o"], [279, "cmdoption-pharmpy-model-remove_iov-o"], [279, "cmdoption-pharmpy-model-tdist-o"], [279, "cmdoption-pharmpy-model-transit_compartments-o"], [279, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[279, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [279, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [279, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[279, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[279, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[279, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[279, "cmdoption-pharmpy-data-append-arg-expression"], [279, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[279, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[279, "cmdoption-pharmpy-data-append-arg-file"], [279, "cmdoption-pharmpy-data-deidentify-arg-file"], [279, "cmdoption-pharmpy-data-filter-arg-file"], [279, "cmdoption-pharmpy-data-print-arg-file"], [279, "cmdoption-pharmpy-data-resample-arg-file"], [279, "cmdoption-pharmpy-data-write-arg-file"], [279, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [279, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [279, "cmdoption-pharmpy-model-add_iiv-arg-file"], [279, "cmdoption-pharmpy-model-add_iov-arg-file"], [279, "cmdoption-pharmpy-model-boxcox-arg-file"], [279, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [279, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [279, "cmdoption-pharmpy-model-error-arg-file"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [279, "cmdoption-pharmpy-model-john_draper-arg-file"], [279, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [279, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [279, "cmdoption-pharmpy-model-print-arg-file"], [279, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [279, "cmdoption-pharmpy-model-remove_iov-arg-file"], [279, "cmdoption-pharmpy-model-sample-arg-file"], [279, "cmdoption-pharmpy-model-tdist-arg-file"], [279, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [279, "cmdoption-pharmpy-model-update_inits-arg-file"], [279, "cmdoption-pharmpy-results-ofv-arg-file"], [279, "cmdoption-pharmpy-results-print-arg-file"], [279, "cmdoption-pharmpy-results-summary-arg-file"], [279, "cmdoption-pharmpy-run-allometry-arg-file"], [279, "cmdoption-pharmpy-run-bootstrap-arg-file"], [279, "cmdoption-pharmpy-run-covsearch-arg-file"], [279, "cmdoption-pharmpy-run-estmethod-arg-file"], [279, "cmdoption-pharmpy-run-execute-arg-file"], [279, "cmdoption-pharmpy-run-iivsearch-arg-file"], [279, "cmdoption-pharmpy-run-iovsearch-arg-file"], [279, "cmdoption-pharmpy-run-modelsearch-arg-file"], [279, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[279, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[279, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[279, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [279, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[279, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[279, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [279, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[279, "cmdoption-pharmpy-h"], [279, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[279, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[279, "cmdoption-pharmpy-data-append-arg-expression"], [279, "cmdoption-pharmpy-data-append-arg-file"], [279, "cmdoption-pharmpy-data-append-f"], [279, "cmdoption-pharmpy-data-append-h"], [279, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[279, "cmdoption-pharmpy-data-deidentify-arg-file"], [279, "cmdoption-pharmpy-data-deidentify-datecols"], [279, "cmdoption-pharmpy-data-deidentify-f"], [279, "cmdoption-pharmpy-data-deidentify-h"], [279, "cmdoption-pharmpy-data-deidentify-idcol"], [279, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[279, "cmdoption-pharmpy-data-filter-arg-expressions"], [279, "cmdoption-pharmpy-data-filter-arg-file"], [279, "cmdoption-pharmpy-data-filter-f"], [279, "cmdoption-pharmpy-data-filter-h"], [279, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[279, "cmdoption-pharmpy-data-print-arg-file"], [279, "cmdoption-pharmpy-data-print-columns"], [279, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[279, "cmdoption-pharmpy-data-resample-arg-file"], [279, "cmdoption-pharmpy-data-resample-group"], [279, "cmdoption-pharmpy-data-resample-h"], [279, "cmdoption-pharmpy-data-resample-replace"], [279, "cmdoption-pharmpy-data-resample-resamples"], [279, "cmdoption-pharmpy-data-resample-sample_size"], [279, "cmdoption-pharmpy-data-resample-seed"], [279, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[279, "cmdoption-pharmpy-data-write-arg-file"], [279, "cmdoption-pharmpy-data-write-f"], [279, "cmdoption-pharmpy-data-write-h"], [279, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[279, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[279, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[279, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [279, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [279, "cmdoption-pharmpy-model-absorption_rate-f"], [279, "cmdoption-pharmpy-model-absorption_rate-h"], [279, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[279, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [279, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [279, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [279, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [279, "cmdoption-pharmpy-model-add_cov_effect-f"], [279, "cmdoption-pharmpy-model-add_cov_effect-h"], [279, "cmdoption-pharmpy-model-add_cov_effect-o"], [279, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[279, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [279, "cmdoption-pharmpy-model-add_iiv-arg-file"], [279, "cmdoption-pharmpy-model-add_iiv-arg-param"], [279, "cmdoption-pharmpy-model-add_iiv-eta_name"], [279, "cmdoption-pharmpy-model-add_iiv-f"], [279, "cmdoption-pharmpy-model-add_iiv-h"], [279, "cmdoption-pharmpy-model-add_iiv-o"], [279, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[279, "cmdoption-pharmpy-model-add_iov-arg-file"], [279, "cmdoption-pharmpy-model-add_iov-arg-occ"], [279, "cmdoption-pharmpy-model-add_iov-eta_names"], [279, "cmdoption-pharmpy-model-add_iov-etas"], [279, "cmdoption-pharmpy-model-add_iov-f"], [279, "cmdoption-pharmpy-model-add_iov-h"], [279, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[279, "cmdoption-pharmpy-model-boxcox-arg-file"], [279, "cmdoption-pharmpy-model-boxcox-etas"], [279, "cmdoption-pharmpy-model-boxcox-f"], [279, "cmdoption-pharmpy-model-boxcox-h"], [279, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[279, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [279, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [279, "cmdoption-pharmpy-model-create_joint_distribution-f"], [279, "cmdoption-pharmpy-model-create_joint_distribution-h"], [279, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[279, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [279, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [279, "cmdoption-pharmpy-model-elimination_rate-f"], [279, "cmdoption-pharmpy-model-elimination_rate-h"], [279, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[279, "cmdoption-pharmpy-model-error-arg-error_type"], [279, "cmdoption-pharmpy-model-error-arg-file"], [279, "cmdoption-pharmpy-model-error-f"], [279, "cmdoption-pharmpy-model-error-h"], [279, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[279, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [279, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[279, "cmdoption-pharmpy-model-john_draper-arg-file"], [279, "cmdoption-pharmpy-model-john_draper-etas"], [279, "cmdoption-pharmpy-model-john_draper-f"], [279, "cmdoption-pharmpy-model-john_draper-h"], [279, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[279, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [279, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [279, "cmdoption-pharmpy-model-peripheral_compartments-f"], [279, "cmdoption-pharmpy-model-peripheral_compartments-h"], [279, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[279, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [279, "cmdoption-pharmpy-model-power_on_ruv-eps"], [279, "cmdoption-pharmpy-model-power_on_ruv-f"], [279, "cmdoption-pharmpy-model-power_on_ruv-h"], [279, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[279, "cmdoption-pharmpy-model-print-arg-file"], [279, "cmdoption-pharmpy-model-print-explicit-odes"], [279, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[279, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [279, "cmdoption-pharmpy-model-remove_iiv-f"], [279, "cmdoption-pharmpy-model-remove_iiv-h"], [279, "cmdoption-pharmpy-model-remove_iiv-o"], [279, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[279, "cmdoption-pharmpy-model-remove_iov-arg-file"], [279, "cmdoption-pharmpy-model-remove_iov-f"], [279, "cmdoption-pharmpy-model-remove_iov-h"], [279, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[279, "cmdoption-pharmpy-model-sample-arg-file"], [279, "cmdoption-pharmpy-model-sample-h"], [279, "cmdoption-pharmpy-model-sample-samples"], [279, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[279, "cmdoption-pharmpy-model-tdist-arg-file"], [279, "cmdoption-pharmpy-model-tdist-etas"], [279, "cmdoption-pharmpy-model-tdist-f"], [279, "cmdoption-pharmpy-model-tdist-h"], [279, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[279, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [279, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [279, "cmdoption-pharmpy-model-transit_compartments-f"], [279, "cmdoption-pharmpy-model-transit_compartments-h"], [279, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[279, "cmdoption-pharmpy-model-update_inits-arg-file"], [279, "cmdoption-pharmpy-model-update_inits-f"], [279, "cmdoption-pharmpy-model-update_inits-h"], [279, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[279, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[279, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [279, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[279, "cmdoption-pharmpy-results-cdd-arg-psn"], [279, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[279, "cmdoption-pharmpy-results-frem-arg-psn"], [279, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [279, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [279, "cmdoption-pharmpy-results-frem-h"], [279, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[279, "cmdoption-pharmpy-results-linearize-arg-psn"], [279, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[279, "cmdoption-pharmpy-results-ofv-arg-file"], [279, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[279, "cmdoption-pharmpy-results-print-arg-file"], [279, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[279, "cmdoption-pharmpy-results-qa-arg-psn"], [279, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[279, "cmdoption-pharmpy-results-report-arg-psn"], [279, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[279, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [279, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[279, "cmdoption-pharmpy-results-scm-arg-psn"], [279, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[279, "cmdoption-pharmpy-results-simeval-arg-psn"], [279, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[279, "cmdoption-pharmpy-results-summary-arg-file"], [279, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[279, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[279, "cmdoption-pharmpy-run-allometry-allometric_variable"], [279, "cmdoption-pharmpy-run-allometry-arg-file"], [279, "cmdoption-pharmpy-run-allometry-h"], [279, "cmdoption-pharmpy-run-allometry-initials"], [279, "cmdoption-pharmpy-run-allometry-lower_bounds"], [279, "cmdoption-pharmpy-run-allometry-non_fixed"], [279, "cmdoption-pharmpy-run-allometry-parameters"], [279, "cmdoption-pharmpy-run-allometry-path"], [279, "cmdoption-pharmpy-run-allometry-reference_value"], [279, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[279, "cmdoption-pharmpy-run-amd-allometric_variable"], [279, "cmdoption-pharmpy-run-amd-arg-input_path"], [279, "cmdoption-pharmpy-run-amd-cl_init"], [279, "cmdoption-pharmpy-run-amd-h"], [279, "cmdoption-pharmpy-run-amd-lloq_limit"], [279, "cmdoption-pharmpy-run-amd-lloq_method"], [279, "cmdoption-pharmpy-run-amd-mat_init"], [279, "cmdoption-pharmpy-run-amd-modeltype"], [279, "cmdoption-pharmpy-run-amd-occasion"], [279, "cmdoption-pharmpy-run-amd-order"], [279, "cmdoption-pharmpy-run-amd-path"], [279, "cmdoption-pharmpy-run-amd-resume"], [279, "cmdoption-pharmpy-run-amd-search_space"], [279, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[279, "cmdoption-pharmpy-run-bootstrap-arg-file"], [279, "cmdoption-pharmpy-run-bootstrap-h"], [279, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[279, "cmdoption-pharmpy-run-covsearch-algorithm"], [279, "cmdoption-pharmpy-run-covsearch-arg-file"], [279, "cmdoption-pharmpy-run-covsearch-effects"], [279, "cmdoption-pharmpy-run-covsearch-h"], [279, "cmdoption-pharmpy-run-covsearch-max_steps"], [279, "cmdoption-pharmpy-run-covsearch-p_backward"], [279, "cmdoption-pharmpy-run-covsearch-p_forward"], [279, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[279, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [279, "cmdoption-pharmpy-run-estmethod-arg-file"], [279, "cmdoption-pharmpy-run-estmethod-h"], [279, "cmdoption-pharmpy-run-estmethod-methods"], [279, "cmdoption-pharmpy-run-estmethod-path"], [279, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[279, "cmdoption-pharmpy-run-execute-arg-file"], [279, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[279, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [279, "cmdoption-pharmpy-run-iivsearch-arg-file"], [279, "cmdoption-pharmpy-run-iivsearch-cutoff"], [279, "cmdoption-pharmpy-run-iivsearch-h"], [279, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [279, "cmdoption-pharmpy-run-iivsearch-path"], [279, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[279, "cmdoption-pharmpy-run-iovsearch-arg-file"], [279, "cmdoption-pharmpy-run-iovsearch-column"], [279, "cmdoption-pharmpy-run-iovsearch-cutoff"], [279, "cmdoption-pharmpy-run-iovsearch-distribution"], [279, "cmdoption-pharmpy-run-iovsearch-h"], [279, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [279, "cmdoption-pharmpy-run-iovsearch-path"], [279, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[279, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [279, "cmdoption-pharmpy-run-modelsearch-arg-file"], [279, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [279, "cmdoption-pharmpy-run-modelsearch-cutoff"], [279, "cmdoption-pharmpy-run-modelsearch-h"], [279, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [279, "cmdoption-pharmpy-run-modelsearch-path"], [279, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[279, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [279, "cmdoption-pharmpy-run-ruvsearch-groups"], [279, "cmdoption-pharmpy-run-ruvsearch-h"], [279, "cmdoption-pharmpy-run-ruvsearch-p_value"], [279, "cmdoption-pharmpy-run-ruvsearch-path"], [279, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[279, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [279, "cmdoption-pharmpy-results-cdd-arg-psn"], [279, "cmdoption-pharmpy-results-frem-arg-psn"], [279, "cmdoption-pharmpy-results-linearize-arg-psn"], [279, "cmdoption-pharmpy-results-qa-arg-psn"], [279, "cmdoption-pharmpy-results-report-arg-psn"], [279, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [279, "cmdoption-pharmpy-results-scm-arg-psn"], [279, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[279, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [279, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})