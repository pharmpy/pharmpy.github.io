Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.ExplicitODESystem", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_inf", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_inf", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_inf_from_corrse", "api/pharmpy.modeling.calculate_inf_from_cov", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_inf", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.copy_model", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_report", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.generate_model_code", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_database", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.ExplicitODESystem.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_inf.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_inf.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_inf_from_corrse.rst", "api/pharmpy.modeling.calculate_inf_from_cov.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_inf.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.copy_model.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_report.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.generate_model_code.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_database.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "ExplicitODESystem", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_inf", "calculate_cov_from_corrse", "calculate_cov_from_inf", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_inf_from_corrse", "calculate_inf_from_cov", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_se_from_cov", "calculate_se_from_inf", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "copy_model", "create_joint_distribution", "create_report", "create_rng", "create_symbol", "deidentify_data", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "generate_model_code", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_lag_times", "get_mdv", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_proportional_error_model", "has_random_effect", "has_zero_order_absorption", "has_zero_order_elimination", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_database", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_results", "fit", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_covsearch", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 19, 25, 26, 27, 30, 32, 53, 54, 68, 73, 76, 77, 78, 79, 81, 82, 83, 84, 93, 99, 102, 106, 107, 108, 109, 113, 117, 122, 123, 124, 128, 144, 157, 159, 175, 184, 189, 195, 215, 220, 224, 228, 229, 230, 244, 247, 248, 249, 250, 252, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 278, 279, 280], "section": [0, 249, 252, 262, 274, 278], "i": [0, 1, 2, 3, 6, 8, 19, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 46, 48, 55, 56, 65, 67, 68, 69, 71, 73, 75, 76, 78, 79, 81, 82, 83, 91, 93, 96, 99, 105, 106, 107, 108, 118, 132, 133, 146, 147, 149, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 181, 182, 185, 186, 187, 188, 195, 197, 198, 201, 203, 205, 210, 211, 213, 214, 215, 216, 222, 224, 228, 229, 230, 234, 243, 244, 245, 247, 248, 249, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277, 278, 280], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 203, 224, 225, 226, 227, 228, 229, 230, 232, 245, 259, 262, 266, 270, 271, 275, 278, 280], "The": [0, 2, 3, 6, 8, 9, 10, 16, 19, 25, 26, 27, 30, 33, 35, 39, 41, 56, 64, 71, 72, 75, 78, 79, 80, 81, 82, 83, 101, 112, 117, 119, 120, 125, 126, 138, 153, 157, 159, 175, 212, 217, 220, 248, 250, 252, 254, 258, 260, 261, 262, 265, 268, 270, 271, 278, 279], "inform": [0, 1, 2, 6, 8, 49, 50, 51, 52, 58, 59, 62, 63, 117, 245, 247, 249, 252, 255, 259, 260, 261, 262, 266, 267, 271, 275, 276, 278, 279], "intend": [0, 262, 278], "non": [0, 26, 67, 71, 80, 185, 245, 254, 255, 257, 262, 264, 271, 278], "hard": [0, 271], "find": [0, 8, 30, 46, 85, 86, 117, 209, 222, 245, 249, 260, 262, 279, 280], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 250, 252, 254, 258, 259, 261, 262, 264, 265, 266, 267, 275], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 243, 244, 245, 249, 252, 253, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 271, 272, 274, 275, 276, 277, 279], "develop": [0, 211, 245, 262, 270, 271, 278, 280], "remov": [0, 2, 9, 27, 30, 76, 106, 107, 108, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 168, 179, 190, 192, 211, 244, 245, 247, 252, 255, 259, 261, 262, 268, 279], "row": [0, 1, 2, 26, 78, 79, 91, 94, 96, 154, 155, 221, 243, 247, 252, 254, 257, 259, 261, 265, 267, 275, 276], "split": [0, 71, 185, 238, 245, 247, 266, 278], "drop": [0, 2, 6, 76, 77, 191, 245, 267, 271, 276], "column": [0, 1, 2, 6, 8, 10, 16, 26, 32, 39, 44, 56, 75, 76, 77, 78, 79, 80, 84, 93, 94, 96, 99, 133, 134, 137, 153, 154, 160, 177, 189, 191, 201, 202, 203, 211, 214, 220, 221, 243, 245, 247, 252, 254, 257, 259, 261, 265, 266, 267, 275, 276, 278], "error": [0, 2, 11, 20, 21, 25, 27, 30, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 115, 119, 120, 125, 136, 144, 157, 159, 174, 175, 177, 180, 196, 205, 219, 222, 227, 243, 245, 252, 259, 260, 261, 264, 267, 268, 275, 276, 278, 279], "handl": [0, 3, 84, 184, 245, 254, 255, 257, 260, 271], "valid": [0, 27, 245, 262, 266], "some": [0, 8, 10, 61, 71, 144, 157, 226, 243, 245, 247, 250, 252, 254, 260, 262, 263, 264, 266, 267, 270, 271, 275, 278, 280], "rule": [0, 65, 262], "These": [0, 250, 255, 257, 262, 263, 266, 270, 271, 278], "were": [0, 27, 30, 219, 243, 244, 254, 257, 262, 267, 278, 280], "test": [0, 2, 121, 212, 214, 216, 217, 245, 247, 252, 258, 259, 261, 265, 267, 271, 275], "7": [0, 1, 2, 35, 49, 51, 52, 57, 59, 62, 79, 91, 96, 108, 110, 203, 243, 244, 252, 254, 257, 259, 261, 262, 263, 264, 265, 267, 272, 274, 275, 276, 277], "4": [0, 1, 2, 6, 49, 51, 52, 57, 59, 62, 78, 79, 80, 81, 82, 83, 91, 94, 96, 97, 108, 188, 203, 217, 222, 243, 244, 252, 253, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 272, 274, 275, 276, 277], "3": [0, 1, 2, 6, 30, 33, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 68, 78, 79, 80, 81, 82, 83, 91, 94, 96, 97, 98, 100, 108, 110, 116, 118, 130, 131, 132, 136, 137, 150, 154, 155, 156, 178, 186, 187, 188, 192, 193, 195, 201, 202, 203, 221, 243, 244, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 272, 274, 275, 276, 277, 278, 280], "delimet": 0, "between": [0, 8, 9, 27, 71, 220, 234, 243, 244, 245, 247, 257, 261, 262, 268, 271, 274, 275, 279, 280], "comma": [0, 247, 278], "space": [0, 64, 211, 216, 245, 247, 278], "tab": [0, 136, 245, 269], "befor": [0, 2, 30, 155, 156, 194, 245, 247, 261, 263, 267], "after": [0, 6, 30, 106, 107, 108, 177, 209, 219, 222, 226, 244, 245, 247, 253, 257, 262, 263, 264, 267, 271, 272, 274, 276, 277, 280], "ar": [0, 3, 4, 6, 8, 26, 27, 30, 36, 37, 39, 42, 56, 71, 75, 94, 105, 130, 146, 147, 151, 159, 162, 163, 174, 185, 189, 195, 205, 212, 213, 215, 216, 224, 226, 243, 245, 247, 248, 249, 250, 252, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 276, 278, 280], "give": [0, 26, 105, 132, 156, 243, 245, 247, 252, 257, 261, 262, 276], "sic": 0, "begin": [0, 257, 264, 266], "end": [0, 36, 46, 257, 262, 264, 266, 278], "insert": [0, 245], "each": [0, 2, 8, 27, 33, 35, 55, 56, 57, 78, 79, 80, 81, 82, 83, 91, 96, 97, 108, 131, 134, 135, 153, 156, 166, 226, 243, 244, 247, 249, 252, 254, 255, 257, 259, 261, 262, 264, 265, 266, 267, 268, 274, 275, 276, 277, 278, 280], "can": [0, 1, 2, 6, 10, 19, 26, 30, 48, 56, 64, 73, 80, 117, 153, 184, 209, 215, 226, 229, 230, 243, 244, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 274, 275, 278, 279, 280], "onli": [0, 2, 3, 8, 10, 14, 27, 35, 53, 54, 65, 68, 76, 78, 79, 81, 82, 83, 102, 109, 113, 131, 153, 184, 194, 215, 222, 234, 245, 247, 248, 252, 261, 262, 266, 267, 270, 278, 280], "numer": [0, 6, 14, 31, 78, 79, 81, 82, 243, 245, 254, 264, 271], "e": [0, 6, 19, 27, 68, 74, 106, 107, 108, 132, 147, 161, 216, 243, 245, 250, 254, 257, 259, 261, 262, 264, 266, 267, 268, 271, 275, 278, 280], "other": [0, 9, 19, 27, 30, 69, 135, 215, 238, 243, 248, 250, 255, 259, 262, 271], "charact": [0, 10, 254], "than": [0, 25, 26, 259, 262, 267], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 27, 35, 205, 211, 224, 225, 228, 229, 237, 245, 252, 262, 267, 271, 278], "except": [0, 11, 12, 20, 21, 22, 37, 56, 153, 262], "ii": [0, 6], "datx": [0, 245], "fortran": 0, "short": [0, 250, 262], "form": [0, 24, 27, 153, 212, 245, 262], "exponenti": [0, 35, 37, 42, 166, 247, 252, 257, 266], "notat": [0, 280], "2": [0, 1, 2, 6, 8, 19, 30, 33, 35, 36, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 78, 79, 80, 81, 82, 83, 91, 94, 96, 97, 100, 102, 108, 109, 110, 111, 116, 118, 130, 131, 132, 136, 137, 150, 154, 155, 156, 157, 159, 164, 167, 169, 170, 173, 175, 176, 178, 181, 185, 187, 188, 192, 193, 195, 203, 210, 220, 243, 244, 247, 250, 252, 253, 254, 257, 259, 261, 263, 264, 265, 266, 267, 268, 272, 274, 275, 276, 277, 278], "1": [0, 1, 2, 6, 7, 8, 18, 19, 23, 26, 27, 30, 33, 35, 36, 41, 43, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 75, 78, 79, 80, 81, 82, 83, 87, 88, 89, 91, 94, 96, 97, 98, 100, 102, 108, 109, 110, 111, 114, 115, 116, 118, 130, 131, 132, 133, 136, 137, 141, 144, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 174, 176, 177, 179, 182, 185, 186, 187, 188, 190, 192, 193, 195, 196, 203, 210, 211, 212, 216, 220, 243, 244, 247, 249, 250, 252, 253, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 275, 276, 277, 278, 280], "mean": [0, 2, 13, 18, 19, 23, 56, 61, 132, 154, 155, 211, 224, 228, 243, 244, 245, 247, 257, 259, 262, 264, 265, 266, 267, 271, 274, 278, 280], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 18, 19, 25, 26, 27, 30, 32, 56, 60, 61, 64, 70, 75, 80, 85, 86, 101, 105, 111, 112, 114, 115, 116, 117, 133, 134, 138, 153, 154, 155, 157, 159, 167, 168, 175, 177, 179, 208, 215, 217, 219, 222, 224, 228, 229, 234, 243, 244, 246, 247, 250, 251, 252, 254, 255, 259, 260, 261, 262, 263, 264, 266, 267, 270, 271, 275, 276, 278], "d": [0, 8, 13, 16, 18, 23, 27, 28, 30, 225, 227, 238, 262, 264], "instead": [0, 65, 80, 105, 224, 244, 245, 247, 254, 255, 257, 262, 266, 271, 280], "lone": 0, "an": [0, 4, 8, 10, 15, 17, 19, 26, 27, 30, 33, 38, 39, 45, 50, 52, 63, 64, 72, 97, 99, 119, 120, 121, 125, 130, 132, 143, 153, 157, 187, 201, 202, 203, 219, 220, 222, 225, 227, 245, 247, 250, 252, 254, 257, 258, 259, 260, 261, 262, 264, 267, 268, 271, 274, 276, 277, 278, 280], "0": [0, 1, 2, 6, 7, 8, 15, 16, 18, 19, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 78, 79, 80, 81, 82, 83, 87, 88, 89, 91, 94, 96, 97, 98, 110, 111, 115, 116, 118, 130, 131, 132, 136, 141, 142, 145, 150, 154, 155, 156, 159, 161, 162, 163, 166, 167, 168, 174, 175, 177, 179, 185, 186, 187, 190, 193, 195, 203, 210, 211, 212, 217, 221, 222, 243, 244, 247, 250, 252, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 275, 276, 277, 278, 280], "dot": 0, "most": [0, 6, 35, 184, 247, 252, 255, 262, 266, 274], "24": [0, 57, 91, 96, 98, 108, 110, 203, 243, 244, 252, 254, 259, 261, 263, 265, 267, 274, 275, 277], "long": [0, 245, 262, 271], "count": [0, 97, 221, 228, 245, 267], "delimit": 0, "wa": [0, 28, 195, 220, 243, 245, 262, 263, 275, 276], "eaten": 0, "empti": [0, 27, 219, 252, 266], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 17, 19, 27, 28, 30, 40, 46, 65, 71, 76, 87, 88, 89, 141, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 190, 192, 193, 194, 195, 245, 247, 248, 249, 254, 259, 260, 261, 267, 268, 278, 279, 280], "As": [0, 27, 248, 249, 266, 268, 278, 280], "contain": [0, 2, 3, 27, 75, 80, 201, 202, 203, 243, 244, 247, 252, 253, 254, 255, 259, 261, 262, 265, 266, 267, 272, 274, 275, 276, 277, 278], "drope": 0, "input": [0, 8, 9, 10, 27, 30, 35, 37, 39, 62, 63, 70, 73, 77, 121, 126, 136, 141, 155, 166, 211, 220, 231, 245, 247, 254, 259, 261, 264, 266, 267, 268, 271, 275, 280], "ani": [0, 2, 8, 9, 45, 56, 67, 151, 209, 221, 231, 234, 250, 254, 259, 261, 262, 264, 266, 268, 271, 278, 280], "limit": [0, 2, 66, 149, 174, 211, 245, 247, 261, 262, 269], "length": [0, 80, 81, 82, 83, 97, 98, 110, 245, 254], "If": [0, 2, 10, 19, 30, 35, 46, 56, 71, 73, 80, 93, 97, 99, 146, 147, 153, 155, 166, 174, 185, 186, 187, 188, 189, 195, 205, 213, 216, 222, 243, 247, 254, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 271, 278, 280], "ha": [0, 2, 8, 19, 27, 71, 80, 91, 96, 119, 120, 121, 122, 123, 124, 125, 126, 128, 243, 245, 247, 248, 250, 252, 254, 255, 259, 261, 262, 264, 266, 267, 273, 275, 276, 278], "more": [0, 2, 8, 26, 210, 212, 213, 214, 216, 217, 245, 247, 249, 252, 258, 260, 262, 266, 267, 271, 274, 278, 279], "extra": [0, 245], "consid": [0, 2, 213, 214, 216, 245, 252, 255, 259, 261, 262, 267, 275], "start": [0, 2, 8, 36, 45, 97, 133, 145, 153, 213, 245, 247, 250, 252, 254, 257, 261, 262, 266, 267, 275, 276, 278, 280], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 234, 243, 245, 247, 248, 250, 252, 255, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 271, 275, 277, 278, 279, 280], "been": [0, 2, 6, 248, 252, 254, 262, 264, 266, 278], "provid": [0, 27, 155, 174, 247, 248, 252, 254, 259, 261, 262, 266, 267, 280], "default": [0, 1, 2, 6, 7, 19, 25, 27, 32, 33, 35, 36, 37, 42, 46, 48, 55, 71, 73, 76, 101, 105, 112, 118, 126, 140, 146, 147, 149, 153, 154, 155, 157, 159, 162, 163, 166, 174, 175, 177, 185, 186, 187, 188, 197, 198, 200, 205, 210, 213, 214, 216, 222, 237, 242, 245, 247, 249, 252, 259, 261, 264, 266, 267, 268, 269, 275, 280], "where": [0, 2, 33, 41, 209, 243, 244, 245, 248, 249, 252, 254, 257, 261, 262, 266, 267, 268, 271, 278, 280], "rexex": 0, "": [0, 10, 64, 141, 247, 254, 257, 262, 268, 272], "za": 0, "z": [0, 33], "either": [0, 2, 37, 75, 211, 212, 247, 259, 262, 264, 266, 278], "surround": 0, "two": [0, 8, 9, 27, 30, 75, 135, 243, 245, 246, 247, 262, 271, 275, 278, 280], "By": [0, 19, 27, 261, 262, 264], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 30, 46, 64, 72, 133, 143, 154, 213, 214, 215, 216, 228, 243, 244, 245, 247, 252, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 275, 276, 278, 280], "interpret": [0, 245, 262], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 19, 26, 27, 28, 30, 33, 39, 48, 56, 64, 71, 73, 75, 78, 79, 80, 81, 82, 83, 105, 118, 132, 133, 140, 151, 153, 154, 155, 156, 157, 159, 164, 166, 172, 174, 175, 180, 189, 194, 196, 197, 200, 201, 202, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 226, 228, 229, 230, 232, 237, 243, 244, 245, 247, 249, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 274, 275, 276, 278, 279], "chang": [0, 2, 9, 19, 26, 27, 36, 75, 158, 162, 164, 167, 168, 176, 179, 181, 193, 247, 250, 262, 264, 266, 267, 268, 275, 280], "howev": [0, 259, 261, 262, 266, 268, 278, 280], "one": [0, 2, 6, 8, 9, 10, 14, 23, 25, 26, 27, 35, 68, 76, 80, 88, 137, 153, 155, 166, 180, 189, 191, 192, 196, 200, 215, 219, 221, 224, 228, 229, 232, 245, 247, 248, 250, 254, 255, 257, 261, 262, 264, 266, 267, 268, 271, 278, 280], "legal": [0, 262], "ones": [0, 252, 257], "9": [0, 2, 6, 41, 57, 66, 79, 82, 91, 94, 96, 108, 110, 195, 203, 243, 244, 252, 254, 258, 259, 261, 262, 263, 265, 266, 267, 274, 275, 276, 277, 280], "sinc": [0, 6, 255, 257, 259, 266, 267, 268, 271, 280], "number": [0, 2, 6, 8, 14, 23, 25, 39, 46, 56, 61, 67, 73, 74, 75, 106, 107, 108, 110, 133, 153, 154, 155, 156, 157, 166, 173, 178, 212, 215, 217, 220, 221, 243, 245, 247, 252, 254, 262, 274, 275, 276, 278, 280], "valu": [0, 1, 6, 10, 19, 25, 26, 27, 33, 37, 42, 43, 56, 60, 61, 66, 67, 78, 79, 80, 81, 82, 83, 87, 89, 91, 94, 96, 111, 115, 116, 153, 156, 177, 193, 205, 210, 212, 213, 214, 216, 217, 222, 242, 243, 245, 247, 250, 252, 254, 263, 264, 266, 275, 276, 277], "met": [0, 262], "doubl": 0, "big": 0, "warn": [0, 2, 12, 219, 227, 245, 252, 259, 261, 267, 280], "larger": [0, 262], "pad": 0, "filter": [0, 106, 107, 108, 245, 254], "so": [0, 25, 153, 226, 248, 249, 250, 255, 262, 268, 274, 280], "characterscannot": 0, "neither": [0, 262], "perform": [0, 14, 68, 75, 247, 252, 262, 264, 267, 268], "order": [0, 8, 27, 30, 122, 124, 127, 128, 153, 164, 165, 170, 176, 181, 182, 211, 245, 247, 254, 262, 264, 267, 271, 278, 280], "given": [0, 2, 27, 36, 74, 78, 79, 81, 82, 83, 88, 89, 112, 114, 121, 126, 138, 146, 147, 154, 155, 156, 177, 183, 192, 193, 199, 205, 226, 228, 245, 247, 250, 252, 254, 257, 259, 261, 262, 267, 268, 274, 275], "critic": [0, 248], "case": [0, 2, 71, 84, 153, 222, 245, 252, 258, 259, 261, 262, 264, 266, 267, 273, 279], "illeg": 0, "get": [0, 4, 5, 7, 8, 10, 16, 17, 27, 30, 90, 92, 93, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 115, 116, 129, 221, 245, 254, 257, 261, 262, 265, 271, 279, 280], "need": [0, 2, 37, 68, 84, 117, 245, 247, 249, 250, 255, 257, 258, 262, 264, 266, 270, 271, 280], "becaus": [0, 8, 245, 262, 266], "later": [0, 258, 262], "comparison": [0, 267, 271], "It": [0, 19, 224, 248, 250, 254, 255, 258, 259, 260, 262, 264, 265, 266, 269, 274, 278, 280], "possibl": [0, 2, 6, 27, 30, 122, 123, 124, 128, 184, 213, 216, 245, 250, 254, 259, 262, 265, 266, 267, 268, 269, 271, 274, 278, 280], "done": [0, 1, 68, 69, 75, 78, 79, 81, 82, 83, 153, 248, 264, 266, 267, 269, 275], "eq": [0, 16, 266], "ne": [0, 266], "text": [0, 19, 35, 264, 271], "otherwis": [0, 6, 8, 19, 30, 33, 35, 37, 40, 68, 71, 93, 99, 118, 119, 120, 125, 130, 131, 132, 153, 164, 174, 175, 176, 177, 178, 181, 248, 254, 262, 264, 271], "appropri": [0, 19, 248, 262], "letter": [0, 118], "alphanum": 0, "underscor": 0, "real": [0, 254, 255], "special": [0, 6, 189, 254, 255, 262], "digit": [0, 67, 245], "enclos": 0, "ok": [0, 255], "w": [0, 30, 68, 118, 130, 136, 137, 144, 157, 166, 175, 177, 180, 196, 262, 264, 266], "o": [0, 244, 246, 247, 251, 275], "With": [0, 278], "eqn": 0, "ge": 0, "etc": [0, 3, 245, 266, 268, 276, 278], "maximum": [0, 14, 35, 67, 212, 247, 252], "have": [0, 6, 8, 19, 27, 30, 35, 37, 75, 127, 189, 214, 221, 226, 228, 245, 247, 249, 250, 252, 254, 255, 258, 259, 261, 262, 264, 266, 267, 268, 269, 271, 278, 280], "12": [0, 1, 57, 91, 94, 96, 97, 98, 108, 203, 243, 244, 252, 254, 257, 259, 262, 263, 265, 267, 272, 274, 275, 276, 277], "must": [0, 25, 39, 71, 153, 166, 224, 244, 247, 249, 261, 262, 264, 266], "decreas": [0, 255], "within": [0, 153, 248, 262, 278], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 27, 30, 174, 243, 248, 250, 252, 255, 262, 268, 280], "affect": [0, 105, 262, 268], "even": [0, 25, 74, 77, 91, 96, 249, 262, 268], "still": [0, 262, 268, 280], "cannot": [0, 8, 56, 71, 223, 245, 254, 262, 266, 278], "both": [0, 1, 2, 19, 39, 161, 221, 245, 248, 252, 254, 259, 261, 262, 264, 267, 275, 278, 280], "reenter": 0, "think": 0, "risk": [0, 262], "being": [0, 6, 27, 56, 156, 157, 159, 175, 244, 245, 249, 257, 262, 268, 271, 276, 280], "truncat": 0, "encod": [0, 180, 196, 245, 254, 269], "here": [0, 2, 105, 254, 255, 256, 259, 264, 266, 267, 271, 278, 279, 280], "possibli": [0, 271], "partial": [0, 247, 271], "list": [0, 2, 6, 8, 10, 13, 14, 16, 18, 26, 27, 30, 33, 37, 39, 71, 75, 76, 77, 85, 86, 88, 89, 100, 101, 105, 112, 114, 129, 134, 146, 147, 153, 154, 160, 166, 174, 185, 186, 187, 188, 190, 191, 192, 193, 200, 205, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 233, 243, 244, 245, 247, 248, 250, 252, 254, 261, 262, 264, 266, 274, 275, 276, 278], "decid": [0, 2, 126, 259, 261, 262, 267, 275], "whether": [0, 25, 33, 35, 37, 71, 121, 126, 153, 166, 201, 203, 211, 222, 225, 237, 247, 259, 262, 266, 267, 278], "put": [0, 133, 153, 255, 257], "up": [0, 248, 252, 280], "written": [0, 197, 245, 262, 264, 268, 278], "scientif": [0, 255], "14": [0, 57, 79, 91, 96, 108, 203, 243, 244, 252, 254, 259, 261, 262, 263, 265, 274, 276, 277], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 19, 97, 243, 266], "describ": [0, 2, 16, 27, 30, 56, 122, 123, 124, 127, 128, 243, 252, 254, 259, 261, 264], "output": [0, 8, 16, 19, 30, 41, 68, 118, 130, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 221, 245, 247, 250, 262, 264, 266, 278, 280], "alwai": [0, 155, 245, 254, 267], "synonym": [0, 245], "name": [0, 1, 2, 6, 7, 8, 10, 13, 14, 16, 18, 19, 23, 25, 26, 27, 31, 32, 35, 37, 38, 39, 43, 46, 56, 67, 69, 70, 71, 74, 75, 76, 81, 82, 83, 88, 92, 97, 98, 101, 103, 105, 108, 110, 112, 114, 118, 121, 129, 130, 133, 135, 140, 143, 146, 147, 152, 153, 160, 166, 171, 174, 185, 186, 187, 188, 191, 192, 205, 209, 210, 211, 214, 218, 219, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 242, 244, 245, 247, 249, 252, 254, 261, 262, 265, 266, 270, 275, 276, 278, 279, 280], "avail": [0, 1, 2, 6, 33, 40, 56, 117, 130, 164, 176, 178, 181, 205, 243, 247, 249, 252, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 271, 275, 277, 278, 280], "carri": [0, 262], "over": [0, 110, 133, 153, 177, 201, 202, 203, 243, 244, 257, 261, 278], "onc": [0, 131, 252, 268], "covari": [0, 6, 10, 18, 27, 34, 35, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 71, 96, 105, 121, 129, 136, 142, 143, 154, 155, 156, 160, 211, 212, 245, 247, 252, 254, 255, 261, 264, 271, 276, 278, 279], "final": [0, 2, 34, 142, 208, 245, 252, 257, 259, 261, 262, 267, 268, 275, 276], "estim": [0, 1, 2, 14, 15, 19, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 57, 61, 66, 67, 71, 80, 87, 88, 89, 135, 136, 141, 142, 145, 150, 154, 155, 156, 157, 159, 162, 163, 164, 167, 169, 170, 174, 175, 176, 178, 180, 181, 182, 186, 187, 188, 192, 193, 194, 195, 196, 200, 210, 211, 222, 243, 244, 245, 247, 252, 253, 255, 259, 261, 263, 267, 270, 271, 274, 275, 278, 279], "oppos": 0, "ext": [0, 245, 278], "per": [0, 6, 14, 26, 68, 106, 107, 108, 110, 154, 155, 177, 221], "est": [0, 34, 36, 45, 142, 145], "first": [0, 2, 27, 35, 40, 74, 91, 96, 122, 124, 135, 162, 164, 165, 170, 176, 178, 181, 245, 247, 252, 257, 259, 261, 262, 268, 271, 278, 280], "call": [0, 221, 234, 245, 249, 250, 262, 268, 280], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 244, 245, 247, 249, 252, 259, 261, 267, 271, 272, 274, 275, 276, 278, 279], "theta": [0, 1, 30, 33, 35, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 66, 67, 68, 87, 88, 89, 111, 115, 116, 118, 130, 131, 132, 136, 137, 141, 155, 156, 167, 168, 174, 179, 180, 186, 187, 188, 190, 192, 193, 195, 196, 245, 259, 261, 264, 265, 267, 268, 271, 275], "sigma": [0, 1, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 67, 111, 115, 116, 136, 137, 141, 155, 156, 157, 159, 175, 243, 257, 259, 261, 264, 265, 266, 267, 268], "omega": [0, 1, 23, 27, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 71, 111, 115, 116, 136, 137, 141, 155, 156, 185, 195, 245, 247, 257, 259, 261, 264, 265, 266, 267, 268, 274, 275], "fix": [0, 1, 2, 25, 26, 33, 43, 48, 71, 87, 88, 89, 111, 115, 116, 161, 167, 168, 179, 185, 190, 192, 193, 210, 247, 259, 262, 264, 271, 278], "offdiagon": 0, "could": [0, 19, 245, 254, 262, 266, 270, 271, 280], "part": [0, 27, 74, 243, 245, 247, 250, 262, 264, 268, 271, 278], "NO": [0, 262], "probabl": 0, "same": [0, 2, 8, 10, 16, 19, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 67, 68, 71, 76, 77, 84, 87, 88, 89, 97, 118, 127, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 211, 214, 224, 226, 228, 244, 245, 247, 248, 252, 254, 257, 261, 262, 264, 266, 267, 278, 280], "type": [0, 2, 6, 8, 10, 19, 29, 30, 35, 48, 112, 134, 138, 205, 211, 213, 214, 216, 242, 245, 247, 250, 252, 257, 258, 259, 260, 261, 262, 264, 266, 267, 271], "now": [0, 245, 250, 266, 268], "investig": 0, "follow": [0, 2, 35, 132, 185, 243, 245, 247, 248, 250, 252, 254, 255, 258, 259, 261, 262, 264, 266, 267, 268, 270, 278, 280], "like": [0, 19, 27, 262, 266, 268, 271, 278], "One": [0, 27, 133, 134, 231, 271, 280], "last": [0, 30, 163, 222], "left": [0, 4, 56, 264, 266, 270], "justifi": 0, "size": [0, 6, 13, 153, 245, 248, 266, 271], "13": [0, 1, 2, 57, 91, 94, 96, 97, 108, 203, 243, 244, 252, 254, 259, 261, 262, 263, 265, 267, 272, 274, 276, 277], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 228, 229, 232, 242, 243, 244, 245, 246, 248, 250, 252, 257, 258, 260, 261, 262, 263, 265, 270, 271, 274, 276, 277, 279], "n": [0, 6, 18, 23, 27, 41, 71, 75, 150, 155, 156, 173, 178, 185, 187, 215, 243, 244, 245, 247, 257, 259, 261, 264, 266], "flatten": [0, 245], "triangular": 0, "correl": [0, 49, 50, 51, 52, 58, 59, 62, 63, 66, 71, 195, 245, 274], "abov": [0, 33, 35, 37, 66, 243, 244, 252, 257, 262, 264, 280], "off": 0, "diagon": [0, 136, 245, 259, 264, 265, 267], "obj": [0, 19], "right": [0, 4, 8, 16, 262, 264, 266, 280], "also": [0, 2, 27, 77, 153, 245, 249, 250, 252, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 271, 275, 278, 280], "22": [0, 2, 57, 78, 79, 81, 82, 91, 96, 108, 110, 203, 243, 244, 252, 254, 257, 261, 263, 265, 277], "integ": [0, 6, 118, 245, 247, 278], "5": [0, 1, 2, 30, 33, 49, 51, 52, 56, 57, 59, 62, 68, 79, 80, 89, 91, 94, 96, 98, 108, 110, 118, 130, 131, 132, 136, 188, 193, 203, 220, 221, 243, 244, 252, 254, 257, 259, 261, 262, 263, 264, 265, 266, 267, 272, 274, 276, 277, 280], "expon": [0, 1, 33, 210, 247], "regular": [0, 10, 260], "take": [0, 2, 25, 73, 245, 248, 254, 259, 261, 262, 266, 267, 271], "19": [0, 2, 57, 79, 91, 96, 108, 203, 243, 244, 252, 254, 259, 263, 265, 266, 274, 276, 277], "posit": [0, 27, 155, 156, 245, 247, 248, 255], "neg": [0, 278], "For": [0, 2, 8, 35, 37, 106, 107, 108, 132, 189, 210, 212, 213, 214, 216, 217, 243, 244, 247, 249, 250, 252, 257, 258, 262, 264, 266, 267, 268, 271, 278, 280], "20": [0, 57, 82, 91, 96, 108, 203, 243, 244, 252, 254, 262, 263, 265, 272, 274, 275, 276, 277], "In": [0, 71, 84, 248, 250, 252, 259, 261, 262, 264, 266, 271, 278, 280], "observ": [0, 6, 19, 40, 97, 106, 107, 108, 109, 110, 164, 176, 178, 181, 182, 220, 221, 243, 245, 257, 271, 274, 277, 279], "byte": 0, "evid": [0, 99, 245], "toward": [0, 97, 245], "token": [0, 278], "whitespac": 0, "parenthes": [0, 278], "multipl": [0, 4, 27, 30, 219, 245, 252, 255, 264, 275, 276, 278, 279], "open": [0, 248, 250, 260, 262, 269], "keyword": [0, 247], "kept": [0, 84, 245, 247, 259], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 245, 247, 249, 250, 252, 254, 255, 259, 260, 261, 262, 264, 266, 267, 268, 269, 270, 271, 275, 280], "csv": [0, 2, 28, 141, 197, 223, 245, 247, 252, 254, 259, 261, 266, 267, 275, 278], "wgt": [0, 2, 4, 6, 10, 30, 33, 35, 68, 76, 77, 91, 96, 105, 117, 118, 130, 131, 132, 136, 137, 143, 186, 187, 188, 191, 210, 212, 254, 257, 264, 266, 268, 271, 274, 278], "23": [0, 2, 56, 57, 61, 73, 79, 91, 96, 108, 154, 155, 156, 203, 243, 244, 252, 254, 259, 261, 263, 265, 267, 276, 277], "titl": 0, "crash": [0, 245], "nmtran": [0, 6], "There": [0, 226], "72": [0, 2, 252], "includ": [0, 2, 3, 18, 23, 27, 42, 134, 222, 244, 245, 248, 252, 259, 260, 261, 262, 266, 274, 276, 278], "come": [0, 250, 262], "filenam": [0, 19, 224, 228, 229, 264], "repres": [0, 4, 6, 19, 25, 26, 27, 247, 252, 254, 255, 257, 262, 264, 266], "rel": [0, 14, 245, 257], "path": [0, 1, 2, 10, 19, 28, 46, 72, 95, 138, 139, 141, 197, 198, 199, 206, 207, 209, 211, 223, 224, 225, 226, 228, 229, 230, 232, 237, 245, 247, 249, 252, 254, 259, 261, 264, 266, 267, 275, 276, 278, 280], "work": [0, 245, 248, 250, 262, 264, 271], "directori": [0, 199, 209, 224, 225, 226, 245, 247, 249, 250, 252, 264, 266, 276], "when": [0, 14, 35, 68, 245, 248, 250, 254, 261, 262, 264, 266, 268, 274, 276, 278, 280], "invok": [0, 19], "nmfe": 0, "content": [0, 1, 2, 220, 221, 252, 254, 259, 261, 262, 267, 275], "simpli": [0, 25, 250, 268], "seen": [0, 1, 2, 252, 254, 259, 261, 267, 275], "54": [0, 57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 267, 272, 274, 277], "doe": [0, 2, 8, 46, 74, 95, 149, 224, 225, 226, 229, 230, 245, 255, 259, 261, 262, 267, 268, 274, 280], "pk": [0, 2, 38, 42, 112, 136, 245, 247, 252, 259, 264, 267, 268, 278, 279], "pred": [0, 82, 136, 141, 245, 264, 265, 266, 274, 277], "simpl": [0, 1, 136, 184, 222, 264, 266, 268], "merg": [0, 245, 262], "placement": [0, 249], "place": [0, 249, 262, 266, 280], "seem": 0, "restrict": [0, 226, 262], "automat": [0, 14, 33, 211, 245, 250, 252, 258, 262, 275, 278], "creat": [0, 2, 4, 5, 7, 8, 10, 15, 17, 18, 19, 23, 25, 26, 27, 28, 32, 68, 72, 73, 74, 93, 94, 99, 141, 146, 166, 174, 199, 209, 220, 221, 224, 225, 226, 227, 228, 234, 237, 243, 244, 245, 247, 250, 252, 253, 254, 257, 259, 261, 263, 264, 267, 271, 272, 274, 275, 276, 277, 278, 279], "continu": [0, 2, 6, 35, 211, 245, 247, 248, 250, 252, 257, 262, 271, 278, 280], "factor": [0, 271], "compil": [0, 262], "11138": 0, "445": [0, 259], "though": [0, 262], "outsid": [0, 245, 248, 262], "standard": [0, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 63, 72, 196, 243, 245, 255, 257, 262, 268, 271, 274, 275, 277], "gfortran": 0, "8": [0, 2, 6, 49, 50, 51, 52, 57, 58, 59, 62, 63, 91, 96, 98, 108, 110, 203, 243, 244, 252, 254, 258, 259, 261, 262, 263, 264, 265, 266, 272, 274, 275, 276, 277, 280], "hh": 0, "j": [0, 187, 244, 257], "nep": 0, "h": [0, 247], "second": [0, 135, 247, 252, 268], "f": [0, 30, 68, 118, 130, 136, 137, 144, 157, 159, 166, 174, 175, 177, 196, 243, 245, 247, 251, 262, 264, 266, 268], "respect": [0, 2, 245, 248, 257, 262, 266, 267, 268], "ep": [0, 30, 68, 109, 118, 130, 136, 137, 144, 157, 166, 174, 177, 196, 245, 247, 264, 266, 268], "implicit": [0, 245], "kind": [0, 6, 8, 112, 262], "dpsize": 0, "main": [0, 247, 271, 280], "function": [0, 3, 10, 14, 16, 33, 35, 53, 54, 73, 77, 78, 79, 81, 82, 83, 87, 88, 89, 102, 109, 113, 122, 123, 124, 128, 157, 159, 167, 175, 184, 189, 192, 193, 195, 199, 205, 213, 216, 231, 243, 245, 247, 250, 255, 259, 260, 261, 262, 264, 266, 267, 268, 270, 271, 274, 275, 276, 278, 280], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 13, 18, 19, 23, 27, 31, 32, 39, 56, 74, 80, 101, 111, 114, 115, 117, 126, 137, 156, 210, 211, 245, 247, 252, 254, 255, 259, 265, 266, 271, 274, 279], "doesn": [0, 30, 228, 245, 259], "t": [0, 6, 8, 16, 30, 33, 169, 170, 182, 188, 222, 228, 231, 233, 244, 245, 247, 257, 259, 264, 272, 274], "declar": [0, 2, 68, 131, 252, 278], "assign": [0, 6, 30, 68, 245, 247], "stop": 0, "entri": [0, 227], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 19, 23, 25, 26, 27, 30, 53, 54, 68, 74, 102, 105, 109, 113, 117, 131, 137, 152, 174, 211, 245, 252, 255, 266, 271], "separ": [0, 10, 71, 84, 132, 153, 185, 226, 245, 247, 250, 252, 254, 255, 257, 262, 266, 271, 278], "thnn": 0, "nn": [0, 257], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 25, 27, 262, 266], "ad": [0, 9, 35, 37, 41, 84, 213, 214, 216, 245, 247, 252, 261, 262, 268, 275, 276, 279], "x": [0, 1, 2, 26, 33, 68, 78, 79, 94, 154, 243, 252, 254, 257, 259, 261, 265, 266, 267, 269, 275, 276], "xxe": 0, "xx": 0, "string": [0, 6, 10, 27, 28, 30, 101, 105, 138, 139, 140, 141, 245, 254, 267], "tool": [1, 2, 3, 14, 45, 144, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 230, 232, 237, 242, 243, 245, 246, 247, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 266, 267, 270, 271, 275, 279], "add": [1, 9, 14, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 84, 174, 175, 245, 247, 254, 259, 262, 267, 268, 269, 278], "allometr": [1, 2, 33, 210, 247, 278], "scale": [1, 2, 6, 33, 55, 60, 64, 210, 245, 247, 257, 266, 269, 278], "pharmr": [1, 2, 3, 245, 250, 252, 255, 258, 259, 260, 261, 267, 275, 279], "command": [1, 245, 250, 252, 258, 259, 260, 261, 262, 266, 267, 275, 279], "line": [1, 68, 245, 252, 258, 259, 260, 261, 262, 266, 267, 275, 279], "To": [1, 2, 247, 250, 252, 258, 259, 261, 262, 266, 267, 269, 275, 278, 280], "initi": [1, 2, 8, 15, 16, 19, 25, 26, 33, 37, 39, 40, 41, 42, 43, 71, 73, 80, 87, 88, 89, 150, 157, 159, 164, 166, 167, 169, 170, 174, 175, 176, 178, 181, 182, 186, 187, 188, 192, 193, 194, 195, 210, 211, 233, 245, 247, 252, 257, 259, 261, 262, 267, 275, 279], "python": [1, 2, 244, 245, 247, 252, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 275, 278, 279], "r": [1, 2, 28, 244, 245, 252, 254, 255, 258, 259, 260, 261, 264, 265, 266, 267, 268, 275, 278, 279], "run_allometri": [1, 245], "start_model": [1, 220, 252, 259, 261, 267, 275, 278], "read_model": [1, 140, 141, 245, 252, 254, 259, 261, 264, 265, 266, 267, 275, 280], "start_model_result": [1, 252, 259, 261, 267, 275, 278], "read_modelfit_result": [1, 245, 252, 261, 267, 275], "re": [1, 2, 199, 207, 208, 212, 216, 218, 225, 230, 232, 244, 252, 259, 261, 264, 265, 266, 267, 275, 277, 278, 280], "code": [1, 19, 21, 68, 90, 105, 117, 122, 123, 124, 128, 136, 141, 174, 175, 198, 245, 252, 259, 260, 261, 262, 267, 268, 270, 271, 275, 279, 280], "redefin": [1, 252, 259, 261, 267, 275], "accordingli": [1, 252, 259, 261, 267, 268, 275], "descript": [1, 2, 6, 19, 31, 220, 221, 222, 242, 243, 245, 249, 252, 254, 259, 261, 264, 267, 271, 275, 276], "modelfitresult": [1, 2, 22, 200, 201, 202, 203, 206, 210, 211, 212, 213, 214, 215, 216, 217, 222, 245, 252, 259, 261, 267, 275], "allometric_vari": [1, 2, 33, 210, 211, 247], "wt": [1, 2, 30, 33, 210, 252, 276], "reference_valu": [1, 2, 33, 210, 247], "refer": [1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 68, 71, 75, 76, 77, 84, 87, 88, 89, 118, 127, 131, 132, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 208, 210, 211, 222, 245, 247, 252, 262, 268, 279, 280], "70": [1, 2, 33, 91, 210, 254, 274], "appli": [1, 2, 19, 157, 159, 166, 174, 175, 186, 187, 188, 210, 245, 247, 248, 254, 257, 262, 267, 274, 278, 280], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 33, 37, 42, 65, 68, 71, 75, 76, 84, 88, 89, 92, 94, 96, 98, 100, 101, 103, 111, 112, 115, 116, 118, 122, 123, 124, 126, 128, 129, 134, 137, 146, 147, 154, 155, 166, 168, 174, 179, 185, 186, 187, 188, 190, 191, 192, 193, 209, 210, 213, 214, 216, 222, 224, 228, 229, 238, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 278, 280], "cl": [1, 2, 4, 8, 16, 26, 30, 33, 35, 37, 39, 41, 56, 68, 74, 85, 101, 112, 114, 118, 121, 126, 130, 131, 132, 136, 137, 143, 146, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 184, 186, 187, 188, 210, 212, 252, 257, 259, 261, 264, 266, 268], "q": [1, 33, 210, 245], "v": [1, 8, 16, 26, 30, 33, 41, 56, 68, 86, 101, 112, 117, 118, 130, 131, 132, 136, 137, 146, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 210, 212, 250, 252, 257, 261, 264, 266, 268, 277, 278], "75": [1, 33, 210], "lower_bound": [1, 2, 33, 210, 247], "lower": [1, 2, 25, 26, 33, 35, 43, 66, 87, 88, 89, 111, 115, 116, 149, 167, 168, 174, 179, 190, 193, 210, 211, 247, 255, 259, 264, 266], "bound": [1, 25, 26, 33, 43, 67, 156, 168, 179, 186, 187, 188, 190, 195, 210, 247, 264], "upper_bound": [1, 2, 33, 210, 247], "upper": [1, 25, 26, 33, 35, 43, 87, 88, 89, 111, 115, 116, 149, 167, 168, 179, 190, 193, 210, 245, 247, 264, 266], "should": [1, 6, 14, 25, 33, 35, 37, 39, 43, 153, 166, 210, 213, 214, 216, 245, 247, 248, 249, 250, 252, 255, 257, 259, 261, 262, 263, 266, 267, 271, 275], "true": [1, 2, 6, 8, 10, 15, 19, 26, 33, 34, 55, 65, 74, 76, 84, 87, 88, 89, 105, 119, 120, 122, 123, 124, 125, 126, 128, 142, 143, 155, 161, 162, 163, 166, 174, 175, 178, 191, 192, 193, 194, 198, 203, 210, 222, 223, 245, 252, 254, 259, 261, 266, 267, 268, 269, 275, 276, 277, 280], "No": [1, 6, 229, 230, 262, 267], "select": [1, 2, 153, 186, 188, 221, 243, 245, 247, 252, 259, 261, 264, 267, 269, 275, 276, 278], "see": [1, 2, 6, 8, 19, 35, 37, 203, 210, 212, 213, 214, 216, 217, 247, 248, 250, 252, 254, 255, 259, 261, 262, 263, 266, 267, 268, 271, 275, 278], "about": [1, 2, 6, 248, 252, 254, 258, 259, 261, 262, 266, 267, 275, 278], "actual": [1, 2, 25, 132, 252, 259, 261, 262, 267, 275], "minim": [1, 2, 252, 259, 261, 267, 275], "statu": [1, 2, 245, 252, 255, 259, 261, 262, 267, 275], "time": [1, 2, 6, 7, 9, 10, 26, 30, 33, 39, 40, 68, 76, 77, 91, 97, 98, 103, 110, 118, 129, 130, 131, 132, 133, 136, 137, 141, 148, 164, 176, 177, 178, 181, 189, 211, 217, 245, 247, 252, 257, 259, 261, 262, 264, 265, 267, 268, 271, 274, 275, 277, 278], "you": [1, 2, 250, 252, 258, 259, 260, 261, 262, 266, 267, 268, 271, 275, 279, 280], "look": [1, 2, 30, 46, 101, 126, 252, 259, 261, 267, 268, 275, 278], "summary_model": [1, 2, 245, 252, 259, 261, 267, 275, 278], "tabl": [1, 2, 55, 136, 157, 221, 243, 244, 245, 250, 252, 253, 257, 259, 261, 263, 264, 267, 272, 274, 275, 276, 277, 278], "gener": [1, 2, 6, 19, 56, 61, 69, 73, 133, 153, 154, 155, 156, 231, 233, 245, 247, 252, 254, 257, 259, 260, 261, 267, 270, 271, 275, 278], "summarize_modelfit_result": [1, 2, 245, 252, 259, 261, 267, 275], "minimization_success": [1, 2, 222, 252, 259, 261, 267, 275], "errors_found": [1, 2, 252, 259, 261, 267, 275], "pheno": [1, 8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 80, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 258, 264, 266, 268, 280], "phenobarb": [1, 136, 222, 264, 266], "scaled_model": [1, 2], "warnings_found": [1, 2, 252, 259, 261, 267, 275], "ofv": [1, 2, 48, 135, 201, 205, 213, 214, 216, 220, 221, 222, 245, 252, 259, 261, 267, 274, 275], "aic": [1, 2, 47, 205, 213, 214, 216, 245, 252, 259, 261, 267, 275], "bic": [1, 2, 48, 205, 213, 214, 216, 245, 247, 252, 259, 261, 267, 275, 278], "730": [1, 243, 257, 259], "894727": [1, 243, 257], "740": [1, 80, 97, 243, 254], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 222, 252, 259, 261, 267, 275], "estimation_runtim": [1, 2, 252, 259, 261, 267, 275], "_estim": [1, 259, 261, 267], "32": [1, 6, 57, 91, 96, 108, 203, 243, 244, 247, 254, 263, 265, 274, 277], "005818": [1, 257, 266], "121955": 1, "44555": [1, 257], "111053": [1, 257, 266], "201526": [1, 257, 266], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 257, 266], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 204, 220, 224, 225, 226, 227, 228, 229, 230, 232, 243, 245, 252, 257, 259, 261, 267, 272, 275, 278], "predict": [1, 2, 14, 19, 81, 82, 102, 105, 113, 134, 201, 202, 203, 220, 245, 252, 253, 259, 261, 267, 274, 275], "influenti": [1, 2, 201, 202, 221, 245, 252, 259, 261, 267, 275], "individu": [1, 2, 6, 19, 38, 55, 56, 57, 61, 71, 81, 82, 101, 102, 106, 107, 108, 110, 113, 134, 135, 146, 154, 155, 156, 194, 201, 202, 203, 220, 221, 245, 247, 252, 259, 261, 262, 267, 271, 274, 275, 279], "outlier": [1, 2, 202, 203, 221, 245, 252, 259, 261, 267, 275, 277], "summary_individuals_count": [1, 2, 252, 259, 261, 267, 275], "summarize_individuals_count_t": [1, 2, 245, 252, 259, 261, 267, 275], "parent_model": [1, 2, 19, 245, 252, 259, 261, 267, 275], "inf_select": [1, 2, 221, 252, 259, 261, 267, 275], "inf_param": [1, 2, 221, 252, 259, 261, 267, 275], "out_ob": [1, 2, 221, 252, 259, 261, 267, 275], "out_ind": [1, 2, 221, 252, 259, 261, 267, 275], "inf_outli": [1, 2, 221, 252, 259, 261, 267, 275], "differ": [1, 2, 3, 19, 24, 48, 220, 222, 243, 244, 245, 248, 252, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 278, 280], "statist": [1, 6, 56, 61, 187, 252, 254, 257, 259, 261, 264, 266, 267, 275], "summary_individu": [1, 245, 252, 259, 261, 267, 275], "summarize_individu": [1, 221, 245, 252, 259, 261, 267, 275], "outlier_count": [1, 220, 252, 259, 261, 267, 275], "dofv_vs_par": [1, 220, 252, 259, 261, 267, 275], "id": [1, 6, 10, 57, 75, 76, 77, 91, 94, 96, 97, 98, 100, 108, 110, 136, 137, 141, 154, 203, 244, 245, 247, 252, 254, 257, 259, 261, 263, 264, 265, 266, 267, 268, 275, 277], "nan": [1, 2, 94, 195, 245, 252, 254, 257, 259, 261, 267, 274, 275, 276], "742852": 1, "000000": [1, 2, 43, 49, 50, 51, 58, 243, 252, 257, 259, 261, 265, 267, 275], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 26, 39, 57, 71, 79, 91, 94, 96, 97, 108, 149, 168, 179, 187, 203, 243, 244, 252, 254, 257, 258, 259, 261, 262, 263, 265, 267, 274, 275, 276, 277, 278, 280], "092658": 1, "55": [1, 2, 6, 57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 267, 274, 277], "6": [1, 6, 57, 80, 91, 96, 108, 110, 203, 243, 244, 252, 254, 257, 259, 261, 262, 263, 265, 266, 267, 274, 275, 276, 277, 280], "535711": 1, "175743": 1, "56": [1, 57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 277], "764710": 1, "576072": 1, "57": [1, 57, 91, 96, 100, 108, 154, 203, 243, 244, 254, 257, 263, 265, 277], "975589": 1, "539779": 1, "58": [1, 57, 91, 96, 100, 108, 110, 154, 203, 243, 244, 254, 257, 263, 265, 276, 277], "194798": 1, "775689": 1, "59": [1, 57, 91, 94, 96, 98, 100, 106, 108, 110, 154, 203, 243, 244, 254, 257, 263, 265, 267, 277], "11": [1, 2, 57, 78, 79, 81, 91, 94, 96, 97, 108, 203, 243, 244, 252, 254, 257, 259, 262, 263, 265, 266, 267, 274, 276, 277, 278], "175577": 1, "462889": 1, "predicted_dofv": [1, 220, 221, 252, 259, 261, 267, 275], "predicted_residu": [1, 220, 221, 252, 259, 261, 267, 275], "118": [1, 154, 245, 257], "fulli": [2, 278], "best": [2, 245, 252, 259, 261, 262, 267, 275, 278], "dataset": [2, 10, 11, 12, 19, 44, 56, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 91, 93, 94, 97, 99, 100, 104, 106, 107, 108, 110, 117, 127, 133, 138, 149, 153, 160, 189, 197, 211, 214, 244, 245, 247, 250, 257, 260, 261, 266, 277, 279], "combin": [2, 4, 71, 119, 120, 125, 157, 159, 175, 185, 215, 245, 247, 252, 257, 259, 262, 275, 278], "modelsearch": [2, 211, 216, 220, 245, 278], "ruvsearch": [2, 211, 217, 218, 245, 278], "covsearch": [2, 212, 245, 278], "run_amd": [2, 245, 280], "dataset_path": 2, "modeltyp": [2, 211, 247], "pk_oral": [2, 211, 247], "categor": [2, 6, 35, 211, 245, 247, 252, 254, 257, 278, 280], "sex": [2, 248, 252, 271, 278], "ag": [2, 6, 252, 276, 278], "occas": [2, 39, 211, 214, 245, 247, 261, 266], "visi": [2, 261], "c": [2, 9, 187, 246, 251, 252, 257, 261, 262, 266, 268, 275, 280], "specifi": [2, 6, 30, 37, 72, 77, 87, 89, 138, 140, 141, 149, 157, 159, 173, 175, 193, 245, 247, 261, 262, 264, 266, 280], "oral": [2, 278], "drug": [2, 271], "iiv": [2, 18, 23, 27, 32, 37, 39, 42, 48, 71, 101, 126, 146, 166, 185, 211, 213, 214, 216, 245, 247, 252, 260, 261, 278], "we": [2, 248, 250, 252, 257, 258, 260, 262, 266, 268, 271, 280], "our": [2, 248, 250, 251, 262, 271], "object": [2, 3, 4, 6, 7, 9, 10, 14, 19, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 43, 44, 45, 46, 47, 48, 53, 54, 60, 64, 65, 66, 67, 69, 70, 73, 74, 76, 77, 84, 87, 88, 89, 94, 102, 109, 111, 113, 115, 116, 117, 130, 132, 137, 138, 139, 140, 141, 142, 144, 145, 149, 151, 152, 157, 160, 162, 163, 167, 168, 171, 175, 177, 179, 183, 184, 189, 190, 191, 192, 193, 198, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 237, 243, 245, 247, 249, 252, 254, 255, 259, 261, 262, 264, 266, 267, 268, 271, 275, 278], "build": [2, 211, 246, 247, 255, 266, 278], "pk_iv": [2, 211, 247], "cl_init": [2, 211, 247], "popul": [2, 19, 30, 43, 80, 81, 82, 102, 113, 118, 195, 211, 245, 247, 276], "clearanc": [2, 33, 85, 211, 245, 247, 252, 261, 268], "01": [2, 18, 27, 35, 174, 195, 211, 212, 247, 252, 266, 274, 276], "vc_init": [2, 211, 247], "central": [2, 7, 8, 9, 16, 30, 41, 68, 118, 130, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 211, 247, 250, 255, 264, 266], "compart": [2, 6, 8, 9, 16, 40, 41, 92, 93, 103, 148, 150, 173, 178, 211, 245, 247, 267, 278], "volum": [2, 33, 41, 86, 211, 245, 247, 252, 261, 262], "mat_init": [2, 211, 247], "absorpt": [2, 112, 127, 158, 164, 176, 178, 181, 211, 216, 220, 245, 247, 259, 261, 267, 278], "search_spac": [2, 211, 216, 245, 247, 267, 278], "mfl": [2, 211, 212, 220, 245, 247, 252, 267], "lloq": [2, 149, 211, 247], "quantif": [2, 149, 211, 247], "loq": [2, 149, 211, 247], "data": [2, 6, 19, 32, 78, 79, 80, 81, 82, 83, 96, 105, 136, 137, 141, 149, 157, 159, 161, 175, 195, 211, 221, 243, 245, 254, 257, 260, 261, 262, 264, 266, 268, 271, 278, 280], "found": [2, 8, 26, 219, 243, 244, 245, 250, 253, 256, 257, 259, 261, 262, 265, 267, 274, 275, 278, 279, 280], "datainfo": [2, 19, 77, 138, 160, 197, 245, 278, 279], "bodi": [2, 6, 10, 248, 254, 262, 271], "weight": [2, 6, 10, 83, 180, 196, 254, 271, 275], "correspond": [2, 14, 172, 244, 252, 262, 277, 278], "file": [2, 10, 19, 28, 46, 72, 95, 136, 138, 139, 140, 141, 197, 198, 206, 207, 223, 224, 225, 226, 228, 229, 230, 232, 245, 247, 250, 252, 258, 259, 260, 261, 262, 264, 267, 268, 270, 271, 275, 278, 279], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 227, 232, 245, 249, 252, 254, 262, 264, 266], "model_typ": 2, "elimin": [2, 112, 122, 123, 124, 128, 165, 169, 170, 182, 245, 247, 267, 278], "vc": [2, 41, 150, 252, 259], "mat": [2, 8, 42, 164, 176, 181, 244, 245, 246, 251, 252, 259, 266, 268, 275], "proport": [2, 37, 119, 120, 125, 153, 157, 159, 174, 175, 245, 247], "step": [2, 15, 19, 34, 36, 45, 142, 145, 162, 163, 212, 222, 245, 247, 250, 252, 258, 259, 261, 262, 267, 271, 275, 280], "foce": [2, 14, 15, 34, 36, 142, 162, 163, 247], "interact": [2, 14, 15, 34, 36, 136, 142, 162, 163, 245, 248, 262, 264, 266, 271, 278, 280], "specif": [2, 14, 19, 26, 45, 77, 153, 199, 245, 247, 254, 262, 264, 267, 271, 278], "support": [2, 8, 14, 30, 36, 37, 53, 54, 69, 78, 79, 81, 82, 83, 102, 109, 113, 158, 162, 163, 176, 212, 234, 245, 247, 252, 254, 255, 260, 262, 264, 266, 267, 268, 270, 271, 273, 278, 280], "nonmem": [2, 14, 68, 69, 77, 106, 107, 108, 172, 183, 215, 245, 246, 249, 250, 258, 260, 264, 265, 266, 271, 278, 279], "cmt": [2, 93, 245, 267], "rate": [2, 6, 8, 9, 17, 41, 127, 158, 164, 176, 178, 181, 245, 247, 278], "via": [2, 245, 247, 250, 258, 260, 264, 266, 268, 278, 280], "exclud": [2, 105, 220, 259, 261, 262, 267], "pleas": [2, 249, 250, 258, 262, 278, 280], "featur": [2, 250, 252, 259, 260, 261, 262, 275, 279, 280], "languag": [2, 90, 136, 248, 252, 255, 262, 267], "how": [2, 3, 155, 213, 216, 245, 247, 248, 250, 252, 254, 258, 259, 261, 262, 266, 267, 268, 276, 279], "defin": [2, 8, 61, 105, 117, 127, 132, 137, 252, 255, 262, 266, 277, 278], "depend": [2, 6, 19, 30, 56, 71, 75, 157, 159, 175, 245, 249, 254, 259, 268, 278, 280], "zo": [2, 216, 220, 245, 247, 267, 278], "seq": [2, 247, 267, 278], "fo": [2, 14, 36, 162, 163, 245, 247, 267, 271, 278], "mm": [2, 245, 247, 267, 278], "mix": [2, 39, 48, 124, 170, 205, 245, 255, 258, 261, 264, 267, 271, 278], "lagtim": [2, 158, 176, 267, 278], "transit": [2, 8, 173, 178, 245, 247, 267, 278], "peripher": [2, 8, 41, 150, 173, 216, 220, 245, 247, 267, 278], "iv": [2, 211, 247, 278], "none": [2, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 39, 43, 46, 48, 56, 61, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 95, 134, 138, 140, 141, 146, 147, 149, 153, 154, 155, 156, 157, 159, 166, 172, 174, 175, 185, 186, 187, 188, 197, 200, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 224, 225, 233, 237, 245, 247, 254, 257, 259, 261, 266, 267, 278], "null": [2, 254, 259, 261, 267, 278, 280], "yield": [2, 133, 153], "workflow": [2, 3, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 245, 258, 262, 271, 278], "want": [2, 248, 250, 259, 260, 261, 262, 266, 267, 268, 270], "desir": [2, 229, 230], "subset": [2, 67, 154], "algorithm": [2, 212, 213, 216, 220, 245, 247, 271, 278, 280], "six": 2, "below": [2, 250, 259, 261, 262, 267, 275], "detail": [2, 210, 212, 213, 214, 216, 217, 262, 267, 274, 275, 278, 279], "regard": [2, 262, 267], "subhead": 2, "distribut": [2, 18, 23, 27, 39, 41, 56, 61, 71, 112, 132, 150, 154, 155, 156, 185, 188, 214, 234, 243, 245, 247, 257, 262, 264, 267, 274, 278, 279], "term": [2, 157, 245, 259, 262, 266], "keep": [2, 14, 25, 153, 224, 245, 248, 255, 259, 262], "well": [2, 56, 252, 254, 259, 261, 262, 266, 267, 274, 275, 278, 279], "iov": [2, 27, 39, 101, 126, 147, 214, 245, 247, 274, 278], "explain": [2, 252, 262, 271, 278], "ruv": [2, 166, 247], "power": [2, 35, 174, 247, 262, 271, 272, 274, 275], "vari": [2, 129, 177, 217, 245, 247, 275], "identifi": [2, 6, 32, 252, 254, 259, 262, 274, 278], "effect": [2, 35, 37, 48, 121, 126, 143, 146, 174, 205, 212, 245, 247, 255, 258, 262, 264, 271, 276, 278, 279], "option": [2, 14, 19, 27, 35, 37, 39, 45, 70, 71, 78, 79, 81, 82, 83, 153, 205, 212, 238, 243, 245, 247, 252, 254, 259, 261, 262, 264, 267, 279, 280], "reduced_stepwis": [2, 220, 245, 267, 278], "iiv_strategi": [2, 213, 216, 245, 247, 259, 267, 278], "absorption_delai": [2, 216, 245, 267, 278], "rank_typ": [2, 205, 213, 214, 216, 247, 259, 261, 267, 278], "cutoff": [2, 177, 201, 202, 203, 205, 213, 214, 216, 245, 247, 259, 261, 267, 278], "brute_forc": [2, 213, 245, 259], "fullblock": [2, 213, 216, 245, 259, 267], "tri": [2, 247, 267], "list_of_paramet": [2, 37, 39, 214, 247, 261], "random": [2, 3, 13, 18, 19, 23, 27, 39, 48, 56, 61, 73, 75, 114, 117, 126, 154, 155, 156, 245, 247, 255, 257, 261, 274, 279], "group": [2, 26, 32, 133, 134, 153, 217, 247, 260, 275], "p_valu": [2, 217, 247, 275], "05": [2, 41, 49, 50, 51, 52, 58, 59, 62, 63, 150, 212, 217, 243, 247, 252, 264, 265, 274, 275, 276], "skip": [2, 217, 247, 252, 275], "p_forward": [2, 212, 247, 252], "p_backward": [2, 212, 247, 252], "max_step": [2, 212, 247, 252, 280], "scm": [2, 212, 245, 252, 271, 273, 280], "forward": [2, 212, 245, 247, 252, 276, 280], "backward": [2, 212, 222, 245, 247, 252, 276], "variou": [2, 68, 220, 221, 245, 247, 248, 250, 252, 255, 259, 261, 267, 271, 275], "access": [2, 252, 254, 259, 261, 262, 264, 267, 268, 275, 278, 280], "json": [2, 10, 28, 207, 208, 223, 245, 247, 252, 254, 259, 261, 266, 267, 275, 278], "format": [2, 69, 247, 249, 252, 255, 258, 259, 260, 261, 262, 264, 266, 267, 270, 275], "summary_tool": [2, 245, 252, 259, 261, 267, 275], "candid": [2, 212, 216, 245, 247, 252, 275, 278], "compar": [2, 205, 243, 245, 252, 271, 275], "rank": [2, 205, 213, 214, 216, 245, 247, 252, 275], "selected_model": 2, "modelsearch_run1": [2, 245], "iivsearch_run35": 2, "vp1": [2, 41, 150, 173, 266], "best_ruvsearch_2": [2, 275], "time_varying2": [2, 275], "iiv_on_ruv": [2, 245, 272, 274, 275], "iovsearch_run30": 2, "etai5": 2, "covsearch_run6": 2, "exp": [2, 30, 35, 37, 136, 186, 187, 188, 212, 252, 264, 266, 268], "dofv": [2, 201, 202, 220, 243, 244, 245, 252, 272, 274, 275], "n_param": [2, 275], "d_param": [2, 275], "2097": 2, "977183": 2, "2240": 2, "703380": 2, "142": 2, "726197": 2, "2278": 2, "644915": 2, "37": [2, 57, 91, 96, 98, 108, 203, 243, 244, 252, 254, 261, 263, 265, 277], "941535": 2, "2436": 2, "296090": 2, "157": 2, "651175": 2, "15": [2, 57, 79, 91, 96, 108, 203, 243, 244, 252, 254, 259, 261, 262, 263, 265, 266, 276, 277], "2571": 2, "507991": 2, "135": [2, 110, 254, 265, 266, 274], "211901": 2, "16": [2, 6, 57, 79, 91, 96, 108, 175, 188, 203, 243, 244, 252, 254, 259, 262, 263, 265, 266, 272, 274, 275, 276, 277], "2590": 2, "767668": 2, "259677": 2, "2597": 2, "989257": 2, "221589": 2, "17": [2, 57, 78, 79, 81, 82, 91, 94, 96, 108, 110, 203, 243, 244, 252, 254, 259, 261, 262, 263, 265, 266, 267, 272, 274, 277], "base_model": [2, 205], "qp1": [2, 41, 150, 173, 245, 266], "iivsearch_run1": 2, "covsearch_run11": 2, "cat": [2, 35, 252, 278], "covsearch_run12": 2, "covsearch_run13": 2, "covsearch_run14": 2, "covsearch_run15": 2, "fals": [2, 6, 8, 13, 14, 16, 18, 23, 25, 26, 28, 32, 34, 35, 36, 43, 55, 65, 67, 74, 76, 84, 87, 88, 89, 105, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 142, 143, 153, 155, 161, 167, 168, 174, 178, 179, 190, 192, 193, 194, 195, 197, 203, 211, 222, 223, 225, 237, 244, 252, 254, 264, 266, 268, 269, 276, 277], "2081": 2, "2220": 2, "2280": 2, "522613": 2, "2238": 2, "872": 2, "001789": 2, "1518": 2, "310447": 2, "2591": 2, "679149": 2, "2557": 2, "406757": 2, "767683": 2, "765222": 2, "767674": 2, "2556": 2, "767708": 2, "2061": 2, "030230": 2, "2189": 2, "928952": 2, "2187": 2, "799687": 2, "1476": 2, "416540": 2, "2510": 2, "871505": 2, "599113": 2, "957578": 2, "2509": 2, "960030": 2, "960064": 2, "pop_cl_estim": [2, 252, 275], "07": [2, 49, 50, 51, 52, 58, 59, 62, 63, 243, 259, 261, 264, 265, 274, 276], "25": [2, 57, 78, 81, 82, 91, 96, 98, 108, 203, 243, 244, 252, 254, 259, 263, 265, 267, 272, 274, 275, 277], "4279": 2, "73": [2, 110, 252, 254, 265, 275, 278, 280], "6465": 2, "74": 2, "65": [2, 6], "83": [2, 274], "08": [2, 49, 51, 52, 59, 62, 261, 264, 265], "36": [2, 57, 91, 96, 108, 203, 243, 244, 252, 254, 259, 261, 263, 265, 267, 274, 277], "78": 2, "86": 2, "48": [2, 57, 91, 96, 98, 108, 203, 243, 244, 252, 254, 261, 263, 265, 275, 276, 277], "35": [2, 57, 91, 96, 108, 203, 243, 244, 252, 254, 261, 263, 265, 275, 277], "pop_etai5wt_estim": 2, "pop_matage_estim": [2, 252], "pop_matsex_estim": [2, 252], "pop_matwt_estim": [2, 252], "pop_vcage_estim": [2, 252], "pop_vcsex_estim": [2, 252], "392976": 2, "pop_vcwt_estim": [2, 252], "pop_vp1age_estim": 2, "007563": 2, "pop_vp1sex_estim": 2, "pop_vp1wt_estim": 2, "001": [2, 35, 67, 195, 266, 276], "105": [2, 275], "dbic": [2, 245, 259, 261, 267], "128": [2, 6], "898722": 2, "iivsearch_run4": 2, "21": [2, 57, 78, 81, 91, 96, 108, 203, 243, 244, 252, 254, 257, 263, 265, 272, 274, 277], "611092": 2, "iivsearch_run5": 2, "572737": 2, "iivsearch_run2": 2, "929719": 2, "summary_error": [2, 252, 259, 261, 267], "summarize_error": [2, 245, 252, 259, 261, 267], "categori": [2, 6, 35, 39, 137, 219, 247, 252, 259, 261, 266, 267, 278], "error_no": [2, 252, 259, 261, 267], "2022": [2, 259, 261, 262, 267, 278], "225": 2, "messag": [2, 227, 245, 247, 252, 259, 261, 267], "success": [2, 245, 248, 252, 259, 261], "nhowev": 2, "problem": [2, 136, 141, 245, 259, 261, 262, 263, 264, 266, 268], "occur": [2, 152, 259, 261, 262, 280], "WITH": [2, 259, 261, 262], "THE": [2, 259, 261, 262], "page": [3, 244, 246, 249, 250, 267, 268], "public": [3, 255], "modul": [3, 8, 245, 249, 264, 266, 270, 280], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 245, 254, 258, 262, 264, 266, 278], "relat": [3, 224, 228, 229, 245, 248, 276], "statement": [3, 4, 8, 16, 19, 24, 33, 35, 37, 38, 39, 41, 42, 68, 118, 130, 131, 132, 144, 146, 150, 151, 157, 158, 159, 164, 165, 166, 169, 170, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 196, 245, 247, 252, 262, 266, 271, 279], "transform": [3, 19, 157, 159, 161, 175, 186, 187, 188, 245, 247, 258, 260, 268, 274, 279], "manipul": [3, 26, 264, 266, 268], "built": [3, 130, 247, 250, 260], "run": [3, 71, 134, 199, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 228, 232, 243, 244, 245, 253, 258, 260, 262, 263, 265, 270, 271, 274, 276, 277, 279, 280], "api_model": 3, "api_tool": 3, "packag": [3, 247, 249, 255, 258, 260, 262, 269, 271, 280], "express": [4, 5, 7, 8, 9, 10, 16, 17, 18, 23, 27, 30, 37, 53, 54, 56, 80, 92, 102, 103, 109, 113, 117, 157, 159, 174, 175, 183, 245, 247, 248, 252, 262, 266, 271, 277], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 248, 250, 260, 262, 264], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 205, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 245, 257, 259, 262, 263, 264, 266, 267, 268, 269, 274, 275, 276], "represent": [4, 16, 233, 254, 258, 264, 266, 268], "togeth": [4, 27, 158, 176, 250, 255, 257, 263, 275, 280], "sympi": [4, 6, 8, 16, 18, 23, 27, 30, 33, 56, 80, 109, 117, 255, 264, 271], "str": [4, 6, 7, 8, 10, 18, 23, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 43, 48, 56, 69, 70, 74, 75, 76, 80, 88, 90, 95, 101, 112, 114, 117, 121, 126, 130, 133, 135, 138, 139, 140, 141, 143, 146, 147, 153, 157, 159, 162, 166, 171, 172, 174, 175, 177, 185, 186, 187, 188, 191, 192, 197, 198, 199, 200, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 242, 245], "expr": [4, 9, 27, 30, 33, 109, 183], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 136, 141, 162, 163, 224, 225, 226, 227, 228, 229, 230, 232, 244, 245, 247, 252, 255, 262, 264, 266, 271, 278, 280], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30], "free": [4, 5, 6, 7, 8, 16, 17, 18, 19, 23, 27, 30, 248, 262, 271], "note": [4, 6, 25, 68, 69, 94, 106, 107, 108, 222, 223, 224, 228, 229, 243, 254, 259, 261, 265, 266, 268, 276, 280], "hand": [4, 8, 16, 56], "side": [4, 8, 16, 56, 161], "pop_cl": 4, "eta_cl": [4, 37, 39, 268], "rhs_symbol": [4, 8, 16, 29], "classmethod": [4, 5, 7, 17, 18, 23, 25, 27, 28, 32, 225, 227], "sub": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30, 264], "substitut": [4, 5, 7, 8, 16, 17, 18, 23, 27, 29, 30, 262, 264, 266], "dict": [4, 5, 10, 16, 17, 18, 23, 26, 27, 30, 45, 60, 78, 79, 81, 82, 83, 87, 89, 92, 103, 152, 167, 168, 179, 193, 224, 228, 229, 238, 254, 264], "old": [4, 30, 152, 245, 274], "new": [4, 6, 9, 10, 14, 19, 25, 26, 27, 30, 37, 39, 42, 43, 69, 70, 73, 74, 84, 87, 88, 89, 152, 153, 157, 159, 166, 167, 171, 174, 175, 192, 193, 195, 234, 247, 248, 250, 254, 262, 267, 270, 274, 275, 278, 279], "pair": [4, 5, 8, 17, 18, 23, 27, 30, 35, 66, 220], "return": [4, 6, 8, 9, 10, 15, 16, 19, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 234, 237, 238, 245, 262], "updat": [4, 9, 10, 19, 26, 30, 194, 195, 197, 245, 247, 250, 260, 262, 267, 268, 271, 275, 279], "b": [4, 262, 267], "amount": [5, 6, 7, 8, 16, 17, 245, 254, 264], "dose": [5, 6, 7, 8, 9, 16, 17, 40, 84, 92, 97, 98, 105, 127, 148, 177, 245, 266, 279], "amt": [5, 7, 8, 10, 16, 17, 30, 33, 41, 68, 76, 77, 91, 98, 118, 130, 131, 132, 136, 137, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 254, 264, 266, 268], "dictionari": [5, 10, 14, 17, 18, 23, 26, 27, 28, 31, 78, 79, 81, 82, 83, 92, 103, 153, 167, 168, 179, 224, 228, 229, 238, 264], "unknown": [6, 254], "unit": [6, 117], "ratio": [6, 212, 217, 245, 247, 254, 275], "datatyp": [6, 138], "float64": [6, 10, 55, 62, 63, 66, 80, 81, 82, 83, 98, 110, 254, 264, 265, 266], "descriptor": [6, 10], "colum": 6, "measur": [6, 248, 254, 262], "bool": [6, 19, 25, 28, 32, 33, 35, 43, 55, 65, 67, 74, 76, 84, 105, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 153, 155, 166, 174, 175, 178, 194, 195, 197, 198, 210, 211, 222, 223, 225, 237], "discret": [6, 254, 261], "bar": [6, 257], "panda": [6, 10, 245, 255, 271], "dtype": [6, 10, 55, 60, 62, 63, 66, 67, 80, 81, 82, 83, 97, 98, 108, 110, 254, 264, 265, 266], "nomin": [6, 254], "ordin": [6, 254], "rang": [6, 28, 75, 278], "na": 6, "int8": 6, "sign": [6, 187, 262], "bit": 6, "127": [6, 259], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 254], "147": 6, "483": 6, "648": [6, 243], "647": [6, 243, 259], "int64": [6, 108, 254], "64": 6, "223": [6, 253], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 57, 79, 91, 96, 108, 203, 243, 244, 252, 254, 259, 263, 265, 272, 274, 277], "446": 6, "744": [6, 80, 97, 254, 265], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 262], "float": [6, 25, 33, 37, 42, 43, 47, 48, 66, 149, 156, 174, 177, 201, 202, 203, 205, 210, 211, 212, 213, 214, 216, 217, 245], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 77, 189, 245, 247, 264], "tran": [6, 77, 189, 245, 247, 264], "date": [6, 75, 77, 189, 245, 247, 262, 280], "common": [6, 35, 61, 238, 262, 266, 279], "birth": 6, "human": [6, 28, 271], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 254, 271], "concentr": [6, 94, 271], "substanc": 6, "blood": 6, "subject": [6, 14, 91, 100, 221, 262, 279], "uniqu": [6, 32, 46, 74, 153, 224, 234, 245, 247, 254, 278], "interv": [6, 254, 255], "ration": 6, "max": [6, 35, 169, 170, 243, 254], "datafram": [6, 15, 26, 28, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 75, 78, 79, 81, 82, 83, 91, 94, 96, 133, 134, 138, 153, 154, 155, 156, 194, 201, 202, 203, 205, 219, 220, 221, 222, 227, 245, 252, 254, 271], "idv": [6, 10, 177, 254, 274], "independ": [6, 254, 262, 269, 274, 278], "dv": [6, 10, 30, 68, 76, 77, 91, 110, 118, 130, 134, 136, 137, 141, 157, 159, 169, 170, 175, 245, 254, 264, 266, 268, 277], "infus": [6, 127, 176, 181, 266], "addit": [6, 35, 37, 45, 74, 84, 119, 120, 125, 157, 159, 175, 245, 247, 252, 254, 262, 274, 275, 278], "interdos": 6, "ss": 6, "steadi": [6, 245], "state": [6, 26, 35, 245, 262, 276], "event": [6, 99, 189, 245, 248, 262], "mdv": [6, 104, 245], "miss": [6, 91, 96, 245], "yet": [6, 278], "exactli": 6, "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 166, 247, 262, 266, 271], "physic": [6, 117, 248, 254, 262], "recogn": [6, 172, 248, 262, 268], "without": [6, 9, 53, 54, 78, 79, 81, 82, 83, 102, 109, 113, 153, 226, 243, 245, 247, 250, 255, 262, 264], "static": [6, 10, 19], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 27, 28, 30, 69, 118, 132, 178, 245, 247, 278], "convert_pd_dtype_to_datatyp": 6, "deriv": [6, 10, 13, 14, 16, 18, 23, 27, 117, 245, 250, 252], "kwarg": [6, 10, 13, 14, 19, 25, 28, 32, 36, 162, 199, 210, 212, 213, 214, 215, 216, 217, 218, 229, 230, 245], "properti": [6, 14, 25, 262, 264], "is_categor": 6, "check": [6, 19, 25, 27, 65, 66, 67, 119, 120, 121, 122, 123, 124, 125, 127, 128, 245, 249, 268, 278, 280], "is_numer": 6, "col1": 6, "col2": 6, "lag_tim": [7, 9], "bioavail": [7, 92, 245], "compartment": [7, 8, 16, 30, 245, 247, 264], "system": [7, 8, 9, 14, 16, 24, 30, 53, 54, 56, 78, 79, 81, 82, 83, 102, 109, 113, 127, 184, 228, 245, 247, 249, 250, 262, 264, 268, 279], "lag": [7, 9, 40, 103, 148, 245], "enter": [7, 262], "fraction": [7, 156, 243, 257], "bolu": [7, 8, 30, 41, 68, 118, 130, 150, 158, 164, 165, 169, 170, 173, 178, 182, 184, 247, 264], "comp": [7, 8, 245], "depot": [7, 8, 9, 164, 176, 178, 245, 266, 278], "alag": [7, 245], "a_centr": [7, 8, 16, 30, 68, 118, 130, 169, 170, 175, 182, 264], "builder": [8, 9], "odesystem": [8, 16, 30, 245], "od": [8, 14, 16, 24, 30, 42, 53, 54, 56, 78, 79, 81, 82, 83, 102, 109, 113, 127, 172, 184, 245, 247, 264, 279], "descib": 8, "cb": [8, 9], "compartmentalsystembuild": 8, "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 278], "k21": [8, 278], "vector": [8, 16, 18, 154, 155, 156, 244, 257, 264], "load_example_model": [8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 245, 258, 280], "pprint": [8, 16, 109], "ode_system": [8, 16, 30, 41, 150, 158, 164, 165, 169, 170, 173, 176, 178, 181, 182, 184, 245, 264], "a_output": [8, 16, 30, 264], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 233, 262], "compartment_nam": [8, 16], "compartmental_matrix": [8, 264], "matrix": [8, 18, 27, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 66, 154, 155, 156, 244, 245, 247, 257, 264], "set_first_order_absorpt": [8, 42, 158, 176, 181, 245, 266], "dosing_compart": 8, "receiv": [8, 262], "output_compart": 8, "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 67, 127, 128, 132, 176, 181, 182, 245, 261, 267, 269, 278], "set_zero_order_absorpt": [8, 158, 164, 176, 245, 266, 280], "atom": 8, "http": [8, 244, 249, 254, 255, 257, 258, 262, 275], "doc": [8, 250], "org": [8, 244, 246, 249, 254, 257, 262, 275], "latest": [8, 245, 255, 258], "core": [8, 258, 264, 266], "html": [8, 72, 255, 262, 266], "basic": [8, 28, 183, 245, 249, 252, 254, 262, 268, 278, 279], "find_compart": 8, "its": [8, 25, 30, 67, 75, 132, 195, 220, 245, 247, 249, 252, 254, 255, 258, 260, 262, 264, 280], "find_depot": 8, "out": [8, 27, 65, 195, 245, 262, 264, 270, 280], "find_transit_compart": 8, "chain": [8, 266], "singl": [8, 10, 25, 27, 185, 189, 200, 215, 219, 222, 224, 245, 247, 255, 257, 262, 266, 278], "distinguish": [8, 262], "get_compartment_inflow": 8, "go": [8, 215, 222, 245, 254, 262], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 197, 198, 224, 228, 229, 247], "ka": [8, 9, 16, 38, 245, 261], "get_n_connect": 8, "connect": [8, 19, 224, 226, 247, 254, 262, 271, 278, 279], "int": [8, 30, 33, 36, 45, 56, 61, 67, 73, 97, 106, 107, 145, 153, 154, 155, 156, 157, 162, 163, 173, 178, 212, 215, 217, 219], "to_compartmental_system": [8, 16, 24, 30], "to_explicit_system": [8, 16, 24, 30, 264], "skip_output": [8, 16], "explicit": [8, 16, 30, 39, 245, 247, 248, 252, 261, 264, 278], "boolean": [8, 25, 26, 84, 88, 89, 153, 161, 166, 192, 193, 201, 202, 203, 254], "leav": [8, 266], "result": [8, 14, 19, 27, 65, 71, 72, 75, 94, 131, 135, 138, 149, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 228, 229, 230, 232, 234, 237, 245, 248, 250, 260, 262, 268, 270, 271, 273, 279], "explicitodesystem": [8, 245, 264], "equat": [8, 16, 56, 264], "condit": [8, 16, 245, 257, 262, 264, 275], "dt": [8, 16, 30, 264], "compartmentalsystem": [9, 16, 245, 264], "newli": [9, 27, 261], "move_dos": 9, "move": [9, 195, 245], "anoth": [9, 19, 30, 234, 266], "remove_compart": 9, "remove_flow": 9, "set_dos": 9, "set_lag_tim": [9, 245], "force_absolute_path": 10, "sequenc": [10, 15, 26, 27, 30, 71], "metadata": [10, 224, 225, 228, 229, 232, 245], "index": [10, 26, 27, 28, 30, 36, 45, 56, 61, 66, 67, 98, 110, 145, 162, 163, 219, 222, 244, 245, 252, 254, 257, 258, 264, 276, 280], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 75], "idv_column": 10, "apgr": [10, 30, 33, 35, 68, 76, 77, 91, 96, 105, 118, 121, 130, 131, 132, 136, 137, 191, 212, 254, 257, 264, 266, 268, 274], "fa1": [10, 76, 77, 91, 136, 137, 254, 264, 266], "fa2": [10, 76, 77, 91, 136, 137, 254, 264], "replac": [10, 25, 27, 32, 153, 184, 245, 247, 255, 268], "example_model": 10, "dta": [10, 136, 264, 266, 268], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 245, 262, 266], "read_json": 10, "read": [10, 138, 139, 140, 141, 206, 207, 211, 223, 224, 228, 229, 245, 249, 254, 258, 260, 262, 270, 271, 273, 278, 279], "set_column": 10, "col": 10, "exist": [10, 30, 35, 45, 46, 74, 95, 97, 224, 225, 226, 245, 247, 249, 252, 254, 261, 278], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 28, 254, 266], "recover": 12, "issu": [12, 22, 245, 250, 260, 280], "hashabl": 13, "level": [13, 18, 23, 27, 31, 32, 101, 126, 245, 247, 254, 260, 264, 266, 271, 276, 278], "variabilitylevel": 13, "parameter_nam": [13, 27, 88, 183, 190, 192, 245, 249, 266, 268], "definit": [13, 14, 19, 30, 57, 155, 156, 203, 245, 247, 252, 257, 262, 264, 278], "varianc": [13, 18, 23, 27, 55, 56, 61, 166, 195, 259, 264, 266, 278], "abstract": [13, 24, 29, 228, 232, 244, 246, 255, 260, 264], "evalf": [13, 18, 23], "get_covari": [13, 18, 23, 27], "name1": [13, 18, 23, 135], "name2": [13, 18, 23, 135], "get_vari": [13, 18, 23], "latex_str": [13, 18, 23], "align": [13, 18, 23, 264, 266], "cov": [14, 15, 27, 34, 35, 36, 49, 56, 57, 59, 61, 62, 142, 155, 162, 163, 244, 245, 250, 257, 266], "evalu": [14, 36, 78, 79, 80, 81, 82, 83, 162, 163, 222, 243, 245, 271, 274, 277], "maximum_evalu": 14, "laplac": [14, 36, 162, 163, 245, 247], "isampl": [14, 36, 45, 162, 245], "niter": [14, 36, 45, 162, 245], "auto": [14, 15, 245], "keep_every_nth_it": [14, 15, 245], "residu": [14, 27, 83, 115, 202, 203, 220, 245, 260, 275, 277, 278, 280], "solver": [14, 172, 245, 247], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 45, 162, 278], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 69, 75, 229, 230, 247, 249, 250, 252, 255, 260, 262, 264, 266, 270], "let": [14, 19, 75, 245, 252, 257, 266, 268, 278], "uncertainti": [14, 56, 57, 61, 154, 155, 156, 245, 247, 257, 265], "epsilon": [14, 27, 53, 54, 78, 79, 137, 166, 174, 180, 196, 245, 247, 255], "calcul": [14, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 80, 94, 205, 243, 244, 245, 257, 259, 260, 261, 267, 279], "eta": [14, 27, 30, 33, 35, 37, 39, 53, 54, 55, 57, 68, 71, 78, 79, 81, 102, 109, 114, 118, 130, 131, 132, 136, 137, 141, 146, 147, 154, 166, 185, 186, 187, 188, 245, 247, 252, 255, 257, 259, 261, 264, 265, 268, 274, 278, 279, 280], "preserv": [14, 27, 262], "comput": [14, 250, 252, 262], "sampl": [14, 27, 73, 153, 154, 155, 156, 257], "similar": [14, 243, 262, 267, 275, 280], "em": 14, "everi": [14, 254, 262], "nth": 14, "iter": [14, 15, 30, 56, 133, 153, 155, 245, 272, 275], "laplacian": 14, "solv": [14, 245], "advan": [14, 172, 245], "cvode": [14, 172, 247], "advan14": [14, 172, 247], "dgear": [14, 172, 247], "advan8": [14, 172, 247], "dverk": [14, 172, 247], "advan6": [14, 172, 247], "ida": [14, 172, 247], "advan15": [14, 172, 247], "lsoda": [14, 172, 247], "advan13": [14, 172, 247, 266], "lsodi": [14, 172, 247], "advan9": [14, 172, 247], "absolut": [14, 66, 245, 262], "toler": 14, "supported_method": 14, "ITS": [14, 36, 162, 163, 245, 247, 261, 267], "impmap": [14, 36, 162, 163, 245, 247], "imp": [14, 36, 162, 163, 245, 247], "saem": [14, 36, 162, 163, 245, 247], "bay": [14, 162, 163, 247], "to_datafram": [15, 26, 227], "overview": [15, 227, 243, 247, 256, 276], "pd": [15, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 75, 78, 79, 80, 81, 82, 83, 91, 93, 94, 96, 97, 98, 99, 104, 108, 110, 133, 134, 135, 138, 153, 154, 155, 156, 194, 195, 201, 202, 203, 205, 219, 220, 221, 222, 227, 245, 254], "estimation_step": [15, 19, 34, 36, 45, 142, 145, 162, 163, 245], "doctest": [15, 250], "ellipsi": 15, "ic": 16, "explicitli": [16, 247, 261, 262], "differenti": [16, 264], "a_depot": 16, "k": [16, 56, 244, 245, 250, 252, 257], "eq1": 16, "eq2": 16, "ordinari": [16, 264], "durat": [17, 176, 181], "mutual": [17, 261, 278], "exclus": [17, 262, 278], "d1": [17, 245], "r1": 17, "symbolc": 17, "dur": 17, "joint": [18, 27, 39, 71, 185, 257, 261, 264, 279], "omega_cl": [18, 23, 27], "omega_v": [18, 27], "corr_cl_v": [18, 27], "omega_cl_v": [18, 27], "dist": [18, 23, 27, 245, 250], "iiv_cl": [18, 23, 27, 268], "iiv_v": [18, 27, 266], "itself": [18, 23, 262], "omega1": 18, "omega2": 18, "omega_new": [18, 23, 27], "dependent_vari": [19, 245], "y": [19, 26, 30, 68, 117, 118, 130, 136, 137, 141, 144, 157, 159, 166, 174, 175, 177, 196, 264, 266, 268], "discript": 19, "estimationstep": [19, 34, 36, 142, 162, 163, 245], "filename_extens": 19, "extens": [19, 224, 226, 254, 262, 264], "initial_individual_estim": 19, "model_cod": [19, 245, 266], "modelfit_result": [19, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 78, 79, 80, 81, 82, 83, 154, 155, 156, 194, 195, 203, 210, 211, 212, 213, 214, 216, 217, 222, 245, 264, 265, 266, 280], "modelfit": [19, 215, 222, 224, 228, 229, 243, 245, 247, 279], "observation_transform": [19, 245], "parent": [19, 220, 221, 234], "random_vari": [19, 71, 185, 264, 266, 280], "randomvari": [19, 245], "value_typ": 19, "likelihood": [19, 47, 48, 212, 217, 247, 275], "2ll": [19, 47, 48, 245], "log": [19, 35, 37, 48, 132, 157, 159, 161, 175, 245, 254, 257, 266], "record": [19, 78, 79, 80, 81, 82, 83, 84, 133, 149, 245, 250, 268], "would": [19, 32, 132, 243, 252, 257, 262, 266, 268, 271, 280], "copi": [19, 39, 70, 111, 115, 116, 245, 259, 261, 262, 266, 278], "deepcopi": 19, "create_model": 19, "factori": 19, "io": [19, 250, 255, 258], "implement": [19, 224, 226, 228, 229, 261, 262, 264, 271, 278], "g": [19, 68, 74, 147, 216, 245, 250, 254, 257, 259, 261, 266, 267, 271, 275, 278, 280], "nonmem7": 19, "has_same_dataset_a": 19, "update_datainfo": 19, "msg": 21, "syntax": [21, 278], "normal": [23, 27, 32, 39, 60, 64, 132, 257, 261, 262, 280], "abc": [24, 29, 228, 232], "init": [25, 26, 35, 43, 89, 167, 193, 195, 247, 257, 264], "inf": [25, 50, 52, 63, 264], "param": [25, 26, 247], "tvcl": [25, 30, 33, 37, 39, 68, 80, 118, 130, 131, 132, 136, 137, 146, 243, 257, 264, 266, 268], "005": 25, "constrain": [25, 255, 264], "unfix": [25, 87, 88, 89, 167, 190, 192, 193, 245], "back": [25, 64, 245], "previou": [25, 27, 30, 40, 71, 97, 118, 164, 176, 178, 181, 211, 221, 237, 245, 262, 267, 279, 280], "less": 25, "greater": 25, "altern": [25, 187, 250, 262, 266], "constructor": [25, 245], "immut": 26, "collect": [26, 27, 257, 262, 266, 278], "usual": [26, 250, 280], "wai": [26, 122, 123, 124, 128, 250, 252, 254, 262, 264, 266, 278, 280], "displai": [26, 157, 257, 262, 266], "summar": [26, 219, 221, 222, 257, 263], "par1": 26, "par2": 26, "pset": 26, "fixed": [26, 87], "nonfix": 26, "set_fix": 26, "set_initial_estim": [26, 245], "100": [26, 35, 36, 45, 154, 162, 188, 243, 245, 247, 265, 266, 269, 276], "eta_level": 27, "epsilon_level": 27, "act": 27, "while": [27, 250, 266, 278, 280], "variabilityhierarchi": 27, "contin": 27, "hierarchi": [27, 31], "rv": [27, 71, 114, 151, 185, 264], "normaldistribut": 27, "covariance_matrix": [27, 49, 56, 59, 61, 62, 155, 243, 245, 264, 265], "nrv": 27, "variance_paramet": 27, "rv1": 27, "rv2": 27, "get_rvs_with_same_dist": 27, "join": [27, 185, 245, 248, 266], "ind": 27, "fill": 27, "name_templ": 27, "param_nam": 27, "taken": [27, 84, 91, 96, 189, 224, 254, 257], "remain": [27, 248, 262], "stai": 27, "templat": [27, 35, 37, 266], "overrid": [27, 249, 278], "tupl": [27, 133, 153, 212, 238], "dist1": 27, "dist2": 27, "_": [27, 28, 221, 244, 257], "unjoin": 27, "nearest_valid_paramet": 27, "parameter_valu": 27, "forc": [27, 74, 155, 156, 194, 197, 198, 245, 247, 261, 262], "small": 27, "parameters_sdcorr": 27, "sd": [27, 55, 266, 274, 277], "corr": [27, 51, 58, 274], "assum": [27, 224, 257, 262, 268], "var": [27, 57, 252, 257], "rng": [27, 56, 61, 73, 154, 155, 156], "jointnormaldistribut": 27, "validate_paramet": 27, "seri": [27, 51, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 80, 81, 82, 83, 93, 97, 98, 99, 104, 108, 110, 135, 155, 156, 157, 187, 195, 245, 265], "current": [27, 36, 37, 53, 54, 68, 69, 78, 79, 81, 82, 83, 102, 109, 113, 127, 130, 158, 162, 163, 176, 184, 189, 205, 212, 215, 228, 234, 244, 245, 247, 250, 252, 253, 257, 258, 260, 261, 262, 263, 264, 266, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280], "matric": [27, 57, 156, 245, 255, 265], "semidefinit": [27, 245, 255], "use_cach": 27, "symengin": [27, 255, 271], "cach": 27, "from_dict": [28, 225, 227], "get_and_reset_index": 28, "attr": 28, "wrapper": [28, 245, 250, 255, 258, 280], "reset": [28, 189, 245, 280], "facilit": 28, "multiindex": [28, 245], "to_csv": [28, 266], "save": [28, 223, 245, 266], "readabl": [28, 226, 228, 254, 262, 271], "print": [28, 65, 136, 137, 204, 245, 264, 266], "to_dict": [28, 225, 227], "lzma": [28, 223], "serial": [28, 245, 254, 271], "compress": [28, 223], "unless": [28, 30, 262], "signific": [30, 67, 213, 214, 216, 245, 262, 276], "after_od": [30, 175], "s\u2081": [30, 33, 68, 118, 130, 131, 132, 137, 175, 264], "ipr": [30, 68, 81, 118, 130, 136, 137, 174, 175, 245, 264, 265, 266, 277], "ir": [30, 68, 118, 130, 136, 137, 175, 264], "iwr": [30, 68, 118, 130, 136, 137, 175, 264], "before_od": [30, 33, 35, 131, 132, 186, 187, 188], "btime": [30, 33, 68, 118, 130, 131, 132, 136, 137, 264], "tad": [30, 33, 44, 68, 118, 130, 131, 132, 136, 137, 245, 254, 264, 274], "tvv": [30, 33, 68, 118, 130, 131, 132, 136, 137, 146, 243, 257, 264, 266, 268], "\u212f": [30, 33, 42, 68, 118, 130, 131, 132, 166, 264], "whole": [30, 247, 254, 262, 278], "s1": [30, 126, 136, 264, 266, 268], "symbol_or_stat": 30, "direct_depend": 30, "direct": [30, 233, 252, 262, 276], "find_assign": [30, 37, 38, 39, 42, 144, 146, 157, 159, 166, 174, 177, 196, 266], "find_assignment_index": 30, "full_express": [30, 35, 186, 187, 188], "expand": [30, 84], "full": [30, 71, 102, 109, 113, 244, 245, 247, 257, 261, 262, 267, 274], "reassign": 30, "sypmpi": 30, "remove_symbol_definit": 30, "elsewher": 30, "longer": [30, 245], "make": [30, 68, 131, 144, 152, 153, 212, 245, 255, 261, 262, 264, 266, 267, 278, 280], "sure": [30, 152, 245, 262, 267, 280], "stat": [30, 278], "rais": [30, 153, 195, 245], "p": [33, 205, 212, 217, 243, 244, 245, 247, 252, 257, 266, 275, 276], "allometri": [33, 210, 211, 245, 278], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 45, 142, 145, 163, 245, 280], "add_estimation_step": [34, 45, 142, 145, 162, 163, 245], "remove_estimation_step": [34, 36, 45, 142, 162, 163], "append_estimation_step_opt": [34, 36, 142, 145, 162, 163, 245], "remove_covariance_step": [34, 36, 45, 145, 162, 163, 245], "set_evaluation_step": [34, 36, 45, 142, 145, 162], "allow_nest": [35, 245], "linear": [35, 243, 244, 245, 255, 264, 271, 273], "lin": 35, "coveff": [35, 74], "median": [35, 56, 61, 243, 245, 266, 271, 277], "equal": [35, 39, 153, 166, 247, 250, 266], "minimum": [35, 255], "000": [35, 265], "frac": [35, 157, 159, 244, 264, 266, 277], "min": [35, 157, 159, 243, 254], "piecewis": [35, 245], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 266], "theta2": [35, 266], "pow": [35, 266], "mai": [35, 259, 261, 262, 266, 267, 278], "abbrevi": [35, 37, 245, 247, 250, 268], "multipli": [35, 37, 166, 243, 247, 266], "alreadi": [35, 247, 250, 261, 262, 266], "pop_clapgr": 35, "idx": [36, 45, 145, 162, 163, 280], "argument": [36, 78, 79, 81, 82, 83, 162, 199, 210, 212, 213, 214, 215, 216, 217, 218, 231, 245, 247, 266, 278, 280], "pass": [36, 73, 162, 199, 210, 212, 213, 214, 215, 216, 217, 218, 234, 262], "opt": [36, 45, 162], "1000": [36, 45, 80, 162, 257], "len": [36, 45, 145, 149], "add_covariance_step": [36, 45, 142, 145, 162, 163, 245], "initial_estim": [37, 42], "09": [37, 42, 159, 166, 175, 252, 259, 266, 267, 268, 272], "eta_nam": [37, 39, 166, 247, 266], "prop": [37, 266], "logit": 37, "user": [37, 95, 245, 255, 259, 261, 262, 264, 265, 266, 267, 268], "remove_iiv": [37, 39, 42, 147, 245, 261, 266, 268], "add_pk_iiv": [37, 39, 146, 147, 245, 267], "add_iov": [37, 42, 146, 147, 245, 261, 266], "remove_iov": [37, 39, 42, 146, 245, 261, 266], "pop_ka": [38, 43], "occ": [39, 214, 247, 261], "disjoint": [39, 261], "accept": [39, 106, 107, 108, 247, 262], "add_iiv": [39, 42, 146, 147, 245, 266, 268], "set_transit_compart": [40, 148, 245, 266], "remove_lag_tim": [40, 245, 266], "parameter": 41, "qpn": 41, "vpn": 41, "volumn": 41, "mathsf": [41, 150], "cdot": [41, 150, 257, 264, 266], "qp2": [41, 150, 173, 245, 266], "vp2": [41, 150, 173, 266], "peripheral1": [41, 150, 173], "set_peripheral_compart": [41, 150, 245, 266], "remove_peripheral_compart": [41, 173, 245, 266], "Will": [42, 140, 224, 225, 226], "pop_mat": [42, 266, 268], "eta_mat": 42, "004693": [43, 60, 116, 257, 264], "1000000": [43, 87, 88, 89, 116, 167, 168, 190, 193, 264, 266], "009160": [43, 116, 264], "100000": [43, 116, 264, 266], "99": [43, 116, 136, 195, 243, 245, 264], "030963": [43, 111, 257, 264], "031128": [43, 111, 136, 257, 264, 266, 268], "013241": [43, 115, 136, 257, 264, 265, 266], "append": [45, 245], "increas": [46, 250], "until": [46, 222, 262, 280], "do": [46, 155, 243, 245, 247, 257, 262, 266, 268, 275, 280], "noth": [46, 149, 262], "next": [46, 245, 262, 267, 268, 275], "run2": [46, 171, 266], "run3": 46, "n_estimated_paramet": [47, 48], "fit": [47, 48, 195, 204, 215, 220, 222, 228, 245, 262, 264, 275, 279, 280], "variat": 48, "n_random_paramet": 48, "n_individu": 48, "n_fixed_paramet": 48, "n_observ": 48, "n_individ": 48, "n_estimated_iiv_omega_paramet": 48, "611": 48, "7071686183284": 48, "616": [48, 245, 265], "536606983396": 48, "610": 48, "7412809453149": 48, "594": 48, "431131169692": 48, "411510e": [49, 52, 59, 62, 264, 265], "010000e": [49, 52, 59, 62, 264, 265], "000002": [49, 51, 52, 59, 62, 264, 265], "000001": [49, 51, 52, 56, 59, 61, 62, 261, 264, 265, 267], "538630e": [49, 51, 52, 59, 62, 264, 265], "178090e": [49, 52, 59, 62, 264, 265], "233530e": [49, 52, 59, 62, 264, 265], "04": [49, 50, 51, 52, 58, 59, 62, 63, 243, 252, 264, 265, 274, 276], "000804": [49, 51, 52, 59, 62, 264, 265], "000050": [49, 51, 52, 59, 62, 243, 264, 265], "171840e": [49, 52, 59, 62, 264, 265], "461760e": [49, 52, 59, 62, 264, 265], "665010e": [49, 52, 59, 62, 264, 265], "06": [49, 51, 52, 59, 62, 243, 252, 259, 261, 264, 265, 274, 276, 278], "040250e": [49, 52, 59, 62, 264, 265], "007016": [49, 51, 52, 59, 62, 264, 265], "000108": [49, 51, 52, 59, 62, 264, 265], "944800e": [49, 52, 59, 62, 264, 265], "932950e": [49, 52, 59, 62, 264, 265], "093430e": [49, 52, 59, 62, 264, 265], "981380e": [49, 51, 52, 59, 62, 264, 265], "000180": [49, 51, 52, 59, 62, 264, 265], "856650e": [49, 52, 59, 62, 264, 265], "867230e": [49, 52, 59, 62, 264, 265], "000039": [49, 51, 52, 59, 62, 264, 265], "000019": [49, 51, 52, 59, 62, 264, 265], "589820e": [49, 51, 52, 59, 62, 264, 265], "685650e": [49, 52, 59, 62, 264, 265], "000029": [49, 51, 52, 59, 62, 264, 265], "000005": [49, 51, 52, 59, 62, 264, 265], "195640e": [49, 52, 59, 62, 264, 265], "007099": [49, 50, 51, 58, 265], "094640": [49, 50, 51, 58, 265], "388059": [49, 50, 51, 58, 66], "097981": [49, 50, 51, 58, 265], "170820": [49, 50, 51, 58, 265], "356899": [49, 50, 51, 58, 66], "138062": [49, 50, 51, 58, 265], "356662": [49, 50, 51, 58, 66, 265], "238441": [49, 50, 51, 58], "096515": [49, 50, 51, 58], "062991": [49, 50, 51, 58, 265], "153616": [49, 50, 51, 58, 265], "185111": [49, 50, 51, 58, 265], "159170": [49, 50, 51, 58, 265], "027495": [49, 50, 51, 58, 265], "calculate_se_from_cov": [49, 50, 51, 52, 58, 59, 63, 245], "calculate_se_from_inf": [49, 50, 51, 52, 58, 59, 62, 245], "calculate_cov_from_inf": [49, 50, 51, 58, 59, 62, 63, 245], "calculate_cov_from_corrs": [49, 50, 52, 58, 59, 62, 63, 245], "calculate_inf_from_cov": [49, 50, 51, 52, 58, 62, 63, 245], "calculate_inf_from_corrs": [49, 50, 51, 52, 59, 62, 63, 245], "calculate_corr_from_inf": [49, 51, 52, 58, 59, 62, 63, 245], "information_matrix": [50, 52, 63, 265], "995567e": [50, 52, 59, 63], "22660": [50, 52, 58, 59, 63, 265], "028196": [50, 52, 59, 63], "16057": [50, 52, 58, 59, 63, 265], "855248": [50, 52, 59, 63], "203511": [50, 52, 58, 59, 63, 265], "614428": [50, 52, 59, 63], "39474": [50, 52, 58, 59, 63, 265], "250514": [50, 52, 59, 63], "820118": [50, 52, 59, 63], "299536": [50, 52, 59, 63], "266003e": [50, 52, 59, 63], "2129": [50, 52, 58, 59, 63, 265], "904642": [50, 52, 59, 63], "260": [50, 52, 58, 59, 63, 265], "176234": [50, 52, 59, 63], "375": [50, 52, 58, 59, 63, 265], "266233": [50, 52, 59, 63], "2800": [50, 52, 58, 59, 63, 265], "816246": [50, 52, 59, 63], "7718": [50, 52, 58, 59, 63, 265], "769557": [50, 52, 59, 63], "605786e": [50, 52, 59, 63], "187": [50, 52, 58, 59, 63, 265], "038903": [50, 52, 59, 63], "177": [50, 52, 58, 59, 63, 245, 265, 276], "207683": [50, 52, 59, 63], "205": [50, 52, 58, 59, 63, 265], "808480": [50, 52, 59, 63], "2225": [50, 52, 58, 59, 63, 265, 266], "150449": [50, 52, 59, 63], "035116e": [50, 52, 59, 63], "7527": [50, 52, 58, 59, 63, 265], "530027": [50, 52, 59, 63], "2462": [50, 52, 58, 59, 63, 265], "974821": [50, 52, 59, 63], "9977": [50, 52, 58, 59, 63, 265], "488860": [50, 52, 59, 63], "947425e": [50, 52, 59, 63], "22343": [50, 52, 58, 59, 63, 265], "198618": [50, 52, 59, 63], "9370": [50, 52, 58, 59, 63, 265], "758371": [50, 52, 59, 63], "201183e": [50, 52, 59, 63], "249847": [50, 52, 59, 63, 265], "177845": [50, 52, 59, 63], "calculate_corr_from_cov": [50, 51, 52, 58, 59, 62, 63, 245], "se": [51, 58, 251, 264, 265], "correlation_matrix": [51, 58, 66, 265], "standard_error": [51, 58, 264, 265], "411512e": 51, "009998e": 51, "178111e": 51, "233518e": 51, "171834e": 51, "461762e": 51, "665011e": 51, "040245e": 51, "944801e": 51, "932957e": 51, "093431e": 51, "856651e": 51, "867245e": 51, "685661e": 51, "195664e": 51, "gradient": [53, 54, 78, 79, 245], "pheno_linear": [53, 54, 78, 79, 81, 82, 83, 102, 109, 113, 130, 205], "d_eps1": [53, 109], "d_epseta1_1": [53, 109], "oeta1": [53, 102, 113], "d_epseta1_2": [53, 109], "oeta2": [53, 102, 113], "calculate_eta_gradient_express": [53, 245], "d_eta1": [54, 102, 109, 113], "d_eta2": [54, 102, 109, 113], "calculate_epsilon_gradient_express": [54, 245], "parameter_estim": [55, 56, 57, 61, 67, 80, 82, 83, 155, 156, 195, 243, 245, 264, 265, 266], "individual_estim": [55, 71, 78, 79, 81, 154, 194, 245, 265, 266], "shrinkag": [55, 57, 279], "deviat": [55, 196, 243, 257, 263, 265, 274, 277], "pe": [55, 56, 57, 61, 80, 82, 155, 156, 266], "ie": [55, 154, 194, 266], "720481": 55, "240295": 55, "471305": 55, "128389": 55, "calculate_individual_shrinkag": [55, 245], "expr_or_expr": 56, "expect": [56, 61, 248, 262, 274], "arbitrari": [56, 61], "solut": [56, 184], "th": [56, 244, 257], "95": [56, 243, 257], "percentil": [56, 243, 257], "previous": [56, 61, 134, 195, 245, 268, 280], "interest": [56, 248, 262, 266, 271], "seed": [56, 61, 73, 154, 156, 247], "create_rng": [56, 61, 154, 155, 156], "stderr": [56, 61, 243, 278], "p5": [56, 61, 257], "004234": [56, 61], "001138": [56, 61], "004907": [56, 61], "001247": [56, 61], "p95": [56, 61, 257], "individual_estimates_covari": [57, 154, 245, 265], "ieta_shr": 57, "847789": 57, "256473": 57, "796643": 57, "210669": 57, "755025": 57, "226957": 57, "764541": 57, "216405": 57, "816192": 57, "203974": 57, "778108": 57, "210992": 57, "659420": 57, "236875": 57, "668551": 57, "240097": 57, "260056": 57, "200374": 57, "725190": 57, "226563": 57, "972110": 57, "421852": 57, "249640": 57, "254119": 57, "730294": 57, "364932": 57, "165785": 57, "194464": 57, "813399": 57, "313554": 57, "797328": 57, "213211": 57, "769059": 57, "278079": 57, "098506": 57, "176778": 57, "749022": 57, "235386": 57, "742181": 57, "222932": 57, "317956": 57, "264473": 57, "943950": 57, "232732": 57, "707183": 57, "259077": 57, "553787": 57, "247717": 57, "826349": 57, "114302": 57, "26": [57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 274, 276, 277], "854777": 57, "341384": 57, "27": [57, 91, 96, 108, 110, 203, 243, 244, 252, 254, 259, 261, 263, 265, 267, 275, 277], "820829": 57, "263235": 57, "28": [57, 78, 81, 82, 91, 96, 108, 203, 243, 244, 252, 254, 259, 262, 263, 265, 274, 277], "999942": 57, "319986": 57, "29": [57, 78, 81, 82, 91, 96, 108, 187, 203, 243, 244, 246, 252, 254, 259, 262, 263, 265, 274, 277], "967084": 57, "432760": 57, "30": [57, 91, 96, 108, 203, 243, 244, 252, 254, 259, 261, 262, 263, 265, 267, 274, 277], "404773": 57, "325215": 57, "31": [57, 78, 81, 91, 96, 108, 110, 203, 243, 244, 252, 254, 263, 265, 272, 274, 277, 278], "999980": 57, "318421": 57, "925283": 57, "167667": 57, "33": [57, 91, 96, 108, 110, 203, 243, 244, 252, 254, 263, 265, 267, 276, 277], "913706": 57, "242106": 57, "34": [57, 82, 91, 96, 108, 110, 203, 243, 244, 252, 254, 263, 265, 272, 274, 277], "875554": 57, "249197": 57, "849135": 57, "294294": 57, "172206": 57, "246422": 57, "747380": 57, "278340": 57, "38": [57, 78, 81, 91, 96, 108, 203, 243, 244, 254, 263, 265, 277], "187440": 57, "231249": 57, "39": [57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 274, 275, 276, 277], "237805": 57, "254485": 57, "40": [57, 91, 94, 96, 108, 110, 149, 203, 243, 244, 252, 254, 263, 265, 276, 277], "999925": 57, "189793": 57, "41": [57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 274, 277], "941906": 57, "170998": 57, "42": [57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 267, 276, 277], "923801": 57, "244046": 57, "43": [57, 91, 96, 108, 203, 243, 244, 252, 254, 261, 263, 265, 276, 277], "999928": 57, "320403": 57, "44": [57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 277], "237637": 57, "260453": 57, "45": [57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 277], "869540": 57, "194503": 57, "46": [57, 91, 96, 108, 203, 243, 244, 252, 254, 263, 265, 277], "999949": 57, "319750": 57, "47": [57, 91, 96, 108, 110, 203, 243, 244, 252, 254, 263, 265, 267, 274, 277], "983782": 57, "393234": 57, "698267": 57, "169337": 57, "49": [57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 277], "776674": 57, "214962": 57, "50": [57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 267, 274, 277], "688847": 57, "192608": 57, "51": [57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 277, 278], "822213": 57, "202534": 57, "52": [57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 267, 276, 277], "511489": 57, "273601": 57, "53": [57, 91, 96, 108, 203, 243, 244, 254, 263, 265, 272, 274, 277], "964757": 57, "223448": 57, "762153": 57, "181648": 57, "965657": 57, "435741": 57, "995278": 57, "354798": 57, "813382": 57, "263372": 57, "727295": 57, "232867": 57, "738777": 57, "224742": 57, "calculate_eta_shrinkag": [57, 245, 266], "995565e": 58, "041788": 58, "848052": 58, "410335": 58, "240358": 58, "820116": [58, 265], "179011": 58, "266004e": 58, "908225": 58, "176399": 58, "266263": 58, "818557": 58, "757955": 58, "605785e": 58, "038825": 58, "207512": 58, "808434": 58, "144772": 58, "035114e": 58, "518562": 58, "972906": 58, "457873": 58, "947424e": 58, "197906": 58, "736254": 58, "201162e": 58, "249846": 58, "006431": 58, "ucp": [60, 64], "ucpscal": [60, 64], "calculate_ucp_scal": [60, 245], "00916": [60, 136, 195, 257, 264, 266, 268], "0309626": [60, 136, 195, 264, 266, 268], "031127999999999996": 60, "013241000000000001": 60, "convers": [60, 245], "pharmacokinet": [61, 254], "pre": 61, "k_e": 61, "calculate_individual_parameter_statist": [61, 245, 266], "000210": [62, 63, 264, 265], "026895": [62, 63, 264, 265], "083762": [62, 63, 264, 265], "013415": [62, 63, 264, 265], "007477": [62, 63, 264, 265], "002279": [62, 63, 264, 265], "unconstrain": 64, "calculate_parameters_from_ucp": [64, 245], "verbos": 65, "consist": [65, 252, 262, 278], "across": [65, 245, 262], "consol": 65, "els": [65, 245, 266], "fail": [65, 245, 262, 271], "cor": [66, 250], "highli": 66, "high": [66, 254, 255, 271], "zero_limit": 67, "significant_digit": [67, 245], "close": [67, 195, 245, 257, 262, 263], "distanc": [67, 75, 277], "logic": 67, "cleanup": 68, "what": [68, 262, 268, 271], "inlin": 68, "clean": 68, "might": [68, 262, 266, 271, 278, 280], "certain": [68, 133, 245, 261, 262, 266, 270, 278], "requir": [68, 245, 247, 252, 258, 262, 274], "to_format": 69, "inplac": 69, "nlmixr": [69, 215, 250, 260], "underli": [69, 90, 136, 264], "converted_model": 69, "model_copi": 70, "pheno2": [70, 280], "block": [71, 146, 174, 245, 247, 257, 259, 266, 267, 274, 278], "iiv_cl_iiv_v": [71, 185], "split_joint_distribut": [71, 245, 266], "report": [72, 245, 250, 260, 271], "through": [73, 247, 248, 249, 252, 262, 264, 278], "numpi": [73, 254, 255, 264], "standard_norm": 73, "5532605888887387": 73, "stem": 74, "force_numb": 74, "coveff1": 74, "temp": 74, "temp1": 74, "cl1": 74, "df": [75, 79, 221, 245, 254, 272, 274], "date_column": 75, "deidentifi": [75, 245], "year": [75, 245, 250, 262], "earliest": 75, "maintain": [75, 248, 250, 251, 260, 262, 270, 271], "leap": 75, "1901": 75, "1902": 75, "1903": 75, "1904": 75, "closest": 75, "preceed": 75, "column_nam": [76, 191], "mark": [76, 77, 84, 191, 247, 262], "drop_dropped_column": [76, 191, 245], "undrop_column": [76, 245], "undrop": [76, 191], "drop_column": [77, 191, 245], "them": [77, 153, 248, 259, 261, 262, 267, 268, 275, 278], "dy": 78, "dep": 78, "771084": [78, 81], "881859": [78, 81], "441728": [78, 81], "113050": [78, 81], "783055": [78, 81], "150": [78, 79, 81, 82, 83, 265], "375041": [78, 81], "151": [78, 79, 81, 82, 83], "833395": [78, 81], "152": [78, 79, 81, 82, 83], "876707": [78, 81], "153": [78, 79, 81, 82, 83, 253], "905095": [78, 81], "154": [78, 79, 81, 82, 83], "099690": [78, 81], "155": [78, 79, 81, 82, 83, 107, 110, 254, 265], "evaluate_eta_gradi": [78, 245], "deta": 79, "159537": 79, "609116": 79, "325893": 79, "562289": 79, "104417": 79, "346161": 79, "452951": 79, "682310": 79, "838840": 79, "981836": 79, "424423": 79, "973013": 79, "497185": 79, "344797": 79, "198714": 79, "697161": 79, "987731": 79, "941806": 79, "817067": 79, "309945": 79, "evaluate_epsilon_gradi": [79, 245], "573770": 80, "739": [80, 97, 254], "165105": 80, "741": [80, 97, 243, 254], "742": [80, 97, 243, 254], "743": [80, 97, 254], "evaluate_population_predict": [81, 245], "529739": 82, "179910": [82, 263], "688648": 82, "798916": 82, "023225": 82, "459036": 82, "223295": 82, "217288": 82, "472888": 82, "226455": 82, "evaluate_individual_predict": [82, 245], "wre": [83, 245], "313859": 83, "675721": 83, "544240": 83, "921720": 83, "517677": 83, "223935": 83, "053334": 83, "007023": 83, "931252": 83, "778389": 83, "flag": [84, 245, 277, 278], "origin": [84, 197, 243, 244, 248, 250, 257, 262, 277], "care": [84, 224], "00469307": [87, 88, 89, 136, 168, 179, 190, 195, 264, 266, 268], "fix_paramet": [87, 89, 192, 193, 266], "unfix_paramat": [87, 88, 89, 193], "fix_paramaters_to": [87, 193], "unfix_paramaters_to": [87, 88, 89, 167, 192], "fix_or_unfix_paramet": [88, 89, 192, 193], "fix_parameters_to": [88, 167, 192, 266], "baselin": [91, 96, 129, 245, 257], "60": [91, 254, 262, 272], "63": [91, 110, 254, 265, 274], "present": [93, 99, 247, 254, 257, 262, 278], "extract": [93, 99, 245, 247, 260], "directli": [94, 224, 228, 229, 245, 247, 254, 255, 262, 264, 266, 271, 278], "cmax": [94, 245, 254], "tmax": [94, 245, 254], "cmin": [94, 245, 254], "tmin": [94, 245, 254], "doseid": [94, 97, 254], "589": [94, 98, 254], "config": [95, 245, 250, 269], "get_baselin": [96, 245], "set_covari": 96, "period": [97, 254], "96": [98, 188, 243, 254, 266, 267], "108": [98, 254, 265], "120": [98, 254, 265], "132": [98, 252, 254, 265], "144": [98, 252, 254, 265, 276], "retriev": [100, 101, 106, 107, 112, 114, 208, 209, 224, 228, 229, 245, 264, 265, 266, 279], "get_pk_paramet": [101, 114, 245], "get_rv_paramet": [101, 112, 126, 245], "has_random_effect": [101, 114, 245], "opr": [102, 109, 113], "get_population_prediction_express": [102, 245], "epress": [102, 113], "item": [105, 249, 252, 262], "activ": [106, 107, 108, 262], "ignor": [106, 107, 108, 136, 245, 247, 264, 266, 268], "get_number_of_observ": [106, 110, 245, 254], "get_number_of_observations_per_individu": [106, 107, 110, 245], "total": [107, 245, 254], "get_number_of_individu": [107, 108, 245, 254], "observation_count": 108, "accord": [109, 245, 262, 267, 278], "oeta\u2082": 109, "oeta\u2081": 109, "112": [110, 252, 254, 259, 261, 265, 267, 274, 275], "131": [110, 252, 254, 265], "146": [110, 254, 261, 265], "get_theta": [111, 115, 245], "get_sigma": [111, 116, 245], "get_individual_paramet": [112, 114, 126, 245], "get_individual_prediction_express": [113, 245], "get_omega": [115, 116, 245], "structur": [116, 211, 226, 245, 247, 254, 260, 261, 264, 266, 267, 278, 280], "00": [116, 257, 264, 265, 272, 274, 276, 278], "olumn": 117, "milligram": [117, 254], "liter": [117, 254], "kilogram": [117, 254], "named_subscript": 118, "greek": 118, "subscript": 118, "cleanup_model": [118, 245], "\u03b8\u2081": 118, "\u03b8\u2082": 118, "\u03b8\u2083": 118, "\u03b7\u2081": 118, "\u03b7\u2082": 118, "\u03b5\u2081": 118, "has_proportional_error_model": [119, 120, 245], "has_combined_error_model": [119, 125, 245], "proportin": [120, 266], "has_additive_error_model": [120, 125, 245], "instanc": [121, 143, 252, 278], "reli": [122, 123, 124, 128, 262], "heurist": [122, 123, 124, 128], "abl": [122, 123, 124, 128, 245, 258, 260, 266, 270, 271], "detect": [122, 123, 124, 128, 245, 258, 264, 270], "micha": [123, 124, 169, 170, 247, 278], "menten": [123, 124, 169, 170, 247, 278], "set_michaelis_menten_elimin": [123, 165, 170, 182, 245, 266], "michali": 124, "set_mixed_mm_fo_elimin": [124, 266], "set_zero_order_elimin": [128, 165, 169, 170, 245, 266], "get_covariate_baselin": [129, 245], "load": 130, "statment": 131, "mu": [132, 257], "referenc": [132, 266], "theta_1": 132, "eta_1": [132, 257], "mu_1": [132, 257], "\u03bc\u2081": 132, "\u03bc\u2082": 132, "dataset_or_model": [133, 153], "name_pattern": [133, 153], "omitted_": 133, "omiss": 133, "omit": [133, 247, 252, 266], "placehold": [133, 153], "plot": [134, 135, 245, 257, 263, 271], "alt": [134, 135, 243, 257, 263], "chart": [134, 135, 243], "iofv1": 135, "iofv2": 135, "against": [135, 262], "iofv": [135, 221, 243, 245, 263, 265, 277], "scatterplot": 135, "subroutin": [136, 245, 262, 264, 266, 268], "advan1": [136, 264, 266, 268], "trans2": [136, 264, 266, 268], "IF": [136, 245, 262, 264, 266], "gt": [136, 252, 264], "lt": [136, 252, 264], "ptvcl": [136, 183, 264], "ptvv": [136, 264], "ivcl": [136, 243, 257, 264, 266, 268], "ivv": [136, 243, 257, 264, 266], "uncondit": [136, 264], "cwre": [136, 220, 221, 264, 265, 274, 275], "npde": [136, 264], "noappend": [136, 264], "noprint": [136, 264], "onehead": [136, 264], "home": [139, 245, 264], "run1": [139, 140, 209], "mod": [139, 224, 226, 245, 247, 254, 264, 265, 266, 278], "read_model_from_databas": [139, 141, 245], "databas": [139, 140, 141, 224, 225, 226, 228, 229, 230, 232, 237, 242, 245], "read_model_from_str": [139, 140, 245, 266], "lookup": 140, "err": [141, 266], "has_covariate_effect": [143, 245], "unrun": 144, "to_remov": [146, 147, 247], "eta_iov_1_1": [147, 261], "add_lag_tim": [148, 178, 245, 266], "uloq": 149, "736": 149, "add_peripheral_compart": [150, 173, 245, 266], "new_nam": [152, 171], "renam": [152, 245], "clash": [152, 224, 226], "resampl": 153, "stratifi": [153, 247], "sample_s": [153, 247], "resample_": 153, "randomli": [153, 156], "renumb": [153, 247], "upward": 153, "stratif": [153, 247], "determin": [153, 259, 261, 262, 267], "valueerror": 153, "strata": 153, "suppli": [153, 259, 261, 267, 274], "control": [153, 250, 261, 262, 264], "pattern": [153, 262], "samples_per_id": 154, "pool": [154, 259], "iec": 154, "127941": 154, "037273": 154, "065492": 154, "182851": 154, "263323": 154, "265849": 154, "295883": 154, "060346": 154, "012108": 154, "219967": 154, "034279": 154, "040988": 154, "187879": 154, "143184": 154, "088845": 154, "034655": 154, "187779": 154, "014214": 154, "019953": 154, "151151": 154, "sample_parameters_from_covariance_matrix": [154, 156, 245], "sample_parameters_uniformli": [154, 155, 245], "uniform": [154, 155, 156], "force_posdef_sampl": [155, 156, 247], "force_posdef_covmatrix": [155, 247], "mani": [155, 245, 266], "never": [155, 267], "005069": 155, "974989": 155, "204629": 155, "024756": 155, "012088": 155, "012943": 155, "004690": 155, "958431": 155, "233231": 155, "038866": 155, "029000": 155, "012516": 155, "004902": 155, "950778": 155, "128388": 155, "019020": 155, "023866": 155, "013413": 155, "sample_individual_estim": [155, 156, 245], "estiat": [155, 156], "reject": 156, "004878": 156, "908216": 156, "149441": 156, "029179": 156, "025472": 156, "012947": 156, "004828": 156, "014444": 156, "149958": 156, "028853": 156, "027653": 156, "013348": 156, "004347": 156, "053837": 156, "165804": 156, "028465": 156, "026798": 156, "013727": 156, "data_tran": [157, 159, 175, 245, 266], "series_term": 157, "\u00b2": [157, 159], "epsilon_1": [157, 159, 175], "expans": [157, 266], "approxim": [157, 262], "\u03b5\u2090": [157, 159, 266], "set_proportional_error_model": [157, 159, 245, 266], "set_combined_error_model": [157, 175, 245, 266, 275], "epsilon_2": 159, "remove_error_model": [159, 175, 245, 266], "\u03b5\u209a": [159, 175, 266], "set_additive_error_model": [159, 175, 245, 266], "fix_to_log": 161, "dynam": [161, 234, 262], "lambda": [161, 186, 187, 272, 274], "zeta": [161, 272, 274], "emul": 161, "set_bolus_order_absorpt": [164, 176, 181], "list_of_ep": [166, 174], "same_eta": [166, 247], "chosen": [166, 245, 259, 266, 278], "eta_rv1": 166, "set_power_on_ruv": [166, 245, 266, 275], "set_upper_bound": [168, 190], "unconstrain_paramet": [168, 179, 192], "constraint": [168, 179, 183, 190, 192, 245, 255, 271], "clmm": [169, 170, 182, 266], "km": [169, 170, 182, 266], "set_first_order_elimin": [169, 170, 182, 245, 266], "prefer": [172, 262], "peripheral2": 173, "lower_limit": 174, "zero_protect": [174, 175, 245], "autodetect": 174, "protect": [174, 175, 245, 262], "power\u2081": 174, "set_iiv_on_ruv": [174, 245, 266, 275], "225e": 175, "ipredadj": 175, "sequenti": [176, 245, 247, 267, 278], "mdt": [176, 178, 245, 266], "quantil": [177, 243, 245], "time_vari": [177, 274, 275], "keep_depot": [178, 245], "transit1": [178, 266], "transit2": [178, 266], "transit3": [178, 266], "set_lower_bound": [179, 190], "use_thetas_for_error_stdev": [180, 245, 266], "smallest": [182, 254], "simplifi": [183, 245, 246, 252, 255, 271], "plugin": [183, 249, 250, 255, 256, 258, 279], "conf": [183, 249], "comment": [183, 245, 249, 268], "ab": [183, 187, 247, 266], "analyt": 184, "becom": [185, 247, 271], "create_joint_distribut": [185, 245, 266], "list_of_eta": [186, 187, 188], "boxcox": [186, 245], "lambda1": [186, 187, 266], "transform_etas_tdist": [186, 187, 245, 266], "transform_etas_john_drap": [186, 188, 245, 266], "john": [187, 245, 247], "draper": [187, 245, 247], "spelect": 187, "1980": 187, "famili": [187, 262], "journal": [187, 275], "royal": 187, "societi": 187, "190": 187, "197": 187, "doi": [187, 257, 275], "2307": 187, "2986305": 187, "transform_etas_boxcox": [187, 188, 245, 266], "degre": [188, 274], "freedom": [188, 262, 274], "80": [188, 265, 266, 274, 275], "df1": [188, 266], "translat": [189, 245], "hour": [189, 254], "caution": 189, "account": 189, "unfix_paramet": [190, 245, 266], "had": [194, 262], "move_est_close_to_bound": 195, "00469555": 195, "984258": [195, 264, 265], "15892": 195, "0293508": [195, 264], "sd_ep": [196, 266], "set_weighted_error_model": [196, 245, 266], "write": [197, 198, 223, 245, 250, 262, 270, 279], "whose": [197, 262], "suffix": 197, "overwrit": [197, 198], "newdataset": 197, "recalcul": 199, "frem_dir1": 199, "read_result": [199, 208, 245, 278], "model_or_model": 200, "run_tool": [200, 211, 220, 245], "84": [201, 202, 221, 259, 261, 267, 276], "machin": [201, 202, 203, 224, 228, 229, 254, 258, 262], "learn": [201, 202, 203, 258], "threshold": [201, 202, 203, 247, 252], "signal": [201, 202, 263], "raw": [201, 202, 203, 221, 243, 245, 254], "delta": [201, 243, 245, 263], "tell": [201, 203, 262], "predict_influential_outli": [201, 203, 245], "predict_outli": [201, 202, 245], "outlier_cutoff": 202, "influential_cutoff": 202, "singal": [202, 203], "influential_outli": 202, "predict_influential_individu": [202, 203, 245], "simev": [203, 245, 273], "281443": 203, "057392": 203, "119105": 203, "846849": 203, "600540": 203, "014008": 203, "750734": 203, "247175": 203, "117002": 203, "835389": 203, "529582": 203, "035670": 203, "292333": 203, "303278": 203, "565949": 203, "078192": 203, "291295": 203, "466421": 203, "402343": 203, "699996": 203, "567987": 203, "526776": 203, "303918": 203, "177588": 203, "272142": 203, "390000": 203, "775876": 203, "501528": 203, "700951": 203, "352599": 203, "294196": 203, "744014": 203, "215364": [203, 276], "208691": 203, "713130": 203, "300293": 203, "810736": 203, "459877": 203, "675125": 203, "563835": 203, "526945": 203, "449199": 203, "720714": 203, "792248": 203, "860923": 203, "731858": 203, "247131": 203, "894190": 203, "282737": 203, "153398": 203, "200546": 203, "902774": 203, "586427": 203, "183329": 203, "036930": 203, "639868": 203, "765279": 203, "209665": 203, "225693": 203, "errors_allow": [205, 245], "bic_typ": 205, "rounding_error": 205, "maxevals_exceed": 205, "lrt": 205, "denot": [205, 257, 266], "model_1": [205, 257], "model_2": [205, 257], "extern": [206, 250, 254, 255, 266, 270, 271], "create_result": [207, 245, 266], "retrieve_model": [208, 224, 228, 229, 245, 278], "tooldatabas": [209, 225, 230, 234, 237], "modeldatabas": [209, 224, 226, 232], "tooldir_path": 209, "retrieve_final_model": [209, 245], "allometryresult": 210, "resum": [211, 237, 278], "amd": [211, 245, 278], "reult": 211, "search": [211, 212, 216, 245, 247, 252, 261, 271, 278], "runord": [211, 247], "compon": [211, 247, 255, 258, 262, 274], "run_iiv": [211, 245], "try": [212, 247, 252, 271, 280], "sentenc": [212, 252], "compact": [212, 252], "mode": [212, 213, 214, 216, 245, 257, 262], "covsearchresult": 212, "no_add": [213, 216, 245, 259, 267], "iivsearch": [213, 245, 278], "brute_force_no_of_eta": [213, 259], "brute_force_block_structur": [213, 259], "strategi": [213, 216, 245, 259, 267], "add_diagon": [213, 216, 245, 259, 267], "iivsearchresult": 213, "iovsearch": [214, 245, 278], "iovsearchresult": 214, "exhaust": [216, 245], "modelsearchresult": 216, "bin": [217, 274, 280], "attempt": [217, 252, 262], "ruvsearchresult": 217, "arg": 218, "kei": [220, 228, 262, 275], "fit_result": 220, "mathrm": [221, 277], "veebar": 221, "least": [221, 262, 278], "outli": [221, 277], "criteria": [221, 245, 247, 259, 261, 267, 275], "include_all_estimation_step": 222, "runtim": [222, 245], "wasn": 222, "estmat": 222, "586": [222, 263, 265], "276056": [222, 263], "again": [223, 266, 280], "Not": [223, 254, 262], "applic": [223, 237, 262, 271, 278], "file_extens": [224, 226], "nontransactionalmodeldatabas": [224, 229], "local": [224, 225, 226, 228, 229, 230, 232, 250, 259, 262], "store": [224, 225, 226, 228, 229, 230, 232, 245, 268, 278], "modelnam": 224, "overwritten": 224, "recommend": [224, 280], "localmodeldirectorydatabas": 224, "retrieve_fil": [224, 228, 229], "filesystem": [224, 228, 229], "model_nam": [224, 226, 228, 229, 257], "retrieve_local_fil": [224, 228, 229], "destination_path": [224, 228, 229], "retrieve_modelfit_result": [224, 228, 229], "store_local_fil": [224, 225, 228, 229, 230, 232], "new_filenam": 224, "store_metadata": [224, 225, 228, 229], "store_model": [224, 228, 229], "store_modelfit_result": [224, 228, 229], "toolnam": [225, 230, 232, 278], "exist_ok": 225, "read_metadata": 225, "source_path": [225, 230, 232], "store_result": [225, 230, 232], "transactionalmodeldatabas": 226, "subdirectori": [226, 278], "list_model": 226, "snapshot": [226, 228], "context": [226, 228, 262, 271], "transact": [226, 228, 262], "writabl": [226, 228], "timestamp": 227, "log_error": 227, "log_warn": 227, "baseclass": 228, "primari": 228, "center": 228, "around": [228, 248], "belong": [228, 280], "dummi": [229, 230], "anyth": [229, 230, 250, 259, 262], "task_input": 231, "func": 231, "model_databas": 232, "task": [233, 266, 270, 271], "acycl": 233, "graph": [233, 247, 250], "node": [233, 234], "edg": 233, "wf": 234, "unique_nam": 234, "db": 234, "dask": [234, 245, 271], "whatev": [234, 262], "alia": [235, 236], "localdirectorydatabas": [235, 242], "localdirectorytooldatabas": [236, 242, 278], "dispatch": [237, 242, 245, 278], "execut": [237, 245, 262], "executiondispatch": 237, "default_dispatch": 242, "local_dask": [242, 278], "default_model_databas": 242, "default_tool_databas": 242, "psn": [243, 244, 245, 247, 253, 257, 263, 272, 274, 276, 277, 278, 279], "parameter_statist": 243, "bia": [243, 245], "rse": [243, 265], "divid": [243, 247, 268], "005856": 243, "005820": 243, "000038": 243, "000487": 243, "083167": 243, "455435": 243, "443165": 243, "009885": 243, "099305": 243, "068231": 243, "141376": 243, "109797": 243, "030323": 243, "114986": 243, "813337": 243, "195880": 243, "195844": 243, "005646": 243, "046548": 243, "237634": 243, "015546": 243, "015112": 243, "000872": 243, "003434": 243, "220871": 243, "parameter_distribut": 243, "lowest": [243, 257], "highest": [243, 257, 268], "interpol": 243, "fall": [243, 245], "x_0": 243, "x_1": 243, "np": [243, 254, 264], "004762": 243, "004767": 243, "004805": 243, "004974": 243, "005120": 243, "211220": 243, "214364": 243, "242657": 243, "290449": 243, "307106": 243, "000011": 243, "012961": 243, "100104": 243, "100376": 243, "102825": 243, "116900": 243, "125456": 243, "007812": 243, "007857": 243, "008261": 243, "009741": 243, "011116": 243, "97": 243, "006669": 243, "006685": 243, "007429": 243, "007593": 243, "007612": 243, "613679": 243, "646879": 243, "726604": 243, "730551": 243, "730990": 243, "338957": 243, "371005": 243, "536153": 243, "545316": 243, "546334": 243, "281203": 243, "300874": 243, "306057": 243, "306101": 243, "306106": 243, "021677": 243, "023708": 243, "025429": 243, "026581": 243, "026710": 243, "parameter_estimates_histogram": 243, "histogram": [243, 245], "repeatchart": 243, "005298": 243, "30730": 243, "074931": 243, "136423": 243, "011374": 243, "006048": 243, "38692": 243, "029844": 243, "189763": 243, "019143": 243, "005624": 243, "53224": 243, "118806": 243, "219550": 243, "019831": 243, "005771": 243, "40115": 243, "034322": 243, "150905": 243, "012287": 243, "005933": 243, "42119": 243, "074050": 243, "171158": 243, "017394": 243, "005275": 243, "59087": 243, "289793": 243, "248009": 243, "016396": 243, "005847": 243, "44711": 243, "109860": 243, "206296": 243, "016346": 243, "005939": 243, "52688": 243, "040057": 243, "210552": 243, "013631": 243, "98": [243, 257, 259], "005998": 243, "41948": 243, "192046": 243, "175269": 243, "013485": 243, "005479": 243, "43956": 243, "109733": 243, "197253": 243, "011771": 243, "ofv_statist": 243, "bootstrap_bootdata_ofv": 243, "original_bootdata_ofv": 243, "sum": [243, 253], "bootstrap_origdata_ofv": 243, "boostrap": 243, "original_origdata_ofv": 243, "delta_bootdata": 243, "delta_origdata": 243, "722": 243, "220925": 243, "386171": 243, "134966": 243, "245796": 243, "929008": 243, "620085": 243, "523805": 243, "737": 243, "632473": 243, "951710": 243, "024871": 243, "110934": 243, "218525": 243, "629078": 243, "737746": 243, "ofv_distribut": 243, "parameter_distriut": 243, "601": 243, "007583": 243, "602": 243, "266529": 243, "613": 243, "597036": 243, "641": 243, "950291": 243, "621": 243, "273905": 243, "622": 243, "073513": 243, "629": 243, "269987": 243, "806391": 243, "915431": 243, "955989": 243, "731": 243, "321004": 243, "879050": 243, "021463": 243, "059207": 243, "398901": 243, "299364": 243, "020705": 243, "061262": 243, "426277": 243, "984323": 243, "879224": 243, "788": 243, "101562": 243, "803": 243, "869362": 243, "661": 243, "714778": 243, "800": [243, 265], "121734": 243, "810": [243, 265], "417314": 243, "732": 243, "165644": 243, "757": 243, "877092": 243, "369737": 243, "671690": 243, "375800": 243, "162811": 243, "270917": 243, "982365": 243, "475010": 243, "828": 243, "178008": 243, "839": 243, "691272": 243, "840": 243, "970524": 243, "836": 243, "395339": 243, "846": 243, "981350": 243, "848": 243, "157573": 243, "859": 243, "964343": 243, "893": [243, 259], "228440": 243, "896": [243, 257], "924451": 243, "443675": 243, "246668": 243, "558111": 243, "129": 243, "069616": 243, "162": 243, "333713": 243, "166": 243, "029724": 243, "ofv_plot": 243, "layerchart": [243, 263], "dofv_quantiles_plot": 243, "show": [243, 247, 257, 262, 274, 277], "metric": [243, 244, 265], "chi": 243, "squar": 243, "907310": 243, "911844": 243, "750": 243, "388987": 243, "670": 243, "684132": 243, "675": 243, "846450": 243, "738": 243, "099607": 243, "248779": 243, "734": 243, "876739": 243, "733": [243, 275], "182039": 243, "626": 243, "440820": 243, "637": 243, "427606": 243, "748": 243, "285576": 243, "239599": 243, "025253": 243, "519551": 243, "781": 243, "380852": 243, "793": 243, "303365": 243, "994494": 243, "754": 243, "666705": 243, "688168": 243, "664": 243, "288159": 243, "671": 243, "883942": 243, "255718": 243, "974215": 243, "332959": 243, "052283": 243, "689": 243, "940217": 243, "693": 243, "963948": 243, "735": 243, "763734": 243, "004534": 243, "494261": 243, "162318": 243, "204881": 243, "627961": 243, "287312": 243, "986786": 243, "390849": 243, "785654": 243, "624824": 243, "922512": 243, "099768": 243, "595783": 243, "360991": 243, "358744": 243, "157557": 243, "023731": 243, "869007": 243, "372000e": 243, "000015": 243, "000003": 243, "098000e": 243, "462220e": 243, "009862": 243, "002316": 243, "002320": 243, "320640e": 243, "531300e": 243, "013222": 243, "000146": 243, "961337e": 243, "572900e": 243, "002167": 243, "014550e": 243, "000033": 243, "000196": 243, "178980e": 243, "included_individu": 243, "case_result": [244, 245], "cook_scor": 244, "jackknife_cook_scor": 244, "delta_ofv": 244, "dofv_influenti": 244, "130159": 244, "121389": 244, "015207": 244, "348263": 244, "336159": 244, "144045": 244, "192433": 244, "181125": 244, "031030": 244, "163095": 244, "155901": 244, "026142": 244, "422651": 244, "404915": 244, "190732": 244, "374312": 244, "343311": 244, "097063": 244, "169869": 244, "163883": 244, "026223": 244, "263865": 244, "254943": 244, "058123": 244, "757098": 244, "673587": 244, "477910": 244, "150161": 244, "144191": 244, "023623": 244, "361646": 244, "352901": 244, "217902": 244, "255533": 244, "215005": 244, "035375": 244, "191848": 244, "187019": 244, "038199": 244, "376365": 244, "337975": 244, "096680": 244, "142806": 244, "137340": 244, "014709": 244, "193393": 244, "179744": 244, "031711": 244, "131746": 244, "122842": 244, "020637": 244, "176644": 244, "932149": 244, "036787": 244, "128197": 244, "120498": 244, "019030": 244, "141093": 244, "138101": 244, "029021": 244, "176582": 244, "153583": 244, "035291": 244, "104396": 244, "100064": 244, "015499": 244, "552071": 244, "501458": 244, "278595": 244, "242334": 244, "217068": 244, "047627": 244, "792099": 244, "715951": 244, "798775": 244, "135247": 244, "133493": 244, "021356": 244, "442779": 244, "424958": 244, "125763": 244, "132903": 244, "127188": 244, "010157": 244, "081122": 244, "076790": 244, "005443": 244, "183624": 244, "168501": 244, "027707": 244, "113959": 244, "111168": 244, "012363": 244, "532749": 244, "515747": 244, "325048": 244, "094133": 244, "091212": 244, "014747": 244, "447798": 244, "406737": 244, "194457": 244, "364978": 244, "352973": 244, "124295": 244, "270838": 244, "252922": 244, "063675": 244, "129553": 244, "121963": 244, "014043": 244, "254914": 244, "243250": 244, "064025": 244, "207529": 244, "194633": 244, "046887": 244, "239182": 244, "218112": 244, "044252": 244, "181986": 244, "173826": 244, "020285": 244, "604112": 244, "584208": 244, "604211": 244, "407717": 244, "369648": 244, "154161": 244, "215722": 244, "196744": 244, "043742": 244, "214167": 244, "200091": 244, "036238": 244, "094284": 244, "089002": 244, "007506": 244, "074174": 244, "072365": 244, "007535": 244, "743323": 244, "717468": 244, "654313": 244, "153971": 244, "147360": 244, "014502": 244, "284706": 244, "278460": 244, "072960": 244, "331587": 244, "309374": 244, "116933": 244, "447965": 244, "421612": 244, "129593": 244, "184872": 244, "175196": 244, "029896": 244, "430382": 244, "415446": 244, "141657": 244, "409307": 244, "369197": 244, "189729": 244, "084764": 244, "079718": 244, "007416": 244, "107600": 244, "103145": 244, "013947": 244, "154672": 244, "150761": 244, "028236": 244, "155632": 244, "150461": 244, "034848": 244, "covariance_ratio": 244, "skipped_individu": 244, "050505": 244, "963884": 244, "058896": 244, "087449": 244, "985403": 244, "029066": 244, "101636": 244, "086424": 244, "017369": 244, "094799": 244, "849310": 244, "121111": 244, "049151": 244, "096456": 244, "070088": 244, "040691": 244, "065881": 244, "606158": 244, "205007": 244, "099191": 244, "143483": 244, "050691": 244, "086007": 244, "156273": 244, "919336": 244, "056714": 244, "999221": 244, "029600": 244, "034017": 244, "108785": 244, "038495": 244, "954054": 244, "053618": 244, "096334": 244, "943556": 244, "125423": 244, "086167": 244, "145822": 244, "113939": 244, "114399": 244, "057664": 244, "788608": 244, "063991": 244, "115559": 244, "160549": 244, "034685": 244, "035618": 244, "714976": 244, "092664": 244, "089158": 244, "054565": 244, "002555": 244, "032356": 244, "003056": 244, "936719": 244, "122771": 244, "078285": 244, "096841": 244, "068821": 244, "sqrt": [244, 266], "p_i": 244, "p_": 244, "orig": 244, "operatornam": [244, 257, 277], "sum_": 244, "overlin": [244, 257], "_j": 244, "_k": [244, 257], "det": 244, "Then": [244, 257], "ofv_": 244, "iofv_": 244, "iofv_k": 244, "ofv_k": 244, "case_column": 244, "rikard": [244, 246, 251, 271, 275], "nordgren": [244, 246, 251, 271, 275], "sebastian": [244, 246, 251], "ueckert": [244, 246, 251], "svetlana": 244, "freiberga": 244, "karlsson": [244, 246, 251, 257, 275], "faster": [244, 245, 271], "2018": [244, 262, 275], "abstr": [244, 246], "8683": 244, "www": [244, 246, 262], "meet": [244, 246, 248, 262, 271], "much": [245, 271], "pars": [245, 260, 268, 270, 271, 278], "phi": [245, 250, 278], "de": 245, "correctli": 245, "ncomp": 245, "deidentify_data": 245, "cli": [245, 260], "anonym": 245, "dadt": 245, "setter": 245, "multivari": 245, "1293": 245, "lst": [245, 278], "1302": [245, 252], "1303": [245, 267], "last20": 245, "run_modelsearch": [245, 267, 278], "run_iovsearch": [245, 261], "run_ruvsearch": [245, 275], "run_covsearch": [245, 252, 280], "run_iivsearch": [245, 259], "nomem": 245, "rh": 245, "1180": 245, "887": [245, 259, 261], "1162": 245, "1032": 245, "add_covariate_effect": [245, 252, 266], "1004": 245, "remove_covariate_effect": [245, 252], "1181": 245, "9fd701521": 245, "best_model": 245, "final_model_nam": 245, "a7fbcbfe2": 245, "update_initial_individual_estim": 245, "modelsearch_candidate1": [245, 267, 278], "modifi": [245, 260, 262, 269], "wors": 245, "calculate_b": [245, 259, 261, 267], "calculate_a": 245, "check_parameters_near_bound": 245, "check_high_correl": 245, "plot_iofv_vs_iofv": 245, "plot_individual_predict": 245, "evaluate_express": 245, "evaluate_weighted_residu": 245, "parameter_esimt": 245, "calculate_pk_parameters_statist": 245, "update_init": [245, 264, 266], "predict_": 245, "print_fit_summari": 245, "write_result": 245, "rank_model": 245, "speedup": 245, "297a64041": 245, "individual_ofv": [245, 265], "1101": 245, "57fc4fee8": 245, "fd417aaf": 245, "convert_model": 245, "d5458e36": 245, "keyerror": 245, "localmodeldirectori": 245, "filenotfounderror": 245, "1193bd39": 245, "unus": 245, "submodul": 245, "bb96a13c": 245, "update_paramet": 245, "0ca786c5": 245, "dd056da3": 245, "915bc9c7": 245, "get_config_path": 245, "disabl": [245, 248], "82b32278": 245, "unwant": 245, "debug": 245, "1131a610": 245, "ebfafb45": 245, "1173": 245, "fb070ee1": 245, "1049": [245, 259], "pyreadr": 245, "easier": [245, 255, 264], "instal": [245, 247, 262, 279], "mac": [245, 250], "m1": [245, 276], "get_evid": 245, "get_cmt": 245, "resmod": [245, 273], "916": 245, "strict": [245, 262], "round": [245, 254], "1055": 245, "attibut": 245, "1092": 245, "exlud": 245, "unreport": 245, "1076": 245, "988": 245, "1c65359": 245, "subtool": [245, 278], "42fe72f": 245, "1001": 245, "lead": [245, 266, 280], "uneven": 245, "branch": [245, 250], "reduc": [245, 276], "stepwis": [245, 252, 276, 278], "694": 245, "properli": 245, "708": 245, "790": 245, "974": 245, "produc": [245, 262], "1017": 245, "989": 245, "71f4cf23": 245, "dsl": 245, "932": 245, "973": 245, "cfc09bad": 245, "975": 245, "917": 245, "977": 245, "908": 245, "fd564168": 245, "088a046a": 245, "c76fa476": 245, "430f1d2e": 245, "make_declar": 245, "greekify_model": 245, "estmethod": 245, "find_clearance_paramet": 245, "find_volume_paramet": 245, "vp": 245, "newer": 245, "820": [245, 265], "seprat": 245, "sporad": 245, "race": [245, 248], "caus": [245, 262, 271, 280], "lazi": 245, "duplic": 245, "745": 245, "1st": 245, "3rd": 245, "bad": 245, "710": 245, "configur": [245, 268, 279], "licens": 245, "advanx": 245, "add_time_after_dos": [245, 254], "intercompartment": 245, "695": 245, "defob": 245, "choos": [245, 259, 262, 267, 268, 269], "gl": 245, "solve_ode_system": 245, "meta": 245, "switch": [245, 271], "read_dataset_from_datainfo": 245, "addl": 245, "linalgerror": 245, "656": [245, 259], "tflite": [245, 258], "649": 245, "654": 245, "expand_additional_dos": 245, "better": [245, 267, 275], "modelsyntaxerror": 245, "588": 245, "625": [245, 259], "578": 245, "vc1": 245, "577": 245, "632": 245, "636": 245, "boundari": [245, 261, 267], "590": 245, "gl_real": 245, "sampled_iofv": [245, 277], "version": [245, 247, 258, 262, 278], "subblock": 245, "check_dataset": 245, "tensorflow": 245, "modelbuild": 245, "add_mdt_iiv": 245, "three": [245, 255, 262, 268], "add_eta": [245, 274], "etas_as_fullblock": 245, "iiv_as_fullblock": 245, "add_mdt_eta": 245, "remove_loq_data": 245, "wip": 245, "don": 245, "130": [245, 252], "create_report": 245, "528": 245, "457": 245, "translate_nmtran_tim": 245, "print_model_cod": [245, 258, 264], "has_michaelis_menten_elimin": 245, "has_zero_order_elimin": 245, "has_first_order_elimin": 245, "has_mixed_mm_fo_elimin": 245, "2c": 245, "1c": 245, "timevari": 245, "create_symbol": 245, "remove_unused_parameters_and_rv": 245, "mu_reference_model": 245, "simplify_express": 245, "bump_model_numb": 245, "regress": 245, "get_doseid": [245, 254], "get_unit_of": 245, "get_concentration_parameters_from_data": [245, 254], "write_csv": 245, "resample_data": 245, "omit_data": 245, "get_observation_express": 245, "get_individu": 245, "get_dos": [245, 254], "list_time_varying_covari": 245, "estmeth": 245, "optim": [245, 255, 260, 264, 271], "incorrect": 245, "add_allometri": 245, "insert_aft": 245, "modelstat": 245, "power_on_ruv": 245, "estimationmethod": 245, "guard": 245, "avoid": [245, 255, 262], "cdd": 245, "bipp": [245, 247], "frem": [245, 264, 273, 274], "5000": 245, "shift": 245, "write_model": [245, 264, 266, 268], "header": 245, "nest": [245, 280], "update_sourc": [245, 268], "due": [245, 275], "set_dtbs_error_model": [245, 266], "dure": [245, 280], "logger": 245, "parametr": 245, "broken": 245, "parallel": [245, 278], "generate_model_cod": [245, 264], "print_model_symbol": 245, "get_observ": [245, 254], "parameter_sampl": 245, "api": [245, 255, 260, 266, 270, 271, 279], "improv": [245, 274], "eta_shrinkag": 245, "summarize_model": 245, "window": [245, 250, 258, 262], "rstudio": [245, 271], "zero_order_absorpt": 245, "first_order_absorpt": 245, "bolus_absorpt": 245, "set_bolus_absorpt": [245, 266], "seq_zo_fo_absorpt": 245, "set_seq_zo_fo_absorpt": [245, 266], "have_zero_order_absorpt": 245, "has_zero_order_absorpt": 245, "individual_shrinkag": 245, "individual_parameter_statist": 245, "pk_paramet": 245, "create_rv_block": 245, "split_rv_block": 245, "nind": 245, "nob": 245, "nobsi": 245, "remove_error": 245, "additive_error": 245, "proportional_error": 245, "combined_error": 245, "has_additive_error": 245, "has_proportional_error": 245, "has_combined_error": 245, "theta_as_stdev": 245, "set_dtbs_error": 245, "tdist": [245, 272], "john_drap": 245, "add_paramet": 245, "add_individual_paramet": [245, 266], "first_order_elimin": 245, "zero_order_elimin": 245, "michaelis_menten_elimin": 245, "mixed_mm_fo_elimin": 245, "revert": 245, "thread": [245, 248], "site": 245, "crossval": [245, 273], "qa": [245, 273], "plain": [245, 249, 250], "sdcorr": 245, "data_transform": [245, 266], "evalut": 245, "bootstrap": [245, 273], "dependent_variable_symbol": 245, "releas": [245, 262, 280], "claus": 245, "rework": 245, "interfac": [245, 255, 258, 260, 262, 264, 266, 271, 279, 280], "com": 245, "stdin": 245, "123": [245, 252, 259, 261, 265, 267, 275], "clearer": 245, "prioriti": [245, 268], "aggregatedmodelfitresult": 245, "priorit": [245, 268], "abbr": [245, 249, 268], "half": [245, 272, 274], "life": [245, 272, 274], "set_nam": 245, "copy_model": [245, 266, 280], "parameter_init": 245, "base_parameter_chang": [245, 257], "parameter_vari": [245, 257, 274], "coeffici": 245, "frem_result": 245, "simevalresult": 245, "nonfixed_init": 245, "parameterset": 245, "migrat": 245, "github": [245, 250, 258, 260, 271, 280], "action": [245, 247, 248, 250, 262, 271], "integr": [245, 247, 271], "columntyp": 245, "to_base_model": 245, "comined_mm_fo_elimin": 245, "absorption_r": 245, "pretti": 245, "qaresult": 245, "nmtranparseerror": 245, "error_model": 245, "bootstrapresult": 245, "pharmpyconfigpath": [245, 249], "environ": [245, 248, 279, 280], "linearizeresult": 245, "label": 245, "sometim": 245, "wrong": 245, "reset_indic": 245, "multiindic": 245, "functionsadd_lag_tim": 245, "yaml": 245, "view": [245, 262, 276], "assumpt": [245, 262], "0th": [245, 247], "parser": [245, 271], "individul": 245, "extend": [245, 262, 274, 276], "postprocess": [245, 273], "librari": [245, 258, 260, 262, 271, 280], "stella": [246, 251, 271], "belin": [246, 251, 271], "gunnar": [246, 251], "yngman": [246, 251, 257], "simon": [246, 251], "carter": [246, 251], "buatoi": [246, 251], "jo\u00e3o": [246, 251], "abrant": [246, 251], "andrew": [246, 251], "hooker": [246, 251], "assemblerr": 246, "novel": 246, "process": [246, 275], "2021": [246, 257], "9656": 246, "subcommand": 247, "top": [247, 254, 278], "often": [247, 250, 264, 276], "help": [247, 248, 252, 271, 278, 280], "verb": 247, "particular": [247, 248, 250, 254, 262, 263], "welcom": [247, 248, 250, 262], "usag": 247, "exit": 247, "program": [247, 248, 258, 262], "pheno_r": [247, 254, 264, 265], "prettyprint": 247, "output_fil": 247, "idcol": 247, "datecol": 247, "match": 247, "pager": 247, "stdout": [247, 278], "datasetsmultipl": 247, "1th": 247, "quot": 247, "comb": 247, "elimini": 247, "propot": 247, "error_typ": 247, "givenbi": 247, "cov_sampl": 247, "posdef": 247, "non_fix": 247, "input_path": 247, "particip": 248, "project": [248, 249, 250, 260, 262], "made": [248, 262, 264], "member": 248, "globe": 248, "divers": 248, "skill": [248, 271], "person": [248, 262], "experi": 248, "growth": 248, "everyon": [248, 250, 262], "guidelin": 248, "insid": [248, 262], "goal": 248, "inclus": [248, 262, 274], "grow": 248, "pledg": 248, "treat": [248, 250, 262], "peopl": 248, "harass": 248, "bulli": 248, "regardless": [248, 262, 264], "sexual": 248, "orient": 248, "gender": 248, "ident": 248, "appear": [248, 280], "nation": 248, "ethnic": 248, "religion": 248, "imageri": 248, "sexist": 248, "racist": 248, "exclusionari": 248, "joke": 248, "acknowledg": [248, 262], "citat": 248, "request": [248, 250], "author": [248, 262], "own": [248, 249, 255, 262, 264], "cite": 248, "those": [248, 262, 266, 278], "realiz": 248, "varieti": [248, 252], "opinion": 248, "background": 248, "serv": [248, 262, 271], "enrich": 248, "discuss": 248, "pro": 248, "con": 248, "technologi": 248, "proactiv": 248, "ensur": [248, 262], "heard": 248, "feel": [248, 271], "confid": 248, "freeli": 248, "question": 248, "answer": 248, "respectfulli": 248, "pai": 248, "attent": 248, "feedback": 248, "forum": 248, "especi": 248, "contribut": [248, 260, 262], "conscienti": 248, "percept": 248, "wider": 248, "respond": 248, "strive": 248, "behavior": 248, "encourag": [248, 250, 255, 260], "product": [248, 252, 262], "debat": 248, "disagr": 248, "entir": [248, 250, 262, 278], "silent": 248, "violat": [248, 262], "contact": [248, 262], "talk": 248, "privat": [248, 252, 262], "situat": 248, "onlin": 248, "offlin": 248, "mail": [248, 262], "social": 248, "media": 248, "confer": 248, "associ": [248, 261, 262], "adapt": [248, 262, 271], "astropi": 248, "appdir": 249, "your": [249, 250, 258, 260, 262, 266, 268, 278, 280], "web": 249, "pypi": [249, 250, 258], "ini": 249, "fallback": 249, "pharmpyconfigfil": 249, "bug": 250, "appreci": 250, "suggest": [250, 260], "suitabl": [250, 271], "student": [250, 271], "intern": [250, 264, 266, 268, 271, 280], "commun": [250, 262], "aspir": 250, "conduct": [250, 267], "foster": 250, "linux": [250, 258], "maco": [250, 258], "ll": 250, "badg": 250, "pip": [250, 258], "python3": 250, "pip3": 250, "guid": 250, "former": 250, "ubuntu": 250, "apt": 250, "url": [250, 258], "render": [250, 262, 271], "On": [250, 271], "sudo": 250, "brew": 250, "unnecessari": [250, 262], "thing": [250, 262], "instruct": 250, "black": 250, "formatt": 250, "flake8": 250, "linter": 250, "isort": 250, "lint": 250, "reformat": 250, "py39": 250, "test_paramet": 250, "py": [250, 258], "test_get_theta": 250, "apart": 250, "suit": 250, "purpos": [250, 262], "complex": [250, 258, 260], "test_modelsearch": 250, "test_summary_individu": 250, "pull": 250, "manag": 250, "contributor": [250, 262], "emploi": 250, "commit": [250, 262], "push": 250, "name_of_branch": 250, "deploy": 250, "setup": 250, "trigger": [250, 264], "tag": 250, "changelog": 250, "bump": 250, "semant": 250, "bumpvers": 250, "cfg": 250, "sh": 250, "patch": 250, "minor": 250, "major": [250, 262], "copyright": 250, "necessari": [250, 262, 280], "coi": 250, "stream": [250, 264], "verbatim": [250, 262], "farmaci": 251, "uu": 251, "kajsa": 251, "harl": 251, "zhe": [251, 271], "huang": [251, 271], "aurelien": 251, "oom": 251, "piyanan": 251, "assawasuwannakit": 251, "xiaomei": 251, "chen": 251, "alzahra": 251, "hamdan": 251, "osama": 251, "qutishat": 251, "shijun": 251, "wang": 251, "tianwu": 251, "yang": 251, "warm": 251, "thank": 251, "sponsor": 251, "hoffman": 251, "la": 251, "roch": 251, "ltd": 251, "pharmetheu": 251, "uppsala": [251, 260], "univers": [251, 260], "inter": [252, 259], "five": 252, "third": [252, 255, 262], "fourth": 252, "cartesian": 252, "manual": [252, 254, 278], "rewritten": 252, "notic": [252, 262], "semicolon": 252, "mox2": [252, 259, 261, 267, 278], "418814": 252, "139": 252, "125102": 252, "138": 252, "135134": 252, "927208": 252, "485622": 252, "937252": 252, "780611": 252, "mo": [252, 257], "504543": 252, "90": 252, "597508": 252, "87": 252, "790910": 252, "806421": 252, "62": [252, 272], "737810": 252, "195653": 252, "315057": 252, "651626": 252, "814832": 252, "978215": 252, "056538": 252, "732689": 252, "062682": 252, "061671": 252, "742325": 252, "1436": 252, "605574": 252, "1431": 252, "311862": 252, "1430": 252, "321894": 252, "1425": 252, "113968": 252, "1424": 252, "672383": 252, "124012": 252, "1422": 252, "967372": 252, "1415": 252, "691304": 252, "1382": 252, "784268": 252, "1379": 252, "977671": 252, "1364": [252, 259], "993181": 252, "1354": 252, "924571": 252, "382413": 252, "1346": 252, "501817": 252, "1335": 252, "838386": 252, "1334": 252, "001593": 252, "1332": 252, "164976": 252, "1313": [252, 267], "243298": 252, "1312": 252, "919450": 252, "249442": 252, "248431": 252, "929085": 252, "1292": [252, 259, 261, 267], "186761": [252, 259, 261, 267], "1414": 252, "1386": 252, "787242": 252, "1409": 252, "1381": 252, "493530": 252, "1408": 252, "1380": 252, "503563": 252, "1405": [252, 259, 261, 267, 275], "586096": 252, "1404": [252, 259, 261, 267, 275], "144510": 252, "1378": [252, 259], "596140": 252, "1402": [252, 261], "1377": 252, "439499": 252, "1397": 252, "1374": 252, "453891": 252, "1341": 252, "546855": 252, "1361": 252, "1338": 252, "740258": 252, "1323": 252, "755768": 252, "1336": 252, "687158": 252, "145000": 252, "1330": 252, "1309": 252, "554864": 252, "1319": 252, "1298": 252, "891433": 252, "1318": 252, "1297": 252, "054639": 252, "1316": 252, "1295": [252, 267], "218022": 252, "1276": 252, "296345": 252, "1296": 252, "1275": 252, "972496": 252, "302489": 252, "301478": 252, "1286": 252, "1265": [252, 261], "982132": 252, "1278": [252, 259, 261, 267], "1259": [252, 259, 261, 267], "530267": [252, 259, 261, 267], "550520": 252, "1328": 252, "1305": [252, 267], "313107": 252, "1350": 252, "224247": 252, "1308": 252, "986835": 252, "1416": 252, "503401": 252, "1396": 252, "1370": 252, "975529": 252, "1417": 252, "275090": 252, "1371": 252, "747218": 252, "1418": 252, "475139": 252, "1398": 252, "1372": 252, "947267": 252, "1426": 252, "509140": 252, "1376": 252, "690808": 252, "430350": 252, "612019": 252, "1427": 252, "910516": 252, "092185": 252, "1437": 252, "275565": 252, "1413": 252, "1383": 252, "166774": 252, "631837": 252, "1412": 252, "523046": 252, "957318": 252, "848526": 252, "805990": 252, "697199": 252, "1438": 252, "187223": 252, "1384": 252, "078432": 252, "1363": 252, "424478": 252, "1343": [252, 259], "1317": 252, "896606": 252, "1388": 252, "878574": 252, "1368": 252, "350702": 252, "113956": 252, "586084": 252, "ruv_prop_estim": [252, 275], "9960": 252, "187601": 252, "7980": 252, "185142": 252, "6117": 252, "180085": 252, "5252": 252, "181726": 252, "7337": 252, "184103": 252, "4092": 252, "180301": 252, "4997": 252, "179325": 252, "4482": 252, "181272": 252, "4189": 252, "189053": 252, "5013": 252, "188003": 252, "6103": 252, "187672": 252, "8728": 252, "190712": 252, "3161": 252, "195330": 252, "8757": 252, "192852": 252, "3323": 252, "191425": 252, "7087": 252, "192934": 252, "4824": 252, "199549": 252, "9807": 252, "192557": 252, "3823": 252, "198783": 252, "1536": 252, "193411": 252, "9763": 252, "195608": 252, "2632": 252, "197452": 252, "5328": [252, 259, 261, 267], "209972": [252, 259, 261, 267], "8499": 252, "192681": 252, "1238": 252, "194408": 252, "5391": 252, "182237": 252, "7059": 252, "182092": 252, "4373": 252, "181626": 252, "7842": 252, "182065": 252, "5121": 252, "181752": 252, "4741": 252, "180703": 252, "9846": 252, "187508": 252, "0276": 252, "187684": 252, "9787": 252, "186766": 252, "9897": 252, "187557": 252, "9709": 252, "186978": 252, "8036": 252, "196301": 252, "9160": 252, "192686": 252, "184102": 252, "5256": 252, "181734": 252, "pop_clage_estim": 252, "pop_clsex_estim": 252, "pop_clwt_estim": 252, "739428": 252, "007466": 252, "724484": 252, "765510": 252, "784040": 252, "788914": 252, "849555": 252, "808269": 252, "834534": 252, "577983": 252, "386872": 252, "414099": 252, "365025": 252, "293158": 252, "004963": 252, "382904": 252, "010536": 252, "005338": 252, "000660": 252, "387683": 252, "342000": 252, "002802": 252, "812282": 252, "743874": 252, "002654": 252, "856355": 252, "712068": 252, "002342": 252, "796171": 252, "805106": 252, "002752": 252, "726541": 252, "730115": 252, "000284": 252, "737330": 252, "746890": 252, "747449": 252, "373211": 252, "788917": 252, "784186": 252, "034933": 252, "013481": 252, "037359": 252, "227740": 252, "022746": 252, "049832": 252, "019706": 252, "059279": 252, "517590": 252, "406124": 252, "258315": 252, "008865": 252, "008788": 252, "242742": 252, "006337": 252, "013997": 252, "809357": 252, "007942": 252, "746753": 252, "009662": 252, "772697": 252, "007715": 252, "756337": 252, "008384": 252, "011954": 252, "133780": 252, "943702": 252, "073220": 252, "086860": 252, "013679": 252, "953372": 252, "013320": 252, "014651": 252, "008482": 252, "115170": 252, "065250": 252, "942578": 252, "723985": 252, "008686": 252, "705263": 252, "007851": 252, "765500": 252, "006172": 252, "011627": 252, "800803": 252, "008297": 252, "013862": 252, "800449": 252, "008143": 252, "012912": 252, "808946": 252, "007874": 252, "014022": 252, "741105": 252, "007820": 252, "013734": 252, "793357": 252, "007122": 252, "015534": 252, "596488": 252, "008073": 252, "012324": 252, "012251": 252, "133790": 252, "756260": 252, "008381": 252, "110": [252, 259, 261, 267, 275], "113": [252, 259, 261, 267, 275], "121": [252, 259, 261, 267, 275], "1403": [252, 259, 261, 267, 275], "1406": [252, 259, 261, 267, 275], "1407": [252, 259, 261, 267, 275], "757118": [252, 259, 261, 267], "659694": [252, 259, 261, 267], "302503": [252, 259, 261, 267], "464327": [252, 259, 261, 267], "034898": [252, 259, 261, 267], "167558": 252, "086188": 252, "238268": 252, "450755": 252, "456701": 252, "573801": 252, "385316": 252, "317492": 252, "252706": 252, "975049": 252, "2920": 252, "reduced_ofv": [252, 276], "extended_ofv": [252, 276], "ofv_drop": [252, 276], "extended_st": [252, 276], "048703": 252, "880596": 252, "422754": 252, "282451": 252, "491364": 252, "722430": 252, "69": 252, "189487": 252, "475854": 252, "812097": 252, "583786": 252, "276068": 252, "783835": 252, "432709": 252, "981079": 252, "422665": 252, "197894": 252, "395171": 252, "207926": 252, "316382": 252, "796548": 252, "491606": 252, "669991": 252, "026263": 252, "351743": 252, "200416": 252, "581649": 252, "181096": 252, "727000": 252, "933192": 252, "491618": 252, "delta_df": [252, 276], "pvalu": [252, 276], "goal_pvalu": [252, 276], "047127e": 252, "03": [252, 272, 274, 276], "710000e": 252, "568110e": 252, "494490e": 252, "498453e": 252, "459287e": 252, "280678e": 252, "923500e": 252, "003390e": 252, "253363e": 252, "996801e": 252, "705542e": 252, "706940e": 252, "706759e": 252, "368618e": 252, "02": [252, 274, 276, 278], "944356e": 252, "215423e": 252, "675009e": 252, "082162e": 252, "987935e": 252, "521990e": 252, "685310e": 252, "727896e": 252, "143199e": 252, "279024e": 252, "375337e": 252, "248414e": 252, "512424e": 252, "446750e": 252, "991122e": 252, "130547e": 252, "712593e": 252, "531279e": 252, "732385e": 252, "085233e": 252, "is_backward": [252, 276], "extended_signific": [252, 276], "folder": 252, "t3": 252, "rms6r0p90qs2_8fd7g2p8f": 252, "covariate_effect": [252, 257, 274, 276], "ofv_summari": [252, 276], "candidate_summari": [252, 276], "n_test": [252, 276], "n_ok": [252, 276], "n_localmin": [252, 276], "n_fail": [252, 276], "stepinclud": [252, 276], "estimation_ofv": 253, "prediction_ofv": 253, "545": 253, "863847": 253, "186": 253, "192727": 253, "512": 253, "953185": 253, "694832": 253, "547": 253, "843632": 253, "184": [253, 276], "022535": 253, "579": 253, "109635": 253, "596550": 253, "prediction_ofv_sum": 253, "747": 253, "506644594254": 253, "read_raw_dataset": 254, "arrai": [254, 264, 278], "get_id": 254, "largest": 254, "ser": 254, "di": [254, 280], "role": 254, "identif": [254, 275], "mostli": [254, 255, 271], "steven": 254, "typologi": 254, "en": [254, 255, 257], "wikipedia": 254, "wiki": [254, 262], "level_of_measur": 254, "annot": 254, "kg": 254, "mg": 254, "l": [254, 280], "low": [254, 264, 266], "understand": [254, 270], "accompani": [254, 262], "And": [254, 262, 278], "map": 254, "under": [255, 260, 262, 276, 280], "construct": [255, 270], "complet": 255, "four": 255, "distinct": 255, "layer": [255, 267, 269], "worklow": 255, "higher": [255, 260, 264, 266, 277], "coupl": 255, "mathemat": [255, 264, 271], "concid": 255, "live": 255, "namespac": 255, "mutablesequ": 255, "scalar": [255, 264], "element": [255, 265], "concern": [255, 262], "expos": 255, "numpydoc": 255, "readthedoc": 255, "ecosystem": 255, "thu": [255, 259, 262, 264, 278], "wrap": 255, "share": [255, 262, 269], "leak": 255, "parti": [255, 262], "break": 255, "creation": 257, "model_3b": 257, "u": [257, 266], "eta_i": 257, "leq": 257, "n_": 257, "par": [257, 264], "eta_k": 257, "bmatrix": 257, "vdot": 257, "eta_": 257, "sim": [257, 264, 266, 277], "mathcal": [257, 264, 266], "mu_2": 257, "omega_": [257, 266], "n1": 257, "n2": 257, "ddot": 257, "latter": 257, "partit": 257, "5th": 257, "630859": 257, "868770": 257, "176754": 257, "95th": 257, "925602": 257, "082310": 257, "244607": 257, "569077": 257, "600360": 257, "632538": 257, "532478": 257, "824355": 257, "138312": 257, "577861": 257, "761430": 257, "991915": 257, "003863": 257, "148763": 257, "297579": 257, "600771": 257, "631260": 257, "661025": 257, "315965": 257, "549669": 257, "811532": 257, "margin": 257, "ij": 257, "ijk": 257, "omega_k": 257, "sigma_1": 257, "sigma_2": 257, "sigma_i": 257, "turn": [257, 264], "percent": 257, "red": 257, "figur": 257, "vconcatchart": 257, "sigma_": 257, "020503": 257, "628814": 257, "009309": 257, "544459": 257, "026950": 257, "613127": 257, "050396": 257, "551581": 257, "individual_effect": 257, "913307": 257, "899565": 257, "923297": 257, "939015": 257, "926632": 257, "948404": 257, "933506": 257, "894967": 257, "970755": 257, "010192": 257, "973823": 257, "047109": 257, "992728": 257, "986142": 257, "999404": 257, "361911": 257, "322628": 257, "418737": 257, "894772": 257, "868658": 257, "917333": 257, "947797": 257, "923656": 257, "969732": 257, "771958": 257, "748072": 257, "790423": 257, "790120": 257, "768277": 257, "806911": 257, "percentu": 257, "unexplained_vari": 257, "sd_observ": 257, "sd_5th": 257, "sd_95th": 257, "469535": 257, "359934": 257, "547612": 257, "465490": 257, "352335": 257, "538174": 257, "165502": 257, "141580": 257, "190726": 257, "159149": 257, "134989": 257, "183613": 257, "420471": 257, "327104": 257, "490419": 257, "404440": 257, "306148": 257, "467046": 257, "143317": 257, "122348": 257, "166012": 257, "141826": 257, "120282": 257, "163610": 257, "percetil": 257, "025328": 257, "022571": 257, "020115": 257, "216681": 257, "188254": 257, "163572": 257, "027391": 257, "021634": 257, "020540": 257, "intermedi": 257, "model_4": [257, 264], "parameter_inits_and_estim": 257, "model_3": 257, "115195": 257, "007066": 257, "209016": 257, "125999": 257, "020191": 257, "224959": 257, "126000": 257, "007084": 257, "38635": 257, "220463": 257, "195326": 257, "176796": 257, "bsv_apgr": 257, "010583": 257, "107027": 257, "000008": 257, "171529": 257, "404278": 257, "000010": 257, "012042": 257, "115427": 257, "000032": 257, "208475": 257, "415588": 257, "000030": 257, "062712": 257, "117271": 257, "039930": 257, "446939": 257, "402075": 257, "bsv_wgt": 257, "244579": 257, "244448": 257, "002173": 257, "002170": 257, "244080": 257, "007763": 257, "007760": 257, "249237": 257, "034610": 257, "015250": 257, "relative_chang": 257, "773218": 257, "095327": 257, "520526": 257, "271369": 257, "110618": 257, "974324": 257, "868": [257, 259], "657803": 257, "852": 257, "803483": 257, "753": 257, "302743": 257, "themselv": 257, "ideal": 257, "estimated_covari": 257, "stdev": 257, "423728": 257, "237640": 257, "525424": 257, "704565": 257, "nyberg": 257, "hb": 257, "jonsson": 257, "introduct": 257, "cpt": 257, "pharmacometr": [257, 260, 262, 278], "syst": 257, "pharmacol": 257, "1002": 257, "psp4": 257, "12741": 257, "plan": 258, "stabl": 258, "googl": [258, 271], "coral": 258, "repo": 258, "tflite_runtim": 258, "nonlinear": 258, "examin": 258, "sever": [258, 274], "read_model_result": 259, "aspect": [259, 274, 278], "explor": [259, 271], "naiv": 259, "minima": 259, "\u03b4ofv": [259, 261, 267], "\u03b4aic": [259, 261, 267], "\u03b4bic": [259, 261, 267], "iivsearch_no_of_etas_candidate3": 259, "282024": 259, "iivsearch_no_of_etas_candidate2": 259, "217": 259, "691571": 259, "iivsearch_no_of_etas_candidate6": 259, "385": 259, "641987": 259, "iivsearch_no_of_etas_candidate1": 259, "631": 259, "871991": 259, "iivsearch_no_of_etas_candidate5": 259, "633": [259, 265], "419500": 259, "iivsearch_no_of_etas_candidate4": 259, "815": 259, "076729": 259, "iivsearch_no_of_etas_candidate7": 259, "834": 259, "249063": 259, "iivsearch_block_structure_candidate1": 259, "81": [259, 265], "971960": 259, "1283": [259, 261], "597406": 259, "1279": 259, "315382": 259, "1061": 259, "623812": 259, "673395": 259, "443392": 259, "645": 259, "895882": 259, "464": 259, "238653": 259, "066319": 259, "1365": 259, "569365": 259, "178325": 259, "1280": [259, 261], "1070": 259, "204731": 259, "1058": 259, "897": 259, "963854": 259, "024311": 259, "644": 259, "650": 259, "186341": 259, "640": 259, "468": 259, "529112": 259, "458": 259, "437": 259, "440744": 259, "1261": [259, 261], "189012": 259, "1039": 259, "215418": [259, 276], "641723": 259, "034998": 259, "620": 259, "864210": 259, "439": 259, "206982": 259, "417": 259, "411370": 259, "160972": 259, "5333": 259, "0366": 259, "1164": 259, "1064": 259, "2929": 259, "8058": 259, "9055": 259, "104": [259, 261, 267], "2270": 259, "2300": [259, 267], "9424": 259, "103": 259, "1360": 259, "239": 259, "1090": 259, "234": 259, "6680": 259, "9380": 259, "6690": 259, "106": [259, 272, 274, 275], "9880": 259, "433544": 259, "433676": [259, 261, 267], "114210": 259, "347648": 259, "316164": 259, "310155": 259, "922906": 259, "434563": 259, "436279": 259, "481830": 259, "481858": [259, 261, 267], "594777": 259, "396159": 259, "516927": 259, "593578": 259, "593654": [259, 261, 267], "414690": 259, "247930": 259, "656304": 259, "00013": 259, "31998": 259, "08352": 259, "43473": 259, "209975": 259, "401593": 259, "574966": 259, "736398": 259, "750954": 259, "744891": 259, "810669": 259, "215885": 259, "iiv_cl_iiv_vc_estim": 259, "498114": 259, "965311": 259, "348227": 259, "596114": 259, "524856": 259, "831038": 259, "973037": 259, "826292": 259, "168816": 259, "275494": 259, "612863": 259, "081253": 259, "444919": 259, "093815": 259, "067016": 259, "554482": 259, "103963": 259, "060027": 259, "670815": 259, "108198": 259, "049148": 259, "371": 259, "agnost": 260, "architectur": 260, "mainli": 260, "foundat": [260, 262], "post": [260, 275], "sens": 261, "brute": 261, "approach": 261, "nonzero": 261, "constant": 261, "iovsearch_candidate7": 261, "eta_iov_2_1": 261, "eta_iov_3_1": 261, "540508": 261, "iovsearch_candidate5": 261, "230772": 261, "iovsearch_candidate6": 261, "230394": 261, "iovsearch_candidate3": 261, "750000": 261, "iovsearch_candidate4": 261, "750400": 261, "iovsearch_candidate2": 261, "060114": 261, "iovsearch_candidate1": 261, "043077": 261, "iovsearch_candidate8": 261, "241921": 261, "694052": 261, "384316": 261, "383938": 261, "1262": 261, "153544": 261, "403544": 261, "403145": 261, "093431": 261, "1257": 261, "110467": 261, "1115": 261, "911624": 261, "1300": 261, "017728": 261, "1284": 261, "1263": 261, "070775": 261, "1299": 261, "707992": 261, "761039": 261, "707614": 261, "760660": 261, "017679": 261, "1282": 261, "1258": 261, "780267": 261, "017280": 261, "779867": 261, "707566": 261, "1281": 261, "470153": 261, "015062": 261, "1254": 261, "487190": 261, "1145": 261, "944840": 261, "1131": 261, "1113": 261, "288346": 261, "1954": 261, "1951": 261, "1950": 261, "2313": 261, "242": [261, 272, 274], "440613": 261, "665": 261, "439785": 261, "439783": 261, "230": 261, "241": 261, "440611": 261, "439784": 261, "438628": 261, "474140": 261, "586866": 261, "472835": 261, "590425": 261, "472840": 261, "590424": 261, "474125": 261, "586859": 261, "474111": 261, "586860": 261, "590422": 261, "572627": 261, "311861": 261, "194680": 261, "320393": 261, "195531": 261, "320395": 261, "195532": 261, "000130": [261, 267], "311859": 261, "194676": 261, "311903": 261, "194675": 261, "320387": 261, "290631": 261, "197005": 261, "omega_iov_1_estim": 261, "omega_iov_2_estim": 261, "002735": 261, "000006": 261, "483460": 261, "omega_iov_3_estim": 261, "000000e": [261, 276], "119820": 261, "001912": 261, "121866": 261, "620420": 261, "291396": 261, "230854": 261, "936871": 261, "267222": 261, "050766": 261, "059323": 261, "068405": 261, "291876": 261, "271367": 261, "187631": 261, "051358": 261, "020838": 261, "042977": 261, "612880": 261, "250083": 261, "660334": 261, "657": 261, "395": 261, "NEAR": [261, 267], "BE": [261, 262], "address": [261, 262], "adopt": 262, "wikimedia": 262, "bowl_of_hygieia_by_david": 262, "svg": 262, "cc": 262, "BY": 262, "sa": 262, "font": 262, "pt": 262, "san": 262, "relicens": 262, "lgpl": 262, "know": 262, "maintaint": 262, "softwar": [262, 271, 278], "redistribut": 262, "publish": 262, "hope": 262, "warranti": 262, "impli": 262, "merchant": 262, "FOR": 262, "modif": [262, 274], "permit": 262, "retain": 262, "disclaim": 262, "reproduc": 262, "materi": 262, "holder": 262, "AND": [262, 266], "AS": 262, "OR": 262, "BUT": 262, "NOT": 262, "TO": 262, "OF": 262, "IN": 262, "shall": 262, "liabl": 262, "indirect": 262, "incident": 262, "exemplari": 262, "consequenti": 262, "damag": 262, "procur": 262, "good": 262, "servic": 262, "loss": 262, "profit": 262, "busi": 262, "interrupt": 262, "ON": 262, "theori": [262, 264], "liabil": 262, "contract": 262, "tort": 262, "neglig": 262, "aris": 262, "advis": 262, "SUCH": 262, "june": 262, "2007": 262, "inc": 262, "fsf": 262, "preambl": 262, "copyleft": 262, "practic": 262, "design": [262, 264, 266, 271, 278], "awai": 262, "contrast": 262, "guarante": 262, "too": 262, "speak": 262, "price": 262, "charg": 262, "wish": [262, 266], "piec": 262, "prevent": 262, "deni": 262, "ask": [262, 280], "surrend": 262, "therefor": 262, "respons": 262, "grati": 262, "fee": 262, "recipi": 262, "gpl": 262, "assert": 262, "offer": [262, 264, 266], "permiss": 262, "clearli": 262, "sake": 262, "erron": 262, "devic": 262, "although": 262, "manufactur": 262, "fundament": 262, "incompat": 262, "aim": [262, 274], "systemat": 262, "abus": 262, "area": [262, 271], "precis": 262, "unaccept": 262, "prohibit": 262, "substanti": 262, "domain": [262, 269, 278], "stand": 262, "readi": 262, "provis": 262, "futur": 262, "threaten": 262, "constantli": [262, 280], "patent": 262, "danger": 262, "proprietari": 262, "assur": 262, "law": 262, "semiconductor": 262, "mask": 262, "license": 262, "organ": [262, 264], "fashion": 262, "exact": 262, "earlier": 262, "cover": [262, 267, 268, 270, 279], "unmodifi": 262, "propag": 262, "secondarili": 262, "infring": 262, "countri": 262, "convei": 262, "enabl": 262, "mere": 262, "network": 262, "transfer": 262, "extent": 262, "conveni": [262, 264], "promin": 262, "visibl": 262, "menu": 262, "criterion": 262, "offici": 262, "wide": 262, "among": 262, "essenti": 262, "kernel": 262, "script": [262, 278], "link": [262, 275], "subprogram": 262, "intim": 262, "regener": 262, "grant": 262, "irrevoc": 262, "affirm": 262, "unlimit": 262, "constitut": 262, "fair": 262, "equival": [262, 264, 278], "sole": 262, "facil": 262, "compli": 262, "behalf": 262, "relationship": [262, 276], "circumst": 262, "sublicens": 262, "anti": 262, "circumvent": 262, "deem": 262, "technolog": 262, "fulfil": 262, "oblig": 262, "articl": 262, "wipo": 262, "treati": 262, "decemb": 262, "1996": 262, "waiv": 262, "forbid": 262, "exercis": 262, "intent": 262, "enforc": 262, "medium": [262, 271], "conspicu": 262, "intact": 262, "absenc": 262, "along": 262, "relev": [262, 268, 278], "anyon": 262, "who": [262, 268], "possess": 262, "invalid": 262, "natur": 262, "storag": 262, "aggreg": 262, "beyond": 262, "embodi": 262, "durabl": 262, "customarili": 262, "interchang": 262, "spare": 262, "reason": [262, 271], "cost": 262, "server": 262, "occasion": 262, "noncommerci": 262, "subsect": 262, "6b": 262, "further": 262, "clear": [262, 280], "sai": [262, 268], "host": 262, "satisfi": 262, "peer": 262, "transmiss": 262, "6d": 262, "portion": 262, "consum": 262, "tangibl": 262, "household": 262, "sold": 262, "incorpor": 262, "dwell": 262, "doubt": 262, "resolv": [262, 269], "favor": 262, "coverag": 262, "typic": [262, 278], "commerci": 262, "industri": 262, "procedur": 262, "suffic": 262, "interf": 262, "perpetu": 262, "character": 262, "But": 262, "nor": 262, "abil": 262, "rom": 262, "advers": 262, "protocol": 262, "publicli": 262, "password": 262, "unpack": 262, "supplement": 262, "govern": 262, "notwithstand": 262, "misrepresent": 262, "licensor": 262, "declin": 262, "trademark": 262, "trade": 262, "indemnif": 262, "contractu": 262, "impos": 262, "surviv": 262, "termin": 262, "expressli": 262, "void": 262, "paragraph": 262, "ceas": 262, "reinstat": 262, "provision": 262, "perman": 262, "notifi": 262, "prior": 262, "dai": 262, "cessat": 262, "moreov": 262, "cure": 262, "receipt": 262, "qualifi": 262, "ancillari": 262, "consequ": 262, "likewis": 262, "downstream": 262, "complianc": 262, "entiti": 262, "asset": 262, "subdivid": 262, "predecessor": 262, "plu": 262, "effort": 262, "royalti": 262, "litig": 262, "cross": 262, "claim": 262, "counterclaim": 262, "lawsuit": 262, "alleg": 262, "sell": 262, "sale": 262, "acquir": 262, "hereaft": 262, "manner": [262, 267], "worldwid": 262, "agreement": 262, "denomin": 262, "coven": 262, "sue": 262, "knowingli": 262, "readili": 262, "arrang": 262, "depriv": 262, "yourself": 262, "benefit": [262, 271], "knowledg": 262, "believ": 262, "pursuant": 262, "convey": 262, "discriminatori": 262, "scope": 262, "payment": 262, "primarili": 262, "march": 262, "constru": 262, "defens": 262, "court": 262, "contradict": 262, "excus": 262, "simultan": [262, 267], "pertin": 262, "agre": 262, "whom": 262, "refrain": 262, "affero": 262, "revis": 262, "Such": 262, "spirit": 262, "ever": 262, "proxi": 262, "THERE": 262, "qualiti": 262, "prove": 262, "defect": 262, "repair": 262, "WILL": 262, "inabl": 262, "BEING": 262, "inaccur": 262, "sustain": 262, "failur": [262, 271], "review": 262, "waiver": 262, "civil": 262, "greatest": 262, "achiev": 262, "attach": 262, "safest": 262, "pointer": 262, "brief": 262, "idea": [262, 271], "electron": 262, "paper": 262, "hypothet": 262, "Of": 262, "cours": 262, "gui": 262, "box": [262, 274], "employ": 262, "programm": 262, "school": 262, "philosophi": 262, "why": 262, "7b2feb6f20b626a559d3150f6638c111f20b5213": 262, "lin_evalu": 263, "lin_estim": 263, "268756": 263, "problemat": 263, "947354": 263, "939053": 263, "008301": 263, "970582": 263, "012053": 263, "041471": 263, "982345": 263, "979456": 263, "002889": 263, "457096": 263, "435700": 263, "021396": 263, "839445": 263, "838391": 263, "001054": 263, "257222": 263, "278016": 263, "020794": 263, "098344": 263, "077164": 263, "021179": 263, "538623": 263, "520111": 263, "018512": 263, "647972": 263, "673400": 263, "025427": 263, "394648": 263, "373180": 263, "021468": 263, "480163": 263, "505680": 263, "025517": 263, "650236": 263, "629298": 263, "020938": 263, "991406": [263, 265], "988587": 263, "002820": 263, "378873": 263, "372846": 263, "006028": 263, "739906": 263, "725640": 263, "014265": 263, "328801": 263, "326482": 263, "002319": 263, "113286": 263, "104515": 263, "008771": 263, "212076": 263, "325127": 263, "113051": 263, "334048": 263, "321306": 263, "012742": 263, "327782": 263, "306287": 263, "021495": 263, "821537": 263, "795371": 263, "026165": 263, "631283": 263, "620311": 263, "010972": 263, "861666": 263, "855927": 263, "005739": 263, "915260": 263, "913348": 263, "001913": 263, "988972": 263, "024483": 263, "035512": 263, "279274": 263, "269277": 263, "009997": 263, "733179": 263, "729199": 263, "003980": 263, "830055": 263, "827764": 263, "002290": 263, "851725": 263, "847176": 263, "004549": 263, "212098": 263, "192122": 263, "019976": 263, "774789": 263, "773559": 263, "001230": 263, "352292": 263, "351131": 263, "001162": 263, "172644": 263, "165200": 263, "007443": 263, "427375": 263, "420258": 263, "007117": 263, "381438": 263, "412378": 263, "030941": 263, "624011": 263, "614613": 263, "009397": 263, "970630": 263, "955216": 263, "015414": 263, "177025": 263, "002885": 263, "206543": 263, "180626": 263, "025916": 263, "955033": 263, "945036": 263, "982451": 263, "972114": 263, "010337": 263, "051495": 263, "098643": 263, "047147": 263, "424500": 263, "425925": 263, "001425": 263, "734347": 263, "702764": 263, "031583": 263, "018483": 263, "997957": 263, "020526": 263, "810285": [263, 265], "807205": 263, "003080": 263, "279257": 263, "276411": 263, "002846": 263, "168465": 263, "267932": 263, "099467": 263, "190512": 263, "178815": 263, "011697": 263, "749138": 263, "727859": 263, "021278": 263, "598562": 263, "616685": 263, "018123": 263, "237457": 263, "251607": 263, "014150": 263, "568928": 263, "581417": 263, "012489": 263, "800065": 263, "795239": 263, "004826": 263, "098027": 263, "103873": 263, "005846": 263, "586253": [263, 265], "582931": 263, "003323": 263, "663950": 263, "650298": 263, "013652": 263, "850995": 263, "833333": 263, "017662": 263, "605848": 263, "592551": 263, "013297": 263, "iofv_plot": 263, "At": 264, "heart": 264, "li": [264, 278], "subclass": 264, "principl": 264, "pharmi": 264, "transpar": 264, "mymodel": [264, 266], "inspect": 264, "sdtab1": 264, "parset": 264, "displaystyl": [264, 266], "eta1": 264, "frem_model": 264, "000286193": 264, "0676481": 264, "0256033": 264, "027906": [264, 265], "0235094": 264, "00161838": 264, "24458": 264, "omega_est": 264, "0393482": 264, "0168369": 264, "0442286": 264, "0426757": 264, "0259374": 264, "0654878": 264, "00168063": 264, "983027": 264, "240423": 264, "98305": 264, "choleski": 264, "198363807182661": 264, "0848788911603008": 264, "136868454493349": 264, "222967085720797": 264, "616745467855979": 264, "743597812371906": 264, "215138540674925": 264, "145697201390566": 264, "508675383095755": 264, "810424017694199": 264, "pure": 264, "astyp": 264, "numeric64": 264, "linalg": 264, "19836381": 264, "08487889": 264, "13686845": 264, "22296709": 264, "61674547": 264, "74359781": 264, "21513854": 264, "1456972": 264, "50867538": 264, "81042402": 264, "quit": 264, "flexibl": 264, "cumbersom": 264, "easili": 264, "a_": [264, 266], "004696": [264, 265], "158920": [264, 265], "029351": [264, 265], "s_": [264, 266], "testdata": 265, "2760562818805": 265, "parameter_estimates_sdcorr": 265, "171321": 265, "167051": 265, "115069": 265, "Or": 265, "standard_errors_sdcorr": 265, "039153": 265, "022378": 265, "009904": 265, "relative_standard_error": 265, "044731": 265, "027325": 265, "527072": 265, "457068": 265, "267918": 265, "172147": 265, "proper": 265, "388058": 265, "356900": 265, "238442": 265, "096516": 265, "invers": 265, "29955600": 265, "400": 265, "910": 265, "267": 265, "039": 265, "207": 265, "809": 265, "520": 265, "980": 265, "200": 265, "450": 265, "947352": 265, "970591": 265, "982342": 265, "457091": 265, "839437": 265, "257230": 265, "098338": 265, "538621": 265, "647969": 265, "394643": 265, "480164": 265, "650233": 265, "378880": 265, "739902": 265, "328800": 265, "113284": 265, "212096": 265, "334047": 265, "327778": 265, "821533": 265, "631281": 265, "861669": 265, "915261": 265, "988977": 265, "279273": 265, "733181": 265, "830053": 265, "851724": 265, "212095": 265, "774791": 265, "352283": 265, "172643": 265, "427376": 265, "381444": 265, "624014": 265, "970627": 265, "177028": 265, "206540": 265, "955029": 265, "982447": 265, "051499": 265, "424503": 265, "734342": 265, "018477": 265, "279258": 265, "168486": 265, "190508": 265, "749134": 265, "598565": 265, "237467": 265, "568934": 265, "800062": 265, "098025": 265, "663948": 265, "850993": 265, "605845": 265, "143": 265, "045": 265, "971": 265, "881": 265, "575": 265, "080": 265, "063": 265, "427": 265, "668": 265, "543": 265, "662": 265, "478": 265, "667": 265, "253": 265, "495": 265, "918": 265, "67071": 265, "401100": 265, "35080": 265, "587770": 265, "36360": 265, "278800": 265, "19730": 265, "670700": 265, "21710": 265, "352600": 265, "86050": 265, "067200": 265, "35060": 265, "059269": 265, "72100": 265, "036754": 265, "10860": 265, "814140": 265, "28180": 265, "699410": 265, "eb": 265, "043861": 265, "005430": 265, "166321": 265, "131833": 265, "095934": 265, "130868": 265, "009154": 265, "017388": 265, "102019": 265, "283500": 265, "019417": 265, "099839": 265, "045946": 265, "059072": 265, "024270": 265, "189351": 265, "248536": 265, "091872": 265, "009545": 265, "012052": 265, "066151": 265, "293685": 265, "030236": 265, "074789": 265, "094502": 265, "147433": 265, "076820": 265, "105604": 265, "020051": 265, "066265": 265, "086035": 265, "023260": 265, "067138": 265, "030859": 265, "337255": 265, "035532": 265, "032579": 265, "028410": 265, "003589": 265, "080613": 265, "060233": 265, "052854": 265, "004469": 265, "057344": 265, "051992": 265, "212941": 265, "137510": 265, "004111": 265, "023282": 265, "302636": 265, "039069": 265, "119442": 265, "044956": 265, "263320": 265, "000776": 265, "083231": 265, "003150": 265, "012752": 265, "049654": 265, "080932": 265, "000555": 265, "099614": 265, "061864": 265, "332738": 265, "038156": 265, "067641": 265, "038017": 265, "184137": 265, "156617": 265, "208753": 265, "114558": 265, "053036": 265, "008405": 265, "026004": 265, "144920": 265, "081646": 265, "083320": 265, "015380": 265, "000392": 265, "078062": 265, "018966": 265, "112030": 265, "112715": 265, "383786": 265, "001730": 265, "167583": 265, "042068": 265, "066598": 265, "037600": 265, "000093": 265, "010662": 265, "009775": 265, "058306": 265, "229005": 265, "033958": 265, "008959": 265, "092312": 265, "050987": 265, "192569": 265, "002727": 265, "225657": 265, "115824": 265, "204269": 265, "054792": 265, "066334": 265, "123689": 265, "239678": 265, "047215": 265, "186615": 265, "000949": 265, "010812": 265, "015929": 265, "017213": 265, "005234": 265, "122552": 265, "076677": 265, "095696": 265, "024883": 265, "002999": 265, "007157": 265, "model_ref": 266, "easi": [266, 271], "pipelin": 266, "unfix_parameters_to": 266, "print_model_diff": 266, "ipython": 266, "pkmat": 266, "errori": 266, "pkcl": 266, "vd1": 266, "advan2": 266, "s2": 266, "vka": 266, "pkmdt": 266, "matd1": 266, "pop_mdt": 266, "advan5": 266, "trans1": 266, "defdos": 266, "transit4": 266, "s5": 266, "vk12": 266, "mdtk23": 266, "mdtk34": 266, "mdtk45": 266, "mdtk50": 266, "valag1": 266, "similarli": 266, "tol": 266, "pkkm": 266, "desdadt": 266, "pop_clmm": 266, "067": 266, "1358": 266, "pop_km": 266, "iiv_clmm": 266, "pkclmm": 266, "002346535": 266, "advan3": 266, "trans4": 266, "pkvp1": 266, "v1": 266, "v1q": 266, "qp1v2": 266, "pop_qp1": 266, "050458": 266, "pop_vp1": 266, "remove_ref": 266, "059618": 266, "advan11": 266, "pkvp2": 266, "v1q2": 266, "vp1q3": 266, "qp2v3": 266, "00046930699999999997": 266, "0529809": 266, "004223763": 266, "pop_qp2": 266, "pop_vp2": 266, "onto": 266, "pkwgt_median": 266, "30000cl": 266, "clwgt": 266, "wgt_median": 266, "clwgtv": 266, "pop_clwgt": 266, "user_effect": 266, "std": 266, "30000wgt_std": 266, "704565cl": 266, "wgt_std": 266, "pketab1": 266, "etab1": 266, "etab2": 266, "lambda2": 266, "analog": 266, "pketat1": 266, "384": 266, "etat1": 266, "pketad1": 266, "etad1": 266, "iiv_s1": 266, "eta_new": 266, "iiv_": 266, "pkiov_1": 266, "0if": 266, "iov_1": 266, "etai1": 266, "00309626": 266, "omega_iov_1": 266, "iov_2": 266, "etai2": 266, "0031128": 266, "omega_iov_2": 266, "pkdummyeta": 266, "dummyomega": 266, "isn": 266, "runnabl": 266, "epsilon_a": 266, "approx": 266, "taylor": 266, "epsilon_": 266, "epsilon_p": 266, "sigma_prop": [266, 275], "sigma_add": [266, 275], "iiv_ruv1": 266, "ruv1": 266, "power1": 266, "someim": 266, "correspondng": 266, "11506954418958998": 266, "errorw": 266, "fy": 266, "wif": 266, "THEN": 266, "1000000000end": 266, "ifi": 266, "tbs_lambda": 266, "tbs_zeta": 266, "ivcl0": 266, "0031045": 266, "iiv_cl_iiv_v0": 266, "model_block": 266, "445550": 266, "bootstrap_dir1": 266, "597341": 266, "039061": 266, "365446": 266, "019725": 266, "secondary_paramet": 266, "chapter": 267, "delai": [267, 278], "grammar": [267, 271], "exhaustive_stepwis": 267, "addition": [267, 278], "obtain": 267, "basi": 267, "subsequ": [267, 268, 278], "modelsearch_candidate2": [267, 278], "594608": 267, "1272": 267, "124874": 267, "modelsearch_candidate3": [267, 278], "558028": 267, "088295": 267, "modelsearch_candidate4": [267, 278], "956313": 267, "1270": 267, "486580": 267, "287000": 267, "1260": 267, "817266": 267, "362287": 267, "1327": 267, "153182": 267, "1325": 267, "551467": 267, "1307": 267, "301235": 267, "1289": 267, "2927": 267, "4334": 267, "7778": 267, "0058": 267, "109": 267, "1640": 267, "260324": 267, "7646": 267, "824443": 267, "5477": 267, "607839": 267, "1147": 267, "842498": 267, "470974": 267, "595276": 267, "526185": 267, "930160": 267, "495109": 267, "322680": 267, "470531": 267, "515250": 267, "312692": 267, "194221": 267, "202201": 267, "207885": 267, "232322": 267, "199750": 267, "205369": 267, "193439": 267, "pop_qp1_estim": 267, "pop_vp1_estim": 267, "pop_mdt_estim": 267, "155413": 267, "89": 267, "4192": 267, "6100": 267, "172730": 267, "3977": 267, "4562": 267, "158070": 267, "8042": 267, "8517": 267, "iiv_mdt_estim": 267, "156289": 267, "192020": 267, "092419": 267, "262429": 267, "720369": 267, "464263": 267, "127061": 267, "906722": 267, "053781": 267, "923055": 267, "795863": 267, "030658": 267, "661330": 267, "168680": 267, "833073": 267, "041529": 267, "205858": 267, "064930": 267, "609673": 267, "396329": 267, "928556": 267, "365": 267, "330": 267, "topic": 268, "scheme": 268, "theta_cl": 268, "mention": [268, 280], "ve": 268, "despit": 268, "write_etas_in_abbr": 268, "altair": [269, 271], "vega": 269, "lite": 269, "ggplot": 269, "editor": 269, "clamp": 269, "vconcat": 269, "spec": 269, "inten": 270, "export": 270, "strictli": 270, "necessesari": 270, "detect_model": 270, "summer": 271, "master": 271, "thesi": 271, "internship": 271, "email": 271, "team": 271, "tox": 271, "pytest": 271, "sphinx": 271, "wise": 271, "known": 271, "trial": 271, "involv": 271, "outcom": 271, "research": 271, "350h": 271, "difficulti": 271, "mentor": 271, "scipi": 271, "focu": 271, "proof": 271, "concept": 271, "algebra": 271, "simul": [271, 277], "scratch": 271, "lark": 271, "earlei": 271, "lalr": 271, "stricter": 271, "175h": 271, "almost": 271, "compat": 271, "benefici": 271, "diff": 271, "potenti": 271, "eas": 271, "jupyt": 271, "holoview": 271, "bokeh": 271, "monitor": 271, "ongo": 271, "veri": [271, 280], "happen": 271, "converg": 271, "sort": [271, 278], "dashboard": 271, "complement": 271, "realtim": 271, "restart": [271, 280], "middl": 271, "worflow": 271, "dvid": [272, 274, 275], "autocorrel": [272, 274], "dtb": [272, 274], "91": [272, 274], "idv_varying_ruv": 272, "idv_varying_ruv_cutoff0": 272, "idv_varying_ruv_cutoff1": 272, "idv_varying_ruv_cutoff2": 272, "idv_varying_ruv_cutoff3": 272, "idv_varying_ruv_cutoff4": 272, "idv_varying_ruv_cutoff5": 272, "idv_varying_ruv_cutoff6": 272, "idv_varying_ruv_cutoff7": 272, "idv_varying_ruv_cutoff8": 272, "idv_varying_combin": 272, "idv_varying_theta": 272, "66": 272, "cv": [272, 274], "772": [272, 274], "042": [272, 274], "sdeps_0": [272, 274], "t1": 272, "298": 272, "sdeps_t1": 272, "t2": 272, "886": 272, "t0": [272, 274], "271": [272, 274], "sdeps_t0": [272, 274], "390": [272, 274], "956": [272, 274], "717": 272, "014": 272, "914": 272, "983": 272, "884": 272, "017": 272, "955": 272, "958": 272, "969": 272, "933": 272, "022": 272, "819": 272, "007": 272, "755": 272, "982": 272, "642": 272, "387": 272, "th_0": 272, "257": 272, "sdep": 272, "279": 272, "th_t1": 272, "124": 272, "th_t2": 272, "delta_pow": [272, 274], "037": [272, 274], "delet": 273, "diagnost": 273, "impact": 274, "improement": 274, "592698": 274, "197887": 274, "007493": 274, "521171": 274, "et1apgr": 274, "487930": 274, "residual_error_model": 274, "910000": 274, "030000": 274, "diagnos": 274, "structural_bia": 274, "cpred": 274, "binmin": 274, "binmax": 274, "binid": 274, "159": 274, "258": 274, "67": [274, 276], "strutur": 274, "mdel": 274, "fullblock_paramet": 274, "183463": 274, "171306": 274, "554610": 274, "154408": 274, "167053": 274, "cox": 274, "boxcox_paramet": 274, "shape": 274, "new_sd": 274, "old_sd": 274, "922083": 274, "182037": 274, "332800": 274, "166021": 274, "tdist_paramet": 274, "79": 274, "9997": 274, "168477": 274, "9986": 274, "166469": 274, "residual_error": 274, "additional_paramet": 274, "coeff": 274, "48793": 274, "033334": 274, "48218": 274, "052342": 274, "59034": 274, "008371": 274, "00887": 274, "003273": 274, "set_time_varying_error_model": 275, "ibrahim": 275, "quickli": [275, 278], "assess": 275, "inde": 275, "cwres_model": 275, "479721": 275, "385268": 275, "002792": 275, "time_varying1": 275, "117041": 275, "555154": 275, "time_varying3": 275, "336641": 275, "091207": 275, "065738": 275, "654562": 275, "046578": 275, "519115": 275, "612710": 275, "643741": 275, "027766": 275, "000367": 275, "967365": 275, "00123": 275, "0976": 275, "12252": 275, "14299": 275, "000337": 275, "05242": 275, "006105": 275, "10545": 275, "12659": 275, "15573": 275, "00054": 275, "04769": 275, "030825": 275, "mox3": 275, "best_ruvsearch_1": 275, "2460": 275, "704469": 275, "957378": 275, "2473": 275, "661847": 275, "269102": 275, "2495": 275, "973571": 275, "2444": 275, "2455": 275, "2475": 275, "2423": 275, "757516": 275, "2435": 275, "047712": 275, "2453": 275, "068976": 275, "71": 275, "pop_vc_estim": 275, "pop_mat_estim": 275, "707": 275, "5434": 275, "531596": 275, "794": 275, "3091": 275, "528620": 275, "3094": 275, "532547": 275, "iiv_vc_estim": 275, "iiv_vc_iiv_cl_estim": 275, "077743": 275, "038888": 275, "076793": 275, "039924": 275, "071628": 275, "038470": 275, "iiv_cl_estim": 275, "iiv_mat_estim": 275, "072309": 275, "704770": 275, "093311": 275, "074889": 275, "707665": 275, "081095": 275, "075048": 275, "705429": 275, "044311": 275, "iiv_ruv1_estim": 275, "time_varying_estim": 275, "039675": 275, "040734": 275, "42509": 275, "215727": 275, "655144": 275, "708324": 275, "762729": 275, "236530": 275, "229762": 275, "715966": 275, "423148": 275, "419741": 275, "774540": 275, "164274": 275, "450202": 275, "195425": 275, "960585": 275, "090461": 275, "848498": 275, "052021": 275, "239462": 275, "065148": 275, "571348": 275, "244582": 275, "161981": 275, "509910": 275, "373696": 275, "084489": 275, "647643": 275, "344772": 275, "083776": 275, "259395": 275, "101415": 275, "024651": 275, "443542": 275, "124023": 275, "183089": 275, "977222": 275, "219": 275, "moustafa": 275, "m": 275, "maria": 275, "kjellsson": 275, "aap": 275, "1208": 275, "s12248": 275, "018": 275, "0240": 275, "pha": 276, "219210": 276, "90878": 276, "219167": 276, "36222": 276, "bmi": 276, "219171": 276, "47564": 276, "cycll": 276, "219203": 276, "94536": 276, "diag": 276, "219206": 276, "01527": 276, "disdur": 276, "219032": 276, "86056": 276, "215321": 276, "70954": 276, "215306": 276, "67698": 276, "phia": 276, "men": 276, "215407": 276, "40295": 276, "phib": 276, "georeg": 276, "215373": 276, "77800": 276, "216968": 276, "25989": 276, "slp": 276, "215359": 276, "18150": 276, "54656": 276, "140000e": 276, "43314": 276, "390000e": 276, "96342": 276, "319000e": 276, "89351": 276, "695800e": 276, "178": 276, "04822": 276, "290000e": 276, "03256": 276, "060000e": 276, "72597": 276, "10102": 276, "580000e": 276, "1661": 276, "58291": 276, "50452": 276, "phaag": 276, "phabmi": 276, "phacycl": 276, "phadiag": 276, "phadisdur": 276, "backward_scm_dir1": 276, "phawt": 276, "phiamen": 276, "phibgeoreg": 276, "phibmen": 276, "slpgeoreg": 276, "304": 276, "beween": 276, "target": 276, "slightli": 276, "215961": 276, "46277": 276, "3249": 276, "44601": 276, "215748": 276, "07194": 276, "213": 276, "39083": 276, "215570": 276, "57352": 276, "49842": 276, "215486": 276, "23440": 276, "33912": 276, "87007": 276, "36433": 276, "215357": 276, "74693": 276, "61": 276, "12314": 276, "215337": 276, "95044": 276, "79649": 276, "24090": 276, "215332": 276, "91461": 276, "23763": 276, "67861": 276, "00163": 276, "215450": 276, "74783": 276, "07085": 276, "215491": 276, "11568": 276, "43870": 276, "500000e": 276, "700000e": 276, "170000e": 276, "260000e": 276, "360000e": 276, "600000e": 276, "020000e": 276, "620000e": 276, "430000e": 276, "200000e": 276, "did": 276, "lbest": 276, "cpl": 276, "575351": 277, "230120": 277, "165042": 277, "488686": 277, "921633": 277, "300884": 277, "027733": 277, "083424": 277, "824880": 277, "946876": 277, "928279": 277, "654589": 277, "180960": 277, "916884": 277, "604188": 277, "795252": 277, "370783": 277, "364078": 277, "638247": 277, "467337": 277, "078494": 277, "957716": 277, "351839": 277, "136159": 277, "472019": 277, "823449": 277, "664634": 277, "221459": 277, "151210": 277, "318875": 277, "405150": 277, "527835": 277, "135159": 277, "551158": 277, "526828": 277, "406903": 277, "615899": 277, "562788": 277, "796073": 277, "293600": 277, "892761": 277, "818812": 277, "328937": 277, "486179": 277, "376893": 277, "849137": 277, "446579": 277, "929665": 277, "121901": 277, "114640": 277, "423537": 277, "615092": 277, "247238": 277, "512627": 277, "408347": 277, "705806": 277, "018308": 277, "484284": 277, "842566": 277, "867625": 277, "056381": 277, "664954": 277, "114753": 277, "638560": 277, "078385": 277, "449888": 277, "282087": 277, "178961": 277, "622712": 277, "882876": 277, "138213": 277, "678095": 277, "238692": 277, "361556": 277, "037941": 277, "929655": 277, "166879": 277, "713778": 277, "422555": 277, "708577": 277, "563473": 277, "567697": 277, "335429": 277, "266944": 277, "989005": 277, "959843": 277, "388393": 277, "461262": 277, "212573": 277, "621329": 277, "811596": 277, "277388": 277, "501489": 277, "003027": 277, "110075": 277, "786560": 277, "366018": 277, "219194": 277, "380865": 277, "905147": 277, "612812": 277, "961895": 277, "630512": 277, "546036": 277, "534496": 277, "584818": 277, "231970": 277, "816485": 277, "682987": 277, "900845": 277, "892200": 277, "988276": 277, "776532": 277, "802797": 277, "749003": 277, "018880": 277, "725509": 277, "015416": 277, "662582": 277, "196823": 277, "250063": 277, "212538": 277, "838099": 277, "488859": 277, "851698": 277, "944073": 277, "140249": 277, "297823": 277, "743671": 277, "429352": 277, "485191": 277, "659430": 277, "409142": 277, "880881": 277, "191840": 277, "733704": 277, "775355": 277, "755737": 277, "630846": 277, "956378": 277, "707700": 277, "794788": 277, "851982": 277, "483346": 277, "668763": 277, "538437": 277, "382384": 277, "401748": 277, "793645": 277, "455902": 277, "196475": 277, "498709": 277, "926835": 277, "928532": 277, "425364": 277, "848184": 277, "497867": 277, "985533": 277, "366585": 277, "030662": 277, "572217": 277, "565811": 277, "551558": 277, "551208": 277, "662370": 277, "298009": 277, "630121": 277, "042324": 277, "552114": 277, "580405": 277, "361844": 277, "035731": 277, "406685": 277, "040276": 277, "275622": 277, "169391": 277, "957232": 277, "496993": 277, "515088": 277, "155311": 277, "106708": 277, "361498": 277, "454421": 277, "751915": 277, "363698": 277, "904024": 277, "024682": 277, "889492": 277, "952586": 277, "434510": 277, "840067": 277, "575363": 277, "835458": 277, "073683": 277, "073635": 277, "884553": 277, "253049": 277, "819836": 277, "879430": 277, "169888": 277, "893425": 277, "497236": 277, "285544": 277, "178975": 277, "564632": 277, "046265": 277, "765897": 277, "277992": 277, "264764": 277, "695028": 277, "684344": 277, "586789": 277, "688954": 277, "572606": 277, "516160": 277, "493584": 277, "249772": 277, "841335": 277, "244786": 277, "916145": 277, "933397": 277, "659481": 277, "253768": 277, "416676": 277, "744242": 277, "178177": 277, "936980": 277, "731451": 277, "069317": 277, "269584": 277, "477206": 277, "605768": 277, "746436": 277, "716822": 277, "737404": 277, "408266": 277, "980420": 277, "763155": 277, "125029": 277, "132983": 277, "337790": 277, "811144": 277, "686115": 277, "583418": 277, "105503": 277, "195385": 277, "031564": 277, "043157": 277, "363551": 277, "850645": 277, "016286": 277, "525306": 277, "225458": 277, "892175": 277, "052073": 277, "846592": 277, "404922": 277, "699366": 277, "242420": 277, "435102": 277, "243399": 277, "815026": 277, "509957": 277, "512603": 277, "589215": 277, "933824": 277, "926077": 277, "481351": 277, "175264": 277, "923185": 277, "087071": 277, "944302": 277, "194473": 277, "824234": 277, "611250": 277, "735586": 277, "344235": 277, "550825": 277, "903583": 277, "860290": 277, "556035": 277, "308617": 277, "875052": 277, "501681": 277, "153441": 277, "874004": 277, "631308": 277, "432371": 277, "372005": 277, "054769": 277, "133006": 277, "758791": 277, "323449": 277, "357159": 277, "215148": 277, "860736": 277, "853273": 277, "993262": 277, "568383": 277, "533799": 277, "905658": 277, "376218": 277, "322738": 277, "313336": 277, "898802": 277, "546277": 277, "542369": 277, "773450": 277, "058260": 277, "873918": 277, "600450": 277, "775938": 277, "899285": 277, "104682": 277, "793703": 277, "230477": 277, "354616": 277, "330868": 277, "479966": 277, "884839": 277, "438225": 277, "432346": 277, "367480": 277, "924846": 277, "694969": 277, "054791": 277, "024193": 277, "387386": 277, "864669": 277, "548598": 277, "853355": 277, "280139": 277, "424024": 277, "695800": 277, "631655": 277, "413680": 277, "541680": 277, "758919": 277, "704503": 277, "316351": 277, "814952": 277, "026935": 277, "937635": 277, "715708": 277, "009725": 277, "462408": 277, "383043": 277, "459161": 277, "179394": 277, "676905": 277, "260472": 277, "218010": 277, "956306": 277, "398492": 277, "051986": 277, "445912": 277, "191401": 277, "767349": 277, "876780": 277, "553003": 277, "822404": 277, "924166": 277, "846457": 277, "565671": 277, "115117": 277, "207434": 277, "341361": 277, "806515": 277, "434087": 277, "086788": 277, "296737": 277, "599116": 277, "516464": 277, "574667": 277, "831345": 277, "793265": 277, "874349": 277, "901408": 277, "912201": 277, "676572": 277, "693935": 277, "069326": 277, "954047": 277, "905528": 277, "077897": 277, "731336": 277, "186642": 277, "819544": 277, "504667": 277, "773375": 277, "843029": 277, "455400": 277, "762211": 277, "187278": 277, "502366": 277, "056323": 277, "802175": 277, "305631": 277, "370226": 277, "639042": 277, "544260": 277, "597045": 277, "977219": 277, "022410": 277, "400720": 277, "641421": 277, "424237": 277, "974785": 277, "853009": 277, "098997": 277, "886356": 277, "374133": 277, "963905": 277, "712658": 277, "415675": 277, "351619": 277, "044583": 277, "396594": 277, "255630": 277, "360173": 277, "358567": 277, "408061": 277, "414926": 277, "496109": 277, "297200": 277, "907778": 277, "222423": 277, "606428": 277, "362886": 277, "206488": 277, "693535": 277, "988252": 277, "911020": 277, "764024": 277, "517867": 277, "453899": 277, "133073": 277, "346212": 277, "783555": 277, "027851": 277, "462547": 277, "972480": 277, "402983": 277, "036534": 277, "723710": 277, "032512": 277, "378125": 277, "408322": 277, "788249": 277, "269137": 277, "159667": 277, "777419": 277, "448461": 277, "625663": 277, "416254": 277, "541949": 277, "907322": 277, "418469": 277, "371639": 277, "606033": 277, "675347": 277, "663661": 277, "584165": 277, "271405": 277, "500411": 277, "824837": 277, "876965": 277, "881148": 277, "348849": 277, "885439": 277, "366355": 277, "iofv_summari": 277, "orgin": 277, "ob": 277, "sampled_median": 277, "sampled_stdev": 277, "residual_q1": 277, "743042": 277, "269351": 277, "092721": 277, "132107": 277, "049484": 277, "062882": 277, "923433": 277, "032842": 277, "903729": 277, "041599": 277, "666016": 277, "588530": 277, "233558": 277, "813525": 277, "338707": 277, "262659": 277, "651808": 277, "842347": 277, "092618": 277, "607326": 277, "763450": 277, "426016": 277, "953150": 277, "344659": 277, "002809": 277, "839617": 277, "390660": 277, "093249": 277, "843159": 277, "761625": 277, "066485": 277, "562593": 277, "515891": 277, "678375": 277, "587563": 277, "846506": 277, "321253": 277, "931536": 277, "511037": 277, "243040": 277, "313767": 277, "998817": 277, "190685": 277, "266501": 277, "243372": 277, "216676": 277, "334541": 277, "088609": 277, "030344": 277, "099508": 277, "626027": 277, "236755": 277, "682470": 277, "271061": 277, "322169": 277, "889854": 277, "855528": 277, "232988": 277, "221102": 277, "260479": 277, "297037": 277, "100632": 277, "978394": 277, "671231": 277, "588077": 277, "600891": 277, "572710": 277, "088513": 277, "331370": 277, "651006": 277, "383926": 277, "621596": 277, "936751": 277, "638334": 277, "863723": 277, "802597": 277, "124775": 277, "712276": 277, "541296": 277, "902641": 277, "054733": 277, "087013": 277, "019852": 277, "185274": 277, "299915": 277, "071925": 277, "504540": 277, "056317": 277, "177399": 277, "404555": 277, "347654": 277, "490854": 277, "248420": 277, "402107": 277, "172721": 277, "309188": 277, "612652": 277, "605320": 277, "387170": 277, "916585": 277, "723804": 277, "814910": 277, "320602": 277, "089383": 277, "193802": 277, "746322": 277, "453306": 277, "888849": 277, "347721": 277, "796098": 277, "427890": 277, "964192": 277, "509526": 277, "553605": 277, "595254": 277, "940021": 277, "187065": 277, "218493": 277, "446771": 277, "021723": 277, "143293": 277, "077425": 277, "553705": 277, "963659": 277, "230769": 277, "941064": 277, "345041": 277, "355392": 277, "177536": 277, "564686": 277, "074840": 277, "501228": 277, "910681": 277, "928524": 277, "255799": 277, "746242": 277, "724151": 277, "284455": 277, "111385": 277, "103779": 277, "602531": 277, "057843": 277, "201646": 277, "908651": 277, "880337": 277, "368175": 277, "066179": 277, "743926": 277, "503126": 277, "881606": 277, "250884": 277, "047349": 277, "844822": 277, "189370": 277, "511282": 277, "270109": 277, "430602": 277, "221208": 277, "868376": 277, "958375": 277, "098127": 277, "780755": 277, "635224": 277, "985409": 277, "809369": 277, "378962": 277, "211565": 277, "057646": 277, "205194": 277, "036416": 277, "193803": 277, "429374": 277, "204566": 277, "181809": 277, "278418": 277, "598975": 277, "337763": 277, "785971": 277, "413662": 277, "606782": 277, "709391": 277, "881992": 277, "864932": 277, "303395": 277, "084555": 277, "219260": 277, "154550": 277, "785024": 277, "694892": 277, "512588": 277, "121911": 277, "906081": 277, "693733": 277, "669899": 277, "053933": 277, "229621": 277, "686649": 277, "489669": 277, "193242": 277, "455548": 277, "756085": 277, "871678": 277, "683725": 277, "788305": 277, "441965": 277, "980475": 277, "053564": 277, "483885": 277, "840129": 277, "161657": 277, "813878": 277, "634209": 277, "574414": 277, "214315": 277, "235064": 277, "837522": 277, "929402": 277, "427740": 277, "521014": 277, "392308": 277, "944092": 277, "407457": 277, "879179": 277, "753044": 277, "057118": 277, "900168": 277, "579183": 277, "047295": 277, "069060": 277, "430617": 277, "023015": 277, "749906": 277, "157977": 277, "117461": 277, "010968": 277, "974584": 277, "052094": 277, "650140": 277, "206923": 277, "302385": 277, "557865": 277, "806373": 277, "733736": 277, "309462": 277, "292477": 277, "034161": 277, "253204": 277, "515730": 277, "067793": 277, "328308": 277, "941486": 277, "862193": 277, "275903": 277, "359860": 277, "865778": 277, "461685": 277, "346120": 277, "040796": 277, "340902": 277, "669504": 277, "165811": 277, "006993": 277, "056961": 277, "515114": 277, "073228": 277, "455873": 277, "041631": 277, "121517": 277, "970391": 277, "151516": 277, "604970": 277, "314527": 277, "639192": 277, "701809": 277, "559444": 277, "756955": 277, "240398": 277, "residual_q3": 277, "residual_outli": 277, "101924": 277, "045535": 277, "234064": 277, "025423": 277, "109899": 277, "625316": 277, "268882": 277, "574353": 277, "419169": 277, "807045": 277, "159688": 277, "667537": 277, "022651": 277, "630322": 277, "291458": 277, "309807": 277, "105832": 277, "301714": 277, "720484": 277, "289277": 277, "953368": 277, "653632": 277, "126620": 277, "673619": 277, "333709": 277, "076368": 277, "549693": 277, "158992": 277, "824096": 277, "026303": 277, "658756": 277, "145689": 277, "986494": 277, "095503": 277, "364901": 277, "552261": 277, "588452": 277, "301528": 277, "219416": 277, "359428": 277, "174344": 277, "432004": 277, "734733": 277, "135789": 277, "237813": 277, "693671": 277, "260535": 277, "184885": 277, "364894": 277, "772187": 277, "236023": 277, "845436": 277, "707608": 277, "626422": 277, "497515": 277, "963228": 277, "904840": 277, "701781": 277, "338779": 277, "individual_predictions_plot": 277, "trim": 278, "modelsearch_dir1": 278, "hash": 278, "mytab_mox1": 278, "subfold": 278, "temporari": 278, "finish": 278, "recreat": 278, "frame": [278, 280], "programmat": 278, "pharmpy_vers": 278, "tool_nam": 278, "start_tim": 278, "22t14": 278, "312240": 278, "end_tim": 278, "592109": 278, "common_opt": 278, "tmp": 278, "tool_result": 278, "locat": 278, "concis": 278, "newlin": 278, "semi": 278, "colon": 278, "endpoint": 278, "wildcard": 278, "nodepot": 278, "autom": 278, "gotcha": 279, "mirror": 280, "cran": 280, "reticul": 280, "remot": 280, "install_github": 280, "ref": 280, "install_pharmpi": 280, "session": 280, "successfulli": 280, "packagevers": 280, "print_pharmpy_vers": 280, "miniconda": 280, "py_discover_config": 280, "conda_cr": 280, "python_vers": 280, "virtual": 280, "someth": 280, "libpython": 280, "lib": 280, "libpython3": 280, "pipe": 280, "magrittr": 280, "model_a": 280, "model_b": 280, "reset_index": 280, "5l": 280, "input_model": 280}, "objects": {"pharmpy": [[239, 0, 0, "-", "model"], [240, 0, 0, "-", "modeling"], [241, 0, 0, "-", "tools"], [242, 0, 0, "-", "workflows"], [247, 6, 1, "cmdoption-pharmpy-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-version", "--version"], [247, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "ExplicitODESystem"], [17, 1, 1, "", "Infusion"], [18, 1, 1, "", "JointNormalDistribution"], [19, 1, 1, "", "Model"], [20, 4, 1, "", "ModelError"], [21, 4, 1, "", "ModelSyntaxError"], [22, 4, 1, "", "ModelfitResultsError"], [23, 1, 1, "", "NormalDistribution"], [24, 1, 1, "", "ODESystem"], [25, 1, 1, "", "Parameter"], [26, 1, 1, "", "Parameters"], [27, 1, 1, "", "RandomVariables"], [28, 1, 1, "", "Results"], [29, 1, 1, "", "Statement"], [30, 1, 1, "", "Statements"], [31, 1, 1, "", "VariabilityHierarchy"], [32, 1, 1, "", "VariabilityLevel"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "subs"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 3, 1, "", "datatype"], [6, 2, 1, "", "derive"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 3, 1, "", "scale"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "subs"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 3, 1, "", "dosing_compartment"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "output_compartment"], [8, 3, 1, "", "peripheral_compartments"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 2, 1, "", "to_compartmental_system"], [8, 2, 1, "", "to_explicit_system"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "derive"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "derive"], [13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "derive"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "to_dataframe"]], "pharmpy.model.ExplicitODESystem": [[16, 3, 1, "", "amounts"], [16, 3, 1, "", "compartment_names"], [16, 3, 1, "", "free_symbols"], [16, 3, 1, "", "ics"], [16, 3, 1, "", "odes"], [16, 3, 1, "", "rhs_symbols"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_compartmental_system"], [16, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Infusion": [[17, 3, 1, "", "amount"], [17, 2, 1, "", "create"], [17, 3, 1, "", "duration"], [17, 3, 1, "", "free_symbols"], [17, 3, 1, "", "rate"], [17, 2, 1, "", "subs"]], "pharmpy.model.JointNormalDistribution": [[18, 2, 1, "", "create"], [18, 2, 1, "", "derive"], [18, 2, 1, "", "evalf"], [18, 3, 1, "", "free_symbols"], [18, 2, 1, "", "get_covariance"], [18, 2, 1, "", "get_variance"], [18, 2, 1, "", "latex_string"], [18, 3, 1, "", "level"], [18, 3, 1, "", "mean"], [18, 3, 1, "", "names"], [18, 2, 1, "", "subs"], [18, 3, 1, "", "variance"]], "pharmpy.model.Model": [[19, 2, 1, "", "copy"], [19, 2, 1, "", "create_model"], [19, 3, 1, "", "datainfo"], [19, 3, 1, "", "dataset"], [19, 3, 1, "", "dependent_variable"], [19, 3, 1, "", "description"], [19, 3, 1, "", "estimation_steps"], [19, 3, 1, "", "filename_extension"], [19, 2, 1, "", "has_same_dataset_as"], [19, 3, 1, "", "initial_individual_estimates"], [19, 3, 1, "", "model_code"], [19, 3, 1, "", "modelfit_results"], [19, 3, 1, "", "name"], [19, 3, 1, "", "observation_transformation"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "parent_model"], [19, 3, 1, "", "random_variables"], [19, 3, 1, "", "statements"], [19, 2, 1, "", "update_datainfo"], [19, 3, 1, "", "value_type"]], "pharmpy.model.NormalDistribution": [[23, 2, 1, "", "create"], [23, 2, 1, "", "derive"], [23, 2, 1, "", "evalf"], [23, 3, 1, "", "free_symbols"], [23, 2, 1, "", "get_covariance"], [23, 2, 1, "", "get_variance"], [23, 2, 1, "", "latex_string"], [23, 3, 1, "", "level"], [23, 3, 1, "", "mean"], [23, 3, 1, "", "names"], [23, 2, 1, "", "subs"], [23, 3, 1, "", "variance"]], "pharmpy.model.ODESystem": [[24, 2, 1, "", "to_compartmental_system"], [24, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Parameter": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "init"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "name"], [25, 2, 1, "", "replace"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[26, 3, 1, "", "fix"], [26, 3, 1, "", "fixed"], [26, 3, 1, "", "inits"], [26, 3, 1, "", "lower"], [26, 3, 1, "", "names"], [26, 3, 1, "", "nonfixed"], [26, 2, 1, "", "set_fix"], [26, 2, 1, "", "set_initial_estimates"], [26, 3, 1, "", "symbols"], [26, 2, 1, "", "to_dataframe"], [26, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[27, 3, 1, "", "covariance_matrix"], [27, 2, 1, "", "create"], [27, 2, 1, "", "derive"], [27, 3, 1, "", "epsilon_levels"], [27, 3, 1, "", "epsilons"], [27, 3, 1, "", "eta_levels"], [27, 3, 1, "", "etas"], [27, 3, 1, "", "free_symbols"], [27, 2, 1, "", "get_covariance"], [27, 2, 1, "", "get_rvs_with_same_dist"], [27, 3, 1, "", "iiv"], [27, 3, 1, "", "iov"], [27, 2, 1, "", "join"], [27, 3, 1, "", "names"], [27, 2, 1, "", "nearest_valid_parameters"], [27, 3, 1, "", "nrvs"], [27, 3, 1, "", "parameter_names"], [27, 2, 1, "", "parameters_sdcorr"], [27, 2, 1, "", "sample"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "unjoin"], [27, 2, 1, "", "validate_parameters"], [27, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_and_reset_index"], [28, 2, 1, "", "to_csv"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[29, 3, 1, "", "free_symbols"], [29, 3, 1, "", "rhs_symbols"], [29, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[30, 3, 1, "", "after_odes"], [30, 3, 1, "", "before_odes"], [30, 2, 1, "", "dependencies"], [30, 2, 1, "", "direct_dependencies"], [30, 3, 1, "", "error"], [30, 2, 1, "", "find_assignment"], [30, 2, 1, "", "find_assignment_index"], [30, 3, 1, "", "free_symbols"], [30, 2, 1, "", "full_expression"], [30, 3, 1, "", "ode_system"], [30, 2, 1, "", "reassign"], [30, 2, 1, "", "remove_symbol_definitions"], [30, 2, 1, "", "subs"], [30, 2, 1, "", "to_compartmental_system"], [30, 2, 1, "", "to_explicit_system"]], "pharmpy.model.VariabilityHierarchy": [[31, 3, 1, "", "levels"], [31, 3, 1, "", "names"]], "pharmpy.model.VariabilityLevel": [[32, 2, 1, "", "create"], [32, 3, 1, "", "group"], [32, 3, 1, "", "name"], [32, 3, 1, "", "reference"], [32, 2, 1, "", "replace"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_peripheral_compartment"], [42, 5, 1, "", "add_pk_iiv"], [43, 5, 1, "", "add_population_parameter"], [44, 5, 1, "", "add_time_after_dose"], [45, 5, 1, "", "append_estimation_step_options"], [46, 5, 1, "", "bump_model_number"], [47, 5, 1, "", "calculate_aic"], [48, 5, 1, "", "calculate_bic"], [49, 5, 1, "", "calculate_corr_from_cov"], [50, 5, 1, "", "calculate_corr_from_inf"], [51, 5, 1, "", "calculate_cov_from_corrse"], [52, 5, 1, "", "calculate_cov_from_inf"], [53, 5, 1, "", "calculate_epsilon_gradient_expression"], [54, 5, 1, "", "calculate_eta_gradient_expression"], [55, 5, 1, "", "calculate_eta_shrinkage"], [56, 5, 1, "", "calculate_individual_parameter_statistics"], [57, 5, 1, "", "calculate_individual_shrinkage"], [58, 5, 1, "", "calculate_inf_from_corrse"], [59, 5, 1, "", "calculate_inf_from_cov"], [60, 5, 1, "", "calculate_parameters_from_ucp"], [61, 5, 1, "", "calculate_pk_parameters_statistics"], [62, 5, 1, "", "calculate_se_from_cov"], [63, 5, 1, "", "calculate_se_from_inf"], [64, 5, 1, "", "calculate_ucp_scale"], [65, 5, 1, "", "check_dataset"], [66, 5, 1, "", "check_high_correlations"], [67, 5, 1, "", "check_parameters_near_bounds"], [68, 5, 1, "", "cleanup_model"], [69, 5, 1, "", "convert_model"], [70, 5, 1, "", "copy_model"], [71, 5, 1, "", "create_joint_distribution"], [72, 5, 1, "", "create_report"], [73, 5, 1, "", "create_rng"], [74, 5, 1, "", "create_symbol"], [75, 5, 1, "", "deidentify_data"], [76, 5, 1, "", "drop_columns"], [77, 5, 1, "", "drop_dropped_columns"], [78, 5, 1, "", "evaluate_epsilon_gradient"], [79, 5, 1, "", "evaluate_eta_gradient"], [80, 5, 1, "", "evaluate_expression"], [81, 5, 1, "", "evaluate_individual_prediction"], [82, 5, 1, "", "evaluate_population_prediction"], [83, 5, 1, "", "evaluate_weighted_residuals"], [84, 5, 1, "", "expand_additional_doses"], [85, 5, 1, "", "find_clearance_parameters"], [86, 5, 1, "", "find_volume_parameters"], [87, 5, 1, "", "fix_or_unfix_parameters"], [88, 5, 1, "", "fix_parameters"], [89, 5, 1, "", "fix_parameters_to"], [90, 5, 1, "", "generate_model_code"], [91, 5, 1, "", "get_baselines"], [92, 5, 1, "", "get_bioavailability"], [93, 5, 1, "", "get_cmt"], [94, 5, 1, "", "get_concentration_parameters_from_data"], [95, 5, 1, "", "get_config_path"], [96, 5, 1, "", "get_covariate_baselines"], [97, 5, 1, "", "get_doseid"], [98, 5, 1, "", "get_doses"], [99, 5, 1, "", "get_evid"], [100, 5, 1, "", "get_ids"], [101, 5, 1, "", "get_individual_parameters"], [102, 5, 1, "", "get_individual_prediction_expression"], [103, 5, 1, "", "get_lag_times"], [104, 5, 1, "", "get_mdv"], [105, 5, 1, "", "get_model_covariates"], [106, 5, 1, "", "get_number_of_individuals"], [107, 5, 1, "", "get_number_of_observations"], [108, 5, 1, "", "get_number_of_observations_per_individual"], [109, 5, 1, "", "get_observation_expression"], [110, 5, 1, "", "get_observations"], [111, 5, 1, "", "get_omegas"], [112, 5, 1, "", "get_pk_parameters"], [113, 5, 1, "", "get_population_prediction_expression"], [114, 5, 1, "", "get_rv_parameters"], [115, 5, 1, "", "get_sigmas"], [116, 5, 1, "", "get_thetas"], [117, 5, 1, "", "get_unit_of"], [118, 5, 1, "", "greekify_model"], [119, 5, 1, "", "has_additive_error_model"], [120, 5, 1, "", "has_combined_error_model"], [121, 5, 1, "", "has_covariate_effect"], [122, 5, 1, "", "has_first_order_elimination"], [123, 5, 1, "", "has_michaelis_menten_elimination"], [124, 5, 1, "", "has_mixed_mm_fo_elimination"], [125, 5, 1, "", "has_proportional_error_model"], [126, 5, 1, "", "has_random_effect"], [127, 5, 1, "", "has_zero_order_absorption"], [128, 5, 1, "", "has_zero_order_elimination"], [129, 5, 1, "", "list_time_varying_covariates"], [130, 5, 1, "", "load_example_model"], [131, 5, 1, "", "make_declarative"], [132, 5, 1, "", "mu_reference_model"], [133, 5, 1, "", "omit_data"], [134, 5, 1, "", "plot_individual_predictions"], [135, 5, 1, "", "plot_iofv_vs_iofv"], [136, 5, 1, "", "print_model_code"], [137, 5, 1, "", "print_model_symbols"], [138, 5, 1, "", "read_dataset_from_datainfo"], [139, 5, 1, "", "read_model"], [140, 5, 1, "", "read_model_from_database"], [141, 5, 1, "", "read_model_from_string"], [142, 5, 1, "", "remove_covariance_step"], [143, 5, 1, "", "remove_covariate_effect"], [144, 5, 1, "", "remove_error_model"], [145, 5, 1, "", "remove_estimation_step"], [146, 5, 1, "", "remove_iiv"], [147, 5, 1, "", "remove_iov"], [148, 5, 1, "", "remove_lag_time"], [149, 5, 1, "", "remove_loq_data"], [150, 5, 1, "", "remove_peripheral_compartment"], [151, 5, 1, "", "remove_unused_parameters_and_rvs"], [152, 5, 1, "", "rename_symbols"], [153, 5, 1, "", "resample_data"], [154, 5, 1, "", "sample_individual_estimates"], [155, 5, 1, "", "sample_parameters_from_covariance_matrix"], [156, 5, 1, "", "sample_parameters_uniformly"], [157, 5, 1, "", "set_additive_error_model"], [158, 5, 1, "", "set_bolus_absorption"], [159, 5, 1, "", "set_combined_error_model"], [160, 5, 1, "", "set_covariates"], [161, 5, 1, "", "set_dtbs_error_model"], [162, 5, 1, "", "set_estimation_step"], [163, 5, 1, "", "set_evaluation_step"], [164, 5, 1, "", "set_first_order_absorption"], [165, 5, 1, "", "set_first_order_elimination"], [166, 5, 1, "", "set_iiv_on_ruv"], [167, 5, 1, "", "set_initial_estimates"], [168, 5, 1, "", "set_lower_bounds"], [169, 5, 1, "", "set_michaelis_menten_elimination"], [170, 5, 1, "", "set_mixed_mm_fo_elimination"], [171, 5, 1, "", "set_name"], [172, 5, 1, "", "set_ode_solver"], [173, 5, 1, "", "set_peripheral_compartments"], [174, 5, 1, "", "set_power_on_ruv"], [175, 5, 1, "", "set_proportional_error_model"], [176, 5, 1, "", "set_seq_zo_fo_absorption"], [177, 5, 1, "", "set_time_varying_error_model"], [178, 5, 1, "", "set_transit_compartments"], [179, 5, 1, "", "set_upper_bounds"], [180, 5, 1, "", "set_weighted_error_model"], [181, 5, 1, "", "set_zero_order_absorption"], [182, 5, 1, "", "set_zero_order_elimination"], [183, 5, 1, "", "simplify_expression"], [184, 5, 1, "", "solve_ode_system"], [185, 5, 1, "", "split_joint_distribution"], [186, 5, 1, "", "transform_etas_boxcox"], [187, 5, 1, "", "transform_etas_john_draper"], [188, 5, 1, "", "transform_etas_tdist"], [189, 5, 1, "", "translate_nmtran_time"], [190, 5, 1, "", "unconstrain_parameters"], [191, 5, 1, "", "undrop_columns"], [192, 5, 1, "", "unfix_parameters"], [193, 5, 1, "", "unfix_parameters_to"], [194, 5, 1, "", "update_initial_individual_estimates"], [195, 5, 1, "", "update_inits"], [196, 5, 1, "", "use_thetas_for_error_stdev"], [197, 5, 1, "", "write_csv"], [198, 5, 1, "", "write_model"]], "pharmpy.tools": [[199, 5, 1, "", "create_results"], [200, 5, 1, "", "fit"], [201, 5, 1, "", "predict_influential_individuals"], [202, 5, 1, "", "predict_influential_outliers"], [203, 5, 1, "", "predict_outliers"], [204, 5, 1, "", "print_fit_summary"], [205, 5, 1, "", "rank_models"], [206, 5, 1, "", "read_modelfit_results"], [207, 5, 1, "", "read_results"], [208, 5, 1, "", "retrieve_final_model"], [209, 5, 1, "", "retrieve_models"], [210, 5, 1, "", "run_allometry"], [211, 5, 1, "", "run_amd"], [212, 5, 1, "", "run_covsearch"], [213, 5, 1, "", "run_iivsearch"], [214, 5, 1, "", "run_iovsearch"], [215, 5, 1, "", "run_modelfit"], [216, 5, 1, "", "run_modelsearch"], [217, 5, 1, "", "run_ruvsearch"], [218, 5, 1, "", "run_tool"], [219, 5, 1, "", "summarize_errors"], [220, 5, 1, "", "summarize_individuals"], [221, 5, 1, "", "summarize_individuals_count_table"], [222, 5, 1, "", "summarize_modelfit_results"], [223, 5, 1, "", "write_results"]], "pharmpy.workflows": [[224, 1, 1, "", "LocalDirectoryDatabase"], [225, 1, 1, "", "LocalDirectoryToolDatabase"], [226, 1, 1, "", "LocalModelDirectoryDatabase"], [227, 1, 1, "", "Log"], [228, 1, 1, "", "ModelDatabase"], [229, 1, 1, "", "NullModelDatabase"], [230, 1, 1, "", "NullToolDatabase"], [231, 1, 1, "", "Task"], [232, 1, 1, "", "ToolDatabase"], [233, 1, 1, "", "Workflow"], [234, 5, 1, "", "call_workflow"], [235, 3, 1, "", "default_model_database"], [236, 3, 1, "", "default_tool_database"], [237, 5, 1, "", "execute_workflow"], [238, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[224, 2, 1, "", "retrieve_file"], [224, 2, 1, "", "retrieve_local_files"], [224, 2, 1, "", "retrieve_model"], [224, 2, 1, "", "retrieve_modelfit_results"], [224, 2, 1, "", "store_local_file"], [224, 2, 1, "", "store_metadata"], [224, 2, 1, "", "store_model"], [224, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[225, 2, 1, "", "from_dict"], [225, 2, 1, "", "read_metadata"], [225, 2, 1, "", "store_local_file"], [225, 2, 1, "", "store_metadata"], [225, 2, 1, "", "store_results"], [225, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[226, 2, 1, "", "list_models"], [226, 2, 1, "", "snapshot"], [226, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[227, 2, 1, "", "from_dict"], [227, 3, 1, "", "log"], [227, 2, 1, "", "log_error"], [227, 2, 1, "", "log_warning"], [227, 2, 1, "", "to_dataframe"], [227, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[228, 2, 1, "", "retrieve_file"], [228, 2, 1, "", "retrieve_local_files"], [228, 2, 1, "", "retrieve_model"], [228, 2, 1, "", "retrieve_modelfit_results"], [228, 2, 1, "", "snapshot"], [228, 2, 1, "", "store_local_file"], [228, 2, 1, "", "store_metadata"], [228, 2, 1, "", "store_model"], [228, 2, 1, "", "store_modelfit_results"], [228, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[229, 2, 1, "", "retrieve_file"], [229, 2, 1, "", "retrieve_local_files"], [229, 2, 1, "", "retrieve_model"], [229, 2, 1, "", "retrieve_modelfit_results"], [229, 2, 1, "", "store_local_file"], [229, 2, 1, "", "store_metadata"], [229, 2, 1, "", "store_model"], [229, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[230, 2, 1, "", "store_local_file"], [230, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[232, 3, 1, "", "model_database"], [232, 2, 1, "", "store_local_file"], [232, 2, 1, "", "store_results"]], "pharmpy-data-append": [[247, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [247, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[247, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[247, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [247, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[247, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [247, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[247, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [247, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [247, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [247, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [247, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [247, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [247, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[247, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[247, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[247, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[247, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[247, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[247, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[247, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [247, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[247, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[247, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [247, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[247, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[247, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [247, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [247, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[247, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[247, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [247, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [247, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [247, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [247, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[247, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[247, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[247, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[247, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [247, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [247, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [247, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[247, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[247, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[247, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[247, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[247, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[247, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[247, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[247, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[247, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[247, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[247, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[247, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [247, 6, 1, "cmdoption-pharmpy-run-amd-categorical", "--categorical"], [247, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [247, 6, 1, "cmdoption-pharmpy-run-amd-continuous", "--continuous"], [247, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-amd-lloq", "--lloq"], [247, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [247, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [247, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [247, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [247, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [247, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [247, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[247, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [247, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[247, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[247, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [247, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [247, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[247, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[247, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [247, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[247, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[247, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [247, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [247, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[247, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [247, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 268], "dataset": [0, 254, 278], "overview": [0, 270, 274], "pars": 0, "translat": 0, "step": [0, 276], "nm": 0, "tran": 0, "comment": 0, "line": [0, 247], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 254, 266], "date": 0, "id": 0, "check": [0, 250], "tabl": 0, "file": [0, 249, 254, 266], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 250], "all": 0, "zero": [0, 266], "individu": [0, 243, 244, 257, 263, 265, 266, 277], "control": 0, "stream": 0, "gener": [0, 262], "option": [0, 242, 278], "problem": 0, "data": [0, 242, 247], "eta": [0, 266], "code": [0, 248, 250, 264, 266], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 28, 243, 244, 247, 252, 253, 257, 259, 261, 263, 264, 265, 266, 267, 272, 274, 275, 276, 277, 278], "spars": 0, "matrix": [0, 243, 265], "allometri": [1, 2, 247], "run": [1, 2, 247, 250, 252, 259, 261, 266, 267, 275, 278], "argument": [1, 2, 252, 259, 261, 267, 275], "procedur": [1, 275], "The": [1, 243, 244, 247, 249, 253, 255, 257, 259, 263, 264, 266, 267, 272, 274, 275, 276, 277, 280], "automat": 2, "model": [2, 19, 239, 240, 247, 254, 255, 259, 264, 266, 267, 268, 272, 275, 278, 280], "develop": [2, 250, 251, 256], "amd": [2, 247], "input": [2, 251], "search": [2, 259, 267], "space": [2, 267], "order": [2, 266], "subtool": 2, "structur": [2, 259, 274], "iivsearch": [2, 247, 259], "iovsearch": [2, 247, 261], "residu": [2, 265, 274], "covari": [2, 243, 244, 257, 259, 265, 266, 274], "api": 3, "refer": [3, 244, 257], "assign": 4, "bolu": [5, 266], "columninfo": [6, 254], "compart": [7, 266], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 254], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 261, 266], "estimationstep": [14, 15], "explicitodesystem": 16, "infus": 17, "jointnormaldistribut": 18, "modelerror": 20, "modelsyntaxerror": 21, "modelfitresultserror": 22, "normaldistribut": 23, "odesystem": 24, "paramet": [25, 26, 243, 254, 255, 257, 264, 265, 266, 268], "randomvari": [27, 255], "statement": [29, 30, 255, 264], "variabilityhierarchi": 31, "variabilitylevel": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 247], "add_individual_paramet": 38, "add_iov": [39, 247], "add_lag_tim": 40, "add_peripheral_compart": 41, "add_pk_iiv": 42, "add_population_paramet": 43, "add_time_after_dos": 44, "append_estimation_step_opt": 45, "bump_model_numb": 46, "calculate_a": 47, "calculate_b": 48, "calculate_corr_from_cov": 49, "calculate_corr_from_inf": 50, "calculate_cov_from_corrs": 51, "calculate_cov_from_inf": 52, "calculate_epsilon_gradient_express": 53, "calculate_eta_gradient_express": 54, "calculate_eta_shrinkag": 55, "calculate_individual_parameter_statist": 56, "calculate_individual_shrinkag": 57, "calculate_inf_from_corrs": 58, "calculate_inf_from_cov": 59, "calculate_parameters_from_ucp": 60, "calculate_pk_parameters_statist": 61, "calculate_se_from_cov": 62, "calculate_se_from_inf": 63, "calculate_ucp_scal": 64, "check_dataset": 65, "check_high_correl": 66, "check_parameters_near_bound": 67, "cleanup_model": 68, "convert_model": 69, "copy_model": 70, "create_joint_distribut": [71, 247], "create_report": 72, "create_rng": 73, "create_symbol": 74, "deidentify_data": 75, "drop_column": 76, "drop_dropped_column": 77, "evaluate_epsilon_gradi": 78, "evaluate_eta_gradi": 79, "evaluate_express": 80, "evaluate_individual_predict": 81, "evaluate_population_predict": 82, "evaluate_weighted_residu": 83, "expand_additional_dos": 84, "find_clearance_paramet": 85, "find_volume_paramet": 86, "fix_or_unfix_paramet": 87, "fix_paramet": 88, "fix_parameters_to": 89, "generate_model_cod": 90, "get_baselin": 91, "get_bioavail": 92, "get_cmt": 93, "get_concentration_parameters_from_data": 94, "get_config_path": 95, "get_covariate_baselin": 96, "get_doseid": 97, "get_dos": 98, "get_evid": 99, "get_id": 100, "get_individual_paramet": 101, "get_individual_prediction_express": 102, "get_lag_tim": 103, "get_mdv": 104, "get_model_covari": 105, "get_number_of_individu": 106, "get_number_of_observ": 107, "get_number_of_observations_per_individu": 108, "get_observation_express": 109, "get_observ": 110, "get_omega": 111, "get_pk_paramet": 112, "get_population_prediction_express": 113, "get_rv_paramet": 114, "get_sigma": 115, "get_theta": 116, "get_unit_of": 117, "greekify_model": 118, "has_additive_error_model": 119, "has_combined_error_model": 120, "has_covariate_effect": 121, "has_first_order_elimin": 122, "has_michaelis_menten_elimin": 123, "has_mixed_mm_fo_elimin": 124, "has_proportional_error_model": 125, "has_random_effect": 126, "has_zero_order_absorpt": 127, "has_zero_order_elimin": 128, "list_time_varying_covari": 129, "load_example_model": 130, "make_declar": 131, "mu_reference_model": 132, "omit_data": 133, "plot_individual_predict": 134, "plot_iofv_vs_iofv": 135, "print_model_cod": 136, "print_model_symbol": 137, "read_dataset_from_datainfo": 138, "read_model": 139, "read_model_from_databas": 140, "read_model_from_str": 141, "remove_covariance_step": 142, "remove_covariate_effect": 143, "remove_error_model": 144, "remove_estimation_step": 145, "remove_iiv": [146, 247], "remove_iov": [147, 247], "remove_lag_tim": 148, "remove_loq_data": 149, "remove_peripheral_compart": 150, "remove_unused_parameters_and_rv": 151, "rename_symbol": 152, "resample_data": 153, "sample_individual_estim": 154, "sample_parameters_from_covariance_matrix": 155, "sample_parameters_uniformli": 156, "set_additive_error_model": 157, "set_bolus_absorpt": 158, "set_combined_error_model": 159, "set_covari": 160, "set_dtbs_error_model": 161, "set_estimation_step": 162, "set_evaluation_step": 163, "set_first_order_absorpt": 164, "set_first_order_elimin": 165, "set_iiv_on_ruv": 166, "set_initial_estim": 167, "set_lower_bound": 168, "set_michaelis_menten_elimin": 169, "set_mixed_mm_fo_elimin": 170, "set_nam": 171, "set_ode_solv": 172, "set_peripheral_compart": 173, "set_power_on_ruv": 174, "set_proportional_error_model": 175, "set_seq_zo_fo_absorpt": 176, "set_time_varying_error_model": 177, "set_transit_compart": 178, "set_upper_bound": 179, "set_weighted_error_model": 180, "set_zero_order_absorpt": 181, "set_zero_order_elimin": 182, "simplify_express": 183, "solve_ode_system": 184, "split_joint_distribut": 185, "transform_etas_boxcox": 186, "transform_etas_john_drap": 187, "transform_etas_tdist": 188, "translate_nmtran_tim": 189, "unconstrain_paramet": 190, "undrop_column": 191, "unfix_paramet": 192, "unfix_parameters_to": 193, "update_initial_individual_estim": 194, "update_init": [195, 247], "use_thetas_for_error_stdev": 196, "write_csv": 197, "write_model": 198, "create_result": 199, "fit": [200, 266], "predict_influential_individu": 201, "predict_influential_outli": 202, "predict_outli": 203, "print_fit_summari": 204, "rank_model": 205, "read_modelfit_result": 206, "read_result": 207, "retrieve_final_model": 208, "retrieve_model": 209, "run_allometri": 210, "run_amd": 211, "run_covsearch": 212, "run_iivsearch": 213, "run_iovsearch": 214, "run_modelfit": 215, "run_modelsearch": 216, "run_ruvsearch": 217, "run_tool": 218, "summarize_error": 219, "summarize_individu": 220, "summarize_individuals_count_t": 221, "summarize_modelfit_result": 222, "write_result": 223, "localdirectorydatabas": 224, "localdirectorytooldatabas": 225, "localmodeldirectorydatabas": 226, "log": 227, "modeldatabas": 228, "nullmodeldatabas": 229, "nulltooldatabas": 230, "task": 231, "tooldatabas": 232, "workflow": [233, 242, 250], "call_workflow": 234, "default_model_databas": 235, "default_tool_databas": 236, "execute_workflow": 237, "split_common_opt": 238, "pharmpi": [239, 240, 241, 242, 246, 247, 248, 250, 254, 255, 260, 264, 269, 273, 278, 280], "packag": [239, 240, 241, 242], "class": [239, 242, 255], "function": [240, 241, 242], "tool": [241, 273, 278], "modul": [242, 255], "bootstrap": [243, 247], "postprocess": [243, 257], "statist": 243, "ofv": [243, 244, 247, 253, 257, 263, 265, 276, 277], "includ": 243, "case": 244, "delet": 244, "diagnost": 244, "cdd": [244, 247], "cook": 244, "score": 244, "jackknif": 244, "cookscor": 244, "ratio": 244, "delta": 244, "skip": 244, "column": 244, "changelog": 245, "0": 245, "84": 245, "1": 245, "2022": 245, "11": 245, "13": 245, "chang": [245, 269], "bug": 245, "fix": [245, 266], "09": 245, "new": [245, 261, 266, 268], "featur": [245, 267, 278], "83": 245, "01": 245, "82": 245, "10": 245, "24": 245, "81": 245, "21": 245, "80": 245, "19": 245, "79": 245, "16": 245, "78": 245, "20": 245, "bugfix": 245, "77": 245, "08": 245, "76": 245, "06": 245, "05": 245, "75": 245, "74": 245, "07": 245, "18": 245, "73": 245, "72": 245, "71": 245, "70": 245, "17": 245, "69": 245, "04": 245, "29": 245, "68": 245, "27": 245, "67": 245, "25": 245, "66": 245, "65": 245, "14": 245, "64": 245, "12": 245, "63": 245, "62": 245, "61": 245, "03": 245, "31": 245, "59": 245, "58": 245, "4": 245, "22": 245, "57": 245, "56": 245, "55": 245, "54": 245, "53": 245, "52": 245, "02": 245, "51": 245, "50": 245, "49": 245, "48": 245, "47": 245, "28": 245, "46": 245, "45": 245, "44": 245, "43": 245, "42": 245, "41": 245, "2021": 245, "40": 245, "39": 245, "15": 245, "38": 245, "37": 245, "26": 245, "36": 245, "35": 245, "34": 245, "3": 245, "2": [245, 262], "33": 245, "32": 245, "30": 245, "23": 245, "2020": 245, "9": 245, "8": 245, "7": 245, "6": 245, "5": 245, "2018": 245, "citat": 246, "how": 246, "cite": 246, "pharmr": [246, 280], "command": 247, "interfac": 247, "append": 247, "deidentifi": 247, "filter": 247, "print": 247, "resampl": 247, "write": [247, 264, 266, 268], "info": 247, "absorption_r": 247, "add_cov_effect": 247, "boxcox": [247, 266, 274], "elimination_r": 247, "error": [247, 265, 266, 274, 280], "iiv_on_ruv": 247, "john_drap": 247, "peripheral_compart": 247, "power_on_ruv": 247, "sampl": [247, 277], "tdist": [247, 274], "transit_compart": 247, "frem": [247, 257], "linear": [247, 263], "qa": [247, 274], "report": 247, "ruvsearch": [247, 275], "scm": [247, 276], "simev": [247, 277], "summari": [247, 276, 277], "covsearch": [247, 252], "estmethod": 247, "execut": 247, "modelsearch": [247, 267], "commun": 248, "conduct": 248, "configur": 249, "environ": [249, 250], "variabl": [249, 257, 264, 268], "contribut": 250, "set": [250, 264, 266, 269], "up": 250, "support": 250, "platform": 250, "instal": [250, 258, 280], "python": [250, 280], "git": 250, "fork": 250, "clone": 250, "repositori": 250, "tox": 250, "graphviz": 250, "us": [250, 268, 280], "build": 250, "document": [250, 256], "unit": [250, 254], "test": 250, "integr": 250, "usabl": 250, "virtual": 250, "standard": [250, 265, 266], "releas": 250, "version": [250, 280], "inform": [250, 254, 265], "contributor": 251, "scientif": 251, "fund": 251, "effect": [252, 257, 266, 274], "wildcard": 252, "algorithm": [252, 259, 261, 267], "crossval": 253, "crossvalid": 253, "retriev": 254, "from": [254, 266], "updat": [254, 264, 266, 280], "subject": 254, "observ": 254, "dose": 254, "extract": 254, "group": 254, "after": 254, "concentr": 254, "type": [254, 278], "scale": 254, "continu": 254, "categori": 254, "drop": 254, "datatyp": 254, "descriptor": 254, "design": 255, "principl": 255, "level": 255, "architectur": 255, "heart": 255, "docstr": 255, "depend": 255, "coeffici": 257, "unexplain": 257, "estim": [257, 264, 265, 266], "valu": 257, "get": [258, 264, 266], "start": [258, 259], "A": 258, "first": [258, 266], "exampl": [258, 278], "brute": 259, "forc": 259, "number": [259, 266], "iiv": [259, 266, 267], "full": 259, "ad": [259, 266, 267], "compar": [259, 261, 267], "rank": [259, 261, 267], "candid": [259, 261, 267, 276], "welcom": 260, "iov": [261, 266], "licens": 262, "logo": 262, "copyright": 262, "bsd": 262, "claus": 262, "gnu": 262, "lesser": 262, "public": 262, "read": [264, 265, 266, 268], "name": [264, 268], "random": [264, 268], "modelfit": [264, 265], "initi": [264, 266], "final": 265, "rel": 265, "correl": 265, "indiviud": 265, "predict": [265, 277], "basic": 266, "sourc": 266, "string": 266, "unfix": 266, "add": 266, "pk": 266, "od": 266, "system": 266, "absorpt": 266, "rate": 266, "sequenti": 266, "delai": 266, "transit": 266, "lag": 266, "elimin": 266, "micha": 266, "menten": 266, "mix": 266, "peripher": 266, "remov": 266, "transform": 266, "approxim": 266, "t": 266, "john": 266, "draper": 266, "an": 266, "addit": 266, "proport": 266, "combin": [266, 267], "appli": 266, "ruv": 266, "power": 266, "deviat": 266, "epsilon": 266, "theta": 266, "weight": 266, "dtb": 266, "creat": 266, "joint": 266, "multipl": 266, "between": [266, 267], "previou": 266, "psn": [266, 273], "shrinkag": 266, "calcul": 266, "common": [267, 278], "behaviour": 267, "exclus": 267, "exhaust": 267, "stepwis": 267, "reduc": 267, "dure": 267, "plugin": [268, 270], "plot": [269, 277], "theme": 269, "axi": 269, "project": 271, "suggest": 271, "resmod": 272, "connect": 273, "bia": 274, "fullblock": 274, "databas": 278, "directori": 278, "metadata": 278, "languag": 278, "mfl": 278, "symbol": 278, "describ": 278, "interv": 278, "redund": 278, "descript": 278, "user": 279, "guid": 279, "r": 280, "troubl": 280, "shoot": 280, "wrong": 280, "import": 280, "gotcha": 280, "object": 280, "list": 280, "indic": 280, "datafram": 280, "multiindex": 280, "float": 280, "integ": 280, "singl": 280, "element": 280, "vector": 280}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"bump_model_number": [[46, "bump-model-number"]], "calculate_aic": [[47, "calculate-aic"]], "check_parameters_near_bounds": [[67, "check-parameters-near-bounds"]], "add_time_after_dose": [[44, "add-time-after-dose"]], "calculate_se_from_inf": [[63, "calculate-se-from-inf"]], "calculate_epsilon_gradient_expression": [[53, "calculate-epsilon-gradient-expression"]], "calculate_inf_from_corrse": [[58, "calculate-inf-from-corrse"]], "calculate_eta_shrinkage": [[55, "calculate-eta-shrinkage"]], "add_lag_time": [[40, "add-lag-time"]], "calculate_parameters_from_ucp": [[60, "calculate-parameters-from-ucp"]], "copy_model": [[70, "copy-model"]], "calculate_eta_gradient_expression": [[54, "calculate-eta-gradient-expression"]], "calculate_corr_from_inf": [[50, "calculate-corr-from-inf"]], "calculate_inf_from_cov": [[59, "calculate-inf-from-cov"]], "calculate_se_from_cov": [[62, "calculate-se-from-cov"]], "add_iov": [[39, "add-iov"]], "calculate_individual_shrinkage": [[57, "calculate-individual-shrinkage"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "calculate_bic": [[48, "calculate-bic"]], "add_iiv": [[37, "add-iiv"]], "calculate_cov_from_corrse": [[51, "calculate-cov-from-corrse"]], "add_pk_iiv": [[42, "add-pk-iiv"]], "add_peripheral_compartment": [[41, "add-peripheral-compartment"]], "convert_model": [[69, "convert-model"]], "calculate_corr_from_cov": [[49, "calculate-corr-from-cov"]], "create_report": [[72, "create-report"]], "create_rng": [[73, "create-rng"]], "cleanup_model": [[68, "cleanup-model"]], "calculate_ucp_scale": [[64, "calculate-ucp-scale"]], "append_estimation_step_options": [[45, "append-estimation-step-options"]], "add_population_parameter": [[43, "add-population-parameter"]], "calculate_cov_from_inf": [[52, "calculate-cov-from-inf"]], "calculate_pk_parameters_statistics": [[61, "calculate-pk-parameters-statistics"]], "check_high_correlations": [[66, "check-high-correlations"]], "check_dataset": [[65, "check-dataset"]], "calculate_individual_parameter_statistics": [[56, "calculate-individual-parameter-statistics"]], "create_joint_distribution": [[71, "create-joint-distribution"]], "Compartment": [[7, "compartment"]], "add_allometry": [[33, "add-allometry"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "ColumnInfo": [[6, "columninfo"], [254, "columninfo"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [259, "running"], [261, "running"], [267, "running"], [275, "running"], [252, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [259, "arguments"], [261, "arguments"], [267, "arguments"], [275, "arguments"], [252, "arguments"]], "Procedure": [[1, "procedure"], [275, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "ModelfitResultsError": [[22, "modelfitresultserror"]], "Statement": [[29, "statement"]], "DatasetWarning": [[12, "datasetwarning"]], "ModelSyntaxError": [[21, "modelsyntaxerror"]], "Results": [[28, "results"], [2, "results"], [261, "results"], [278, "results"], [252, "results"]], "ODESystem": [[24, "odesystem"]], "EstimationStep": [[14, "estimationstep"]], "Model": [[19, "model"]], "add_covariance_step": [[34, "add-covariance-step"]], "Bolus": [[5, "bolus"]], "ModelError": [[20, "modelerror"]], "Infusion": [[17, "infusion"]], "Distribution": [[13, "distribution"], [266, "distribution"]], "DataInfo": [[10, "datainfo"], [254, "datainfo"]], "Parameters": [[26, "parameters"], [266, "parameters"]], "Parameter": [[25, "parameter"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "add_estimation_step": [[36, "add-estimation-step"]], "ExplicitODESystem": [[16, "explicitodesystem"]], "RandomVariables": [[27, "randomvariables"]], "Statements": [[30, "statements"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "JointNormalDistribution": [[18, "jointnormaldistribution"]], "Assignment": [[4, "assignment"]], "NormalDistribution": [[23, "normaldistribution"]], "EstimationSteps": [[15, "estimationsteps"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [259, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [261, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "API Reference": [[3, "api-reference"]], "VariabilityLevel": [[32, "variabilitylevel"]], "DatasetError": [[11, "dataseterror"]], "VariabilityHierarchy": [[31, "variabilityhierarchy"]], "License": [[262, "license"]], "Logo": [[262, "logo"]], "Copyright": [[262, "copyright"]], "BSD 2-clause License": [[262, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[262, "gnu-lesser-general-public-license"]], "Reading modelfit results": [[265, "reading-modelfit-results"]], "Modelfit results": [[265, "modelfit-results"], [264, "modelfit-results"]], "Final OFV": [[265, "final-ofv"]], "Parameter estimates": [[265, "parameter-estimates"], [257, "parameter-estimates"]], "Standard errors of parameter estimates": [[265, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[265, "relative-standard-errors-of-parameter-estimates"]], "Covariance matrix": [[265, "covariance-matrix"], [243, "covariance-matrix"]], "Correlation Matrix": [[265, "correlation-matrix"]], "Information Matrix": [[265, "information-matrix"]], "Indiviudal OFV": [[265, "indiviudal-ofv"]], "Predictions": [[265, "predictions"]], "Residuals": [[265, "residuals"]], "Individual estimates": [[265, "individual-estimates"]], "Pharmpy in R": [[280, "pharmpy-in-r"]], "Installing pharmr": [[280, "installing-pharmr"]], "Updating": [[280, "updating"]], "Trouble shooting": [[280, "trouble-shooting"]], "Wrong Python version": [[280, "wrong-python-version"]], "Error importing Pharmpy": [[280, "error-importing-pharmpy"]], "Using pharmr": [[280, "using-pharmr"]], "Gotchas": [[280, "gotchas"]], "The model object": [[280, "the-model-object"]], "List indices": [[280, "list-indices"]], "Dataframes with multiindex": [[280, "dataframes-with-multiindex"]], "Floats and integers": [[280, "floats-and-integers"]], "Single element vectors": [[280, "single-element-vectors"]], "Using the NONMEM plugin": [[268, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[268, "names-of-parameters-and-random-variables"]], "Reading in a model": [[268, "reading-in-a-model"], [264, "reading-in-a-model"]], "New parameters and random variables": [[268, "new-parameters-and-random-variables"]], "Writing a model": [[268, "writing-a-model"], [264, "writing-a-model"]], "Project suggestions": [[271, "project-suggestions"]], "Modeling": [[266, "modeling"]], "Basic modeling": [[266, "basic-modeling"]], "Reading, writing and updating source models": [[266, "reading-writing-and-updating-source-models"]], "Read model from file": [[266, "read-model-from-file"]], "Read model from string": [[266, "read-model-from-string"]], "Getting the model code": [[266, "getting-the-model-code"], [264, "getting-the-model-code"]], "Write model to file": [[266, "write-model-to-file"]], "Fix and unfix parameters": [[266, "fix-and-unfix-parameters"]], "Add parameter": [[266, "add-parameter"]], "PK models and ODE systems": [[266, "pk-models-and-ode-systems"]], "Absorption rate": [[266, "absorption-rate"]], "Bolus absorption": [[266, "bolus-absorption"]], "Zero order": [[266, "zero-order"]], "First order": [[266, "first-order"]], "Sequential zero-order then first-order": [[266, "sequential-zero-order-then-first-order"]], "Absorption delay": [[266, "absorption-delay"]], "Transit compartments": [[266, "transit-compartments"]], "Lag time": [[266, "lag-time"]], "Elimination rate": [[266, "elimination-rate"]], "First-order elimination": [[266, "first-order-elimination"]], "Zero-order elimination": [[266, "zero-order-elimination"]], "Michaelis-Menten elimination": [[266, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[266, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[266, "add-peripheral-compartment"]], "Remove peripheral compartment": [[266, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[266, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[266, "adding-covariate-effects"]], "Transformation of etas": [[266, "transformation-of-etas"]], "Boxcox": [[266, "boxcox"], [274, "boxcox"]], "Approximate t-distribution": [[266, "approximate-t-distribution"]], "John Draper": [[266, "john-draper"]], "Adding new etas": [[266, "adding-new-etas"]], "Adding IIVs": [[266, "adding-iivs"]], "Adding IOVs": [[266, "adding-iovs"]], "Removing etas": [[266, "removing-etas"]], "Remove IIVs": [[266, "remove-iivs"]], "Remove IOVs": [[266, "remove-iovs"]], "The error model": [[266, "the-error-model"]], "Removing the error model": [[266, "removing-the-error-model"]], "Setting an additive error model": [[266, "setting-an-additive-error-model"]], "Setting a proportional error model": [[266, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[266, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[266, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[266, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[266, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[266, "weighted-error-model"]], "dTBS error model": [[266, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[266, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[266, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[266, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[266, "fitting-a-model"]], "Getting results from a PsN run": [[266, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[266, "eta-shrinkage"]], "Individual parameter calculations": [[266, "individual-parameter-calculations"]], "scm": [[276, "scm"]], "The scm results": [[276, "the-scm-results"]], "Steps": [[276, "steps"]], "OFV Summary": [[276, "ofv-summary"]], "Candidate Summary": [[276, "candidate-summary"]], "QA": [[274, "qa"]], "The qa results": [[274, "the-qa-results"]], "Overview": [[274, "overview"]], "Structural bias": [[274, "structural-bias"]], "Fullblock": [[274, "fullblock"]], "Tdist": [[274, "tdist"]], "Residual error": [[274, "residual-error"]], "Covariate effects": [[274, "covariate-effects"], [257, "covariate-effects"]], "Algorithms": [[259, "algorithms"], [267, "algorithms"]], "Brute force search for number of IIVs": [[259, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[259, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[259, "full-brute-force-search"]], "Adding IIV to the start model": [[259, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[259, "comparing-and-ranking-candidates"], [261, "comparing-and-ranking-candidates"], [267, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[259, "the-iivsearch-results"]], "Algorithm": [[261, "algorithm"], [252, "algorithm"]], "Distribution of new IOVs": [[261, "distribution-of-new-iovs"]], "Modelsearch": [[267, "modelsearch"]], "The search space": [[267, "the-search-space"]], "Common behaviours between algorithms": [[267, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[267, "feature-combination-exclusions"]], "Exhaustive search": [[267, "exhaustive-search"]], "Exhaustive stepwise search": [[267, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[267, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[267, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[267, "the-modelsearch-results"]], "Linearize": [[263, "linearize"]], "The linearize results": [[263, "the-linearize-results"]], "OFVs": [[263, "ofvs"]], "Individual OFVs": [[263, "individual-ofvs"]], "ruvsearch": [[275, "ruvsearch"]], "Models": [[275, "models"]], "The RUVsearch results": [[275, "the-ruvsearch-results"]], "User guide": [[279, "user-guide"]], "Welcome to Pharmpy": [[260, "welcome-to-pharmpy"]], "PsN with Pharmpy": [[273, "psn-with-pharmpy"]], "Tools connected to PsN": [[273, "tools-connected-to-psn"]], "Simeval": [[277, "simeval"]], "The simeval results": [[277, "the-simeval-results"]], "Sampled Individual OFVs": [[277, "sampled-individual-ofvs"]], "Individual OFV summary": [[277, "individual-ofv-summary"]], "Individual prediction plot": [[277, "individual-prediction-plot"]], "The Pharmpy model": [[264, "the-pharmpy-model"]], "Model name": [[264, "model-name"]], "Model parameters": [[264, "model-parameters"]], "Parameter sets": [[264, "parameter-sets"]], "Random variables": [[264, "random-variables"]], "Model statements": [[264, "model-statements"]], "Updating initial estimates": [[264, "updating-initial-estimates"]], "Resmod": [[272, "resmod"]], "The resmod results": [[272, "the-resmod-results"]], "Resmod models": [[272, "resmod-models"]], "Tools": [[278, "tools"]], "Tools in Pharmpy": [[278, "tools-in-pharmpy"]], "Common options": [[278, "common-options"]], "Common features": [[278, "common-features"]], "Tool database": [[278, "tool-database"]], "Running directory": [[278, "running-directory"]], "Metadata": [[278, "metadata"]], "Datasets": [[278, "datasets"]], "Model feature language (MFL)": [[278, "model-feature-language-mfl"]], "Option types": [[278, "option-types"]], "Model features": [[278, "model-features"]], "Symbols": [[278, "symbols"]], "Describe intervals": [[278, "describe-intervals"]], "Redundant descriptions": [[278, "redundant-descriptions"]], "Examples": [[278, "examples"]], "Plugins": [[270, "plugins"]], "Overview of a plugin": [[270, "overview-of-a-plugin"]], "Plots in Pharmpy": [[269, "plots-in-pharmpy"]], "Setting themes": [[269, "setting-themes"]], "Changing axis of plots": [[269, "changing-axis-of-plots"]], "Log": [[227, "log"]], "pharmpy.model Package": [[239, "module-pharmpy.model"]], "Classes": [[239, "classes"], [242, "classes"]], "Task": [[231, "task"]], "Contribute": [[250, "contribute"]], "Set up the development environment": [[250, "set-up-the-development-environment"]], "Supported platforms": [[250, "supported-platforms"]], "Install Python": [[250, "install-python"]], "Install git": [[250, "install-git"]], "Fork and clone the code repository": [[250, "fork-and-clone-the-code-repository"]], "Install tox": [[250, "install-tox"]], "Install graphviz used for building the documentation": [[250, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[250, "using-the-development-environment"]], "Running tox": [[250, "running-tox"]], "Check code formatting": [[250, "check-code-formatting"]], "Run the unit tests": [[250, "run-the-unit-tests"]], "Build and test the documentation": [[250, "build-and-test-the-documentation"]], "Run the integration tests": [[250, "run-the-integration-tests"]], "Build a usable virtual environment": [[250, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[250, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[250, "releasing-pharmpy-and-documentation"]], "Version": [[250, "version"]], "Information for developers": [[250, "information-for-developers"]], "Datasets in Pharmpy": [[254, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[254, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[254, "update-the-dataset-of-a-model"]], "Subjects": [[254, "subjects"]], "Observations": [[254, "observations"]], "Dosing": [[254, "dosing"]], "Extract dosing information": [[254, "extract-dosing-information"]], "Dose grouping": [[254, "dose-grouping"]], "Time after dose": [[254, "time-after-dose"]], "Concentration parameters": [[254, "concentration-parameters"]], "type": [[254, "type"]], "scale": [[254, "scale"]], "continuous": [[254, "continuous"]], "categories": [[254, "categories"]], "unit": [[254, "unit"]], "drop": [[254, "drop"]], "datatype": [[254, "datatype"]], "descriptor": [[254, "descriptor"]], "datainfo file": [[254, "datainfo-file"]], "ModelDatabase": [[228, "modeldatabase"]], "default_model_database": [[235, "default-model-database"]], "Design principles": [[255, "design-principles"]], "Levels of the architecture": [[255, "levels-of-the-architecture"]], "The Heart, The Model Class": [[255, "the-heart-the-model-class"]], "pharmpy.Parameters": [[255, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[255, "pharmpy-randomvariables"]], "pharmpy.Statements": [[255, "pharmpy-statements"]], "The pharmpy.modeling module": [[255, "the-pharmpy-modeling-module"]], "Docstrings": [[255, "docstrings"]], "Dependencies": [[255, "dependencies"]], "Documentation for developers": [[256, "documentation-for-developers"]], "COVsearch": [[252, "covsearch"]], "Effects": [[252, "effects"]], "Wildcards": [[252, "wildcards"]], "pharmpy.modeling Package": [[240, "module-pharmpy.modeling"]], "Functions": [[240, "functions"], [241, "functions"], [242, "functions"]], "Bootstrap": [[243, "bootstrap"]], "The Bootstrap postprocessing and results": [[243, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[243, "parameter-statistics"]], "OFV statistics": [[243, "ofv-statistics"]], "Included individuals": [[243, "included-individuals"]], "Workflow": [[233, "workflow"]], "Crossval": [[253, "crossval"]], "The crossval results": [[253, "the-crossval-results"]], "Crossvalidation OFVs": [[253, "crossvalidation-ofvs"]], "default_tool_database": [[236, "default-tool-database"]], "FREM": [[257, "frem"]], "The FREM postprocessing and results": [[257, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[257, "parameter-covariate-coefficients"]], "Individual covariate effects": [[257, "individual-covariate-effects"]], "Unexplained variability": [[257, "unexplained-variability"]], "OFV": [[257, "ofv"]], "Estimated covariate values": [[257, "estimated-covariate-values"]], "References": [[257, "references"], [244, "references"]], "The Pharmpy command line interface": [[247, "the-pharmpy-command-line-interface"]], "pharmpy": [[247, "pharmpy"]], "pharmpy data": [[247, "pharmpy-data"]], "pharmpy data append": [[247, "pharmpy-data-append"]], "pharmpy data deidentify": [[247, "pharmpy-data-deidentify"]], "pharmpy data filter": [[247, "pharmpy-data-filter"]], "pharmpy data print": [[247, "pharmpy-data-print"]], "pharmpy data resample": [[247, "pharmpy-data-resample"]], "pharmpy data write": [[247, "pharmpy-data-write"]], "pharmpy info": [[247, "pharmpy-info"]], "pharmpy model": [[247, "pharmpy-model"]], "pharmpy model absorption_rate": [[247, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[247, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[247, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[247, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[247, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[247, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[247, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[247, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[247, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[247, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[247, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[247, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[247, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[247, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[247, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[247, "pharmpy-model-sample"]], "pharmpy model tdist": [[247, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[247, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[247, "pharmpy-model-update-inits"]], "pharmpy results": [[247, "pharmpy-results"]], "pharmpy results bootstrap": [[247, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[247, "pharmpy-results-cdd"]], "pharmpy results frem": [[247, "pharmpy-results-frem"]], "pharmpy results linearize": [[247, "pharmpy-results-linearize"]], "pharmpy results ofv": [[247, "pharmpy-results-ofv"]], "pharmpy results print": [[247, "pharmpy-results-print"]], "pharmpy results qa": [[247, "pharmpy-results-qa"]], "pharmpy results report": [[247, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[247, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[247, "pharmpy-results-scm"]], "pharmpy results simeval": [[247, "pharmpy-results-simeval"]], "pharmpy results summary": [[247, "pharmpy-results-summary"]], "pharmpy run": [[247, "pharmpy-run"]], "pharmpy run allometry": [[247, "pharmpy-run-allometry"]], "pharmpy run amd": [[247, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[247, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[247, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[247, "pharmpy-run-estmethod"]], "pharmpy run execute": [[247, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[247, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[247, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[247, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[247, "pharmpy-run-ruvsearch"]], "split_common_options": [[238, "split-common-options"]], "Citation": [[246, "citation"]], "How to cite Pharmpy and pharmr": [[246, "how-to-cite-pharmpy-and-pharmr"]], "summarize_modelfit_results": [[222, "summarize-modelfit-results"]], "Pharmpy Community Code of Conduct": [[248, "pharmpy-community-code-of-conduct"]], "Contributors": [[251, "authors"]], "Development": [[251, "development"]], "Scientific input": [[251, "scientific-input"]], "Funding": [[251, "funding"]], "LocalDirectoryToolDatabase": [[225, "localdirectorytooldatabase"]], "Getting started": [[258, "getting-started"]], "Installation": [[258, "installation"]], "A first example": [[258, "a-first-example"]], "NullModelDatabase": [[229, "nullmodeldatabase"]], "Changelog": [[245, "changelog"]], "0.84.1 (2022-11-13)": [[245, "id1"]], "Changes": [[245, "changes"], [245, "id3"], [245, "id5"], [245, "id8"], [245, "id13"], [245, "id16"], [245, "id20"], [245, "id23"], [245, "id25"], [245, "id30"], [245, "id34"], [245, "id37"], [245, "id41"], [245, "id44"], [245, "id48"], [245, "id54"], [245, "id58"], [245, "id69"], [245, "id73"], [245, "id78"], [245, "id84"], [245, "id94"], [245, "id99"], [245, "id103"], [245, "id110"], [245, "id116"], [245, "id121"], [245, "id124"], [245, "id128"]], "Bug fixes": [[245, "bug-fixes"], [245, "id6"], [245, "id10"], [245, "id14"], [245, "id17"], [245, "id21"]], "0.84.0 (2022-11-09)": [[245, "id2"]], "New features": [[245, "new-features"], [245, "id12"], [245, "id19"], [245, "id29"], [245, "id33"], [245, "id40"], [245, "id43"], [245, "id47"], [245, "id53"], [245, "id57"], [245, "id63"], [245, "id68"], [245, "id72"], [245, "id75"], [245, "id83"], [245, "id87"], [245, "id93"], [245, "id102"], [245, "id106"], [245, "id109"], [245, "id113"], [245, "id115"], [245, "id120"], [245, "id123"], [245, "id127"]], "0.83.0 (2022-11-01)": [[245, "id4"]], "0.82.0 (2022-10-24)": [[245, "id7"]], "0.81.1 (2022-10-24)": [[245, "id9"]], "0.81.0 (2022-10-21)": [[245, "id11"]], "0.80.0 (2022-10-19)": [[245, "id15"]], "0.79.0 (2022-10-16)": [[245, "id18"]], "0.78.0 (2022-09-20)": [[245, "id22"]], "Bugfixes": [[245, "bugfixes"], [245, "id27"], [245, "id31"], [245, "id35"], [245, "id38"], [245, "id45"], [245, "id49"], [245, "id51"], [245, "id55"], [245, "id59"], [245, "id61"], [245, "id64"], [245, "id66"], [245, "id70"], [245, "id76"], [245, "id79"], [245, "id81"], [245, "id85"], [245, "id89"], [245, "id91"], [245, "id95"], [245, "id97"], [245, "id100"], [245, "id104"], [245, "id107"], [245, "id111"], [245, "id118"], [245, "id125"], [245, "id129"]], "0.77.0 (2022-09-08)": [[245, "id24"]], "0.76.1 (2022-09-06)": [[245, "id26"]], "0.76.0 (2022-09-05)": [[245, "id28"]], "0.75.0 (2022-08-10)": [[245, "id32"]], "0.74.0 (2022-07-18)": [[245, "id36"]], "0.73.0 (2022-06-21)": [[245, "id39"]], "0.72.0 (2022-06-08)": [[245, "id42"]], "0.71.0 (2022-05-24)": [[245, "id46"]], "0.70.1 (2022-05-17)": [[245, "id50"]], "0.70.0 (2022-05-13)": [[245, "id52"]], "0.69.0 (2022-04-29)": [[245, "id56"]], "0.68.0 (2022-04-27)": [[245, "id60"]], "0.67.0 (2022-04-25)": [[245, "id62"]], "0.66.0 (2022-04-20)": [[245, "id65"]], "0.65.0 (2022-04-14)": [[245, "id67"]], "0.64.0 (2022-04-12)": [[245, "id71"]], "0.63.0 (2022-04-07)": [[245, "id74"]], "0.62.0 (2022-04-04)": [[245, "id77"]], "New feature": [[245, "new-feature"]], "0.61.1 (2022-03-31)": [[245, "id80"]], "0.61.0 (2022-03-29)": [[245, "id82"]], "0.59.0 (2022-03-25)": [[245, "id86"]], "0.58.4 (2022-03-24)": [[245, "id88"]], "0.58.1 (2022-03-22)": [[245, "id90"]], "0.58.0 (2022-03-22)": [[245, "id92"]], "0.57.0 (2022-03-21)": [[245, "id96"]], "0.56.0 (2022-03-17)": [[245, "id98"]], "0.55.0 (2022-03-16)": [[245, "id101"]], "0.54.0 (2022-03-08)": [[245, "id105"]], "0.53.0 (2022-03-04)": [[245, "id108"]], "0.52.0 (2022-02-25)": [[245, "id112"]], "0.51.0 (2022-02-24)": [[245, "id114"]], "0.50.1 (2022-02-16)": [[245, "id117"]], "0.50.0 (2022-02-16)": [[245, "id119"]], "0.49.0 (2022-02-10)": [[245, "id122"]], "0.48.0 (2022-02-04)": [[245, "id126"]], "0.47.0 (2022-01-28)": [[245, "id130"]], "0.46.0 (2022-01-27)": [[245, "id131"]], "0.45.0 (2022-01-21)": [[245, "id132"]], "0.44.0 (2022-01-20)": [[245, "id133"]], "0.43.0 (2022-01-12)": [[245, "id134"]], "0.42.0 (2022-01-11)": [[245, "id135"]], "0.41.0 (2021-12-21)": [[245, "id136"]], "0.40.0 (2021-12-16)": [[245, "id137"]], "0.39.0 (2021-12-15)": [[245, "id138"]], "0.38.0 (2021-12-08)": [[245, "id139"]], "0.37.1 (2021-11-26)": [[245, "id140"]], "0.37.0 (2021-11-24)": [[245, "id141"]], "0.36.0 (2021-11-11)": [[245, "id142"]], "0.35.0 (2021-11-02)": [[245, "id143"]], "0.34.3 (2021-10-28)": [[245, "id144"]], "0.34.2 (2021-10-26)": [[245, "id145"]], "0.34.1 (2021-10-20)": [[245, "id146"]], "0.34.0 (2021-10-14)": [[245, "id147"]], "0.33.0 (2021-10-11)": [[245, "id148"]], "0.32.0 (2021-09-28)": [[245, "id149"]], "0.31.0 (2021-09-21)": [[245, "id150"]], "0.30.0 (2021-09-06)": [[245, "id151"]], "0.29.0 (2021-08-25)": [[245, "id152"]], "0.28.0 (2021-08-24)": [[245, "id153"]], "0.27.0 (2021-08-09)": [[245, "id154"]], "0.26.1 (2021-08-04)": [[245, "id155"]], "0.26.0 (2021-07-13)": [[245, "id156"]], "0.25.1 (2021-07-08)": [[245, "id157"]], "0.25.0 (2021-06-24)": [[245, "id158"]], "0.24.0 (2021-05-25)": [[245, "id159"]], "0.23.4 (2021-05-03)": [[245, "id160"]], "0.23.3 (2021-04-29)": [[245, "id161"]], "0.23.2 (2021-04-28)": [[245, "id162"]], "0.23.1 (2021-04-28)": [[245, "id163"]], "0.23.0 (2021-04-28)": [[245, "id164"]], "0.22.0 (2021-03-29)": [[245, "id165"]], "0.21.0 (2021-03-22)": [[245, "id166"]], "0.20.1 (2021-03-11)": [[245, "id167"]], "0.20.0 (2021-03-11)": [[245, "id168"]], "0.19.0 (2021-03-02)": [[245, "id169"]], "0.18.0 (2021-03-01)": [[245, "id170"]], "0.17.0 (2021-02-15)": [[245, "id171"]], "0.16.0 (2021-02-08)": [[245, "id172"]], "0.15.0 (2021-02-01)": [[245, "id173"]], "0.14.0 (2021-01-25)": [[245, "id174"]], "0.13.0 (2021-01-18)": [[245, "id175"]], "0.12.0 (2020-12-18)": [[245, "id176"]], "0.11.0 (2020-11-20)": [[245, "id177"]], "0.10.0 (2020-11-16)": [[245, "id178"]], "0.9.0 (2020-10-26)": [[245, "id179"]], "0.8.0 (2020-10-08)": [[245, "id180"]], "0.7.0 (2020-09-28)": [[245, "id181"]], "0.6.0 (2020-09-18)": [[245, "id182"]], "0.5.0 (2020-09-04)": [[245, "id183"]], "0.4.0 (2020-07-24)": [[245, "id184"]], "0.3.0 (2020-06-16)": [[245, "id185"]], "0.2.0 (2020-03-27)": [[245, "id186"]], "0.1.0 (2018-07-22)": [[245, "id187"]], "write_results": [[223, "write-results"]], "pharmpy.tools Package": [[241, "module-pharmpy.tools"]], "call_workflow": [[234, "call-workflow"]], "ToolDatabase": [[232, "tooldatabase"]], "Configuration": [[249, "configuration"]], "The configuration file": [[249, "the-configuration-file"]], "Environment variables": [[249, "environment-variables"]], "pharmpy.workflows Package": [[242, "module-pharmpy.workflows"]], "Options for the data module": [[242, "id1"]], "LocalModelDirectoryDatabase": [[226, "localmodeldirectorydatabase"]], "NullToolDatabase": [[230, "nulltooldatabase"]], "Case deletion diagnostics": [[244, "case-deletion-diagnostics"]], "The cdd results": [[244, "the-cdd-results"]], "Case results": [[244, "case-results"]], "Cook score": [[244, "cook-score"]], "Jackknife cookscore": [[244, "jackknife-cookscore"]], "Covariance ratio": [[244, "covariance-ratio"]], "Delta OFV": [[244, "delta-ofv"]], "Skipped individuals": [[244, "skipped-individuals"]], "Case column": [[244, "case-column"]], "LocalDirectoryDatabase": [[224, "localdirectorydatabase"]], "execute_workflow": [[237, "execute-workflow"]], "set_proportional_error_model": [[175, "set-proportional-error-model"]], "set_bolus_absorption": [[158, "set-bolus-absorption"]], "set_initial_estimates": [[167, "set-initial-estimates"]], "set_time_varying_error_model": [[177, "set-time-varying-error-model"]], "remove_peripheral_compartment": [[150, "remove-peripheral-compartment"]], "sample_individual_estimates": [[154, "sample-individual-estimates"]], "remove_lag_time": [[148, "remove-lag-time"]], "rename_symbols": [[152, "rename-symbols"]], "resample_data": [[153, "resample-data"]], "set_name": [[171, "set-name"]], "sample_parameters_from_covariance_matrix": [[155, "sample-parameters-from-covariance-matrix"]], "set_covariates": [[160, "set-covariates"]], "set_michaelis_menten_elimination": [[169, "set-michaelis-menten-elimination"]], "simplify_expression": [[183, "simplify-expression"]], "sample_parameters_uniformly": [[156, "sample-parameters-uniformly"]], "set_peripheral_compartments": [[173, "set-peripheral-compartments"]], "remove_loq_data": [[149, "remove-loq-data"]], "set_power_on_ruv": [[174, "set-power-on-ruv"]], "set_transit_compartments": [[178, "set-transit-compartments"]], "remove_unused_parameters_and_rvs": [[151, "remove-unused-parameters-and-rvs"]], "solve_ode_system": [[184, "solve-ode-system"]], "set_upper_bounds": [[179, "set-upper-bounds"]], "set_first_order_elimination": [[165, "set-first-order-elimination"]], "set_first_order_absorption": [[164, "set-first-order-absorption"]], "set_estimation_step": [[162, "set-estimation-step"]], "set_zero_order_elimination": [[182, "set-zero-order-elimination"]], "set_lower_bounds": [[168, "set-lower-bounds"]], "set_mixed_mm_fo_elimination": [[170, "set-mixed-mm-fo-elimination"]], "set_additive_error_model": [[157, "set-additive-error-model"]], "set_evaluation_step": [[163, "set-evaluation-step"]], "set_zero_order_absorption": [[181, "set-zero-order-absorption"]], "set_seq_zo_fo_absorption": [[176, "set-seq-zo-fo-absorption"]], "set_combined_error_model": [[159, "set-combined-error-model"]], "set_ode_solver": [[172, "set-ode-solver"]], "set_iiv_on_ruv": [[166, "set-iiv-on-ruv"]], "set_weighted_error_model": [[180, "set-weighted-error-model"]], "set_dtbs_error_model": [[161, "set-dtbs-error-model"]], "transform_etas_tdist": [[188, "transform-etas-tdist"]], "fit": [[200, "fit"]], "print_fit_summary": [[204, "print-fit-summary"]], "run_tool": [[218, "run-tool"]], "predict_influential_individuals": [[201, "predict-influential-individuals"]], "rank_models": [[205, "rank-models"]], "run_amd": [[211, "run-amd"]], "write_model": [[198, "write-model"]], "run_allometry": [[210, "run-allometry"]], "read_modelfit_results": [[206, "read-modelfit-results"]], "update_inits": [[195, "update-inits"]], "run_iivsearch": [[213, "run-iivsearch"]], "retrieve_models": [[209, "retrieve-models"]], "transform_etas_john_draper": [[187, "transform-etas-john-draper"]], "use_thetas_for_error_stdev": [[196, "use-thetas-for-error-stdev"]], "run_modelsearch": [[216, "run-modelsearch"]], "summarize_errors": [[219, "summarize-errors"]], "write_csv": [[197, "write-csv"]], "undrop_columns": [[191, "undrop-columns"]], "translate_nmtran_time": [[189, "translate-nmtran-time"]], "unfix_parameters": [[192, "unfix-parameters"]], "summarize_individuals_count_table": [[221, "summarize-individuals-count-table"]], "transform_etas_boxcox": [[186, "transform-etas-boxcox"]], "unconstrain_parameters": [[190, "unconstrain-parameters"]], "read_results": [[207, "read-results"]], "unfix_parameters_to": [[193, "unfix-parameters-to"]], "run_covsearch": [[212, "run-covsearch"]], "summarize_individuals": [[220, "summarize-individuals"]], "update_initial_individual_estimates": [[194, "update-initial-individual-estimates"]], "split_joint_distribution": [[185, "split-joint-distribution"]], "predict_outliers": [[203, "predict-outliers"]], "run_ruvsearch": [[217, "run-ruvsearch"]], "predict_influential_outliers": [[202, "predict-influential-outliers"]], "run_iovsearch": [[214, "run-iovsearch"]], "create_results": [[199, "create-results"]], "run_modelfit": [[215, "run-modelfit"]], "retrieve_final_model": [[208, "retrieve-final-model"]], "remove_iov": [[147, "remove-iov"]], "get_pk_parameters": [[112, "get-pk-parameters"]], "make_declarative": [[131, "make-declarative"]], "list_time_varying_covariates": [[129, "list-time-varying-covariates"]], "get_thetas": [[116, "get-thetas"]], "plot_iofv_vs_iofv": [[135, "plot-iofv-vs-iofv"]], "read_model": [[139, "read-model"]], "has_zero_order_elimination": [[128, "has-zero-order-elimination"]], "has_michaelis_menten_elimination": [[123, "has-michaelis-menten-elimination"]], "get_sigmas": [[115, "get-sigmas"]], "read_model_from_database": [[140, "read-model-from-database"]], "remove_estimation_step": [[145, "remove-estimation-step"]], "print_model_code": [[136, "print-model-code"]], "has_combined_error_model": [[120, "has-combined-error-model"]], "has_first_order_elimination": [[122, "has-first-order-elimination"]], "omit_data": [[133, "omit-data"]], "print_model_symbols": [[137, "print-model-symbols"]], "has_covariate_effect": [[121, "has-covariate-effect"]], "greekify_model": [[118, "greekify-model"]], "remove_covariate_effect": [[143, "remove-covariate-effect"]], "remove_error_model": [[144, "remove-error-model"]], "remove_iiv": [[146, "remove-iiv"]], "has_mixed_mm_fo_elimination": [[124, "has-mixed-mm-fo-elimination"]], "has_random_effect": [[126, "has-random-effect"]], "has_zero_order_absorption": [[127, "has-zero-order-absorption"]], "has_proportional_error_model": [[125, "has-proportional-error-model"]], "remove_covariance_step": [[142, "remove-covariance-step"]], "get_population_prediction_expression": [[113, "get-population-prediction-expression"]], "plot_individual_predictions": [[134, "plot-individual-predictions"]], "load_example_model": [[130, "load-example-model"]], "has_additive_error_model": [[119, "has-additive-error-model"]], "get_rv_parameters": [[114, "get-rv-parameters"]], "get_omegas": [[111, "get-omegas"]], "get_unit_of": [[117, "get-unit-of"]], "read_model_from_string": [[141, "read-model-from-string"]], "mu_reference_model": [[132, "mu-reference-model"]], "read_dataset_from_datainfo": [[138, "read-dataset-from-datainfo"]], "deidentify_data": [[75, "deidentify-data"]], "get_bioavailability": [[92, "get-bioavailability"]], "evaluate_eta_gradient": [[79, "evaluate-eta-gradient"]], "get_config_path": [[95, "get-config-path"]], "evaluate_individual_prediction": [[81, "evaluate-individual-prediction"]], "get_cmt": [[93, "get-cmt"]], "fix_parameters": [[88, "fix-parameters"]], "get_individual_prediction_expression": [[102, "get-individual-prediction-expression"]], "get_lag_times": [[103, "get-lag-times"]], "get_model_covariates": [[105, "get-model-covariates"]], "get_observations": [[110, "get-observations"]], "get_doseid": [[97, "get-doseid"]], "get_individual_parameters": [[101, "get-individual-parameters"]], "get_observation_expression": [[109, "get-observation-expression"]], "evaluate_epsilon_gradient": [[78, "evaluate-epsilon-gradient"]], "get_ids": [[100, "get-ids"]], "evaluate_population_prediction": [[82, "evaluate-population-prediction"]], "create_symbol": [[74, "create-symbol"]], "get_doses": [[98, "get-doses"]], "get_mdv": [[104, "get-mdv"]], "fix_or_unfix_parameters": [[87, "fix-or-unfix-parameters"]], "get_concentration_parameters_from_data": [[94, "get-concentration-parameters-from-data"]], "evaluate_weighted_residuals": [[83, "evaluate-weighted-residuals"]], "drop_dropped_columns": [[77, "drop-dropped-columns"]], "get_number_of_observations_per_individual": [[108, "get-number-of-observations-per-individual"]], "find_clearance_parameters": [[85, "find-clearance-parameters"]], "get_number_of_observations": [[107, "get-number-of-observations"]], "expand_additional_doses": [[84, "expand-additional-doses"]], "generate_model_code": [[90, "generate-model-code"]], "find_volume_parameters": [[86, "find-volume-parameters"]], "get_number_of_individuals": [[106, "get-number-of-individuals"]], "get_evid": [[99, "get-evid"]], "evaluate_expression": [[80, "evaluate-expression"]], "get_baselines": [[91, "get-baselines"]], "get_covariate_baselines": [[96, "get-covariate-baselines"]], "fix_parameters_to": [[89, "fix-parameters-to"]], "drop_columns": [[76, "drop-columns"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "derive() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.derive"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "output_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.output_compartment"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "to_compartmental_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_explicit_system"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "derive() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.derive"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "derive() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.derive"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "derive() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.derive"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "explicitodesystem (class in pharmpy.model)": [[16, "pharmpy.model.ExplicitODESystem"]], "amounts (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.amounts"]], "compartment_names (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.compartment_names"]], "free_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.free_symbols"]], "ics (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.ics"]], "odes (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.odes"]], "rhs_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.rhs_symbols"]], "subs() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.subs"]], "to_compartmental_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_explicit_system"]], "infusion (class in pharmpy.model)": [[17, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[17, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.free_symbols"]], "rate (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.rate"]], "subs() (pharmpy.model.infusion method)": [[17, "pharmpy.model.Infusion.subs"]], "jointnormaldistribution (class in pharmpy.model)": [[18, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[18, "pharmpy.model.JointNormalDistribution.create"]], "derive() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.derive"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.names"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.subs"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[19, "pharmpy.model.Model"]], "copy() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.copy"]], "create_model() (pharmpy.model.model static method)": [[19, "pharmpy.model.Model.create_model"]], "datainfo (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dataset"]], "dependent_variable (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dependent_variable"]], "description (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.initial_individual_estimates"]], "model_code (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parent_model"]], "random_variables (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.random_variables"]], "statements (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.statements"]], "update_datainfo() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.update_datainfo"]], "value_type (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.value_type"]], "modelerror": [[20, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[21, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[22, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[23, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[23, "pharmpy.model.NormalDistribution.create"]], "derive() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.derive"]], "evalf() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.names"]], "subs() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.subs"]], "variance (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[24, "pharmpy.model.ODESystem"]], "to_compartmental_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_explicit_system"]], "parameter (class in pharmpy.model)": [[25, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[25, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.fix"]], "init (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[25, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.symbol"]], "upper (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[26, "pharmpy.model.Parameters"]], "fix (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fixed"]], "inits (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.nonfixed"]], "set_fix() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.to_dataframe"]], "upper (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[27, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[27, "pharmpy.model.RandomVariables.create"]], "derive() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.derive"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.free_symbols"]], "get_covariance() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "sample() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.subs"]], "unjoin() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[28, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[28, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[29, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[29, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[30, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.free_symbols"]], "full_expression() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.subs"]], "to_compartmental_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_explicit_system"]], "variabilityhierarchy (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityHierarchy"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.names"]], "variabilitylevel (class in pharmpy.model)": [[32, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[32, "pharmpy.model.VariabilityLevel.create"]], "group (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[32, "pharmpy.model.VariabilityLevel.replace"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_inf() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_inf"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_inf() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_inf"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_inf_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_inf_from_corrse"]], "calculate_inf_from_cov() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_inf_from_cov"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_inf() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_inf"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.convert_model"]], "copy_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.copy_model"]], "create_joint_distribution() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_joint_distribution"]], "create_report() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_report"]], "create_rng() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.deidentify_data"]], "drop_columns() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.fix_parameters_to"]], "generate_model_code() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.generate_model_code"]], "get_baselines() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_doses"]], "get_evid() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_individual_prediction_expression"]], "get_lag_times() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_mdv"]], "get_model_covariates() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_unit_of"]], "greekify_model() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.has_first_order_elimination"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_random_effect"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.has_zero_order_elimination"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.plot_iofv_vs_iofv"]], "print_model_code() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.read_model"]], "read_model_from_database() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.read_model_from_database"]], "read_model_from_string() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.set_dtbs_error_model"]], "set_estimation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_estimates() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_time_varying_error_model"]], "set_transit_compartments() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_zero_order_elimination"]], "simplify_expression() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.split_joint_distribution"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.write_model"]], "create_results() (in module pharmpy.tools)": [[199, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[200, "pharmpy.tools.fit"]], "predict_influential_individuals() (in module pharmpy.tools)": [[201, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[202, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[203, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[204, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[205, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[206, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[207, "pharmpy.tools.read_results"]], "retrieve_final_model() (in module pharmpy.tools)": [[208, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[209, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[210, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[211, "pharmpy.tools.run_amd"]], "run_covsearch() (in module pharmpy.tools)": [[212, "pharmpy.tools.run_covsearch"]], "run_iivsearch() (in module pharmpy.tools)": [[213, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[214, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[215, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[216, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[217, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[218, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[219, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[220, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[221, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[222, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[223, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[224, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[224, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[225, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[226, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[226, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[226, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[226, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[227, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[227, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[227, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[227, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[227, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[227, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[227, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[228, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[228, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[229, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[229, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[230, "pharmpy.workflows.NullToolDatabase"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[230, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[230, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[231, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[232, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[232, "pharmpy.workflows.ToolDatabase.model_database"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[232, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[232, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[233, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[234, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[235, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[236, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[237, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[238, "pharmpy.workflows.split_common_options"]], "module": [[239, "module-pharmpy.model"], [240, "module-pharmpy.modeling"], [241, "module-pharmpy.tools"], [242, "module-pharmpy.workflows"]], "pharmpy.model": [[239, "module-pharmpy.model"]], "pharmpy.modeling": [[240, "module-pharmpy.modeling"]], "pharmpy.tools": [[241, "module-pharmpy.tools"]], "pharmpy.workflows": [[242, "module-pharmpy.workflows"]], "--algorithm": [[247, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[247, "cmdoption-pharmpy-run-allometry-allometric_variable"], [247, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--categorical": [[247, "cmdoption-pharmpy-run-amd-categorical"]], "--cl_init": [[247, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[247, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[247, "cmdoption-pharmpy-data-print-columns"]], "--continuous": [[247, "cmdoption-pharmpy-run-amd-continuous"]], "--cutoff": [[247, "cmdoption-pharmpy-run-iivsearch-cutoff"], [247, "cmdoption-pharmpy-run-iovsearch-cutoff"], [247, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[247, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[247, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[247, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[247, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [247, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[247, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[247, "cmdoption-pharmpy-model-add_iov-eta_names"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[247, "cmdoption-pharmpy-model-add_iov-etas"], [247, "cmdoption-pharmpy-model-boxcox-etas"], [247, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [247, "cmdoption-pharmpy-model-john_draper-etas"], [247, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[247, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[247, "cmdoption-pharmpy-data-append-f"], [247, "cmdoption-pharmpy-data-deidentify-f"], [247, "cmdoption-pharmpy-data-filter-f"], [247, "cmdoption-pharmpy-data-write-f"], [247, "cmdoption-pharmpy-model-absorption_rate-f"], [247, "cmdoption-pharmpy-model-add_cov_effect-f"], [247, "cmdoption-pharmpy-model-add_iiv-f"], [247, "cmdoption-pharmpy-model-add_iov-f"], [247, "cmdoption-pharmpy-model-boxcox-f"], [247, "cmdoption-pharmpy-model-create_joint_distribution-f"], [247, "cmdoption-pharmpy-model-elimination_rate-f"], [247, "cmdoption-pharmpy-model-error-f"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [247, "cmdoption-pharmpy-model-john_draper-f"], [247, "cmdoption-pharmpy-model-peripheral_compartments-f"], [247, "cmdoption-pharmpy-model-power_on_ruv-f"], [247, "cmdoption-pharmpy-model-remove_iiv-f"], [247, "cmdoption-pharmpy-model-remove_iov-f"], [247, "cmdoption-pharmpy-model-tdist-f"], [247, "cmdoption-pharmpy-model-transit_compartments-f"], [247, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[247, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[247, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[247, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[247, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[247, "cmdoption-pharmpy-data-append-h"], [247, "cmdoption-pharmpy-data-deidentify-h"], [247, "cmdoption-pharmpy-data-filter-h"], [247, "cmdoption-pharmpy-data-h"], [247, "cmdoption-pharmpy-data-print-h"], [247, "cmdoption-pharmpy-data-resample-h"], [247, "cmdoption-pharmpy-data-write-h"], [247, "cmdoption-pharmpy-h"], [247, "cmdoption-pharmpy-info-h"], [247, "cmdoption-pharmpy-model-absorption_rate-h"], [247, "cmdoption-pharmpy-model-add_cov_effect-h"], [247, "cmdoption-pharmpy-model-add_iiv-h"], [247, "cmdoption-pharmpy-model-add_iov-h"], [247, "cmdoption-pharmpy-model-boxcox-h"], [247, "cmdoption-pharmpy-model-create_joint_distribution-h"], [247, "cmdoption-pharmpy-model-elimination_rate-h"], [247, "cmdoption-pharmpy-model-error-h"], [247, "cmdoption-pharmpy-model-h"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [247, "cmdoption-pharmpy-model-john_draper-h"], [247, "cmdoption-pharmpy-model-peripheral_compartments-h"], [247, "cmdoption-pharmpy-model-power_on_ruv-h"], [247, "cmdoption-pharmpy-model-print-h"], [247, "cmdoption-pharmpy-model-remove_iiv-h"], [247, "cmdoption-pharmpy-model-remove_iov-h"], [247, "cmdoption-pharmpy-model-sample-h"], [247, "cmdoption-pharmpy-model-tdist-h"], [247, "cmdoption-pharmpy-model-transit_compartments-h"], [247, "cmdoption-pharmpy-model-update_inits-h"], [247, "cmdoption-pharmpy-results-bootstrap-h"], [247, "cmdoption-pharmpy-results-cdd-h"], [247, "cmdoption-pharmpy-results-frem-h"], [247, "cmdoption-pharmpy-results-h"], [247, "cmdoption-pharmpy-results-linearize-h"], [247, "cmdoption-pharmpy-results-ofv-h"], [247, "cmdoption-pharmpy-results-print-h"], [247, "cmdoption-pharmpy-results-qa-h"], [247, "cmdoption-pharmpy-results-report-h"], [247, "cmdoption-pharmpy-results-ruvsearch-h"], [247, "cmdoption-pharmpy-results-scm-h"], [247, "cmdoption-pharmpy-results-simeval-h"], [247, "cmdoption-pharmpy-results-summary-h"], [247, "cmdoption-pharmpy-run-allometry-h"], [247, "cmdoption-pharmpy-run-amd-h"], [247, "cmdoption-pharmpy-run-bootstrap-h"], [247, "cmdoption-pharmpy-run-covsearch-h"], [247, "cmdoption-pharmpy-run-estmethod-h"], [247, "cmdoption-pharmpy-run-execute-h"], [247, "cmdoption-pharmpy-run-h"], [247, "cmdoption-pharmpy-run-iivsearch-h"], [247, "cmdoption-pharmpy-run-iovsearch-h"], [247, "cmdoption-pharmpy-run-modelsearch-h"], [247, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[247, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[247, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [247, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[247, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[247, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq": [[247, "cmdoption-pharmpy-run-amd-lloq"]], "--lower_bounds": [[247, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[247, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[247, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[247, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[247, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[247, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[247, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[247, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[247, "cmdoption-pharmpy-model-add_cov_effect-operation"], [247, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[247, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[247, "cmdoption-pharmpy-data-append-o"], [247, "cmdoption-pharmpy-data-deidentify-o"], [247, "cmdoption-pharmpy-data-filter-o"], [247, "cmdoption-pharmpy-data-write-o"], [247, "cmdoption-pharmpy-model-absorption_rate-o"], [247, "cmdoption-pharmpy-model-add_cov_effect-o"], [247, "cmdoption-pharmpy-model-add_iiv-o"], [247, "cmdoption-pharmpy-model-add_iov-o"], [247, "cmdoption-pharmpy-model-boxcox-o"], [247, "cmdoption-pharmpy-model-create_joint_distribution-o"], [247, "cmdoption-pharmpy-model-elimination_rate-o"], [247, "cmdoption-pharmpy-model-error-o"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [247, "cmdoption-pharmpy-model-john_draper-o"], [247, "cmdoption-pharmpy-model-peripheral_compartments-o"], [247, "cmdoption-pharmpy-model-power_on_ruv-o"], [247, "cmdoption-pharmpy-model-remove_iiv-o"], [247, "cmdoption-pharmpy-model-remove_iov-o"], [247, "cmdoption-pharmpy-model-tdist-o"], [247, "cmdoption-pharmpy-model-transit_compartments-o"], [247, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[247, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[247, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[247, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[247, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[247, "cmdoption-pharmpy-run-allometry-path"], [247, "cmdoption-pharmpy-run-amd-path"], [247, "cmdoption-pharmpy-run-covsearch-path"], [247, "cmdoption-pharmpy-run-iivsearch-path"], [247, "cmdoption-pharmpy-run-iovsearch-path"], [247, "cmdoption-pharmpy-run-modelsearch-path"], [247, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[247, "cmdoption-pharmpy-run-iivsearch-rank_type"], [247, "cmdoption-pharmpy-run-iovsearch-rank_type"], [247, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[247, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[247, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[247, "cmdoption-pharmpy-data-resample-resamples"]], "--same_eta": [[247, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[247, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[247, "cmdoption-pharmpy-model-sample-samples"], [247, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[247, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[247, "cmdoption-pharmpy-data-resample-seed"], [247, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[247, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[247, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[247, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[247, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[247, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[247, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[247, "cmdoption-pharmpy-version"]], "-f": [[247, "cmdoption-pharmpy-data-append-f"], [247, "cmdoption-pharmpy-data-deidentify-f"], [247, "cmdoption-pharmpy-data-filter-f"], [247, "cmdoption-pharmpy-data-write-f"], [247, "cmdoption-pharmpy-model-absorption_rate-f"], [247, "cmdoption-pharmpy-model-add_cov_effect-f"], [247, "cmdoption-pharmpy-model-add_iiv-f"], [247, "cmdoption-pharmpy-model-add_iov-f"], [247, "cmdoption-pharmpy-model-boxcox-f"], [247, "cmdoption-pharmpy-model-create_joint_distribution-f"], [247, "cmdoption-pharmpy-model-elimination_rate-f"], [247, "cmdoption-pharmpy-model-error-f"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [247, "cmdoption-pharmpy-model-john_draper-f"], [247, "cmdoption-pharmpy-model-peripheral_compartments-f"], [247, "cmdoption-pharmpy-model-power_on_ruv-f"], [247, "cmdoption-pharmpy-model-remove_iiv-f"], [247, "cmdoption-pharmpy-model-remove_iov-f"], [247, "cmdoption-pharmpy-model-tdist-f"], [247, "cmdoption-pharmpy-model-transit_compartments-f"], [247, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[247, "cmdoption-pharmpy-data-append-h"], [247, "cmdoption-pharmpy-data-deidentify-h"], [247, "cmdoption-pharmpy-data-filter-h"], [247, "cmdoption-pharmpy-data-h"], [247, "cmdoption-pharmpy-data-print-h"], [247, "cmdoption-pharmpy-data-resample-h"], [247, "cmdoption-pharmpy-data-write-h"], [247, "cmdoption-pharmpy-h"], [247, "cmdoption-pharmpy-info-h"], [247, "cmdoption-pharmpy-model-absorption_rate-h"], [247, "cmdoption-pharmpy-model-add_cov_effect-h"], [247, "cmdoption-pharmpy-model-add_iiv-h"], [247, "cmdoption-pharmpy-model-add_iov-h"], [247, "cmdoption-pharmpy-model-boxcox-h"], [247, "cmdoption-pharmpy-model-create_joint_distribution-h"], [247, "cmdoption-pharmpy-model-elimination_rate-h"], [247, "cmdoption-pharmpy-model-error-h"], [247, "cmdoption-pharmpy-model-h"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [247, "cmdoption-pharmpy-model-john_draper-h"], [247, "cmdoption-pharmpy-model-peripheral_compartments-h"], [247, "cmdoption-pharmpy-model-power_on_ruv-h"], [247, "cmdoption-pharmpy-model-print-h"], [247, "cmdoption-pharmpy-model-remove_iiv-h"], [247, "cmdoption-pharmpy-model-remove_iov-h"], [247, "cmdoption-pharmpy-model-sample-h"], [247, "cmdoption-pharmpy-model-tdist-h"], [247, "cmdoption-pharmpy-model-transit_compartments-h"], [247, "cmdoption-pharmpy-model-update_inits-h"], [247, "cmdoption-pharmpy-results-bootstrap-h"], [247, "cmdoption-pharmpy-results-cdd-h"], [247, "cmdoption-pharmpy-results-frem-h"], [247, "cmdoption-pharmpy-results-h"], [247, "cmdoption-pharmpy-results-linearize-h"], [247, "cmdoption-pharmpy-results-ofv-h"], [247, "cmdoption-pharmpy-results-print-h"], [247, "cmdoption-pharmpy-results-qa-h"], [247, "cmdoption-pharmpy-results-report-h"], [247, "cmdoption-pharmpy-results-ruvsearch-h"], [247, "cmdoption-pharmpy-results-scm-h"], [247, "cmdoption-pharmpy-results-simeval-h"], [247, "cmdoption-pharmpy-results-summary-h"], [247, "cmdoption-pharmpy-run-allometry-h"], [247, "cmdoption-pharmpy-run-amd-h"], [247, "cmdoption-pharmpy-run-bootstrap-h"], [247, "cmdoption-pharmpy-run-covsearch-h"], [247, "cmdoption-pharmpy-run-estmethod-h"], [247, "cmdoption-pharmpy-run-execute-h"], [247, "cmdoption-pharmpy-run-h"], [247, "cmdoption-pharmpy-run-iivsearch-h"], [247, "cmdoption-pharmpy-run-iovsearch-h"], [247, "cmdoption-pharmpy-run-modelsearch-h"], [247, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[247, "cmdoption-pharmpy-data-append-o"], [247, "cmdoption-pharmpy-data-deidentify-o"], [247, "cmdoption-pharmpy-data-filter-o"], [247, "cmdoption-pharmpy-data-write-o"], [247, "cmdoption-pharmpy-model-absorption_rate-o"], [247, "cmdoption-pharmpy-model-add_cov_effect-o"], [247, "cmdoption-pharmpy-model-add_iiv-o"], [247, "cmdoption-pharmpy-model-add_iov-o"], [247, "cmdoption-pharmpy-model-boxcox-o"], [247, "cmdoption-pharmpy-model-create_joint_distribution-o"], [247, "cmdoption-pharmpy-model-elimination_rate-o"], [247, "cmdoption-pharmpy-model-error-o"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [247, "cmdoption-pharmpy-model-john_draper-o"], [247, "cmdoption-pharmpy-model-peripheral_compartments-o"], [247, "cmdoption-pharmpy-model-power_on_ruv-o"], [247, "cmdoption-pharmpy-model-remove_iiv-o"], [247, "cmdoption-pharmpy-model-remove_iov-o"], [247, "cmdoption-pharmpy-model-tdist-o"], [247, "cmdoption-pharmpy-model-transit_compartments-o"], [247, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[247, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [247, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[247, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[247, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[247, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[247, "cmdoption-pharmpy-data-append-arg-expression"], [247, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[247, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[247, "cmdoption-pharmpy-data-append-arg-file"], [247, "cmdoption-pharmpy-data-deidentify-arg-file"], [247, "cmdoption-pharmpy-data-filter-arg-file"], [247, "cmdoption-pharmpy-data-print-arg-file"], [247, "cmdoption-pharmpy-data-resample-arg-file"], [247, "cmdoption-pharmpy-data-write-arg-file"], [247, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [247, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [247, "cmdoption-pharmpy-model-add_iiv-arg-file"], [247, "cmdoption-pharmpy-model-add_iov-arg-file"], [247, "cmdoption-pharmpy-model-boxcox-arg-file"], [247, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [247, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [247, "cmdoption-pharmpy-model-error-arg-file"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [247, "cmdoption-pharmpy-model-john_draper-arg-file"], [247, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [247, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [247, "cmdoption-pharmpy-model-print-arg-file"], [247, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [247, "cmdoption-pharmpy-model-remove_iov-arg-file"], [247, "cmdoption-pharmpy-model-sample-arg-file"], [247, "cmdoption-pharmpy-model-tdist-arg-file"], [247, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [247, "cmdoption-pharmpy-model-update_inits-arg-file"], [247, "cmdoption-pharmpy-results-ofv-arg-file"], [247, "cmdoption-pharmpy-results-print-arg-file"], [247, "cmdoption-pharmpy-results-summary-arg-file"], [247, "cmdoption-pharmpy-run-allometry-arg-file"], [247, "cmdoption-pharmpy-run-bootstrap-arg-file"], [247, "cmdoption-pharmpy-run-covsearch-arg-file"], [247, "cmdoption-pharmpy-run-estmethod-arg-file"], [247, "cmdoption-pharmpy-run-execute-arg-file"], [247, "cmdoption-pharmpy-run-iivsearch-arg-file"], [247, "cmdoption-pharmpy-run-iovsearch-arg-file"], [247, "cmdoption-pharmpy-run-modelsearch-arg-file"], [247, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[247, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[247, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[247, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [247, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[247, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[247, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [247, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[247, "cmdoption-pharmpy-h"], [247, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[247, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[247, "cmdoption-pharmpy-data-append-arg-expression"], [247, "cmdoption-pharmpy-data-append-arg-file"], [247, "cmdoption-pharmpy-data-append-f"], [247, "cmdoption-pharmpy-data-append-h"], [247, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[247, "cmdoption-pharmpy-data-deidentify-arg-file"], [247, "cmdoption-pharmpy-data-deidentify-datecols"], [247, "cmdoption-pharmpy-data-deidentify-f"], [247, "cmdoption-pharmpy-data-deidentify-h"], [247, "cmdoption-pharmpy-data-deidentify-idcol"], [247, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[247, "cmdoption-pharmpy-data-filter-arg-expressions"], [247, "cmdoption-pharmpy-data-filter-arg-file"], [247, "cmdoption-pharmpy-data-filter-f"], [247, "cmdoption-pharmpy-data-filter-h"], [247, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[247, "cmdoption-pharmpy-data-print-arg-file"], [247, "cmdoption-pharmpy-data-print-columns"], [247, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[247, "cmdoption-pharmpy-data-resample-arg-file"], [247, "cmdoption-pharmpy-data-resample-group"], [247, "cmdoption-pharmpy-data-resample-h"], [247, "cmdoption-pharmpy-data-resample-replace"], [247, "cmdoption-pharmpy-data-resample-resamples"], [247, "cmdoption-pharmpy-data-resample-sample_size"], [247, "cmdoption-pharmpy-data-resample-seed"], [247, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[247, "cmdoption-pharmpy-data-write-arg-file"], [247, "cmdoption-pharmpy-data-write-f"], [247, "cmdoption-pharmpy-data-write-h"], [247, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[247, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[247, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[247, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [247, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [247, "cmdoption-pharmpy-model-absorption_rate-f"], [247, "cmdoption-pharmpy-model-absorption_rate-h"], [247, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[247, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [247, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [247, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [247, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [247, "cmdoption-pharmpy-model-add_cov_effect-f"], [247, "cmdoption-pharmpy-model-add_cov_effect-h"], [247, "cmdoption-pharmpy-model-add_cov_effect-o"], [247, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[247, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [247, "cmdoption-pharmpy-model-add_iiv-arg-file"], [247, "cmdoption-pharmpy-model-add_iiv-arg-param"], [247, "cmdoption-pharmpy-model-add_iiv-eta_name"], [247, "cmdoption-pharmpy-model-add_iiv-f"], [247, "cmdoption-pharmpy-model-add_iiv-h"], [247, "cmdoption-pharmpy-model-add_iiv-o"], [247, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[247, "cmdoption-pharmpy-model-add_iov-arg-file"], [247, "cmdoption-pharmpy-model-add_iov-arg-occ"], [247, "cmdoption-pharmpy-model-add_iov-eta_names"], [247, "cmdoption-pharmpy-model-add_iov-etas"], [247, "cmdoption-pharmpy-model-add_iov-f"], [247, "cmdoption-pharmpy-model-add_iov-h"], [247, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[247, "cmdoption-pharmpy-model-boxcox-arg-file"], [247, "cmdoption-pharmpy-model-boxcox-etas"], [247, "cmdoption-pharmpy-model-boxcox-f"], [247, "cmdoption-pharmpy-model-boxcox-h"], [247, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[247, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [247, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [247, "cmdoption-pharmpy-model-create_joint_distribution-f"], [247, "cmdoption-pharmpy-model-create_joint_distribution-h"], [247, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[247, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [247, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [247, "cmdoption-pharmpy-model-elimination_rate-f"], [247, "cmdoption-pharmpy-model-elimination_rate-h"], [247, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[247, "cmdoption-pharmpy-model-error-arg-error_type"], [247, "cmdoption-pharmpy-model-error-arg-file"], [247, "cmdoption-pharmpy-model-error-f"], [247, "cmdoption-pharmpy-model-error-h"], [247, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[247, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [247, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[247, "cmdoption-pharmpy-model-john_draper-arg-file"], [247, "cmdoption-pharmpy-model-john_draper-etas"], [247, "cmdoption-pharmpy-model-john_draper-f"], [247, "cmdoption-pharmpy-model-john_draper-h"], [247, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[247, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [247, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [247, "cmdoption-pharmpy-model-peripheral_compartments-f"], [247, "cmdoption-pharmpy-model-peripheral_compartments-h"], [247, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[247, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [247, "cmdoption-pharmpy-model-power_on_ruv-eps"], [247, "cmdoption-pharmpy-model-power_on_ruv-f"], [247, "cmdoption-pharmpy-model-power_on_ruv-h"], [247, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[247, "cmdoption-pharmpy-model-print-arg-file"], [247, "cmdoption-pharmpy-model-print-explicit-odes"], [247, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[247, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [247, "cmdoption-pharmpy-model-remove_iiv-f"], [247, "cmdoption-pharmpy-model-remove_iiv-h"], [247, "cmdoption-pharmpy-model-remove_iiv-o"], [247, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[247, "cmdoption-pharmpy-model-remove_iov-arg-file"], [247, "cmdoption-pharmpy-model-remove_iov-f"], [247, "cmdoption-pharmpy-model-remove_iov-h"], [247, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[247, "cmdoption-pharmpy-model-sample-arg-file"], [247, "cmdoption-pharmpy-model-sample-h"], [247, "cmdoption-pharmpy-model-sample-samples"], [247, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[247, "cmdoption-pharmpy-model-tdist-arg-file"], [247, "cmdoption-pharmpy-model-tdist-etas"], [247, "cmdoption-pharmpy-model-tdist-f"], [247, "cmdoption-pharmpy-model-tdist-h"], [247, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[247, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [247, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [247, "cmdoption-pharmpy-model-transit_compartments-f"], [247, "cmdoption-pharmpy-model-transit_compartments-h"], [247, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[247, "cmdoption-pharmpy-model-update_inits-arg-file"], [247, "cmdoption-pharmpy-model-update_inits-f"], [247, "cmdoption-pharmpy-model-update_inits-h"], [247, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[247, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[247, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [247, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[247, "cmdoption-pharmpy-results-cdd-arg-psn"], [247, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[247, "cmdoption-pharmpy-results-frem-arg-psn"], [247, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [247, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [247, "cmdoption-pharmpy-results-frem-h"], [247, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[247, "cmdoption-pharmpy-results-linearize-arg-psn"], [247, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[247, "cmdoption-pharmpy-results-ofv-arg-file"], [247, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[247, "cmdoption-pharmpy-results-print-arg-file"], [247, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[247, "cmdoption-pharmpy-results-qa-arg-psn"], [247, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[247, "cmdoption-pharmpy-results-report-arg-psn"], [247, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[247, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [247, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[247, "cmdoption-pharmpy-results-scm-arg-psn"], [247, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[247, "cmdoption-pharmpy-results-simeval-arg-psn"], [247, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[247, "cmdoption-pharmpy-results-summary-arg-file"], [247, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[247, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[247, "cmdoption-pharmpy-run-allometry-allometric_variable"], [247, "cmdoption-pharmpy-run-allometry-arg-file"], [247, "cmdoption-pharmpy-run-allometry-h"], [247, "cmdoption-pharmpy-run-allometry-initials"], [247, "cmdoption-pharmpy-run-allometry-lower_bounds"], [247, "cmdoption-pharmpy-run-allometry-non_fixed"], [247, "cmdoption-pharmpy-run-allometry-parameters"], [247, "cmdoption-pharmpy-run-allometry-path"], [247, "cmdoption-pharmpy-run-allometry-reference_value"], [247, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[247, "cmdoption-pharmpy-run-amd-allometric_variable"], [247, "cmdoption-pharmpy-run-amd-arg-input_path"], [247, "cmdoption-pharmpy-run-amd-categorical"], [247, "cmdoption-pharmpy-run-amd-cl_init"], [247, "cmdoption-pharmpy-run-amd-continuous"], [247, "cmdoption-pharmpy-run-amd-h"], [247, "cmdoption-pharmpy-run-amd-lloq"], [247, "cmdoption-pharmpy-run-amd-mat_init"], [247, "cmdoption-pharmpy-run-amd-modeltype"], [247, "cmdoption-pharmpy-run-amd-occasion"], [247, "cmdoption-pharmpy-run-amd-order"], [247, "cmdoption-pharmpy-run-amd-path"], [247, "cmdoption-pharmpy-run-amd-search_space"], [247, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[247, "cmdoption-pharmpy-run-bootstrap-arg-file"], [247, "cmdoption-pharmpy-run-bootstrap-h"], [247, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[247, "cmdoption-pharmpy-run-covsearch-algorithm"], [247, "cmdoption-pharmpy-run-covsearch-arg-file"], [247, "cmdoption-pharmpy-run-covsearch-effects"], [247, "cmdoption-pharmpy-run-covsearch-h"], [247, "cmdoption-pharmpy-run-covsearch-max_steps"], [247, "cmdoption-pharmpy-run-covsearch-p_backward"], [247, "cmdoption-pharmpy-run-covsearch-p_forward"], [247, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[247, "cmdoption-pharmpy-run-estmethod-arg-file"], [247, "cmdoption-pharmpy-run-estmethod-h"], [247, "cmdoption-pharmpy-run-estmethod-methods"], [247, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[247, "cmdoption-pharmpy-run-execute-arg-file"], [247, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[247, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [247, "cmdoption-pharmpy-run-iivsearch-arg-file"], [247, "cmdoption-pharmpy-run-iivsearch-cutoff"], [247, "cmdoption-pharmpy-run-iivsearch-h"], [247, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [247, "cmdoption-pharmpy-run-iivsearch-path"], [247, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[247, "cmdoption-pharmpy-run-iovsearch-arg-file"], [247, "cmdoption-pharmpy-run-iovsearch-column"], [247, "cmdoption-pharmpy-run-iovsearch-cutoff"], [247, "cmdoption-pharmpy-run-iovsearch-distribution"], [247, "cmdoption-pharmpy-run-iovsearch-h"], [247, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [247, "cmdoption-pharmpy-run-iovsearch-path"], [247, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[247, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [247, "cmdoption-pharmpy-run-modelsearch-arg-file"], [247, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [247, "cmdoption-pharmpy-run-modelsearch-cutoff"], [247, "cmdoption-pharmpy-run-modelsearch-h"], [247, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [247, "cmdoption-pharmpy-run-modelsearch-path"], [247, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[247, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [247, "cmdoption-pharmpy-run-ruvsearch-groups"], [247, "cmdoption-pharmpy-run-ruvsearch-h"], [247, "cmdoption-pharmpy-run-ruvsearch-p_value"], [247, "cmdoption-pharmpy-run-ruvsearch-path"], [247, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[247, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [247, "cmdoption-pharmpy-results-cdd-arg-psn"], [247, "cmdoption-pharmpy-results-frem-arg-psn"], [247, "cmdoption-pharmpy-results-linearize-arg-psn"], [247, "cmdoption-pharmpy-results-qa-arg-psn"], [247, "cmdoption-pharmpy-results-report-arg-psn"], [247, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [247, "cmdoption-pharmpy-results-scm-arg-psn"], [247, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[247, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [247, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})