Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.ExplicitODESystem", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_inf", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_inf", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_inf_from_corrse", "api/pharmpy.modeling.calculate_inf_from_cov", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_inf", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.copy_model", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_report", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.generate_model_code", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_database", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_results", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.ExplicitODESystem.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_inf.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_inf.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_inf_from_corrse.rst", "api/pharmpy.modeling.calculate_inf_from_cov.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_inf.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.copy_model.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_report.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.generate_model_code.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_database.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "ExplicitODESystem", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_inf", "calculate_cov_from_corrse", "calculate_cov_from_inf", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_inf_from_corrse", "calculate_inf_from_cov", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_se_from_cov", "calculate_se_from_inf", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "copy_model", "create_joint_distribution", "create_report", "create_rng", "create_symbol", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "generate_model_code", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_lag_times", "get_mdv", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_proportional_error_model", "has_random_effect", "has_zero_order_absorption", "has_zero_order_elimination", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_database", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_results", "fit", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_results", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_covsearch", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 19, 25, 26, 27, 30, 32, 53, 54, 68, 73, 75, 76, 77, 78, 80, 81, 82, 83, 92, 98, 101, 105, 106, 107, 108, 112, 116, 121, 122, 123, 127, 143, 156, 158, 174, 183, 188, 194, 213, 218, 222, 226, 227, 228, 242, 245, 246, 247, 248, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 272, 273, 274, 276, 277, 278], "section": [0, 247, 250, 260, 272, 276], "i": [0, 1, 2, 3, 6, 8, 19, 25, 26, 27, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 46, 48, 55, 56, 65, 67, 68, 69, 71, 73, 75, 77, 78, 80, 81, 82, 90, 92, 95, 98, 104, 105, 106, 107, 117, 131, 132, 145, 146, 148, 152, 153, 154, 156, 157, 160, 161, 162, 163, 165, 168, 169, 173, 174, 175, 176, 177, 180, 181, 184, 185, 186, 187, 194, 196, 197, 200, 202, 204, 208, 211, 212, 213, 214, 220, 222, 226, 227, 228, 232, 241, 242, 243, 245, 246, 247, 248, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 278], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 202, 222, 223, 224, 225, 226, 227, 228, 229, 230, 243, 257, 260, 264, 268, 269, 273, 276, 278], "The": [0, 2, 3, 6, 8, 9, 10, 16, 19, 25, 26, 27, 30, 33, 35, 39, 41, 56, 64, 71, 72, 77, 78, 79, 80, 81, 82, 100, 111, 116, 118, 119, 124, 125, 137, 152, 156, 158, 174, 210, 215, 218, 246, 248, 250, 252, 256, 258, 259, 260, 263, 266, 268, 269, 276, 277], "inform": [0, 1, 2, 6, 8, 49, 50, 51, 52, 58, 59, 62, 63, 116, 243, 245, 247, 250, 253, 257, 258, 259, 260, 264, 265, 269, 273, 274, 276, 277], "intend": [0, 260, 276], "non": [0, 26, 67, 71, 79, 184, 243, 252, 253, 255, 260, 262, 269, 276], "hard": [0, 269], "find": [0, 8, 30, 46, 84, 85, 116, 207, 220, 243, 247, 258, 260, 277, 278], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 248, 250, 252, 256, 257, 259, 260, 262, 263, 264, 265, 273], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 247, 250, 251, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 277], "develop": [0, 209, 243, 260, 268, 269, 276, 278], "remov": [0, 2, 9, 27, 30, 75, 105, 106, 107, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 167, 178, 189, 191, 209, 242, 243, 245, 250, 253, 257, 259, 260, 266, 277], "row": [0, 1, 2, 26, 77, 78, 90, 93, 95, 153, 154, 219, 241, 245, 250, 252, 255, 257, 259, 263, 265, 273, 274], "split": [0, 71, 184, 236, 243, 245, 264, 276], "drop": [0, 2, 6, 75, 76, 190, 243, 265, 269, 274], "column": [0, 1, 2, 6, 8, 10, 16, 26, 32, 39, 44, 56, 75, 76, 77, 78, 79, 83, 92, 93, 95, 98, 132, 133, 136, 152, 153, 159, 176, 188, 190, 200, 201, 202, 209, 212, 218, 219, 241, 243, 245, 250, 252, 255, 257, 259, 263, 264, 265, 273, 274, 276], "error": [0, 2, 11, 20, 21, 25, 27, 30, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 114, 118, 119, 124, 135, 143, 156, 158, 173, 174, 176, 179, 195, 204, 217, 220, 225, 241, 243, 250, 257, 258, 259, 262, 265, 266, 273, 274, 276, 277], "handl": [0, 3, 83, 183, 243, 252, 253, 255, 258, 269], "valid": [0, 27, 243, 260, 264], "some": [0, 8, 10, 61, 71, 143, 156, 224, 241, 243, 245, 248, 250, 252, 258, 260, 261, 262, 264, 265, 268, 269, 273, 276, 278], "rule": [0, 65, 260], "These": [0, 248, 253, 255, 260, 261, 264, 268, 269, 276], "were": [0, 27, 30, 217, 241, 242, 252, 255, 260, 265, 276, 278], "test": [0, 2, 120, 210, 212, 214, 215, 243, 245, 250, 256, 257, 259, 263, 265, 269, 273], "7": [0, 1, 2, 35, 49, 51, 52, 57, 59, 62, 78, 90, 95, 107, 109, 202, 241, 242, 250, 252, 255, 257, 259, 260, 261, 262, 263, 265, 270, 272, 273, 274, 275], "4": [0, 1, 2, 6, 49, 51, 52, 57, 59, 62, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 107, 187, 202, 215, 220, 241, 242, 250, 251, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 270, 272, 273, 274, 275], "3": [0, 1, 2, 6, 30, 33, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 68, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 97, 99, 107, 109, 115, 117, 129, 130, 131, 135, 136, 149, 153, 154, 155, 177, 185, 186, 187, 191, 192, 194, 200, 201, 202, 219, 241, 242, 250, 251, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 272, 273, 274, 275, 276, 278], "delimet": 0, "between": [0, 8, 9, 27, 71, 218, 232, 241, 242, 243, 245, 255, 259, 260, 266, 269, 272, 273, 277, 278], "comma": [0, 276], "space": [0, 64, 209, 214, 243, 245, 276], "tab": [0, 135, 243, 267], "befor": [0, 2, 30, 154, 155, 193, 245, 259, 261, 265], "after": [0, 6, 30, 105, 106, 107, 176, 207, 217, 220, 224, 242, 243, 245, 251, 255, 260, 261, 262, 265, 269, 270, 272, 274, 275, 278], "ar": [0, 3, 4, 6, 8, 26, 27, 30, 36, 37, 39, 42, 56, 71, 93, 104, 129, 145, 146, 150, 158, 161, 162, 173, 184, 188, 194, 204, 210, 211, 213, 214, 222, 224, 241, 243, 245, 246, 247, 248, 250, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 274, 276, 278], "give": [0, 26, 104, 131, 155, 241, 243, 245, 250, 255, 259, 260, 274], "sic": 0, "begin": [0, 255, 262, 264], "end": [0, 36, 46, 255, 260, 262, 264, 276], "insert": [0, 243], "each": [0, 2, 8, 27, 33, 35, 55, 56, 57, 77, 78, 79, 80, 81, 82, 90, 95, 96, 107, 130, 133, 134, 152, 155, 165, 224, 241, 242, 245, 247, 250, 252, 253, 255, 257, 259, 260, 262, 263, 264, 265, 266, 272, 273, 274, 275, 276, 278], "can": [0, 1, 2, 6, 10, 19, 26, 30, 48, 56, 64, 73, 79, 116, 152, 183, 207, 213, 224, 227, 228, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 273, 276, 277, 278], "onli": [0, 2, 3, 8, 10, 14, 27, 35, 53, 54, 65, 68, 75, 77, 78, 80, 81, 82, 101, 108, 112, 130, 152, 183, 193, 213, 220, 232, 243, 245, 246, 250, 259, 260, 264, 265, 268, 276, 278], "numer": [0, 6, 14, 31, 77, 78, 80, 81, 241, 243, 252, 262, 269], "e": [0, 6, 19, 27, 68, 74, 105, 106, 107, 131, 146, 160, 214, 241, 243, 248, 252, 255, 257, 259, 260, 262, 264, 265, 266, 269, 273, 276, 278], "other": [0, 9, 19, 27, 30, 69, 134, 213, 236, 241, 246, 248, 253, 257, 260, 269], "charact": [0, 10, 252], "than": [0, 25, 26, 257, 260, 265], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 27, 35, 204, 222, 223, 226, 227, 235, 243, 250, 260, 265, 269, 276], "except": [0, 11, 12, 20, 21, 22, 37, 56, 152, 260], "ii": [0, 6], "datx": 0, "fortran": 0, "short": [0, 248, 260], "form": [0, 24, 27, 152, 210, 243, 260], "exponenti": [0, 35, 37, 42, 165, 245, 250, 255, 264], "notat": [0, 278], "2": [0, 1, 2, 6, 8, 19, 30, 33, 35, 36, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 77, 78, 79, 80, 81, 82, 90, 93, 95, 96, 99, 101, 107, 108, 109, 110, 115, 117, 129, 130, 131, 135, 136, 149, 153, 154, 155, 156, 158, 163, 166, 168, 169, 172, 174, 175, 177, 180, 184, 186, 187, 191, 192, 194, 202, 208, 218, 241, 242, 245, 248, 250, 251, 252, 255, 257, 259, 261, 262, 263, 264, 265, 266, 270, 272, 273, 274, 275, 276], "1": [0, 1, 2, 6, 7, 8, 18, 19, 23, 26, 27, 30, 33, 35, 36, 41, 43, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 66, 67, 68, 71, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 95, 96, 97, 99, 101, 107, 108, 109, 110, 113, 114, 115, 117, 129, 130, 131, 132, 135, 136, 140, 143, 152, 153, 154, 155, 156, 162, 163, 165, 166, 167, 173, 175, 176, 178, 181, 184, 185, 186, 187, 189, 191, 192, 194, 195, 202, 208, 209, 210, 214, 218, 241, 242, 245, 247, 248, 250, 251, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 276, 278], "mean": [0, 2, 13, 18, 19, 23, 56, 61, 131, 153, 154, 209, 222, 226, 241, 242, 243, 245, 255, 257, 260, 262, 263, 264, 265, 269, 272, 276, 278], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 18, 19, 25, 26, 27, 30, 32, 56, 60, 61, 64, 70, 79, 84, 85, 100, 104, 110, 111, 113, 114, 115, 116, 132, 133, 137, 152, 153, 154, 156, 158, 166, 167, 174, 176, 178, 206, 213, 215, 217, 220, 222, 226, 227, 232, 241, 242, 244, 245, 248, 249, 250, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 268, 269, 273, 274, 276], "d": [0, 8, 13, 16, 18, 23, 27, 28, 30, 223, 225, 236, 260, 262], "instead": [0, 65, 79, 104, 222, 242, 243, 245, 252, 253, 255, 260, 264, 269, 278], "lone": 0, "an": [0, 4, 8, 10, 15, 17, 19, 26, 27, 30, 33, 38, 39, 45, 50, 52, 63, 64, 72, 96, 98, 118, 119, 120, 124, 129, 131, 142, 152, 156, 186, 200, 201, 202, 217, 218, 220, 223, 225, 243, 245, 248, 250, 252, 255, 256, 257, 258, 259, 260, 262, 265, 266, 269, 272, 274, 275, 276, 278], "0": [0, 1, 2, 6, 7, 8, 15, 16, 18, 19, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 41, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 71, 73, 77, 78, 79, 80, 81, 82, 86, 87, 88, 90, 93, 95, 96, 97, 109, 110, 114, 115, 117, 129, 130, 131, 135, 140, 141, 144, 149, 153, 154, 155, 158, 160, 161, 162, 165, 166, 167, 173, 174, 176, 178, 184, 185, 186, 189, 192, 194, 202, 208, 209, 210, 215, 219, 220, 241, 242, 245, 248, 250, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 272, 273, 274, 275, 276, 278], "dot": 0, "most": [0, 6, 35, 183, 245, 250, 253, 260, 264, 272], "24": [0, 57, 90, 95, 97, 107, 109, 202, 241, 242, 250, 252, 257, 259, 261, 263, 265, 272, 273, 275], "long": [0, 243, 260, 269], "count": [0, 96, 219, 226, 243, 265], "delimit": 0, "wa": [0, 28, 194, 218, 241, 243, 260, 261, 273, 274], "eaten": 0, "empti": [0, 27, 217, 250, 264], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 17, 19, 27, 28, 30, 40, 46, 65, 71, 75, 86, 87, 88, 140, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 191, 192, 193, 194, 243, 245, 246, 247, 252, 257, 258, 259, 265, 266, 276, 277, 278], "As": [0, 27, 246, 247, 264, 266, 276, 278], "contain": [0, 2, 3, 27, 79, 200, 201, 202, 241, 242, 245, 250, 251, 252, 253, 257, 259, 260, 263, 264, 265, 270, 272, 273, 274, 275, 276], "drope": 0, "input": [0, 8, 9, 10, 27, 30, 35, 37, 39, 62, 63, 70, 73, 76, 120, 125, 135, 140, 154, 165, 209, 218, 229, 243, 245, 252, 257, 259, 262, 264, 265, 266, 269, 273, 278], "ani": [0, 2, 8, 9, 25, 45, 56, 67, 150, 207, 219, 229, 232, 248, 252, 257, 259, 260, 262, 264, 266, 269, 276, 278], "limit": [0, 2, 66, 148, 173, 209, 243, 245, 259, 260, 267], "length": [0, 79, 80, 81, 82, 96, 97, 109, 243, 252], "If": [0, 2, 10, 19, 30, 35, 46, 56, 71, 73, 79, 92, 96, 98, 145, 146, 152, 154, 165, 173, 184, 185, 186, 187, 188, 194, 204, 211, 214, 220, 241, 245, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 276, 278], "ha": [0, 2, 8, 19, 27, 71, 79, 90, 95, 118, 119, 120, 121, 122, 123, 124, 125, 127, 229, 241, 243, 245, 246, 248, 250, 252, 253, 257, 259, 260, 262, 264, 265, 271, 273, 274, 276], "more": [0, 2, 8, 26, 208, 210, 211, 212, 214, 215, 243, 245, 247, 250, 256, 258, 260, 264, 265, 269, 272, 276, 277], "extra": [0, 243], "consid": [0, 2, 211, 212, 214, 243, 250, 253, 257, 259, 260, 265, 273], "start": [0, 2, 8, 36, 45, 96, 132, 144, 152, 211, 243, 245, 248, 250, 252, 255, 259, 260, 264, 265, 273, 274, 276, 278], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 232, 241, 243, 245, 246, 248, 250, 253, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 269, 273, 275, 276, 277, 278], "been": [0, 2, 6, 246, 250, 252, 260, 262, 264, 276], "provid": [0, 27, 154, 173, 245, 246, 250, 252, 257, 259, 260, 264, 265, 278], "default": [0, 1, 2, 6, 7, 19, 25, 27, 32, 33, 35, 36, 37, 42, 46, 48, 55, 71, 73, 75, 100, 104, 111, 117, 125, 139, 145, 146, 148, 152, 153, 154, 156, 158, 161, 162, 165, 173, 174, 176, 184, 185, 186, 187, 196, 197, 199, 204, 208, 211, 212, 214, 220, 235, 240, 243, 245, 247, 250, 257, 259, 262, 264, 265, 266, 267, 273, 278], "where": [0, 2, 33, 41, 207, 241, 242, 243, 246, 247, 250, 252, 255, 259, 260, 264, 265, 266, 269, 276, 278], "rexex": 0, "": [0, 10, 64, 140, 245, 252, 255, 260, 266, 270], "za": 0, "z": [0, 33], "either": [0, 2, 37, 209, 210, 245, 257, 260, 262, 264, 276], "surround": 0, "two": [0, 8, 9, 27, 30, 134, 241, 243, 244, 245, 260, 269, 273, 276, 278], "By": [0, 19, 27, 259, 260, 262], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 30, 46, 64, 72, 132, 142, 153, 211, 212, 213, 214, 226, 241, 242, 243, 245, 250, 257, 259, 260, 262, 263, 264, 265, 266, 267, 269, 273, 274, 276, 278], "interpret": [0, 243, 260], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 19, 26, 27, 28, 30, 33, 39, 48, 56, 64, 71, 73, 77, 78, 79, 80, 81, 82, 104, 117, 131, 132, 139, 150, 152, 153, 154, 155, 156, 158, 163, 165, 171, 173, 174, 179, 188, 193, 195, 196, 199, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 224, 226, 227, 228, 230, 235, 241, 242, 243, 245, 247, 250, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 272, 273, 274, 276, 277], "chang": [0, 2, 9, 19, 26, 27, 36, 157, 161, 163, 166, 167, 175, 178, 180, 192, 245, 248, 260, 262, 264, 265, 266, 273, 278], "howev": [0, 257, 259, 260, 264, 266, 276, 278], "one": [0, 2, 6, 8, 9, 10, 14, 23, 25, 26, 27, 35, 68, 75, 79, 87, 136, 152, 154, 165, 179, 188, 190, 191, 195, 199, 213, 217, 219, 222, 226, 227, 230, 243, 245, 246, 248, 252, 253, 255, 259, 260, 262, 264, 265, 266, 269, 276, 278], "legal": [0, 260], "ones": [0, 250, 255], "9": [0, 2, 6, 41, 57, 66, 78, 81, 90, 93, 95, 107, 109, 194, 202, 241, 242, 250, 252, 256, 257, 259, 260, 261, 263, 264, 265, 272, 273, 274, 275, 278], "sinc": [0, 6, 253, 255, 257, 264, 265, 266, 269, 278], "number": [0, 2, 6, 8, 14, 23, 25, 39, 46, 56, 61, 67, 73, 74, 105, 106, 107, 109, 132, 152, 153, 154, 155, 156, 165, 172, 177, 210, 213, 215, 218, 219, 241, 243, 245, 250, 252, 260, 272, 273, 274, 276, 278], "valu": [0, 1, 6, 10, 19, 25, 26, 27, 33, 37, 42, 43, 56, 60, 61, 66, 67, 77, 78, 79, 80, 81, 82, 86, 88, 90, 93, 95, 110, 114, 115, 152, 155, 176, 192, 204, 208, 210, 211, 212, 214, 215, 220, 240, 241, 243, 245, 248, 250, 252, 261, 262, 264, 273, 274, 275], "met": [0, 260], "doubl": 0, "big": 0, "warn": [0, 2, 12, 217, 225, 243, 250, 257, 259, 265, 278], "larger": [0, 260], "pad": 0, "filter": [0, 105, 106, 107, 243, 252], "so": [0, 25, 152, 224, 246, 247, 248, 253, 260, 266, 272, 278], "characterscannot": 0, "neither": [0, 260], "perform": [0, 14, 68, 245, 250, 260, 262, 265, 266], "order": [0, 8, 27, 30, 121, 123, 126, 127, 152, 163, 164, 169, 175, 180, 181, 209, 243, 245, 252, 260, 262, 265, 269, 276, 278], "given": [0, 2, 27, 36, 74, 77, 78, 80, 81, 82, 87, 88, 111, 113, 120, 125, 137, 145, 146, 153, 154, 155, 176, 182, 191, 192, 198, 204, 224, 226, 243, 245, 248, 250, 252, 255, 257, 259, 260, 265, 266, 272, 273], "critic": [0, 246], "case": [0, 2, 71, 83, 152, 220, 243, 250, 256, 257, 259, 260, 262, 264, 265, 271, 277], "illeg": 0, "get": [0, 4, 5, 7, 8, 10, 16, 17, 27, 30, 89, 91, 92, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 128, 219, 243, 252, 255, 259, 260, 263, 269, 277, 278], "need": [0, 2, 37, 68, 83, 116, 243, 245, 247, 248, 253, 255, 256, 260, 262, 264, 268, 269, 278], "becaus": [0, 8, 243, 260, 264], "later": [0, 256, 260], "comparison": [0, 265, 269], "It": [0, 19, 222, 246, 248, 252, 253, 256, 257, 258, 260, 262, 263, 264, 267, 272, 276, 278], "possibl": [0, 2, 6, 27, 30, 121, 122, 123, 127, 183, 211, 214, 243, 248, 252, 257, 260, 263, 264, 265, 266, 267, 269, 272, 276, 278], "done": [0, 1, 68, 69, 77, 78, 80, 81, 82, 152, 246, 262, 264, 265, 267, 273], "eq": [0, 16, 264], "ne": [0, 264], "text": [0, 19, 35, 262, 269], "otherwis": [0, 6, 8, 19, 30, 33, 35, 37, 40, 68, 71, 92, 98, 117, 118, 119, 124, 129, 130, 131, 152, 163, 173, 174, 175, 176, 177, 180, 246, 252, 260, 262, 269], "appropri": [0, 19, 246, 260], "letter": [0, 117], "alphanum": 0, "underscor": 0, "real": [0, 252, 253], "special": [0, 6, 188, 252, 253, 260], "digit": [0, 67, 243], "enclos": 0, "ok": [0, 253], "w": [0, 30, 68, 117, 129, 135, 136, 143, 156, 165, 174, 176, 179, 195, 260, 262, 264], "o": [0, 242, 244, 245, 249, 273], "With": [0, 276], "eqn": 0, "ge": 0, "etc": [0, 3, 243, 264, 266, 274, 276], "maximum": [0, 14, 35, 67, 210, 245, 250], "have": [0, 6, 8, 19, 27, 30, 35, 37, 126, 188, 212, 219, 224, 226, 243, 245, 247, 248, 250, 252, 253, 256, 257, 259, 260, 262, 264, 265, 266, 267, 269, 276, 278], "12": [0, 1, 57, 90, 93, 95, 96, 97, 107, 202, 241, 242, 250, 252, 255, 257, 260, 261, 263, 265, 270, 272, 273, 274, 275], "must": [0, 25, 39, 71, 152, 165, 222, 242, 245, 247, 259, 260, 262, 264], "decreas": [0, 253], "within": [0, 152, 246, 260, 276], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 27, 30, 173, 241, 246, 248, 250, 253, 260, 266, 278], "affect": [0, 104, 260, 266], "even": [0, 25, 74, 76, 90, 95, 247, 260, 266], "still": [0, 260, 266, 278], "cannot": [0, 8, 56, 71, 221, 243, 252, 260, 264, 276], "both": [0, 1, 2, 19, 39, 160, 219, 243, 246, 250, 252, 257, 259, 260, 262, 265, 273, 276, 278], "reenter": 0, "think": 0, "risk": [0, 260], "being": [0, 6, 27, 56, 155, 156, 158, 174, 242, 243, 247, 255, 260, 266, 269, 274, 278], "truncat": 0, "encod": [0, 179, 195, 243, 252, 267], "here": [0, 2, 104, 252, 253, 254, 257, 262, 264, 265, 269, 276, 277, 278], "possibli": [0, 269], "partial": [0, 245, 269], "list": [0, 2, 6, 8, 10, 13, 14, 16, 18, 26, 27, 30, 33, 37, 39, 71, 75, 76, 84, 85, 87, 88, 99, 100, 104, 111, 113, 128, 133, 145, 146, 152, 153, 159, 165, 173, 184, 185, 186, 187, 189, 190, 191, 192, 199, 204, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 231, 241, 242, 243, 245, 246, 248, 250, 252, 259, 260, 262, 264, 272, 273, 274, 276], "decid": [0, 2, 125, 257, 259, 260, 265, 273], "whether": [0, 25, 33, 35, 37, 71, 120, 125, 152, 165, 200, 202, 220, 223, 235, 245, 257, 260, 264, 265, 276], "put": [0, 132, 152, 253, 255], "up": [0, 246, 250, 278], "written": [0, 196, 243, 260, 262, 266, 276], "scientif": [0, 253], "14": [0, 57, 78, 90, 95, 107, 202, 241, 242, 250, 252, 257, 259, 260, 261, 263, 272, 274, 275], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 19, 96, 241, 264], "describ": [0, 2, 16, 27, 30, 56, 121, 122, 123, 126, 127, 241, 250, 252, 257, 259, 262], "output": [0, 8, 16, 19, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 219, 243, 245, 248, 260, 262, 264, 276, 278], "alwai": [0, 154, 243, 252, 265], "synonym": [0, 243], "name": [0, 1, 2, 6, 7, 8, 10, 13, 14, 16, 18, 19, 23, 25, 26, 27, 31, 32, 35, 37, 38, 39, 43, 46, 56, 67, 69, 70, 71, 74, 75, 80, 81, 82, 87, 91, 96, 97, 100, 102, 104, 107, 109, 111, 113, 117, 120, 128, 129, 132, 134, 139, 142, 145, 146, 151, 152, 159, 165, 170, 173, 184, 185, 186, 187, 190, 191, 204, 207, 208, 209, 212, 216, 217, 220, 222, 223, 224, 226, 227, 229, 230, 231, 232, 240, 242, 243, 245, 247, 250, 252, 259, 260, 263, 264, 268, 273, 274, 276, 277, 278], "avail": [0, 1, 2, 6, 33, 40, 56, 116, 129, 163, 175, 177, 180, 204, 241, 245, 247, 250, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 273, 275, 276, 278], "carri": [0, 260], "over": [0, 109, 132, 152, 176, 200, 201, 202, 241, 242, 255, 259, 276], "onc": [0, 130, 250, 266], "covari": [0, 6, 10, 18, 27, 34, 35, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 63, 71, 95, 104, 120, 128, 135, 141, 142, 153, 154, 155, 159, 209, 210, 243, 245, 250, 252, 253, 259, 262, 269, 274, 276, 277], "final": [0, 2, 34, 141, 206, 243, 250, 255, 257, 259, 260, 265, 266, 273, 274], "estim": [0, 1, 2, 14, 15, 19, 25, 26, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 57, 61, 66, 67, 71, 79, 86, 87, 88, 134, 135, 140, 141, 144, 149, 153, 154, 155, 156, 158, 161, 162, 163, 166, 168, 169, 173, 174, 175, 177, 179, 180, 181, 185, 186, 187, 191, 192, 193, 194, 195, 199, 208, 209, 220, 241, 242, 243, 245, 250, 251, 253, 257, 259, 261, 265, 268, 269, 272, 273, 276, 277], "oppos": 0, "ext": [0, 243, 276], "per": [0, 6, 14, 26, 68, 105, 106, 107, 109, 153, 154, 176, 219], "est": [0, 34, 36, 45, 141, 144], "first": [0, 2, 27, 35, 40, 74, 90, 95, 121, 123, 134, 161, 163, 164, 169, 175, 177, 180, 243, 245, 250, 255, 257, 259, 260, 266, 269, 276, 278], "call": [0, 219, 232, 243, 247, 248, 260, 266, 278], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 242, 243, 245, 247, 250, 257, 259, 265, 269, 270, 272, 273, 274, 276, 277], "theta": [0, 1, 30, 33, 35, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 66, 67, 68, 86, 87, 88, 110, 114, 115, 117, 129, 130, 131, 135, 136, 140, 154, 155, 166, 167, 173, 178, 179, 185, 186, 187, 189, 191, 192, 194, 195, 243, 257, 259, 262, 263, 265, 266, 269, 273], "sigma": [0, 1, 43, 49, 50, 51, 52, 58, 59, 60, 62, 63, 67, 110, 114, 115, 135, 136, 140, 154, 155, 156, 158, 174, 241, 255, 257, 259, 262, 263, 264, 265, 266], "omega": [0, 1, 23, 27, 43, 49, 50, 51, 52, 57, 58, 59, 60, 62, 63, 66, 67, 71, 110, 114, 115, 135, 136, 140, 154, 155, 184, 194, 243, 245, 255, 257, 259, 262, 263, 264, 265, 266, 272, 273], "fix": [0, 1, 2, 25, 26, 33, 43, 48, 71, 86, 87, 88, 110, 114, 115, 160, 166, 167, 178, 184, 189, 191, 192, 208, 245, 257, 260, 262, 269, 276], "offdiagon": 0, "could": [0, 19, 243, 252, 260, 264, 268, 269, 278], "part": [0, 27, 74, 241, 243, 245, 248, 260, 262, 266, 269, 276], "NO": [0, 260], "probabl": 0, "same": [0, 2, 8, 10, 16, 19, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 67, 68, 71, 75, 76, 83, 86, 87, 88, 96, 117, 126, 130, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 209, 212, 222, 224, 226, 242, 243, 245, 246, 250, 252, 255, 259, 260, 262, 264, 265, 276, 278], "type": [0, 2, 6, 8, 10, 19, 29, 30, 35, 48, 111, 133, 137, 204, 209, 211, 212, 214, 240, 243, 245, 248, 250, 255, 256, 257, 258, 259, 260, 262, 264, 265, 269], "now": [0, 243, 248, 264, 266], "investig": 0, "follow": [0, 2, 35, 131, 184, 241, 243, 245, 246, 248, 250, 252, 253, 256, 257, 259, 260, 262, 264, 265, 266, 268, 276, 278], "like": [0, 19, 27, 260, 264, 266, 269, 276], "One": [0, 27, 132, 133, 229, 269, 278], "last": [0, 30, 162, 220], "left": [0, 4, 56, 262, 264, 268], "justifi": 0, "size": [0, 6, 13, 152, 243, 246, 264, 269], "13": [0, 1, 2, 57, 90, 93, 95, 96, 107, 202, 241, 242, 250, 252, 257, 259, 260, 261, 263, 265, 270, 272, 274, 275], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 226, 227, 230, 240, 241, 242, 243, 244, 246, 248, 250, 255, 256, 258, 259, 260, 261, 263, 268, 269, 272, 274, 275, 277], "n": [0, 6, 18, 23, 27, 41, 71, 149, 154, 155, 172, 177, 184, 186, 213, 241, 242, 243, 245, 255, 257, 259, 262, 264], "flatten": [0, 243], "triangular": 0, "correl": [0, 49, 50, 51, 52, 58, 59, 62, 63, 66, 71, 194, 243, 272], "abov": [0, 33, 35, 37, 66, 241, 242, 250, 255, 260, 262, 278], "off": 0, "diagon": [0, 135, 243, 257, 262, 263, 265], "obj": [0, 19], "right": [0, 4, 8, 16, 260, 262, 264, 278], "also": [0, 2, 27, 76, 152, 243, 247, 248, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 273, 276, 278], "22": [0, 2, 57, 77, 78, 80, 81, 90, 95, 107, 109, 202, 241, 242, 250, 252, 255, 259, 261, 263, 275], "integ": [0, 6, 117, 243, 245, 276], "5": [0, 1, 2, 30, 33, 49, 51, 52, 56, 57, 59, 62, 68, 78, 79, 88, 90, 93, 95, 97, 107, 109, 117, 129, 130, 131, 135, 187, 192, 202, 218, 219, 241, 242, 250, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 270, 272, 274, 275, 278], "expon": [0, 1, 33, 208, 245], "regular": [0, 10, 258], "take": [0, 2, 25, 73, 243, 246, 252, 257, 259, 260, 264, 265, 269], "19": [0, 2, 57, 78, 90, 95, 107, 202, 241, 242, 250, 252, 257, 261, 263, 264, 272, 274, 275], "posit": [0, 27, 154, 155, 243, 245, 246, 253], "neg": [0, 276], "For": [0, 2, 8, 35, 37, 105, 106, 107, 131, 188, 208, 210, 211, 212, 214, 215, 241, 242, 245, 247, 248, 250, 255, 256, 260, 262, 264, 265, 266, 269, 276, 278], "20": [0, 57, 81, 90, 95, 107, 202, 241, 242, 250, 252, 260, 261, 263, 270, 272, 273, 274, 275], "In": [0, 71, 83, 246, 248, 250, 257, 259, 260, 262, 264, 269, 276, 278], "observ": [0, 6, 19, 40, 96, 105, 106, 107, 108, 109, 163, 175, 177, 180, 181, 218, 219, 241, 243, 255, 269, 272, 275, 277], "byte": 0, "evid": [0, 98, 243], "toward": [0, 96, 243], "token": [0, 276], "whitespac": 0, "parenthes": [0, 276], "multipl": [0, 4, 27, 30, 217, 243, 250, 253, 262, 273, 274, 276, 277], "open": [0, 246, 248, 258, 260, 267], "keyword": [0, 245], "kept": [0, 83, 243, 245, 257], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 23, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 243, 245, 247, 248, 250, 252, 253, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 273, 278], "csv": [0, 2, 28, 140, 196, 221, 243, 245, 250, 252, 257, 259, 264, 265, 273, 276], "wgt": [0, 2, 4, 6, 10, 30, 33, 35, 68, 75, 76, 90, 95, 104, 116, 117, 129, 130, 131, 135, 136, 142, 185, 186, 187, 190, 208, 210, 252, 255, 262, 264, 266, 269, 272, 276], "23": [0, 2, 56, 57, 61, 73, 78, 90, 95, 107, 153, 154, 155, 202, 241, 242, 250, 252, 257, 259, 261, 263, 265, 274, 275], "titl": 0, "crash": [0, 243], "nmtran": [0, 6], "There": [0, 224], "72": [0, 2, 250], "includ": [0, 2, 3, 18, 23, 27, 42, 133, 220, 242, 243, 246, 250, 257, 258, 259, 260, 264, 272, 274, 276], "come": [0, 248, 260], "filenam": [0, 19, 222, 226, 227, 262], "repres": [0, 4, 6, 19, 25, 26, 27, 245, 250, 252, 253, 255, 260, 262, 264], "rel": [0, 14, 243, 255], "path": [0, 1, 2, 10, 19, 28, 46, 72, 94, 137, 138, 140, 196, 197, 198, 205, 207, 209, 221, 222, 223, 224, 226, 227, 228, 230, 235, 243, 245, 247, 250, 252, 257, 259, 262, 264, 265, 273, 274, 276, 278], "work": [0, 243, 246, 248, 260, 262, 269], "directori": [0, 198, 207, 222, 223, 224, 243, 245, 247, 248, 250, 262, 264, 274], "when": [0, 14, 35, 68, 243, 246, 248, 252, 259, 260, 262, 264, 266, 272, 274, 276, 278], "invok": [0, 19], "nmfe": 0, "content": [0, 1, 2, 218, 219, 250, 252, 257, 259, 260, 265, 273], "simpli": [0, 25, 248, 266], "seen": [0, 1, 2, 250, 252, 257, 259, 265, 273], "54": [0, 57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 265, 270, 272, 275], "doe": [0, 2, 8, 46, 74, 94, 148, 222, 223, 224, 227, 228, 243, 253, 257, 259, 260, 265, 266, 272, 278], "pk": [0, 2, 38, 42, 111, 135, 243, 245, 250, 257, 262, 265, 266, 276, 277], "pred": [0, 81, 135, 140, 243, 262, 263, 264, 272, 275], "simpl": [0, 1, 135, 183, 220, 262, 264, 266], "merg": [0, 243, 260], "placement": [0, 247], "place": [0, 247, 260, 264, 278], "seem": 0, "restrict": [0, 224, 260], "automat": [0, 14, 33, 209, 243, 248, 250, 256, 260, 273, 276], "creat": [0, 2, 4, 5, 7, 8, 10, 15, 17, 18, 19, 23, 25, 26, 27, 28, 68, 72, 73, 74, 92, 93, 98, 140, 145, 165, 173, 198, 207, 218, 219, 222, 223, 224, 225, 226, 232, 235, 241, 242, 243, 245, 248, 250, 251, 252, 255, 257, 259, 261, 262, 265, 269, 270, 272, 273, 274, 275, 276, 277], "continu": [0, 2, 6, 35, 209, 243, 245, 246, 248, 250, 255, 260, 269, 276, 278], "factor": [0, 269], "compil": [0, 260], "11138": 0, "445": [0, 257], "though": [0, 260], "outsid": [0, 243, 246, 260], "standard": [0, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 63, 72, 195, 241, 243, 253, 255, 260, 266, 269, 272, 273, 275], "gfortran": 0, "8": [0, 2, 6, 49, 50, 51, 52, 57, 58, 59, 62, 63, 90, 95, 97, 107, 109, 202, 241, 242, 250, 252, 256, 257, 259, 260, 261, 262, 263, 264, 270, 272, 273, 274, 275, 278], "hh": 0, "j": [0, 186, 242, 255], "nep": 0, "h": [0, 245], "second": [0, 134, 245, 250, 266], "f": [0, 30, 68, 117, 129, 135, 136, 143, 156, 158, 165, 173, 174, 176, 195, 241, 245, 249, 260, 262, 264, 266], "respect": [0, 2, 243, 246, 255, 260, 264, 265, 266], "ep": [0, 30, 68, 108, 117, 129, 135, 136, 143, 156, 165, 173, 176, 195, 243, 245, 262, 264, 266], "implicit": [0, 243], "kind": [0, 6, 8, 111, 260], "dpsize": 0, "main": [0, 245, 269, 278], "function": [0, 3, 10, 14, 16, 33, 35, 53, 54, 73, 76, 77, 78, 80, 81, 82, 86, 87, 88, 101, 108, 112, 121, 122, 123, 127, 156, 158, 166, 174, 183, 188, 191, 192, 194, 198, 204, 211, 214, 229, 241, 243, 245, 248, 253, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 272, 273, 274, 276, 278], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 13, 18, 19, 23, 27, 31, 32, 39, 56, 74, 79, 100, 110, 113, 114, 116, 125, 136, 155, 208, 209, 243, 245, 250, 252, 253, 257, 263, 264, 269, 272, 277], "doesn": [0, 30, 226, 243, 257], "t": [0, 6, 8, 16, 30, 33, 168, 169, 181, 187, 220, 226, 231, 232, 235, 242, 243, 245, 255, 257, 262, 270, 272], "declar": [0, 2, 68, 130, 250, 276], "assign": [0, 6, 30, 68, 243, 245], "stop": 0, "entri": [0, 225], "symbol": [0, 4, 5, 7, 8, 9, 13, 16, 17, 18, 19, 23, 25, 26, 27, 30, 53, 54, 68, 74, 77, 78, 79, 80, 81, 82, 101, 104, 108, 112, 116, 130, 136, 151, 173, 209, 243, 250, 253, 264, 269], "separ": [0, 10, 71, 83, 131, 152, 184, 224, 245, 248, 250, 252, 253, 255, 260, 264, 269, 276], "thnn": 0, "nn": [0, 255], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 25, 27, 260, 264], "ad": [0, 9, 35, 37, 41, 83, 211, 212, 214, 243, 245, 250, 259, 260, 266, 273, 274, 277], "x": [0, 1, 2, 26, 33, 68, 77, 78, 93, 153, 241, 250, 252, 255, 257, 259, 263, 264, 265, 267, 273, 274], "xxe": 0, "xx": 0, "string": [0, 6, 10, 27, 28, 30, 100, 104, 137, 138, 139, 140, 243, 252, 265], "tool": [1, 2, 3, 14, 45, 143, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 228, 230, 235, 240, 241, 243, 244, 245, 248, 250, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 268, 269, 273, 277], "add": [1, 9, 14, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 68, 83, 173, 174, 243, 245, 252, 257, 260, 265, 266, 267, 276], "allometr": [1, 2, 33, 208, 245, 276], "scale": [1, 2, 6, 33, 55, 60, 64, 208, 243, 245, 255, 264, 267, 276], "pharmr": [1, 2, 3, 243, 248, 250, 253, 256, 257, 258, 259, 265, 273, 277], "command": [1, 243, 248, 250, 256, 257, 258, 259, 260, 264, 265, 273, 277], "line": [1, 68, 243, 250, 256, 257, 258, 259, 260, 264, 265, 273, 277], "To": [1, 2, 245, 248, 250, 256, 257, 259, 260, 264, 265, 267, 273, 276, 278], "initi": [1, 2, 8, 15, 16, 19, 25, 26, 33, 37, 39, 40, 41, 42, 43, 71, 73, 79, 86, 87, 88, 149, 156, 158, 163, 165, 166, 168, 169, 173, 174, 175, 177, 180, 181, 185, 186, 187, 191, 192, 193, 194, 208, 209, 231, 243, 245, 250, 255, 257, 259, 260, 265, 273, 277], "python": [1, 2, 242, 243, 245, 250, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 273, 276, 277], "r": [1, 2, 28, 242, 243, 250, 252, 253, 256, 257, 258, 259, 262, 263, 264, 265, 266, 273, 276, 277], "run_allometri": 1, "start_model": [1, 218, 250, 257, 259, 265, 273, 276], "read_model": [1, 139, 140, 243, 250, 252, 257, 259, 262, 263, 264, 265, 273, 278], "re": [1, 2, 198, 205, 206, 210, 216, 223, 228, 230, 242, 250, 257, 259, 262, 263, 264, 265, 273, 275, 276, 278], "code": [1, 19, 21, 68, 89, 104, 116, 121, 122, 123, 127, 135, 140, 173, 174, 197, 243, 250, 257, 258, 259, 260, 265, 266, 268, 269, 273, 277, 278], "redefin": [1, 250, 257, 259, 265, 273], "accordingli": [1, 250, 257, 259, 265, 266, 273], "descript": [1, 2, 6, 19, 31, 218, 219, 220, 240, 241, 243, 247, 250, 252, 257, 259, 262, 265, 269, 273, 274], "allometric_vari": [1, 2, 33, 208, 209, 245], "wt": [1, 2, 30, 33, 208, 250, 274], "reference_valu": [1, 2, 33, 208, 245], "refer": [1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 68, 71, 75, 76, 83, 86, 87, 88, 117, 126, 130, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 206, 208, 209, 220, 243, 245, 250, 260, 266, 277, 278], "70": [1, 2, 33, 90, 208, 252, 272], "appli": [1, 2, 19, 156, 158, 165, 173, 174, 185, 186, 187, 208, 243, 245, 246, 252, 255, 260, 265, 272, 276, 278], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 33, 37, 42, 65, 68, 71, 75, 83, 87, 88, 91, 93, 95, 97, 99, 100, 102, 110, 111, 114, 115, 117, 121, 122, 123, 125, 127, 128, 133, 136, 145, 146, 153, 154, 165, 167, 173, 178, 184, 185, 186, 187, 189, 190, 191, 192, 207, 208, 211, 212, 214, 220, 222, 226, 227, 236, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 276, 278], "cl": [1, 2, 4, 8, 16, 26, 30, 33, 35, 37, 39, 41, 56, 68, 74, 84, 100, 111, 113, 117, 120, 125, 129, 130, 131, 135, 136, 142, 145, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 183, 185, 186, 187, 208, 210, 250, 255, 257, 259, 262, 264, 266], "q": [1, 33, 208, 243], "v": [1, 8, 16, 26, 30, 33, 41, 56, 68, 85, 100, 111, 116, 117, 129, 130, 131, 135, 136, 145, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 208, 210, 248, 250, 255, 259, 262, 264, 266, 275, 276], "75": [1, 33, 208], "lower_bound": [1, 2, 33, 208, 245], "lower": [1, 2, 25, 26, 33, 35, 43, 66, 86, 87, 88, 110, 114, 115, 148, 166, 167, 173, 178, 189, 192, 208, 209, 245, 253, 257, 262, 264], "bound": [1, 25, 26, 33, 43, 67, 155, 167, 178, 185, 186, 187, 189, 194, 208, 245, 262], "upper_bound": [1, 2, 33, 208, 245], "upper": [1, 25, 26, 33, 35, 43, 86, 87, 88, 110, 114, 115, 148, 166, 167, 178, 189, 192, 208, 243, 245, 262, 264], "should": [1, 6, 14, 25, 33, 35, 37, 39, 43, 152, 165, 208, 211, 212, 214, 243, 245, 246, 247, 248, 250, 253, 255, 257, 259, 260, 261, 264, 265, 269, 273], "true": [1, 2, 6, 8, 10, 15, 19, 26, 33, 34, 55, 65, 74, 75, 83, 86, 87, 88, 104, 118, 119, 121, 122, 123, 124, 125, 127, 141, 142, 154, 160, 161, 162, 165, 173, 174, 177, 190, 191, 192, 193, 197, 202, 208, 220, 221, 229, 243, 250, 252, 257, 259, 264, 265, 266, 267, 273, 274, 275, 278], "No": [1, 6, 227, 228, 260, 265], "select": [1, 2, 152, 185, 187, 219, 241, 243, 245, 250, 257, 259, 262, 265, 267, 273, 274, 276], "see": [1, 2, 6, 8, 19, 35, 37, 202, 208, 210, 211, 212, 214, 215, 245, 246, 248, 250, 252, 253, 257, 259, 260, 261, 264, 265, 266, 269, 273, 276], "about": [1, 2, 6, 246, 250, 252, 256, 257, 259, 260, 264, 265, 273, 276], "actual": [1, 2, 25, 131, 250, 257, 259, 260, 265, 273], "minim": [1, 2, 250, 257, 259, 265, 273], "statu": [1, 2, 243, 250, 253, 257, 259, 260, 265, 273], "time": [1, 2, 6, 7, 9, 10, 26, 30, 33, 39, 40, 68, 75, 76, 90, 96, 97, 102, 109, 117, 128, 129, 130, 131, 132, 135, 136, 140, 147, 163, 175, 176, 177, 180, 188, 209, 215, 243, 245, 250, 255, 257, 259, 260, 262, 263, 265, 266, 269, 272, 273, 275, 276], "you": [1, 2, 248, 250, 256, 257, 258, 259, 260, 264, 265, 266, 269, 273, 277, 278], "look": [1, 2, 30, 46, 100, 125, 250, 257, 259, 265, 266, 273, 276], "summary_model": [1, 2, 243, 250, 257, 259, 265, 273, 276], "tabl": [1, 2, 55, 135, 156, 219, 241, 242, 243, 248, 250, 251, 255, 257, 259, 261, 262, 265, 270, 272, 273, 274, 275, 276], "gener": [1, 2, 6, 19, 56, 61, 69, 73, 132, 152, 153, 154, 155, 231, 243, 245, 250, 252, 255, 257, 258, 259, 265, 268, 269, 273, 276], "summarize_modelfit_result": [1, 2, 243, 250, 257, 259, 265, 273], "minimization_success": [1, 2, 220, 250, 257, 259, 265, 273], "errors_found": [1, 2, 250, 257, 259, 265, 273], "pheno": [1, 8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 79, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 256, 262, 264, 266, 278], "phenobarb": [1, 135, 220, 262, 264], "scaled_model": [1, 2], "warnings_found": [1, 2, 250, 257, 259, 265, 273], "ofv": [1, 2, 48, 134, 200, 204, 211, 212, 214, 218, 219, 220, 243, 250, 257, 259, 265, 272, 273], "aic": [1, 2, 47, 204, 211, 212, 214, 243, 250, 257, 259, 265, 273], "bic": [1, 2, 48, 204, 211, 212, 214, 243, 245, 250, 257, 259, 265, 273, 276], "730": [1, 241, 255, 257], "894727": [1, 241, 255], "740": [1, 79, 96, 241, 252], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 220, 250, 257, 259, 265, 273], "estimation_runtim": [1, 2, 250, 257, 259, 265, 273], "_estim": [1, 257, 259, 265], "32": [1, 6, 57, 90, 95, 107, 202, 241, 242, 245, 252, 261, 263, 272, 275], "005818": [1, 255, 264], "121955": 1, "44555": [1, 255], "111053": [1, 255, 264], "201526": [1, 255, 264], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 255, 264], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 203, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 241, 243, 250, 255, 257, 259, 265, 270, 273, 276], "predict": [1, 2, 14, 19, 80, 81, 101, 104, 112, 133, 200, 201, 202, 218, 243, 250, 251, 257, 259, 265, 272, 273], "influenti": [1, 2, 200, 201, 219, 243, 250, 257, 259, 265, 273], "individu": [1, 2, 6, 19, 38, 55, 56, 57, 61, 71, 80, 81, 100, 101, 105, 106, 107, 109, 112, 133, 134, 145, 153, 154, 155, 193, 200, 201, 202, 218, 219, 243, 245, 250, 257, 259, 260, 265, 269, 272, 273, 277], "outlier": [1, 2, 201, 202, 219, 243, 250, 257, 259, 265, 273, 275], "summary_individuals_count": [1, 2, 250, 257, 259, 265, 273], "summarize_individuals_count_t": [1, 2, 243, 250, 257, 259, 265, 273], "parent_model": [1, 2, 19, 243, 250, 257, 259, 265, 273], "inf_select": [1, 2, 219, 250, 257, 259, 265, 273], "inf_param": [1, 2, 219, 250, 257, 259, 265, 273], "out_ob": [1, 2, 219, 250, 257, 259, 265, 273], "out_ind": [1, 2, 219, 250, 257, 259, 265, 273], "inf_outli": [1, 2, 219, 250, 257, 259, 265, 273], "differ": [1, 2, 3, 19, 24, 48, 218, 220, 241, 242, 243, 246, 250, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 272, 273, 274, 276, 278], "statist": [1, 6, 56, 61, 186, 250, 252, 255, 257, 259, 262, 264, 265, 273], "summary_individu": [1, 243, 250, 257, 259, 265, 273], "summarize_individu": [1, 219, 243, 250, 257, 259, 265, 273], "outlier_count": [1, 218, 250, 257, 259, 265, 273], "dofv_vs_par": [1, 218, 250, 257, 259, 265, 273], "id": [1, 6, 10, 57, 75, 76, 90, 93, 95, 96, 97, 99, 107, 109, 135, 136, 140, 153, 202, 242, 243, 245, 250, 252, 255, 257, 259, 261, 262, 263, 264, 265, 266, 273, 275], "nan": [1, 2, 93, 194, 243, 250, 252, 255, 257, 259, 265, 272, 273, 274], "742852": 1, "000000": [1, 2, 43, 49, 50, 51, 58, 241, 250, 255, 257, 259, 263, 265, 273], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 26, 39, 57, 71, 78, 90, 93, 95, 96, 107, 148, 167, 178, 186, 202, 241, 242, 250, 252, 255, 256, 257, 259, 260, 261, 263, 265, 272, 273, 274, 275, 276, 278], "092658": 1, "55": [1, 2, 6, 57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 265, 272, 275], "6": [1, 6, 57, 79, 90, 95, 107, 109, 202, 241, 242, 250, 252, 255, 257, 259, 260, 261, 263, 264, 265, 272, 273, 274, 275, 278], "535711": 1, "175743": 1, "56": [1, 57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 275], "764710": 1, "576072": 1, "57": [1, 57, 90, 95, 99, 107, 153, 202, 241, 242, 252, 255, 261, 263, 275], "975589": 1, "539779": 1, "58": [1, 57, 90, 95, 99, 107, 109, 153, 202, 241, 242, 252, 255, 261, 263, 274, 275], "194798": 1, "775689": 1, "59": [1, 57, 90, 93, 95, 97, 99, 105, 107, 109, 153, 202, 241, 242, 252, 255, 261, 263, 265, 275], "11": [1, 2, 57, 77, 78, 80, 90, 93, 95, 96, 107, 202, 241, 242, 250, 252, 255, 257, 260, 261, 263, 264, 265, 272, 274, 275, 276], "175577": 1, "462889": 1, "predicted_dofv": [1, 218, 219, 250, 257, 259, 265, 273], "predicted_residu": [1, 218, 219, 250, 257, 259, 265, 273], "118": [1, 153, 243, 255], "fulli": [2, 276], "best": [2, 243, 250, 257, 259, 260, 265, 273, 276], "dataset": [2, 10, 11, 12, 19, 44, 56, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 92, 93, 96, 98, 99, 103, 105, 106, 107, 109, 116, 126, 132, 137, 148, 152, 159, 188, 196, 209, 212, 242, 243, 245, 248, 255, 258, 259, 264, 275, 277], "combin": [2, 4, 71, 118, 119, 124, 156, 158, 174, 184, 213, 243, 245, 250, 255, 257, 260, 273, 276], "modelsearch": [2, 209, 214, 218, 243, 276], "ruvsearch": [2, 209, 215, 216, 243, 276], "covsearch": [2, 210, 243, 276], "run_amd": [2, 243, 278], "dataset_path": 2, "modeltyp": [2, 209, 245], "pk_oral": [2, 209, 245], "categor": [2, 6, 35, 209, 243, 245, 250, 252, 255, 276, 278], "sex": [2, 246, 250, 269, 276], "ag": [2, 6, 250, 274, 276], "occas": [2, 39, 209, 212, 243, 245, 259, 264], "visi": [2, 259], "c": [2, 9, 186, 244, 249, 250, 255, 259, 260, 264, 266, 273, 278], "specifi": [2, 6, 30, 37, 72, 76, 86, 88, 137, 139, 140, 148, 156, 158, 172, 174, 192, 243, 245, 259, 260, 262, 264, 278], "oral": [2, 276], "drug": [2, 269], "iiv": [2, 18, 23, 27, 32, 37, 39, 42, 48, 71, 100, 125, 145, 165, 184, 209, 211, 212, 214, 243, 245, 250, 258, 259, 276], "we": [2, 246, 248, 250, 255, 256, 258, 260, 264, 266, 269, 278], "our": [2, 246, 248, 249, 260, 269], "object": [2, 3, 4, 6, 7, 9, 10, 14, 19, 20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 43, 44, 45, 46, 47, 48, 53, 54, 60, 64, 65, 66, 67, 69, 70, 73, 74, 75, 76, 83, 86, 87, 88, 93, 101, 108, 110, 112, 114, 115, 116, 129, 131, 136, 137, 138, 139, 140, 141, 143, 144, 148, 150, 151, 156, 159, 161, 162, 166, 167, 170, 174, 176, 178, 182, 183, 188, 189, 190, 191, 192, 197, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 241, 243, 245, 247, 250, 252, 253, 257, 259, 260, 262, 264, 265, 266, 269, 273, 276], "build": [2, 209, 244, 245, 253, 264, 276], "pk_iv": [2, 209, 245], "cl_init": [2, 209, 245], "popul": [2, 19, 30, 43, 79, 80, 81, 101, 112, 117, 194, 209, 243, 245, 274], "clearanc": [2, 33, 84, 209, 243, 245, 250, 259, 266], "01": [2, 18, 27, 35, 173, 194, 209, 210, 245, 250, 264, 272, 274], "vc_init": [2, 209, 245], "central": [2, 7, 8, 9, 16, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 209, 245, 248, 253, 262, 264], "compart": [2, 6, 8, 9, 16, 40, 41, 91, 92, 102, 147, 149, 172, 177, 209, 243, 245, 265, 276], "volum": [2, 33, 41, 85, 209, 243, 245, 250, 259, 260], "mat_init": [2, 209, 245], "absorpt": [2, 111, 126, 157, 163, 175, 177, 180, 209, 214, 218, 243, 245, 257, 259, 265, 276], "search_spac": [2, 209, 214, 243, 245, 265, 276], "mfl": [2, 209, 210, 218, 243, 245, 250, 265], "lloq": [2, 148, 209, 245], "quantif": [2, 148, 209, 245], "loq": [2, 148, 209, 245], "data": [2, 6, 19, 32, 77, 78, 79, 80, 81, 82, 95, 104, 135, 136, 140, 148, 156, 158, 160, 174, 194, 209, 219, 241, 243, 252, 255, 258, 259, 260, 262, 264, 266, 269, 276, 278], "found": [2, 8, 26, 217, 241, 242, 243, 248, 251, 254, 255, 257, 259, 260, 263, 265, 272, 273, 276, 277, 278], "datainfo": [2, 19, 76, 137, 159, 196, 243, 276, 277], "bodi": [2, 6, 10, 246, 252, 260, 269], "weight": [2, 6, 10, 82, 179, 195, 252, 269, 273], "correspond": [2, 14, 171, 242, 250, 260, 275, 276], "file": [2, 10, 19, 28, 46, 72, 94, 135, 137, 138, 139, 140, 196, 197, 205, 221, 222, 223, 224, 226, 227, 228, 230, 243, 245, 248, 250, 256, 257, 258, 259, 260, 262, 265, 266, 268, 269, 273, 276, 277], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 225, 230, 243, 247, 250, 252, 260, 262, 264], "model_typ": 2, "elimin": [2, 111, 121, 122, 123, 127, 164, 168, 169, 181, 243, 245, 265, 276], "vc": [2, 41, 149, 250, 257], "mat": [2, 8, 42, 163, 175, 180, 242, 243, 244, 249, 250, 257, 264, 266, 273], "proport": [2, 37, 118, 119, 124, 152, 156, 158, 173, 174, 243, 245], "step": [2, 15, 19, 34, 36, 45, 141, 144, 161, 162, 210, 220, 243, 245, 248, 250, 256, 257, 259, 260, 265, 269, 273, 278], "foce": [2, 14, 15, 34, 36, 141, 161, 162, 245], "interact": [2, 14, 15, 34, 36, 135, 141, 161, 162, 243, 246, 260, 262, 264, 269, 276, 278], "specif": [2, 14, 19, 26, 45, 76, 152, 198, 243, 245, 252, 260, 262, 265, 269, 276], "support": [2, 8, 14, 30, 36, 37, 53, 54, 69, 77, 78, 80, 81, 82, 101, 108, 112, 157, 161, 162, 175, 210, 232, 243, 245, 250, 252, 253, 258, 260, 262, 264, 265, 266, 268, 269, 271, 276, 278], "nonmem": [2, 14, 68, 69, 76, 105, 106, 107, 171, 182, 213, 243, 244, 247, 248, 256, 258, 262, 263, 264, 269, 276, 277], "cmt": [2, 92, 243, 265], "rate": [2, 6, 8, 9, 17, 41, 126, 157, 163, 175, 177, 180, 243, 245, 276], "via": [2, 243, 245, 248, 256, 258, 262, 264, 266, 276, 278], "exclud": [2, 104, 218, 257, 259, 260, 265], "pleas": [2, 247, 248, 256, 260, 276, 278], "featur": [2, 248, 250, 257, 258, 259, 260, 273, 277, 278], "languag": [2, 89, 135, 246, 250, 253, 260, 265], "how": [2, 3, 154, 211, 214, 243, 245, 246, 248, 250, 252, 256, 257, 259, 260, 264, 265, 266, 274, 277], "defin": [2, 8, 61, 104, 116, 126, 131, 136, 250, 253, 260, 264, 275, 276], "depend": [2, 6, 19, 30, 56, 71, 156, 158, 174, 243, 247, 252, 257, 266, 276, 278], "zo": [2, 214, 218, 243, 245, 265, 276], "seq": [2, 245, 265, 276], "fo": [2, 14, 36, 161, 162, 243, 245, 265, 269, 276], "mm": [2, 243, 245, 265, 276], "mix": [2, 39, 48, 123, 169, 204, 243, 253, 256, 259, 262, 265, 269, 276], "lagtim": [2, 157, 175, 265, 276], "transit": [2, 8, 172, 177, 243, 245, 265, 276], "peripher": [2, 8, 41, 149, 172, 214, 218, 243, 245, 265, 276], "iv": [2, 209, 245, 276], "none": [2, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 39, 43, 46, 48, 56, 61, 70, 71, 73, 77, 78, 79, 80, 81, 82, 94, 133, 137, 139, 140, 145, 146, 148, 152, 153, 154, 155, 156, 158, 165, 171, 173, 174, 184, 185, 186, 187, 196, 199, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 222, 223, 231, 235, 243, 245, 252, 255, 257, 259, 264, 265, 276], "null": [2, 252, 257, 259, 265, 276, 278], "yield": [2, 132, 152], "workflow": [2, 3, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 243, 256, 260, 269, 276], "want": [2, 246, 248, 257, 258, 259, 260, 264, 265, 266, 268], "desir": [2, 227, 228], "subset": [2, 67, 153], "algorithm": [2, 210, 211, 214, 218, 243, 245, 269, 276, 278], "six": 2, "below": [2, 248, 257, 259, 260, 265, 273], "detail": [2, 208, 210, 211, 212, 214, 215, 260, 265, 272, 273, 276, 277], "regard": [2, 260, 265], "subhead": 2, "distribut": [2, 18, 23, 27, 39, 41, 56, 61, 71, 111, 131, 149, 153, 154, 155, 184, 187, 212, 232, 241, 243, 245, 255, 260, 262, 265, 272, 276, 277], "term": [2, 156, 243, 257, 260, 264], "keep": [2, 14, 25, 152, 222, 243, 246, 253, 257, 260], "well": [2, 56, 250, 252, 257, 259, 260, 264, 265, 272, 273, 276, 277], "iov": [2, 27, 39, 100, 125, 146, 212, 243, 245, 272, 276], "explain": [2, 250, 260, 269, 276], "ruv": [2, 165, 245], "power": [2, 35, 173, 245, 260, 269, 270, 272, 273], "vari": [2, 128, 176, 215, 243, 245, 273], "identifi": [2, 6, 32, 250, 252, 257, 260, 272, 276], "effect": [2, 35, 37, 48, 120, 125, 142, 145, 173, 204, 210, 243, 245, 253, 256, 260, 262, 269, 274, 276, 277], "option": [2, 13, 14, 19, 25, 27, 30, 33, 35, 37, 39, 45, 70, 71, 77, 78, 79, 80, 81, 82, 152, 173, 196, 199, 204, 208, 210, 211, 212, 214, 215, 231, 236, 241, 243, 245, 250, 252, 257, 259, 260, 262, 265, 277, 278], "reduced_stepwis": [2, 218, 243, 265, 276], "iiv_strategi": [2, 211, 214, 243, 245, 257, 265, 276], "absorption_delai": [2, 214, 243, 265, 276], "rank_typ": [2, 204, 211, 212, 214, 245, 257, 259, 265, 276], "cutoff": [2, 176, 200, 201, 202, 204, 211, 212, 214, 243, 245, 257, 259, 265, 276], "brute_forc": [2, 211, 243, 257], "fullblock": [2, 211, 214, 243, 257, 265], "tri": [2, 245, 265], "list_of_paramet": [2, 37, 39, 212, 245, 259], "random": [2, 3, 13, 18, 19, 23, 27, 39, 48, 56, 61, 73, 113, 116, 125, 153, 154, 155, 243, 245, 253, 255, 259, 272, 277], "group": [2, 26, 32, 132, 133, 152, 215, 245, 258, 273], "p_valu": [2, 215, 245, 273], "05": [2, 41, 49, 50, 51, 52, 58, 59, 62, 63, 149, 210, 215, 241, 245, 250, 262, 263, 272, 273, 274], "skip": [2, 215, 245, 250, 273], "p_forward": [2, 210, 245, 250], "p_backward": [2, 210, 245, 250], "max_step": [2, 210, 245, 250, 278], "scm": [2, 210, 243, 250, 269, 271, 278], "forward": [2, 210, 243, 245, 250, 274, 278], "backward": [2, 210, 220, 243, 245, 250, 274], "variou": [2, 68, 218, 219, 243, 245, 246, 248, 250, 253, 257, 259, 265, 269, 273], "access": [2, 250, 252, 257, 259, 260, 262, 265, 266, 273, 276, 278], "json": [2, 10, 28, 205, 206, 221, 243, 245, 250, 252, 257, 259, 264, 265, 273, 276], "format": [2, 69, 245, 247, 250, 253, 256, 257, 258, 259, 260, 262, 264, 265, 268, 273], "summary_tool": [2, 243, 250, 257, 259, 265, 273], "candid": [2, 210, 214, 243, 245, 250, 273, 276], "compar": [2, 204, 241, 243, 250, 269, 273], "rank": [2, 204, 211, 212, 214, 243, 245, 250, 273], "selected_model": 2, "modelsearch_run1": [2, 243], "iivsearch_run35": 2, "vp1": [2, 41, 149, 172, 264], "best_ruvsearch_2": [2, 273], "time_varying2": [2, 273], "iiv_on_ruv": [2, 243, 270, 272, 273], "iovsearch_run30": 2, "etai5": 2, "covsearch_run6": 2, "exp": [2, 30, 35, 37, 135, 185, 186, 187, 210, 250, 262, 264, 266], "dofv": [2, 200, 201, 218, 241, 242, 243, 250, 270, 272, 273], "n_param": [2, 273], "d_param": [2, 273], "2097": 2, "977183": 2, "2240": 2, "703380": 2, "142": 2, "726197": 2, "2278": 2, "644915": 2, "37": [2, 57, 90, 95, 97, 107, 202, 241, 242, 250, 252, 259, 261, 263, 275], "941535": 2, "2436": 2, "296090": 2, "157": 2, "651175": 2, "15": [2, 57, 78, 90, 95, 107, 202, 241, 242, 250, 252, 257, 259, 260, 261, 263, 264, 274, 275], "2571": 2, "507991": 2, "135": [2, 109, 252, 263, 264, 272], "211901": 2, "16": [2, 6, 57, 78, 90, 95, 107, 174, 187, 202, 241, 242, 250, 252, 257, 260, 261, 263, 264, 270, 272, 273, 274, 275], "2590": 2, "767668": 2, "259677": 2, "2597": 2, "989257": 2, "221589": 2, "17": [2, 57, 77, 78, 80, 81, 90, 93, 95, 107, 109, 202, 241, 242, 250, 252, 257, 259, 260, 261, 263, 264, 265, 270, 272, 275], "base_model": [2, 204], "qp1": [2, 41, 149, 172, 243, 264], "iivsearch_run1": 2, "covsearch_run11": 2, "cat": [2, 35, 210, 250, 276], "covsearch_run12": 2, "covsearch_run13": 2, "covsearch_run14": 2, "covsearch_run15": 2, "fals": [2, 6, 8, 13, 14, 16, 18, 23, 25, 26, 28, 32, 34, 35, 36, 43, 55, 65, 67, 74, 75, 83, 86, 87, 88, 104, 110, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 141, 142, 152, 154, 160, 166, 167, 173, 177, 178, 189, 191, 192, 193, 194, 196, 202, 220, 221, 223, 229, 235, 242, 250, 252, 262, 264, 266, 267, 274, 275], "2081": 2, "2220": 2, "2280": 2, "522613": 2, "2238": 2, "872": 2, "001789": 2, "1518": 2, "310447": 2, "2591": 2, "679149": 2, "2557": 2, "406757": 2, "767683": 2, "765222": 2, "767674": 2, "2556": 2, "767708": 2, "2061": 2, "030230": 2, "2189": 2, "928952": 2, "2187": 2, "799687": 2, "1476": 2, "416540": 2, "2510": 2, "871505": 2, "599113": 2, "957578": 2, "2509": 2, "960030": 2, "960064": 2, "pop_cl_estim": [2, 250, 273], "07": [2, 49, 50, 51, 52, 58, 59, 62, 63, 241, 257, 259, 262, 263, 272, 274], "25": [2, 57, 77, 80, 81, 90, 95, 97, 107, 202, 241, 242, 250, 252, 257, 261, 263, 265, 270, 272, 273, 275], "4279": 2, "73": [2, 109, 250, 252, 263, 273, 276, 278], "6465": 2, "74": 2, "65": [2, 6], "83": [2, 272], "08": [2, 49, 51, 52, 59, 62, 259, 262, 263], "36": [2, 57, 90, 95, 107, 202, 241, 242, 250, 252, 257, 259, 261, 263, 265, 272, 275], "78": 2, "86": 2, "48": [2, 57, 90, 95, 97, 107, 202, 241, 242, 250, 252, 259, 261, 263, 273, 274, 275], "35": [2, 57, 90, 95, 107, 202, 241, 242, 250, 252, 259, 261, 263, 273, 275], "pop_etai5wt_estim": 2, "pop_matage_estim": [2, 250], "pop_matsex_estim": [2, 250], "pop_matwt_estim": [2, 250], "pop_vcage_estim": [2, 250], "pop_vcsex_estim": [2, 250], "392976": 2, "pop_vcwt_estim": [2, 250], "pop_vp1age_estim": 2, "007563": 2, "pop_vp1sex_estim": 2, "pop_vp1wt_estim": 2, "001": [2, 35, 67, 194, 264, 274], "105": [2, 273], "dbic": [2, 243, 257, 259, 265], "128": [2, 6], "898722": 2, "iivsearch_run4": 2, "21": [2, 57, 77, 80, 90, 95, 107, 202, 241, 242, 250, 252, 255, 261, 263, 270, 272, 275], "611092": 2, "iivsearch_run5": 2, "572737": 2, "iivsearch_run2": 2, "929719": 2, "summary_error": [2, 250, 257, 259, 265], "summarize_error": [2, 243, 250, 257, 259, 265], "categori": [2, 6, 35, 39, 136, 217, 245, 250, 257, 259, 264, 265, 276], "error_no": [2, 250, 257, 259, 265], "2022": [2, 257, 259, 260, 265, 276], "225": 2, "messag": [2, 225, 243, 245, 250, 257, 259, 265], "success": [2, 243, 246, 250, 257, 259], "nhowev": 2, "problem": [2, 135, 140, 243, 257, 259, 260, 261, 262, 264, 266], "occur": [2, 151, 257, 259, 260, 278], "WITH": [2, 257, 259, 260], "THE": [2, 257, 259, 260], "page": [3, 242, 244, 247, 248, 265, 266], "public": [3, 253], "modul": [3, 8, 243, 247, 262, 264, 268, 278], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 243, 252, 256, 260, 262, 264, 276], "relat": [3, 222, 226, 227, 243, 246, 274], "statement": [3, 4, 8, 16, 19, 24, 33, 35, 37, 38, 39, 41, 42, 68, 117, 129, 130, 131, 143, 145, 149, 150, 156, 157, 158, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 180, 181, 183, 185, 186, 187, 195, 243, 245, 250, 260, 264, 269, 277], "transform": [3, 19, 156, 158, 160, 174, 185, 186, 187, 243, 245, 256, 258, 266, 272, 277], "manipul": [3, 26, 262, 264, 266], "built": [3, 129, 245, 248, 258], "run": [3, 71, 133, 198, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 230, 241, 242, 243, 251, 256, 258, 260, 261, 263, 268, 269, 272, 274, 275, 277, 278], "api_model": 3, "api_tool": 3, "packag": [3, 245, 247, 253, 256, 258, 260, 267, 269, 278], "express": [4, 5, 7, 8, 9, 10, 16, 17, 18, 23, 27, 30, 37, 53, 54, 56, 79, 91, 101, 102, 108, 112, 116, 156, 158, 173, 174, 182, 243, 245, 246, 250, 260, 264, 269, 275], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 246, 248, 258, 260, 262], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 204, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 243, 255, 257, 260, 261, 262, 264, 265, 266, 267, 272, 273, 274], "represent": [4, 16, 231, 252, 256, 262, 264, 266], "togeth": [4, 27, 157, 175, 248, 253, 255, 261, 273, 278], "sympi": [4, 6, 8, 16, 18, 23, 27, 30, 33, 56, 79, 108, 116, 253, 262, 269], "str": [4, 6, 7, 8, 10, 13, 18, 23, 25, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 43, 48, 56, 69, 70, 74, 75, 77, 78, 79, 80, 81, 82, 87, 89, 94, 100, 111, 113, 116, 120, 125, 129, 132, 134, 137, 138, 139, 140, 142, 145, 146, 152, 156, 158, 161, 165, 170, 171, 173, 174, 176, 184, 185, 186, 187, 190, 191, 196, 197, 198, 199, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 240, 243], "expr": [4, 9, 13, 16, 23, 27, 30, 33, 79, 108, 182, 208], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 36, 135, 140, 161, 162, 222, 223, 224, 225, 226, 227, 228, 229, 230, 242, 243, 245, 250, 253, 260, 262, 264, 269, 276, 278], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30], "free": [4, 5, 6, 7, 8, 16, 17, 18, 19, 23, 27, 30, 246, 260, 269], "note": [4, 6, 25, 68, 69, 93, 105, 106, 107, 220, 221, 222, 226, 227, 241, 252, 257, 259, 263, 264, 266, 274, 278], "hand": [4, 8, 16, 56], "side": [4, 8, 16, 56, 160], "pop_cl": 4, "eta_cl": [4, 37, 39, 266], "rhs_symbol": [4, 8, 16, 29], "classmethod": [4, 5, 7, 17, 18, 23, 25, 27, 28, 223, 225], "sub": [4, 5, 7, 8, 13, 16, 17, 18, 23, 27, 29, 30, 262], "substitut": [4, 5, 7, 8, 16, 17, 18, 23, 27, 29, 30, 260, 262, 264], "dict": [4, 5, 10, 13, 16, 17, 18, 23, 26, 27, 30, 45, 60, 77, 78, 80, 81, 82, 86, 88, 91, 102, 151, 166, 167, 178, 192, 222, 226, 227, 236, 252, 262], "old": [4, 30, 151, 243, 272], "new": [4, 6, 9, 10, 14, 19, 25, 26, 27, 30, 37, 39, 42, 43, 69, 70, 73, 74, 83, 86, 87, 88, 151, 152, 156, 158, 165, 166, 170, 173, 174, 191, 192, 194, 232, 245, 246, 248, 252, 260, 265, 268, 272, 273, 276, 277], "pair": [4, 5, 8, 17, 18, 23, 27, 30, 35, 66, 218], "return": [4, 6, 8, 9, 10, 15, 16, 19, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 229, 232, 235, 236, 243, 260], "updat": [4, 9, 10, 19, 26, 30, 193, 194, 196, 243, 245, 248, 258, 260, 265, 266, 269, 273, 277], "b": [4, 260, 265], "amount": [5, 6, 7, 8, 16, 17, 243, 252, 262], "dose": [5, 6, 7, 8, 9, 16, 17, 40, 83, 91, 96, 97, 104, 126, 147, 176, 243, 264, 277], "amt": [5, 7, 8, 10, 16, 17, 30, 33, 41, 68, 75, 76, 90, 97, 117, 129, 130, 131, 135, 136, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 252, 262, 264, 266], "dictionari": [5, 10, 14, 17, 18, 23, 26, 27, 28, 31, 77, 78, 80, 81, 82, 91, 102, 152, 166, 167, 178, 222, 226, 227, 236, 262], "unknown": [6, 252], "unit": [6, 116], "ratio": [6, 210, 215, 243, 245, 252, 273], "datatyp": [6, 137], "float64": [6, 10, 55, 62, 63, 66, 79, 80, 81, 82, 97, 109, 252, 262, 263, 264], "descriptor": [6, 10], "colum": 6, "measur": [6, 246, 252, 260], "bool": [6, 13, 19, 25, 28, 32, 33, 35, 43, 55, 65, 67, 74, 75, 83, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 152, 154, 165, 173, 174, 177, 193, 194, 196, 197, 208, 220, 221, 223, 229, 235], "discret": [6, 252, 259], "bar": [6, 255], "panda": [6, 10, 243, 253, 269], "dtype": [6, 10, 55, 60, 62, 63, 66, 67, 79, 80, 81, 82, 96, 97, 107, 109, 252, 262, 263, 264], "nomin": [6, 252], "ordin": [6, 252], "rang": [6, 28, 276], "na": 6, "int8": 6, "sign": [6, 186, 260], "bit": 6, "127": [6, 257], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 252], "147": 6, "483": 6, "648": [6, 241], "647": [6, 241, 257], "int64": [6, 107, 252], "64": 6, "223": [6, 251], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 57, 78, 90, 95, 107, 202, 241, 242, 250, 252, 257, 261, 263, 270, 272, 275], "446": 6, "744": [6, 79, 96, 252, 263], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 260], "float": [6, 13, 18, 23, 25, 33, 37, 42, 43, 47, 48, 66, 77, 78, 79, 80, 81, 82, 148, 155, 173, 176, 200, 201, 202, 204, 208, 209, 210, 211, 212, 214, 215, 243], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 76, 188, 243, 245, 262], "tran": [6, 76, 188, 243, 245, 262], "date": [6, 76, 188, 243, 260, 278], "common": [6, 35, 61, 236, 260, 264, 277], "birth": 6, "human": [6, 28, 269], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 252, 269], "concentr": [6, 93, 269], "substanc": 6, "blood": 6, "subject": [6, 14, 90, 99, 219, 260, 277], "uniqu": [6, 32, 46, 74, 152, 222, 232, 243, 245, 252, 276], "interv": [6, 252, 253], "ration": 6, "max": [6, 35, 168, 169, 241, 252], "datafram": [6, 15, 26, 28, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 77, 78, 80, 81, 82, 90, 93, 95, 132, 133, 137, 152, 153, 154, 155, 193, 200, 201, 202, 204, 217, 218, 219, 220, 225, 243, 250, 252, 269], "idv": [6, 10, 176, 252, 272], "independ": [6, 252, 260, 267, 272, 276], "dv": [6, 10, 30, 68, 75, 76, 90, 109, 117, 129, 133, 135, 136, 140, 156, 158, 168, 169, 174, 243, 252, 262, 264, 266, 275], "infus": [6, 126, 175, 180, 264], "addit": [6, 35, 37, 45, 74, 83, 118, 119, 124, 156, 158, 174, 243, 245, 250, 252, 260, 272, 273, 276], "interdos": 6, "ss": 6, "steadi": [6, 243], "state": [6, 26, 35, 243, 260, 274], "event": [6, 98, 188, 243, 246, 260], "mdv": [6, 103, 243], "miss": [6, 90, 95, 243], "yet": [6, 276], "exactli": 6, "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 165, 245, 260, 264, 269], "physic": [6, 116, 246, 252, 260], "recogn": [6, 171, 246, 260, 266], "without": [6, 9, 53, 54, 77, 78, 80, 81, 82, 101, 108, 112, 152, 224, 241, 243, 245, 248, 253, 260, 262], "static": [6, 10, 19], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 27, 28, 30, 69, 117, 131, 177, 243, 245, 276], "convert_pd_dtype_to_datatyp": 6, "deriv": [6, 10, 13, 14, 16, 18, 23, 25, 27, 116, 243, 248, 250], "kwarg": [6, 10, 13, 14, 19, 28, 36, 161, 198, 216, 227, 228, 243], "properti": [6, 14, 25, 260, 262], "is_categor": 6, "check": [6, 19, 25, 27, 65, 66, 67, 118, 119, 120, 121, 122, 123, 124, 126, 127, 229, 243, 247, 266, 276, 278], "is_numer": 6, "col1": 6, "col2": 6, "lag_tim": [7, 9], "bioavail": [7, 91, 243], "compartment": [7, 8, 16, 30, 243, 245, 262], "system": [7, 8, 9, 14, 16, 24, 30, 53, 54, 56, 77, 78, 80, 81, 82, 101, 108, 112, 126, 183, 226, 243, 245, 247, 248, 260, 262, 266, 277], "lag": [7, 9, 40, 102, 147, 243], "enter": [7, 260], "fraction": [7, 155, 241, 255], "bolu": [7, 8, 30, 41, 68, 117, 129, 149, 157, 163, 164, 168, 169, 172, 177, 181, 183, 245, 262], "comp": [7, 8, 243], "depot": [7, 8, 9, 163, 175, 177, 243, 264, 276], "alag": [7, 243], "a_centr": [7, 8, 16, 30, 68, 117, 129, 168, 169, 174, 181, 262], "builder": [8, 9], "odesystem": [8, 16, 30, 243], "od": [8, 14, 16, 24, 30, 42, 53, 54, 56, 77, 78, 80, 81, 82, 101, 108, 112, 126, 171, 183, 243, 245, 262, 277], "descib": 8, "cb": [8, 9], "compartmentalsystembuild": 8, "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 276], "k21": [8, 276], "vector": [8, 16, 18, 153, 154, 155, 242, 255, 262], "load_example_model": [8, 10, 15, 16, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 243, 256, 278], "pprint": [8, 16, 108], "ode_system": [8, 16, 30, 41, 149, 157, 163, 164, 168, 169, 172, 175, 177, 180, 181, 183, 243, 262], "a_output": [8, 16, 30, 262], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 231, 260], "compartment_nam": [8, 16], "compartmental_matrix": [8, 262], "matrix": [8, 18, 27, 49, 50, 51, 52, 56, 58, 59, 61, 62, 63, 66, 153, 154, 155, 242, 243, 245, 255, 262], "set_first_order_absorpt": [8, 42, 157, 175, 180, 243, 264], "dosing_compart": 8, "receiv": [8, 260], "output_compart": 8, "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 67, 126, 127, 131, 175, 180, 181, 243, 259, 265, 267, 276], "set_zero_order_absorpt": [8, 157, 163, 175, 243, 264, 278], "atom": 8, "http": [8, 242, 247, 252, 253, 255, 256, 260, 273], "doc": [8, 248], "org": [8, 242, 244, 247, 252, 255, 260, 273], "latest": [8, 243, 253, 256], "core": [8, 256, 262, 264], "html": [8, 72, 253, 260, 264], "basic": [8, 28, 182, 243, 247, 250, 252, 260, 266, 276, 277], "find_compart": 8, "its": [8, 25, 30, 67, 131, 194, 218, 243, 245, 247, 250, 252, 253, 256, 258, 260, 262, 278], "find_depot": 8, "out": [8, 27, 65, 194, 243, 260, 262, 268, 278], "find_transit_compart": 8, "chain": [8, 264], "singl": [8, 10, 25, 27, 184, 188, 199, 213, 217, 220, 222, 243, 245, 253, 255, 260, 264, 276], "distinguish": [8, 260], "get_compartment_inflow": 8, "go": [8, 213, 220, 243, 252, 260], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 196, 197, 222, 226, 227, 245], "ka": [8, 9, 16, 38, 243, 259], "get_n_connect": 8, "connect": [8, 19, 222, 224, 245, 252, 260, 269, 276, 277], "int": [8, 30, 33, 36, 45, 56, 61, 67, 73, 96, 105, 106, 144, 152, 153, 154, 155, 156, 161, 162, 172, 177, 208, 210, 211, 212, 213, 214, 215, 217], "to_compartmental_system": [8, 16, 24, 30], "to_explicit_system": [8, 16, 24, 30, 262], "skip_output": [8, 16], "explicit": [8, 16, 30, 39, 243, 245, 246, 250, 259, 262, 276], "boolean": [8, 25, 26, 83, 87, 88, 152, 160, 165, 191, 192, 200, 201, 202, 252], "leav": [8, 264], "result": [8, 14, 19, 27, 65, 71, 72, 91, 93, 102, 130, 134, 137, 148, 198, 199, 200, 201, 202, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 226, 227, 228, 230, 232, 235, 243, 246, 248, 258, 260, 266, 268, 269, 271, 277], "explicitodesystem": [8, 24, 243, 262], "equat": [8, 16, 56, 262], "condit": [8, 16, 243, 255, 260, 262, 273], "dt": [8, 16, 30, 262], "compartmentalsystem": [9, 16, 24, 243, 262], "newli": [9, 27, 259], "move_dos": 9, "move": [9, 194, 243], "anoth": [9, 19, 30, 232, 264], "remove_compart": 9, "remove_flow": 9, "set_dos": 9, "set_lag_tim": [9, 243], "force_absolute_path": 10, "sequenc": [10, 15, 26, 27, 30, 71, 210], "metadata": [10, 222, 223, 226, 227, 230, 243], "index": [10, 26, 27, 28, 30, 36, 45, 56, 61, 66, 67, 97, 109, 144, 161, 162, 217, 220, 242, 243, 250, 252, 255, 256, 262, 274, 278], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": 10, "idv_column": 10, "apgr": [10, 30, 33, 35, 68, 75, 76, 90, 95, 104, 117, 120, 129, 130, 131, 135, 136, 190, 210, 252, 255, 262, 264, 266, 272], "fa1": [10, 75, 76, 90, 135, 136, 252, 262, 264], "fa2": [10, 75, 76, 90, 135, 136, 252, 262], "replac": [10, 27, 152, 183, 243, 245, 253, 266], "example_model": 10, "dta": [10, 135, 262, 264, 266], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 243, 260, 264], "read_json": 10, "read": [10, 137, 138, 139, 140, 205, 209, 221, 222, 226, 227, 243, 247, 252, 256, 258, 260, 268, 269, 271, 276, 277], "set_column": 10, "col": 10, "exist": [10, 30, 35, 45, 46, 74, 94, 96, 222, 223, 224, 243, 245, 247, 250, 252, 259, 276], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 28, 252, 264], "recover": 12, "issu": [12, 22, 243, 248, 258, 278], "hashabl": 13, "level": [13, 18, 23, 27, 31, 32, 100, 125, 243, 245, 252, 258, 262, 264, 269, 274, 276], "variabilitylevel": 13, "parameter_nam": [13, 27, 87, 182, 189, 191, 243, 247, 264, 266], "definit": [13, 14, 19, 30, 57, 154, 155, 202, 243, 245, 250, 255, 260, 262, 276], "varianc": [13, 18, 23, 27, 55, 56, 61, 165, 194, 257, 262, 264, 276], "abstract": [13, 24, 29, 226, 230, 242, 244, 253, 258, 262], "evalf": [13, 18, 23], "numericdistribut": 13, "get_covari": [13, 18, 23, 27], "name1": [13, 18, 23, 134], "name2": [13, 18, 23, 134], "get_vari": [13, 18, 23], "latex_str": [13, 18, 23], "align": [13, 18, 23, 262, 264], "cov": [14, 15, 27, 34, 35, 36, 49, 56, 57, 59, 61, 62, 141, 154, 161, 162, 242, 243, 248, 255, 264], "evalu": [14, 36, 77, 78, 79, 80, 81, 82, 161, 162, 220, 241, 243, 269, 272, 275], "maximum_evalu": 14, "laplac": [14, 36, 161, 162, 243, 245], "isampl": [14, 36, 45, 161, 243], "niter": [14, 36, 45, 161, 243], "auto": [14, 15, 243], "keep_every_nth_it": [14, 15, 243], "residu": [14, 27, 82, 114, 201, 202, 218, 243, 258, 273, 275, 276, 278], "solver": [14, 171, 243, 245], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 45, 161, 276], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 69, 227, 228, 245, 247, 248, 250, 253, 258, 260, 262, 264, 268], "let": [14, 19, 243, 250, 255, 264, 266, 276], "uncertainti": [14, 56, 57, 61, 153, 154, 155, 243, 245, 255, 263], "epsilon": [14, 27, 53, 54, 77, 78, 136, 165, 173, 179, 195, 243, 245, 253], "calcul": [14, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 79, 93, 204, 241, 242, 243, 255, 257, 258, 259, 265, 277], "eta": [14, 27, 30, 33, 35, 37, 39, 53, 54, 55, 57, 68, 71, 77, 78, 80, 101, 108, 113, 117, 129, 130, 131, 135, 136, 140, 145, 146, 153, 165, 184, 185, 186, 187, 243, 245, 250, 253, 255, 257, 259, 262, 263, 266, 272, 276, 277, 278], "preserv": [14, 27, 260], "comput": [14, 248, 250, 260], "sampl": [14, 27, 73, 152, 153, 154, 155, 255], "similar": [14, 241, 260, 265, 273, 278], "em": 14, "everi": [14, 252, 260], "nth": 14, "iter": [14, 15, 30, 56, 132, 152, 154, 243, 270, 273], "laplacian": 14, "solv": [14, 243], "advan": [14, 171, 243], "cvode": [14, 171, 245], "advan14": [14, 171, 245], "dgear": [14, 171, 245], "advan8": [14, 171, 245], "dverk": [14, 171, 245], "advan6": [14, 171, 245], "ida": [14, 171, 245], "advan15": [14, 171, 245], "lsoda": [14, 171, 245], "advan13": [14, 171, 245, 264], "lsodi": [14, 171, 245], "advan9": [14, 171, 245], "absolut": [14, 66, 243, 260], "toler": 14, "supported_method": 14, "ITS": [14, 36, 161, 162, 243, 245, 259, 265], "impmap": [14, 36, 161, 162, 243, 245], "imp": [14, 36, 161, 162, 243, 245], "saem": [14, 36, 161, 162, 243, 245], "bay": [14, 161, 162, 245], "to_datafram": [15, 26, 225], "overview": [15, 225, 241, 245, 254, 274], "pd": [15, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 71, 77, 78, 79, 80, 81, 82, 90, 92, 93, 95, 96, 97, 98, 103, 107, 109, 132, 133, 134, 137, 152, 153, 154, 155, 193, 194, 200, 201, 202, 204, 217, 218, 219, 220, 225, 243, 252], "estimation_step": [15, 19, 34, 36, 45, 141, 144, 161, 162, 243], "doctest": [15, 248], "ellipsi": 15, "equal": [16, 35, 39, 152, 165, 245, 248, 264], "ic": 16, "explicitli": [16, 245, 259, 260], "differenti": [16, 262], "a_depot": 16, "k": [16, 56, 242, 243, 248, 250, 255], "eq1": 16, "eq2": 16, "ordinari": [16, 262], "durat": [17, 175, 180], "mutual": [17, 259, 276], "exclus": [17, 260, 276], "d1": [17, 243], "r1": 17, "symbolc": 17, "dur": 17, "tupl": [18, 27, 132, 152, 210, 216, 236], "mutabledensematrix": 18, "joint": [18, 27, 39, 71, 184, 255, 259, 262, 277], "omega_cl": [18, 23, 27], "omega_v": [18, 27], "corr_cl_v": [18, 27], "omega_cl_v": [18, 27], "dist": [18, 23, 27, 243, 248], "iiv_cl": [18, 23, 27, 266], "iiv_v": [18, 27, 264], "itself": [18, 23, 260], "omega1": 18, "omega2": 18, "omega_new": [18, 23, 27], "dependent_vari": [19, 243], "y": [19, 26, 30, 68, 116, 117, 129, 135, 136, 140, 143, 156, 158, 165, 173, 174, 176, 195, 262, 264, 266], "discript": 19, "estimationstep": [19, 34, 36, 141, 161, 162, 243], "filename_extens": 19, "extens": [19, 222, 224, 252, 260, 262], "initial_individual_estim": 19, "model_cod": [19, 243, 264], "modelfit_result": [19, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 77, 78, 79, 80, 81, 82, 153, 154, 155, 193, 194, 202, 243, 262, 263, 264, 278], "modelfit": [19, 213, 220, 222, 226, 227, 241, 243, 245, 277], "observation_transform": [19, 243], "parent": [19, 218, 219, 232], "random_vari": [19, 71, 184, 262, 264, 278], "randomvari": [19, 243], "value_typ": 19, "likelihood": [19, 47, 48, 210, 215, 245, 273], "2ll": [19, 47, 48, 243], "log": [19, 35, 37, 48, 131, 156, 158, 160, 174, 243, 252, 255, 264], "record": [19, 77, 78, 79, 80, 81, 82, 83, 132, 148, 243, 248, 266], "would": [19, 32, 131, 241, 250, 255, 260, 264, 266, 269, 278], "copi": [19, 39, 70, 110, 114, 115, 243, 257, 259, 260, 264, 276], "deepcopi": 19, "create_model": 19, "factori": 19, "io": [19, 248, 253, 256], "implement": [19, 222, 224, 226, 227, 259, 260, 262, 269, 276], "g": [19, 68, 74, 146, 214, 243, 248, 252, 255, 257, 259, 264, 265, 269, 273, 276, 278], "nonmem7": 19, "has_same_dataset_a": 19, "update_datainfo": 19, "msg": 21, "syntax": [21, 276], "modelfitresult": [22, 199, 200, 201, 202, 213, 243], "normal": [23, 27, 32, 39, 60, 64, 131, 255, 259, 260, 278], "abc": [24, 29, 226, 230], "init": [25, 26, 35, 43, 88, 166, 192, 194, 245, 255, 262], "union": [25, 30, 33, 35, 77, 78, 79, 80, 81, 82, 137, 173, 196, 197, 199, 208, 210, 211, 212, 214, 216, 224], "param": [25, 26, 245], "tvcl": [25, 30, 33, 37, 39, 68, 79, 117, 129, 130, 131, 135, 136, 145, 241, 255, 262, 264, 266], "005": 25, "constrain": [25, 253, 262], "unfix": [25, 86, 87, 88, 166, 189, 191, 192, 243], "back": [25, 64, 243], "previou": [25, 27, 30, 40, 71, 96, 117, 163, 175, 177, 180, 219, 235, 243, 260, 265, 277, 278], "less": 25, "greater": 25, "altern": [25, 186, 248, 260, 264], "constructor": 25, "immut": 26, "collect": [26, 27, 255, 260, 264, 276], "usual": [26, 248, 278], "wai": [26, 121, 122, 123, 127, 248, 250, 252, 260, 262, 264, 276, 278], "displai": [26, 156, 255, 260, 264], "summar": [26, 217, 219, 220, 255, 261], "par1": 26, "par2": 26, "pset": 26, "oo": [26, 43, 110, 114, 189, 262, 264], "fixed": [26, 86], "nonfix": 26, "set_fix": 26, "set_initial_estim": [26, 243], "100": [26, 35, 36, 45, 153, 161, 187, 241, 243, 245, 263, 264, 267, 274], "eta_level": 27, "variabilityhierarchi": 27, "epsilon_level": 27, "act": 27, "while": [27, 248, 264, 276, 278], "contin": 27, "hierarchi": [27, 31], "rv": [27, 71, 113, 150, 184, 262], "normaldistribut": 27, "covariance_matrix": [27, 49, 56, 59, 61, 62, 154, 241, 243, 262, 263], "nrv": 27, "variance_paramet": 27, "rv1": 27, "rv2": 27, "get_rvs_with_same_dist": 27, "join": [27, 184, 243, 246, 264], "ind": 27, "fill": 27, "name_templ": 27, "param_nam": 27, "taken": [27, 83, 90, 95, 188, 222, 252, 255], "remain": [27, 246, 260], "stai": 27, "templat": [27, 35, 37, 264], "overrid": [27, 247, 276], "dist1": 27, "dist2": 27, "_": [27, 28, 219, 242, 255], "unjoin": 27, "nearest_valid_paramet": 27, "parameter_valu": 27, "forc": [27, 74, 154, 155, 193, 196, 197, 243, 245, 259, 260], "small": 27, "parameters_sdcorr": 27, "sd": [27, 55, 264, 272, 275], "corr": [27, 51, 58, 272], "assum": [27, 222, 255, 260, 266], "var": [27, 57, 250, 255], "rng": [27, 56, 61, 73, 153, 154, 155], "jointnormaldistribut": 27, "validate_paramet": 27, "seri": [27, 51, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 79, 80, 81, 82, 92, 96, 97, 98, 103, 107, 109, 134, 154, 155, 156, 186, 194, 243, 263], "current": [27, 36, 37, 53, 54, 68, 69, 77, 78, 80, 81, 82, 101, 108, 112, 126, 129, 157, 161, 162, 175, 183, 188, 204, 210, 213, 226, 232, 242, 243, 245, 248, 250, 251, 255, 256, 258, 259, 260, 261, 262, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 278], "matric": [27, 57, 155, 243, 253, 263], "semidefinit": [27, 243, 253], "use_cach": 27, "symengin": [27, 253, 269], "cach": 27, "from_dict": [28, 223, 225], "get_and_reset_index": 28, "attr": 28, "wrapper": [28, 243, 248, 253, 256, 278], "reset": [28, 188, 243, 278], "facilit": 28, "multiindex": [28, 243], "to_csv": [28, 264], "save": [28, 221, 243, 264], "readabl": [28, 224, 226, 252, 260, 269], "print": [28, 65, 135, 136, 203, 243, 262, 264], "to_dict": [28, 223, 225], "lzma": [28, 221], "serial": [28, 243, 252, 269], "compress": [28, 221], "unless": [28, 30, 260], "signific": [30, 67, 211, 212, 214, 243, 260, 274], "after_od": [30, 174], "s\u2081": [30, 33, 68, 117, 129, 130, 131, 136, 174, 262], "ipr": [30, 68, 80, 117, 129, 135, 136, 173, 174, 243, 262, 263, 264, 275], "ir": [30, 68, 117, 129, 135, 136, 174, 262], "iwr": [30, 68, 117, 129, 135, 136, 174, 262], "before_od": [30, 33, 35, 130, 131, 185, 186, 187], "btime": [30, 33, 68, 117, 129, 130, 131, 135, 136, 262], "tad": [30, 33, 44, 68, 117, 129, 130, 131, 135, 136, 243, 252, 262, 272], "tvv": [30, 33, 68, 117, 129, 130, 131, 135, 136, 145, 241, 255, 262, 264, 266], "\u212f": [30, 33, 42, 68, 117, 129, 130, 131, 165, 262], "whole": [30, 245, 252, 260, 276], "s1": [30, 125, 135, 262, 264, 266], "symbol_or_stat": 30, "direct_depend": 30, "direct": [30, 231, 250, 260, 274], "find_assign": [30, 37, 38, 39, 42, 143, 145, 156, 158, 165, 173, 176, 195, 264], "find_assignment_index": 30, "full_express": [30, 35, 185, 186, 187], "expand": [30, 83], "full": [30, 71, 101, 108, 112, 242, 243, 245, 255, 259, 260, 265, 272], "reassign": 30, "sypmpi": 30, "remove_symbol_definit": 30, "elsewher": 30, "longer": [30, 243], "make": [30, 68, 130, 143, 151, 152, 210, 243, 253, 259, 260, 262, 264, 265, 276, 278], "sure": [30, 151, 243, 260, 265, 278], "stat": [30, 276], "rais": [30, 152, 194, 243], "p": [33, 204, 210, 215, 241, 242, 243, 245, 250, 255, 264, 273, 274], "allometri": [33, 208, 209, 243, 276], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 45, 141, 144, 162, 243, 278], "add_estimation_step": [34, 45, 141, 144, 161, 162, 243], "remove_estimation_step": [34, 36, 45, 141, 161, 162], "append_estimation_step_opt": [34, 36, 141, 144, 161, 162, 243], "remove_covariance_step": [34, 36, 45, 144, 161, 162, 243], "set_evaluation_step": [34, 36, 45, 141, 144, 161], "liter": [35, 116, 210, 252], "lin": [35, 210], "piece_lin": [35, 210], "pow": [35, 210, 264], "allow_nest": [35, 243], "linear": [35, 241, 242, 243, 253, 262, 269, 271], "coveff": [35, 74], "median": [35, 56, 61, 241, 243, 264, 269, 275], "minimum": [35, 253], "000": [35, 263], "frac": [35, 156, 158, 242, 262, 264, 275], "min": [35, 156, 158, 241, 252], "piecewis": [35, 243], "hockei": 35, "stick": 35, "theta1": [35, 264], "theta2": [35, 264], "mai": [35, 257, 259, 260, 264, 265, 276], "abbrevi": [35, 37, 243, 245, 248, 266], "multipli": [35, 37, 165, 241, 245, 264], "alreadi": [35, 245, 248, 259, 260, 264], "pop_clapgr": 35, "idx": [36, 45, 144, 161, 162, 278], "argument": [36, 77, 78, 80, 81, 82, 161, 198, 216, 229, 243, 245, 264, 276, 278], "pass": [36, 73, 161, 198, 216, 232, 260], "opt": [36, 45, 161], "1000": [36, 45, 79, 161, 255], "len": [36, 45, 144, 148], "add_covariance_step": [36, 45, 141, 144, 161, 162, 243], "initial_estim": [37, 42], "09": [37, 42, 158, 165, 174, 250, 257, 264, 265, 266, 270], "eta_nam": [37, 39, 165, 245, 264], "prop": [37, 264], "logit": 37, "user": [37, 94, 243, 253, 257, 259, 260, 262, 263, 264, 265, 266], "remove_iiv": [37, 39, 42, 146, 243, 259, 264, 266], "add_pk_iiv": [37, 39, 145, 146, 243, 265], "add_iov": [37, 42, 145, 146, 243, 259, 264], "remove_iov": [37, 39, 42, 145, 243, 259, 264], "pop_ka": [38, 43], "occ": [39, 212, 245, 259], "disjoint": [39, 259], "accept": [39, 105, 106, 107, 245, 260], "add_iiv": [39, 42, 145, 146, 243, 264, 266], "set_transit_compart": [40, 147, 243, 264], "remove_lag_tim": [40, 243, 264], "parameter": 41, "qpn": 41, "vpn": 41, "volumn": 41, "mathsf": [41, 149], "cdot": [41, 149, 255, 262, 264], "qp2": [41, 149, 172, 243, 264], "vp2": [41, 149, 172, 264], "peripheral1": [41, 149, 172], "set_peripheral_compart": [41, 149, 243, 264], "remove_peripheral_compart": [41, 172, 243, 264], "Will": [42, 139, 222, 223, 224], "pop_mat": [42, 264, 266], "eta_mat": 42, "004693": [43, 60, 115, 255, 262], "1000000": [43, 86, 87, 88, 115, 166, 167, 189, 192, 262, 264], "009160": [43, 115, 262], "100000": [43, 115, 262, 264], "99": [43, 115, 135, 194, 241, 243, 262], "030963": [43, 110, 255, 262], "031128": [43, 110, 135, 255, 262, 264, 266], "013241": [43, 114, 135, 255, 262, 263, 264], "append": [45, 243], "increas": [46, 248], "until": [46, 220, 260, 278], "do": [46, 154, 241, 243, 245, 255, 260, 264, 266, 273, 278], "noth": [46, 148, 260], "next": [46, 260, 265, 266, 273], "run2": [46, 170, 264], "run3": 46, "n_estimated_paramet": [47, 48], "fit": [47, 48, 194, 203, 213, 218, 220, 226, 243, 260, 262, 273, 277, 278], "variat": 48, "n_random_paramet": 48, "n_individu": 48, "n_fixed_paramet": 48, "n_observ": 48, "n_individ": 48, "n_estimated_iiv_omega_paramet": 48, "611": 48, "7071686183284": 48, "616": [48, 243, 263], "536606983396": 48, "610": 48, "7412809453149": 48, "594": 48, "431131169692": 48, "411510e": [49, 52, 59, 62, 262, 263], "010000e": [49, 52, 59, 62, 262, 263], "000002": [49, 51, 52, 59, 62, 262, 263], "000001": [49, 51, 52, 56, 59, 61, 62, 259, 262, 263, 265], "538630e": [49, 51, 52, 59, 62, 262, 263], "178090e": [49, 52, 59, 62, 262, 263], "233530e": [49, 52, 59, 62, 262, 263], "04": [49, 50, 51, 52, 58, 59, 62, 63, 241, 250, 262, 263, 272, 274], "000804": [49, 51, 52, 59, 62, 262, 263], "000050": [49, 51, 52, 59, 62, 241, 262, 263], "171840e": [49, 52, 59, 62, 262, 263], "461760e": [49, 52, 59, 62, 262, 263], "665010e": [49, 52, 59, 62, 262, 263], "06": [49, 51, 52, 59, 62, 241, 250, 257, 259, 262, 263, 272, 274, 276], "040250e": [49, 52, 59, 62, 262, 263], "007016": [49, 51, 52, 59, 62, 262, 263], "000108": [49, 51, 52, 59, 62, 262, 263], "944800e": [49, 52, 59, 62, 262, 263], "932950e": [49, 52, 59, 62, 262, 263], "093430e": [49, 52, 59, 62, 262, 263], "981380e": [49, 51, 52, 59, 62, 262, 263], "000180": [49, 51, 52, 59, 62, 262, 263], "856650e": [49, 52, 59, 62, 262, 263], "867230e": [49, 52, 59, 62, 262, 263], "000039": [49, 51, 52, 59, 62, 262, 263], "000019": [49, 51, 52, 59, 62, 262, 263], "589820e": [49, 51, 52, 59, 62, 262, 263], "685650e": [49, 52, 59, 62, 262, 263], "000029": [49, 51, 52, 59, 62, 262, 263], "000005": [49, 51, 52, 59, 62, 262, 263], "195640e": [49, 52, 59, 62, 262, 263], "007099": [49, 50, 51, 58, 263], "094640": [49, 50, 51, 58, 263], "388059": [49, 50, 51, 58, 66], "097981": [49, 50, 51, 58, 263], "170820": [49, 50, 51, 58, 263], "356899": [49, 50, 51, 58, 66], "138062": [49, 50, 51, 58, 263], "356662": [49, 50, 51, 58, 66, 263], "238441": [49, 50, 51, 58], "096515": [49, 50, 51, 58], "062991": [49, 50, 51, 58, 263], "153616": [49, 50, 51, 58, 263], "185111": [49, 50, 51, 58, 263], "159170": [49, 50, 51, 58, 263], "027495": [49, 50, 51, 58, 263], "calculate_se_from_cov": [49, 50, 51, 52, 58, 59, 63, 243], "calculate_se_from_inf": [49, 50, 51, 52, 58, 59, 62, 243], "calculate_cov_from_inf": [49, 50, 51, 58, 59, 62, 63, 243], "calculate_cov_from_corrs": [49, 50, 52, 58, 59, 62, 63, 243], "calculate_inf_from_cov": [49, 50, 51, 52, 58, 62, 63, 243], "calculate_inf_from_corrs": [49, 50, 51, 52, 59, 62, 63, 243], "calculate_corr_from_inf": [49, 51, 52, 58, 59, 62, 63, 243], "information_matrix": [50, 52, 63, 263], "inf": [50, 52, 63], "995567e": [50, 52, 59, 63], "22660": [50, 52, 58, 59, 63, 263], "028196": [50, 52, 59, 63], "16057": [50, 52, 58, 59, 63, 263], "855248": [50, 52, 59, 63], "203511": [50, 52, 58, 59, 63, 263], "614428": [50, 52, 59, 63], "39474": [50, 52, 58, 59, 63, 263], "250514": [50, 52, 59, 63], "820118": [50, 52, 59, 63], "299536": [50, 52, 59, 63], "266003e": [50, 52, 59, 63], "2129": [50, 52, 58, 59, 63, 263], "904642": [50, 52, 59, 63], "260": [50, 52, 58, 59, 63, 263], "176234": [50, 52, 59, 63], "375": [50, 52, 58, 59, 63, 263], "266233": [50, 52, 59, 63], "2800": [50, 52, 58, 59, 63, 263], "816246": [50, 52, 59, 63], "7718": [50, 52, 58, 59, 63, 263], "769557": [50, 52, 59, 63], "605786e": [50, 52, 59, 63], "187": [50, 52, 58, 59, 63, 263], "038903": [50, 52, 59, 63], "177": [50, 52, 58, 59, 63, 243, 263, 274], "207683": [50, 52, 59, 63], "205": [50, 52, 58, 59, 63, 263], "808480": [50, 52, 59, 63], "2225": [50, 52, 58, 59, 63, 263, 264], "150449": [50, 52, 59, 63], "035116e": [50, 52, 59, 63], "7527": [50, 52, 58, 59, 63, 263], "530027": [50, 52, 59, 63], "2462": [50, 52, 58, 59, 63, 263], "974821": [50, 52, 59, 63], "9977": [50, 52, 58, 59, 63, 263], "488860": [50, 52, 59, 63], "947425e": [50, 52, 59, 63], "22343": [50, 52, 58, 59, 63, 263], "198618": [50, 52, 59, 63], "9370": [50, 52, 58, 59, 63, 263], "758371": [50, 52, 59, 63], "201183e": [50, 52, 59, 63], "249847": [50, 52, 59, 63, 263], "177845": [50, 52, 59, 63], "calculate_corr_from_cov": [50, 51, 52, 58, 59, 62, 63, 243], "se": [51, 58, 249, 262, 263], "correlation_matrix": [51, 58, 66, 263], "standard_error": [51, 58, 262, 263], "411512e": 51, "009998e": 51, "178111e": 51, "233518e": 51, "171834e": 51, "461762e": 51, "665011e": 51, "040245e": 51, "944801e": 51, "932957e": 51, "093431e": 51, "856651e": 51, "867245e": 51, "685661e": 51, "195664e": 51, "gradient": [53, 54, 77, 78, 243], "pheno_linear": [53, 54, 77, 78, 80, 81, 82, 101, 108, 112, 129, 204], "d_eps1": [53, 108], "d_epseta1_1": [53, 108], "oeta1": [53, 101, 112], "d_epseta1_2": [53, 108], "oeta2": [53, 101, 112], "calculate_eta_gradient_express": [53, 243], "d_eta1": [54, 101, 108, 112], "d_eta2": [54, 101, 108, 112], "calculate_epsilon_gradient_express": [54, 243], "parameter_estim": [55, 56, 57, 61, 67, 79, 81, 82, 154, 155, 194, 241, 243, 262, 263, 264], "individual_estim": [55, 71, 77, 78, 80, 153, 193, 243, 263, 264], "shrinkag": [55, 57, 277], "deviat": [55, 195, 241, 255, 261, 263, 272, 275], "pe": [55, 56, 57, 61, 79, 81, 154, 155, 264], "ie": [55, 153, 193, 264], "720481": 55, "240295": 55, "471305": 55, "128389": 55, "calculate_individual_shrinkag": [55, 243], "expr_or_expr": 56, "expect": [56, 61, 246, 260, 272], "arbitrari": [56, 61], "solut": [56, 183], "th": [56, 242, 255], "95": [56, 241, 255], "percentil": [56, 241, 255], "previous": [56, 61, 133, 194, 243, 266, 278], "interest": [56, 246, 260, 264, 269], "seed": [56, 61, 73, 153, 155, 245], "create_rng": [56, 61, 153, 154, 155], "stderr": [56, 61, 241, 276], "p5": [56, 61, 255], "004234": [56, 61], "001138": [56, 61], "004907": [56, 61], "001247": [56, 61], "p95": [56, 61, 255], "individual_estimates_covari": [57, 153, 243, 263], "ieta_shr": 57, "847789": 57, "256473": 57, "796643": 57, "210669": 57, "755025": 57, "226957": 57, "764541": 57, "216405": 57, "816192": 57, "203974": 57, "778108": 57, "210992": 57, "659420": 57, "236875": 57, "668551": 57, "240097": 57, "260056": 57, "200374": 57, "725190": 57, "226563": 57, "972110": 57, "421852": 57, "249640": 57, "254119": 57, "730294": 57, "364932": 57, "165785": 57, "194464": 57, "813399": 57, "313554": 57, "797328": 57, "213211": 57, "769059": 57, "278079": 57, "098506": 57, "176778": 57, "749022": 57, "235386": 57, "742181": 57, "222932": 57, "317956": 57, "264473": 57, "943950": 57, "232732": 57, "707183": 57, "259077": 57, "553787": 57, "247717": 57, "826349": 57, "114302": 57, "26": [57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 272, 274, 275], "854777": 57, "341384": 57, "27": [57, 90, 95, 107, 109, 202, 241, 242, 250, 252, 257, 259, 261, 263, 265, 273, 275], "820829": 57, "263235": 57, "28": [57, 77, 80, 81, 90, 95, 107, 202, 241, 242, 250, 252, 257, 260, 261, 263, 272, 275], "999942": 57, "319986": 57, "29": [57, 77, 80, 81, 90, 95, 107, 186, 202, 241, 242, 244, 250, 252, 257, 260, 261, 263, 272, 275], "967084": 57, "432760": 57, "30": [57, 90, 95, 107, 202, 241, 242, 250, 252, 257, 259, 260, 261, 263, 265, 272, 275], "404773": 57, "325215": 57, "31": [57, 77, 80, 90, 95, 107, 109, 202, 241, 242, 250, 252, 261, 263, 270, 272, 275, 276], "999980": 57, "318421": 57, "925283": 57, "167667": 57, "33": [57, 90, 95, 107, 109, 202, 241, 242, 250, 252, 261, 263, 265, 274, 275], "913706": 57, "242106": 57, "34": [57, 81, 90, 95, 107, 109, 202, 241, 242, 250, 252, 261, 263, 270, 272, 275], "875554": 57, "249197": 57, "849135": 57, "294294": 57, "172206": 57, "246422": 57, "747380": 57, "278340": 57, "38": [57, 77, 80, 90, 95, 107, 202, 241, 242, 252, 261, 263, 275], "187440": 57, "231249": 57, "39": [57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 272, 273, 274, 275], "237805": 57, "254485": 57, "40": [57, 90, 93, 95, 107, 109, 148, 202, 241, 242, 250, 252, 261, 263, 274, 275], "999925": 57, "189793": 57, "41": [57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 272, 275], "941906": 57, "170998": 57, "42": [57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 265, 274, 275], "923801": 57, "244046": 57, "43": [57, 90, 95, 107, 202, 241, 242, 250, 252, 259, 261, 263, 274, 275], "999928": 57, "320403": 57, "44": [57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 275], "237637": 57, "260453": 57, "45": [57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 275], "869540": 57, "194503": 57, "46": [57, 90, 95, 107, 202, 241, 242, 250, 252, 261, 263, 275], "999949": 57, "319750": 57, "47": [57, 90, 95, 107, 109, 202, 241, 242, 250, 252, 261, 263, 265, 272, 275], "983782": 57, "393234": 57, "698267": 57, "169337": 57, "49": [57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 275], "776674": 57, "214962": 57, "50": [57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 265, 272, 275], "688847": 57, "192608": 57, "51": [57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 275, 276], "822213": 57, "202534": 57, "52": [57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 265, 274, 275], "511489": 57, "273601": 57, "53": [57, 90, 95, 107, 202, 241, 242, 252, 261, 263, 270, 272, 275], "964757": 57, "223448": 57, "762153": 57, "181648": 57, "965657": 57, "435741": 57, "995278": 57, "354798": 57, "813382": 57, "263372": 57, "727295": 57, "232867": 57, "738777": 57, "224742": 57, "calculate_eta_shrinkag": [57, 243, 264], "995565e": 58, "041788": 58, "848052": 58, "410335": 58, "240358": 58, "820116": [58, 263], "179011": 58, "266004e": 58, "908225": 58, "176399": 58, "266263": 58, "818557": 58, "757955": 58, "605785e": 58, "038825": 58, "207512": 58, "808434": 58, "144772": 58, "035114e": 58, "518562": 58, "972906": 58, "457873": 58, "947424e": 58, "197906": 58, "736254": 58, "201162e": 58, "249846": 58, "006431": 58, "ucp": [60, 64], "ucpscal": [60, 64], "calculate_ucp_scal": [60, 243], "00916": [60, 135, 194, 255, 262, 264, 266], "0309626": [60, 135, 194, 262, 264, 266], "031127999999999996": 60, "013241000000000001": 60, "convers": [60, 243], "pharmacokinet": [61, 252], "pre": 61, "k_e": 61, "calculate_individual_parameter_statist": [61, 243, 264], "000210": [62, 63, 262, 263], "026895": [62, 63, 262, 263], "083762": [62, 63, 262, 263], "013415": [62, 63, 262, 263], "007477": [62, 63, 262, 263], "002279": [62, 63, 262, 263], "unconstrain": 64, "calculate_parameters_from_ucp": [64, 243], "verbos": 65, "consist": [65, 250, 260, 276], "across": [65, 243, 260], "consol": 65, "els": [65, 229, 243, 264], "fail": [65, 243, 260, 269], "cor": [66, 248], "highli": 66, "high": [66, 252, 253, 269], "zero_limit": 67, "significant_digit": [67, 243], "close": [67, 194, 243, 255, 260, 261], "distanc": [67, 275], "logic": 67, "cleanup": 68, "what": [68, 260, 266, 269], "inlin": 68, "clean": 68, "might": [68, 260, 264, 269, 276, 278], "certain": [68, 132, 243, 259, 260, 264, 268, 276], "requir": [68, 243, 245, 250, 256, 260, 272], "to_format": 69, "inplac": 69, "nlmixr": [69, 213, 248, 258], "underli": [69, 89, 135, 262], "converted_model": 69, "model_copi": 70, "pheno2": [70, 278], "block": [71, 145, 173, 243, 245, 255, 257, 264, 265, 272, 276], "iiv_cl_iiv_v": [71, 184], "split_joint_distribut": [71, 243, 264], "report": [72, 243, 248, 258, 269], "through": [73, 245, 246, 247, 250, 260, 262, 276], "numpi": [73, 252, 253, 262], "standard_norm": 73, "5532605888887387": 73, "stem": 74, "force_numb": 74, "coveff1": 74, "temp": 74, "temp1": 74, "cl1": 74, "column_nam": [75, 190], "mark": [75, 76, 83, 190, 245, 260], "drop_dropped_column": [75, 190, 243], "undrop_column": [75, 243], "undrop": [75, 190], "drop_column": [76, 190, 243], "them": [76, 152, 246, 257, 259, 260, 265, 266, 273, 276], "map": [77, 78, 79, 80, 81, 82, 252], "dy": 77, "dep": 77, "771084": [77, 80], "881859": [77, 80], "441728": [77, 80], "113050": [77, 80], "783055": [77, 80], "150": [77, 78, 80, 81, 82, 263], "375041": [77, 80], "151": [77, 78, 80, 81, 82], "833395": [77, 80], "152": [77, 78, 80, 81, 82], "876707": [77, 80], "153": [77, 78, 80, 81, 82, 251], "905095": [77, 80], "154": [77, 78, 80, 81, 82], "099690": [77, 80], "155": [77, 78, 80, 81, 82, 106, 109, 252, 263], "evaluate_eta_gradi": [77, 243], "df": [78, 219, 243, 252, 270, 272], "deta": 78, "159537": 78, "609116": 78, "325893": 78, "562289": 78, "104417": 78, "346161": 78, "452951": 78, "682310": 78, "838840": 78, "981836": 78, "424423": 78, "973013": 78, "497185": 78, "344797": 78, "198714": 78, "697161": 78, "987731": 78, "941806": 78, "817067": 78, "309945": 78, "evaluate_epsilon_gradi": [78, 243], "573770": 79, "739": [79, 96, 252], "165105": 79, "741": [79, 96, 241, 252], "742": [79, 96, 241, 252], "743": [79, 96, 252], "evaluate_population_predict": [80, 243], "529739": 81, "179910": [81, 261], "688648": 81, "798916": 81, "023225": 81, "459036": 81, "223295": 81, "217288": 81, "472888": 81, "226455": 81, "evaluate_individual_predict": [81, 243], "wre": [82, 243], "313859": 82, "675721": 82, "544240": 82, "921720": 82, "517677": 82, "223935": 82, "053334": 82, "007023": 82, "931252": 82, "778389": 82, "flag": [83, 243, 275, 276], "origin": [83, 196, 241, 242, 246, 248, 255, 260, 275], "care": [83, 222], "00469307": [86, 87, 88, 135, 167, 178, 189, 194, 262, 264, 266], "fix_paramet": [86, 88, 191, 192, 264], "unfix_paramat": [86, 87, 88, 192], "fix_paramaters_to": [86, 192], "unfix_paramaters_to": [86, 87, 88, 166, 191], "fix_or_unfix_paramet": [87, 88, 191, 192], "fix_parameters_to": [87, 166, 191, 264], "baselin": [90, 95, 128, 243, 255], "60": [90, 252, 260, 270], "63": [90, 109, 252, 263, 272], "present": [92, 98, 245, 252, 255, 260, 276], "extract": [92, 98, 243, 245, 258], "directli": [93, 222, 226, 227, 243, 245, 252, 253, 260, 262, 264, 269, 276], "cmax": [93, 243, 252], "tmax": [93, 243, 252], "cmin": [93, 243, 252], "tmin": [93, 243, 252], "doseid": [93, 96, 252], "589": [93, 97, 252], "config": [94, 243, 248, 267], "get_baselin": [95, 243], "set_covari": 95, "period": [96, 252], "96": [97, 187, 241, 252, 264, 265], "108": [97, 252, 263], "120": [97, 252, 263], "132": [97, 250, 252, 263], "144": [97, 250, 252, 263, 274], "retriev": [99, 100, 105, 106, 111, 113, 206, 207, 222, 226, 227, 243, 262, 263, 264, 277], "get_pk_paramet": [100, 113, 243], "get_rv_paramet": [100, 111, 125, 243], "has_random_effect": [100, 113, 243], "opr": [101, 108, 112], "get_population_prediction_express": [101, 243], "epress": [101, 112], "item": [104, 247, 250, 260], "activ": [105, 106, 107, 260], "ignor": [105, 106, 107, 135, 243, 245, 262, 264, 266], "get_number_of_observ": [105, 109, 243, 252], "get_number_of_observations_per_individu": [105, 106, 109, 243], "total": [106, 243, 252], "get_number_of_individu": [106, 107, 243, 252], "observation_count": 107, "accord": [108, 243, 260, 265, 276], "oeta\u2082": 108, "oeta\u2081": 108, "112": [109, 250, 252, 257, 259, 263, 265, 272, 273], "131": [109, 250, 252, 263], "146": [109, 252, 259, 263], "get_theta": [110, 114, 243], "get_sigma": [110, 115, 243], "get_individual_paramet": [111, 113, 125, 243], "get_individual_prediction_express": [112, 243], "get_omega": [114, 115, 243], "structur": [115, 209, 224, 243, 245, 252, 258, 259, 262, 264, 265, 276, 278], "00": [115, 255, 262, 263, 270, 272, 274, 276], "olumn": 116, "milligram": [116, 252], "kilogram": [116, 252], "named_subscript": 117, "greek": 117, "subscript": 117, "cleanup_model": [117, 243], "\u03b8\u2081": 117, "\u03b8\u2082": 117, "\u03b8\u2083": 117, "\u03b7\u2081": 117, "\u03b7\u2082": 117, "\u03b5\u2081": 117, "has_proportional_error_model": [118, 119, 243], "has_combined_error_model": [118, 124, 243], "proportin": [119, 264], "has_additive_error_model": [119, 124, 243], "instanc": [120, 142, 250, 276], "reli": [121, 122, 123, 127, 260], "heurist": [121, 122, 123, 127], "abl": [121, 122, 123, 127, 243, 256, 258, 264, 268, 269], "detect": [121, 122, 123, 127, 243, 256, 262, 268], "micha": [122, 123, 168, 169, 245, 276], "menten": [122, 123, 168, 169, 245, 276], "set_michaelis_menten_elimin": [122, 164, 169, 181, 243, 264], "michali": 123, "set_mixed_mm_fo_elimin": [123, 264], "set_zero_order_elimin": [127, 164, 168, 169, 243, 264], "get_covariate_baselin": [128, 243], "load": 129, "statment": 130, "mu": [131, 255], "referenc": [131, 264], "theta_1": 131, "eta_1": [131, 255], "mu_1": [131, 255], "\u03bc\u2081": 131, "\u03bc\u2082": 131, "dataset_or_model": [132, 152], "name_pattern": [132, 152], "omitted_": 132, "omiss": 132, "omit": [132, 245, 250, 264], "placehold": [132, 152], "plot": [133, 134, 243, 255, 261, 269], "alt": [133, 134, 241, 255, 261], "chart": [133, 134, 241], "iofv1": 134, "iofv2": 134, "against": [134, 260], "iofv": [134, 219, 241, 243, 261, 263, 275], "scatterplot": 134, "subroutin": [135, 243, 260, 262, 264, 266], "advan1": [135, 262, 264, 266], "trans2": [135, 262, 264, 266], "IF": [135, 243, 260, 262, 264], "gt": [135, 250, 262], "lt": [135, 250, 262], "ptvcl": [135, 182, 262], "ptvv": [135, 262], "ivcl": [135, 241, 255, 262, 264, 266], "ivv": [135, 241, 255, 262, 264], "uncondit": [135, 262], "cwre": [135, 218, 219, 262, 263, 272, 273], "npde": [135, 262], "noappend": [135, 262], "noprint": [135, 262], "onehead": [135, 262], "home": [138, 243, 262], "run1": [138, 139, 207], "mod": [138, 222, 224, 243, 245, 252, 262, 263, 264, 276], "read_model_from_databas": [138, 140, 243], "databas": [138, 139, 140, 222, 223, 224, 226, 227, 228, 230, 235, 240, 243], "read_model_from_str": [138, 139, 243, 264], "lookup": 139, "err": [140, 264], "has_covariate_effect": [142, 243], "unrun": 143, "to_remov": [145, 146, 245], "eta_iov_1_1": [146, 259], "add_lag_tim": [147, 177, 243, 264], "uloq": 148, "736": 148, "add_peripheral_compart": [149, 172, 243, 264], "new_nam": [151, 170], "renam": [151, 243], "clash": [151, 222, 224], "resampl": 152, "stratifi": [152, 245], "sample_s": [152, 245], "resample_": 152, "randomli": [152, 155], "renumb": [152, 245], "upward": 152, "stratif": [152, 245], "determin": [152, 257, 259, 260, 265], "valueerror": 152, "strata": 152, "suppli": [152, 257, 259, 265, 272], "control": [152, 248, 259, 260, 262], "pattern": [152, 260], "samples_per_id": 153, "pool": [153, 257], "iec": 153, "127941": 153, "037273": 153, "065492": 153, "182851": 153, "263323": 153, "265849": 153, "295883": 153, "060346": 153, "012108": 153, "219967": 153, "034279": 153, "040988": 153, "187879": 153, "143184": 153, "088845": 153, "034655": 153, "187779": 153, "014214": 153, "019953": 153, "151151": 153, "sample_parameters_from_covariance_matrix": [153, 155, 243], "sample_parameters_uniformli": [153, 154, 243], "uniform": [153, 154, 155], "force_posdef_sampl": [154, 155, 245], "force_posdef_covmatrix": [154, 245], "mani": [154, 243, 264], "never": [154, 265], "005069": 154, "974989": 154, "204629": 154, "024756": 154, "012088": 154, "012943": 154, "004690": 154, "958431": 154, "233231": 154, "038866": 154, "029000": 154, "012516": 154, "004902": 154, "950778": 154, "128388": 154, "019020": 154, "023866": 154, "013413": 154, "sample_individual_estim": [154, 155, 243], "estiat": [154, 155], "reject": 155, "004878": 155, "908216": 155, "149441": 155, "029179": 155, "025472": 155, "012947": 155, "004828": 155, "014444": 155, "149958": 155, "028853": 155, "027653": 155, "013348": 155, "004347": 155, "053837": 155, "165804": 155, "028465": 155, "026798": 155, "013727": 155, "data_tran": [156, 158, 174, 243, 264], "series_term": 156, "\u00b2": [156, 158], "epsilon_1": [156, 158, 174], "expans": [156, 264], "approxim": [156, 260], "\u03b5\u2090": [156, 158, 264], "set_proportional_error_model": [156, 158, 243, 264], "set_combined_error_model": [156, 174, 243, 264, 273], "epsilon_2": 158, "remove_error_model": [158, 174, 243, 264], "\u03b5\u209a": [158, 174, 264], "set_additive_error_model": [158, 174, 243, 264], "fix_to_log": 160, "dynam": [160, 232, 260], "lambda": [160, 185, 186, 270, 272], "zeta": [160, 270, 272], "emul": 160, "set_bolus_order_absorpt": [163, 175, 180], "list_of_ep": [165, 173], "same_eta": [165, 245], "chosen": [165, 243, 257, 264, 276], "eta_rv1": 165, "set_power_on_ruv": [165, 243, 264, 273], "set_upper_bound": [167, 189], "unconstrain_paramet": [167, 178, 191], "constraint": [167, 178, 182, 189, 191, 243, 253, 269], "clmm": [168, 169, 181, 264], "km": [168, 169, 181, 264], "set_first_order_elimin": [168, 169, 181, 243, 264], "prefer": [171, 260], "peripheral2": 172, "lower_limit": 173, "zero_protect": [173, 174, 243], "autodetect": 173, "protect": [173, 174, 243, 260], "power\u2081": 173, "set_iiv_on_ruv": [173, 243, 264, 273], "225e": 174, "ipredadj": 174, "sequenti": [175, 243, 245, 265, 276], "mdt": [175, 177, 243, 264], "quantil": [176, 241, 243], "time_vari": [176, 272, 273], "keep_depot": [177, 243], "transit1": [177, 264], "transit2": [177, 264], "transit3": [177, 264], "set_lower_bound": [178, 189], "use_thetas_for_error_stdev": [179, 243, 264], "smallest": [181, 252], "simplifi": [182, 243, 244, 250, 253, 269], "plugin": [182, 247, 248, 253, 254, 256, 277], "conf": [182, 247], "comment": [182, 243, 247, 266], "ab": [182, 186, 245, 264], "analyt": 183, "becom": [184, 245, 269], "create_joint_distribut": [184, 243, 264], "list_of_eta": [185, 186, 187], "boxcox": [185, 243], "lambda1": [185, 186, 264], "transform_etas_tdist": [185, 186, 243, 264], "transform_etas_john_drap": [185, 187, 243, 264], "john": [186, 243, 245], "draper": [186, 243, 245], "spelect": 186, "1980": 186, "famili": [186, 260], "journal": [186, 273], "royal": 186, "societi": 186, "190": 186, "197": 186, "doi": [186, 255, 273], "2307": 186, "2986305": 186, "transform_etas_boxcox": [186, 187, 243, 264], "degre": [187, 272], "freedom": [187, 260, 272], "80": [187, 263, 264, 272, 273], "df1": [187, 264], "translat": [188, 243], "hour": [188, 252], "caution": 188, "account": 188, "unfix_paramet": [189, 243, 264], "had": [193, 260], "move_est_close_to_bound": 194, "00469555": 194, "984258": [194, 262, 263], "15892": 194, "0293508": [194, 262], "sd_ep": [195, 264], "set_weighted_error_model": [195, 243, 264], "write": [196, 197, 221, 243, 248, 260, 268, 277], "whose": [196, 260], "suffix": 196, "overwrit": [196, 197], "newdataset": 196, "recalcul": 198, "frem_dir1": 198, "read_result": [198, 206, 243, 276], "model_or_model": 199, "run_tool": [199, 209, 218, 243], "84": [200, 201, 219, 257, 259, 265, 274], "machin": [200, 201, 202, 222, 226, 227, 252, 256, 260], "learn": [200, 201, 202, 256], "threshold": [200, 201, 202, 245, 250], "signal": [200, 201, 261], "raw": [200, 201, 202, 219, 241, 243, 252], "delta": [200, 241, 243, 261], "tell": [200, 202, 260], "predict_influential_outli": [200, 202, 243], "predict_outli": [200, 201, 243], "outlier_cutoff": 201, "influential_cutoff": 201, "singal": [201, 202], "influential_outli": 201, "predict_influential_individu": [201, 202, 243], "simev": [202, 243, 271], "281443": 202, "057392": 202, "119105": 202, "846849": 202, "600540": 202, "014008": 202, "750734": 202, "247175": 202, "117002": 202, "835389": 202, "529582": 202, "035670": 202, "292333": 202, "303278": 202, "565949": 202, "078192": 202, "291295": 202, "466421": 202, "402343": 202, "699996": 202, "567987": 202, "526776": 202, "303918": 202, "177588": 202, "272142": 202, "390000": 202, "775876": 202, "501528": 202, "700951": 202, "352599": 202, "294196": 202, "744014": 202, "215364": [202, 274], "208691": 202, "713130": 202, "300293": 202, "810736": 202, "459877": 202, "675125": 202, "563835": 202, "526945": 202, "449199": 202, "720714": 202, "792248": 202, "860923": 202, "731858": 202, "247131": 202, "894190": 202, "282737": 202, "153398": 202, "200546": 202, "902774": 202, "586427": 202, "183329": 202, "036930": 202, "639868": 202, "765279": 202, "209665": 202, "225693": 202, "errors_allow": [204, 243], "bic_typ": 204, "rounding_error": 204, "maxevals_exceed": 204, "lrt": 204, "denot": [204, 255, 264], "model_1": [204, 255], "model_2": [204, 255], "create_result": [205, 243, 264], "retrieve_model": [206, 222, 226, 227, 243, 276], "tooldatabas": [207, 223, 228, 232, 235], "modeldatabas": [207, 222, 224, 230], "tooldir_path": 207, "retrieve_final_model": [207, 243], "allometryresult": 208, "amd": [209, 243, 276], "search": [209, 210, 214, 243, 245, 250, 259, 269, 276], "runord": [209, 245], "compon": [209, 245, 253, 256, 260, 272], "run_iiv": [209, 243], "try": [210, 245, 250, 269, 278], "sentenc": [210, 250], "compact": [210, 250], "covsearchresult": 210, "no_add": [211, 214, 243, 257, 265], "iivsearch": [211, 243, 276], "brute_force_no_of_eta": [211, 257], "brute_force_block_structur": [211, 257], "strategi": [211, 214, 243, 257, 265], "add_diagon": [211, 214, 243, 257, 265], "iivsearchresult": 211, "iovsearch": [212, 243, 276], "iovsearchresult": 212, "exhaust": [214, 243], "modelsearchresult": 214, "bin": [215, 272, 278], "attempt": [215, 250, 260], "ruvsearchresult": 215, "arg": 216, "kei": [218, 226, 260, 273], "fit_result": 218, "mathrm": [219, 275], "veebar": 219, "least": [219, 260, 276], "outli": [219, 275], "criteria": [219, 243, 245, 257, 259, 265, 273], "include_all_estimation_step": 220, "runtim": [220, 243], "wasn": 220, "estmat": 220, "586": [220, 261, 263], "276056": [220, 261], "again": [221, 264, 278], "Not": [221, 252, 260], "applic": [221, 235, 260, 269, 276], "file_extens": [222, 224], "nontransactionalmodeldatabas": [222, 227], "local": [222, 223, 224, 226, 227, 228, 230, 248, 257, 260], "store": [222, 223, 224, 226, 227, 228, 230, 243, 266, 276], "modelnam": 222, "overwritten": 222, "recommend": [222, 278], "localmodeldirectorydatabas": 222, "retrieve_fil": [222, 226, 227], "filesystem": [222, 226, 227], "model_nam": [222, 224, 226, 227, 255], "retrieve_local_fil": [222, 226, 227], "destination_path": [222, 226, 227], "retrieve_modelfit_result": [222, 226, 227], "store_local_fil": [222, 223, 226, 227, 228, 230], "new_filenam": 222, "store_metadata": [222, 223, 226, 227], "store_model": [222, 226, 227], "store_modelfit_result": [222, 226, 227], "toolnam": [223, 228, 230, 276], "exist_ok": 223, "read_metadata": 223, "source_path": [223, 228, 230], "store_result": [223, 228, 230], "transactionalmodeldatabas": 224, "subdirectori": [224, 276], "list_model": 224, "snapshot": [224, 226], "context": [224, 226, 260, 269], "transact": [224, 226, 260], "writabl": [224, 226], "timestamp": 225, "log_error": 225, "log_warn": 225, "baseclass": 226, "primari": 226, "center": 226, "around": [226, 246], "belong": [226, 278], "contextmanag": 226, "modelsnapshot": 226, "modeltransact": 226, "dummi": [227, 228], "anyth": [227, 228, 248, 257, 260], "task_input": 229, "func": 229, "has_input": 229, "model_databas": 230, "task": [231, 264, 268, 269], "acycl": 231, "graph": [231, 245, 248], "node": [231, 232], "edg": 231, "wf": 232, "unique_nam": 232, "db": 232, "dask": [232, 243, 269], "whatev": [232, 260], "alia": [233, 234], "localdirectorydatabas": [233, 240], "localdirectorytooldatabas": [234, 240, 276], "dispatch": [235, 240, 243, 276], "resum": [235, 276], "execut": [235, 243, 260], "executiondispatch": 235, "default_dispatch": 240, "local_dask": [240, 276], "default_model_databas": 240, "default_tool_databas": 240, "psn": [241, 242, 243, 245, 251, 255, 261, 270, 272, 274, 275, 276, 277], "parameter_statist": 241, "bia": [241, 243], "rse": [241, 263], "divid": [241, 245, 266], "005856": 241, "005820": 241, "000038": 241, "000487": 241, "083167": 241, "455435": 241, "443165": 241, "009885": 241, "099305": 241, "068231": 241, "141376": 241, "109797": 241, "030323": 241, "114986": 241, "813337": 241, "195880": 241, "195844": 241, "005646": 241, "046548": 241, "237634": 241, "015546": 241, "015112": 241, "000872": 241, "003434": 241, "220871": 241, "parameter_distribut": 241, "lowest": [241, 255], "highest": [241, 255, 266], "interpol": 241, "fall": [241, 243], "x_0": 241, "x_1": 241, "np": [241, 252, 262], "004762": 241, "004767": 241, "004805": 241, "004974": 241, "005120": 241, "211220": 241, "214364": 241, "242657": 241, "290449": 241, "307106": 241, "000011": 241, "012961": 241, "100104": 241, "100376": 241, "102825": 241, "116900": 241, "125456": 241, "007812": 241, "007857": 241, "008261": 241, "009741": 241, "011116": 241, "97": 241, "006669": 241, "006685": 241, "007429": 241, "007593": 241, "007612": 241, "613679": 241, "646879": 241, "726604": 241, "730551": 241, "730990": 241, "338957": 241, "371005": 241, "536153": 241, "545316": 241, "546334": 241, "281203": 241, "300874": 241, "306057": 241, "306101": 241, "306106": 241, "021677": 241, "023708": 241, "025429": 241, "026581": 241, "026710": 241, "parameter_estimates_histogram": 241, "histogram": [241, 243], "repeatchart": 241, "005298": 241, "30730": 241, "074931": 241, "136423": 241, "011374": 241, "006048": 241, "38692": 241, "029844": 241, "189763": 241, "019143": 241, "005624": 241, "53224": 241, "118806": 241, "219550": 241, "019831": 241, "005771": 241, "40115": 241, "034322": 241, "150905": 241, "012287": 241, "005933": 241, "42119": 241, "074050": 241, "171158": 241, "017394": 241, "005275": 241, "59087": 241, "289793": 241, "248009": 241, "016396": 241, "005847": 241, "44711": 241, "109860": 241, "206296": 241, "016346": 241, "005939": 241, "52688": 241, "040057": 241, "210552": 241, "013631": 241, "98": [241, 255, 257], "005998": 241, "41948": 241, "192046": 241, "175269": 241, "013485": 241, "005479": 241, "43956": 241, "109733": 241, "197253": 241, "011771": 241, "ofv_statist": 241, "bootstrap_bootdata_ofv": 241, "original_bootdata_ofv": 241, "sum": [241, 251], "bootstrap_origdata_ofv": 241, "boostrap": 241, "original_origdata_ofv": 241, "delta_bootdata": 241, "delta_origdata": 241, "722": 241, "220925": 241, "386171": 241, "134966": 241, "245796": 241, "929008": 241, "620085": 241, "523805": 241, "737": 241, "632473": 241, "951710": 241, "024871": 241, "110934": 241, "218525": 241, "629078": 241, "737746": 241, "ofv_distribut": 241, "parameter_distriut": 241, "601": 241, "007583": 241, "602": 241, "266529": 241, "613": 241, "597036": 241, "641": 241, "950291": 241, "621": 241, "273905": 241, "622": 241, "073513": 241, "629": 241, "269987": 241, "806391": 241, "915431": 241, "955989": 241, "731": 241, "321004": 241, "879050": 241, "021463": 241, "059207": 241, "398901": 241, "299364": 241, "020705": 241, "061262": 241, "426277": 241, "984323": 241, "879224": 241, "788": 241, "101562": 241, "803": 241, "869362": 241, "661": 241, "714778": 241, "800": [241, 263], "121734": 241, "810": [241, 263], "417314": 241, "732": 241, "165644": 241, "757": 241, "877092": 241, "369737": 241, "671690": 241, "375800": 241, "162811": 241, "270917": 241, "982365": 241, "475010": 241, "828": 241, "178008": 241, "839": 241, "691272": 241, "840": 241, "970524": 241, "836": 241, "395339": 241, "846": 241, "981350": 241, "848": 241, "157573": 241, "859": 241, "964343": 241, "893": [241, 257], "228440": 241, "896": [241, 255], "924451": 241, "443675": 241, "246668": 241, "558111": 241, "129": 241, "069616": 241, "162": 241, "333713": 241, "166": 241, "029724": 241, "ofv_plot": 241, "layerchart": [241, 261], "dofv_quantiles_plot": 241, "show": [241, 245, 255, 260, 272, 275], "metric": [241, 242, 263], "chi": 241, "squar": 241, "907310": 241, "911844": 241, "750": 241, "388987": 241, "670": 241, "684132": 241, "675": 241, "846450": 241, "738": 241, "099607": 241, "248779": 241, "734": 241, "876739": 241, "733": [241, 273], "182039": 241, "626": 241, "440820": 241, "637": 241, "427606": 241, "748": 241, "285576": 241, "239599": 241, "025253": 241, "519551": 241, "781": 241, "380852": 241, "793": 241, "303365": 241, "994494": 241, "754": 241, "666705": 241, "688168": 241, "664": 241, "288159": 241, "671": 241, "883942": 241, "255718": 241, "974215": 241, "332959": 241, "052283": 241, "689": 241, "940217": 241, "693": 241, "963948": 241, "735": 241, "763734": 241, "004534": 241, "494261": 241, "162318": 241, "204881": 241, "627961": 241, "287312": 241, "986786": 241, "390849": 241, "785654": 241, "624824": 241, "922512": 241, "099768": 241, "595783": 241, "360991": 241, "358744": 241, "157557": 241, "023731": 241, "869007": 241, "372000e": 241, "000015": 241, "000003": 241, "098000e": 241, "462220e": 241, "009862": 241, "002316": 241, "002320": 241, "320640e": 241, "531300e": 241, "013222": 241, "000146": 241, "961337e": 241, "572900e": 241, "002167": 241, "014550e": 241, "000033": 241, "000196": 241, "178980e": 241, "included_individu": 241, "case_result": [242, 243], "cook_scor": 242, "jackknife_cook_scor": 242, "delta_ofv": 242, "dofv_influenti": 242, "130159": 242, "121389": 242, "015207": 242, "348263": 242, "336159": 242, "144045": 242, "192433": 242, "181125": 242, "031030": 242, "163095": 242, "155901": 242, "026142": 242, "422651": 242, "404915": 242, "190732": 242, "374312": 242, "343311": 242, "097063": 242, "169869": 242, "163883": 242, "026223": 242, "263865": 242, "254943": 242, "058123": 242, "757098": 242, "673587": 242, "477910": 242, "150161": 242, "144191": 242, "023623": 242, "361646": 242, "352901": 242, "217902": 242, "255533": 242, "215005": 242, "035375": 242, "191848": 242, "187019": 242, "038199": 242, "376365": 242, "337975": 242, "096680": 242, "142806": 242, "137340": 242, "014709": 242, "193393": 242, "179744": 242, "031711": 242, "131746": 242, "122842": 242, "020637": 242, "176644": 242, "932149": 242, "036787": 242, "128197": 242, "120498": 242, "019030": 242, "141093": 242, "138101": 242, "029021": 242, "176582": 242, "153583": 242, "035291": 242, "104396": 242, "100064": 242, "015499": 242, "552071": 242, "501458": 242, "278595": 242, "242334": 242, "217068": 242, "047627": 242, "792099": 242, "715951": 242, "798775": 242, "135247": 242, "133493": 242, "021356": 242, "442779": 242, "424958": 242, "125763": 242, "132903": 242, "127188": 242, "010157": 242, "081122": 242, "076790": 242, "005443": 242, "183624": 242, "168501": 242, "027707": 242, "113959": 242, "111168": 242, "012363": 242, "532749": 242, "515747": 242, "325048": 242, "094133": 242, "091212": 242, "014747": 242, "447798": 242, "406737": 242, "194457": 242, "364978": 242, "352973": 242, "124295": 242, "270838": 242, "252922": 242, "063675": 242, "129553": 242, "121963": 242, "014043": 242, "254914": 242, "243250": 242, "064025": 242, "207529": 242, "194633": 242, "046887": 242, "239182": 242, "218112": 242, "044252": 242, "181986": 242, "173826": 242, "020285": 242, "604112": 242, "584208": 242, "604211": 242, "407717": 242, "369648": 242, "154161": 242, "215722": 242, "196744": 242, "043742": 242, "214167": 242, "200091": 242, "036238": 242, "094284": 242, "089002": 242, "007506": 242, "074174": 242, "072365": 242, "007535": 242, "743323": 242, "717468": 242, "654313": 242, "153971": 242, "147360": 242, "014502": 242, "284706": 242, "278460": 242, "072960": 242, "331587": 242, "309374": 242, "116933": 242, "447965": 242, "421612": 242, "129593": 242, "184872": 242, "175196": 242, "029896": 242, "430382": 242, "415446": 242, "141657": 242, "409307": 242, "369197": 242, "189729": 242, "084764": 242, "079718": 242, "007416": 242, "107600": 242, "103145": 242, "013947": 242, "154672": 242, "150761": 242, "028236": 242, "155632": 242, "150461": 242, "034848": 242, "covariance_ratio": 242, "skipped_individu": 242, "050505": 242, "963884": 242, "058896": 242, "087449": 242, "985403": 242, "029066": 242, "101636": 242, "086424": 242, "017369": 242, "094799": 242, "849310": 242, "121111": 242, "049151": 242, "096456": 242, "070088": 242, "040691": 242, "065881": 242, "606158": 242, "205007": 242, "099191": 242, "143483": 242, "050691": 242, "086007": 242, "156273": 242, "919336": 242, "056714": 242, "999221": 242, "029600": 242, "034017": 242, "108785": 242, "038495": 242, "954054": 242, "053618": 242, "096334": 242, "943556": 242, "125423": 242, "086167": 242, "145822": 242, "113939": 242, "114399": 242, "057664": 242, "788608": 242, "063991": 242, "115559": 242, "160549": 242, "034685": 242, "035618": 242, "714976": 242, "092664": 242, "089158": 242, "054565": 242, "002555": 242, "032356": 242, "003056": 242, "936719": 242, "122771": 242, "078285": 242, "096841": 242, "068821": 242, "sqrt": [242, 264], "p_i": 242, "p_": 242, "orig": 242, "operatornam": [242, 255, 275], "sum_": 242, "overlin": [242, 255], "_j": 242, "_k": [242, 255], "det": 242, "Then": [242, 255], "ofv_": 242, "iofv_": 242, "iofv_k": 242, "ofv_k": 242, "case_column": 242, "rikard": [242, 244, 249, 269, 273], "nordgren": [242, 244, 249, 269, 273], "sebastian": [242, 244, 249], "ueckert": [242, 244, 249], "svetlana": 242, "freiberga": 242, "karlsson": [242, 244, 249, 255, 273], "faster": [242, 243, 269], "2018": [242, 260, 273], "abstr": [242, 244], "8683": 242, "www": [242, 244, 260], "meet": [242, 244, 246, 260, 269], "pars": [243, 258, 266, 268, 269, 276], "rh": 243, "1180": 243, "887": [243, 257, 259], "1162": 243, "1032": 243, "add_covariate_effect": [243, 250, 264], "1004": 243, "remove_covariate_effect": [243, 250], "1181": 243, "9fd701521": 243, "best_model": 243, "final_model_nam": 243, "a7fbcbfe2": 243, "update_initial_individual_estim": 243, "modelsearch_candidate1": [243, 265, 276], "modifi": [243, 258, 260, 267], "wors": 243, "calculate_b": [243, 257, 259, 265], "calculate_a": 243, "check_parameters_near_bound": 243, "check_high_correl": 243, "plot_iofv_vs_iofv": 243, "plot_individual_predict": 243, "evaluate_express": 243, "evaluate_weighted_residu": 243, "parameter_esimt": 243, "calculate_pk_parameters_statist": 243, "update_init": [243, 262, 264], "predict_": 243, "print_fit_summari": 243, "write_result": 243, "rank_model": 243, "speedup": 243, "297a64041": 243, "individual_ofv": [243, 263], "1101": 243, "57fc4fee8": 243, "fd417aaf": 243, "convert_model": 243, "d5458e36": 243, "keyerror": 243, "localmodeldirectori": 243, "filenotfounderror": 243, "1193bd39": 243, "unus": 243, "submodul": 243, "bb96a13c": 243, "update_paramet": 243, "0ca786c5": 243, "dd056da3": 243, "915bc9c7": 243, "get_config_path": 243, "disabl": [243, 246], "82b32278": 243, "unwant": 243, "debug": 243, "1131a610": 243, "ebfafb45": 243, "1173": 243, "fb070ee1": 243, "1049": [243, 257], "pyreadr": 243, "easier": [243, 253, 262], "instal": [243, 245, 260, 277], "mac": [243, 248], "m1": [243, 274], "get_evid": 243, "get_cmt": 243, "resmod": [243, 271], "916": 243, "strict": [243, 260], "round": [243, 252], "1055": 243, "attibut": 243, "1092": 243, "exlud": 243, "unreport": 243, "1076": 243, "988": 243, "1c65359": 243, "subtool": [243, 276], "42fe72f": 243, "1001": 243, "lead": [243, 264, 278], "uneven": 243, "branch": [243, 248], "reduc": [243, 274], "stepwis": [243, 250, 274, 276], "694": 243, "properli": 243, "708": 243, "790": 243, "974": 243, "produc": [243, 260], "1017": 243, "989": 243, "71f4cf23": 243, "dsl": 243, "932": 243, "973": 243, "cfc09bad": 243, "975": 243, "run_iovsearch": [243, 259], "917": 243, "977": 243, "run_covsearch": [243, 250, 278], "908": 243, "fd564168": 243, "088a046a": 243, "c76fa476": 243, "430f1d2e": 243, "make_declar": 243, "greekify_model": 243, "estmethod": 243, "find_clearance_paramet": 243, "find_volume_paramet": 243, "vp": 243, "newer": 243, "820": [243, 263], "run_iivsearch": [243, 257], "run_modelsearch": [243, 265, 276], "seprat": 243, "correctli": 243, "sporad": 243, "race": [243, 246], "caus": [243, 260, 269, 278], "lazi": 243, "duplic": 243, "745": 243, "1st": 243, "3rd": 243, "bad": 243, "710": 243, "configur": [243, 266, 277], "licens": 243, "advanx": 243, "add_time_after_dos": [243, 252], "de": 243, "intercompartment": 243, "695": 243, "defob": 243, "choos": [243, 257, 260, 265, 266, 267], "gl": 243, "solve_ode_system": 243, "meta": 243, "switch": [243, 269], "read_dataset_from_datainfo": 243, "addl": 243, "linalgerror": 243, "656": [243, 257], "tflite": [243, 256], "649": 243, "654": 243, "expand_additional_dos": 243, "better": [243, 265, 273], "modelsyntaxerror": 243, "588": 243, "625": [243, 257], "578": 243, "vc1": 243, "577": 243, "632": 243, "636": 243, "mode": [243, 255, 260], "boundari": [243, 259, 265], "590": 243, "gl_real": 243, "sampled_iofv": [243, 275], "version": [243, 245, 256, 260, 276], "subblock": 243, "check_dataset": 243, "tensorflow": 243, "modelbuild": 243, "add_mdt_iiv": 243, "three": [243, 253, 260, 266], "lst": [243, 276], "add_eta": [243, 272], "etas_as_fullblock": 243, "iiv_as_fullblock": 243, "add_mdt_eta": 243, "remove_loq_data": 243, "wip": 243, "don": 243, "130": [243, 250], "create_report": 243, "528": 243, "457": 243, "translate_nmtran_tim": 243, "print_model_cod": [243, 256, 262], "has_michaelis_menten_elimin": 243, "has_zero_order_elimin": 243, "has_first_order_elimin": 243, "has_mixed_mm_fo_elimin": 243, "2c": 243, "1c": 243, "timevari": 243, "create_symbol": 243, "remove_unused_parameters_and_rv": 243, "mu_reference_model": 243, "simplify_express": 243, "cli": [243, 258], "bump_model_numb": 243, "regress": 243, "get_doseid": [243, 252], "get_unit_of": 243, "get_concentration_parameters_from_data": [243, 252], "write_csv": 243, "resample_data": 243, "omit_data": 243, "get_observation_express": 243, "get_individu": 243, "get_dos": [243, 252], "list_time_varying_covari": 243, "estmeth": 243, "optim": [243, 253, 258, 262, 269], "incorrect": 243, "add_allometri": 243, "insert_aft": 243, "modelstat": 243, "power_on_ruv": 243, "estimationmethod": 243, "guard": 243, "avoid": [243, 253, 260], "cdd": 243, "bipp": [243, 245], "frem": [243, 262, 271, 272], "5000": 243, "shift": 243, "write_model": [243, 262, 264, 266], "header": 243, "nest": [243, 278], "update_sourc": [243, 266], "due": [243, 273], "set_dtbs_error_model": [243, 264], "dure": [243, 278], "logger": 243, "parametr": 243, "broken": 243, "parallel": [243, 276], "generate_model_cod": [243, 262], "print_model_symbol": 243, "get_observ": [243, 252], "parameter_sampl": 243, "api": [243, 253, 258, 264, 268, 269, 277], "improv": [243, 272], "eta_shrinkag": 243, "summarize_model": 243, "window": [243, 248, 256, 260], "rstudio": [243, 269], "zero_order_absorpt": 243, "first_order_absorpt": 243, "bolus_absorpt": 243, "set_bolus_absorpt": [243, 264], "seq_zo_fo_absorpt": 243, "set_seq_zo_fo_absorpt": [243, 264], "have_zero_order_absorpt": 243, "has_zero_order_absorpt": 243, "individual_shrinkag": 243, "individual_parameter_statist": 243, "pk_paramet": 243, "create_rv_block": 243, "split_rv_block": 243, "nind": 243, "nob": 243, "nobsi": 243, "remove_error": 243, "additive_error": 243, "proportional_error": 243, "combined_error": 243, "has_additive_error": 243, "has_proportional_error": 243, "has_combined_error": 243, "theta_as_stdev": 243, "set_dtbs_error": 243, "tdist": [243, 270], "john_drap": 243, "add_paramet": 243, "add_individual_paramet": [243, 264], "first_order_elimin": 243, "zero_order_elimin": 243, "michaelis_menten_elimin": 243, "mixed_mm_fo_elimin": 243, "revert": 243, "thread": [243, 246], "phi": [243, 248, 276], "site": 243, "crossval": [243, 271], "qa": [243, 271], "plain": [243, 247, 248], "sdcorr": 243, "data_transform": [243, 264], "evalut": 243, "bootstrap": [243, 271], "dependent_variable_symbol": 243, "releas": [243, 260, 278], "claus": 243, "rework": 243, "interfac": [243, 253, 256, 258, 260, 262, 264, 269, 277, 278], "com": 243, "stdin": 243, "123": [243, 250, 257, 259, 263, 265, 273], "clearer": 243, "prioriti": [243, 266], "aggregatedmodelfitresult": 243, "priorit": [243, 266], "abbr": [243, 247, 266], "half": [243, 270, 272], "life": [243, 270, 272], "set_nam": 243, "copy_model": [243, 264, 278], "parameter_init": 243, "base_parameter_chang": [243, 255], "parameter_vari": [243, 255, 272], "coeffici": 243, "frem_result": 243, "simevalresult": 243, "nonfixed_init": 243, "parameterset": 243, "migrat": 243, "github": [243, 248, 256, 258, 269, 278], "action": [243, 245, 246, 248, 260, 269], "integr": [243, 245, 269], "columntyp": 243, "to_base_model": 243, "comined_mm_fo_elimin": 243, "absorption_r": 243, "pretti": 243, "qaresult": 243, "nmtranparseerror": 243, "error_model": 243, "bootstrapresult": 243, "pharmpyconfigpath": [243, 247], "environ": [243, 246, 277, 278], "linearizeresult": 243, "label": 243, "sometim": 243, "wrong": 243, "reset_indic": 243, "multiindic": 243, "functionsadd_lag_tim": 243, "yaml": 243, "view": [243, 260, 274], "assumpt": [243, 260], "0th": [243, 245], "parser": [243, 269], "individul": 243, "extend": [243, 260, 272, 274], "postprocess": [243, 271], "librari": [243, 256, 258, 260, 269, 278], "stella": [244, 249, 269], "belin": [244, 249, 269], "gunnar": [244, 249], "yngman": [244, 249, 255], "simon": [244, 249], "carter": [244, 249], "buatoi": [244, 249], "jo\u00e3o": [244, 249], "abrant": [244, 249], "andrew": [244, 249], "hooker": [244, 249], "assemblerr": 244, "novel": 244, "process": [244, 273], "2021": [244, 255], "9656": 244, "subcommand": 245, "top": [245, 252, 276], "often": [245, 248, 262, 274], "help": [245, 246, 250, 269, 276, 278], "verb": 245, "particular": [245, 246, 248, 252, 260, 261], "welcom": [245, 246, 248, 260], "usag": 245, "exit": 245, "program": [245, 246, 256, 260], "pheno_r": [245, 252, 262, 263], "prettyprint": 245, "output_fil": 245, "match": 245, "pager": 245, "stdout": [245, 276], "datasetsmultipl": 245, "1th": 245, "quot": 245, "comb": 245, "elimini": 245, "propot": 245, "error_typ": 245, "givenbi": 245, "cov_sampl": 245, "posdef": 245, "non_fix": 245, "input_path": 245, "particip": 246, "project": [246, 247, 248, 258, 260], "made": [246, 260, 262], "member": 246, "globe": 246, "divers": 246, "skill": [246, 269], "person": [246, 260], "experi": 246, "growth": 246, "everyon": [246, 248, 260], "guidelin": 246, "insid": [246, 260], "goal": 246, "inclus": [246, 260, 272], "grow": 246, "pledg": 246, "treat": [246, 248, 260], "peopl": 246, "harass": 246, "bulli": 246, "regardless": [246, 260, 262], "sexual": 246, "orient": 246, "gender": 246, "ident": 246, "appear": [246, 278], "nation": 246, "ethnic": 246, "religion": 246, "imageri": 246, "sexist": 246, "racist": 246, "exclusionari": 246, "joke": 246, "acknowledg": [246, 260], "citat": 246, "request": [246, 248], "author": [246, 260], "own": [246, 247, 253, 260, 262], "cite": 246, "those": [246, 260, 264, 276], "realiz": 246, "varieti": [246, 250], "opinion": 246, "background": 246, "serv": [246, 260, 269], "enrich": 246, "discuss": 246, "pro": 246, "con": 246, "technologi": 246, "proactiv": 246, "ensur": [246, 260], "heard": 246, "feel": [246, 269], "confid": 246, "freeli": 246, "question": 246, "answer": 246, "respectfulli": 246, "pai": 246, "attent": 246, "feedback": 246, "forum": 246, "especi": 246, "contribut": [246, 258, 260], "conscienti": 246, "percept": 246, "wider": 246, "respond": 246, "strive": 246, "behavior": 246, "encourag": [246, 248, 253, 258], "product": [246, 250, 260], "debat": 246, "disagr": 246, "entir": [246, 248, 260, 276], "silent": 246, "violat": [246, 260], "contact": [246, 260], "maintain": [246, 248, 249, 258, 260, 268, 269], "talk": 246, "privat": [246, 250, 260], "situat": 246, "onlin": 246, "offlin": 246, "mail": [246, 260], "social": 246, "media": 246, "confer": 246, "associ": [246, 259, 260], "adapt": [246, 260, 269], "astropi": 246, "appdir": 247, "your": [247, 248, 256, 258, 260, 264, 266, 276, 278], "web": 247, "pypi": [247, 248, 256], "ini": 247, "fallback": 247, "pharmpyconfigfil": 247, "bug": 248, "appreci": 248, "suggest": [248, 258], "suitabl": [248, 269], "student": [248, 269], "intern": [248, 262, 264, 266, 269, 278], "commun": [248, 260], "aspir": 248, "conduct": [248, 265], "foster": 248, "linux": [248, 256], "maco": [248, 256], "ll": 248, "badg": 248, "pip": [248, 256], "python3": 248, "pip3": 248, "guid": 248, "former": 248, "ubuntu": 248, "apt": 248, "url": [248, 256], "render": [248, 260, 269], "On": [248, 269], "sudo": 248, "brew": 248, "unnecessari": [248, 260], "thing": [248, 260], "instruct": 248, "black": 248, "formatt": 248, "flake8": 248, "linter": 248, "isort": 248, "lint": 248, "reformat": 248, "py39": 248, "test_paramet": 248, "py": [248, 256], "test_get_theta": 248, "apart": 248, "suit": 248, "purpos": [248, 260], "complex": [248, 256, 258], "extern": [248, 252, 253, 264, 268, 269], "test_modelsearch": 248, "test_summary_individu": 248, "pull": 248, "manag": 248, "contributor": [248, 260], "emploi": 248, "commit": [248, 260], "push": 248, "name_of_branch": 248, "deploy": 248, "setup": 248, "trigger": [248, 262], "tag": 248, "changelog": 248, "bump": 248, "semant": 248, "bumpvers": 248, "cfg": 248, "sh": 248, "patch": 248, "minor": 248, "major": [248, 260], "year": [248, 260], "copyright": 248, "necessari": [248, 260, 278], "coi": 248, "stream": [248, 262], "verbatim": [248, 260], "farmaci": 249, "uu": 249, "kajsa": 249, "harl": 249, "zhe": [249, 269], "huang": [249, 269], "aurelien": 249, "oom": 249, "piyanan": 249, "assawasuwannakit": 249, "xiaomei": 249, "chen": 249, "alzahra": 249, "hamdan": 249, "osama": 249, "qutishat": 249, "shijun": 249, "wang": 249, "tianwu": 249, "yang": 249, "warm": 249, "thank": 249, "sponsor": 249, "hoffman": 249, "la": 249, "roch": 249, "ltd": 249, "pharmetheu": 249, "uppsala": [249, 258], "univers": [249, 258], "inter": [250, 257], "five": 250, "third": [250, 253, 260], "fourth": 250, "cartesian": 250, "manual": [250, 252, 276], "rewritten": 250, "notic": [250, 260], "semicolon": 250, "mox2": [250, 257, 259, 265, 276], "418814": 250, "139": 250, "125102": 250, "138": 250, "135134": 250, "927208": 250, "485622": 250, "937252": 250, "780611": 250, "mo": [250, 255], "504543": 250, "90": 250, "597508": 250, "87": 250, "790910": 250, "806421": 250, "62": [250, 270], "737810": 250, "195653": 250, "315057": 250, "651626": 250, "814832": 250, "978215": 250, "056538": 250, "732689": 250, "062682": 250, "061671": 250, "742325": 250, "1436": 250, "605574": 250, "1431": 250, "311862": 250, "1430": 250, "321894": 250, "1425": 250, "113968": 250, "1424": 250, "672383": 250, "124012": 250, "1422": 250, "967372": 250, "1415": 250, "691304": 250, "1382": 250, "784268": 250, "1379": 250, "977671": 250, "1364": [250, 257], "993181": 250, "1354": 250, "924571": 250, "382413": 250, "1346": 250, "501817": 250, "1335": 250, "838386": 250, "1334": 250, "001593": 250, "1332": 250, "164976": 250, "1313": [250, 265], "243298": 250, "1312": 250, "919450": 250, "249442": 250, "248431": 250, "1302": 250, "929085": 250, "1292": [250, 257, 259, 265], "186761": [250, 257, 259, 265], "1414": 250, "1386": 250, "787242": 250, "1409": 250, "1381": 250, "493530": 250, "1408": 250, "1380": 250, "503563": 250, "1405": [250, 257, 259, 265, 273], "586096": 250, "1404": [250, 257, 259, 265, 273], "144510": 250, "1378": [250, 257], "596140": 250, "1402": [250, 259], "1377": 250, "439499": 250, "1397": 250, "1374": 250, "453891": 250, "1341": 250, "546855": 250, "1361": 250, "1338": 250, "740258": 250, "1323": 250, "755768": 250, "1336": 250, "687158": 250, "145000": 250, "1330": 250, "1309": 250, "554864": 250, "1319": 250, "1298": 250, "891433": 250, "1318": 250, "1297": 250, "054639": 250, "1316": 250, "1295": [250, 265], "218022": 250, "1276": 250, "296345": 250, "1296": 250, "1275": 250, "972496": 250, "302489": 250, "301478": 250, "1286": 250, "1265": [250, 259], "982132": 250, "1278": [250, 257, 259, 265], "1259": [250, 257, 259, 265], "530267": [250, 257, 259, 265], "550520": 250, "1328": 250, "1305": [250, 265], "313107": 250, "1350": 250, "224247": 250, "1308": 250, "986835": 250, "1416": 250, "503401": 250, "1396": 250, "1370": 250, "975529": 250, "1417": 250, "275090": 250, "1371": 250, "747218": 250, "1418": 250, "475139": 250, "1398": 250, "1372": 250, "947267": 250, "1426": 250, "509140": 250, "1376": 250, "690808": 250, "430350": 250, "612019": 250, "1427": 250, "910516": 250, "092185": 250, "1437": 250, "275565": 250, "1413": 250, "1383": 250, "166774": 250, "631837": 250, "1412": 250, "523046": 250, "957318": 250, "848526": 250, "805990": 250, "697199": 250, "1438": 250, "187223": 250, "1384": 250, "078432": 250, "1363": 250, "424478": 250, "1343": [250, 257], "1317": 250, "896606": 250, "1388": 250, "878574": 250, "1368": 250, "350702": 250, "113956": 250, "586084": 250, "ruv_prop_estim": [250, 273], "9960": 250, "187601": 250, "7980": 250, "185142": 250, "6117": 250, "180085": 250, "5252": 250, "181726": 250, "7337": 250, "184103": 250, "4092": 250, "180301": 250, "4997": 250, "179325": 250, "4482": 250, "181272": 250, "4189": 250, "189053": 250, "5013": 250, "188003": 250, "6103": 250, "187672": 250, "8728": 250, "190712": 250, "3161": 250, "195330": 250, "8757": 250, "192852": 250, "3323": 250, "191425": 250, "7087": 250, "192934": 250, "4824": 250, "199549": 250, "9807": 250, "192557": 250, "3823": 250, "198783": 250, "1536": 250, "193411": 250, "9763": 250, "195608": 250, "2632": 250, "197452": 250, "5328": [250, 257, 259, 265], "209972": [250, 257, 259, 265], "8499": 250, "192681": 250, "1238": 250, "194408": 250, "5391": 250, "182237": 250, "7059": 250, "182092": 250, "4373": 250, "181626": 250, "7842": 250, "182065": 250, "5121": 250, "181752": 250, "4741": 250, "180703": 250, "9846": 250, "187508": 250, "0276": 250, "187684": 250, "9787": 250, "186766": 250, "9897": 250, "187557": 250, "9709": 250, "186978": 250, "8036": 250, "196301": 250, "9160": 250, "192686": 250, "184102": 250, "5256": 250, "181734": 250, "pop_clage_estim": 250, "pop_clsex_estim": 250, "pop_clwt_estim": 250, "739428": 250, "007466": 250, "724484": 250, "765510": 250, "784040": 250, "788914": 250, "849555": 250, "808269": 250, "834534": 250, "577983": 250, "386872": 250, "414099": 250, "365025": 250, "293158": 250, "004963": 250, "382904": 250, "010536": 250, "005338": 250, "000660": 250, "387683": 250, "342000": 250, "002802": 250, "812282": 250, "743874": 250, "002654": 250, "856355": 250, "712068": 250, "002342": 250, "796171": 250, "805106": 250, "002752": 250, "726541": 250, "730115": 250, "000284": 250, "737330": 250, "746890": 250, "747449": 250, "373211": 250, "788917": 250, "784186": 250, "034933": 250, "013481": 250, "037359": 250, "227740": 250, "022746": 250, "049832": 250, "019706": 250, "059279": 250, "517590": 250, "406124": 250, "258315": 250, "008865": 250, "008788": 250, "242742": 250, "006337": 250, "013997": 250, "809357": 250, "007942": 250, "746753": 250, "009662": 250, "772697": 250, "007715": 250, "756337": 250, "008384": 250, "011954": 250, "133780": 250, "943702": 250, "073220": 250, "086860": 250, "013679": 250, "953372": 250, "013320": 250, "014651": 250, "008482": 250, "115170": 250, "065250": 250, "942578": 250, "723985": 250, "008686": 250, "705263": 250, "007851": 250, "765500": 250, "006172": 250, "011627": 250, "800803": 250, "008297": 250, "013862": 250, "800449": 250, "008143": 250, "012912": 250, "808946": 250, "007874": 250, "014022": 250, "741105": 250, "007820": 250, "013734": 250, "793357": 250, "007122": 250, "015534": 250, "596488": 250, "008073": 250, "012324": 250, "012251": 250, "133790": 250, "756260": 250, "008381": 250, "110": [250, 257, 259, 265, 273], "113": [250, 257, 259, 265, 273], "121": [250, 257, 259, 265, 273], "1403": [250, 257, 259, 265, 273], "1406": [250, 257, 259, 265, 273], "1407": [250, 257, 259, 265, 273], "757118": [250, 257, 259, 265], "659694": [250, 257, 259, 265], "302503": [250, 257, 259, 265], "464327": [250, 257, 259, 265], "034898": [250, 257, 259, 265], "167558": 250, "086188": 250, "238268": 250, "450755": 250, "456701": 250, "573801": 250, "385316": 250, "317492": 250, "252706": 250, "975049": 250, "2920": 250, "reduced_ofv": [250, 274], "extended_ofv": [250, 274], "ofv_drop": [250, 274], "extended_st": [250, 274], "048703": 250, "880596": 250, "422754": 250, "282451": 250, "491364": 250, "722430": 250, "69": 250, "189487": 250, "475854": 250, "812097": 250, "583786": 250, "276068": 250, "783835": 250, "432709": 250, "981079": 250, "422665": 250, "197894": 250, "395171": 250, "207926": 250, "316382": 250, "796548": 250, "491606": 250, "669991": 250, "026263": 250, "351743": 250, "200416": 250, "581649": 250, "181096": 250, "727000": 250, "933192": 250, "491618": 250, "delta_df": [250, 274], "pvalu": [250, 274], "goal_pvalu": [250, 274], "047127e": 250, "03": [250, 270, 272, 274], "710000e": 250, "568110e": 250, "494490e": 250, "498453e": 250, "459287e": 250, "280678e": 250, "923500e": 250, "003390e": 250, "253363e": 250, "996801e": 250, "705542e": 250, "706940e": 250, "706759e": 250, "368618e": 250, "02": [250, 272, 274, 276], "944356e": 250, "215423e": 250, "675009e": 250, "082162e": 250, "987935e": 250, "521990e": 250, "685310e": 250, "727896e": 250, "143199e": 250, "279024e": 250, "375337e": 250, "248414e": 250, "512424e": 250, "446750e": 250, "991122e": 250, "130547e": 250, "712593e": 250, "531279e": 250, "732385e": 250, "085233e": 250, "is_backward": [250, 274], "extended_signific": [250, 274], "folder": 250, "t3": 250, "rms6r0p90qs2_8fd7g2p8f": 250, "covariate_effect": [250, 255, 272, 274], "ofv_summari": [250, 274], "candidate_summari": [250, 274], "n_test": [250, 274], "n_ok": [250, 274], "n_localmin": [250, 274], "n_fail": [250, 274], "stepinclud": [250, 274], "estimation_ofv": 251, "prediction_ofv": 251, "545": 251, "863847": 251, "186": 251, "192727": 251, "512": 251, "953185": 251, "694832": 251, "547": 251, "843632": 251, "184": [251, 274], "022535": 251, "579": 251, "109635": 251, "596550": 251, "prediction_ofv_sum": 251, "747": 251, "506644594254": 251, "read_raw_dataset": 252, "arrai": [252, 262, 276], "get_id": 252, "largest": 252, "ser": 252, "di": [252, 278], "role": 252, "identif": [252, 273], "mostli": [252, 253, 269], "steven": 252, "typologi": 252, "en": [252, 253, 255], "wikipedia": 252, "wiki": [252, 260], "level_of_measur": 252, "annot": 252, "kg": 252, "mg": 252, "l": [252, 278], "low": [252, 262, 264], "understand": [252, 268], "accompani": [252, 260], "And": [252, 260, 276], "under": [253, 258, 260, 274, 278], "construct": [253, 268], "complet": 253, "four": 253, "distinct": 253, "layer": [253, 265, 267], "worklow": 253, "higher": [253, 258, 262, 264, 275], "coupl": 253, "mathemat": [253, 262, 269], "concid": 253, "live": 253, "namespac": 253, "mutablesequ": 253, "scalar": [253, 262], "element": [253, 263], "concern": [253, 260], "expos": 253, "numpydoc": 253, "readthedoc": 253, "ecosystem": 253, "thu": [253, 257, 260, 262, 276], "wrap": 253, "share": [253, 260, 267], "leak": 253, "parti": [253, 260], "break": 253, "creation": 255, "model_3b": 255, "u": [255, 264], "eta_i": 255, "leq": 255, "n_": 255, "par": [255, 262], "eta_k": 255, "bmatrix": 255, "vdot": 255, "eta_": 255, "sim": [255, 262, 264, 275], "mathcal": [255, 262, 264], "mu_2": 255, "omega_": [255, 264], "n1": 255, "n2": 255, "ddot": 255, "latter": 255, "partit": 255, "5th": 255, "630859": 255, "868770": 255, "176754": 255, "95th": 255, "925602": 255, "082310": 255, "244607": 255, "569077": 255, "600360": 255, "632538": 255, "532478": 255, "824355": 255, "138312": 255, "577861": 255, "761430": 255, "991915": 255, "003863": 255, "148763": 255, "297579": 255, "600771": 255, "631260": 255, "661025": 255, "315965": 255, "549669": 255, "811532": 255, "margin": 255, "ij": 255, "ijk": 255, "omega_k": 255, "sigma_1": 255, "sigma_2": 255, "sigma_i": 255, "turn": [255, 262], "percent": 255, "red": 255, "figur": 255, "vconcatchart": 255, "sigma_": 255, "020503": 255, "628814": 255, "009309": 255, "544459": 255, "026950": 255, "613127": 255, "050396": 255, "551581": 255, "individual_effect": 255, "913307": 255, "899565": 255, "923297": 255, "939015": 255, "926632": 255, "948404": 255, "933506": 255, "894967": 255, "970755": 255, "010192": 255, "973823": 255, "047109": 255, "992728": 255, "986142": 255, "999404": 255, "361911": 255, "322628": 255, "418737": 255, "894772": 255, "868658": 255, "917333": 255, "947797": 255, "923656": 255, "969732": 255, "771958": 255, "748072": 255, "790423": 255, "790120": 255, "768277": 255, "806911": 255, "percentu": 255, "unexplained_vari": 255, "sd_observ": 255, "sd_5th": 255, "sd_95th": 255, "469535": 255, "359934": 255, "547612": 255, "465490": 255, "352335": 255, "538174": 255, "165502": 255, "141580": 255, "190726": 255, "159149": 255, "134989": 255, "183613": 255, "420471": 255, "327104": 255, "490419": 255, "404440": 255, "306148": 255, "467046": 255, "143317": 255, "122348": 255, "166012": 255, "141826": 255, "120282": 255, "163610": 255, "percetil": 255, "025328": 255, "022571": 255, "020115": 255, "216681": 255, "188254": 255, "163572": 255, "027391": 255, "021634": 255, "020540": 255, "intermedi": 255, "model_4": [255, 262], "parameter_inits_and_estim": 255, "model_3": 255, "115195": 255, "007066": 255, "209016": 255, "125999": 255, "020191": 255, "224959": 255, "126000": 255, "007084": 255, "38635": 255, "220463": 255, "195326": 255, "176796": 255, "bsv_apgr": 255, "010583": 255, "107027": 255, "000008": 255, "171529": 255, "404278": 255, "000010": 255, "012042": 255, "115427": 255, "000032": 255, "208475": 255, "415588": 255, "000030": 255, "062712": 255, "117271": 255, "039930": 255, "446939": 255, "402075": 255, "bsv_wgt": 255, "244579": 255, "244448": 255, "002173": 255, "002170": 255, "244080": 255, "007763": 255, "007760": 255, "249237": 255, "034610": 255, "015250": 255, "relative_chang": 255, "773218": 255, "095327": 255, "520526": 255, "271369": 255, "110618": 255, "974324": 255, "868": [255, 257], "657803": 255, "852": 255, "803483": 255, "753": 255, "302743": 255, "themselv": 255, "ideal": 255, "estimated_covari": 255, "stdev": 255, "423728": 255, "237640": 255, "525424": 255, "704565": 255, "nyberg": 255, "hb": 255, "jonsson": 255, "introduct": 255, "cpt": 255, "pharmacometr": [255, 258, 260, 276], "syst": 255, "pharmacol": 255, "1002": 255, "psp4": 255, "12741": 255, "plan": 256, "stabl": 256, "googl": [256, 269], "coral": 256, "repo": 256, "tflite_runtim": 256, "nonlinear": 256, "examin": 256, "sever": [256, 272], "aspect": [257, 272, 276], "explor": [257, 269], "naiv": 257, "minima": 257, "\u03b4ofv": [257, 259, 265], "\u03b4aic": [257, 259, 265], "\u03b4bic": [257, 259, 265], "iivsearch_no_of_etas_candidate3": 257, "282024": 257, "iivsearch_no_of_etas_candidate2": 257, "217": 257, "691571": 257, "iivsearch_no_of_etas_candidate6": 257, "385": 257, "641987": 257, "iivsearch_no_of_etas_candidate1": 257, "631": 257, "871991": 257, "iivsearch_no_of_etas_candidate5": 257, "633": [257, 263], "419500": 257, "iivsearch_no_of_etas_candidate4": 257, "815": 257, "076729": 257, "iivsearch_no_of_etas_candidate7": 257, "834": 257, "249063": 257, "iivsearch_block_structure_candidate1": 257, "81": [257, 263], "971960": 257, "1283": [257, 259], "597406": 257, "1279": 257, "315382": 257, "1061": 257, "623812": 257, "673395": 257, "443392": 257, "645": 257, "895882": 257, "464": 257, "238653": 257, "066319": 257, "1365": 257, "569365": 257, "178325": 257, "1280": [257, 259], "1070": 257, "204731": 257, "1058": 257, "897": 257, "963854": 257, "024311": 257, "644": 257, "650": 257, "186341": 257, "640": 257, "468": 257, "529112": 257, "458": 257, "437": 257, "440744": 257, "1261": [257, 259], "189012": 257, "1039": 257, "215418": [257, 274], "641723": 257, "034998": 257, "620": 257, "864210": 257, "439": 257, "206982": 257, "417": 257, "411370": 257, "160972": 257, "5333": 257, "0366": 257, "1164": 257, "1064": 257, "2929": 257, "8058": 257, "9055": 257, "104": [257, 259, 265], "2270": 257, "2300": [257, 265], "9424": 257, "103": 257, "1360": 257, "239": 257, "1090": 257, "234": 257, "6680": 257, "9380": 257, "6690": 257, "106": [257, 270, 272, 273], "9880": 257, "433544": 257, "433676": [257, 259, 265], "114210": 257, "347648": 257, "316164": 257, "310155": 257, "922906": 257, "434563": 257, "436279": 257, "481830": 257, "481858": [257, 259, 265], "594777": 257, "396159": 257, "516927": 257, "593578": 257, "593654": [257, 259, 265], "414690": 257, "247930": 257, "656304": 257, "00013": 257, "31998": 257, "08352": 257, "43473": 257, "209975": 257, "401593": 257, "574966": 257, "736398": 257, "750954": 257, "744891": 257, "810669": 257, "215885": 257, "iiv_cl_iiv_vc_estim": 257, "498114": 257, "965311": 257, "348227": 257, "596114": 257, "524856": 257, "831038": 257, "973037": 257, "826292": 257, "168816": 257, "275494": 257, "612863": 257, "081253": 257, "444919": 257, "093815": 257, "067016": 257, "554482": 257, "103963": 257, "060027": 257, "670815": 257, "108198": 257, "049148": 257, "371": 257, "agnost": 258, "architectur": 258, "mainli": 258, "foundat": [258, 260], "post": [258, 273], "sens": 259, "brute": 259, "approach": 259, "nonzero": 259, "constant": 259, "iovsearch_candidate7": 259, "eta_iov_2_1": 259, "eta_iov_3_1": 259, "540508": 259, "iovsearch_candidate5": 259, "230772": 259, "iovsearch_candidate6": 259, "230394": 259, "iovsearch_candidate3": 259, "750000": 259, "iovsearch_candidate4": 259, "750400": 259, "iovsearch_candidate2": 259, "060114": 259, "iovsearch_candidate1": 259, "043077": 259, "iovsearch_candidate8": 259, "241921": 259, "694052": 259, "384316": 259, "383938": 259, "1262": 259, "153544": 259, "403544": 259, "403145": 259, "093431": 259, "1257": 259, "110467": 259, "1115": 259, "911624": 259, "1300": 259, "017728": 259, "1284": 259, "1263": 259, "070775": 259, "1299": 259, "707992": 259, "761039": 259, "707614": 259, "760660": 259, "017679": 259, "1282": 259, "1258": 259, "780267": 259, "017280": 259, "779867": 259, "707566": 259, "1281": 259, "470153": 259, "015062": 259, "1254": 259, "487190": 259, "1145": 259, "944840": 259, "1131": 259, "1113": 259, "288346": 259, "1954": 259, "1951": 259, "1950": 259, "2313": 259, "242": [259, 270, 272], "440613": 259, "665": 259, "439785": 259, "439783": 259, "230": 259, "241": 259, "440611": 259, "439784": 259, "438628": 259, "474140": 259, "586866": 259, "472835": 259, "590425": 259, "472840": 259, "590424": 259, "474125": 259, "586859": 259, "474111": 259, "586860": 259, "590422": 259, "572627": 259, "311861": 259, "194680": 259, "320393": 259, "195531": 259, "320395": 259, "195532": 259, "000130": [259, 265], "311859": 259, "194676": 259, "311903": 259, "194675": 259, "320387": 259, "290631": 259, "197005": 259, "omega_iov_1_estim": 259, "omega_iov_2_estim": 259, "002735": 259, "000006": 259, "483460": 259, "omega_iov_3_estim": 259, "000000e": [259, 274], "119820": 259, "001912": 259, "121866": 259, "620420": 259, "291396": 259, "230854": 259, "936871": 259, "267222": 259, "050766": 259, "059323": 259, "068405": 259, "291876": 259, "271367": 259, "187631": 259, "051358": 259, "020838": 259, "042977": 259, "612880": 259, "250083": 259, "660334": 259, "657": 259, "395": 259, "NEAR": [259, 265], "BE": [259, 260], "address": [259, 260], "adopt": 260, "wikimedia": 260, "bowl_of_hygieia_by_david": 260, "svg": 260, "cc": 260, "BY": 260, "sa": 260, "font": 260, "pt": 260, "san": 260, "relicens": 260, "lgpl": 260, "know": 260, "maintaint": 260, "softwar": [260, 269, 276], "redistribut": 260, "publish": 260, "hope": 260, "warranti": 260, "impli": 260, "merchant": 260, "FOR": 260, "modif": [260, 272], "permit": 260, "retain": 260, "disclaim": 260, "reproduc": 260, "materi": 260, "holder": 260, "AND": [260, 264], "AS": 260, "OR": 260, "BUT": 260, "NOT": 260, "TO": 260, "OF": 260, "IN": 260, "shall": 260, "liabl": 260, "indirect": 260, "incident": 260, "exemplari": 260, "consequenti": 260, "damag": 260, "procur": 260, "good": 260, "servic": 260, "loss": 260, "profit": 260, "busi": 260, "interrupt": 260, "ON": 260, "theori": [260, 262], "liabil": 260, "contract": 260, "tort": 260, "neglig": 260, "aris": 260, "advis": 260, "SUCH": 260, "june": 260, "2007": 260, "inc": 260, "fsf": 260, "preambl": 260, "copyleft": 260, "practic": 260, "design": [260, 262, 264, 269, 276], "awai": 260, "contrast": 260, "guarante": 260, "too": 260, "speak": 260, "price": 260, "charg": 260, "wish": [260, 264], "piec": 260, "prevent": 260, "deni": 260, "ask": [260, 278], "surrend": 260, "therefor": 260, "respons": 260, "grati": 260, "fee": 260, "recipi": 260, "gpl": 260, "assert": 260, "offer": [260, 262, 264], "permiss": 260, "clearli": 260, "sake": 260, "erron": 260, "devic": 260, "although": 260, "manufactur": 260, "fundament": 260, "incompat": 260, "aim": [260, 272], "systemat": 260, "abus": 260, "area": [260, 269], "precis": 260, "unaccept": 260, "prohibit": 260, "substanti": 260, "domain": [260, 267, 276], "stand": 260, "readi": 260, "provis": 260, "futur": 260, "threaten": 260, "constantli": [260, 278], "patent": 260, "danger": 260, "proprietari": 260, "assur": 260, "law": 260, "semiconductor": 260, "mask": 260, "license": 260, "organ": [260, 262], "fashion": 260, "exact": 260, "earlier": 260, "cover": [260, 265, 266, 268, 277], "unmodifi": 260, "propag": 260, "secondarili": 260, "infring": 260, "countri": 260, "convei": 260, "enabl": 260, "mere": 260, "network": 260, "transfer": 260, "extent": 260, "conveni": [260, 262], "promin": 260, "visibl": 260, "menu": 260, "criterion": 260, "offici": 260, "wide": 260, "among": 260, "essenti": 260, "kernel": 260, "script": [260, 276], "link": [260, 273], "subprogram": 260, "intim": 260, "regener": 260, "grant": 260, "irrevoc": 260, "affirm": 260, "unlimit": 260, "constitut": 260, "fair": 260, "equival": [260, 262, 276], "sole": 260, "facil": 260, "compli": 260, "behalf": 260, "relationship": [260, 274], "circumst": 260, "sublicens": 260, "anti": 260, "circumvent": 260, "deem": 260, "technolog": 260, "fulfil": 260, "oblig": 260, "articl": 260, "wipo": 260, "treati": 260, "decemb": 260, "1996": 260, "waiv": 260, "forbid": 260, "exercis": 260, "intent": 260, "enforc": 260, "medium": [260, 269], "conspicu": 260, "intact": 260, "absenc": 260, "along": 260, "relev": [260, 266, 276], "anyon": 260, "who": [260, 266], "possess": 260, "invalid": 260, "natur": 260, "storag": 260, "aggreg": 260, "beyond": 260, "embodi": 260, "durabl": 260, "customarili": 260, "interchang": 260, "spare": 260, "reason": [260, 269], "cost": 260, "server": 260, "occasion": 260, "noncommerci": 260, "subsect": 260, "6b": 260, "further": 260, "clear": [260, 278], "sai": [260, 266], "host": 260, "satisfi": 260, "peer": 260, "transmiss": 260, "6d": 260, "portion": 260, "consum": 260, "tangibl": 260, "household": 260, "sold": 260, "incorpor": 260, "dwell": 260, "doubt": 260, "resolv": [260, 267], "favor": 260, "coverag": 260, "typic": [260, 276], "commerci": 260, "industri": 260, "procedur": 260, "suffic": 260, "interf": 260, "perpetu": 260, "character": 260, "But": 260, "nor": 260, "abil": 260, "rom": 260, "advers": 260, "protocol": 260, "publicli": 260, "password": 260, "unpack": 260, "supplement": 260, "govern": 260, "notwithstand": 260, "misrepresent": 260, "licensor": 260, "declin": 260, "trademark": 260, "trade": 260, "indemnif": 260, "contractu": 260, "impos": 260, "surviv": 260, "termin": 260, "expressli": 260, "void": 260, "paragraph": 260, "ceas": 260, "reinstat": 260, "provision": 260, "perman": 260, "notifi": 260, "prior": 260, "dai": 260, "cessat": 260, "moreov": 260, "cure": 260, "receipt": 260, "qualifi": 260, "ancillari": 260, "consequ": 260, "likewis": 260, "downstream": 260, "complianc": 260, "entiti": 260, "asset": 260, "subdivid": 260, "predecessor": 260, "plu": 260, "effort": 260, "royalti": 260, "litig": 260, "cross": 260, "claim": 260, "counterclaim": 260, "lawsuit": 260, "alleg": 260, "sell": 260, "sale": 260, "acquir": 260, "hereaft": 260, "manner": [260, 265], "worldwid": 260, "agreement": 260, "denomin": 260, "coven": 260, "sue": 260, "knowingli": 260, "readili": 260, "arrang": 260, "depriv": 260, "yourself": 260, "benefit": [260, 269], "knowledg": 260, "believ": 260, "pursuant": 260, "convey": 260, "discriminatori": 260, "scope": 260, "payment": 260, "primarili": 260, "march": 260, "constru": 260, "defens": 260, "court": 260, "contradict": 260, "excus": 260, "simultan": [260, 265], "pertin": 260, "agre": 260, "whom": 260, "refrain": 260, "affero": 260, "revis": 260, "Such": 260, "spirit": 260, "ever": 260, "proxi": 260, "THERE": 260, "qualiti": 260, "prove": 260, "defect": 260, "repair": 260, "WILL": 260, "inabl": 260, "BEING": 260, "inaccur": 260, "sustain": 260, "failur": [260, 269], "review": 260, "waiver": 260, "civil": 260, "greatest": 260, "achiev": 260, "attach": 260, "safest": 260, "pointer": 260, "brief": 260, "idea": [260, 269], "electron": 260, "paper": 260, "hypothet": 260, "Of": 260, "cours": 260, "gui": 260, "box": [260, 272], "employ": 260, "programm": 260, "school": 260, "philosophi": 260, "why": 260, "7b2feb6f20b626a559d3150f6638c111f20b5213": 260, "lin_evalu": 261, "lin_estim": 261, "268756": 261, "problemat": 261, "947354": 261, "939053": 261, "008301": 261, "970582": 261, "012053": 261, "041471": 261, "982345": 261, "979456": 261, "002889": 261, "457096": 261, "435700": 261, "021396": 261, "839445": 261, "838391": 261, "001054": 261, "257222": 261, "278016": 261, "020794": 261, "098344": 261, "077164": 261, "021179": 261, "538623": 261, "520111": 261, "018512": 261, "647972": 261, "673400": 261, "025427": 261, "394648": 261, "373180": 261, "021468": 261, "480163": 261, "505680": 261, "025517": 261, "650236": 261, "629298": 261, "020938": 261, "991406": [261, 263], "988587": 261, "002820": 261, "378873": 261, "372846": 261, "006028": 261, "739906": 261, "725640": 261, "014265": 261, "328801": 261, "326482": 261, "002319": 261, "113286": 261, "104515": 261, "008771": 261, "212076": 261, "325127": 261, "113051": 261, "334048": 261, "321306": 261, "012742": 261, "327782": 261, "306287": 261, "021495": 261, "821537": 261, "795371": 261, "026165": 261, "631283": 261, "620311": 261, "010972": 261, "861666": 261, "855927": 261, "005739": 261, "915260": 261, "913348": 261, "001913": 261, "988972": 261, "024483": 261, "035512": 261, "279274": 261, "269277": 261, "009997": 261, "733179": 261, "729199": 261, "003980": 261, "830055": 261, "827764": 261, "002290": 261, "851725": 261, "847176": 261, "004549": 261, "212098": 261, "192122": 261, "019976": 261, "774789": 261, "773559": 261, "001230": 261, "352292": 261, "351131": 261, "001162": 261, "172644": 261, "165200": 261, "007443": 261, "427375": 261, "420258": 261, "007117": 261, "381438": 261, "412378": 261, "030941": 261, "624011": 261, "614613": 261, "009397": 261, "970630": 261, "955216": 261, "015414": 261, "177025": 261, "002885": 261, "206543": 261, "180626": 261, "025916": 261, "955033": 261, "945036": 261, "982451": 261, "972114": 261, "010337": 261, "051495": 261, "098643": 261, "047147": 261, "424500": 261, "425925": 261, "001425": 261, "734347": 261, "702764": 261, "031583": 261, "018483": 261, "997957": 261, "020526": 261, "810285": [261, 263], "807205": 261, "003080": 261, "279257": 261, "276411": 261, "002846": 261, "168465": 261, "267932": 261, "099467": 261, "190512": 261, "178815": 261, "011697": 261, "749138": 261, "727859": 261, "021278": 261, "598562": 261, "616685": 261, "018123": 261, "237457": 261, "251607": 261, "014150": 261, "568928": 261, "581417": 261, "012489": 261, "800065": 261, "795239": 261, "004826": 261, "098027": 261, "103873": 261, "005846": 261, "586253": [261, 263], "582931": 261, "003323": 261, "663950": 261, "650298": 261, "013652": 261, "850995": 261, "833333": 261, "017662": 261, "605848": 261, "592551": 261, "013297": 261, "iofv_plot": 261, "At": 262, "heart": 262, "li": [262, 276], "subclass": 262, "principl": 262, "pharmi": 262, "transpar": 262, "mymodel": [262, 264], "inspect": 262, "sdtab1": 262, "displaystyl": [262, 264], "infti": 262, "parset": 262, "eta1": 262, "frem_model": 262, "000286193": 262, "0676481": 262, "0256033": 262, "027906": [262, 263], "0235094": 262, "00161838": 262, "24458": 262, "omega_est": 262, "0393482": 262, "0168369": 262, "0442286": 262, "0426757": 262, "0259374": 262, "0654878": 262, "00168063": 262, "983027": 262, "240423": 262, "98305": 262, "choleski": 262, "198363807182661": 262, "0848788911603008": 262, "136868454493349": 262, "222967085720797": 262, "616745467855979": 262, "743597812371906": 262, "215138540674925": 262, "145697201390566": 262, "508675383095755": 262, "810424017694199": 262, "pure": 262, "astyp": 262, "numeric64": 262, "linalg": 262, "19836381": 262, "08487889": 262, "13686845": 262, "22296709": 262, "61674547": 262, "74359781": 262, "21513854": 262, "1456972": 262, "50867538": 262, "81042402": 262, "quit": 262, "flexibl": 262, "cumbersom": 262, "easili": 262, "a_": [262, 264], "004696": [262, 263], "158920": [262, 263], "029351": [262, 263], "s_": [262, 264], "testdata": 263, "2760562818805": 263, "parameter_estimates_sdcorr": 263, "171321": 263, "167051": 263, "115069": 263, "Or": 263, "standard_errors_sdcorr": 263, "039153": 263, "022378": 263, "009904": 263, "relative_standard_error": 263, "044731": 263, "027325": 263, "527072": 263, "457068": 263, "267918": 263, "172147": 263, "proper": 263, "388058": 263, "356900": 263, "238442": 263, "096516": 263, "invers": 263, "29955600": 263, "400": 263, "910": 263, "267": 263, "039": 263, "207": 263, "809": 263, "520": 263, "980": 263, "200": 263, "450": 263, "947352": 263, "970591": 263, "982342": 263, "457091": 263, "839437": 263, "257230": 263, "098338": 263, "538621": 263, "647969": 263, "394643": 263, "480164": 263, "650233": 263, "378880": 263, "739902": 263, "328800": 263, "113284": 263, "212096": 263, "334047": 263, "327778": 263, "821533": 263, "631281": 263, "861669": 263, "915261": 263, "988977": 263, "279273": 263, "733181": 263, "830053": 263, "851724": 263, "212095": 263, "774791": 263, "352283": 263, "172643": 263, "427376": 263, "381444": 263, "624014": 263, "970627": 263, "177028": 263, "206540": 263, "955029": 263, "982447": 263, "051499": 263, "424503": 263, "734342": 263, "018477": 263, "279258": 263, "168486": 263, "190508": 263, "749134": 263, "598565": 263, "237467": 263, "568934": 263, "800062": 263, "098025": 263, "663948": 263, "850993": 263, "605845": 263, "143": 263, "045": 263, "971": 263, "881": 263, "575": 263, "080": 263, "063": 263, "427": 263, "668": 263, "543": 263, "662": 263, "478": 263, "667": 263, "253": 263, "495": 263, "918": 263, "67071": 263, "401100": 263, "35080": 263, "587770": 263, "36360": 263, "278800": 263, "19730": 263, "670700": 263, "21710": 263, "352600": 263, "86050": 263, "067200": 263, "35060": 263, "059269": 263, "72100": 263, "036754": 263, "10860": 263, "814140": 263, "28180": 263, "699410": 263, "eb": 263, "043861": 263, "005430": 263, "166321": 263, "131833": 263, "095934": 263, "130868": 263, "009154": 263, "017388": 263, "102019": 263, "283500": 263, "019417": 263, "099839": 263, "045946": 263, "059072": 263, "024270": 263, "189351": 263, "248536": 263, "091872": 263, "009545": 263, "012052": 263, "066151": 263, "293685": 263, "030236": 263, "074789": 263, "094502": 263, "147433": 263, "076820": 263, "105604": 263, "020051": 263, "066265": 263, "086035": 263, "023260": 263, "067138": 263, "030859": 263, "337255": 263, "035532": 263, "032579": 263, "028410": 263, "003589": 263, "080613": 263, "060233": 263, "052854": 263, "004469": 263, "057344": 263, "051992": 263, "212941": 263, "137510": 263, "004111": 263, "023282": 263, "302636": 263, "039069": 263, "119442": 263, "044956": 263, "263320": 263, "000776": 263, "083231": 263, "003150": 263, "012752": 263, "049654": 263, "080932": 263, "000555": 263, "099614": 263, "061864": 263, "332738": 263, "038156": 263, "067641": 263, "038017": 263, "184137": 263, "156617": 263, "208753": 263, "114558": 263, "053036": 263, "008405": 263, "026004": 263, "144920": 263, "081646": 263, "083320": 263, "015380": 263, "000392": 263, "078062": 263, "018966": 263, "112030": 263, "112715": 263, "383786": 263, "001730": 263, "167583": 263, "042068": 263, "066598": 263, "037600": 263, "000093": 263, "010662": 263, "009775": 263, "058306": 263, "229005": 263, "033958": 263, "008959": 263, "092312": 263, "050987": 263, "192569": 263, "002727": 263, "225657": 263, "115824": 263, "204269": 263, "054792": 263, "066334": 263, "123689": 263, "239678": 263, "047215": 263, "186615": 263, "000949": 263, "010812": 263, "015929": 263, "017213": 263, "005234": 263, "122552": 263, "076677": 263, "095696": 263, "024883": 263, "002999": 263, "007157": 263, "model_ref": 264, "easi": [264, 269], "pipelin": 264, "unfix_parameters_to": 264, "print_model_diff": 264, "ipython": 264, "pkmat": 264, "errori": 264, "pkcl": 264, "vd1": 264, "advan2": 264, "s2": 264, "vka": 264, "pkmdt": 264, "matd1": 264, "pop_mdt": 264, "advan5": 264, "trans1": 264, "defdos": 264, "transit4": 264, "s5": 264, "vk12": 264, "mdtk23": 264, "mdtk34": 264, "mdtk45": 264, "mdtk50": 264, "valag1": 264, "similarli": 264, "tol": 264, "pkkm": 264, "desdadt": 264, "pop_clmm": 264, "067": 264, "1358": 264, "pop_km": 264, "iiv_clmm": 264, "pkclmm": 264, "002346535": 264, "advan3": 264, "trans4": 264, "pkvp1": 264, "v1": 264, "v1q": 264, "qp1v2": 264, "pop_qp1": 264, "050458": 264, "pop_vp1": 264, "remove_ref": 264, "059618": 264, "advan11": 264, "pkvp2": 264, "v1q2": 264, "vp1q3": 264, "qp2v3": 264, "00046930699999999997": 264, "0529809": 264, "004223763": 264, "pop_qp2": 264, "pop_vp2": 264, "onto": 264, "pkwgt_median": 264, "30000cl": 264, "clwgt": 264, "wgt_median": 264, "clwgtv": 264, "pop_clwgt": 264, "user_effect": 264, "std": 264, "30000wgt_std": 264, "704565cl": 264, "wgt_std": 264, "pketab1": 264, "etab1": 264, "etab2": 264, "lambda2": 264, "analog": 264, "pketat1": 264, "384": 264, "etat1": 264, "pketad1": 264, "etad1": 264, "iiv_s1": 264, "eta_new": 264, "iiv_": 264, "pkiov_1": 264, "0if": 264, "iov_1": 264, "etai1": 264, "00309626": 264, "omega_iov_1": 264, "iov_2": 264, "etai2": 264, "0031128": 264, "omega_iov_2": 264, "pkdummyeta": 264, "dummyomega": 264, "isn": 264, "runnabl": 264, "epsilon_a": 264, "approx": 264, "taylor": 264, "epsilon_": 264, "epsilon_p": 264, "sigma_prop": [264, 273], "sigma_add": [264, 273], "iiv_ruv1": 264, "ruv1": 264, "power1": 264, "someim": 264, "correspondng": 264, "11506954418958998": 264, "errorw": 264, "fy": 264, "wif": 264, "THEN": 264, "1000000000end": 264, "ifi": 264, "tbs_lambda": 264, "tbs_zeta": 264, "ivcl0": 264, "0031045": 264, "iiv_cl_iiv_v0": 264, "model_block": 264, "445550": 264, "bootstrap_dir1": 264, "597341": 264, "039061": 264, "365446": 264, "019725": 264, "secondary_paramet": 264, "chapter": 265, "delai": [265, 276], "grammar": [265, 269], "exhaustive_stepwis": 265, "addition": [265, 276], "obtain": 265, "basi": 265, "subsequ": [265, 266, 276], "modelsearch_candidate2": [265, 276], "594608": 265, "1272": 265, "124874": 265, "modelsearch_candidate3": [265, 276], "558028": 265, "088295": 265, "modelsearch_candidate4": [265, 276], "956313": 265, "1270": 265, "486580": 265, "287000": 265, "1260": 265, "817266": 265, "362287": 265, "1327": 265, "153182": 265, "1325": 265, "551467": 265, "1307": 265, "301235": 265, "1303": 265, "1289": 265, "2927": 265, "4334": 265, "7778": 265, "0058": 265, "109": 265, "1640": 265, "260324": 265, "7646": 265, "824443": 265, "5477": 265, "607839": 265, "1147": 265, "842498": 265, "470974": 265, "595276": 265, "526185": 265, "930160": 265, "495109": 265, "322680": 265, "470531": 265, "515250": 265, "312692": 265, "194221": 265, "202201": 265, "207885": 265, "232322": 265, "199750": 265, "205369": 265, "193439": 265, "pop_qp1_estim": 265, "pop_vp1_estim": 265, "pop_mdt_estim": 265, "155413": 265, "89": 265, "4192": 265, "6100": 265, "172730": 265, "3977": 265, "4562": 265, "158070": 265, "8042": 265, "8517": 265, "iiv_mdt_estim": 265, "156289": 265, "192020": 265, "092419": 265, "262429": 265, "720369": 265, "464263": 265, "127061": 265, "906722": 265, "053781": 265, "923055": 265, "795863": 265, "030658": 265, "661330": 265, "168680": 265, "833073": 265, "041529": 265, "205858": 265, "064930": 265, "609673": 265, "396329": 265, "928556": 265, "365": 265, "330": 265, "topic": 266, "scheme": 266, "theta_cl": 266, "mention": [266, 278], "ve": 266, "despit": 266, "write_etas_in_abbr": 266, "altair": [267, 269], "vega": 267, "lite": 267, "ggplot": 267, "editor": 267, "clamp": 267, "vconcat": 267, "spec": 267, "inten": 268, "export": 268, "strictli": 268, "necessesari": 268, "detect_model": 268, "summer": 269, "master": 269, "thesi": 269, "internship": 269, "email": 269, "team": 269, "tox": 269, "pytest": 269, "sphinx": 269, "wise": 269, "known": 269, "trial": 269, "involv": 269, "outcom": 269, "research": 269, "350h": 269, "difficulti": 269, "mentor": 269, "scipi": 269, "focu": 269, "proof": 269, "concept": 269, "algebra": 269, "simul": [269, 275], "scratch": 269, "lark": 269, "earlei": 269, "lalr": 269, "much": 269, "stricter": 269, "175h": 269, "almost": 269, "compat": 269, "benefici": 269, "diff": 269, "potenti": 269, "eas": 269, "jupyt": 269, "holoview": 269, "bokeh": 269, "monitor": 269, "ongo": 269, "veri": [269, 278], "happen": 269, "converg": 269, "sort": [269, 276], "dashboard": 269, "complement": 269, "realtim": 269, "restart": [269, 278], "middl": 269, "worflow": 269, "dvid": [270, 272, 273], "autocorrel": [270, 272], "dtb": [270, 272], "91": [270, 272], "idv_varying_ruv": 270, "idv_varying_ruv_cutoff0": 270, "idv_varying_ruv_cutoff1": 270, "idv_varying_ruv_cutoff2": 270, "idv_varying_ruv_cutoff3": 270, "idv_varying_ruv_cutoff4": 270, "idv_varying_ruv_cutoff5": 270, "idv_varying_ruv_cutoff6": 270, "idv_varying_ruv_cutoff7": 270, "idv_varying_ruv_cutoff8": 270, "idv_varying_combin": 270, "idv_varying_theta": 270, "66": 270, "cv": [270, 272], "772": [270, 272], "042": [270, 272], "sdeps_0": [270, 272], "t1": 270, "298": 270, "sdeps_t1": 270, "t2": 270, "886": 270, "t0": [270, 272], "271": [270, 272], "sdeps_t0": [270, 272], "390": [270, 272], "956": [270, 272], "717": 270, "014": 270, "914": 270, "983": 270, "884": 270, "017": 270, "955": 270, "958": 270, "969": 270, "933": 270, "022": 270, "819": 270, "007": 270, "755": 270, "982": 270, "642": 270, "387": 270, "th_0": 270, "257": 270, "sdep": 270, "279": 270, "th_t1": 270, "124": 270, "th_t2": 270, "delta_pow": [270, 272], "037": [270, 272], "delet": 271, "diagnost": 271, "impact": 272, "improement": 272, "592698": 272, "197887": 272, "007493": 272, "521171": 272, "et1apgr": 272, "487930": 272, "residual_error_model": 272, "910000": 272, "030000": 272, "diagnos": 272, "structural_bia": 272, "cpred": 272, "binmin": 272, "binmax": 272, "binid": 272, "159": 272, "258": 272, "67": [272, 274], "strutur": 272, "mdel": 272, "fullblock_paramet": 272, "183463": 272, "171306": 272, "554610": 272, "154408": 272, "167053": 272, "cox": 272, "boxcox_paramet": 272, "shape": 272, "new_sd": 272, "old_sd": 272, "922083": 272, "182037": 272, "332800": 272, "166021": 272, "tdist_paramet": 272, "79": 272, "9997": 272, "168477": 272, "9986": 272, "166469": 272, "residual_error": 272, "additional_paramet": 272, "coeff": 272, "48793": 272, "033334": 272, "48218": 272, "052342": 272, "59034": 272, "008371": 272, "00887": 272, "003273": 272, "run_ruvsearch": 273, "set_time_varying_error_model": 273, "ibrahim": 273, "quickli": [273, 276], "assess": 273, "inde": 273, "cwres_model": 273, "479721": 273, "385268": 273, "002792": 273, "time_varying1": 273, "117041": 273, "555154": 273, "time_varying3": 273, "336641": 273, "091207": 273, "065738": 273, "654562": 273, "046578": 273, "519115": 273, "612710": 273, "643741": 273, "027766": 273, "000367": 273, "967365": 273, "00123": 273, "0976": 273, "12252": 273, "14299": 273, "000337": 273, "05242": 273, "006105": 273, "10545": 273, "12659": 273, "15573": 273, "00054": 273, "04769": 273, "030825": 273, "mox3": 273, "best_ruvsearch_1": 273, "2460": 273, "704469": 273, "957378": 273, "2473": 273, "661847": 273, "269102": 273, "2495": 273, "973571": 273, "2444": 273, "2455": 273, "2475": 273, "2423": 273, "757516": 273, "2435": 273, "047712": 273, "2453": 273, "068976": 273, "71": 273, "pop_vc_estim": 273, "pop_mat_estim": 273, "707": 273, "5434": 273, "531596": 273, "794": 273, "3091": 273, "528620": 273, "3094": 273, "532547": 273, "iiv_vc_estim": 273, "iiv_vc_iiv_cl_estim": 273, "077743": 273, "038888": 273, "076793": 273, "039924": 273, "071628": 273, "038470": 273, "iiv_cl_estim": 273, "iiv_mat_estim": 273, "072309": 273, "704770": 273, "093311": 273, "074889": 273, "707665": 273, "081095": 273, "075048": 273, "705429": 273, "044311": 273, "iiv_ruv1_estim": 273, "time_varying_estim": 273, "039675": 273, "040734": 273, "42509": 273, "215727": 273, "655144": 273, "708324": 273, "762729": 273, "236530": 273, "229762": 273, "715966": 273, "423148": 273, "419741": 273, "774540": 273, "164274": 273, "450202": 273, "195425": 273, "960585": 273, "090461": 273, "848498": 273, "052021": 273, "239462": 273, "065148": 273, "571348": 273, "244582": 273, "161981": 273, "509910": 273, "373696": 273, "084489": 273, "647643": 273, "344772": 273, "083776": 273, "259395": 273, "101415": 273, "024651": 273, "443542": 273, "124023": 273, "183089": 273, "977222": 273, "219": 273, "moustafa": 273, "m": 273, "maria": 273, "kjellsson": 273, "aap": 273, "1208": 273, "s12248": 273, "018": 273, "0240": 273, "pha": 274, "219210": 274, "90878": 274, "219167": 274, "36222": 274, "bmi": 274, "219171": 274, "47564": 274, "cycll": 274, "219203": 274, "94536": 274, "diag": 274, "219206": 274, "01527": 274, "disdur": 274, "219032": 274, "86056": 274, "215321": 274, "70954": 274, "215306": 274, "67698": 274, "phia": 274, "men": 274, "215407": 274, "40295": 274, "phib": 274, "georeg": 274, "215373": 274, "77800": 274, "216968": 274, "25989": 274, "slp": 274, "215359": 274, "18150": 274, "54656": 274, "140000e": 274, "43314": 274, "390000e": 274, "96342": 274, "319000e": 274, "89351": 274, "695800e": 274, "178": 274, "04822": 274, "290000e": 274, "03256": 274, "060000e": 274, "72597": 274, "10102": 274, "580000e": 274, "1661": 274, "58291": 274, "50452": 274, "phaag": 274, "phabmi": 274, "phacycl": 274, "phadiag": 274, "phadisdur": 274, "backward_scm_dir1": 274, "phawt": 274, "phiamen": 274, "phibgeoreg": 274, "phibmen": 274, "slpgeoreg": 274, "304": 274, "beween": 274, "target": 274, "slightli": 274, "215961": 274, "46277": 274, "3249": 274, "44601": 274, "215748": 274, "07194": 274, "213": 274, "39083": 274, "215570": 274, "57352": 274, "49842": 274, "215486": 274, "23440": 274, "33912": 274, "87007": 274, "36433": 274, "215357": 274, "74693": 274, "61": 274, "12314": 274, "215337": 274, "95044": 274, "79649": 274, "24090": 274, "215332": 274, "91461": 274, "23763": 274, "67861": 274, "00163": 274, "215450": 274, "74783": 274, "07085": 274, "215491": 274, "11568": 274, "43870": 274, "500000e": 274, "700000e": 274, "170000e": 274, "260000e": 274, "360000e": 274, "600000e": 274, "020000e": 274, "620000e": 274, "430000e": 274, "200000e": 274, "did": 274, "lbest": 274, "cpl": 274, "165042": 275, "853273": 275, "488686": 275, "575351": 275, "230120": 275, "083424": 275, "533799": 275, "824880": 275, "300884": 275, "027733": 275, "180960": 275, "322738": 275, "916884": 275, "928279": 275, "654589": 275, "364078": 275, "546277": 275, "638247": 275, "795252": 275, "370783": 275, "351839": 275, "058260": 275, "136159": 275, "078494": 275, "957716": 275, "221459": 275, "775938": 275, "151210": 275, "823449": 275, "664634": 275, "135159": 275, "793703": 275, "551158": 275, "405150": 275, "527835": 275, "562788": 275, "330868": 275, "796073": 275, "406903": 275, "615899": 275, "328937": 275, "438225": 275, "486179": 275, "892761": 275, "818812": 275, "929665": 275, "924846": 275, "121901": 275, "849137": 275, "446579": 275, "247238": 275, "024193": 275, "512627": 275, "423537": 275, "615092": 275, "484284": 275, "548598": 275, "842566": 275, "705806": 275, "018308": 275, "114753": 275, "424024": 275, "638560": 275, "056381": 275, "664954": 275, "178961": 275, "413680": 275, "622712": 275, "449888": 275, "282087": 275, "238692": 275, "704503": 275, "361556": 275, "138213": 275, "678095": 275, "713778": 275, "026935": 275, "422555": 275, "929655": 275, "166879": 275, "335429": 275, "009725": 275, "266944": 275, "563473": 275, "567697": 275, "461262": 275, "459161": 275, "212573": 275, "959843": 275, "388393": 275, "501489": 275, "260472": 275, "003027": 275, "811596": 275, "277388": 275, "219194": 275, "398492": 275, "380865": 275, "786560": 275, "366018": 275, "630512": 275, "191401": 275, "546036": 275, "612812": 275, "961895": 275, "816485": 275, "553003": 275, "682987": 275, "584818": 275, "231970": 275, "776532": 275, "846457": 275, "802797": 275, "892200": 275, "988276": 275, "015416": 275, "207434": 275, "662582": 275, "018880": 275, "725509": 275, "838099": 275, "434087": 275, "488859": 275, "250063": 275, "212538": 275, "297823": 275, "599116": 275, "743671": 275, "944073": 275, "140249": 275, "409142": 275, "831345": 275, "880881": 275, "485191": 275, "659430": 275, "755737": 275, "901408": 275, "630846": 275, "733704": 275, "775355": 275, "851982": 275, "693935": 275, "483346": 275, "707700": 275, "794788": 275, "401748": 275, "905528": 275, "793645": 275, "538437": 275, "382384": 275, "926835": 275, "186642": 275, "928532": 275, "196475": 275, "498709": 275, "985533": 275, "773375": 275, "366585": 275, "848184": 275, "497867": 275, "551558": 275, "762211": 275, "551208": 275, "572217": 275, "565811": 275, "042324": 275, "056323": 275, "552114": 275, "298009": 275, "630121": 275, "406685": 275, "370226": 275, "040276": 275, "361844": 275, "035731": 275, "496993": 275, "597045": 275, "515088": 275, "169391": 275, "957232": 275, "454421": 275, "400720": 275, "751915": 275, "106708": 275, "361498": 275, "889492": 275, "974785": 275, "952586": 275, "904024": 275, "024682": 275, "835458": 275, "886356": 275, "073683": 275, "840067": 275, "575363": 275, "819836": 275, "712658": 275, "879430": 275, "884553": 275, "253049": 275, "285544": 275, "044583": 275, "178975": 275, "893425": 275, "497236": 275, "277992": 275, "360173": 275, "264764": 275, "046265": 275, "765897": 275, "688954": 275, "414926": 275, "572606": 275, "684344": 275, "586789": 275, "841335": 275, "907778": 275, "244786": 275, "493584": 275, "249772": 275, "253768": 275, "362886": 275, "416676": 275, "933397": 275, "659481": 275, "731451": 275, "988252": 275, "069317": 275, "178177": 275, "936980": 275, "746436": 275, "517867": 275, "716822": 275, "477206": 275, "605768": 275, "763155": 275, "346212": 275, "125029": 275, "408266": 275, "980420": 275, "686115": 275, "462547": 275, "583418": 275, "337790": 275, "811144": 275, "043157": 275, "036534": 275, "363551": 275, "195385": 275, "031564": 275, "225458": 275, "378125": 275, "892175": 275, "016286": 275, "525306": 275, "699366": 275, "269137": 275, "242420": 275, "846592": 275, "404922": 275, "509957": 275, "448461": 275, "512603": 275, "243399": 275, "815026": 275, "481351": 275, "541949": 275, "175264": 275, "933824": 275, "926077": 275, "371639": 275, "194473": 275, "087071": 275, "944302": 275, "344235": 275, "663661": 275, "550825": 275, "611250": 275, "735586": 275, "308617": 275, "500411": 275, "875052": 275, "860290": 275, "556035": 275, "631308": 275, "881148": 275, "432371": 275, "153441": 275, "874004": 275, "758791": 275, "366355": 275, "323449": 275, "054769": 275, "133006": 275, "215148": 275, "921633": 275, "860736": 275, "993262": 275, "946876": 275, "568383": 275, "905658": 275, "604188": 275, "376218": 275, "313336": 275, "467337": 275, "898802": 275, "542369": 275, "472019": 275, "773450": 275, "873918": 275, "318875": 275, "600450": 275, "899285": 275, "526828": 275, "104682": 275, "230477": 275, "293600": 275, "354616": 275, "479966": 275, "376893": 275, "884839": 275, "432346": 275, "114640": 275, "367480": 275, "694969": 275, "408347": 275, "054791": 275, "387386": 275, "867625": 275, "864669": 275, "853355": 275, "078385": 275, "280139": 275, "695800": 275, "882876": 275, "631655": 275, "541680": 275, "037941": 275, "758919": 275, "316351": 275, "708577": 275, "814952": 275, "937635": 275, "989005": 275, "715708": 275, "462408": 275, "621329": 275, "383043": 275, "179394": 275, "110075": 275, "676905": 275, "218010": 275, "905147": 275, "956306": 275, "051986": 275, "534496": 275, "445912": 275, "767349": 275, "900845": 275, "876780": 275, "822404": 275, "749003": 275, "924166": 275, "565671": 275, "196823": 275, "115117": 275, "341361": 275, "851698": 275, "806515": 275, "086788": 275, "429352": 275, "296737": 275, "516464": 275, "191840": 275, "574667": 275, "793265": 275, "956378": 275, "874349": 275, "912201": 275, "668763": 275, "676572": 275, "069326": 275, "455902": 275, "954047": 275, "077897": 275, "425364": 275, "731336": 275, "819544": 275, "030662": 275, "504667": 275, "843029": 275, "662370": 275, "455400": 275, "187278": 275, "580405": 275, "502366": 275, "802175": 275, "275622": 275, "305631": 275, "639042": 275, "155311": 275, "544260": 275, "977219": 275, "363698": 275, "022410": 275, "641421": 275, "434510": 275, "424237": 275, "853009": 275, "073635": 275, "098997": 275, "374133": 275, "169888": 275, "963905": 275, "415675": 275, "564632": 275, "351619": 275, "396594": 275, "695028": 275, "255630": 275, "358567": 275, "516160": 275, "408061": 275, "496109": 275, "916145": 275, "297200": 275, "222423": 275, "744242": 275, "606428": 275, "206488": 275, "269584": 275, "693535": 275, "911020": 275, "737404": 275, "764024": 275, "453899": 275, "132983": 275, "133073": 275, "783555": 275, "105503": 275, "027851": 275, "972480": 275, "850645": 275, "402983": 275, "723710": 275, "052073": 275, "032512": 275, "408322": 275, "435102": 275, "788249": 275, "159667": 275, "589215": 275, "777419": 275, "625663": 275, "923185": 275, "416254": 275, "907322": 275, "824234": 275, "418469": 275, "606033": 275, "903583": 275, "675347": 275, "584165": 275, "501681": 275, "271405": 275, "824837": 275, "372005": 275, "876965": 275, "348849": 275, "357159": 275, "885439": 275, "iofv_summari": 275, "orgin": 275, "ob": 275, "sampled_median": 275, "sampled_stdev": 275, "residual_q1": 275, "743042": 275, "269351": 275, "092721": 275, "132107": 275, "049484": 275, "062882": 275, "923433": 275, "032842": 275, "903729": 275, "041599": 275, "666016": 275, "588530": 275, "233558": 275, "813525": 275, "338707": 275, "262659": 275, "651808": 275, "842347": 275, "092618": 275, "607326": 275, "763450": 275, "426016": 275, "953150": 275, "344659": 275, "002809": 275, "839617": 275, "390660": 275, "093249": 275, "843159": 275, "761625": 275, "066485": 275, "562593": 275, "515891": 275, "678375": 275, "587563": 275, "846506": 275, "321253": 275, "931536": 275, "511037": 275, "243040": 275, "313767": 275, "998817": 275, "190685": 275, "266501": 275, "243372": 275, "216676": 275, "334541": 275, "088609": 275, "030344": 275, "099508": 275, "626027": 275, "236755": 275, "682470": 275, "271061": 275, "322169": 275, "889854": 275, "855528": 275, "232988": 275, "221102": 275, "260479": 275, "297037": 275, "100632": 275, "978394": 275, "671231": 275, "588077": 275, "600891": 275, "572710": 275, "088513": 275, "331370": 275, "651006": 275, "383926": 275, "621596": 275, "936751": 275, "638334": 275, "863723": 275, "802597": 275, "124775": 275, "712276": 275, "541296": 275, "902641": 275, "054733": 275, "087013": 275, "019852": 275, "185274": 275, "299915": 275, "071925": 275, "504540": 275, "056317": 275, "177399": 275, "404555": 275, "347654": 275, "490854": 275, "248420": 275, "402107": 275, "172721": 275, "309188": 275, "612652": 275, "605320": 275, "387170": 275, "916585": 275, "723804": 275, "814910": 275, "320602": 275, "089383": 275, "193802": 275, "746322": 275, "453306": 275, "888849": 275, "347721": 275, "796098": 275, "427890": 275, "964192": 275, "509526": 275, "553605": 275, "595254": 275, "940021": 275, "187065": 275, "218493": 275, "446771": 275, "021723": 275, "143293": 275, "077425": 275, "553705": 275, "963659": 275, "230769": 275, "941064": 275, "345041": 275, "355392": 275, "177536": 275, "564686": 275, "074840": 275, "501228": 275, "910681": 275, "928524": 275, "255799": 275, "746242": 275, "724151": 275, "284455": 275, "111385": 275, "103779": 275, "602531": 275, "057843": 275, "201646": 275, "908651": 275, "880337": 275, "368175": 275, "066179": 275, "743926": 275, "503126": 275, "881606": 275, "250884": 275, "047349": 275, "844822": 275, "189370": 275, "511282": 275, "270109": 275, "430602": 275, "221208": 275, "868376": 275, "958375": 275, "098127": 275, "780755": 275, "635224": 275, "985409": 275, "809369": 275, "378962": 275, "211565": 275, "057646": 275, "205194": 275, "036416": 275, "193803": 275, "429374": 275, "204566": 275, "181809": 275, "278418": 275, "598975": 275, "337763": 275, "785971": 275, "413662": 275, "606782": 275, "709391": 275, "881992": 275, "864932": 275, "303395": 275, "084555": 275, "219260": 275, "154550": 275, "785024": 275, "694892": 275, "512588": 275, "121911": 275, "906081": 275, "693733": 275, "669899": 275, "053933": 275, "229621": 275, "686649": 275, "489669": 275, "193242": 275, "455548": 275, "756085": 275, "871678": 275, "683725": 275, "788305": 275, "441965": 275, "980475": 275, "053564": 275, "483885": 275, "840129": 275, "161657": 275, "813878": 275, "634209": 275, "574414": 275, "214315": 275, "235064": 275, "837522": 275, "929402": 275, "427740": 275, "521014": 275, "392308": 275, "944092": 275, "407457": 275, "879179": 275, "753044": 275, "057118": 275, "900168": 275, "579183": 275, "047295": 275, "069060": 275, "430617": 275, "023015": 275, "749906": 275, "157977": 275, "117461": 275, "010968": 275, "974584": 275, "052094": 275, "650140": 275, "206923": 275, "302385": 275, "557865": 275, "806373": 275, "733736": 275, "309462": 275, "292477": 275, "034161": 275, "253204": 275, "515730": 275, "067793": 275, "328308": 275, "941486": 275, "862193": 275, "275903": 275, "359860": 275, "865778": 275, "461685": 275, "346120": 275, "040796": 275, "340902": 275, "669504": 275, "165811": 275, "006993": 275, "056961": 275, "515114": 275, "073228": 275, "455873": 275, "041631": 275, "121517": 275, "970391": 275, "151516": 275, "604970": 275, "314527": 275, "639192": 275, "701809": 275, "559444": 275, "756955": 275, "240398": 275, "residual_q3": 275, "residual_outli": 275, "101924": 275, "045535": 275, "234064": 275, "025423": 275, "109899": 275, "625316": 275, "268882": 275, "574353": 275, "419169": 275, "807045": 275, "159688": 275, "667537": 275, "022651": 275, "630322": 275, "291458": 275, "309807": 275, "105832": 275, "301714": 275, "720484": 275, "289277": 275, "953368": 275, "653632": 275, "126620": 275, "673619": 275, "333709": 275, "076368": 275, "549693": 275, "158992": 275, "824096": 275, "026303": 275, "658756": 275, "145689": 275, "986494": 275, "095503": 275, "364901": 275, "552261": 275, "588452": 275, "301528": 275, "219416": 275, "359428": 275, "174344": 275, "432004": 275, "734733": 275, "135789": 275, "237813": 275, "693671": 275, "260535": 275, "184885": 275, "364894": 275, "772187": 275, "236023": 275, "845436": 275, "707608": 275, "626422": 275, "497515": 275, "963228": 275, "904840": 275, "701781": 275, "338779": 275, "individual_predictions_plot": 275, "trim": 276, "modelsearch_dir1": 276, "hash": 276, "mytab_mox1": 276, "subfold": 276, "temporari": 276, "finish": 276, "recreat": 276, "frame": [276, 278], "programmat": 276, "pharmpy_vers": 276, "tool_nam": 276, "start_tim": 276, "22t14": 276, "312240": 276, "end_tim": 276, "592109": 276, "common_opt": 276, "tmp": 276, "tool_result": 276, "locat": 276, "concis": 276, "newlin": 276, "semi": 276, "colon": 276, "endpoint": 276, "wildcard": 276, "nodepot": 276, "autom": 276, "gotcha": 277, "mirror": 278, "cran": 278, "reticul": 278, "remot": 278, "install_github": 278, "ref": 278, "install_pharmpi": 278, "session": 278, "successfulli": 278, "packagevers": 278, "print_pharmpy_vers": 278, "miniconda": 278, "py_discover_config": 278, "conda_cr": 278, "python_vers": 278, "virtual": 278, "someth": 278, "libpython": 278, "lib": 278, "libpython3": 278, "pipe": 278, "magrittr": 278, "model_a": 278, "model_b": 278, "reset_index": 278, "5l": 278, "input_model": 278}, "objects": {"pharmpy": [[237, 0, 0, "-", "model"], [238, 0, 0, "-", "modeling"], [239, 0, 0, "-", "tools"], [240, 0, 0, "-", "workflows"], [245, 6, 1, "cmdoption-pharmpy-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-version", "--version"], [245, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "ExplicitODESystem"], [17, 1, 1, "", "Infusion"], [18, 1, 1, "", "JointNormalDistribution"], [19, 1, 1, "", "Model"], [20, 4, 1, "", "ModelError"], [21, 4, 1, "", "ModelSyntaxError"], [22, 4, 1, "", "ModelfitResultsError"], [23, 1, 1, "", "NormalDistribution"], [24, 1, 1, "", "ODESystem"], [25, 1, 1, "", "Parameter"], [26, 1, 1, "", "Parameters"], [27, 1, 1, "", "RandomVariables"], [28, 1, 1, "", "Results"], [29, 1, 1, "", "Statement"], [30, 1, 1, "", "Statements"], [31, 1, 1, "", "VariabilityHierarchy"], [32, 1, 1, "", "VariabilityLevel"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "subs"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 3, 1, "", "datatype"], [6, 2, 1, "", "derive"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 3, 1, "", "scale"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "subs"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 3, 1, "", "dosing_compartment"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "output_compartment"], [8, 3, 1, "", "peripheral_compartments"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 2, 1, "", "to_compartmental_system"], [8, 2, 1, "", "to_explicit_system"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "derive"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "derive"], [13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "derive"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "to_dataframe"]], "pharmpy.model.ExplicitODESystem": [[16, 3, 1, "", "amounts"], [16, 3, 1, "", "compartment_names"], [16, 3, 1, "", "free_symbols"], [16, 3, 1, "", "ics"], [16, 3, 1, "", "odes"], [16, 3, 1, "", "rhs_symbols"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_compartmental_system"], [16, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Infusion": [[17, 3, 1, "", "amount"], [17, 2, 1, "", "create"], [17, 3, 1, "", "duration"], [17, 3, 1, "", "free_symbols"], [17, 3, 1, "", "rate"], [17, 2, 1, "", "subs"]], "pharmpy.model.JointNormalDistribution": [[18, 2, 1, "", "create"], [18, 2, 1, "", "derive"], [18, 2, 1, "", "evalf"], [18, 3, 1, "", "free_symbols"], [18, 2, 1, "", "get_covariance"], [18, 2, 1, "", "get_variance"], [18, 2, 1, "", "latex_string"], [18, 3, 1, "", "level"], [18, 3, 1, "", "mean"], [18, 3, 1, "", "names"], [18, 2, 1, "", "subs"], [18, 3, 1, "", "variance"]], "pharmpy.model.Model": [[19, 2, 1, "", "copy"], [19, 2, 1, "", "create_model"], [19, 3, 1, "", "datainfo"], [19, 3, 1, "", "dataset"], [19, 3, 1, "", "dependent_variable"], [19, 3, 1, "", "description"], [19, 3, 1, "", "estimation_steps"], [19, 3, 1, "", "filename_extension"], [19, 2, 1, "", "has_same_dataset_as"], [19, 3, 1, "", "initial_individual_estimates"], [19, 3, 1, "", "model_code"], [19, 3, 1, "", "modelfit_results"], [19, 3, 1, "", "name"], [19, 3, 1, "", "observation_transformation"], [19, 3, 1, "", "parameters"], [19, 3, 1, "", "parent_model"], [19, 3, 1, "", "random_variables"], [19, 3, 1, "", "statements"], [19, 2, 1, "", "update_datainfo"], [19, 3, 1, "", "value_type"]], "pharmpy.model.NormalDistribution": [[23, 2, 1, "", "create"], [23, 2, 1, "", "derive"], [23, 2, 1, "", "evalf"], [23, 3, 1, "", "free_symbols"], [23, 2, 1, "", "get_covariance"], [23, 2, 1, "", "get_variance"], [23, 2, 1, "", "latex_string"], [23, 3, 1, "", "level"], [23, 3, 1, "", "mean"], [23, 3, 1, "", "names"], [23, 2, 1, "", "subs"], [23, 3, 1, "", "variance"]], "pharmpy.model.ODESystem": [[24, 2, 1, "", "to_compartmental_system"], [24, 2, 1, "", "to_explicit_system"]], "pharmpy.model.Parameter": [[25, 2, 1, "", "create"], [25, 2, 1, "", "derive"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "init"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "name"], [25, 3, 1, "", "symbol"], [25, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[26, 3, 1, "", "fix"], [26, 3, 1, "", "fixed"], [26, 3, 1, "", "inits"], [26, 3, 1, "", "lower"], [26, 3, 1, "", "names"], [26, 3, 1, "", "nonfixed"], [26, 2, 1, "", "set_fix"], [26, 2, 1, "", "set_initial_estimates"], [26, 3, 1, "", "symbols"], [26, 2, 1, "", "to_dataframe"], [26, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[27, 3, 1, "", "covariance_matrix"], [27, 2, 1, "", "create"], [27, 2, 1, "", "derive"], [27, 3, 1, "", "epsilon_levels"], [27, 3, 1, "", "epsilons"], [27, 3, 1, "", "eta_levels"], [27, 3, 1, "", "etas"], [27, 3, 1, "", "free_symbols"], [27, 2, 1, "", "get_covariance"], [27, 2, 1, "", "get_rvs_with_same_dist"], [27, 3, 1, "", "iiv"], [27, 3, 1, "", "iov"], [27, 2, 1, "", "join"], [27, 3, 1, "", "names"], [27, 2, 1, "", "nearest_valid_parameters"], [27, 3, 1, "", "nrvs"], [27, 3, 1, "", "parameter_names"], [27, 2, 1, "", "parameters_sdcorr"], [27, 2, 1, "", "sample"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "unjoin"], [27, 2, 1, "", "validate_parameters"], [27, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[28, 2, 1, "", "from_dict"], [28, 2, 1, "", "get_and_reset_index"], [28, 2, 1, "", "to_csv"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[29, 3, 1, "", "free_symbols"], [29, 3, 1, "", "rhs_symbols"], [29, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[30, 3, 1, "", "after_odes"], [30, 3, 1, "", "before_odes"], [30, 2, 1, "", "dependencies"], [30, 2, 1, "", "direct_dependencies"], [30, 3, 1, "", "error"], [30, 2, 1, "", "find_assignment"], [30, 2, 1, "", "find_assignment_index"], [30, 3, 1, "", "free_symbols"], [30, 2, 1, "", "full_expression"], [30, 3, 1, "", "ode_system"], [30, 2, 1, "", "reassign"], [30, 2, 1, "", "remove_symbol_definitions"], [30, 2, 1, "", "subs"], [30, 2, 1, "", "to_compartmental_system"], [30, 2, 1, "", "to_explicit_system"]], "pharmpy.model.VariabilityHierarchy": [[31, 3, 1, "", "levels"], [31, 3, 1, "", "names"]], "pharmpy.model.VariabilityLevel": [[32, 3, 1, "", "group"], [32, 3, 1, "", "name"], [32, 3, 1, "", "reference"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_peripheral_compartment"], [42, 5, 1, "", "add_pk_iiv"], [43, 5, 1, "", "add_population_parameter"], [44, 5, 1, "", "add_time_after_dose"], [45, 5, 1, "", "append_estimation_step_options"], [46, 5, 1, "", "bump_model_number"], [47, 5, 1, "", "calculate_aic"], [48, 5, 1, "", "calculate_bic"], [49, 5, 1, "", "calculate_corr_from_cov"], [50, 5, 1, "", "calculate_corr_from_inf"], [51, 5, 1, "", "calculate_cov_from_corrse"], [52, 5, 1, "", "calculate_cov_from_inf"], [53, 5, 1, "", "calculate_epsilon_gradient_expression"], [54, 5, 1, "", "calculate_eta_gradient_expression"], [55, 5, 1, "", "calculate_eta_shrinkage"], [56, 5, 1, "", "calculate_individual_parameter_statistics"], [57, 5, 1, "", "calculate_individual_shrinkage"], [58, 5, 1, "", "calculate_inf_from_corrse"], [59, 5, 1, "", "calculate_inf_from_cov"], [60, 5, 1, "", "calculate_parameters_from_ucp"], [61, 5, 1, "", "calculate_pk_parameters_statistics"], [62, 5, 1, "", "calculate_se_from_cov"], [63, 5, 1, "", "calculate_se_from_inf"], [64, 5, 1, "", "calculate_ucp_scale"], [65, 5, 1, "", "check_dataset"], [66, 5, 1, "", "check_high_correlations"], [67, 5, 1, "", "check_parameters_near_bounds"], [68, 5, 1, "", "cleanup_model"], [69, 5, 1, "", "convert_model"], [70, 5, 1, "", "copy_model"], [71, 5, 1, "", "create_joint_distribution"], [72, 5, 1, "", "create_report"], [73, 5, 1, "", "create_rng"], [74, 5, 1, "", "create_symbol"], [75, 5, 1, "", "drop_columns"], [76, 5, 1, "", "drop_dropped_columns"], [77, 5, 1, "", "evaluate_epsilon_gradient"], [78, 5, 1, "", "evaluate_eta_gradient"], [79, 5, 1, "", "evaluate_expression"], [80, 5, 1, "", "evaluate_individual_prediction"], [81, 5, 1, "", "evaluate_population_prediction"], [82, 5, 1, "", "evaluate_weighted_residuals"], [83, 5, 1, "", "expand_additional_doses"], [84, 5, 1, "", "find_clearance_parameters"], [85, 5, 1, "", "find_volume_parameters"], [86, 5, 1, "", "fix_or_unfix_parameters"], [87, 5, 1, "", "fix_parameters"], [88, 5, 1, "", "fix_parameters_to"], [89, 5, 1, "", "generate_model_code"], [90, 5, 1, "", "get_baselines"], [91, 5, 1, "", "get_bioavailability"], [92, 5, 1, "", "get_cmt"], [93, 5, 1, "", "get_concentration_parameters_from_data"], [94, 5, 1, "", "get_config_path"], [95, 5, 1, "", "get_covariate_baselines"], [96, 5, 1, "", "get_doseid"], [97, 5, 1, "", "get_doses"], [98, 5, 1, "", "get_evid"], [99, 5, 1, "", "get_ids"], [100, 5, 1, "", "get_individual_parameters"], [101, 5, 1, "", "get_individual_prediction_expression"], [102, 5, 1, "", "get_lag_times"], [103, 5, 1, "", "get_mdv"], [104, 5, 1, "", "get_model_covariates"], [105, 5, 1, "", "get_number_of_individuals"], [106, 5, 1, "", "get_number_of_observations"], [107, 5, 1, "", "get_number_of_observations_per_individual"], [108, 5, 1, "", "get_observation_expression"], [109, 5, 1, "", "get_observations"], [110, 5, 1, "", "get_omegas"], [111, 5, 1, "", "get_pk_parameters"], [112, 5, 1, "", "get_population_prediction_expression"], [113, 5, 1, "", "get_rv_parameters"], [114, 5, 1, "", "get_sigmas"], [115, 5, 1, "", "get_thetas"], [116, 5, 1, "", "get_unit_of"], [117, 5, 1, "", "greekify_model"], [118, 5, 1, "", "has_additive_error_model"], [119, 5, 1, "", "has_combined_error_model"], [120, 5, 1, "", "has_covariate_effect"], [121, 5, 1, "", "has_first_order_elimination"], [122, 5, 1, "", "has_michaelis_menten_elimination"], [123, 5, 1, "", "has_mixed_mm_fo_elimination"], [124, 5, 1, "", "has_proportional_error_model"], [125, 5, 1, "", "has_random_effect"], [126, 5, 1, "", "has_zero_order_absorption"], [127, 5, 1, "", "has_zero_order_elimination"], [128, 5, 1, "", "list_time_varying_covariates"], [129, 5, 1, "", "load_example_model"], [130, 5, 1, "", "make_declarative"], [131, 5, 1, "", "mu_reference_model"], [132, 5, 1, "", "omit_data"], [133, 5, 1, "", "plot_individual_predictions"], [134, 5, 1, "", "plot_iofv_vs_iofv"], [135, 5, 1, "", "print_model_code"], [136, 5, 1, "", "print_model_symbols"], [137, 5, 1, "", "read_dataset_from_datainfo"], [138, 5, 1, "", "read_model"], [139, 5, 1, "", "read_model_from_database"], [140, 5, 1, "", "read_model_from_string"], [141, 5, 1, "", "remove_covariance_step"], [142, 5, 1, "", "remove_covariate_effect"], [143, 5, 1, "", "remove_error_model"], [144, 5, 1, "", "remove_estimation_step"], [145, 5, 1, "", "remove_iiv"], [146, 5, 1, "", "remove_iov"], [147, 5, 1, "", "remove_lag_time"], [148, 5, 1, "", "remove_loq_data"], [149, 5, 1, "", "remove_peripheral_compartment"], [150, 5, 1, "", "remove_unused_parameters_and_rvs"], [151, 5, 1, "", "rename_symbols"], [152, 5, 1, "", "resample_data"], [153, 5, 1, "", "sample_individual_estimates"], [154, 5, 1, "", "sample_parameters_from_covariance_matrix"], [155, 5, 1, "", "sample_parameters_uniformly"], [156, 5, 1, "", "set_additive_error_model"], [157, 5, 1, "", "set_bolus_absorption"], [158, 5, 1, "", "set_combined_error_model"], [159, 5, 1, "", "set_covariates"], [160, 5, 1, "", "set_dtbs_error_model"], [161, 5, 1, "", "set_estimation_step"], [162, 5, 1, "", "set_evaluation_step"], [163, 5, 1, "", "set_first_order_absorption"], [164, 5, 1, "", "set_first_order_elimination"], [165, 5, 1, "", "set_iiv_on_ruv"], [166, 5, 1, "", "set_initial_estimates"], [167, 5, 1, "", "set_lower_bounds"], [168, 5, 1, "", "set_michaelis_menten_elimination"], [169, 5, 1, "", "set_mixed_mm_fo_elimination"], [170, 5, 1, "", "set_name"], [171, 5, 1, "", "set_ode_solver"], [172, 5, 1, "", "set_peripheral_compartments"], [173, 5, 1, "", "set_power_on_ruv"], [174, 5, 1, "", "set_proportional_error_model"], [175, 5, 1, "", "set_seq_zo_fo_absorption"], [176, 5, 1, "", "set_time_varying_error_model"], [177, 5, 1, "", "set_transit_compartments"], [178, 5, 1, "", "set_upper_bounds"], [179, 5, 1, "", "set_weighted_error_model"], [180, 5, 1, "", "set_zero_order_absorption"], [181, 5, 1, "", "set_zero_order_elimination"], [182, 5, 1, "", "simplify_expression"], [183, 5, 1, "", "solve_ode_system"], [184, 5, 1, "", "split_joint_distribution"], [185, 5, 1, "", "transform_etas_boxcox"], [186, 5, 1, "", "transform_etas_john_draper"], [187, 5, 1, "", "transform_etas_tdist"], [188, 5, 1, "", "translate_nmtran_time"], [189, 5, 1, "", "unconstrain_parameters"], [190, 5, 1, "", "undrop_columns"], [191, 5, 1, "", "unfix_parameters"], [192, 5, 1, "", "unfix_parameters_to"], [193, 5, 1, "", "update_initial_individual_estimates"], [194, 5, 1, "", "update_inits"], [195, 5, 1, "", "use_thetas_for_error_stdev"], [196, 5, 1, "", "write_csv"], [197, 5, 1, "", "write_model"]], "pharmpy.tools": [[198, 5, 1, "", "create_results"], [199, 5, 1, "", "fit"], [200, 5, 1, "", "predict_influential_individuals"], [201, 5, 1, "", "predict_influential_outliers"], [202, 5, 1, "", "predict_outliers"], [203, 5, 1, "", "print_fit_summary"], [204, 5, 1, "", "rank_models"], [205, 5, 1, "", "read_results"], [206, 5, 1, "", "retrieve_final_model"], [207, 5, 1, "", "retrieve_models"], [208, 5, 1, "", "run_allometry"], [209, 5, 1, "", "run_amd"], [210, 5, 1, "", "run_covsearch"], [211, 5, 1, "", "run_iivsearch"], [212, 5, 1, "", "run_iovsearch"], [213, 5, 1, "", "run_modelfit"], [214, 5, 1, "", "run_modelsearch"], [215, 5, 1, "", "run_ruvsearch"], [216, 5, 1, "", "run_tool"], [217, 5, 1, "", "summarize_errors"], [218, 5, 1, "", "summarize_individuals"], [219, 5, 1, "", "summarize_individuals_count_table"], [220, 5, 1, "", "summarize_modelfit_results"], [221, 5, 1, "", "write_results"]], "pharmpy.workflows": [[222, 1, 1, "", "LocalDirectoryDatabase"], [223, 1, 1, "", "LocalDirectoryToolDatabase"], [224, 1, 1, "", "LocalModelDirectoryDatabase"], [225, 1, 1, "", "Log"], [226, 1, 1, "", "ModelDatabase"], [227, 1, 1, "", "NullModelDatabase"], [228, 1, 1, "", "NullToolDatabase"], [229, 1, 1, "", "Task"], [230, 1, 1, "", "ToolDatabase"], [231, 1, 1, "", "Workflow"], [232, 5, 1, "", "call_workflow"], [233, 3, 1, "", "default_model_database"], [234, 3, 1, "", "default_tool_database"], [235, 5, 1, "", "execute_workflow"], [236, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[222, 2, 1, "", "retrieve_file"], [222, 2, 1, "", "retrieve_local_files"], [222, 2, 1, "", "retrieve_model"], [222, 2, 1, "", "retrieve_modelfit_results"], [222, 2, 1, "", "store_local_file"], [222, 2, 1, "", "store_metadata"], [222, 2, 1, "", "store_model"], [222, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[223, 2, 1, "", "from_dict"], [223, 2, 1, "", "read_metadata"], [223, 2, 1, "", "store_local_file"], [223, 2, 1, "", "store_metadata"], [223, 2, 1, "", "store_results"], [223, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[224, 2, 1, "", "list_models"], [224, 2, 1, "", "snapshot"], [224, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[225, 2, 1, "", "from_dict"], [225, 3, 1, "", "log"], [225, 2, 1, "", "log_error"], [225, 2, 1, "", "log_warning"], [225, 2, 1, "", "to_dataframe"], [225, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[226, 2, 1, "", "retrieve_file"], [226, 2, 1, "", "retrieve_local_files"], [226, 2, 1, "", "retrieve_model"], [226, 2, 1, "", "retrieve_modelfit_results"], [226, 2, 1, "", "snapshot"], [226, 2, 1, "", "store_local_file"], [226, 2, 1, "", "store_metadata"], [226, 2, 1, "", "store_model"], [226, 2, 1, "", "store_modelfit_results"], [226, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[227, 2, 1, "", "retrieve_file"], [227, 2, 1, "", "retrieve_local_files"], [227, 2, 1, "", "retrieve_model"], [227, 2, 1, "", "retrieve_modelfit_results"], [227, 2, 1, "", "store_local_file"], [227, 2, 1, "", "store_metadata"], [227, 2, 1, "", "store_model"], [227, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[228, 2, 1, "", "store_local_file"], [228, 2, 1, "", "store_results"]], "pharmpy.workflows.Task": [[229, 2, 1, "", "has_input"]], "pharmpy.workflows.ToolDatabase": [[230, 3, 1, "", "model_database"], [230, 2, 1, "", "store_local_file"], [230, 2, 1, "", "store_results"]], "pharmpy-data-anonymize": [[245, 6, 1, "cmdoption-pharmpy-data-anonymize-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-group", "--group"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-data-anonymize-arg-file", "file"]], "pharmpy-data-append": [[245, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [245, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-filter": [[245, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [245, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[245, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [245, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[245, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [245, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [245, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [245, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [245, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [245, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [245, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[245, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[245, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[245, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[245, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[245, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[245, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[245, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [245, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[245, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[245, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [245, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[245, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[245, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [245, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [245, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[245, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[245, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [245, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [245, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [245, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [245, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[245, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[245, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[245, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[245, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [245, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [245, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [245, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[245, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[245, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[245, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[245, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[245, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[245, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[245, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[245, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[245, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[245, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[245, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[245, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [245, 6, 1, "cmdoption-pharmpy-run-amd-categorical", "--categorical"], [245, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [245, 6, 1, "cmdoption-pharmpy-run-amd-continuous", "--continuous"], [245, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-amd-lloq", "--lloq"], [245, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [245, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [245, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [245, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [245, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [245, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [245, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[245, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [245, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[245, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[245, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [245, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [245, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[245, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[245, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [245, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[245, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[245, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [245, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [245, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[245, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [245, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 266], "dataset": [0, 252, 276], "overview": [0, 268, 272], "pars": 0, "translat": 0, "step": [0, 274], "nm": 0, "tran": 0, "comment": 0, "line": [0, 245], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 252, 264], "date": 0, "id": 0, "check": [0, 248], "tabl": 0, "file": [0, 247, 252, 264], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 248], "all": 0, "zero": [0, 264], "individu": [0, 241, 242, 255, 261, 263, 264, 275], "control": 0, "stream": 0, "gener": [0, 260], "option": [0, 240, 276], "problem": 0, "data": [0, 240, 245], "eta": [0, 264], "code": [0, 246, 248, 262, 264], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 28, 241, 242, 245, 250, 251, 255, 257, 259, 261, 262, 263, 264, 265, 270, 272, 273, 274, 275, 276], "spars": 0, "matrix": [0, 241, 263], "allometri": [1, 2, 245], "run": [1, 2, 245, 248, 250, 257, 259, 264, 265, 273, 276], "argument": [1, 2, 250, 257, 259, 265, 273], "procedur": [1, 273], "The": [1, 241, 242, 245, 247, 251, 253, 255, 257, 261, 262, 264, 265, 270, 272, 273, 274, 275, 278], "automat": 2, "model": [2, 19, 237, 238, 245, 252, 253, 257, 262, 264, 265, 266, 270, 273, 276, 278], "develop": [2, 248, 249, 254], "amd": [2, 245], "input": [2, 249], "search": [2, 257, 265], "space": [2, 265], "order": [2, 264], "subtool": 2, "structur": [2, 257, 272], "iivsearch": [2, 245, 257], "iovsearch": [2, 245, 259], "residu": [2, 263, 272], "covari": [2, 241, 242, 255, 257, 263, 264, 272], "api": 3, "refer": [3, 242, 255], "assign": 4, "bolu": [5, 264], "columninfo": [6, 252], "compart": [7, 264], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 252], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 259, 264], "estimationstep": [14, 15], "explicitodesystem": 16, "infus": 17, "jointnormaldistribut": 18, "modelerror": 20, "modelsyntaxerror": 21, "modelfitresultserror": 22, "normaldistribut": 23, "odesystem": 24, "paramet": [25, 26, 241, 252, 253, 255, 262, 263, 264, 266], "randomvari": [27, 253], "statement": [29, 30, 253, 262], "variabilityhierarchi": 31, "variabilitylevel": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 245], "add_individual_paramet": 38, "add_iov": [39, 245], "add_lag_tim": 40, "add_peripheral_compart": 41, "add_pk_iiv": 42, "add_population_paramet": 43, "add_time_after_dos": 44, "append_estimation_step_opt": 45, "bump_model_numb": 46, "calculate_a": 47, "calculate_b": 48, "calculate_corr_from_cov": 49, "calculate_corr_from_inf": 50, "calculate_cov_from_corrs": 51, "calculate_cov_from_inf": 52, "calculate_epsilon_gradient_express": 53, "calculate_eta_gradient_express": 54, "calculate_eta_shrinkag": 55, "calculate_individual_parameter_statist": 56, "calculate_individual_shrinkag": 57, "calculate_inf_from_corrs": 58, "calculate_inf_from_cov": 59, "calculate_parameters_from_ucp": 60, "calculate_pk_parameters_statist": 61, "calculate_se_from_cov": 62, "calculate_se_from_inf": 63, "calculate_ucp_scal": 64, "check_dataset": 65, "check_high_correl": 66, "check_parameters_near_bound": 67, "cleanup_model": 68, "convert_model": 69, "copy_model": 70, "create_joint_distribut": [71, 245], "create_report": 72, "create_rng": 73, "create_symbol": 74, "drop_column": 75, "drop_dropped_column": 76, "evaluate_epsilon_gradi": 77, "evaluate_eta_gradi": 78, "evaluate_express": 79, "evaluate_individual_predict": 80, "evaluate_population_predict": 81, "evaluate_weighted_residu": 82, "expand_additional_dos": 83, "find_clearance_paramet": 84, "find_volume_paramet": 85, "fix_or_unfix_paramet": 86, "fix_paramet": 87, "fix_parameters_to": 88, "generate_model_cod": 89, "get_baselin": 90, "get_bioavail": 91, "get_cmt": 92, "get_concentration_parameters_from_data": 93, "get_config_path": 94, "get_covariate_baselin": 95, "get_doseid": 96, "get_dos": 97, "get_evid": 98, "get_id": 99, "get_individual_paramet": 100, "get_individual_prediction_express": 101, "get_lag_tim": 102, "get_mdv": 103, "get_model_covari": 104, "get_number_of_individu": 105, "get_number_of_observ": 106, "get_number_of_observations_per_individu": 107, "get_observation_express": 108, "get_observ": 109, "get_omega": 110, "get_pk_paramet": 111, "get_population_prediction_express": 112, "get_rv_paramet": 113, "get_sigma": 114, "get_theta": 115, "get_unit_of": 116, "greekify_model": 117, "has_additive_error_model": 118, "has_combined_error_model": 119, "has_covariate_effect": 120, "has_first_order_elimin": 121, "has_michaelis_menten_elimin": 122, "has_mixed_mm_fo_elimin": 123, "has_proportional_error_model": 124, "has_random_effect": 125, "has_zero_order_absorpt": 126, "has_zero_order_elimin": 127, "list_time_varying_covari": 128, "load_example_model": 129, "make_declar": 130, "mu_reference_model": 131, "omit_data": 132, "plot_individual_predict": 133, "plot_iofv_vs_iofv": 134, "print_model_cod": 135, "print_model_symbol": 136, "read_dataset_from_datainfo": 137, "read_model": 138, "read_model_from_databas": 139, "read_model_from_str": 140, "remove_covariance_step": 141, "remove_covariate_effect": 142, "remove_error_model": 143, "remove_estimation_step": 144, "remove_iiv": [145, 245], "remove_iov": [146, 245], "remove_lag_tim": 147, "remove_loq_data": 148, "remove_peripheral_compart": 149, "remove_unused_parameters_and_rv": 150, "rename_symbol": 151, "resample_data": 152, "sample_individual_estim": 153, "sample_parameters_from_covariance_matrix": 154, "sample_parameters_uniformli": 155, "set_additive_error_model": 156, "set_bolus_absorpt": 157, "set_combined_error_model": 158, "set_covari": 159, "set_dtbs_error_model": 160, "set_estimation_step": 161, "set_evaluation_step": 162, "set_first_order_absorpt": 163, "set_first_order_elimin": 164, "set_iiv_on_ruv": 165, "set_initial_estim": 166, "set_lower_bound": 167, "set_michaelis_menten_elimin": 168, "set_mixed_mm_fo_elimin": 169, "set_nam": 170, "set_ode_solv": 171, "set_peripheral_compart": 172, "set_power_on_ruv": 173, "set_proportional_error_model": 174, "set_seq_zo_fo_absorpt": 175, "set_time_varying_error_model": 176, "set_transit_compart": 177, "set_upper_bound": 178, "set_weighted_error_model": 179, "set_zero_order_absorpt": 180, "set_zero_order_elimin": 181, "simplify_express": 182, "solve_ode_system": 183, "split_joint_distribut": 184, "transform_etas_boxcox": 185, "transform_etas_john_drap": 186, "transform_etas_tdist": 187, "translate_nmtran_tim": 188, "unconstrain_paramet": 189, "undrop_column": 190, "unfix_paramet": 191, "unfix_parameters_to": 192, "update_initial_individual_estim": 193, "update_init": [194, 245], "use_thetas_for_error_stdev": 195, "write_csv": 196, "write_model": 197, "create_result": 198, "fit": [199, 264], "predict_influential_individu": 200, "predict_influential_outli": 201, "predict_outli": 202, "print_fit_summari": 203, "rank_model": 204, "read_result": 205, "retrieve_final_model": 206, "retrieve_model": 207, "run_allometri": 208, "run_amd": 209, "run_covsearch": 210, "run_iivsearch": 211, "run_iovsearch": 212, "run_modelfit": 213, "run_modelsearch": 214, "run_ruvsearch": 215, "run_tool": 216, "summarize_error": 217, "summarize_individu": 218, "summarize_individuals_count_t": 219, "summarize_modelfit_result": 220, "write_result": 221, "localdirectorydatabas": 222, "localdirectorytooldatabas": 223, "localmodeldirectorydatabas": 224, "log": 225, "modeldatabas": 226, "nullmodeldatabas": 227, "nulltooldatabas": 228, "task": 229, "tooldatabas": 230, "workflow": [231, 240, 248], "call_workflow": 232, "default_model_databas": 233, "default_tool_databas": 234, "execute_workflow": 235, "split_common_opt": 236, "pharmpi": [237, 238, 239, 240, 244, 245, 246, 248, 252, 253, 258, 262, 267, 271, 276, 278], "packag": [237, 238, 239, 240], "class": [237, 240, 253], "function": [238, 239, 240], "tool": [239, 271, 276], "modul": [240, 253], "bootstrap": [241, 245], "postprocess": [241, 255], "statist": 241, "ofv": [241, 242, 245, 251, 255, 261, 263, 274, 275], "includ": 241, "case": 242, "delet": 242, "diagnost": 242, "cdd": [242, 245], "cook": 242, "score": 242, "jackknif": 242, "cookscor": 242, "ratio": 242, "delta": 242, "skip": 242, "column": 242, "changelog": 243, "0": 243, "80": 243, "2022": 243, "10": 243, "19": 243, "chang": [243, 267], "bug": 243, "fix": [243, 264], "79": 243, "16": 243, "new": [243, 259, 264, 266], "featur": [243, 265, 276], "78": 243, "09": 243, "20": 243, "bugfix": 243, "77": 243, "08": 243, "76": 243, "1": 243, "06": 243, "05": 243, "75": 243, "74": 243, "07": 243, "18": 243, "73": 243, "21": 243, "72": 243, "71": 243, "24": 243, "70": 243, "17": 243, "13": 243, "69": 243, "04": 243, "29": 243, "68": 243, "27": 243, "67": 243, "25": 243, "66": 243, "65": 243, "14": 243, "64": 243, "12": 243, "63": 243, "62": 243, "61": 243, "03": 243, "31": 243, "59": 243, "58": 243, "4": 243, "22": 243, "57": 243, "56": 243, "55": 243, "54": 243, "53": 243, "52": 243, "02": 243, "51": 243, "50": 243, "49": 243, "48": 243, "47": 243, "01": 243, "28": 243, "46": 243, "45": 243, "44": 243, "43": 243, "42": 243, "11": 243, "41": 243, "2021": 243, "40": 243, "39": 243, "15": 243, "38": 243, "37": 243, "26": 243, "36": 243, "35": 243, "34": 243, "3": 243, "2": [243, 260], "33": 243, "32": 243, "30": 243, "23": 243, "2020": 243, "9": 243, "8": 243, "7": 243, "6": 243, "5": 243, "2018": 243, "citat": 244, "how": 244, "cite": 244, "pharmr": [244, 278], "command": 245, "interfac": 245, "anonym": 245, "append": 245, "filter": 245, "print": 245, "resampl": 245, "write": [245, 262, 264, 266], "info": 245, "absorption_r": 245, "add_cov_effect": 245, "boxcox": [245, 264, 272], "elimination_r": 245, "error": [245, 263, 264, 272, 278], "iiv_on_ruv": 245, "john_drap": 245, "peripheral_compart": 245, "power_on_ruv": 245, "sampl": [245, 275], "tdist": [245, 272], "transit_compart": 245, "frem": [245, 255], "linear": [245, 261], "qa": [245, 272], "report": 245, "ruvsearch": [245, 273], "scm": [245, 274], "simev": [245, 275], "summari": [245, 274, 275], "covsearch": [245, 250], "estmethod": 245, "execut": 245, "modelsearch": [245, 265], "commun": 246, "conduct": 246, "configur": 247, "environ": [247, 248], "variabl": [247, 255, 262, 266], "contribut": 248, "set": [248, 262, 264, 267], "up": 248, "support": 248, "platform": 248, "instal": [248, 256, 278], "python": [248, 278], "git": 248, "fork": 248, "clone": 248, "repositori": 248, "tox": 248, "graphviz": 248, "us": [248, 266, 278], "build": 248, "document": [248, 254], "unit": [248, 252], "test": 248, "integr": 248, "usabl": 248, "virtual": 248, "standard": [248, 263, 264], "releas": 248, "version": [248, 278], "inform": [248, 252, 263], "contributor": 249, "scientif": 249, "fund": 249, "effect": [250, 255, 264, 272], "wildcard": 250, "algorithm": [250, 257, 259, 265], "crossval": 251, "crossvalid": 251, "retriev": 252, "from": [252, 264], "updat": [252, 262, 264, 278], "subject": 252, "observ": 252, "dose": 252, "extract": 252, "group": 252, "after": 252, "concentr": 252, "type": [252, 276], "scale": 252, "continu": 252, "categori": 252, "drop": 252, "datatyp": 252, "descriptor": 252, "design": 253, "principl": 253, "level": 253, "architectur": 253, "heart": 253, "docstr": 253, "depend": 253, "coeffici": 255, "unexplain": 255, "estim": [255, 262, 263, 264], "valu": 255, "get": [256, 262, 264], "start": [256, 257], "A": 256, "first": [256, 264], "exampl": [256, 276], "brute": 257, "forc": 257, "number": [257, 264], "iiv": [257, 264, 265], "full": 257, "ad": [257, 264, 265], "compar": [257, 259, 265], "rank": [257, 259, 265], "candid": [257, 259, 265, 274], "welcom": 258, "iov": [259, 264], "licens": 260, "logo": 260, "copyright": 260, "bsd": 260, "claus": 260, "gnu": 260, "lesser": 260, "public": 260, "read": [262, 263, 264, 266], "name": [262, 266], "random": [262, 266], "modelfit": [262, 263], "initi": [262, 264], "final": 263, "rel": 263, "correl": 263, "indiviud": 263, "predict": [263, 275], "basic": 264, "sourc": 264, "string": 264, "unfix": 264, "add": 264, "pk": 264, "od": 264, "system": 264, "absorpt": 264, "rate": 264, "sequenti": 264, "delai": 264, "transit": 264, "lag": 264, "elimin": 264, "micha": 264, "menten": 264, "mix": 264, "peripher": 264, "remov": 264, "transform": 264, "approxim": 264, "t": 264, "john": 264, "draper": 264, "an": 264, "addit": 264, "proport": 264, "combin": [264, 265], "appli": 264, "ruv": 264, "power": 264, "deviat": 264, "epsilon": 264, "theta": 264, "weight": 264, "dtb": 264, "creat": 264, "joint": 264, "multipl": 264, "between": [264, 265], "previou": 264, "psn": [264, 271], "shrinkag": 264, "calcul": 264, "common": [265, 276], "behaviour": 265, "exclus": 265, "exhaust": 265, "stepwis": 265, "reduc": 265, "dure": 265, "plugin": [266, 268], "plot": [267, 275], "theme": 267, "axi": 267, "project": 269, "suggest": 269, "resmod": 270, "connect": 271, "bia": 272, "fullblock": 272, "databas": 276, "directori": 276, "metadata": 276, "languag": 276, "mfl": 276, "symbol": 276, "describ": 276, "interv": 276, "redund": 276, "descript": 276, "user": 277, "guid": 277, "r": 278, "troubl": 278, "shoot": 278, "wrong": 278, "import": 278, "gotcha": 278, "object": 278, "list": 278, "indic": 278, "datafram": 278, "multiindex": 278, "float": 278, "integ": 278, "singl": 278, "element": 278, "vector": 278}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"calculate_se_from_inf": [[63, "calculate-se-from-inf"]], "create_report": [[72, "create-report"]], "calculate_individual_parameter_statistics": [[56, "calculate-individual-parameter-statistics"]], "calculate_individual_shrinkage": [[57, "calculate-individual-shrinkage"]], "calculate_corr_from_cov": [[49, "calculate-corr-from-cov"]], "calculate_ucp_scale": [[64, "calculate-ucp-scale"]], "bump_model_number": [[46, "bump-model-number"]], "calculate_se_from_cov": [[62, "calculate-se-from-cov"]], "calculate_bic": [[48, "calculate-bic"]], "add_lag_time": [[40, "add-lag-time"]], "copy_model": [[70, "copy-model"]], "add_iov": [[39, "add-iov"]], "calculate_eta_gradient_expression": [[54, "calculate-eta-gradient-expression"]], "add_peripheral_compartment": [[41, "add-peripheral-compartment"]], "calculate_eta_shrinkage": [[55, "calculate-eta-shrinkage"]], "calculate_inf_from_cov": [[59, "calculate-inf-from-cov"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "calculate_inf_from_corrse": [[58, "calculate-inf-from-corrse"]], "add_iiv": [[37, "add-iiv"]], "calculate_aic": [[47, "calculate-aic"]], "calculate_epsilon_gradient_expression": [[53, "calculate-epsilon-gradient-expression"]], "calculate_cov_from_corrse": [[51, "calculate-cov-from-corrse"]], "add_pk_iiv": [[42, "add-pk-iiv"]], "create_joint_distribution": [[71, "create-joint-distribution"]], "check_parameters_near_bounds": [[67, "check-parameters-near-bounds"]], "calculate_cov_from_inf": [[52, "calculate-cov-from-inf"]], "create_rng": [[73, "create-rng"]], "convert_model": [[69, "convert-model"]], "calculate_parameters_from_ucp": [[60, "calculate-parameters-from-ucp"]], "check_dataset": [[65, "check-dataset"]], "check_high_correlations": [[66, "check-high-correlations"]], "add_population_parameter": [[43, "add-population-parameter"]], "calculate_corr_from_inf": [[50, "calculate-corr-from-inf"]], "calculate_pk_parameters_statistics": [[61, "calculate-pk-parameters-statistics"]], "cleanup_model": [[68, "cleanup-model"]], "append_estimation_step_options": [[45, "append-estimation-step-options"]], "add_time_after_dose": [[44, "add-time-after-dose"]], "ModelfitResultsError": [[22, "modelfitresultserror"]], "EstimationStep": [[14, "estimationstep"]], "Results": [[28, "results"], [2, "results"], [250, "results"], [259, "results"], [276, "results"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "ODESystem": [[24, "odesystem"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "DatasetError": [[11, "dataseterror"]], "DataInfo": [[10, "datainfo"], [252, "datainfo"]], "VariabilityHierarchy": [[31, "variabilityhierarchy"]], "Assignment": [[4, "assignment"]], "NormalDistribution": [[23, "normaldistribution"]], "EstimationSteps": [[15, "estimationsteps"]], "RandomVariables": [[27, "randomvariables"]], "JointNormalDistribution": [[18, "jointnormaldistribution"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "API Reference": [[3, "api-reference"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Running": [[2, "running"], [1, "running"], [257, "running"], [250, "running"], [273, "running"], [265, "running"], [259, "running"]], "Arguments": [[2, "arguments"], [1, "arguments"], [257, "arguments"], [250, "arguments"], [273, "arguments"], [265, "arguments"], [259, "arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [257, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [259, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "ModelError": [[20, "modelerror"]], "add_estimation_step": [[36, "add-estimation-step"]], "Distribution": [[13, "distribution"], [264, "distribution"]], "DatasetWarning": [[12, "datasetwarning"]], "ExplicitODESystem": [[16, "explicitodesystem"]], "ColumnInfo": [[6, "columninfo"], [252, "columninfo"]], "ModelSyntaxError": [[21, "modelsyntaxerror"]], "Parameters": [[26, "parameters"], [264, "parameters"]], "Bolus": [[5, "bolus"]], "add_allometry": [[33, "add-allometry"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Model": [[19, "model"]], "Statement": [[29, "statement"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [273, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "Compartment": [[7, "compartment"]], "Statements": [[30, "statements"]], "VariabilityLevel": [[32, "variabilitylevel"]], "Infusion": [[17, "infusion"]], "Parameter": [[25, "parameter"]], "add_covariance_step": [[34, "add-covariance-step"]], "LocalDirectoryToolDatabase": [[223, "localdirectorytooldatabase"]], "Workflow": [[231, "workflow"]], "call_workflow": [[232, "call-workflow"]], "FREM": [[255, "frem"]], "The FREM postprocessing and results": [[255, "the-frem-postprocessing-and-results"]], "Covariate effects": [[255, "covariate-effects"], [272, "covariate-effects"]], "Parameter covariate coefficients": [[255, "parameter-covariate-coefficients"]], "Individual covariate effects": [[255, "individual-covariate-effects"]], "Unexplained variability": [[255, "unexplained-variability"]], "Parameter estimates": [[255, "parameter-estimates"], [263, "parameter-estimates"]], "OFV": [[255, "ofv"]], "Estimated covariate values": [[255, "estimated-covariate-values"]], "References": [[255, "references"], [242, "references"]], "Bootstrap": [[241, "bootstrap"]], "The Bootstrap postprocessing and results": [[241, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[241, "parameter-statistics"]], "OFV statistics": [[241, "ofv-statistics"]], "Covariance matrix": [[241, "covariance-matrix"], [263, "covariance-matrix"]], "Included individuals": [[241, "included-individuals"]], "pharmpy.model Package": [[237, "module-pharmpy.model"]], "Classes": [[237, "classes"], [240, "classes"]], "split_common_options": [[236, "split-common-options"]], "Case deletion diagnostics": [[242, "case-deletion-diagnostics"]], "The cdd results": [[242, "the-cdd-results"]], "Case results": [[242, "case-results"]], "Cook score": [[242, "cook-score"]], "Jackknife cookscore": [[242, "jackknife-cookscore"]], "Covariance ratio": [[242, "covariance-ratio"]], "Delta OFV": [[242, "delta-ofv"]], "Skipped individuals": [[242, "skipped-individuals"]], "Case column": [[242, "case-column"]], "Datasets in Pharmpy": [[252, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[252, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[252, "update-the-dataset-of-a-model"]], "Subjects": [[252, "subjects"]], "Observations": [[252, "observations"]], "Dosing": [[252, "dosing"]], "Extract dosing information": [[252, "extract-dosing-information"]], "Dose grouping": [[252, "dose-grouping"]], "Time after dose": [[252, "time-after-dose"]], "Concentration parameters": [[252, "concentration-parameters"]], "type": [[252, "type"]], "scale": [[252, "scale"]], "continuous": [[252, "continuous"]], "categories": [[252, "categories"]], "unit": [[252, "unit"]], "drop": [[252, "drop"]], "datatype": [[252, "datatype"]], "descriptor": [[252, "descriptor"]], "datainfo file": [[252, "datainfo-file"]], "The Pharmpy command line interface": [[245, "the-pharmpy-command-line-interface"]], "pharmpy": [[245, "pharmpy"]], "pharmpy data": [[245, "pharmpy-data"]], "pharmpy data anonymize": [[245, "pharmpy-data-anonymize"]], "pharmpy data append": [[245, "pharmpy-data-append"]], "pharmpy data filter": [[245, "pharmpy-data-filter"]], "pharmpy data print": [[245, "pharmpy-data-print"]], "pharmpy data resample": [[245, "pharmpy-data-resample"]], "pharmpy data write": [[245, "pharmpy-data-write"]], "pharmpy info": [[245, "pharmpy-info"]], "pharmpy model": [[245, "pharmpy-model"]], "pharmpy model absorption_rate": [[245, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[245, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[245, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[245, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[245, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[245, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[245, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[245, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[245, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[245, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[245, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[245, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[245, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[245, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[245, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[245, "pharmpy-model-sample"]], "pharmpy model tdist": [[245, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[245, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[245, "pharmpy-model-update-inits"]], "pharmpy results": [[245, "pharmpy-results"]], "pharmpy results bootstrap": [[245, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[245, "pharmpy-results-cdd"]], "pharmpy results frem": [[245, "pharmpy-results-frem"]], "pharmpy results linearize": [[245, "pharmpy-results-linearize"]], "pharmpy results ofv": [[245, "pharmpy-results-ofv"]], "pharmpy results print": [[245, "pharmpy-results-print"]], "pharmpy results qa": [[245, "pharmpy-results-qa"]], "pharmpy results report": [[245, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[245, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[245, "pharmpy-results-scm"]], "pharmpy results simeval": [[245, "pharmpy-results-simeval"]], "pharmpy results summary": [[245, "pharmpy-results-summary"]], "pharmpy run": [[245, "pharmpy-run"]], "pharmpy run allometry": [[245, "pharmpy-run-allometry"]], "pharmpy run amd": [[245, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[245, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[245, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[245, "pharmpy-run-estmethod"]], "pharmpy run execute": [[245, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[245, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[245, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[245, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[245, "pharmpy-run-ruvsearch"]], "Design principles": [[253, "design-principles"]], "Levels of the architecture": [[253, "levels-of-the-architecture"]], "The Heart, The Model Class": [[253, "the-heart-the-model-class"]], "pharmpy.Parameters": [[253, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[253, "pharmpy-randomvariables"]], "pharmpy.Statements": [[253, "pharmpy-statements"]], "The pharmpy.modeling module": [[253, "the-pharmpy-modeling-module"]], "Docstrings": [[253, "docstrings"]], "Dependencies": [[253, "dependencies"]], "ToolDatabase": [[230, "tooldatabase"]], "NullToolDatabase": [[228, "nulltooldatabase"]], "default_model_database": [[233, "default-model-database"]], "Documentation for developers": [[254, "documentation-for-developers"]], "Configuration": [[247, "configuration"]], "The configuration file": [[247, "the-configuration-file"]], "Environment variables": [[247, "environment-variables"]], "Crossval": [[251, "crossval"]], "The crossval results": [[251, "the-crossval-results"]], "Crossvalidation OFVs": [[251, "crossvalidation-ofvs"]], "LocalModelDirectoryDatabase": [[224, "localmodeldirectorydatabase"]], "Getting started": [[256, "getting-started"]], "Installation": [[256, "installation"]], "A first example": [[256, "a-first-example"]], "pharmpy.workflows Package": [[240, "module-pharmpy.workflows"]], "Options for the data module": [[240, "id1"]], "Functions": [[240, "functions"], [239, "functions"], [238, "functions"]], "Algorithms": [[257, "algorithms"], [265, "algorithms"]], "Brute force search for number of IIVs": [[257, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[257, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[257, "full-brute-force-search"]], "Adding IIV to the start model": [[257, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[257, "comparing-and-ranking-candidates"], [265, "comparing-and-ranking-candidates"], [259, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[257, "the-iivsearch-results"]], "NullModelDatabase": [[227, "nullmodeldatabase"]], "Log": [[225, "log"]], "Task": [[229, "task"]], "ModelDatabase": [[226, "modeldatabase"]], "Citation": [[244, "citation"]], "How to cite Pharmpy and pharmr": [[244, "how-to-cite-pharmpy-and-pharmr"]], "Changelog": [[243, "changelog"]], "0.80.0 (2022-10-19)": [[243, "id1"]], "Changes": [[243, "changes"], [243, "id3"], [243, "id6"], [243, "id8"], [243, "id13"], [243, "id17"], [243, "id20"], [243, "id24"], [243, "id27"], [243, "id31"], [243, "id37"], [243, "id41"], [243, "id52"], [243, "id56"], [243, "id61"], [243, "id67"], [243, "id77"], [243, "id82"], [243, "id86"], [243, "id93"], [243, "id99"], [243, "id104"], [243, "id107"], [243, "id111"]], "Bug fixes": [[243, "bug-fixes"], [243, "id4"]], "0.79.0 (2022-10-16)": [[243, "id2"]], "New features": [[243, "new-features"], [243, "id12"], [243, "id16"], [243, "id23"], [243, "id26"], [243, "id30"], [243, "id36"], [243, "id40"], [243, "id46"], [243, "id51"], [243, "id55"], [243, "id58"], [243, "id66"], [243, "id70"], [243, "id76"], [243, "id85"], [243, "id89"], [243, "id92"], [243, "id96"], [243, "id98"], [243, "id103"], [243, "id106"], [243, "id110"]], "0.78.0 (2022-09-20)": [[243, "id5"]], "Bugfixes": [[243, "bugfixes"], [243, "id10"], [243, "id14"], [243, "id18"], [243, "id21"], [243, "id28"], [243, "id32"], [243, "id34"], [243, "id38"], [243, "id42"], [243, "id44"], [243, "id47"], [243, "id49"], [243, "id53"], [243, "id59"], [243, "id62"], [243, "id64"], [243, "id68"], [243, "id72"], [243, "id74"], [243, "id78"], [243, "id80"], [243, "id83"], [243, "id87"], [243, "id90"], [243, "id94"], [243, "id101"], [243, "id108"], [243, "id112"]], "0.77.0 (2022-09-08)": [[243, "id7"]], "0.76.1 (2022-09-06)": [[243, "id9"]], "0.76.0 (2022-09-05)": [[243, "id11"]], "0.75.0 (2022-08-10)": [[243, "id15"]], "0.74.0 (2022-07-18)": [[243, "id19"]], "0.73.0 (2022-06-21)": [[243, "id22"]], "0.72.0 (2022-06-08)": [[243, "id25"]], "0.71.0 (2022-05-24)": [[243, "id29"]], "0.70.1 (2022-05-17)": [[243, "id33"]], "0.70.0 (2022-05-13)": [[243, "id35"]], "0.69.0 (2022-04-29)": [[243, "id39"]], "0.68.0 (2022-04-27)": [[243, "id43"]], "0.67.0 (2022-04-25)": [[243, "id45"]], "0.66.0 (2022-04-20)": [[243, "id48"]], "0.65.0 (2022-04-14)": [[243, "id50"]], "0.64.0 (2022-04-12)": [[243, "id54"]], "0.63.0 (2022-04-07)": [[243, "id57"]], "0.62.0 (2022-04-04)": [[243, "id60"]], "New feature": [[243, "new-feature"]], "0.61.1 (2022-03-31)": [[243, "id63"]], "0.61.0 (2022-03-29)": [[243, "id65"]], "0.59.0 (2022-03-25)": [[243, "id69"]], "0.58.4 (2022-03-24)": [[243, "id71"]], "0.58.1 (2022-03-22)": [[243, "id73"]], "0.58.0 (2022-03-22)": [[243, "id75"]], "0.57.0 (2022-03-21)": [[243, "id79"]], "0.56.0 (2022-03-17)": [[243, "id81"]], "0.55.0 (2022-03-16)": [[243, "id84"]], "0.54.0 (2022-03-08)": [[243, "id88"]], "0.53.0 (2022-03-04)": [[243, "id91"]], "0.52.0 (2022-02-25)": [[243, "id95"]], "0.51.0 (2022-02-24)": [[243, "id97"]], "0.50.1 (2022-02-16)": [[243, "id100"]], "0.50.0 (2022-02-16)": [[243, "id102"]], "0.49.0 (2022-02-10)": [[243, "id105"]], "0.48.0 (2022-02-04)": [[243, "id109"]], "0.47.0 (2022-01-28)": [[243, "id113"]], "0.46.0 (2022-01-27)": [[243, "id114"]], "0.45.0 (2022-01-21)": [[243, "id115"]], "0.44.0 (2022-01-20)": [[243, "id116"]], "0.43.0 (2022-01-12)": [[243, "id117"]], "0.42.0 (2022-01-11)": [[243, "id118"]], "0.41.0 (2021-12-21)": [[243, "id119"]], "0.40.0 (2021-12-16)": [[243, "id120"]], "0.39.0 (2021-12-15)": [[243, "id121"]], "0.38.0 (2021-12-08)": [[243, "id122"]], "0.37.1 (2021-11-26)": [[243, "id123"]], "0.37.0 (2021-11-24)": [[243, "id124"]], "0.36.0 (2021-11-11)": [[243, "id125"]], "0.35.0 (2021-11-02)": [[243, "id126"]], "0.34.3 (2021-10-28)": [[243, "id127"]], "0.34.2 (2021-10-26)": [[243, "id128"]], "0.34.1 (2021-10-20)": [[243, "id129"]], "0.34.0 (2021-10-14)": [[243, "id130"]], "0.33.0 (2021-10-11)": [[243, "id131"]], "0.32.0 (2021-09-28)": [[243, "id132"]], "0.31.0 (2021-09-21)": [[243, "id133"]], "0.30.0 (2021-09-06)": [[243, "id134"]], "0.29.0 (2021-08-25)": [[243, "id135"]], "0.28.0 (2021-08-24)": [[243, "id136"]], "0.27.0 (2021-08-09)": [[243, "id137"]], "0.26.1 (2021-08-04)": [[243, "id138"]], "0.26.0 (2021-07-13)": [[243, "id139"]], "0.25.1 (2021-07-08)": [[243, "id140"]], "0.25.0 (2021-06-24)": [[243, "id141"]], "0.24.0 (2021-05-25)": [[243, "id142"]], "0.23.4 (2021-05-03)": [[243, "id143"]], "0.23.3 (2021-04-29)": [[243, "id144"]], "0.23.2 (2021-04-28)": [[243, "id145"]], "0.23.1 (2021-04-28)": [[243, "id146"]], "0.23.0 (2021-04-28)": [[243, "id147"]], "0.22.0 (2021-03-29)": [[243, "id148"]], "0.21.0 (2021-03-22)": [[243, "id149"]], "0.20.1 (2021-03-11)": [[243, "id150"]], "0.20.0 (2021-03-11)": [[243, "id151"]], "0.19.0 (2021-03-02)": [[243, "id152"]], "0.18.0 (2021-03-01)": [[243, "id153"]], "0.17.0 (2021-02-15)": [[243, "id154"]], "0.16.0 (2021-02-08)": [[243, "id155"]], "0.15.0 (2021-02-01)": [[243, "id156"]], "0.14.0 (2021-01-25)": [[243, "id157"]], "0.13.0 (2021-01-18)": [[243, "id158"]], "0.12.0 (2020-12-18)": [[243, "id159"]], "0.11.0 (2020-11-20)": [[243, "id160"]], "0.10.0 (2020-11-16)": [[243, "id161"]], "0.9.0 (2020-10-26)": [[243, "id162"]], "0.8.0 (2020-10-08)": [[243, "id163"]], "0.7.0 (2020-09-28)": [[243, "id164"]], "0.6.0 (2020-09-18)": [[243, "id165"]], "0.5.0 (2020-09-04)": [[243, "id166"]], "0.4.0 (2020-07-24)": [[243, "id167"]], "0.3.0 (2020-06-16)": [[243, "id168"]], "0.2.0 (2020-03-27)": [[243, "id169"]], "0.1.0 (2018-07-22)": [[243, "id170"]], "LocalDirectoryDatabase": [[222, "localdirectorydatabase"]], "Contribute": [[248, "contribute"]], "Set up the development environment": [[248, "set-up-the-development-environment"]], "Supported platforms": [[248, "supported-platforms"]], "Install Python": [[248, "install-python"]], "Install git": [[248, "install-git"]], "Fork and clone the code repository": [[248, "fork-and-clone-the-code-repository"]], "Install tox": [[248, "install-tox"]], "Install graphviz used for building the documentation": [[248, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[248, "using-the-development-environment"]], "Running tox": [[248, "running-tox"]], "Check code formatting": [[248, "check-code-formatting"]], "Run the unit tests": [[248, "run-the-unit-tests"]], "Build and test the documentation": [[248, "build-and-test-the-documentation"]], "Run the integration tests": [[248, "run-the-integration-tests"]], "Build a usable virtual environment": [[248, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[248, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[248, "releasing-pharmpy-and-documentation"]], "Version": [[248, "version"]], "Information for developers": [[248, "information-for-developers"]], "execute_workflow": [[235, "execute-workflow"]], "Welcome to Pharmpy": [[258, "welcome-to-pharmpy"]], "default_tool_database": [[234, "default-tool-database"]], "COVsearch": [[250, "covsearch"]], "Effects": [[250, "effects"]], "Wildcards": [[250, "wildcards"]], "Algorithm": [[250, "algorithm"], [259, "algorithm"]], "Pharmpy Community Code of Conduct": [[246, "pharmpy-community-code-of-conduct"]], "Contributors": [[249, "authors"]], "Development": [[249, "development"]], "Scientific input": [[249, "scientific-input"]], "Funding": [[249, "funding"]], "pharmpy.tools Package": [[239, "module-pharmpy.tools"]], "pharmpy.modeling Package": [[238, "module-pharmpy.modeling"]], "run_iivsearch": [[211, "run-iivsearch"]], "write_model": [[197, "write-model"]], "predict_influential_outliers": [[201, "predict-influential-outliers"]], "unfix_parameters": [[191, "unfix-parameters"]], "summarize_modelfit_results": [[220, "summarize-modelfit-results"]], "unconstrain_parameters": [[189, "unconstrain-parameters"]], "update_initial_individual_estimates": [[193, "update-initial-individual-estimates"]], "use_thetas_for_error_stdev": [[195, "use-thetas-for-error-stdev"]], "predict_influential_individuals": [[200, "predict-influential-individuals"]], "read_results": [[205, "read-results"]], "retrieve_final_model": [[206, "retrieve-final-model"]], "run_covsearch": [[210, "run-covsearch"]], "write_results": [[221, "write-results"]], "run_modelsearch": [[214, "run-modelsearch"]], "update_inits": [[194, "update-inits"]], "unfix_parameters_to": [[192, "unfix-parameters-to"]], "write_csv": [[196, "write-csv"]], "transform_etas_john_draper": [[186, "transform-etas-john-draper"]], "retrieve_models": [[207, "retrieve-models"]], "run_ruvsearch": [[215, "run-ruvsearch"]], "run_allometry": [[208, "run-allometry"]], "predict_outliers": [[202, "predict-outliers"]], "fit": [[199, "fit"]], "create_results": [[198, "create-results"]], "transform_etas_boxcox": [[185, "transform-etas-boxcox"]], "summarize_individuals": [[218, "summarize-individuals"]], "rank_models": [[204, "rank-models"]], "run_amd": [[209, "run-amd"]], "translate_nmtran_time": [[188, "translate-nmtran-time"]], "undrop_columns": [[190, "undrop-columns"]], "transform_etas_tdist": [[187, "transform-etas-tdist"]], "print_fit_summary": [[203, "print-fit-summary"]], "run_iovsearch": [[212, "run-iovsearch"]], "summarize_individuals_count_table": [[219, "summarize-individuals-count-table"]], "summarize_errors": [[217, "summarize-errors"]], "run_modelfit": [[213, "run-modelfit"]], "run_tool": [[216, "run-tool"]], "set_peripheral_compartments": [[172, "set-peripheral-compartments"]], "rename_symbols": [[151, "rename-symbols"]], "set_covariates": [[159, "set-covariates"]], "set_proportional_error_model": [[174, "set-proportional-error-model"]], "set_first_order_absorption": [[163, "set-first-order-absorption"]], "set_weighted_error_model": [[179, "set-weighted-error-model"]], "resample_data": [[152, "resample-data"]], "set_first_order_elimination": [[164, "set-first-order-elimination"]], "set_bolus_absorption": [[157, "set-bolus-absorption"]], "sample_individual_estimates": [[153, "sample-individual-estimates"]], "sample_parameters_uniformly": [[155, "sample-parameters-uniformly"]], "set_name": [[170, "set-name"]], "set_estimation_step": [[161, "set-estimation-step"]], "set_power_on_ruv": [[173, "set-power-on-ruv"]], "set_evaluation_step": [[162, "set-evaluation-step"]], "remove_unused_parameters_and_rvs": [[150, "remove-unused-parameters-and-rvs"]], "set_mixed_mm_fo_elimination": [[169, "set-mixed-mm-fo-elimination"]], "solve_ode_system": [[183, "solve-ode-system"]], "set_additive_error_model": [[156, "set-additive-error-model"]], "set_time_varying_error_model": [[176, "set-time-varying-error-model"]], "set_ode_solver": [[171, "set-ode-solver"]], "set_upper_bounds": [[178, "set-upper-bounds"]], "set_michaelis_menten_elimination": [[168, "set-michaelis-menten-elimination"]], "set_seq_zo_fo_absorption": [[175, "set-seq-zo-fo-absorption"]], "remove_loq_data": [[148, "remove-loq-data"]], "set_lower_bounds": [[167, "set-lower-bounds"]], "sample_parameters_from_covariance_matrix": [[154, "sample-parameters-from-covariance-matrix"]], "simplify_expression": [[182, "simplify-expression"]], "set_zero_order_elimination": [[181, "set-zero-order-elimination"]], "set_combined_error_model": [[158, "set-combined-error-model"]], "set_transit_compartments": [[177, "set-transit-compartments"]], "set_dtbs_error_model": [[160, "set-dtbs-error-model"]], "set_iiv_on_ruv": [[165, "set-iiv-on-ruv"]], "set_initial_estimates": [[166, "set-initial-estimates"]], "remove_peripheral_compartment": [[149, "remove-peripheral-compartment"]], "set_zero_order_absorption": [[180, "set-zero-order-absorption"]], "split_joint_distribution": [[184, "split-joint-distribution"]], "get_population_prediction_expression": [[112, "get-population-prediction-expression"]], "has_mixed_mm_fo_elimination": [[123, "has-mixed-mm-fo-elimination"]], "remove_error_model": [[143, "remove-error-model"]], "make_declarative": [[130, "make-declarative"]], "print_model_code": [[135, "print-model-code"]], "remove_lag_time": [[147, "remove-lag-time"]], "has_covariate_effect": [[120, "has-covariate-effect"]], "plot_iofv_vs_iofv": [[134, "plot-iofv-vs-iofv"]], "get_pk_parameters": [[111, "get-pk-parameters"]], "get_rv_parameters": [[113, "get-rv-parameters"]], "get_thetas": [[115, "get-thetas"]], "print_model_symbols": [[136, "print-model-symbols"]], "has_zero_order_absorption": [[126, "has-zero-order-absorption"]], "plot_individual_predictions": [[133, "plot-individual-predictions"]], "get_unit_of": [[116, "get-unit-of"]], "has_combined_error_model": [[119, "has-combined-error-model"]], "has_proportional_error_model": [[124, "has-proportional-error-model"]], "remove_iiv": [[145, "remove-iiv"]], "has_michaelis_menten_elimination": [[122, "has-michaelis-menten-elimination"]], "has_random_effect": [[125, "has-random-effect"]], "read_model_from_string": [[140, "read-model-from-string"]], "remove_estimation_step": [[144, "remove-estimation-step"]], "remove_covariate_effect": [[142, "remove-covariate-effect"]], "mu_reference_model": [[131, "mu-reference-model"]], "has_zero_order_elimination": [[127, "has-zero-order-elimination"]], "has_first_order_elimination": [[121, "has-first-order-elimination"]], "remove_iov": [[146, "remove-iov"]], "load_example_model": [[129, "load-example-model"]], "read_model": [[138, "read-model"]], "read_model_from_database": [[139, "read-model-from-database"]], "get_sigmas": [[114, "get-sigmas"]], "list_time_varying_covariates": [[128, "list-time-varying-covariates"]], "read_dataset_from_datainfo": [[137, "read-dataset-from-datainfo"]], "has_additive_error_model": [[118, "has-additive-error-model"]], "remove_covariance_step": [[141, "remove-covariance-step"]], "greekify_model": [[117, "greekify-model"]], "omit_data": [[132, "omit-data"]], "evaluate_weighted_residuals": [[82, "evaluate-weighted-residuals"]], "get_number_of_observations_per_individual": [[107, "get-number-of-observations-per-individual"]], "get_observations": [[109, "get-observations"]], "get_lag_times": [[102, "get-lag-times"]], "get_number_of_observations": [[106, "get-number-of-observations"]], "get_individual_prediction_expression": [[101, "get-individual-prediction-expression"]], "fix_parameters": [[87, "fix-parameters"]], "get_number_of_individuals": [[105, "get-number-of-individuals"]], "create_symbol": [[74, "create-symbol"]], "generate_model_code": [[89, "generate-model-code"]], "get_ids": [[99, "get-ids"]], "get_observation_expression": [[108, "get-observation-expression"]], "get_config_path": [[94, "get-config-path"]], "get_baselines": [[90, "get-baselines"]], "find_clearance_parameters": [[84, "find-clearance-parameters"]], "get_doses": [[97, "get-doses"]], "get_model_covariates": [[104, "get-model-covariates"]], "expand_additional_doses": [[83, "expand-additional-doses"]], "fix_or_unfix_parameters": [[86, "fix-or-unfix-parameters"]], "evaluate_epsilon_gradient": [[77, "evaluate-epsilon-gradient"]], "get_evid": [[98, "get-evid"]], "get_mdv": [[103, "get-mdv"]], "evaluate_population_prediction": [[81, "evaluate-population-prediction"]], "get_individual_parameters": [[100, "get-individual-parameters"]], "get_cmt": [[92, "get-cmt"]], "get_doseid": [[96, "get-doseid"]], "evaluate_expression": [[79, "evaluate-expression"]], "get_bioavailability": [[91, "get-bioavailability"]], "find_volume_parameters": [[85, "find-volume-parameters"]], "drop_dropped_columns": [[76, "drop-dropped-columns"]], "get_omegas": [[110, "get-omegas"]], "evaluate_eta_gradient": [[78, "evaluate-eta-gradient"]], "fix_parameters_to": [[88, "fix-parameters-to"]], "drop_columns": [[75, "drop-columns"]], "get_concentration_parameters_from_data": [[93, "get-concentration-parameters-from-data"]], "get_covariate_baselines": [[95, "get-covariate-baselines"]], "evaluate_individual_prediction": [[80, "evaluate-individual-prediction"]], "ruvsearch": [[273, "ruvsearch"]], "Models": [[273, "models"]], "The RUVsearch results": [[273, "the-ruvsearch-results"]], "Modelsearch": [[265, "modelsearch"]], "The search space": [[265, "the-search-space"]], "Common behaviours between algorithms": [[265, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[265, "feature-combination-exclusions"]], "Exhaustive search": [[265, "exhaustive-search"]], "Exhaustive stepwise search": [[265, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[265, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[265, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[265, "the-modelsearch-results"]], "Distribution of new IOVs": [[259, "distribution-of-new-iovs"]], "Reading modelfit results": [[263, "reading-modelfit-results"]], "Modelfit results": [[263, "modelfit-results"], [262, "modelfit-results"]], "Final OFV": [[263, "final-ofv"]], "Standard errors of parameter estimates": [[263, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[263, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[263, "correlation-matrix"]], "Information Matrix": [[263, "information-matrix"]], "Indiviudal OFV": [[263, "indiviudal-ofv"]], "Predictions": [[263, "predictions"]], "Residuals": [[263, "residuals"]], "Individual estimates": [[263, "individual-estimates"]], "Plots in Pharmpy": [[267, "plots-in-pharmpy"]], "Setting themes": [[267, "setting-themes"]], "Changing axis of plots": [[267, "changing-axis-of-plots"]], "Linearize": [[261, "linearize"]], "The linearize results": [[261, "the-linearize-results"]], "OFVs": [[261, "ofvs"]], "Individual OFVs": [[261, "individual-ofvs"]], "Plugins": [[268, "plugins"]], "Overview of a plugin": [[268, "overview-of-a-plugin"]], "Modeling": [[264, "modeling"]], "Basic modeling": [[264, "basic-modeling"]], "Reading, writing and updating source models": [[264, "reading-writing-and-updating-source-models"]], "Read model from file": [[264, "read-model-from-file"]], "Read model from string": [[264, "read-model-from-string"]], "Getting the model code": [[264, "getting-the-model-code"], [262, "getting-the-model-code"]], "Write model to file": [[264, "write-model-to-file"]], "Fix and unfix parameters": [[264, "fix-and-unfix-parameters"]], "Add parameter": [[264, "add-parameter"]], "PK models and ODE systems": [[264, "pk-models-and-ode-systems"]], "Absorption rate": [[264, "absorption-rate"]], "Bolus absorption": [[264, "bolus-absorption"]], "Zero order": [[264, "zero-order"]], "First order": [[264, "first-order"]], "Sequential zero-order then first-order": [[264, "sequential-zero-order-then-first-order"]], "Absorption delay": [[264, "absorption-delay"]], "Transit compartments": [[264, "transit-compartments"]], "Lag time": [[264, "lag-time"]], "Elimination rate": [[264, "elimination-rate"]], "First-order elimination": [[264, "first-order-elimination"]], "Zero-order elimination": [[264, "zero-order-elimination"]], "Michaelis-Menten elimination": [[264, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[264, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[264, "add-peripheral-compartment"]], "Remove peripheral compartment": [[264, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[264, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[264, "adding-covariate-effects"]], "Transformation of etas": [[264, "transformation-of-etas"]], "Boxcox": [[264, "boxcox"], [272, "boxcox"]], "Approximate t-distribution": [[264, "approximate-t-distribution"]], "John Draper": [[264, "john-draper"]], "Adding new etas": [[264, "adding-new-etas"]], "Adding IIVs": [[264, "adding-iivs"]], "Adding IOVs": [[264, "adding-iovs"]], "Removing etas": [[264, "removing-etas"]], "Remove IIVs": [[264, "remove-iivs"]], "Remove IOVs": [[264, "remove-iovs"]], "The error model": [[264, "the-error-model"]], "Removing the error model": [[264, "removing-the-error-model"]], "Setting an additive error model": [[264, "setting-an-additive-error-model"]], "Setting a proportional error model": [[264, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[264, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[264, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[264, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[264, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[264, "weighted-error-model"]], "dTBS error model": [[264, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[264, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[264, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[264, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[264, "fitting-a-model"]], "Getting results from a PsN run": [[264, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[264, "eta-shrinkage"]], "Individual parameter calculations": [[264, "individual-parameter-calculations"]], "Pharmpy in R": [[278, "pharmpy-in-r"]], "Installing pharmr": [[278, "installing-pharmr"]], "Updating": [[278, "updating"]], "Trouble shooting": [[278, "trouble-shooting"]], "Wrong Python version": [[278, "wrong-python-version"]], "Error importing Pharmpy": [[278, "error-importing-pharmpy"]], "Using pharmr": [[278, "using-pharmr"]], "Gotchas": [[278, "gotchas"]], "The model object": [[278, "the-model-object"]], "List indices": [[278, "list-indices"]], "Dataframes with multiindex": [[278, "dataframes-with-multiindex"]], "Floats and integers": [[278, "floats-and-integers"]], "Single element vectors": [[278, "single-element-vectors"]], "Using the NONMEM plugin": [[266, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[266, "names-of-parameters-and-random-variables"]], "Reading in a model": [[266, "reading-in-a-model"], [262, "reading-in-a-model"]], "New parameters and random variables": [[266, "new-parameters-and-random-variables"]], "Writing a model": [[266, "writing-a-model"], [262, "writing-a-model"]], "User guide": [[277, "user-guide"]], "License": [[260, "license"]], "Logo": [[260, "logo"]], "Copyright": [[260, "copyright"]], "BSD 2-clause License": [[260, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[260, "gnu-lesser-general-public-license"]], "PsN with Pharmpy": [[271, "psn-with-pharmpy"]], "Tools connected to PsN": [[271, "tools-connected-to-psn"]], "Simeval": [[275, "simeval"]], "The simeval results": [[275, "the-simeval-results"]], "Sampled Individual OFVs": [[275, "sampled-individual-ofvs"]], "Individual OFV summary": [[275, "individual-ofv-summary"]], "Individual prediction plot": [[275, "individual-prediction-plot"]], "scm": [[274, "scm"]], "The scm results": [[274, "the-scm-results"]], "Steps": [[274, "steps"]], "OFV Summary": [[274, "ofv-summary"]], "Candidate Summary": [[274, "candidate-summary"]], "Tools": [[276, "tools"]], "Tools in Pharmpy": [[276, "tools-in-pharmpy"]], "Common options": [[276, "common-options"]], "Common features": [[276, "common-features"]], "Tool database": [[276, "tool-database"]], "Running directory": [[276, "running-directory"]], "Metadata": [[276, "metadata"]], "Datasets": [[276, "datasets"]], "Model feature language (MFL)": [[276, "model-feature-language-mfl"]], "Option types": [[276, "option-types"]], "Model features": [[276, "model-features"]], "Symbols": [[276, "symbols"]], "Describe intervals": [[276, "describe-intervals"]], "Redundant descriptions": [[276, "redundant-descriptions"]], "Examples": [[276, "examples"]], "The Pharmpy model": [[262, "the-pharmpy-model"]], "Model name": [[262, "model-name"]], "Model parameters": [[262, "model-parameters"]], "Parameter sets": [[262, "parameter-sets"]], "Random variables": [[262, "random-variables"]], "Model statements": [[262, "model-statements"]], "Updating initial estimates": [[262, "updating-initial-estimates"]], "QA": [[272, "qa"]], "The qa results": [[272, "the-qa-results"]], "Overview": [[272, "overview"]], "Structural bias": [[272, "structural-bias"]], "Fullblock": [[272, "fullblock"]], "Tdist": [[272, "tdist"]], "Residual error": [[272, "residual-error"]], "Project suggestions": [[269, "project-suggestions"]], "Resmod": [[270, "resmod"]], "The resmod results": [[270, "the-resmod-results"]], "Resmod models": [[270, "resmod-models"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "derive() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.derive"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "output_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.output_compartment"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "to_compartmental_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_explicit_system"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "derive() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.derive"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "derive() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.derive"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "derive() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.derive"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "explicitodesystem (class in pharmpy.model)": [[16, "pharmpy.model.ExplicitODESystem"]], "amounts (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.amounts"]], "compartment_names (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.compartment_names"]], "free_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.free_symbols"]], "ics (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.ics"]], "odes (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.odes"]], "rhs_symbols (pharmpy.model.explicitodesystem attribute)": [[16, "pharmpy.model.ExplicitODESystem.rhs_symbols"]], "subs() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.subs"]], "to_compartmental_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.explicitodesystem method)": [[16, "pharmpy.model.ExplicitODESystem.to_explicit_system"]], "infusion (class in pharmpy.model)": [[17, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[17, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.free_symbols"]], "rate (pharmpy.model.infusion attribute)": [[17, "pharmpy.model.Infusion.rate"]], "subs() (pharmpy.model.infusion method)": [[17, "pharmpy.model.Infusion.subs"]], "jointnormaldistribution (class in pharmpy.model)": [[18, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[18, "pharmpy.model.JointNormalDistribution.create"]], "derive() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.derive"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.names"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[18, "pharmpy.model.JointNormalDistribution.subs"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[18, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[19, "pharmpy.model.Model"]], "copy() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.copy"]], "create_model() (pharmpy.model.model static method)": [[19, "pharmpy.model.Model.create_model"]], "datainfo (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dataset"]], "dependent_variable (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.dependent_variable"]], "description (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.initial_individual_estimates"]], "model_code (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.parent_model"]], "random_variables (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.random_variables"]], "statements (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.statements"]], "update_datainfo() (pharmpy.model.model method)": [[19, "pharmpy.model.Model.update_datainfo"]], "value_type (pharmpy.model.model attribute)": [[19, "pharmpy.model.Model.value_type"]], "modelerror": [[20, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[21, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[22, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[23, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[23, "pharmpy.model.NormalDistribution.create"]], "derive() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.derive"]], "evalf() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.free_symbols"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.names"]], "subs() (pharmpy.model.normaldistribution method)": [[23, "pharmpy.model.NormalDistribution.subs"]], "variance (pharmpy.model.normaldistribution attribute)": [[23, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[24, "pharmpy.model.ODESystem"]], "to_compartmental_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.odesystem method)": [[24, "pharmpy.model.ODESystem.to_explicit_system"]], "parameter (class in pharmpy.model)": [[25, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[25, "pharmpy.model.Parameter.create"]], "derive() (pharmpy.model.parameter method)": [[25, "pharmpy.model.Parameter.derive"]], "fix (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.fix"]], "init (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.name"]], "symbol (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.symbol"]], "upper (pharmpy.model.parameter attribute)": [[25, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[26, "pharmpy.model.Parameters"]], "fix (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.fixed"]], "inits (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.nonfixed"]], "set_fix() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[26, "pharmpy.model.Parameters.to_dataframe"]], "upper (pharmpy.model.parameters attribute)": [[26, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[27, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[27, "pharmpy.model.RandomVariables.create"]], "derive() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.derive"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.free_symbols"]], "get_covariance() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "sample() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.subs"]], "unjoin() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[27, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[27, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[28, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[28, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[28, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[29, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[29, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[29, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[30, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.free_symbols"]], "full_expression() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[30, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.subs"]], "to_compartmental_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_compartmental_system"]], "to_explicit_system() (pharmpy.model.statements method)": [[30, "pharmpy.model.Statements.to_explicit_system"]], "variabilityhierarchy (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityHierarchy"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[31, "pharmpy.model.VariabilityHierarchy.names"]], "variabilitylevel (class in pharmpy.model)": [[32, "pharmpy.model.VariabilityLevel"]], "group (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[32, "pharmpy.model.VariabilityLevel.reference"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_inf() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_inf"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_inf() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_inf"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_inf_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_inf_from_corrse"]], "calculate_inf_from_cov() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_inf_from_cov"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_inf() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_inf"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.convert_model"]], "copy_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.copy_model"]], "create_joint_distribution() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_joint_distribution"]], "create_report() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_report"]], "create_rng() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_symbol"]], "drop_columns() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.fix_parameters_to"]], "generate_model_code() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.generate_model_code"]], "get_baselines() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_doses"]], "get_evid() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_individual_prediction_expression"]], "get_lag_times() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_mdv"]], "get_model_covariates() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_unit_of"]], "greekify_model() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.has_first_order_elimination"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_random_effect"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_zero_order_elimination"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.plot_iofv_vs_iofv"]], "print_model_code() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.read_model"]], "read_model_from_database() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.read_model_from_database"]], "read_model_from_string() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.set_dtbs_error_model"]], "set_estimation_step() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_estimates() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_time_varying_error_model"]], "set_transit_compartments() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_zero_order_elimination"]], "simplify_expression() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.split_joint_distribution"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.write_model"]], "create_results() (in module pharmpy.tools)": [[198, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[199, "pharmpy.tools.fit"]], "predict_influential_individuals() (in module pharmpy.tools)": [[200, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[201, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[202, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[203, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[204, "pharmpy.tools.rank_models"]], "read_results() (in module pharmpy.tools)": [[205, "pharmpy.tools.read_results"]], "retrieve_final_model() (in module pharmpy.tools)": [[206, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[207, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[208, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[209, "pharmpy.tools.run_amd"]], "run_covsearch() (in module pharmpy.tools)": [[210, "pharmpy.tools.run_covsearch"]], "run_iivsearch() (in module pharmpy.tools)": [[211, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[212, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[213, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[214, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[215, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[216, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[217, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[218, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[219, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[220, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[221, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[222, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[222, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[223, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[224, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[224, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[224, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[224, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[225, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[225, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[225, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[225, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[225, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[225, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[225, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[226, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[226, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[227, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[227, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[228, "pharmpy.workflows.NullToolDatabase"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[228, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[228, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[229, "pharmpy.workflows.Task"]], "has_input() (pharmpy.workflows.task method)": [[229, "pharmpy.workflows.Task.has_input"]], "tooldatabase (class in pharmpy.workflows)": [[230, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[230, "pharmpy.workflows.ToolDatabase.model_database"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[230, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[230, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[231, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[232, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[233, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[234, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[235, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[236, "pharmpy.workflows.split_common_options"]], "module": [[237, "module-pharmpy.model"], [238, "module-pharmpy.modeling"], [239, "module-pharmpy.tools"], [240, "module-pharmpy.workflows"]], "pharmpy.model": [[237, "module-pharmpy.model"]], "pharmpy.modeling": [[238, "module-pharmpy.modeling"]], "pharmpy.tools": [[239, "module-pharmpy.tools"]], "pharmpy.workflows": [[240, "module-pharmpy.workflows"]], "--algorithm": [[245, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[245, "cmdoption-pharmpy-run-allometry-allometric_variable"], [245, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--categorical": [[245, "cmdoption-pharmpy-run-amd-categorical"]], "--cl_init": [[245, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[245, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[245, "cmdoption-pharmpy-data-print-columns"]], "--continuous": [[245, "cmdoption-pharmpy-run-amd-continuous"]], "--cutoff": [[245, "cmdoption-pharmpy-run-iivsearch-cutoff"], [245, "cmdoption-pharmpy-run-iovsearch-cutoff"], [245, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--distribution": [[245, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[245, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[245, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [245, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[245, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[245, "cmdoption-pharmpy-model-add_iov-eta_names"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[245, "cmdoption-pharmpy-model-add_iov-etas"], [245, "cmdoption-pharmpy-model-boxcox-etas"], [245, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [245, "cmdoption-pharmpy-model-john_draper-etas"], [245, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[245, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[245, "cmdoption-pharmpy-data-anonymize-f"], [245, "cmdoption-pharmpy-data-append-f"], [245, "cmdoption-pharmpy-data-filter-f"], [245, "cmdoption-pharmpy-data-write-f"], [245, "cmdoption-pharmpy-model-absorption_rate-f"], [245, "cmdoption-pharmpy-model-add_cov_effect-f"], [245, "cmdoption-pharmpy-model-add_iiv-f"], [245, "cmdoption-pharmpy-model-add_iov-f"], [245, "cmdoption-pharmpy-model-boxcox-f"], [245, "cmdoption-pharmpy-model-create_joint_distribution-f"], [245, "cmdoption-pharmpy-model-elimination_rate-f"], [245, "cmdoption-pharmpy-model-error-f"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [245, "cmdoption-pharmpy-model-john_draper-f"], [245, "cmdoption-pharmpy-model-peripheral_compartments-f"], [245, "cmdoption-pharmpy-model-power_on_ruv-f"], [245, "cmdoption-pharmpy-model-remove_iiv-f"], [245, "cmdoption-pharmpy-model-remove_iov-f"], [245, "cmdoption-pharmpy-model-tdist-f"], [245, "cmdoption-pharmpy-model-transit_compartments-f"], [245, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[245, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[245, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[245, "cmdoption-pharmpy-data-anonymize-group"], [245, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[245, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[245, "cmdoption-pharmpy-data-anonymize-h"], [245, "cmdoption-pharmpy-data-append-h"], [245, "cmdoption-pharmpy-data-filter-h"], [245, "cmdoption-pharmpy-data-h"], [245, "cmdoption-pharmpy-data-print-h"], [245, "cmdoption-pharmpy-data-resample-h"], [245, "cmdoption-pharmpy-data-write-h"], [245, "cmdoption-pharmpy-h"], [245, "cmdoption-pharmpy-info-h"], [245, "cmdoption-pharmpy-model-absorption_rate-h"], [245, "cmdoption-pharmpy-model-add_cov_effect-h"], [245, "cmdoption-pharmpy-model-add_iiv-h"], [245, "cmdoption-pharmpy-model-add_iov-h"], [245, "cmdoption-pharmpy-model-boxcox-h"], [245, "cmdoption-pharmpy-model-create_joint_distribution-h"], [245, "cmdoption-pharmpy-model-elimination_rate-h"], [245, "cmdoption-pharmpy-model-error-h"], [245, "cmdoption-pharmpy-model-h"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [245, "cmdoption-pharmpy-model-john_draper-h"], [245, "cmdoption-pharmpy-model-peripheral_compartments-h"], [245, "cmdoption-pharmpy-model-power_on_ruv-h"], [245, "cmdoption-pharmpy-model-print-h"], [245, "cmdoption-pharmpy-model-remove_iiv-h"], [245, "cmdoption-pharmpy-model-remove_iov-h"], [245, "cmdoption-pharmpy-model-sample-h"], [245, "cmdoption-pharmpy-model-tdist-h"], [245, "cmdoption-pharmpy-model-transit_compartments-h"], [245, "cmdoption-pharmpy-model-update_inits-h"], [245, "cmdoption-pharmpy-results-bootstrap-h"], [245, "cmdoption-pharmpy-results-cdd-h"], [245, "cmdoption-pharmpy-results-frem-h"], [245, "cmdoption-pharmpy-results-h"], [245, "cmdoption-pharmpy-results-linearize-h"], [245, "cmdoption-pharmpy-results-ofv-h"], [245, "cmdoption-pharmpy-results-print-h"], [245, "cmdoption-pharmpy-results-qa-h"], [245, "cmdoption-pharmpy-results-report-h"], [245, "cmdoption-pharmpy-results-ruvsearch-h"], [245, "cmdoption-pharmpy-results-scm-h"], [245, "cmdoption-pharmpy-results-simeval-h"], [245, "cmdoption-pharmpy-results-summary-h"], [245, "cmdoption-pharmpy-run-allometry-h"], [245, "cmdoption-pharmpy-run-amd-h"], [245, "cmdoption-pharmpy-run-bootstrap-h"], [245, "cmdoption-pharmpy-run-covsearch-h"], [245, "cmdoption-pharmpy-run-estmethod-h"], [245, "cmdoption-pharmpy-run-execute-h"], [245, "cmdoption-pharmpy-run-h"], [245, "cmdoption-pharmpy-run-iivsearch-h"], [245, "cmdoption-pharmpy-run-iovsearch-h"], [245, "cmdoption-pharmpy-run-modelsearch-h"], [245, "cmdoption-pharmpy-run-ruvsearch-h"]], "--iiv_strategy": [[245, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [245, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[245, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[245, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq": [[245, "cmdoption-pharmpy-run-amd-lloq"]], "--lower_bounds": [[245, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[245, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[245, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[245, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[245, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[245, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[245, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[245, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[245, "cmdoption-pharmpy-model-add_cov_effect-operation"], [245, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[245, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[245, "cmdoption-pharmpy-data-anonymize-o"], [245, "cmdoption-pharmpy-data-append-o"], [245, "cmdoption-pharmpy-data-filter-o"], [245, "cmdoption-pharmpy-data-write-o"], [245, "cmdoption-pharmpy-model-absorption_rate-o"], [245, "cmdoption-pharmpy-model-add_cov_effect-o"], [245, "cmdoption-pharmpy-model-add_iiv-o"], [245, "cmdoption-pharmpy-model-add_iov-o"], [245, "cmdoption-pharmpy-model-boxcox-o"], [245, "cmdoption-pharmpy-model-create_joint_distribution-o"], [245, "cmdoption-pharmpy-model-elimination_rate-o"], [245, "cmdoption-pharmpy-model-error-o"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [245, "cmdoption-pharmpy-model-john_draper-o"], [245, "cmdoption-pharmpy-model-peripheral_compartments-o"], [245, "cmdoption-pharmpy-model-power_on_ruv-o"], [245, "cmdoption-pharmpy-model-remove_iiv-o"], [245, "cmdoption-pharmpy-model-remove_iov-o"], [245, "cmdoption-pharmpy-model-tdist-o"], [245, "cmdoption-pharmpy-model-transit_compartments-o"], [245, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[245, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[245, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[245, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[245, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[245, "cmdoption-pharmpy-run-allometry-path"], [245, "cmdoption-pharmpy-run-amd-path"], [245, "cmdoption-pharmpy-run-covsearch-path"], [245, "cmdoption-pharmpy-run-iivsearch-path"], [245, "cmdoption-pharmpy-run-iovsearch-path"], [245, "cmdoption-pharmpy-run-modelsearch-path"], [245, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[245, "cmdoption-pharmpy-run-iivsearch-rank_type"], [245, "cmdoption-pharmpy-run-iovsearch-rank_type"], [245, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[245, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[245, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[245, "cmdoption-pharmpy-data-resample-resamples"]], "--same_eta": [[245, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[245, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[245, "cmdoption-pharmpy-model-sample-samples"], [245, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[245, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[245, "cmdoption-pharmpy-data-resample-seed"], [245, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[245, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[245, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[245, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[245, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[245, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[245, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[245, "cmdoption-pharmpy-version"]], "-f": [[245, "cmdoption-pharmpy-data-anonymize-f"], [245, "cmdoption-pharmpy-data-append-f"], [245, "cmdoption-pharmpy-data-filter-f"], [245, "cmdoption-pharmpy-data-write-f"], [245, "cmdoption-pharmpy-model-absorption_rate-f"], [245, "cmdoption-pharmpy-model-add_cov_effect-f"], [245, "cmdoption-pharmpy-model-add_iiv-f"], [245, "cmdoption-pharmpy-model-add_iov-f"], [245, "cmdoption-pharmpy-model-boxcox-f"], [245, "cmdoption-pharmpy-model-create_joint_distribution-f"], [245, "cmdoption-pharmpy-model-elimination_rate-f"], [245, "cmdoption-pharmpy-model-error-f"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [245, "cmdoption-pharmpy-model-john_draper-f"], [245, "cmdoption-pharmpy-model-peripheral_compartments-f"], [245, "cmdoption-pharmpy-model-power_on_ruv-f"], [245, "cmdoption-pharmpy-model-remove_iiv-f"], [245, "cmdoption-pharmpy-model-remove_iov-f"], [245, "cmdoption-pharmpy-model-tdist-f"], [245, "cmdoption-pharmpy-model-transit_compartments-f"], [245, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[245, "cmdoption-pharmpy-data-anonymize-h"], [245, "cmdoption-pharmpy-data-append-h"], [245, "cmdoption-pharmpy-data-filter-h"], [245, "cmdoption-pharmpy-data-h"], [245, "cmdoption-pharmpy-data-print-h"], [245, "cmdoption-pharmpy-data-resample-h"], [245, "cmdoption-pharmpy-data-write-h"], [245, "cmdoption-pharmpy-h"], [245, "cmdoption-pharmpy-info-h"], [245, "cmdoption-pharmpy-model-absorption_rate-h"], [245, "cmdoption-pharmpy-model-add_cov_effect-h"], [245, "cmdoption-pharmpy-model-add_iiv-h"], [245, "cmdoption-pharmpy-model-add_iov-h"], [245, "cmdoption-pharmpy-model-boxcox-h"], [245, "cmdoption-pharmpy-model-create_joint_distribution-h"], [245, "cmdoption-pharmpy-model-elimination_rate-h"], [245, "cmdoption-pharmpy-model-error-h"], [245, "cmdoption-pharmpy-model-h"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [245, "cmdoption-pharmpy-model-john_draper-h"], [245, "cmdoption-pharmpy-model-peripheral_compartments-h"], [245, "cmdoption-pharmpy-model-power_on_ruv-h"], [245, "cmdoption-pharmpy-model-print-h"], [245, "cmdoption-pharmpy-model-remove_iiv-h"], [245, "cmdoption-pharmpy-model-remove_iov-h"], [245, "cmdoption-pharmpy-model-sample-h"], [245, "cmdoption-pharmpy-model-tdist-h"], [245, "cmdoption-pharmpy-model-transit_compartments-h"], [245, "cmdoption-pharmpy-model-update_inits-h"], [245, "cmdoption-pharmpy-results-bootstrap-h"], [245, "cmdoption-pharmpy-results-cdd-h"], [245, "cmdoption-pharmpy-results-frem-h"], [245, "cmdoption-pharmpy-results-h"], [245, "cmdoption-pharmpy-results-linearize-h"], [245, "cmdoption-pharmpy-results-ofv-h"], [245, "cmdoption-pharmpy-results-print-h"], [245, "cmdoption-pharmpy-results-qa-h"], [245, "cmdoption-pharmpy-results-report-h"], [245, "cmdoption-pharmpy-results-ruvsearch-h"], [245, "cmdoption-pharmpy-results-scm-h"], [245, "cmdoption-pharmpy-results-simeval-h"], [245, "cmdoption-pharmpy-results-summary-h"], [245, "cmdoption-pharmpy-run-allometry-h"], [245, "cmdoption-pharmpy-run-amd-h"], [245, "cmdoption-pharmpy-run-bootstrap-h"], [245, "cmdoption-pharmpy-run-covsearch-h"], [245, "cmdoption-pharmpy-run-estmethod-h"], [245, "cmdoption-pharmpy-run-execute-h"], [245, "cmdoption-pharmpy-run-h"], [245, "cmdoption-pharmpy-run-iivsearch-h"], [245, "cmdoption-pharmpy-run-iovsearch-h"], [245, "cmdoption-pharmpy-run-modelsearch-h"], [245, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[245, "cmdoption-pharmpy-data-anonymize-o"], [245, "cmdoption-pharmpy-data-append-o"], [245, "cmdoption-pharmpy-data-filter-o"], [245, "cmdoption-pharmpy-data-write-o"], [245, "cmdoption-pharmpy-model-absorption_rate-o"], [245, "cmdoption-pharmpy-model-add_cov_effect-o"], [245, "cmdoption-pharmpy-model-add_iiv-o"], [245, "cmdoption-pharmpy-model-add_iov-o"], [245, "cmdoption-pharmpy-model-boxcox-o"], [245, "cmdoption-pharmpy-model-create_joint_distribution-o"], [245, "cmdoption-pharmpy-model-elimination_rate-o"], [245, "cmdoption-pharmpy-model-error-o"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [245, "cmdoption-pharmpy-model-john_draper-o"], [245, "cmdoption-pharmpy-model-peripheral_compartments-o"], [245, "cmdoption-pharmpy-model-power_on_ruv-o"], [245, "cmdoption-pharmpy-model-remove_iiv-o"], [245, "cmdoption-pharmpy-model-remove_iov-o"], [245, "cmdoption-pharmpy-model-tdist-o"], [245, "cmdoption-pharmpy-model-transit_compartments-o"], [245, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[245, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [245, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[245, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[245, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[245, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[245, "cmdoption-pharmpy-data-append-arg-expression"], [245, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[245, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[245, "cmdoption-pharmpy-data-anonymize-arg-file"], [245, "cmdoption-pharmpy-data-append-arg-file"], [245, "cmdoption-pharmpy-data-filter-arg-file"], [245, "cmdoption-pharmpy-data-print-arg-file"], [245, "cmdoption-pharmpy-data-resample-arg-file"], [245, "cmdoption-pharmpy-data-write-arg-file"], [245, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [245, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [245, "cmdoption-pharmpy-model-add_iiv-arg-file"], [245, "cmdoption-pharmpy-model-add_iov-arg-file"], [245, "cmdoption-pharmpy-model-boxcox-arg-file"], [245, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [245, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [245, "cmdoption-pharmpy-model-error-arg-file"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [245, "cmdoption-pharmpy-model-john_draper-arg-file"], [245, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [245, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [245, "cmdoption-pharmpy-model-print-arg-file"], [245, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [245, "cmdoption-pharmpy-model-remove_iov-arg-file"], [245, "cmdoption-pharmpy-model-sample-arg-file"], [245, "cmdoption-pharmpy-model-tdist-arg-file"], [245, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [245, "cmdoption-pharmpy-model-update_inits-arg-file"], [245, "cmdoption-pharmpy-results-ofv-arg-file"], [245, "cmdoption-pharmpy-results-print-arg-file"], [245, "cmdoption-pharmpy-results-summary-arg-file"], [245, "cmdoption-pharmpy-run-allometry-arg-file"], [245, "cmdoption-pharmpy-run-bootstrap-arg-file"], [245, "cmdoption-pharmpy-run-covsearch-arg-file"], [245, "cmdoption-pharmpy-run-estmethod-arg-file"], [245, "cmdoption-pharmpy-run-execute-arg-file"], [245, "cmdoption-pharmpy-run-iivsearch-arg-file"], [245, "cmdoption-pharmpy-run-iovsearch-arg-file"], [245, "cmdoption-pharmpy-run-modelsearch-arg-file"], [245, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[245, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[245, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[245, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [245, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[245, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[245, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [245, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[245, "cmdoption-pharmpy-h"], [245, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[245, "cmdoption-pharmpy-data-h"]], "pharmpy-data-anonymize command line option": [[245, "cmdoption-pharmpy-data-anonymize-arg-file"], [245, "cmdoption-pharmpy-data-anonymize-f"], [245, "cmdoption-pharmpy-data-anonymize-group"], [245, "cmdoption-pharmpy-data-anonymize-h"], [245, "cmdoption-pharmpy-data-anonymize-o"]], "pharmpy-data-append command line option": [[245, "cmdoption-pharmpy-data-append-arg-expression"], [245, "cmdoption-pharmpy-data-append-arg-file"], [245, "cmdoption-pharmpy-data-append-f"], [245, "cmdoption-pharmpy-data-append-h"], [245, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-filter command line option": [[245, "cmdoption-pharmpy-data-filter-arg-expressions"], [245, "cmdoption-pharmpy-data-filter-arg-file"], [245, "cmdoption-pharmpy-data-filter-f"], [245, "cmdoption-pharmpy-data-filter-h"], [245, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[245, "cmdoption-pharmpy-data-print-arg-file"], [245, "cmdoption-pharmpy-data-print-columns"], [245, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[245, "cmdoption-pharmpy-data-resample-arg-file"], [245, "cmdoption-pharmpy-data-resample-group"], [245, "cmdoption-pharmpy-data-resample-h"], [245, "cmdoption-pharmpy-data-resample-replace"], [245, "cmdoption-pharmpy-data-resample-resamples"], [245, "cmdoption-pharmpy-data-resample-sample_size"], [245, "cmdoption-pharmpy-data-resample-seed"], [245, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[245, "cmdoption-pharmpy-data-write-arg-file"], [245, "cmdoption-pharmpy-data-write-f"], [245, "cmdoption-pharmpy-data-write-h"], [245, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[245, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[245, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[245, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [245, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [245, "cmdoption-pharmpy-model-absorption_rate-f"], [245, "cmdoption-pharmpy-model-absorption_rate-h"], [245, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[245, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [245, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [245, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [245, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [245, "cmdoption-pharmpy-model-add_cov_effect-f"], [245, "cmdoption-pharmpy-model-add_cov_effect-h"], [245, "cmdoption-pharmpy-model-add_cov_effect-o"], [245, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[245, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [245, "cmdoption-pharmpy-model-add_iiv-arg-file"], [245, "cmdoption-pharmpy-model-add_iiv-arg-param"], [245, "cmdoption-pharmpy-model-add_iiv-eta_name"], [245, "cmdoption-pharmpy-model-add_iiv-f"], [245, "cmdoption-pharmpy-model-add_iiv-h"], [245, "cmdoption-pharmpy-model-add_iiv-o"], [245, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[245, "cmdoption-pharmpy-model-add_iov-arg-file"], [245, "cmdoption-pharmpy-model-add_iov-arg-occ"], [245, "cmdoption-pharmpy-model-add_iov-eta_names"], [245, "cmdoption-pharmpy-model-add_iov-etas"], [245, "cmdoption-pharmpy-model-add_iov-f"], [245, "cmdoption-pharmpy-model-add_iov-h"], [245, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[245, "cmdoption-pharmpy-model-boxcox-arg-file"], [245, "cmdoption-pharmpy-model-boxcox-etas"], [245, "cmdoption-pharmpy-model-boxcox-f"], [245, "cmdoption-pharmpy-model-boxcox-h"], [245, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[245, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [245, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [245, "cmdoption-pharmpy-model-create_joint_distribution-f"], [245, "cmdoption-pharmpy-model-create_joint_distribution-h"], [245, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[245, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [245, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [245, "cmdoption-pharmpy-model-elimination_rate-f"], [245, "cmdoption-pharmpy-model-elimination_rate-h"], [245, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[245, "cmdoption-pharmpy-model-error-arg-error_type"], [245, "cmdoption-pharmpy-model-error-arg-file"], [245, "cmdoption-pharmpy-model-error-f"], [245, "cmdoption-pharmpy-model-error-h"], [245, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[245, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [245, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[245, "cmdoption-pharmpy-model-john_draper-arg-file"], [245, "cmdoption-pharmpy-model-john_draper-etas"], [245, "cmdoption-pharmpy-model-john_draper-f"], [245, "cmdoption-pharmpy-model-john_draper-h"], [245, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[245, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [245, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [245, "cmdoption-pharmpy-model-peripheral_compartments-f"], [245, "cmdoption-pharmpy-model-peripheral_compartments-h"], [245, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[245, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [245, "cmdoption-pharmpy-model-power_on_ruv-eps"], [245, "cmdoption-pharmpy-model-power_on_ruv-f"], [245, "cmdoption-pharmpy-model-power_on_ruv-h"], [245, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[245, "cmdoption-pharmpy-model-print-arg-file"], [245, "cmdoption-pharmpy-model-print-explicit-odes"], [245, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[245, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [245, "cmdoption-pharmpy-model-remove_iiv-f"], [245, "cmdoption-pharmpy-model-remove_iiv-h"], [245, "cmdoption-pharmpy-model-remove_iiv-o"], [245, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[245, "cmdoption-pharmpy-model-remove_iov-arg-file"], [245, "cmdoption-pharmpy-model-remove_iov-f"], [245, "cmdoption-pharmpy-model-remove_iov-h"], [245, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[245, "cmdoption-pharmpy-model-sample-arg-file"], [245, "cmdoption-pharmpy-model-sample-h"], [245, "cmdoption-pharmpy-model-sample-samples"], [245, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[245, "cmdoption-pharmpy-model-tdist-arg-file"], [245, "cmdoption-pharmpy-model-tdist-etas"], [245, "cmdoption-pharmpy-model-tdist-f"], [245, "cmdoption-pharmpy-model-tdist-h"], [245, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[245, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [245, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [245, "cmdoption-pharmpy-model-transit_compartments-f"], [245, "cmdoption-pharmpy-model-transit_compartments-h"], [245, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[245, "cmdoption-pharmpy-model-update_inits-arg-file"], [245, "cmdoption-pharmpy-model-update_inits-f"], [245, "cmdoption-pharmpy-model-update_inits-h"], [245, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[245, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[245, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [245, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[245, "cmdoption-pharmpy-results-cdd-arg-psn"], [245, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[245, "cmdoption-pharmpy-results-frem-arg-psn"], [245, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [245, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [245, "cmdoption-pharmpy-results-frem-h"], [245, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[245, "cmdoption-pharmpy-results-linearize-arg-psn"], [245, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[245, "cmdoption-pharmpy-results-ofv-arg-file"], [245, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[245, "cmdoption-pharmpy-results-print-arg-file"], [245, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[245, "cmdoption-pharmpy-results-qa-arg-psn"], [245, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[245, "cmdoption-pharmpy-results-report-arg-psn"], [245, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[245, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [245, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[245, "cmdoption-pharmpy-results-scm-arg-psn"], [245, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[245, "cmdoption-pharmpy-results-simeval-arg-psn"], [245, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[245, "cmdoption-pharmpy-results-summary-arg-file"], [245, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[245, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[245, "cmdoption-pharmpy-run-allometry-allometric_variable"], [245, "cmdoption-pharmpy-run-allometry-arg-file"], [245, "cmdoption-pharmpy-run-allometry-h"], [245, "cmdoption-pharmpy-run-allometry-initials"], [245, "cmdoption-pharmpy-run-allometry-lower_bounds"], [245, "cmdoption-pharmpy-run-allometry-non_fixed"], [245, "cmdoption-pharmpy-run-allometry-parameters"], [245, "cmdoption-pharmpy-run-allometry-path"], [245, "cmdoption-pharmpy-run-allometry-reference_value"], [245, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[245, "cmdoption-pharmpy-run-amd-allometric_variable"], [245, "cmdoption-pharmpy-run-amd-arg-input_path"], [245, "cmdoption-pharmpy-run-amd-categorical"], [245, "cmdoption-pharmpy-run-amd-cl_init"], [245, "cmdoption-pharmpy-run-amd-continuous"], [245, "cmdoption-pharmpy-run-amd-h"], [245, "cmdoption-pharmpy-run-amd-lloq"], [245, "cmdoption-pharmpy-run-amd-mat_init"], [245, "cmdoption-pharmpy-run-amd-modeltype"], [245, "cmdoption-pharmpy-run-amd-occasion"], [245, "cmdoption-pharmpy-run-amd-order"], [245, "cmdoption-pharmpy-run-amd-path"], [245, "cmdoption-pharmpy-run-amd-search_space"], [245, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[245, "cmdoption-pharmpy-run-bootstrap-arg-file"], [245, "cmdoption-pharmpy-run-bootstrap-h"], [245, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[245, "cmdoption-pharmpy-run-covsearch-algorithm"], [245, "cmdoption-pharmpy-run-covsearch-arg-file"], [245, "cmdoption-pharmpy-run-covsearch-effects"], [245, "cmdoption-pharmpy-run-covsearch-h"], [245, "cmdoption-pharmpy-run-covsearch-max_steps"], [245, "cmdoption-pharmpy-run-covsearch-p_backward"], [245, "cmdoption-pharmpy-run-covsearch-p_forward"], [245, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[245, "cmdoption-pharmpy-run-estmethod-arg-file"], [245, "cmdoption-pharmpy-run-estmethod-h"], [245, "cmdoption-pharmpy-run-estmethod-methods"], [245, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[245, "cmdoption-pharmpy-run-execute-arg-file"], [245, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[245, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [245, "cmdoption-pharmpy-run-iivsearch-arg-file"], [245, "cmdoption-pharmpy-run-iivsearch-cutoff"], [245, "cmdoption-pharmpy-run-iivsearch-h"], [245, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [245, "cmdoption-pharmpy-run-iivsearch-path"], [245, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[245, "cmdoption-pharmpy-run-iovsearch-arg-file"], [245, "cmdoption-pharmpy-run-iovsearch-column"], [245, "cmdoption-pharmpy-run-iovsearch-cutoff"], [245, "cmdoption-pharmpy-run-iovsearch-distribution"], [245, "cmdoption-pharmpy-run-iovsearch-h"], [245, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [245, "cmdoption-pharmpy-run-iovsearch-path"], [245, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[245, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [245, "cmdoption-pharmpy-run-modelsearch-arg-file"], [245, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [245, "cmdoption-pharmpy-run-modelsearch-cutoff"], [245, "cmdoption-pharmpy-run-modelsearch-h"], [245, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [245, "cmdoption-pharmpy-run-modelsearch-path"], [245, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[245, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [245, "cmdoption-pharmpy-run-ruvsearch-groups"], [245, "cmdoption-pharmpy-run-ruvsearch-h"], [245, "cmdoption-pharmpy-run-ruvsearch-p_value"], [245, "cmdoption-pharmpy-run-ruvsearch-path"], [245, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[245, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [245, "cmdoption-pharmpy-results-cdd-arg-psn"], [245, "cmdoption-pharmpy-results-frem-arg-psn"], [245, "cmdoption-pharmpy-results-linearize-arg-psn"], [245, "cmdoption-pharmpy-results-qa-arg-psn"], [245, "cmdoption-pharmpy-results-report-arg-psn"], [245, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [245, "cmdoption-pharmpy-results-scm-arg-psn"], [245, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[245, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [245, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})