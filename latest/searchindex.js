Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.SimulationStep", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_cmt", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bin_observations", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_central_volume_and_clearance", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_covariates", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_dv_vs_pred", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.replace_non_random_rvs", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_baseline_effect", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_simulation", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.is_strictness_fulfilled", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_retries", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.ModelEntry", "api/pharmpy.workflows.ModelfitResults", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Results", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "common_features", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "drug_metabolite", "estmethod", "frem", "general", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "mfl", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "pkpd", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "retries", "ruvsearch", "scm", "simeval", "strictness", "structsearch", "tmdd", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.SimulationStep.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_cmt.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bin_observations.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_central_volume_and_clearance.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_covariates.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_dv_vs_pred.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.replace_non_random_rvs.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_baseline_effect.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_simulation.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.is_strictness_fulfilled.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_retries.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.ModelEntry.rst", "api/pharmpy.workflows.ModelfitResults.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Results.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "common_features.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "drug_metabolite.rst", "estmethod.rst", "frem.rst", "general.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "mfl.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "pkpd.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "retries.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "strictness.rst", "structsearch.rst", "tmdd.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "SimulationStep", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_cmt", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bin_observations", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_central_volume_and_clearance", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_covariates", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_abs_cwres_vs_ipred", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_dv_vs_pred", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "replace_non_random_rvs", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_baseline_effect", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_simulation", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "is_strictness_fulfilled", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_retries", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "ModelEntry", "ModelfitResults", "NullModelDatabase", "NullToolDatabase", "Results", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "Command line interface", "Pharmpy Community Code of Conduct", "Common features", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Dataset", "Design principles", "Documentation for developers", "Drug metabolite", "Estmethod", "FREM", "General", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "Model feature language (MFL)", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "PKPD", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "Retries", "ruvsearch", "scm", "Simeval", "Strictness", "Structsearch", "TMDD", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 23, 24, 25, 28, 30, 35, 60, 61, 75, 80, 84, 85, 86, 87, 89, 90, 91, 92, 99, 103, 111, 114, 120, 121, 122, 125, 131, 135, 142, 146, 147, 155, 178, 188, 193, 195, 216, 229, 231, 235, 242, 269, 276, 280, 284, 286, 287, 288, 304, 305, 307, 308, 309, 310, 311, 313, 315, 316, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 340, 341, 342, 343, 345, 346, 347, 349, 350], "section": [0, 309, 310, 313, 326, 329, 340, 348], "i": [0, 1, 2, 6, 8, 9, 14, 18, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 53, 55, 62, 63, 72, 74, 75, 76, 79, 80, 82, 84, 86, 87, 89, 90, 91, 99, 100, 103, 106, 110, 111, 113, 115, 119, 120, 121, 122, 137, 138, 139, 144, 145, 150, 156, 157, 159, 162, 163, 180, 181, 185, 189, 190, 191, 193, 197, 198, 199, 200, 201, 202, 204, 205, 207, 210, 211, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 230, 231, 232, 233, 234, 240, 242, 244, 245, 249, 250, 252, 254, 256, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 278, 280, 284, 285, 287, 288, 289, 294, 303, 304, 305, 307, 308, 309, 310, 311, 313, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 350], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 254, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 305, 309, 323, 326, 331, 336, 337, 342, 348], "The": [0, 2, 3, 6, 8, 9, 10, 14, 18, 23, 24, 25, 28, 33, 36, 40, 42, 44, 47, 52, 63, 71, 79, 82, 86, 87, 88, 89, 90, 91, 107, 113, 130, 135, 138, 139, 150, 151, 153, 173, 189, 193, 195, 205, 208, 216, 227, 231, 246, 249, 259, 263, 265, 266, 271, 272, 273, 276, 286, 305, 307, 308, 309, 311, 312, 313, 315, 322, 325, 326, 328, 330, 331, 333, 334, 336, 337, 345, 347, 348, 349, 350], "inform": [0, 1, 2, 6, 8, 135, 231, 263, 305, 307, 309, 313, 315, 316, 319, 321, 323, 324, 325, 326, 329, 332, 334, 337, 341, 342, 343, 346, 347, 349], "intend": [0, 309, 326, 329], "non": [0, 24, 74, 79, 88, 103, 230, 305, 315, 316, 320, 326, 328, 329, 331, 337, 345], "hard": [0, 337], "find": [0, 8, 28, 53, 94, 95, 113, 135, 188, 261, 278, 305, 324, 326, 341, 346, 347, 349, 350], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 289, 311, 313, 315, 319, 322, 323, 325, 326, 329, 330, 331, 332, 334, 341, 342, 346, 347], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 309, 312, 313, 314, 315, 319, 320, 321, 322, 323, 325, 326, 327, 330, 331, 332, 333, 334, 337, 338, 340, 341, 342, 343, 344, 346, 347, 349], "develop": [0, 263, 305, 326, 336, 337, 348, 350], "remov": [0, 2, 9, 25, 28, 84, 120, 121, 122, 159, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 205, 209, 223, 236, 238, 240, 263, 304, 305, 307, 313, 316, 323, 325, 326, 333], "row": [0, 2, 24, 86, 87, 93, 100, 104, 106, 159, 190, 191, 217, 231, 277, 303, 305, 307, 313, 315, 320, 330, 331, 341, 343], "split": [0, 79, 230, 298, 305, 307, 329, 348], "drop": [0, 2, 6, 18, 84, 85, 237, 305, 337, 343], "column": [0, 2, 6, 8, 10, 18, 24, 30, 32, 35, 42, 50, 63, 82, 84, 85, 86, 87, 88, 92, 93, 99, 103, 104, 106, 111, 159, 163, 168, 172, 183, 189, 190, 196, 199, 208, 217, 220, 231, 235, 237, 252, 253, 254, 263, 268, 276, 277, 303, 305, 307, 309, 313, 315, 320, 325, 329, 330, 331, 341, 343], "error": [0, 2, 11, 19, 20, 23, 25, 28, 56, 57, 58, 59, 63, 66, 67, 68, 69, 70, 133, 138, 139, 150, 153, 171, 178, 193, 195, 215, 216, 220, 224, 231, 243, 272, 275, 278, 283, 286, 303, 305, 313, 319, 323, 325, 332, 333, 341, 342, 343, 345, 348], "handl": [0, 2, 3, 92, 229, 231, 305, 315, 316, 320, 337], "valid": [0, 2, 25, 110, 192, 263, 305, 326], "some": [0, 2, 8, 10, 66, 79, 178, 188, 193, 231, 282, 303, 305, 307, 309, 311, 313, 315, 326, 327, 331, 332, 336, 337, 342, 348], "rule": [0, 72, 326], "These": [0, 309, 311, 316, 320, 326, 327, 331, 336, 337, 347], "were": [0, 25, 28, 275, 303, 304, 305, 309, 315, 319, 320, 326, 330, 332, 350], "test": [0, 2, 55, 140, 157, 265, 266, 268, 270, 272, 273, 305, 307, 312, 313, 318, 319, 322, 323, 325, 328, 330, 332, 334, 337, 342, 346], "7": [0, 2, 36, 56, 58, 59, 64, 68, 69, 87, 93, 100, 106, 122, 126, 159, 217, 254, 303, 304, 313, 315, 320, 323, 325, 326, 327, 330, 331, 334, 338, 340, 342, 343, 344, 347], "4": [0, 1, 2, 6, 56, 58, 59, 64, 68, 69, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 122, 159, 168, 217, 234, 254, 272, 278, 303, 304, 313, 314, 315, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 334, 338, 340, 341, 342, 343, 344, 345, 347], "3": [0, 2, 6, 28, 56, 57, 58, 59, 64, 67, 68, 69, 70, 73, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 109, 112, 122, 126, 159, 168, 171, 185, 190, 191, 192, 217, 222, 231, 232, 233, 234, 252, 253, 254, 272, 277, 303, 304, 313, 314, 315, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 338, 340, 341, 342, 343, 344, 347, 350], "delimet": 0, "between": [0, 8, 9, 25, 32, 79, 99, 231, 276, 286, 294, 303, 304, 305, 307, 319, 320, 325, 326, 333, 337, 340, 342], "comma": [0, 307, 328], "space": [0, 71, 263, 270, 273, 305, 307, 309, 313, 328, 341, 348], "tab": [0, 171, 305, 331, 335], "befor": [0, 28, 191, 192, 241, 305, 307, 313, 327, 341], "after": [0, 2, 6, 28, 120, 121, 122, 220, 261, 275, 278, 282, 304, 305, 307, 314, 315, 320, 326, 327, 329, 332, 337, 338, 340, 343, 344, 350], "ar": [0, 2, 3, 4, 6, 7, 8, 14, 24, 25, 28, 37, 38, 39, 42, 48, 63, 77, 79, 82, 103, 104, 119, 138, 139, 150, 160, 180, 181, 183, 186, 188, 192, 194, 195, 197, 200, 201, 215, 221, 230, 231, 235, 242, 250, 251, 256, 263, 265, 269, 280, 282, 285, 303, 305, 307, 308, 309, 311, 313, 315, 316, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 341, 343, 345, 346, 347, 348, 350], "give": [0, 24, 113, 119, 162, 192, 215, 280, 284, 287, 303, 305, 307, 320, 325, 326, 329, 341, 343], "sic": 0, "begin": [0, 320, 329, 331], "end": [0, 38, 53, 309, 320, 326, 329, 331], "insert": [0, 293, 305], "each": [0, 2, 6, 8, 25, 33, 35, 36, 62, 63, 64, 86, 87, 88, 89, 90, 91, 100, 106, 108, 122, 161, 168, 169, 183, 189, 192, 202, 204, 215, 217, 282, 286, 303, 304, 307, 309, 310, 313, 315, 316, 318, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 347, 350], "can": [0, 1, 2, 6, 10, 18, 24, 25, 28, 34, 35, 40, 55, 63, 71, 80, 88, 135, 189, 229, 231, 249, 261, 266, 269, 282, 285, 287, 288, 303, 304, 305, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 340, 341, 342, 345, 346, 347, 348, 349, 350], "onli": [0, 2, 3, 8, 10, 14, 25, 36, 60, 61, 72, 75, 84, 86, 87, 89, 90, 91, 93, 110, 113, 114, 125, 131, 138, 139, 150, 161, 189, 193, 195, 202, 204, 215, 216, 217, 220, 221, 229, 231, 241, 256, 269, 272, 273, 278, 285, 294, 305, 307, 308, 309, 313, 325, 326, 328, 329, 332, 334, 336, 341, 346, 347, 348], "numer": [0, 6, 29, 86, 87, 89, 90, 303, 305, 315, 337, 345], "e": [0, 2, 6, 14, 18, 25, 37, 39, 55, 75, 81, 120, 121, 122, 162, 181, 194, 197, 198, 221, 303, 305, 311, 315, 319, 320, 323, 325, 326, 328, 329, 331, 332, 333, 334, 337, 342, 345, 346, 347], "other": [0, 7, 9, 18, 25, 28, 44, 76, 169, 269, 293, 298, 303, 305, 308, 311, 316, 323, 326, 337], "charact": [0, 10, 315], "than": [0, 23, 24, 305, 323, 326, 332, 345], "ee": 0, "0123456789": 0, "allow": [0, 2, 6, 14, 25, 36, 221, 256, 263, 271, 280, 281, 284, 287, 297, 305, 307, 309, 313, 326, 328, 329, 332, 337, 341, 345, 346, 347, 348], "except": [0, 11, 12, 19, 20, 21, 39, 63, 189, 231, 305, 326], "ii": [0, 6], "datx": [0, 305], "fortran": 0, "short": [0, 311, 326], "form": [0, 25, 189, 305, 326], "exponenti": [0, 36, 39, 48, 204, 307, 313, 320], "notat": 0, "2": [0, 1, 2, 6, 18, 28, 33, 36, 38, 43, 47, 49, 51, 54, 55, 56, 57, 58, 59, 64, 67, 68, 69, 70, 74, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 112, 122, 126, 159, 168, 171, 185, 190, 191, 192, 193, 195, 202, 206, 210, 211, 214, 216, 217, 218, 221, 222, 225, 231, 233, 234, 254, 262, 272, 276, 303, 304, 307, 311, 313, 314, 315, 318, 319, 320, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 347], "1": [0, 1, 2, 5, 6, 7, 8, 14, 16, 17, 18, 22, 24, 25, 26, 28, 33, 34, 36, 37, 38, 39, 40, 44, 47, 49, 52, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 70, 75, 77, 82, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 109, 110, 112, 122, 126, 134, 137, 159, 160, 161, 162, 163, 168, 171, 175, 185, 189, 190, 191, 192, 197, 201, 202, 203, 204, 207, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 225, 226, 229, 231, 232, 233, 234, 242, 254, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 276, 303, 304, 307, 309, 310, 311, 313, 314, 315, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350], "mean": [0, 2, 13, 17, 18, 22, 63, 66, 77, 162, 190, 191, 263, 280, 284, 303, 304, 305, 307, 309, 320, 323, 326, 329, 330, 331, 332, 334, 337, 340, 344, 345, 346], "2e": 0, "2e1": 0, "A": [0, 2, 5, 8, 15, 17, 18, 23, 24, 25, 28, 30, 52, 63, 65, 66, 71, 82, 83, 88, 94, 95, 113, 119, 127, 128, 129, 130, 132, 133, 134, 135, 163, 168, 173, 188, 189, 190, 191, 193, 195, 206, 209, 216, 220, 223, 249, 250, 260, 269, 272, 275, 278, 280, 284, 285, 286, 287, 294, 303, 304, 306, 307, 311, 312, 315, 316, 318, 323, 325, 326, 327, 328, 329, 331, 332, 336, 337, 341, 342, 343, 345, 348], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 83, 281, 283, 289, 298, 326, 331, 347], "instead": [0, 2, 9, 47, 72, 88, 119, 214, 231, 271, 280, 304, 305, 307, 315, 316, 318, 319, 320, 326, 337, 341], "lone": 0, "an": [0, 2, 4, 6, 8, 9, 10, 15, 16, 18, 24, 25, 28, 31, 32, 33, 35, 37, 40, 41, 42, 51, 52, 55, 71, 99, 103, 108, 111, 138, 139, 140, 144, 145, 148, 150, 153, 157, 160, 162, 177, 189, 193, 197, 205, 231, 233, 246, 249, 251, 252, 253, 254, 275, 276, 278, 281, 283, 305, 307, 309, 310, 311, 313, 315, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 337, 340, 341, 343, 344, 345, 346, 347, 348, 350], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 23, 24, 25, 28, 33, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 51, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 79, 80, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 100, 104, 106, 108, 109, 115, 126, 127, 133, 134, 136, 137, 159, 160, 161, 162, 171, 175, 179, 183, 184, 185, 188, 190, 191, 192, 195, 197, 198, 200, 201, 204, 205, 206, 208, 209, 215, 216, 217, 219, 220, 223, 230, 231, 232, 233, 236, 239, 242, 251, 253, 254, 262, 263, 265, 267, 268, 270, 271, 272, 273, 277, 278, 286, 289, 303, 304, 307, 309, 311, 313, 315, 318, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350], "dot": 0, "most": [0, 6, 36, 229, 307, 316, 326, 340, 341], "24": [0, 2, 64, 93, 100, 106, 109, 122, 126, 159, 217, 254, 303, 304, 313, 315, 319, 323, 325, 327, 330, 331, 332, 340, 344], "long": [0, 305, 326, 337], "count": [0, 108, 231, 277, 284, 305, 332, 347], "delimit": 0, "wa": [0, 276, 286, 289, 303, 305, 312, 326, 327, 342, 343, 345], "eaten": 0, "empti": [0, 2, 18, 25, 275, 310, 341], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 25, 28, 32, 34, 35, 43, 47, 53, 55, 72, 79, 84, 96, 97, 98, 99, 115, 126, 185, 191, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 236, 238, 239, 241, 242, 256, 289, 305, 307, 308, 310, 315, 318, 319, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 346, 347, 348, 350], "As": [0, 2, 25, 308, 309, 328, 331, 332, 333, 341], "contain": [0, 2, 3, 25, 52, 82, 88, 164, 165, 166, 167, 250, 252, 253, 254, 303, 304, 307, 309, 313, 314, 315, 316, 319, 323, 325, 326, 329, 330, 332, 334, 338, 340, 341, 342, 343, 344, 346, 347], "drope": 0, "input": [0, 7, 8, 9, 10, 25, 28, 36, 37, 39, 42, 69, 70, 80, 85, 136, 140, 141, 151, 171, 175, 191, 204, 227, 249, 250, 263, 271, 276, 277, 290, 293, 305, 307, 313, 315, 318, 319, 323, 325, 331, 332, 333, 334, 337, 341, 342, 346, 347, 348], "ani": [0, 2, 6, 9, 18, 51, 63, 74, 113, 186, 261, 266, 277, 290, 294, 309, 311, 313, 315, 322, 323, 325, 326, 328, 329, 330, 331, 333, 337, 341, 347, 348, 350], "limit": [0, 2, 6, 73, 183, 208, 215, 231, 263, 305, 307, 325, 326, 335, 341], "length": [0, 52, 88, 89, 90, 91, 108, 109, 126, 305, 331], "If": [0, 2, 8, 10, 18, 28, 33, 34, 36, 44, 47, 53, 55, 63, 78, 79, 80, 88, 99, 103, 108, 110, 111, 149, 180, 181, 185, 189, 191, 202, 204, 205, 214, 215, 221, 227, 230, 231, 232, 233, 234, 235, 242, 256, 263, 267, 270, 278, 293, 303, 307, 309, 311, 313, 315, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 337, 341, 345, 347, 348, 350], "ha": [0, 2, 8, 18, 25, 40, 79, 88, 100, 106, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 303, 305, 307, 308, 309, 311, 313, 315, 316, 319, 323, 325, 326, 329, 331, 332, 334, 339, 341, 342, 343, 345, 347, 350], "more": [0, 2, 8, 24, 231, 262, 265, 267, 268, 270, 272, 273, 305, 307, 309, 313, 319, 322, 324, 326, 329, 331, 332, 334, 337, 340, 346, 349], "extra": [0, 18, 273, 305, 346, 347], "consid": [0, 103, 267, 268, 270, 305, 313, 316, 319, 323, 325, 326, 332, 342], "start": [0, 2, 8, 38, 51, 108, 163, 179, 189, 267, 273, 305, 307, 309, 311, 313, 319, 320, 325, 326, 329, 330, 331, 332, 334, 341, 342, 343, 346, 347, 348, 350], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 289, 294, 303, 305, 307, 308, 309, 311, 313, 316, 319, 320, 322, 323, 325, 326, 329, 330, 331, 332, 333, 334, 335, 337, 341, 342, 344, 345, 346, 347, 348, 349, 350], "been": [0, 2, 6, 156, 308, 309, 313, 315, 326, 331, 341, 350], "provid": [0, 25, 191, 215, 307, 308, 312, 313, 315, 323, 325, 326, 332, 350], "default": [0, 1, 6, 7, 9, 14, 18, 23, 25, 30, 33, 36, 38, 39, 40, 46, 48, 53, 55, 62, 79, 80, 84, 110, 113, 115, 119, 128, 130, 137, 138, 139, 150, 151, 180, 181, 189, 190, 191, 193, 195, 200, 201, 204, 205, 215, 216, 220, 230, 232, 233, 234, 244, 245, 248, 249, 256, 262, 263, 265, 267, 268, 270, 271, 273, 278, 280, 284, 287, 297, 302, 305, 307, 310, 313, 318, 323, 325, 328, 329, 331, 332, 333, 334, 335, 341, 342, 345, 346, 347, 350], "where": [0, 2, 7, 33, 47, 231, 256, 261, 303, 304, 305, 308, 309, 310, 313, 315, 319, 320, 325, 326, 331, 332, 333, 337, 341, 345, 350], "rexex": 0, "": [0, 8, 10, 14, 71, 107, 175, 305, 307, 313, 315, 318, 320, 326, 333, 338, 341], "za": 0, "z": [0, 33], "either": [0, 2, 39, 40, 82, 110, 263, 270, 271, 307, 323, 326, 328, 329, 331, 334, 345, 346, 350], "surround": 0, "two": [0, 2, 8, 9, 25, 28, 82, 169, 303, 305, 306, 307, 309, 313, 318, 326, 328, 337, 342, 347, 348], "By": [0, 14, 18, 25, 113, 138, 139, 150, 325, 326, 329], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 25, 28, 53, 71, 163, 177, 190, 231, 246, 267, 268, 269, 270, 271, 272, 284, 303, 304, 305, 307, 309, 310, 313, 319, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 346, 347, 350], "interpret": [0, 305, 326, 350], "us": [0, 1, 6, 8, 9, 10, 13, 14, 15, 18, 24, 25, 28, 32, 33, 42, 45, 52, 55, 63, 71, 79, 80, 82, 86, 87, 88, 89, 90, 91, 99, 107, 113, 119, 126, 137, 162, 163, 186, 189, 190, 191, 192, 193, 195, 202, 204, 213, 215, 216, 224, 231, 235, 241, 243, 244, 248, 252, 253, 254, 256, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 281, 282, 284, 287, 288, 289, 291, 293, 297, 303, 304, 305, 307, 309, 310, 313, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 340, 341, 342, 343, 347, 348, 349], "chang": [0, 9, 18, 24, 25, 38, 82, 200, 202, 206, 207, 209, 215, 218, 219, 223, 225, 231, 239, 307, 311, 313, 326, 329, 331, 332, 333, 341, 342, 350], "howev": [0, 2, 8, 323, 326, 328, 332, 333, 341, 350], "one": [0, 2, 6, 8, 9, 10, 14, 22, 23, 24, 25, 26, 36, 44, 75, 84, 88, 97, 138, 139, 150, 172, 189, 191, 199, 202, 204, 224, 231, 235, 237, 238, 243, 248, 269, 272, 275, 277, 280, 284, 286, 287, 291, 305, 307, 308, 309, 311, 315, 316, 318, 319, 320, 325, 326, 328, 329, 331, 332, 333, 337, 341, 345, 347], "legal": [0, 326], "ones": [0, 9, 113, 313, 320], "9": [0, 6, 47, 52, 64, 73, 87, 90, 93, 100, 104, 106, 122, 126, 242, 254, 303, 304, 313, 315, 325, 326, 327, 330, 331, 340, 342, 343, 344], "sinc": [0, 6, 205, 305, 315, 316, 320, 323, 331, 332, 333, 337, 350], "number": [0, 2, 6, 8, 14, 22, 23, 26, 35, 42, 52, 53, 55, 63, 66, 74, 80, 81, 82, 120, 121, 122, 123, 124, 126, 163, 183, 189, 190, 191, 192, 193, 204, 214, 219, 222, 263, 264, 265, 269, 271, 272, 276, 277, 286, 303, 305, 307, 313, 315, 318, 323, 326, 328, 331, 340, 341, 342, 343, 345, 350], "valu": [0, 1, 2, 6, 10, 18, 23, 24, 25, 33, 39, 46, 48, 49, 55, 63, 65, 66, 73, 74, 86, 87, 88, 89, 90, 91, 96, 98, 100, 104, 106, 107, 127, 133, 134, 157, 183, 188, 189, 192, 208, 217, 220, 231, 239, 256, 262, 265, 267, 268, 270, 271, 272, 273, 278, 286, 302, 303, 305, 307, 311, 313, 315, 319, 327, 329, 331, 332, 341, 342, 343, 344], "met": [0, 273, 318, 326, 328], "doubl": 0, "big": 0, "warn": [0, 2, 12, 249, 275, 283, 286, 305, 313, 319, 323, 325, 332, 341, 350], "larger": [0, 326], "pad": 0, "filter": [0, 93, 120, 121, 122, 305, 313, 315, 332], "so": [0, 23, 93, 189, 282, 308, 311, 316, 326, 332, 333, 340, 350], "characterscannot": 0, "neither": [0, 326], "perform": [0, 2, 14, 75, 82, 192, 307, 313, 326, 329, 331, 332, 333, 341, 347], "order": [0, 2, 8, 9, 25, 28, 32, 136, 141, 142, 147, 152, 154, 155, 189, 202, 203, 211, 218, 225, 226, 227, 305, 307, 309, 315, 322, 326, 328, 329, 330, 331, 332, 337, 347, 348], "given": [0, 2, 9, 25, 38, 77, 81, 86, 87, 89, 90, 91, 97, 98, 128, 129, 130, 132, 140, 151, 157, 159, 173, 180, 181, 190, 191, 192, 220, 228, 231, 238, 239, 247, 249, 256, 263, 271, 280, 282, 284, 287, 293, 305, 307, 311, 315, 319, 320, 323, 325, 326, 332, 333, 340, 341, 342, 346], "critic": [0, 308], "case": [0, 2, 8, 35, 79, 92, 138, 139, 150, 189, 231, 278, 305, 313, 323, 325, 326, 329, 331, 332, 334, 339, 347, 349], "illeg": 0, "get": [0, 2, 4, 5, 6, 7, 8, 10, 16, 25, 28, 32, 35, 99, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 127, 131, 133, 134, 136, 158, 263, 277, 305, 315, 320, 325, 326, 329, 330, 337, 341, 347, 350], "need": [0, 2, 18, 39, 75, 92, 135, 305, 307, 310, 311, 312, 316, 320, 322, 326, 329, 330, 332, 336, 348, 350], "becaus": [0, 8, 305, 326], "later": [0, 322, 326], "comparison": [0, 332, 337], "It": [0, 2, 18, 280, 308, 309, 310, 311, 315, 316, 322, 323, 324, 326, 328, 329, 330, 331, 335, 340, 341, 350], "possibl": [0, 2, 6, 8, 25, 113, 142, 146, 147, 155, 229, 285, 305, 309, 310, 311, 315, 318, 323, 326, 328, 329, 330, 331, 332, 333, 335, 337, 340, 346, 347, 348, 350], "done": [0, 1, 75, 76, 82, 86, 87, 89, 90, 91, 189, 308, 313, 329, 332, 335, 342], "eq": [0, 8, 31, 331], "ne": 0, "text": [0, 18, 36, 37, 40, 197, 329, 331, 337, 347], "otherwis": [0, 6, 28, 33, 34, 36, 39, 43, 75, 79, 99, 103, 111, 126, 137, 138, 139, 150, 153, 156, 160, 161, 162, 189, 202, 215, 216, 218, 220, 222, 225, 231, 286, 308, 313, 315, 326, 329, 331, 337, 347], "appropri": [0, 2, 308, 326], "letter": [0, 137], "alphanum": 0, "underscor": 0, "real": [0, 145, 157, 315, 316], "special": [0, 6, 235, 311, 315, 316, 326], "digit": [0, 74, 305, 345], "enclos": 0, "ok": [0, 316], "w": [0, 28, 75, 137, 160, 171, 172, 178, 193, 204, 216, 220, 224, 231, 243, 313, 326, 329, 331], "o": [0, 304, 306, 307, 312, 342], "With": [0, 2, 328, 341], "eqn": 0, "ge": [0, 331], "etc": [0, 3, 305, 309, 331, 333, 343], "maximum": [0, 2, 14, 36, 74, 231, 265, 307, 313, 341, 345], "have": [0, 2, 6, 8, 18, 25, 28, 36, 39, 82, 107, 113, 141, 152, 154, 221, 235, 268, 277, 282, 284, 305, 307, 309, 310, 311, 312, 313, 315, 316, 319, 322, 323, 325, 326, 329, 330, 332, 333, 335, 337, 341, 345, 347, 348, 350], "12": [0, 2, 64, 93, 100, 104, 106, 108, 109, 122, 159, 217, 254, 303, 304, 313, 315, 319, 320, 322, 323, 325, 326, 327, 330, 331, 332, 338, 340, 342, 343, 344, 347], "must": [0, 2, 23, 42, 79, 189, 204, 280, 304, 307, 326, 329, 345], "decreas": [0, 271, 316, 341], "within": [0, 2, 107, 189, 308, 313, 326, 328], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 2, 18, 25, 28, 215, 303, 308, 311, 313, 316, 326, 332, 333, 350], "affect": [0, 113, 119, 202, 215, 231, 305, 326, 333], "even": [0, 23, 81, 85, 100, 106, 113, 310, 326, 333], "still": [0, 326, 333, 350], "cannot": [0, 2, 8, 63, 79, 249, 279, 305, 313, 315, 326, 328], "both": [0, 1, 2, 8, 18, 42, 152, 198, 231, 277, 305, 308, 313, 315, 318, 319, 323, 325, 326, 330, 332, 341, 342, 346, 347, 348], "reenter": 0, "think": 0, "risk": [0, 326], "being": [0, 6, 25, 35, 44, 63, 143, 149, 192, 193, 195, 216, 304, 305, 310, 318, 319, 320, 326, 333, 337, 343], "truncat": 0, "encod": [0, 224, 243, 305, 315, 335], "here": [0, 2, 119, 315, 316, 317, 319, 321, 322, 323, 330, 331, 332, 337, 348, 349], "possibli": [0, 337], "partial": [0, 307, 312, 337], "list": [0, 2, 6, 8, 10, 13, 14, 17, 24, 25, 28, 31, 33, 39, 42, 79, 82, 84, 85, 94, 95, 97, 98, 107, 112, 113, 119, 128, 129, 130, 132, 158, 168, 180, 181, 189, 190, 196, 204, 215, 230, 232, 233, 234, 236, 237, 238, 239, 248, 256, 261, 262, 263, 266, 267, 268, 269, 272, 275, 276, 277, 278, 286, 292, 293, 303, 304, 305, 307, 308, 311, 313, 315, 319, 325, 326, 328, 329, 331, 334, 340, 341, 342, 343, 346, 347], "decid": [0, 2, 44, 151, 323, 325, 326, 332, 342], "whether": [0, 23, 33, 36, 39, 55, 79, 140, 149, 151, 189, 204, 250, 252, 254, 263, 278, 281, 297, 305, 307, 323, 326, 328, 332, 348], "put": [0, 8, 163, 189, 305, 316, 320], "up": [0, 14, 308, 310, 313, 322, 330, 348, 350], "written": [0, 305, 309, 326, 329, 331, 333], "scientif": [0, 316], "14": [0, 2, 64, 87, 100, 106, 122, 254, 303, 304, 313, 323, 325, 326, 327, 330, 331, 340, 343, 344, 347], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 108, 205, 303, 331, 341], "describ": [0, 2, 25, 28, 63, 141, 142, 143, 146, 147, 152, 154, 155, 303, 313, 315, 323, 325, 329, 334, 341], "output": [0, 8, 18, 277, 293, 305, 307, 309, 311, 326, 329, 331], "alwai": [0, 188, 191, 305, 315, 328, 331, 332, 341, 346], "synonym": [0, 305], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 24, 25, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 47, 49, 52, 53, 63, 74, 76, 79, 81, 82, 84, 89, 90, 91, 97, 101, 107, 108, 109, 113, 116, 119, 122, 126, 128, 129, 130, 132, 137, 138, 139, 140, 150, 158, 160, 163, 169, 177, 180, 181, 183, 185, 187, 189, 193, 194, 195, 196, 197, 199, 204, 205, 208, 212, 214, 215, 216, 217, 220, 227, 230, 232, 233, 234, 237, 238, 251, 256, 261, 262, 263, 265, 268, 271, 274, 275, 278, 280, 281, 282, 284, 286, 287, 290, 291, 292, 293, 294, 302, 304, 305, 307, 310, 313, 315, 323, 325, 326, 328, 330, 331, 332, 334, 336, 341, 342, 343, 346, 347], "avail": [0, 1, 2, 6, 33, 43, 52, 63, 135, 160, 202, 218, 222, 225, 231, 251, 256, 263, 303, 307, 309, 313, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 337, 341, 342, 344, 346, 347, 349, 350], "carri": [0, 326], "over": [0, 126, 163, 189, 220, 252, 253, 254, 303, 304, 305, 309, 318, 320, 325], "onc": [0, 2, 161, 313, 333, 341], "covari": [0, 6, 10, 14, 17, 25, 33, 36, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 70, 79, 106, 107, 119, 140, 158, 171, 177, 190, 191, 192, 196, 231, 263, 265, 286, 305, 307, 313, 315, 316, 323, 325, 328, 337, 341, 343, 345, 348], "final": [0, 45, 184, 260, 263, 271, 286, 305, 313, 319, 320, 323, 325, 326, 331, 332, 333, 334, 341, 342, 343, 345, 346, 347], "estim": [0, 1, 2, 3, 14, 15, 18, 23, 24, 33, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 51, 62, 63, 64, 66, 73, 74, 77, 79, 88, 96, 97, 98, 169, 170, 171, 175, 179, 184, 185, 190, 191, 192, 193, 195, 200, 201, 202, 206, 210, 211, 215, 216, 218, 222, 224, 225, 226, 231, 232, 233, 234, 238, 239, 241, 242, 243, 248, 251, 262, 263, 266, 271, 273, 278, 286, 303, 304, 305, 307, 309, 313, 314, 316, 323, 324, 325, 327, 332, 334, 336, 337, 340, 341, 342, 345, 346, 347, 348, 349], "oppos": [0, 341], "ext": [0, 305, 309], "per": [0, 6, 14, 24, 75, 120, 121, 122, 126, 190, 191, 215, 220, 277, 313, 347], "est": [0, 38, 45, 51, 179, 184, 329, 331], "first": [0, 2, 7, 25, 34, 36, 43, 81, 100, 106, 110, 138, 139, 141, 142, 147, 150, 152, 169, 176, 193, 195, 200, 202, 203, 204, 211, 216, 218, 220, 222, 225, 231, 286, 305, 307, 309, 313, 320, 323, 325, 326, 328, 331, 332, 333, 337, 350], "call": [0, 277, 294, 305, 310, 311, 326, 333, 350], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 304, 305, 307, 313, 323, 325, 328, 332, 334, 337, 338, 340, 341, 342, 343, 345, 346, 347, 348], "theta": [0, 1, 28, 33, 36, 39, 127, 133, 134, 171, 172, 175, 215, 224, 243, 305, 323, 331, 332, 333, 337, 341, 342, 345], "sigma": [0, 1, 2, 127, 133, 134, 171, 172, 175, 193, 195, 216, 305, 320, 323, 331, 332, 333, 341, 345], "omega": [0, 1, 22, 25, 64, 127, 133, 134, 171, 172, 175, 305, 307, 320, 323, 329, 331, 332, 333, 340, 341, 342, 345], "fix": [0, 1, 2, 23, 24, 33, 44, 49, 55, 79, 96, 97, 98, 127, 133, 134, 188, 198, 206, 209, 223, 230, 236, 238, 239, 262, 307, 323, 326, 328, 329, 331, 337], "offdiagon": 0, "could": [0, 18, 305, 315, 326, 331, 336, 337], "part": [0, 2, 18, 25, 81, 231, 303, 305, 307, 311, 312, 313, 326, 329, 332, 333, 337, 348], "NO": [0, 326], "probabl": [0, 231], "same": [0, 2, 8, 10, 18, 25, 28, 42, 53, 74, 75, 96, 97, 98, 108, 154, 204, 206, 215, 238, 239, 244, 263, 268, 280, 282, 284, 304, 305, 307, 308, 309, 313, 315, 319, 320, 325, 326, 328, 329, 331, 332, 341, 347, 350], "type": [0, 2, 6, 8, 10, 18, 27, 28, 35, 36, 55, 77, 103, 107, 128, 130, 168, 173, 221, 249, 256, 263, 267, 268, 270, 273, 302, 305, 307, 311, 313, 318, 320, 322, 323, 325, 326, 329, 332, 334, 337, 345, 348], "now": [0, 305, 311, 331, 333], "investig": 0, "follow": [0, 2, 14, 36, 39, 162, 230, 303, 305, 307, 308, 311, 312, 313, 315, 316, 318, 319, 322, 323, 325, 326, 328, 329, 331, 332, 333, 334, 336, 347, 350], "like": [0, 25, 309, 315, 318, 326, 333, 337], "One": [0, 2, 25, 163, 168, 286, 290, 293, 307, 337, 350], "last": [0, 2, 8, 28, 32, 99, 201, 278], "left": [0, 4, 63, 313, 329, 331, 332, 336], "justifi": 0, "size": [0, 6, 13, 189, 231, 305, 308, 337], "13": [0, 1, 2, 64, 100, 104, 106, 108, 122, 254, 303, 304, 313, 319, 323, 326, 327, 330, 331, 338, 340, 343, 344, 347], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 291, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 319, 320, 321, 322, 324, 325, 326, 327, 336, 337, 340, 341, 343, 344, 345, 348, 349, 350], "n": [0, 6, 17, 22, 25, 26, 37, 40, 47, 79, 82, 185, 191, 192, 197, 214, 219, 222, 230, 233, 269, 303, 304, 305, 307, 320, 323, 329, 331, 345], "flatten": [0, 305], "triangular": 0, "correl": [0, 14, 56, 57, 58, 59, 67, 68, 69, 70, 73, 79, 242, 286, 305, 340], "abov": [0, 33, 36, 39, 73, 183, 231, 303, 304, 313, 318, 320, 326, 331, 334, 341, 350], "off": [0, 2, 305, 328, 332, 347], "diagon": [0, 171, 305, 323, 330, 331, 332], "obj": 0, "right": [0, 4, 8, 326, 329, 331, 350], "also": [0, 2, 25, 34, 85, 113, 189, 305, 309, 310, 311, 313, 315, 316, 319, 320, 322, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 337, 341, 342, 346, 347, 350], "22": [0, 2, 64, 86, 87, 89, 90, 100, 106, 122, 126, 254, 303, 304, 313, 320, 327, 330, 331, 344], "integ": [0, 6, 137, 305, 307, 328], "5": [0, 2, 28, 33, 36, 56, 58, 59, 63, 64, 68, 69, 75, 87, 88, 93, 98, 100, 104, 106, 109, 122, 126, 137, 159, 160, 161, 162, 168, 171, 217, 231, 234, 239, 254, 271, 276, 277, 303, 304, 313, 315, 320, 323, 325, 326, 327, 329, 330, 331, 332, 334, 338, 340, 341, 343, 344, 347], "expon": [0, 1, 33, 262, 307], "regular": [0, 2, 10, 318, 324], "take": [0, 2, 23, 25, 80, 250, 286, 305, 308, 315, 319, 323, 325, 326, 332, 334, 337, 346, 347], "19": [0, 64, 87, 100, 106, 122, 254, 303, 304, 327, 330, 331, 340, 343, 344], "posit": [0, 25, 191, 192, 231, 305, 307, 308, 316, 341], "neg": [0, 328], "For": [0, 2, 8, 36, 39, 120, 121, 122, 162, 188, 217, 221, 231, 235, 262, 265, 267, 268, 270, 272, 273, 303, 304, 307, 309, 310, 311, 313, 318, 319, 320, 322, 326, 328, 329, 332, 333, 334, 337, 341, 346, 350], "20": [0, 64, 90, 93, 100, 106, 122, 254, 303, 304, 313, 326, 327, 330, 331, 338, 340, 341, 343, 344], "In": [0, 2, 8, 35, 79, 92, 308, 309, 311, 313, 322, 323, 325, 326, 329, 330, 331, 332, 334, 337, 341, 345, 347, 348, 350], "observ": [0, 6, 14, 18, 43, 52, 108, 120, 121, 122, 125, 126, 202, 218, 222, 225, 226, 231, 276, 277, 303, 305, 320, 334, 337, 340, 344, 347], "em": [0, 14], "algorithm": [0, 2, 263, 265, 266, 267, 270, 276, 305, 307, 309, 318, 337, 348], "insead": 0, "calcul": [0, 14, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 88, 104, 256, 303, 304, 305, 320, 323, 324, 325, 332], "phi_1": 0, "mu_1": [0, 162, 320], "eta_1": [0, 28, 36, 60, 62, 64, 79, 114, 128, 132, 162, 190, 230, 232, 233, 234, 320, 329, 330, 331], "mu": [0, 162, 305, 320], "referenc": [0, 162, 305], "mu_i": 0, "implicitli": 0, "equival": [0, 326, 328, 347], "random": [0, 2, 3, 13, 17, 18, 22, 25, 26, 42, 55, 63, 66, 80, 82, 113, 128, 132, 135, 151, 188, 190, 191, 192, 219, 263, 271, 305, 307, 316, 320, 325, 331, 340, 341, 350], "operatornam": [0, 304, 320, 344], "var": [0, 25, 64, 320], "phi_i": 0, "eta_i": [0, 320], "j": [0, 231, 233, 304, 320], "phi_j": 0, "mu_j": 0, "eta_j": 0, "byte": 0, "evid": [0, 111, 305], "toward": [0, 108, 305], "token": [0, 328], "whitespac": 0, "parenthes": [0, 328], "multipl": [0, 2, 4, 8, 25, 28, 35, 55, 103, 138, 139, 150, 202, 221, 263, 273, 275, 293, 305, 313, 316, 328, 329, 331, 342, 343, 347, 348], "open": [0, 308, 311, 324, 326, 335], "keyword": [0, 307], "kept": [0, 92, 126, 305, 307, 323], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 305, 307, 309, 310, 311, 313, 315, 316, 318, 319, 323, 325, 326, 329, 332, 333, 335, 336, 337, 341, 342, 346, 350], "csv": [0, 2, 175, 244, 279, 289, 305, 307, 309, 313, 315, 319, 323, 325, 331, 332, 334, 341, 342, 346, 347], "wgt": [0, 2, 4, 6, 10, 28, 33, 36, 75, 84, 85, 93, 100, 106, 119, 135, 137, 159, 160, 161, 162, 171, 172, 177, 217, 232, 233, 234, 237, 262, 315, 320, 328, 329, 331, 333, 337, 340], "23": [0, 2, 63, 64, 66, 80, 87, 100, 106, 122, 190, 191, 192, 254, 303, 304, 313, 327, 330, 331, 343, 344], "titl": 0, "crash": [0, 305], "nmtran": [0, 6, 14], "There": [0, 2, 282, 313, 319, 331, 341, 347], "72": [0, 2], "includ": [0, 3, 17, 22, 25, 48, 168, 231, 278, 304, 305, 308, 313, 323, 324, 325, 326, 328, 330, 331, 332, 334, 340, 341, 343, 346, 347], "come": [0, 231, 311, 326], "filenam": [0, 18, 280, 284, 287, 292, 329], "repres": [0, 4, 6, 23, 24, 25, 34, 307, 313, 315, 316, 318, 320, 326, 329, 334], "rel": [0, 286, 305, 320, 341, 345], "path": [0, 1, 2, 10, 18, 53, 77, 105, 173, 174, 244, 245, 246, 247, 248, 257, 258, 259, 261, 263, 279, 280, 281, 282, 284, 287, 288, 289, 291, 292, 297, 305, 307, 309, 310, 313, 315, 319, 322, 323, 325, 329, 330, 331, 332, 334, 341, 342, 343, 346, 347, 348, 350], "work": [0, 286, 305, 308, 311, 319, 326, 329, 337], "directori": [0, 247, 248, 261, 280, 281, 282, 305, 307, 310, 311, 329, 343], "when": [0, 2, 14, 32, 36, 75, 99, 188, 271, 305, 308, 309, 311, 315, 318, 319, 325, 326, 329, 333, 334, 340, 341, 343], "invok": 0, "nmfe": 0, "content": [0, 2, 276, 277, 313, 315, 319, 323, 325, 326, 332, 341], "simpli": [0, 23, 311, 318, 319, 333], "seen": [0, 2, 315, 319, 323, 332, 341], "54": [0, 64, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 332, 338, 340, 344], "doe": [0, 2, 53, 81, 105, 183, 231, 280, 281, 282, 287, 288, 305, 316, 319, 323, 325, 326, 332, 333, 340], "pk": [0, 2, 6, 41, 48, 77, 113, 130, 171, 231, 305, 307, 313, 323, 328, 331, 332, 333, 334, 346, 347, 348], "pred": [0, 90, 167, 171, 175, 305, 330, 331, 340, 344], "simpl": [0, 1, 171, 229, 278, 331, 333, 341], "merg": [0, 305, 311, 326], "placement": [0, 310], "place": [0, 2, 310, 326], "seem": 0, "restrict": [0, 282, 326], "automat": [0, 14, 33, 263, 305, 311, 313, 322, 326, 328, 342, 348], "creat": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 32, 35, 44, 75, 77, 78, 80, 81, 99, 103, 104, 111, 126, 180, 194, 204, 215, 246, 247, 249, 261, 271, 276, 277, 280, 281, 282, 283, 284, 285, 289, 290, 292, 294, 297, 303, 304, 305, 307, 309, 310, 311, 313, 314, 315, 318, 319, 320, 323, 327, 332, 334, 337, 338, 340, 341, 342, 343, 344, 347, 348, 349], "continu": [0, 2, 6, 18, 36, 305, 308, 311, 313, 320, 326, 328, 337], "factor": [0, 337], "compil": [0, 326], "11138": 0, "445": [0, 323], "though": [0, 326], "outsid": [0, 305, 308, 326, 347], "standard": [0, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 243, 246, 286, 303, 305, 316, 320, 326, 331, 333, 337, 340, 342, 344, 345], "gfortran": 0, "8": [0, 2, 6, 52, 56, 57, 58, 59, 64, 67, 68, 69, 70, 93, 100, 106, 109, 122, 126, 159, 217, 254, 303, 304, 313, 315, 323, 325, 326, 327, 330, 331, 338, 340, 341, 342, 343, 344, 347, 350], "hh": 0, "nep": 0, "h": [0, 307], "second": [0, 169, 307, 318, 333], "f": [0, 28, 40, 75, 137, 160, 171, 172, 178, 193, 195, 204, 215, 216, 220, 231, 243, 303, 305, 307, 312, 326, 329, 331, 333], "respect": [0, 2, 305, 308, 319, 320, 326, 331, 332, 333, 346], "ep": [0, 28, 171, 305, 307, 331, 333], "implicit": [0, 305], "kind": [0, 6, 8, 130, 313, 326], "dpsize": 0, "main": [0, 285, 307, 311, 337, 350], "function": [0, 3, 10, 14, 25, 33, 36, 37, 40, 60, 61, 80, 85, 86, 87, 89, 90, 91, 96, 97, 98, 114, 125, 131, 142, 146, 147, 155, 188, 193, 194, 195, 197, 206, 215, 216, 229, 235, 238, 239, 242, 247, 256, 267, 270, 286, 290, 303, 305, 307, 309, 310, 311, 315, 316, 323, 325, 326, 329, 330, 332, 333, 336, 337, 340, 341, 342, 343, 349, 350], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 25, 29, 30, 33, 42, 52, 63, 81, 88, 113, 127, 128, 132, 133, 135, 138, 139, 150, 151, 172, 188, 192, 193, 195, 204, 215, 216, 220, 262, 263, 286, 305, 307, 313, 315, 316, 323, 330, 337, 340, 349, 350], "doesn": [0, 28, 284, 305, 323], "t": [0, 6, 7, 8, 28, 33, 37, 75, 83, 115, 137, 160, 197, 210, 211, 216, 226, 234, 278, 284, 290, 292, 304, 305, 307, 320, 323, 329, 331, 338, 340, 347], "declar": [0, 2, 75, 161, 313, 328], "assign": [0, 6, 28, 75, 305, 307, 329], "stop": 0, "entri": [0, 231, 280, 283, 284, 287], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 23, 24, 25, 28, 60, 61, 75, 81, 102, 110, 113, 114, 119, 125, 131, 135, 138, 139, 150, 161, 172, 187, 193, 195, 204, 215, 216, 220, 263, 305, 313, 316, 331, 337], "separ": [0, 2, 10, 79, 92, 162, 189, 230, 263, 282, 285, 305, 307, 311, 313, 315, 316, 320, 326, 328, 337], "thnn": 0, "nn": [0, 320], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 2, 6, 23, 25, 44, 183, 208, 231, 250, 305, 326, 331, 334], "ad": [0, 2, 9, 18, 33, 34, 36, 39, 47, 55, 92, 214, 267, 268, 270, 293, 305, 307, 313, 318, 325, 326, 328, 333, 342, 343, 348], "x": [0, 2, 24, 33, 75, 86, 87, 93, 104, 159, 190, 217, 303, 313, 315, 320, 330, 331, 335, 341, 343], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 25, 28, 113, 119, 173, 174, 175, 249, 263, 270, 271, 289, 305, 315, 331, 332, 341, 345, 346], "tool": [1, 2, 3, 14, 18, 51, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 86, 87, 88, 89, 90, 91, 164, 165, 166, 167, 168, 169, 178, 190, 191, 192, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 288, 291, 297, 302, 303, 305, 306, 307, 311, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 332, 334, 336, 337, 341, 342, 345, 346, 347, 349, 350], "add": [1, 9, 14, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 75, 92, 115, 197, 214, 215, 216, 293, 305, 307, 313, 318, 323, 326, 328, 331, 332, 333, 335, 348], "allometr": [1, 2, 33, 262, 305, 307, 348], "scale": [1, 2, 6, 18, 33, 62, 65, 71, 192, 262, 271, 286, 305, 307, 320, 335, 348], "pharmr": [1, 2, 3, 305, 311, 313, 316, 319, 322, 323, 324, 325, 332, 341, 342, 346, 347, 349], "command": [1, 305, 311, 313, 319, 322, 323, 324, 325, 326, 331, 332, 342, 349], "line": [1, 75, 305, 313, 319, 322, 323, 324, 325, 326, 331, 332, 342, 349], "To": [1, 2, 307, 310, 311, 313, 319, 322, 323, 325, 326, 328, 330, 331, 332, 334, 335, 341, 342, 350], "initi": [1, 2, 15, 18, 23, 24, 33, 39, 42, 43, 46, 47, 48, 49, 77, 79, 80, 88, 96, 97, 98, 115, 185, 193, 195, 202, 204, 205, 206, 210, 211, 215, 216, 218, 222, 225, 226, 232, 233, 234, 238, 239, 241, 242, 262, 263, 271, 273, 292, 305, 307, 313, 319, 320, 323, 325, 326, 329, 331, 332, 334, 341, 342, 346, 347, 348], "python": [1, 2, 164, 165, 166, 167, 168, 169, 304, 305, 307, 309, 313, 315, 316, 319, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 346, 347, 349], "r": [1, 2, 14, 40, 164, 165, 166, 167, 168, 169, 289, 304, 305, 309, 310, 313, 315, 316, 319, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 341, 342, 346, 347, 349], "read_model": [1, 175, 305, 313, 315, 319, 323, 325, 329, 331, 332, 334, 341, 342, 346, 347, 350], "read_modelfit_result": [1, 305, 313, 319, 323, 325, 329, 330, 332, 334, 341, 342, 346, 347], "run_allometri": [1, 305], "start_model": [1, 276, 309, 313, 319, 323, 325, 332, 334, 341, 342, 346, 347], "start_model_result": [1, 309, 313, 319, 323, 325, 332, 334, 341, 342, 346, 347], "re": [1, 2, 164, 165, 166, 167, 168, 247, 250, 258, 259, 260, 264, 265, 274, 281, 288, 291, 304, 309, 313, 319, 323, 325, 330, 332, 334, 341, 342, 344, 346, 347], "code": [1, 14, 18, 20, 75, 118, 119, 135, 142, 146, 147, 155, 171, 175, 215, 216, 245, 305, 312, 313, 318, 319, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 342, 346, 347, 350], "redefin": [1, 313, 319, 323, 325, 332, 342], "accordingli": [1, 313, 319, 323, 325, 332, 333, 342], "descript": [1, 2, 6, 18, 29, 52, 276, 277, 278, 286, 302, 303, 305, 309, 310, 313, 315, 318, 319, 323, 325, 332, 334, 341, 342, 343, 345, 346, 347, 348], "modelfitresult": [1, 2, 21, 248, 250, 251, 252, 253, 254, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 285, 305, 313, 319, 323, 325, 332, 334, 341, 342, 346, 347], "allometric_vari": [1, 2, 33, 262, 263, 307], "wt": [1, 28, 262, 265, 313, 343], "reference_valu": [1, 2, 33, 262, 307], "refer": [1, 30, 33, 75, 82, 154, 217, 260, 262, 263, 278, 305, 313, 326, 331, 333, 334, 346, 349, 350], "70": [1, 2, 33, 100, 262, 331, 340], "appli": [1, 2, 18, 34, 193, 195, 204, 215, 216, 232, 233, 234, 262, 305, 307, 308, 315, 320, 326, 328, 331, 332, 340, 341], "all": [1, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 24, 25, 27, 28, 29, 33, 39, 44, 46, 48, 52, 72, 75, 79, 82, 84, 92, 97, 98, 101, 104, 106, 107, 109, 112, 113, 116, 127, 130, 133, 134, 136, 137, 142, 146, 147, 151, 155, 158, 168, 170, 172, 180, 181, 188, 190, 191, 204, 209, 215, 217, 223, 230, 231, 232, 233, 234, 236, 237, 238, 239, 261, 262, 263, 266, 267, 268, 270, 278, 280, 284, 286, 287, 289, 293, 298, 303, 304, 305, 307, 308, 309, 311, 313, 314, 315, 316, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 341, 345, 346, 347, 348, 350], "cl": [1, 2, 4, 8, 24, 28, 33, 36, 39, 42, 47, 63, 75, 81, 83, 94, 102, 113, 128, 130, 132, 137, 140, 151, 157, 160, 161, 162, 171, 172, 177, 180, 185, 202, 203, 207, 210, 211, 214, 218, 225, 229, 232, 233, 234, 262, 265, 313, 320, 323, 325, 329, 331, 333, 347], "q": [1, 33, 47, 185, 262, 305, 331], "v": [1, 8, 24, 28, 33, 37, 63, 75, 83, 95, 102, 113, 130, 135, 137, 160, 161, 162, 164, 165, 166, 167, 171, 172, 180, 197, 202, 203, 207, 210, 211, 218, 225, 226, 229, 262, 265, 311, 313, 320, 325, 328, 329, 331, 333, 344, 347], "75": [1, 33, 262, 313, 319], "lower_bound": [1, 2, 33, 262, 307], "lower": [1, 2, 6, 23, 24, 33, 36, 49, 73, 96, 97, 98, 127, 133, 134, 183, 206, 208, 209, 215, 223, 236, 239, 262, 263, 307, 316, 323, 329, 331, 341], "bound": [1, 23, 24, 33, 49, 74, 192, 209, 223, 232, 233, 234, 236, 242, 262, 280, 284, 287, 305, 307, 329, 341, 345], "upper_bound": [1, 2, 33, 262, 307], "upper": [1, 23, 24, 33, 36, 49, 96, 97, 98, 127, 133, 134, 183, 206, 209, 223, 236, 239, 262, 305, 307, 329, 331, 341], "should": [1, 6, 23, 33, 36, 39, 42, 49, 126, 189, 204, 262, 267, 268, 270, 305, 307, 308, 310, 311, 313, 316, 320, 323, 325, 326, 327, 328, 332, 337, 342], "true": [1, 2, 6, 9, 10, 15, 18, 24, 33, 34, 40, 45, 55, 62, 72, 81, 84, 92, 96, 97, 98, 115, 119, 126, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 177, 184, 191, 198, 200, 201, 204, 215, 216, 222, 237, 238, 239, 240, 241, 245, 250, 254, 262, 278, 279, 286, 305, 313, 315, 319, 323, 325, 329, 331, 332, 333, 335, 341, 342, 343, 344, 345, 350], "No": [1, 6, 231, 287, 288, 326, 332], "select": [1, 2, 189, 217, 232, 234, 277, 303, 305, 307, 313, 323, 325, 329, 332, 334, 335, 341, 342, 343, 345, 346, 347, 348], "see": [1, 2, 6, 8, 18, 36, 39, 231, 254, 262, 263, 265, 267, 268, 270, 272, 273, 307, 308, 309, 310, 311, 313, 315, 316, 318, 319, 323, 325, 326, 327, 329, 331, 332, 333, 337, 341, 342, 346], "about": [1, 2, 6, 308, 309, 313, 315, 319, 321, 322, 323, 325, 326, 331, 332, 341, 342, 346], "actual": [1, 2, 23, 162, 188, 313, 319, 323, 325, 326, 332, 341, 342], "minim": [1, 2, 305, 313, 319, 323, 325, 332, 341, 342, 345], "statu": [1, 2, 286, 305, 313, 316, 319, 323, 325, 326, 332, 341, 342], "time": [1, 2, 6, 7, 9, 10, 24, 28, 33, 42, 43, 75, 77, 84, 85, 93, 100, 108, 109, 116, 126, 137, 158, 159, 160, 161, 162, 163, 171, 172, 175, 182, 202, 205, 217, 218, 220, 222, 225, 235, 263, 272, 305, 307, 309, 313, 315, 319, 320, 323, 325, 326, 328, 329, 330, 332, 333, 334, 337, 340, 341, 342, 344, 346], "you": [1, 2, 310, 311, 313, 319, 322, 323, 324, 325, 326, 330, 331, 332, 333, 337, 341, 342, 348, 349, 350], "look": [1, 2, 28, 53, 113, 151, 309, 313, 318, 319, 323, 325, 332, 333, 334, 341, 342], "summary_model": [1, 2, 305, 309, 313, 319, 323, 325, 332, 341, 342], "tabl": [1, 2, 62, 171, 193, 231, 277, 286, 303, 304, 305, 309, 311, 313, 314, 319, 320, 323, 325, 327, 331, 332, 334, 338, 340, 341, 342, 343, 344, 346, 347], "gener": [1, 2, 6, 32, 63, 66, 76, 80, 99, 163, 189, 190, 191, 192, 263, 271, 290, 292, 305, 307, 309, 313, 315, 319, 320, 323, 324, 325, 331, 332, 336, 337, 341, 342, 347, 348], "summarize_modelfit_result": [1, 2, 305, 313, 319, 323, 325, 332, 341, 342], "minimization_success": [1, 2, 250, 256, 263, 265, 267, 268, 270, 271, 272, 273, 278, 286, 313, 319, 323, 325, 332, 334, 341, 342, 345, 346, 347], "errors_found": [1, 2, 313, 319, 323, 325, 332, 341, 342], "pheno": [1, 8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 88, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 109, 110, 112, 113, 115, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 251, 254, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 322, 329, 330, 331, 333, 341], "phenobarb": [1, 171, 278, 331, 341], "scaled_model": [1, 2], "warnings_found": [1, 2, 313, 319, 323, 325, 332, 341, 342], "ofv": [1, 2, 55, 169, 252, 256, 267, 268, 270, 276, 277, 278, 286, 305, 313, 319, 323, 325, 332, 340, 341, 342], "aic": [1, 54, 256, 267, 268, 270, 305, 323, 325, 332, 342], "bic": [1, 2, 55, 256, 267, 268, 270, 305, 307, 309, 313, 323, 325, 332, 334, 342, 347], "730": [1, 303, 320, 327], "894727": [1, 320, 327], "740": [1, 88, 93, 108, 159, 217, 315, 331], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 278, 286, 313, 319, 323, 325, 332, 341, 342], "estimation_runtim": [1, 2, 286, 313, 319, 323, 325, 332, 341, 342], "_estim": [1, 323, 332], "32": [1, 2, 6, 64, 100, 106, 122, 254, 303, 304, 307, 313, 319, 327, 330, 331, 340, 341, 344], "005818": [1, 320], "121955": 1, "44555": [1, 320], "111053": [1, 320], "201526": [1, 320], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 320], "014030": 1, "fulli": [2, 309], "best": [2, 305, 313, 323, 325, 326, 332, 334, 341, 342, 345, 346, 347, 348], "dataset": [2, 10, 11, 12, 18, 32, 33, 35, 50, 52, 63, 72, 77, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 103, 104, 108, 111, 112, 117, 120, 121, 122, 126, 135, 154, 159, 163, 173, 183, 189, 196, 217, 231, 235, 240, 244, 263, 268, 304, 305, 307, 311, 320, 324, 325, 334, 344, 349], "combin": [2, 4, 79, 138, 139, 150, 153, 193, 195, 216, 230, 231, 269, 272, 305, 307, 318, 319, 320, 323, 326, 328, 331, 342], "ruvsearch": [2, 263, 272, 274, 305, 348], "covsearch": [2, 263, 265, 305, 348], "run_amd": [2, 305], "dataset_path": [2, 77, 331], "modeltyp": [2, 263, 307], "basic_pk": [2, 263, 307], "administr": [2, 5, 6, 16, 77, 99, 263, 305, 307, 318, 331], "oral": [2, 7, 77, 202, 263, 305, 307, 318, 328, 331], "search_spac": [2, 263, 270, 273, 305, 307, 309, 332, 334, 346], "let": [2, 14, 18, 82, 305, 313, 320, 328, 331, 333], "categor": [2, 6, 36, 305, 313, 315, 320, 328], "sex": [2, 308, 313, 328, 337], "ag": [2, 6, 265, 313, 328, 343], "occas": [2, 42, 263, 268, 305, 307, 325, 331], "visi": [2, 325], "specifi": [2, 6, 9, 28, 33, 39, 47, 85, 96, 98, 173, 183, 185, 193, 195, 214, 215, 216, 221, 231, 239, 246, 266, 305, 307, 310, 313, 318, 319, 325, 326, 329, 330, 334, 345, 346, 347], "iiv": [2, 17, 22, 25, 30, 39, 42, 46, 48, 55, 79, 113, 128, 151, 180, 204, 230, 263, 267, 268, 270, 305, 307, 313, 325, 328, 329, 331, 348], "we": [2, 308, 311, 313, 320, 322, 324, 326, 329, 331, 333, 337, 350], "our": [2, 308, 311, 312, 326, 337], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 24, 25, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 61, 65, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 92, 93, 96, 97, 98, 104, 114, 125, 127, 131, 133, 134, 135, 137, 160, 161, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 250, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 297, 303, 305, 307, 309, 310, 313, 315, 316, 319, 323, 325, 326, 331, 332, 333, 334, 337, 341, 342, 346, 347, 349, 350], "build": [2, 263, 306, 307, 316, 328, 331], "g": [2, 18, 25, 75, 81, 181, 221, 305, 311, 315, 319, 320, 323, 325, 328, 332, 337, 342, 345, 346, 347], "pkpd": [2, 113, 263, 273, 305, 346, 348], "drug_metabolit": [2, 263, 273, 318, 328, 346], "tmdd": [2, 221, 263, 273, 305, 346, 348], "rout": [2, 263], "iv": [2, 77, 202, 263, 305, 307, 318, 328], "ivor": [2, 77, 263, 307, 318], "cl_init": [2, 77, 263, 307, 331], "popul": [2, 18, 28, 49, 88, 89, 90, 114, 131, 137, 242, 263, 286, 305, 307, 343], "clearanc": [2, 33, 77, 94, 102, 263, 305, 307, 313, 325, 333], "01": [2, 17, 25, 36, 77, 215, 242, 263, 265, 307, 313, 331, 340, 343], "vc_init": [2, 77, 263, 307, 331], "central": [2, 7, 8, 9, 28, 44, 47, 75, 77, 123, 137, 141, 143, 149, 160, 185, 202, 203, 205, 207, 210, 211, 214, 218, 222, 225, 226, 227, 229, 263, 307, 311, 316, 329, 331, 347], "compart": [2, 6, 8, 9, 31, 34, 35, 37, 43, 44, 47, 101, 103, 116, 123, 124, 136, 141, 143, 176, 182, 185, 202, 205, 214, 222, 227, 263, 305, 307, 318, 328, 331, 332, 334, 347], "volum": [2, 33, 47, 77, 95, 102, 263, 305, 307, 313, 325, 326], "mat_init": [2, 77, 263, 307, 331], "absorpt": [2, 77, 130, 141, 143, 152, 154, 202, 207, 218, 222, 225, 249, 263, 270, 276, 305, 307, 309, 318, 323, 325, 328, 332], "b_init": [2, 263, 273, 334, 346], "baselin": [2, 37, 40, 100, 106, 158, 194, 197, 263, 273, 305, 320, 334, 346], "effect": [2, 33, 36, 37, 39, 40, 55, 107, 113, 140, 151, 177, 180, 194, 197, 215, 256, 263, 265, 305, 307, 316, 322, 326, 328, 329, 331, 334, 337, 343, 346, 348], "emax_init": [2, 263, 273, 334, 346], "emax": [2, 37, 40, 46, 197, 328, 334], "ec50_init": [2, 263, 273, 334, 346], "ec50": 2, "met_init": [2, 263, 273, 334, 346], "equilibr": [2, 263, 334, 346], "mfl": [2, 249, 263, 265, 276, 305, 307, 313, 318, 321, 332, 334, 346, 348], "depend": [2, 6, 18, 28, 32, 35, 63, 79, 82, 99, 103, 113, 138, 139, 150, 193, 195, 204, 215, 216, 220, 305, 309, 310, 313, 315, 323, 333, 346, 350], "lloq_limit": [2, 263, 307], "quantif": [2, 6, 183, 208, 231, 263, 307], "lloq_method": [2, 263, 307], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 38, 45, 52, 171, 175, 200, 201, 231, 263, 266, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 304, 305, 307, 313, 316, 326, 329, 331, 337, 341, 348, 350], "transform_blq": [2, 183, 208, 263, 305, 307, 331], "defin": [2, 8, 66, 119, 135, 141, 143, 152, 154, 162, 172, 231, 305, 313, 316, 326, 328, 329, 344], "differ": [2, 3, 18, 25, 55, 276, 278, 285, 303, 304, 305, 308, 309, 310, 313, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 343, 346, 347, 350], "deafult": 2, "bodi": [2, 6, 10, 33, 308, 315, 326, 337], "weight": [2, 6, 10, 33, 91, 138, 139, 150, 153, 224, 243, 313, 315, 337, 342], "strict": [2, 250, 256, 263, 265, 267, 268, 270, 271, 272, 273, 305, 313, 321, 323, 325, 326, 332, 334, 341, 342, 346, 347, 348], "criteria": [2, 250, 256, 263, 265, 271, 273, 277, 305, 307, 313, 323, 325, 332, 334, 341, 342, 345, 346, 347], "rounding_error": [2, 250, 263, 265, 267, 268, 270, 271, 272, 273, 286, 313, 323, 325, 332, 334, 341, 342, 345, 346, 347], "sigdig": [2, 263, 265, 267, 268, 270, 271, 272, 273, 313, 323, 325, 332, 334, 341, 342, 345, 346, 347], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 23, 24, 25, 26, 28, 29, 30, 33, 38, 39, 42, 45, 47, 49, 53, 63, 66, 77, 79, 80, 82, 86, 87, 88, 89, 90, 91, 105, 110, 113, 138, 139, 150, 157, 159, 168, 173, 180, 181, 183, 184, 185, 189, 190, 191, 192, 193, 195, 204, 208, 213, 214, 215, 216, 219, 220, 221, 230, 231, 232, 233, 234, 240, 244, 248, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 280, 281, 284, 285, 286, 287, 289, 292, 293, 297, 305, 307, 309, 310, 315, 320, 323, 325, 329, 331, 332, 334, 347], "mechanistic_covari": [2, 263], "prioritez": 2, "extract": [2, 33, 99, 103, 107, 111, 249, 263, 305, 307, 324, 329], "retries_strategi": [2, 263], "how": [2, 3, 14, 191, 263, 267, 270, 305, 307, 308, 311, 313, 315, 318, 322, 323, 325, 326, 329, 331, 332, 333, 341, 343, 349], "option": [2, 6, 9, 14, 18, 25, 36, 39, 42, 51, 55, 77, 79, 86, 87, 89, 90, 91, 113, 189, 192, 231, 249, 256, 263, 271, 273, 280, 284, 285, 287, 298, 303, 305, 307, 309, 318, 326, 329, 331, 346, 349, 350], "skip": [2, 263, 272, 307, 313, 342], "all_fin": [2, 263], "seed": [2, 26, 63, 66, 80, 190, 191, 192, 219, 263, 271, 307, 341], "step": [2, 14, 15, 18, 26, 37, 38, 40, 45, 51, 179, 184, 197, 200, 201, 219, 265, 278, 285, 286, 305, 307, 311, 313, 319, 322, 323, 325, 326, 332, 337, 341, 342, 347, 350], "sampl": [2, 14, 25, 80, 188, 189, 190, 191, 192, 320, 341], "dv_type": [2, 221, 263, 273, 347], "dictionari": [2, 5, 10, 14, 16, 17, 22, 24, 25, 29, 86, 87, 89, 90, 91, 101, 107, 116, 189, 206, 209, 221, 223, 263, 273, 280, 281, 284, 287, 288, 289, 291, 292, 298, 329, 347], "dv": [2, 6, 10, 28, 75, 84, 85, 93, 100, 110, 113, 126, 137, 138, 139, 150, 159, 160, 166, 167, 168, 171, 172, 175, 193, 195, 204, 208, 210, 211, 215, 216, 217, 220, 221, 231, 263, 272, 273, 305, 315, 329, 331, 333, 344], "target": [2, 221, 343, 347], "kei": [2, 107, 221, 256, 276, 284, 326, 342, 347], "drug": [2, 8, 44, 149, 221, 305, 328, 337, 346, 347, 348], "complex": [2, 305, 311, 322, 347], "parameter_uncertainty_method": [2, 14, 15, 38, 45, 184, 200, 201, 263, 266, 305, 319, 329, 331], "uncertainti": [2, 14, 45, 63, 64, 66, 184, 190, 191, 192, 263, 266, 305, 307, 320, 330, 348], "current": [2, 25, 38, 39, 60, 61, 75, 76, 86, 87, 89, 90, 91, 114, 125, 131, 141, 154, 160, 194, 200, 201, 202, 207, 218, 229, 231, 235, 249, 251, 265, 269, 273, 284, 286, 294, 304, 305, 307, 309, 311, 313, 314, 318, 320, 322, 324, 325, 326, 327, 328, 329, 334, 336, 337, 338, 340, 341, 342, 343, 344, 346], "implement": [2, 14, 37, 194, 197, 221, 280, 282, 284, 287, 318, 326, 329, 334, 337, 345, 347, 348], "sandwich": [2, 14, 15, 45, 200, 201, 263, 266, 329], "cpg": [2, 14, 263, 266], "ofim": [2, 14, 263, 266], "ignore_datainfo_fallback": [2, 263, 305], "wether": [2, 44], "connect": [2, 8, 18, 44, 107, 123, 215, 271, 280, 282, 285, 293, 305, 307, 315, 318, 326, 334, 337, 348, 349], "datainfo": [2, 18, 32, 35, 85, 159, 173, 196, 244, 263, 305, 309, 349], "infer": 2, "regard": [2, 318, 326, 332, 334, 341], "explicitli": [2, 307, 325, 326], "user": [2, 39, 105, 263, 305, 315, 316, 323, 325, 326, 329, 330, 331, 332, 333, 347], "varibl": 2, "fals": [2, 6, 9, 13, 14, 17, 18, 22, 23, 24, 30, 34, 36, 38, 40, 44, 49, 55, 62, 72, 74, 81, 84, 92, 96, 97, 98, 115, 119, 126, 127, 133, 134, 137, 138, 139, 140, 146, 147, 150, 151, 153, 154, 155, 156, 157, 177, 189, 191, 198, 206, 209, 215, 222, 223, 236, 238, 239, 241, 242, 244, 249, 250, 254, 263, 271, 278, 279, 281, 286, 289, 297, 304, 313, 315, 319, 329, 331, 333, 335, 343, 344, 345], "absenc": [2, 326], "correspond": [2, 9, 14, 18, 213, 304, 309, 326, 328, 329, 344], "file": [2, 10, 18, 53, 78, 105, 171, 173, 174, 175, 244, 245, 246, 257, 258, 279, 280, 281, 282, 284, 287, 288, 289, 291, 292, 305, 307, 309, 311, 313, 319, 322, 323, 325, 326, 329, 330, 331, 332, 333, 334, 336, 341, 342, 346, 347, 348, 349], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 283, 285, 286, 289, 290, 291, 292, 305, 310, 313, 315, 326, 330, 331, 332, 349], "elimin": [2, 130, 142, 146, 147, 155, 203, 210, 211, 226, 249, 305, 307, 318, 328, 332], "vc": [2, 47, 185, 313, 323, 325, 331], "mat": [2, 48, 304, 305, 306, 312, 313, 323, 325, 331, 333, 342], "proport": [2, 39, 138, 139, 150, 153, 189, 193, 195, 215, 216, 231, 305, 307, 331], "foce": [2, 14, 15, 38, 45, 184, 200, 201, 266, 305, 307, 319, 329, 331], "interact": [2, 14, 15, 38, 45, 171, 184, 200, 201, 305, 308, 309, 319, 326, 329, 331, 337, 350], "requir": [2, 75, 305, 307, 313, 322, 326, 334, 340, 341], "cmt": [2, 32, 35, 99, 103, 305], "dose": [2, 5, 6, 7, 8, 9, 16, 32, 34, 35, 43, 92, 99, 101, 103, 108, 109, 115, 119, 143, 154, 176, 182, 202, 217, 220, 305, 315], "creation": [2, 320, 332], "easili": [2, 329], "differenti": [2, 83, 329], "id": [2, 5, 6, 10, 16, 52, 64, 82, 84, 85, 93, 100, 104, 106, 108, 109, 112, 122, 126, 159, 171, 172, 175, 190, 217, 254, 304, 305, 307, 315, 320, 327, 330, 331, 333, 344], "admid": [2, 5, 6, 7, 8, 9, 16, 28, 32, 35, 47, 75, 99, 103, 137, 160, 185, 202, 203, 207, 210, 211, 214, 218, 222, 225, 226, 229, 329, 331], "data": [2, 6, 18, 30, 86, 87, 88, 89, 90, 91, 106, 119, 171, 172, 175, 183, 193, 195, 198, 208, 216, 231, 263, 277, 303, 305, 309, 315, 320, 325, 326, 328, 329, 331, 333, 337], "well": [2, 63, 149, 231, 309, 313, 319, 323, 325, 326, 328, 331, 332, 334, 340, 341, 342, 346, 347, 349], "anoth": [2, 9, 18, 28, 141, 294, 331], "assum": [2, 25, 39, 44, 280, 305, 320, 326, 333], "correct": [2, 10, 305, 326, 331, 350], "along": [2, 326], "wai": [2, 24, 39, 142, 146, 147, 155, 231, 305, 309, 311, 315, 319, 326, 328, 329, 341, 350], "specif": [2, 14, 18, 24, 51, 85, 189, 215, 247, 250, 305, 307, 313, 315, 326, 328, 329, 332, 337, 346, 348], "support": [2, 8, 14, 18, 28, 38, 39, 60, 61, 76, 77, 86, 87, 89, 90, 91, 114, 125, 131, 138, 139, 150, 200, 201, 202, 207, 218, 231, 265, 272, 294, 305, 307, 309, 313, 315, 316, 318, 319, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 339, 341, 346], "nonmem": [2, 18, 75, 76, 85, 120, 121, 122, 213, 269, 305, 306, 309, 311, 322, 324, 329, 330, 331, 337, 348], "rate": [2, 6, 8, 9, 16, 40, 47, 154, 202, 207, 218, 222, 225, 305, 307, 309, 328], "via": [2, 305, 307, 309, 310, 311, 322, 324, 328, 329, 331, 333, 350], "exclud": [2, 119, 276, 323, 325, 326, 332, 345], "pleas": [2, 309, 311, 318, 322, 326, 329, 331, 346, 347, 350], "featur": [2, 249, 311, 313, 318, 319, 321, 323, 324, 325, 326, 334, 342, 346, 347, 348], "languag": [2, 118, 171, 249, 308, 313, 316, 321, 326, 332, 346, 348], "fo": [2, 14, 38, 200, 201, 266, 305, 307, 318, 319, 328, 332, 337], "zo": [2, 270, 276, 305, 307, 309, 328, 332], "seq": [2, 307, 328, 332], "lagtim": [2, 207, 218, 249, 305, 309, 328, 332], "ON": [2, 326, 328, 332], "transit": [2, 8, 124, 141, 214, 222, 249, 305, 307, 328, 332], "10": [2, 24, 42, 52, 64, 79, 87, 100, 104, 106, 108, 122, 183, 205, 208, 209, 219, 223, 227, 231, 233, 254, 271, 303, 304, 313, 315, 319, 320, 322, 323, 325, 326, 327, 328, 330, 331, 332, 340, 341, 342, 343, 344, 347, 350], "peripher": [2, 8, 47, 123, 185, 214, 249, 270, 276, 305, 307, 309, 318, 328, 331, 332, 347], "cat": [2, 36, 313, 328], "note": [2, 4, 6, 23, 35, 75, 76, 104, 113, 120, 121, 122, 215, 231, 278, 279, 280, 284, 287, 303, 315, 318, 323, 325, 330, 331, 333, 334, 343, 347], "overriden": 2, "ignor": [2, 9, 120, 121, 122, 171, 263, 305, 307, 331, 333], "soon": 2, "stai": [2, 25], "vice": 2, "versa": 2, "instanc": [2, 140, 177, 313, 328, 341], "below": [2, 6, 183, 208, 231, 310, 311, 318, 319, 323, 325, 326, 332, 334, 341, 342, 346, 347], "might": [2, 75, 309, 326, 337, 341, 350], "applic": [2, 77, 279, 297, 309, 326, 328, 337], "detail": [2, 231, 262, 265, 267, 268, 270, 272, 273, 309, 319, 326, 329, 332, 334, 340, 342, 346, 349], "exact": [2, 326], "workflow": [2, 3, 259, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 305, 309, 322, 324, 326, 332, 337], "henc": 2, "visual": [2, 292], "extens": [2, 18, 280, 282, 315, 326, 329], "principl": [2, 329], "question": [2, 308], "becom": [2, 230, 305, 307, 318, 337], "relat": [2, 3, 280, 284, 285, 287, 305, 308, 343], "acronym": 2, "six": 2, "subhead": 2, "chosen": [2, 204, 305, 318, 323, 331, 348], "analysi": 2, "compon": [2, 307, 316, 322, 326, 329, 340], "pd": [2, 6, 15, 37, 40, 46, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 79, 82, 86, 87, 88, 89, 90, 91, 99, 100, 103, 104, 106, 108, 109, 111, 113, 117, 122, 126, 129, 163, 164, 165, 166, 167, 168, 169, 170, 173, 189, 190, 191, 192, 197, 241, 242, 252, 253, 254, 256, 275, 276, 277, 278, 283, 286, 305, 315, 328, 334], "metabolit": [2, 8, 44, 149, 305, 328, 346, 348], "stage": [2, 313], "reduced_stepwis": [2, 270, 276, 305, 309, 332], "iiv_strategi": [2, 267, 270, 305, 307, 309, 323, 332], "absorption_delai": [2, 270, 305, 309, 332], "rank_typ": [2, 256, 267, 268, 270, 307, 309, 323, 325, 332], "mix": [2, 42, 55, 147, 211, 256, 305, 316, 322, 325, 328, 329, 332, 337], "cutoff": [2, 220, 252, 253, 254, 256, 267, 268, 270, 305, 307, 309, 323, 325, 332], "expect": [2, 14, 55, 63, 66, 308, 310, 326, 340], "rerun": [2, 348], "brute_forc": [2, 267, 305, 323], "fullblock": [2, 267, 270, 305, 323, 332], "no_add": [2, 267, 270, 305, 323, 332], "iov": [2, 25, 42, 113, 128, 151, 181, 268, 305, 307, 331, 340, 348], "tri": [2, 307, 332], "list_of_paramet": [2, 39, 42, 268, 307, 325], "distribut": [2, 17, 22, 25, 42, 47, 63, 66, 79, 130, 162, 170, 185, 188, 190, 191, 192, 230, 234, 268, 294, 303, 305, 307, 320, 326, 328, 332, 340, 341, 348], "remain": [2, 25, 93, 231, 308, 326], "group": [2, 24, 30, 163, 168, 189, 272, 307, 324, 342], "p_valu": [2, 272, 307, 342], "05": [2, 47, 56, 57, 58, 59, 67, 68, 69, 70, 185, 303, 307, 313, 330, 331, 340, 343], "p_forward": [2, 265, 307, 313], "p_backward": [2, 265, 307, 313], "max_step": [2, 265, 307, 313], "scm": [2, 265, 305, 313, 337, 339], "forward": [2, 265, 305, 307, 313, 343], "backward": [2, 265, 278, 305, 307, 313, 343], "entir": [2, 308, 311, 326, 328, 341], "three": [2, 305, 316, 326, 333], "directli": [2, 44, 104, 143, 280, 284, 287, 305, 307, 309, 316, 326, 329, 331, 337], "due": [2, 305, 342, 345], "miss": [2, 6, 100, 106, 305], "next": [2, 53, 305, 326, 331, 332, 333, 342], "mechanist": 2, "exploratori": [2, 313, 328], "number_of_candid": [2, 271, 341], "fraction": [2, 7, 192, 271, 303, 320, 341], "ucp": [2, 65, 71, 192, 271], "use_initial_estim": [2, 271, 341], "prefix_nam": [2, 271, 341], "previous": [2, 63, 66, 168, 170, 305, 333], "variou": [2, 75, 231, 276, 277, 286, 305, 307, 308, 311, 313, 316, 319, 323, 324, 325, 332, 334, 337, 341, 342, 346, 347], "summari": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 255, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 303, 305, 309, 313, 319, 320, 323, 325, 332, 334, 338, 341, 342, 346, 347], "access": [2, 309, 313, 315, 319, 323, 325, 326, 329, 331, 332, 333, 334, 341, 342, 346, 347, 350], "json": [2, 10, 258, 260, 279, 289, 305, 307, 309, 313, 315, 319, 323, 325, 332, 334, 341, 342, 346, 347], "format": [2, 18, 76, 305, 307, 310, 313, 316, 319, 322, 323, 324, 325, 326, 329, 331, 332, 334, 336, 341, 342, 346, 347], "summary_tool": [2, 305, 313, 319, 323, 325, 332, 334, 341, 342, 347], "candid": [2, 270, 271, 305, 307, 309, 313, 318, 319, 334, 341, 342, 347, 348], "compar": [2, 256, 303, 305, 313, 319, 334, 337, 341, 342, 347, 348], "rank": [2, 256, 267, 268, 270, 305, 307, 313, 334, 341, 342, 345, 347, 348], "selected_model": 2, "nan": [2, 104, 242, 303, 305, 313, 319, 320, 323, 325, 331, 332, 340, 341, 342, 343, 345, 347], "modelsearch_run7": 2, "depot": [2, 7, 8, 9, 44, 141, 149, 202, 218, 222, 305, 328, 331, 332], "2364": 2, "853749": 2, "iivsearch_run34": 2, "mdt": [2, 305, 331], "2397": 2, "309843": 2, "best_ruvsearch_2": [2, 342], "time_varying2": [2, 342], "iiv_on_ruv": [2, 272, 305, 338, 340, 342], "2496": 2, "804117": 2, "iovsearch_run6": [2, 325], "2619": 2, "709509": 2, "2645": 2, "684455": 2, "dofv": [2, 252, 253, 276, 303, 304, 305, 313, 338, 340, 341, 342], "n_param": [2, 313, 325, 334, 341, 342, 347], "d_param": [2, 313, 325, 334, 341, 342, 347], "000000": [2, 49, 56, 57, 58, 67, 313, 320, 323, 325, 330, 332, 334, 342, 347], "456094": 2, "11": [2, 64, 86, 87, 89, 100, 104, 106, 108, 122, 254, 303, 304, 309, 313, 320, 322, 323, 325, 326, 327, 330, 331, 332, 340, 343, 344, 347, 350], "99": [2, 49, 134, 171, 242, 303, 313, 329, 331], "494274": 2, "122": 2, "905392": 2, "25": [2, 64, 86, 89, 90, 93, 100, 106, 109, 122, 159, 254, 303, 304, 313, 315, 323, 327, 330, 331, 332, 338, 340, 341, 344], "974946": 2, "modelsearch_run1": [2, 305], "modelsearch_run2": 2, "modelsearch_run3": 2, "modelsearch_run4": 2, "retries_run1": [2, 341], "retries_run2": [2, 341], "retries_run3": [2, 341], "retries_run4": [2, 341], "retries_run5": [2, 341], "2272": 2, "860804": 2, "35": [2, 64, 93, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 342, 344], "2091": 2, "335594": 2, "332746": 2, "516": 2, "332840": 2, "1089": 2, "2032": 2, "002236": 2, "2700": 2, "2530": 2, "976558": 2, "1663": 2, "2476": 2, "102607": 2, "2178": 2, "2600": 2, "287460": 2, "3740": 2, "2123": 2, "583364": 2, "2210": 2, "pop_cl_estim": [2, 313, 319, 325, 342], "40": [2, 64, 93, 100, 104, 106, 122, 126, 159, 183, 217, 254, 303, 304, 315, 319, 327, 330, 331, 341, 343, 344], "63140": 2, "91": [2, 338, 340], "36500": 2, "505": 2, "27": [2, 64, 100, 106, 122, 126, 254, 303, 304, 313, 327, 330, 331, 332, 334, 342, 344], "36780": 2, "1078": 2, "46": [2, 64, 93, 100, 106, 122, 254, 303, 304, 319, 327, 330, 331, 344], "37230": 2, "2687": 2, "82": 2, "91807": 2, "1651": 2, "66": [2, 313, 338], "09260": 2, "2166": 2, "09": [2, 39, 46, 48, 195, 204, 216, 313, 323, 331, 332, 333, 334, 338], "88190": 2, "3728": 2, "76": [2, 313], "26100": 2, "2196": 2, "26": [2, 64, 100, 106, 122, 254, 303, 304, 313, 325, 327, 330, 331, 340, 343, 344], "26170": 2, "pop_cl_s": 2, "pop_cl_rs": 2, "pop_vcage_rs": 2, "pop_clsex_estim": [2, 313], "pop_clsex_s": 2, "pop_clsex_rs": 2, "pop_mdtsex_estim": 2, "pop_mdtsex_s": 2, "pop_mdtsex_rs": 2, "pop_vcsex_estim": [2, 313], "pop_vcsex_s": 2, "pop_vcsex_rs": 2, "127": [2, 6, 323], "summary_error": [2, 313, 319, 323, 325, 332, 341], "summarize_error": [2, 305, 313, 319, 323, 325, 332, 341], "datafram": [2, 6, 15, 18, 24, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 79, 82, 86, 87, 89, 90, 91, 100, 104, 106, 163, 164, 165, 166, 167, 168, 170, 173, 189, 190, 191, 192, 241, 252, 253, 254, 256, 275, 276, 277, 278, 283, 286, 289, 305, 315, 337, 341], "messag": [2, 283, 305, 307, 313, 319, 323, 325, 332, 341], "index": [2, 10, 18, 24, 25, 28, 38, 51, 52, 63, 66, 73, 74, 109, 126, 179, 200, 201, 265, 275, 278, 289, 304, 305, 320, 322, 329, 331, 341, 343, 350], "categori": [2, 6, 18, 36, 42, 172, 275, 307, 313, 318, 319, 323, 325, 328, 332, 334, 341], "error_no": [2, 313, 319, 323, 325, 332, 341], "plot": [2, 164, 165, 166, 167, 168, 169, 170, 305, 320, 327, 337], "found": [2, 8, 24, 113, 275, 293, 303, 304, 305, 311, 314, 317, 320, 321, 322, 323, 325, 326, 329, 330, 332, 340, 341, 342, 346, 348, 349, 350], "report": [2, 246, 305, 311, 324, 337], "panda": [2, 6, 10, 305, 315, 316, 337], "io": [2, 311, 316, 322], "style": 2, "styler": 2, "0x7fe3fd678810": 2, "nbsp": 2, "rse": [2, 303, 330, 345], "pop_cl": [2, 4, 303, 331], "0637": 2, "pop_vc": [2, 331], "6158": 2, "pop_mat": [2, 48, 331, 333], "0313": 2, "pop_qp1": [2, 331], "108": [2, 93, 109, 159, 217, 315, 330, 331], "3610": 2, "pop_vp1": [2, 331], "2972": 2, "pop_mdt": [2, 331], "9278": 2, "time_vari": [2, 220, 272, 340, 342], "2106": 2, "iiv_vc": [2, 331], "1818": 2, "iiv_cl": [2, 17, 22, 25, 331, 333], "2668": 2, "iiv_cl_iiv_mdt": 2, "1068": 2, "iiv_mdt": 2, "3711": 2, "iiv_ruv1": 2, "1777": 2, "omega_iov_2": 2, "1395": 2, "1436": 2, "alt": [2, 164, 165, 166, 167, 168, 169, 170, 303, 320, 327], "layerchart": [2, 164, 165, 166, 167, 169, 303, 327], "page": [3, 304, 306, 311, 319, 332, 333, 346], "public": [3, 316], "modul": [3, 8, 305, 310, 315, 329, 331, 336, 350], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 305, 309, 315, 322, 326, 329, 331], "statement": [3, 4, 8, 18, 33, 34, 36, 37, 39, 41, 42, 46, 47, 48, 75, 137, 160, 161, 162, 178, 180, 185, 186, 193, 194, 195, 197, 202, 203, 204, 207, 210, 211, 214, 215, 216, 218, 220, 222, 225, 226, 229, 231, 232, 233, 234, 243, 250, 305, 307, 313, 318, 326, 331, 337, 345], "transform": [3, 18, 34, 170, 193, 195, 198, 216, 231, 232, 233, 234, 305, 307, 322, 332, 333, 340, 341, 349], "manipul": [3, 24, 315, 324, 331, 333, 349], "built": [3, 160, 251, 307, 311, 318, 324], "run": [3, 79, 168, 170, 183, 215, 247, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 284, 291, 303, 304, 305, 314, 322, 324, 326, 327, 330, 336, 337, 340, 343, 344, 348, 350], "packag": [3, 307, 316, 322, 324, 326, 335, 350], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 25, 28, 39, 60, 61, 63, 88, 93, 101, 114, 116, 125, 131, 135, 157, 193, 195, 205, 208, 215, 216, 227, 228, 305, 307, 308, 326, 329, 337, 344], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 308, 311, 324, 326, 329], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 42, 52, 99, 256, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 305, 312, 313, 318, 320, 323, 325, 326, 327, 329, 331, 332, 333, 334, 335, 340, 341, 342, 343, 346, 347], "represent": [4, 249, 292, 315, 322, 333], "togeth": [4, 25, 207, 218, 311, 316, 320, 327, 342, 350], "sympi": [4, 6, 8, 17, 22, 25, 28, 33, 63, 88, 102, 110, 113, 125, 135, 136, 138, 139, 150, 157, 193, 195, 204, 205, 208, 215, 216, 220, 227, 316, 329, 337], "str": [4, 6, 7, 8, 10, 17, 18, 22, 23, 25, 28, 30, 33, 36, 39, 41, 42, 45, 47, 49, 52, 63, 77, 81, 82, 84, 88, 93, 97, 105, 110, 113, 118, 128, 129, 130, 132, 135, 138, 139, 140, 150, 151, 157, 160, 163, 169, 170, 173, 174, 175, 177, 180, 181, 183, 185, 189, 192, 193, 194, 195, 199, 204, 205, 208, 212, 214, 215, 216, 220, 221, 227, 230, 231, 232, 233, 234, 237, 238, 244, 245, 247, 248, 249, 250, 251, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 302, 305], "expr": [4, 9, 25, 28, 33, 37, 40, 93, 125, 157, 194, 197, 205, 227, 228], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 25, 28, 221, 308, 326, 337, 347], "hand": [4, 8, 63], "side": [4, 8, 63, 198], "eta_cl": [4, 39, 42, 331, 333], "rhs_symbol": [4, 8, 27], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 281, 283, 285, 289, 290, 292], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 281, 283, 289], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 35, 53, 188, 189, 199, 217, 229, 231, 290, 292, 293, 305, 307, 315, 316, 331, 333], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 38, 200, 247, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 287, 288, 289, 290, 292, 305], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28, 329], "substitut": [4, 5, 7, 8, 16, 17, 22, 25, 27, 28, 326, 331], "dict": [4, 5, 6, 10, 16, 17, 22, 24, 25, 28, 51, 65, 86, 87, 89, 90, 91, 96, 98, 101, 115, 116, 170, 187, 206, 209, 217, 221, 223, 239, 256, 263, 273, 280, 281, 284, 287, 288, 291, 292, 298, 315, 329], "old": [4, 28, 187, 305, 340], "new": [4, 6, 9, 10, 14, 17, 22, 23, 24, 25, 26, 28, 29, 34, 39, 42, 46, 48, 49, 76, 80, 81, 92, 96, 97, 98, 126, 187, 188, 189, 193, 195, 204, 206, 208, 212, 215, 216, 238, 239, 242, 293, 294, 307, 308, 311, 313, 315, 326, 328, 331, 332, 336, 340, 341, 342, 348], "pair": [4, 5, 8, 16, 17, 22, 25, 28, 36, 73, 217, 276, 307], "return": [4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 287, 289, 292, 294, 297, 298, 305, 326, 331, 341, 346], "updat": [4, 9, 10, 18, 24, 28, 205, 227, 241, 242, 244, 271, 305, 307, 311, 324, 326, 331, 332, 333, 337, 342, 349, 350], "b": [4, 37, 40, 129, 194, 197, 326, 332, 345], "to_dict": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 281, 283, 289], "amount": [5, 6, 7, 8, 16, 37, 115, 305, 315, 318, 329, 332], "immut": [5, 6, 10, 13, 15, 16, 18, 23, 24, 25, 27, 28, 29, 30, 285, 289, 290, 292, 305, 331], "int": [5, 8, 9, 16, 28, 33, 38, 44, 51, 52, 55, 63, 66, 74, 80, 108, 110, 113, 120, 121, 123, 124, 138, 139, 150, 179, 183, 189, 190, 191, 192, 193, 195, 200, 201, 204, 214, 215, 216, 219, 220, 222, 263, 264, 265, 269, 271, 272, 275, 286, 347], "amt": [5, 7, 8, 10, 16, 28, 33, 47, 75, 84, 85, 93, 100, 109, 115, 137, 159, 160, 161, 162, 171, 172, 185, 202, 203, 207, 210, 211, 214, 217, 218, 222, 225, 226, 229, 315, 329, 331, 333], "unknown": [6, 157, 315], "unit": [6, 18, 135, 341], "ratio": [6, 265, 272, 305, 307, 315, 342], "datatyp": [6, 18, 173], "float64": [6, 10, 62, 69, 70, 73, 88, 89, 90, 91, 109, 126, 251, 315, 329, 330, 331], "descriptor": [6, 10, 18, 33], "colum": 6, "measur": [6, 308, 315, 326], "bool": [6, 9, 18, 23, 30, 33, 34, 36, 40, 44, 49, 55, 62, 72, 74, 81, 84, 92, 115, 119, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 189, 191, 204, 215, 216, 222, 241, 242, 244, 245, 250, 262, 263, 271, 278, 279, 281, 286, 289, 297], "discret": [6, 315, 325], "union": [6, 110, 113, 138, 139, 150, 170, 193, 195, 204, 205, 215, 216, 220, 227], "tupl": [6, 7, 8, 25, 107, 163, 189, 290, 298], "label": [6, 305], "bar": [6, 320], "dtype": [6, 10, 52, 62, 65, 69, 70, 73, 74, 88, 89, 90, 91, 108, 109, 122, 126, 251, 315, 330, 331], "nomin": [6, 315], "ordin": [6, 315], "rang": [6, 82, 289, 328], "na": [6, 231], "int8": 6, "sign": [6, 233, 326], "bit": 6, "128": 6, "int16": 6, "16": [6, 64, 87, 100, 106, 122, 216, 234, 254, 303, 304, 313, 323, 325, 326, 327, 330, 331, 338, 340, 343, 344, 347], "768": 6, "767": 6, "int32": [6, 10, 52, 315], "147": 6, "483": 6, "648": 6, "647": [6, 323], "int64": [6, 122, 331], "64": 6, "223": [6, 314], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "65": [6, 313], "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 64, 87, 93, 100, 106, 122, 254, 303, 304, 313, 323, 325, 327, 330, 331, 338, 340, 344], "446": 6, "744": [6, 88, 93, 108, 159, 217, 315, 330, 331], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 326], "float": [6, 23, 33, 39, 46, 48, 49, 54, 55, 73, 74, 77, 170, 183, 192, 208, 215, 220, 231, 252, 253, 254, 256, 262, 263, 265, 267, 268, 270, 271, 272, 273, 286, 305], "6": [6, 64, 88, 93, 100, 106, 122, 126, 159, 217, 254, 303, 304, 313, 315, 320, 323, 325, 326, 327, 330, 331, 332, 334, 340, 341, 342, 343, 344, 347], "55": [6, 64, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 332, 340, 344], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 85, 235, 305, 307, 329], "tran": [6, 85, 235, 305, 307, 329], "date": [6, 82, 85, 235, 305, 307, 326, 350], "common": [6, 36, 66, 298, 321, 326, 349], "birth": 6, "human": [6, 289, 337], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 315, 337], "concentr": [6, 40, 104, 315, 337], "substanc": 6, "blood": 6, "subject": [6, 14, 100, 112, 277, 315, 326], "identifi": [6, 30, 313, 315, 323, 326, 340, 348], "uniqu": [6, 30, 53, 81, 189, 280, 294, 305, 307, 309, 331], "statist": [6, 63, 66, 233, 315, 320, 329], "interv": [6, 315, 316], "ration": 6, "individu": [6, 18, 41, 62, 63, 64, 66, 79, 89, 90, 113, 114, 120, 121, 122, 126, 131, 168, 169, 170, 180, 190, 191, 192, 241, 252, 253, 254, 276, 277, 286, 305, 307, 313, 323, 326, 331, 337, 340], "max": [6, 36, 37, 40, 197, 210, 211, 303, 331, 334, 346], "idv": [6, 10, 52, 126, 165, 220, 315, 340], "independ": [6, 8, 52, 315, 326, 329, 331, 335, 340, 348], "dvid": [6, 18, 44, 93, 110, 113, 138, 139, 150, 193, 195, 199, 204, 215, 216, 220, 318, 329, 334, 338, 340, 342], "infus": [6, 154, 218, 225, 305, 331], "addit": [6, 36, 39, 51, 55, 81, 92, 138, 139, 150, 153, 193, 195, 216, 231, 305, 307, 313, 315, 319, 326, 340, 342, 348], "interdos": 6, "ss": 6, "steadi": [6, 221, 305, 347], "state": [6, 24, 36, 221, 305, 326, 334, 343, 345, 346, 347], "event": [6, 32, 99, 111, 217, 235, 305, 308, 326], "mdv": [6, 117, 305], "yet": [6, 309], "exactli": 6, "lloq": [6, 183, 208, 231, 263, 305, 307, 331], "blq": [6, 183, 208, 231, 272, 305], "unkown": 6, "hasn": 6, "custom": [6, 36, 39, 42, 204, 307, 326, 337], "physic": [6, 135, 308, 315, 326], "recogn": [6, 213, 308, 326, 333], "without": [6, 9, 60, 61, 86, 87, 89, 90, 91, 114, 125, 131, 189, 282, 303, 305, 307, 311, 316, 318, 326, 329], "static": [6, 10, 18, 290], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 25, 28, 31, 76, 137, 162, 222, 289, 305, 307, 328], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 23, 25, 72, 73, 74, 110, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 305, 309, 329, 331, 333, 334, 341, 350], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 305, 307, 337], "properti": [6, 14, 17, 22, 23, 24, 26, 29, 326, 329], "lag_tim": [7, 9, 305], "bioavail": [7, 9, 34, 101, 176, 305, 328], "compartmentbas": 7, "compartment": [7, 8, 31, 305, 307, 329], "system": [7, 8, 9, 28, 31, 60, 61, 63, 83, 86, 87, 89, 90, 91, 114, 115, 125, 131, 141, 143, 144, 145, 148, 149, 152, 154, 205, 227, 229, 284, 305, 307, 310, 311, 318, 324, 326, 329, 333], "lag": [7, 9, 43, 116, 182, 305], "enter": [7, 326], "bolu": [7, 8, 28, 47, 75, 137, 160, 185, 202, 203, 207, 210, 211, 214, 222, 226, 229, 305, 307, 329, 331], "comp": [7, 8, 305], "a_centr": [7, 8, 28, 37, 75, 83, 115, 137, 160, 197, 205, 210, 211, 216, 226, 329, 331], "alag": [7, 305], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 309], "builder": [8, 9, 292, 293], "graph": [8, 292, 307, 311, 318], "od": [8, 28, 31, 48, 60, 61, 63, 86, 87, 89, 90, 91, 114, 115, 125, 131, 141, 143, 144, 145, 148, 152, 154, 205, 213, 227, 229, 305, 307], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 222, 328], "k21": [8, 328], "vector": [8, 17, 136, 190, 191, 192, 304, 320, 329], "load_example_model": [8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 250, 254, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 305, 322, 330, 331], "pprint": [8, 125], "ode_system": [8, 28, 37, 47, 185, 202, 203, 207, 210, 211, 214, 218, 222, 225, 226, 229, 305, 329, 331], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 47, 141, 149, 292, 326, 332], "compartment_nam": 8, "compartmental_matrix": [8, 329], "matrix": [8, 14, 17, 25, 56, 57, 58, 59, 63, 66, 67, 68, 69, 70, 73, 136, 190, 191, 192, 227, 286, 304, 305, 307, 320, 329, 331, 341, 345], "set_first_order_absorpt": [8, 48, 207, 218, 225, 305, 331], "dosing_compart": 8, "receiv": [8, 326], "equat": [8, 63, 83, 329, 331], "zero_order_input": 8, "zero": [8, 9, 74, 136, 152, 154, 155, 162, 205, 218, 225, 226, 227, 305, 309, 325, 328, 331, 332, 335, 345], "set_zero_order_absorpt": [8, 202, 207, 218, 305, 331, 350], "atom": 8, "http": [8, 304, 315, 316, 320, 322, 326, 342], "doc": [8, 311], "org": [8, 304, 306, 315, 320, 326, 342], "latest": [8, 305, 316, 322], "core": [8, 322, 329], "html": [8, 246, 316, 326], "basic": [8, 77, 78, 289, 305, 315, 318, 326, 328, 333, 349], "find_compart": [8, 9, 37], "its": [8, 23, 28, 74, 82, 162, 276, 305, 307, 313, 315, 316, 322, 324, 326, 329, 331, 345, 350], "find_compartment_or_rais": 8, "find_depot": 8, "out": [8, 25, 40, 72, 242, 305, 326, 329, 336, 341, 350], "outflow": 8, "unidirect": [8, 44, 141], "find_peripheral_compart": 8, "perihper": 8, "associ": [8, 308, 325, 326], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 23, 25, 188, 230, 235, 248, 269, 275, 278, 280, 305, 307, 313, 316, 318, 320, 326, 328], "distinguish": [8, 326], "get_bidirect": 8, "bidirect": 8, "interest": [8, 63, 308, 313, 326, 337], "get_compartment_inflow": 8, "go": [8, 138, 139, 150, 269, 278, 305, 315, 326, 331], "inflow": 8, "get_compartment_outflow": 8, "get_flow": 8, "destin": [8, 9, 244, 245, 280, 284, 287, 307], "ka": [8, 9, 41, 202, 218, 305, 325, 331], "get_n_connect": 8, "c": [9, 37, 40, 168, 197, 233, 306, 312, 319, 320, 325, 326, 331, 333, 342, 345], "compartmentalsystem": [9, 28, 305, 329], "newli": [9, 25, 325], "move_dos": 9, "move": [9, 242, 305], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 176], "set_dos": 9, "previou": [9, 23, 25, 28, 43, 79, 108, 137, 202, 218, 222, 225, 263, 277, 297, 305, 307, 326, 332, 347], "exist": [9, 10, 28, 33, 35, 36, 51, 53, 78, 81, 105, 108, 231, 280, 281, 282, 305, 307, 310, 315, 325, 347, 348], "argument": [9, 38, 86, 87, 89, 90, 91, 113, 200, 247, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 285, 290, 305, 307, 328, 345, 348, 350], "set_input": 9, "set_lag_tim": [9, 305], "force_absolute_path": 10, "sequenc": [10, 15, 24, 25, 28, 79], "metadata": [10, 280, 281, 284, 287, 288, 291, 305], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 82], "idv_column": 10, "apgr": [10, 28, 33, 36, 75, 84, 85, 93, 100, 106, 119, 137, 140, 159, 160, 161, 162, 171, 172, 217, 237, 315, 320, 329, 331, 333, 340], "fa1": [10, 84, 85, 93, 100, 159, 171, 172, 217, 315, 331], "fa2": [10, 84, 85, 93, 100, 159, 171, 172, 217, 315, 331], "example_model": 10, "dta": [10, 171, 331, 333], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "read_json": 10, "read": [10, 173, 174, 175, 257, 258, 263, 279, 280, 281, 284, 287, 288, 291, 305, 309, 310, 315, 322, 326, 330, 336, 337, 339, 349], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 289, 315], "recover": 12, "issu": [12, 21, 305, 311, 324, 350], "hashabl": 13, "level": [13, 17, 22, 25, 29, 30, 113, 151, 231, 305, 307, 309, 315, 324, 331, 337, 343, 349], "variabilitylevel": 13, "parameter_nam": [13, 25, 97, 236, 238, 305, 333], "definit": [13, 14, 18, 26, 28, 64, 191, 192, 254, 305, 307, 313, 320, 326, 328, 329, 341], "varianc": [13, 17, 22, 25, 62, 63, 66, 188, 204, 242, 323, 329, 341, 348], "abstract": [13, 27, 284, 291, 304, 306, 316, 324, 329], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 25], "name1": [13, 17, 22, 169], "name2": [13, 17, 22, 169], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 329, 331], "evalu": [14, 38, 86, 87, 88, 89, 90, 91, 200, 201, 250, 266, 278, 286, 303, 305, 324, 329, 331, 337, 340, 344, 345], "maximum_evalu": [14, 319, 329, 331], "laplac": [14, 38, 200, 201, 266, 305, 307, 319, 329, 331], "isampl": [14, 38, 51, 200, 305, 319, 329, 331], "niter": [14, 38, 51, 200, 305, 319, 329, 331], "auto": [14, 15, 305, 319, 329, 331], "keep_every_nth_it": [14, 15, 305, 319, 329, 331], "residu": [14, 25, 91, 133, 164, 165, 253, 254, 276, 286, 305, 342, 344, 348], "predict": [14, 18, 89, 90, 114, 119, 131, 164, 166, 167, 168, 252, 253, 254, 276, 286, 305, 314, 340], "solver": [14, 26, 213, 219, 266, 305, 307, 348], "solver_rtol": [14, 26, 219], "solver_atol": [14, 26, 219], "tool_opt": [14, 15, 26, 38, 51, 200, 219, 309, 329, 331], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 26, 36, 39, 76, 82, 107, 286, 287, 288, 307, 310, 311, 313, 316, 326, 329, 331, 336, 345], "epsilon": [14, 25, 60, 61, 86, 87, 172, 204, 215, 224, 231, 243, 305, 307, 316, 331], "deriv": [14, 26, 135, 305, 311, 313, 331, 334], "eta": [14, 25, 28, 39, 42, 60, 61, 62, 64, 79, 86, 87, 89, 162, 170, 171, 172, 175, 180, 181, 204, 230, 232, 233, 234, 286, 305, 307, 316, 320, 323, 325, 328, 329, 333, 340], "preserv": [14, 25, 326], "comput": [14, 311, 312, 313, 326, 341], "similar": [14, 303, 319, 326, 332, 341, 342], "keep": [14, 23, 183, 189, 267, 280, 305, 308, 316, 323, 326], "result": [14, 18, 25, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 79, 86, 87, 88, 89, 90, 91, 190, 191, 192, 241, 242, 246, 247, 248, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 291, 294, 297, 305, 308, 311, 324, 326, 333, 336, 337, 339, 345, 348, 349], "everi": [14, 231, 315, 326], "nth": 14, "iter": [14, 15, 28, 63, 163, 189, 191, 272, 286, 305, 331, 338, 341, 342], "laplacian": 14, "cross": [14, 326], "product": [14, 40, 308, 319, 326, 328, 334], "gradient": [14, 60, 61, 86, 87, 286, 305, 345], "fim": 14, "design": [14, 312, 326, 328, 329, 337], "append": [14, 51, 305], "uncondit": [14, 171, 331], "regardless": [14, 215, 308, 326, 329], "termin": [14, 286, 326, 345], "print": [14, 72, 171, 172, 255, 289, 305, 331], "eigenvalu": [14, 145], "precond": 14, "precondit": 14, "cycl": 14, "supported_method": [14, 319], "frozenset": 14, "bay": [14, 38, 200, 201, 266, 307], "imp": [14, 38, 200, 201, 266, 305, 307, 319, 331], "impmap": [14, 38, 200, 201, 266, 305, 307], "ITS": [14, 38, 200, 201, 266, 305, 307, 325, 332], "saem": [14, 38, 200, 201, 266, 305, 307], "supported_parameter_uncertainty_method": 14, "efim": 14, "to_datafram": [15, 24, 283], "overview": [15, 283, 303, 307, 317, 329, 343], "estimation_step": [15, 18, 38, 45, 51, 179, 184, 200, 201, 219, 305, 329, 331], "doctest": 15, "ellipsi": 15, "durat": [16, 218, 225, 331], "mutual": [16, 325, 328], "exclus": [16, 326, 328], "d1": [16, 218, 225, 305, 331], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 25, 42, 79, 230, 268, 320, 325, 331], "omega_cl": [17, 22, 25], "omega_v": [17, 25], "corr_cl_v": [17, 25], "omega_cl_v": [17, 25], "dist": [17, 22, 25, 305, 311, 329], "iiv_v": [17, 25], "itself": [17, 22, 326], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 25], "random_vari": [18, 79, 230, 329, 331, 350], "dependent_vari": [18, 305, 329], "y": [18, 24, 28, 75, 110, 135, 137, 160, 171, 172, 175, 178, 193, 195, 204, 215, 216, 220, 231, 243, 329, 331, 333], "observation_transform": [18, 305], "estimationstep": [18, 38, 45, 184, 200, 201, 305, 319, 329], "modelfit_result": [18, 254, 278, 285, 305], "parent_model": [18, 305, 313, 319, 323, 325, 332, 334, 341, 342, 347], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 305, 311, 329, 333, 337], "map": [18, 31, 315], "model_cod": [18, 305], "modelfit": [18, 251, 256, 269, 278, 280, 284, 285, 286, 287, 303, 305, 307, 349], "parent": [18, 256, 276, 277, 285, 294, 318, 319], "randomvari": [18, 305, 329], "likelihood": [18, 54, 55, 231, 265, 272, 307, 342], "2ll": [18, 54, 55, 305], "log": [18, 36, 37, 39, 55, 162, 193, 195, 197, 198, 216, 285, 286, 305, 315, 320], "record": [18, 52, 86, 87, 88, 89, 90, 91, 92, 163, 183, 208, 286, 305, 311, 333], "would": [18, 30, 162, 303, 313, 318, 320, 326, 331, 333, 337], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 305, 324, 333, 336, 348], "parse_model_from_str": 18, "update_sourc": [18, 305, 333], "dummypath": [18, 331], "write_fil": 18, "forc": [18, 25, 81, 191, 192, 241, 244, 245, 305, 307, 323, 325, 326], "write": [18, 244, 245, 279, 305, 311, 312, 313, 326, 336, 349], "extern": [18, 257, 311, 315, 316, 322, 336, 337], "msg": 20, "syntax": [20, 305, 328], "normal": [22, 25, 30, 42, 65, 71, 162, 188, 192, 271, 320, 325, 326], "init": [23, 24, 36, 49, 98, 206, 239, 242, 307, 320, 329, 341], "inf": [23, 331], "param": [23, 307], "tvcl": [23, 28, 33, 39, 42, 75, 88, 137, 160, 161, 162, 171, 172, 180, 320, 329, 331, 333], "005": 23, "boolean": [23, 24, 92, 97, 98, 189, 198, 204, 238, 239, 252, 253, 254, 315, 345], "constrain": [23, 316, 329], "unfix": [23, 96, 97, 98, 206, 236, 238, 239, 305], "back": [23, 71, 305], "less": [23, 347], "greater": [23, 345], "altern": [23, 233, 311, 326, 347], "constructor": [23, 305], "collect": [24, 25, 309, 320, 326], "usual": [24, 311], "displai": [24, 83, 193, 305, 320, 326], "summar": [24, 275, 277, 278, 320, 327], "par1": 24, "par2": 24, "pset": 24, "fixed": [24, 96], "nonfix": 24, "set_fix": 24, "set_initial_estim": [24, 305, 331], "100": [24, 36, 38, 51, 190, 200, 234, 303, 307, 313, 318, 330, 331, 335, 343], "eta_level": 25, "epsilon_level": 25, "act": [25, 199], "while": [25, 309, 311, 313, 318, 331, 334, 348, 350], "variabilityhierarchi": 25, "contin": 25, "hierarchi": [25, 29], "rv": [25, 79, 132, 186, 230, 329, 350], "normaldistribut": [25, 329], "covariance_matrix": [25, 56, 63, 66, 68, 69, 191, 286, 303, 305, 330], "nrv": 25, "variance_paramet": 25, "rv1": 25, "rv2": 25, "get_rvs_with_same_dist": 25, "join": [25, 230, 305, 308], "ind": 25, "fill": 25, "name_templ": 25, "param_nam": 25, "cov": [25, 36, 56, 63, 64, 66, 68, 69, 191, 304, 305, 311, 319, 320, 331], "taken": [25, 92, 100, 106, 235, 280, 315, 318, 320, 341], "templat": [25, 36, 39, 78, 310], "overrid": [25, 305, 310, 328], "dist1": 25, "dist2": 25, "_": [25, 277, 304, 320], "unjoin": 25, "nearest_valid_paramet": 25, "parameter_valu": 25, "small": 25, "parameters_sdcorr": 25, "sd": [25, 62, 331, 340, 344], "corr": [25, 58, 67, 340], "replace_with_sympy_rv": 25, "stat": [25, 28, 309], "std": [25, 331], "rng": [25, 63, 66, 80, 190, 191, 192, 263, 271], "jointnormaldistribut": [25, 329], "validate_paramet": 25, "seri": [25, 52, 58, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 88, 89, 90, 91, 99, 103, 108, 109, 111, 117, 122, 126, 169, 170, 191, 192, 193, 231, 233, 242, 286, 305, 330], "matric": [25, 64, 192, 305, 316, 330], "semidefinit": [25, 305, 316, 341], "use_cach": 25, "symengin": [25, 316, 337], "cach": 25, "64206": [26, 219], "simul": [26, 219, 337, 344], "replic": [26, 219], "signific": [28, 74, 267, 268, 270, 305, 326, 343, 345], "after_od": [28, 216], "s\u2081": [28, 33, 75, 137, 160, 161, 162, 172, 216, 329], "eps\u2081": [28, 75, 125, 137, 160, 172, 178, 193, 204, 215, 220, 231, 243, 329], "ipr": [28, 75, 89, 137, 160, 164, 166, 171, 172, 215, 216, 305, 329, 330, 331, 344], "ir": [28, 75, 137, 160, 171, 172, 216, 329, 331], "iwr": [28, 75, 137, 160, 171, 172, 216, 329, 331], "before_od": [28, 33, 36, 161, 162, 232, 233, 234], "btime": [28, 33, 75, 137, 160, 161, 162, 171, 172, 329, 331], "tad": [28, 33, 50, 75, 137, 160, 161, 162, 171, 172, 305, 329, 331, 340], "ptvcl": [28, 33, 36, 49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 75, 96, 97, 98, 134, 137, 160, 161, 162, 171, 172, 191, 192, 206, 209, 223, 228, 232, 233, 234, 236, 238, 239, 242, 251, 329, 330, 331], "tvv": [28, 33, 75, 137, 160, 161, 162, 171, 172, 180, 320, 329, 331, 333], "ptvv": [28, 33, 49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 75, 134, 137, 160, 161, 162, 171, 172, 191, 192, 238, 239, 242, 251, 329, 330, 331], "theta\u2083": [28, 33, 75, 137, 160, 161, 162, 172, 329], "eta\u2081": [28, 33, 75, 79, 125, 137, 160, 161, 162, 172, 230, 329], "\u212f": [28, 33, 46, 48, 75, 137, 160, 161, 162, 204, 329, 331], "eta\u2082": [28, 33, 75, 79, 125, 137, 160, 161, 162, 172, 230, 329], "whole": [28, 307, 309, 315, 326], "s1": [28, 151, 171, 331, 333], "symbol_or_stat": 28, "direct_depend": 28, "direct": [28, 292, 313, 326, 328, 334, 343, 346], "find_assign": [28, 39, 41, 42, 46, 48, 178, 180, 193, 194, 195, 197, 204, 215, 220, 231, 243], "find_assignment_index": 28, "full_express": [28, 36, 232, 233, 234], "expand": [28, 92], "full": [28, 79, 114, 125, 131, 221, 304, 305, 307, 310, 320, 323, 325, 326, 332, 340], "exp": [28, 36, 39, 171, 232, 233, 234, 265, 313, 331, 333], "reassign": 28, "sypmpi": 28, "remove_symbol_definit": 28, "elsewher": 28, "longer": [28, 305], "make": [28, 75, 113, 161, 178, 187, 189, 265, 305, 311, 316, 325, 326, 328, 329, 332, 348, 350], "sure": [28, 187, 305, 326, 350], "unless": [28, 289, 313, 326], "func": [31, 290], "presenc": [32, 35, 99, 103], "correctli": [32, 35, 99, 305], "get_admid": [32, 35], "get_cmt": [32, 35, 305, 331], "p": [33, 256, 265, 272, 303, 304, 305, 307, 313, 320, 331, 342, 343], "alreadi": [33, 36, 78, 199, 205, 227, 305, 307, 311, 313, 325, 326, 332], "noth": [33, 53, 183, 231, 326], "allometri": [33, 262, 263, 305, 348], "remove_covariate_effect": [33, 305, 331], "allo_cl": 33, "allo_v": 33, "add_paramet": [34, 305], "logit_transform": 34, "logit": [34, 39, 305], "remove_bioavail": [34, 305], "allow_nest": [36, 305], "linear": [36, 37, 40, 129, 144, 145, 156, 169, 197, 303, 304, 305, 316, 328, 329, 331, 334, 337, 339], "lin": 36, "coveff": [36, 81], "median": [36, 63, 66, 303, 305, 331, 337], "001": [36, 74, 242, 265, 272, 305, 313, 331, 342, 343, 345], "equal": [36, 42, 52, 189, 204, 307, 311, 345], "minimum": [36, 316, 334], "000": [36, 330], "frac": [36, 37, 40, 193, 195, 197, 304, 329, 331, 344, 347], "min": [36, 193, 195, 303, 331], "piecewis": [36, 305], "hockei": 36, "stick": 36, "piece_lin": 36, "theta1": [36, 331], "theta2": [36, 331], "power": [36, 215, 231, 272, 307, 326, 331, 337, 338, 340, 342], "pow": [36, 331], "mai": [36, 231, 309, 323, 325, 326, 331, 332], "abbrevi": [36, 39, 305, 307, 311, 333], "multipli": [36, 39, 204, 303, 307, 331], "pop_clapgr": 36, "cdot": [37, 39, 40, 47, 185, 197, 320, 329, 331, 347], "slope": [37, 40, 129, 197], "bigg": [37, 197], "e_": [37, 40, 197], "ec_": [37, 40, 197], "50": [37, 40, 64, 100, 106, 122, 197, 254, 303, 304, 327, 330, 331, 332, 334, 340, 344, 346], "biggl": [37, 197, 347], "lbrace": [37, 197], "quad": [37, 197], "leq": [37, 197, 320], "atop": [37, 197], "els": [37, 72, 197, 231, 305, 331, 345], "sigmoid": [37, 40, 197], "bigl": [37, 197, 347], "c_0": [37, 197], "loglin": [37, 197], "a_effect": 37, "ke0": 37, "idx": [38, 51, 179, 200, 201, 350], "pass": [38, 80, 200, 247, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 294, 326], "opt": [38, 51, 200, 310], "1000": [38, 51, 88, 200, 320], "len": [38, 51, 179, 183], "set_estimation_step": [38, 45, 51, 179, 184, 201, 305, 331, 350], "remove_estimation_step": [38, 45, 51, 184, 200, 201, 331], "append_estimation_step_opt": [38, 45, 179, 184, 200, 201, 305, 331], "add_parameter_uncertainty_step": [38, 51, 179, 184, 200, 201, 331], "remove_parameter_uncertainty_step": [38, 45, 51, 179, 200, 201, 331], "set_evaluation_step": [38, 45, 51, 179, 184, 200, 331], "initial_estim": [39, 46, 48], "eta_nam": [39, 42, 204, 307], "prop": [39, 331], "rescal": 39, "re_log": 39, "phi": [39, 305, 309, 311, 331], "remove_iiv": [39, 42, 46, 48, 181, 305, 331, 333], "add_pk_iiv": [39, 42, 180, 181, 305, 331, 332], "add_iov": [39, 46, 48, 180, 181, 305, 331], "remove_iov": [39, 42, 46, 48, 180, 305, 331], "prod": 40, "indirect": [40, 326, 328, 334], "turnov": 40, "c_c": 40, "impact": [40, 340], "degrad": [40, 328, 334], "respons": [40, 326], "dr": 40, "dt": [40, 83, 331, 347], "k_": [40, 347], "inhibit": 40, "stimul": 40, "r_0": [40, 347], "pop_ka": [41, 49], "occ": [42, 268, 307, 313, 325], "disjoint": [42, 268, 325], "accept": [42, 120, 121, 122, 307, 326], "explicit": [42, 268, 305, 307, 308, 325, 328], "copi": [42, 127, 133, 134, 305, 309, 323, 325, 326, 331], "add_iiv": [42, 46, 48, 180, 181, 305, 331, 333], "set_transit_compart": [43, 182, 305, 331], "remove_lag_tim": [43, 305, 331], "drug_dvid": 44, "presystem": [44, 149, 305, 318], "present": [44, 99, 103, 111, 307, 313, 315, 318, 320, 326, 332, 348], "presystemet": 44, "add_estimation_step": [45, 51, 179, 184, 200, 201, 305, 331], "set_direct_effect": [46, 129, 305], "ec_50": [46, 263, 273], "ec\u2085\u2080": 46, "pop_ec_50": 46, "eta_ec_50": 46, "parameter": 47, "qpn": 47, "vpn": 47, "volumn": 47, "mathsf": [47, 185], "qp1": [47, 185, 305, 331], "vp1": [47, 185, 331], "qp2": [47, 185, 305], "vp2": [47, 185], "peripheral1": [47, 185, 214, 331], "v1": [47, 185, 214, 331], "v2": [47, 185, 214, 331], "set_peripheral_compart": [47, 185, 305, 331], "remove_peripheral_compart": [47, 214, 305, 331], "Will": [48, 280, 281, 282, 341], "eta_mat": [48, 331], "004693": [49, 65, 134, 320, 329], "009160": [49, 134, 329], "theta_3": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 134, 191, 192, 238, 239, 242, 251, 329, 330, 331], "100000": [49, 134, 319, 329, 331], "ivcl": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 79, 127, 171, 172, 191, 192, 230, 239, 242, 251, 303, 320, 329, 330, 331, 333], "030963": [49, 127, 320, 329], "ivv": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 79, 127, 171, 172, 191, 192, 230, 239, 242, 251, 303, 320, 329, 330, 331], "031128": [49, 127, 171, 242, 320, 329, 331, 333], "sigma_1_1": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 74, 133, 191, 192, 239, 242, 251, 303, 329, 330, 331], "013241": [49, 133, 171, 242, 251, 320, 329, 330, 331, 341], "nbin": 52, "bin": [52, 272, 340, 350], "equal_width": 52, "width": 52, "equal_numb": 52, "binn": 52, "want": [52, 308, 311, 313, 323, 324, 325, 326, 331, 332, 333, 336], "origin": [52, 92, 126, 244, 280, 284, 287, 303, 304, 305, 308, 311, 320, 326, 344], "421": 52, "527": 52, "118": [52, 190, 305, 320], "135": [52, 126, 330, 331, 340], "512": [52, 314], "203": 52, "475": 52, "510": 52, "133": 52, "267": [52, 330], "155": [52, 86, 87, 89, 90, 91, 121, 126, 330, 331], "increas": [53, 271, 311, 341], "until": [53, 278, 326, 350], "do": [53, 191, 303, 305, 307, 311, 320, 326, 333, 342, 345, 350], "run2": [53, 212, 331], "run3": [53, 331], "n_estimated_paramet": [54, 55], "fit": [54, 55, 170, 231, 255, 269, 276, 278, 284, 305, 326, 329, 331, 341, 342, 349, 350], "multiple_test": 55, "mult_test_p": [55, 256], "mult_test_": 55, "variat": 55, "n_random_paramet": 55, "n_individu": 55, "n_fixed_paramet": 55, "n_observ": 55, "n_individ": 55, "n_estimated_iiv_omega_paramet": 55, "penalti": 55, "mbic": [55, 267, 268, 270, 305], "n_predictor": 55, "n_expected_model": 55, "mult_test": 55, "load_example_modelfit_result": [55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 86, 87, 88, 89, 90, 91, 164, 165, 166, 167, 168, 169, 190, 191, 192, 241, 242, 250, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 305], "611": 55, "7071686183284": 55, "616": [55, 305, 330], "536606983396": 55, "610": 55, "7412809453149": 55, "594": 55, "431131169692": 55, "411510e": [56, 59, 68, 69, 330], "08": [56, 58, 59, 68, 69, 313, 330], "010000e": [56, 59, 68, 69, 330], "000002": [56, 58, 59, 68, 69, 303, 330], "000001": [56, 58, 59, 63, 66, 68, 69, 303, 325, 330, 332], "538630e": [56, 58, 59, 68, 69, 330], "07": [56, 57, 58, 59, 67, 68, 69, 70, 303, 313, 323, 325, 330, 340, 341, 343], "178090e": [56, 59, 68, 69, 330], "233530e": [56, 59, 68, 69, 330], "04": [56, 57, 58, 59, 67, 68, 69, 70, 303, 313, 325, 330, 340, 343], "000804": [56, 58, 59, 68, 69, 313, 330], "000050": [56, 58, 59, 68, 69, 330], "171840e": [56, 59, 68, 69, 330], "461760e": [56, 59, 68, 69, 330], "665010e": [56, 59, 68, 69, 330], "06": [56, 58, 59, 68, 69, 303, 309, 313, 323, 325, 330, 340, 343], "040250e": [56, 59, 68, 69, 330], "007016": [56, 58, 59, 68, 69, 330], "000108": [56, 58, 59, 68, 69, 330], "944800e": [56, 59, 68, 69, 330], "932950e": [56, 59, 68, 69, 330], "093430e": [56, 59, 68, 69, 330], "981380e": [56, 58, 59, 68, 69, 330], "000180": [56, 58, 59, 68, 69, 330], "856650e": [56, 59, 68, 69, 330], "867230e": [56, 59, 68, 69, 330], "000039": [56, 58, 59, 68, 69, 330], "000019": [56, 58, 59, 68, 69, 330], "589820e": [56, 58, 59, 68, 69, 330], "685650e": [56, 59, 68, 69, 330], "000029": [56, 58, 59, 68, 69, 330], "000005": [56, 58, 59, 68, 69, 330], "195640e": [56, 59, 68, 69, 330], "007099": [56, 57, 58, 67, 330], "094640": [56, 57, 58, 67, 330], "388059": [56, 57, 58, 67, 73], "097981": [56, 57, 58, 67, 330], "170820": [56, 57, 58, 67, 330], "356899": [56, 57, 58, 67, 73], "138062": [56, 57, 58, 67, 330], "356662": [56, 57, 58, 67, 73, 330], "238441": [56, 57, 58, 67], "096515": [56, 57, 58, 67], "062991": [56, 57, 58, 67, 330], "153616": [56, 57, 58, 67, 330], "185111": [56, 57, 58, 67, 330], "159170": [56, 57, 58, 67, 330], "027495": [56, 57, 58, 67, 330], "calculate_se_from_cov": [56, 57, 58, 59, 67, 68, 70, 305], "calculate_se_from_prec": [56, 57, 58, 59, 67, 68, 69], "precis": [56, 57, 58, 59, 67, 68, 69, 70, 286, 305, 326], "calculate_cov_from_prec": [56, 57, 58, 67, 68, 69, 70], "calculate_cov_from_corrs": [56, 57, 59, 67, 68, 69, 70, 305], "calculate_prec_from_cov": [56, 57, 58, 59, 67, 69, 70], "calculate_prec_from_corrs": [56, 57, 58, 59, 68, 69, 70], "calculate_corr_from_prec": [56, 58, 59, 67, 68, 69, 70], "precision_matrix": [57, 59, 70, 286, 330], "prec": [57, 59, 70], "995567e": [57, 59, 68, 70], "22660": [57, 59, 67, 68, 70, 330], "028196": [57, 59, 68, 70], "16057": [57, 59, 67, 68, 70, 330], "855248": [57, 59, 68, 70], "203511": [57, 59, 67, 68, 70, 330], "614428": [57, 59, 68, 70], "39474": [57, 59, 67, 68, 70, 330], "250514": [57, 59, 68, 70], "820118": [57, 59, 68, 70], "299536": [57, 59, 68, 70], "266003e": [57, 59, 68, 70], "2129": [57, 59, 67, 68, 70, 330], "904642": [57, 59, 68, 70], "260": [57, 59, 67, 68, 70, 330], "176234": [57, 59, 68, 70], "375": [57, 59, 67, 68, 70, 330], "266233": [57, 59, 68, 70], "2800": [57, 59, 67, 68, 70, 330], "816246": [57, 59, 68, 70], "7718": [57, 59, 67, 68, 70, 330], "769557": [57, 59, 68, 70], "605786e": [57, 59, 68, 70], "187": [57, 59, 67, 68, 70, 330], "038903": [57, 59, 68, 70], "177": [57, 59, 67, 68, 70, 305, 330, 343], "207683": [57, 59, 68, 70], "205": [57, 59, 67, 68, 70, 330], "808480": [57, 59, 68, 70], "2225": [57, 59, 67, 68, 70, 330], "150449": [57, 59, 68, 70], "035116e": [57, 59, 68, 70], "7527": [57, 59, 67, 68, 70, 330], "530027": [57, 59, 68, 70], "2462": [57, 59, 67, 68, 70, 330], "974821": [57, 59, 68, 70], "9977": [57, 59, 67, 68, 70, 330], "488860": [57, 59, 68, 70], "947425e": [57, 59, 68, 70], "22343": [57, 59, 67, 68, 70, 330], "198618": [57, 59, 68, 70], "9370": [57, 59, 67, 68, 70, 330], "758371": [57, 59, 68, 70], "201183e": [57, 59, 68, 70], "249847": [57, 59, 68, 70, 330], "177845": [57, 59, 68, 70], "calculate_corr_from_cov": [57, 58, 59, 67, 68, 69, 70, 305], "se": [58, 67, 312, 313, 330], "correlation_matrix": [58, 67, 73, 286, 330], "standard_error": [58, 67, 286, 330], "411512e": 58, "009998e": 58, "178111e": 58, "233518e": 58, "171834e": 58, "461762e": 58, "665011e": 58, "040245e": 58, "944801e": 58, "932957e": 58, "093431e": 58, "856651e": 58, "867245e": 58, "685661e": 58, "195664e": 58, "pheno_linear": [60, 61, 86, 87, 89, 90, 91, 114, 125, 131, 156, 160, 169, 251, 256], "d_eps1": [60, 125], "d_epseta1_1": [60, 125], "oeta1": [60, 114, 131], "d_epseta1_2": [60, 125], "eta_2": [60, 62, 64, 79, 114, 190, 230, 330, 331], "oeta2": [60, 114, 131], "calculate_eta_gradient_express": [60, 305], "d_eta1": [61, 114, 125, 131], "d_eta2": [61, 114, 125, 131], "calculate_epsilon_gradient_express": [61, 305], "parameter_estim": [62, 63, 64, 66, 74, 88, 90, 91, 170, 191, 192, 242, 251, 286, 303, 305, 329, 330], "individual_estim": [62, 79, 86, 87, 89, 170, 190, 241, 286, 305, 330], "shrinkag": [62, 64], "deviat": [62, 243, 286, 303, 320, 327, 330, 331, 340, 344], "pe": [62, 63, 64, 66, 88, 90, 191, 192], "ie": [62, 190, 241], "720481": 62, "240295": 62, "471305": 62, "128389": 62, "calculate_individual_shrinkag": [62, 305], "expr_or_expr": 63, "arbitrari": [63, 66], "solut": [63, 229], "th": [63, 304, 320], "95": [63, 303, 320, 331], "percentil": [63, 303, 320], "create_rng": [63, 66, 190, 191, 192], "k": [63, 304, 305, 311, 313, 320], "stderr": [63, 66, 303, 309], "p5": [63, 66, 320], "004234": [63, 66], "001138": [63, 66], "004907": [63, 66], "001247": [63, 66], "p95": [63, 66, 320], "individual_estimates_covari": [64, 190, 286, 305, 330], "ieta_shr": 64, "847789": 64, "256473": 64, "796643": 64, "210669": 64, "755025": 64, "226957": 64, "764541": 64, "216405": 64, "816192": 64, "203974": 64, "778108": 64, "210992": 64, "659420": 64, "236875": 64, "668551": 64, "240097": 64, "260056": 64, "200374": 64, "725190": 64, "226563": 64, "972110": 64, "421852": 64, "249640": 64, "254119": 64, "730294": 64, "364932": 64, "165785": 64, "194464": 64, "15": [64, 87, 100, 106, 122, 254, 303, 304, 313, 323, 326, 327, 330, 331, 343, 344], "813399": 64, "313554": 64, "797328": 64, "213211": 64, "17": [64, 86, 87, 89, 90, 93, 100, 104, 106, 122, 126, 159, 217, 254, 303, 304, 313, 315, 323, 325, 326, 327, 330, 331, 338, 340, 344], "769059": 64, "278079": 64, "098506": 64, "176778": 64, "749022": 64, "235386": 64, "742181": 64, "222932": 64, "21": [64, 86, 89, 100, 106, 122, 254, 303, 304, 313, 319, 320, 327, 330, 331, 338, 340, 341, 344], "317956": 64, "264473": 64, "943950": 64, "232732": 64, "707183": 64, "259077": 64, "553787": 64, "247717": 64, "826349": 64, "114302": 64, "854777": 64, "341384": 64, "820829": 64, "263235": 64, "28": [64, 86, 89, 90, 100, 106, 122, 231, 254, 303, 304, 313, 323, 326, 327, 330, 331, 334, 340, 344], "999942": 64, "319986": 64, "29": [64, 86, 89, 90, 100, 106, 122, 231, 233, 254, 303, 304, 306, 313, 323, 326, 327, 330, 331, 334, 340, 344], "967084": 64, "432760": 64, "30": [64, 100, 106, 122, 254, 303, 304, 313, 319, 326, 327, 330, 331, 340, 344], "404773": 64, "325215": 64, "31": [64, 86, 89, 100, 106, 122, 126, 254, 303, 304, 309, 313, 327, 330, 331, 338, 340, 344, 347], "999980": 64, "318421": 64, "925283": 64, "167667": 64, "33": [64, 100, 106, 122, 126, 254, 304, 313, 327, 330, 331, 332, 343, 344], "913706": 64, "242106": 64, "34": [64, 90, 100, 106, 122, 126, 254, 303, 304, 313, 327, 330, 331, 338, 340, 344], "875554": 64, "249197": 64, "849135": 64, "294294": 64, "36": [64, 66, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 340, 344], "172206": [64, 344], "246422": 64, "37": [64, 93, 100, 106, 109, 122, 159, 217, 254, 304, 313, 315, 327, 330, 331, 344], "747380": 64, "278340": 64, "38": [64, 86, 89, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 344], "187440": 64, "231249": 64, "39": [64, 100, 106, 122, 254, 303, 304, 313, 325, 327, 330, 331, 340, 343, 344], "237805": 64, "254485": 64, "999925": 64, "189793": 64, "41": [64, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 340, 344], "941906": 64, "170998": 64, "42": [64, 66, 93, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 332, 343, 344], "923801": 64, "244046": 64, "43": [64, 93, 100, 106, 122, 254, 303, 304, 313, 319, 327, 330, 331, 343, 344], "999928": 64, "320403": 64, "44": [64, 93, 100, 106, 122, 254, 303, 304, 327, 330, 331, 344], "237637": 64, "260453": 64, "45": [64, 93, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 344], "869540": 64, "194503": 64, "999949": 64, "319750": 64, "47": [64, 100, 106, 122, 126, 254, 303, 304, 327, 330, 331, 332, 340, 344], "983782": 64, "393234": 64, "48": [64, 100, 106, 109, 122, 254, 303, 304, 313, 327, 330, 331, 343, 344], "698267": 64, "169337": 64, "49": [64, 100, 106, 122, 254, 303, 304, 327, 330, 331, 344], "776674": 64, "214962": 64, "688847": 64, "192608": 64, "51": [64, 100, 106, 122, 254, 303, 304, 309, 313, 327, 330, 331, 344], "822213": 64, "202534": 64, "52": [64, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 332, 343, 344], "511489": 64, "273601": 64, "53": [64, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 338, 340, 344], "964757": 64, "223448": 64, "762153": 64, "181648": 64, "965657": 64, "435741": 64, "56": [64, 100, 106, 122, 254, 303, 304, 313, 327, 330, 331, 344], "995278": 64, "354798": 64, "57": [64, 100, 106, 112, 122, 190, 254, 303, 304, 313, 319, 320, 327, 330, 331, 344], "813382": 64, "263372": 64, "58": [64, 100, 106, 112, 122, 126, 190, 254, 303, 304, 320, 327, 330, 331, 343, 344], "727295": 64, "232867": 64, "59": [64, 93, 100, 104, 106, 109, 112, 120, 122, 126, 159, 190, 217, 254, 303, 304, 313, 315, 319, 320, 327, 330, 331, 332, 344], "738777": 64, "224742": 64, "calculate_eta_shrinkag": [64, 305], "ucpscal": [65, 71], "calculate_ucp_scal": [65, 305], "00916": [65, 171, 242, 320, 329, 331, 333], "0309626": [65, 171, 242, 329, 331, 333], "031127999999999996": 65, "013241000000000001": 65, "convers": [65, 305, 318, 324], "pharmacokinet": [66, 231, 331], "pre": [66, 149, 318], "t_half_elim": 66, "173": 66, "337164": 66, "1769": 66, "493756": 66, "843398": 66, "149": [66, 325], "567842": 66, "1317": [66, 313], "474199": 66, "233070": 66, "k_e": 66, "calculate_individual_parameter_statist": [66, 305], "995565e": 67, "041788": 67, "848052": 67, "410335": 67, "240358": 67, "820116": [67, 330], "179011": 67, "266004e": 67, "908225": 67, "176399": 67, "266263": 67, "818557": 67, "757955": 67, "605785e": 67, "038825": 67, "207512": 67, "808434": 67, "144772": 67, "035114e": 67, "518562": 67, "972906": 67, "457873": 67, "947424e": 67, "197906": 67, "736254": 67, "201162e": 67, "249846": 67, "006431": 67, "000210": [69, 70, 330], "026895": [69, 70, 330], "083762": [69, 70, 330], "013415": [69, 70, 330, 341], "007477": [69, 70, 330, 341], "002279": [69, 70, 330, 341], "unconstrain": [71, 341], "calculate_parameters_from_ucp": [71, 305], "verbos": 72, "consist": [72, 309, 313, 326, 328, 345], "across": [72, 305, 326], "consol": 72, "fail": [72, 305, 326, 337], "cor": [73, 311], "highli": 73, "high": [73, 315, 316, 337], "absolut": [73, 305, 326], "zero_limit": 74, "significant_digit": [74, 286, 305], "close": [74, 242, 305, 320, 326, 327], "subset": [74, 190, 329, 334], "distanc": [74, 82, 344, 345], "logic": [74, 332, 345], "cleanup": 75, "what": [75, 326, 333, 337], "inlin": 75, "clean": 75, "certain": [75, 110, 113, 163, 305, 310, 313, 325, 326, 328, 336], "to_format": 76, "inplac": 76, "nlmixr": [76, 269, 305, 311, 330, 331], "rxode": [76, 269, 305], "underli": [76, 118, 171, 329], "converted_model": 76, "config": [78, 105, 305, 310, 311, 335], "configur": [78, 305, 322, 330, 333, 348, 349], "overwritten": [78, 280], "block": [79, 180, 215, 305, 307, 318, 320, 323, 328, 331, 332, 340], "iiv_cl_iiv_v": [79, 230], "split_joint_distribut": [79, 305, 331], "through": [80, 307, 308, 310, 313, 318, 326, 328, 329, 331, 341], "numpi": [80, 315, 316, 329], "standard_norm": 80, "5532605888887387": 80, "stem": 81, "force_numb": 81, "coveff1": 81, "temp": 81, "temp1": 81, "cl1": 81, "df": [82, 87, 277, 305, 315, 338, 340], "date_column": 82, "deidentifi": [82, 305], "year": [82, 305, 311, 326], "earliest": 82, "maintain": [82, 308, 311, 312, 324, 326, 336, 337], "leap": 82, "1901": 82, "1902": 82, "1903": 82, "1904": 82, "closest": 82, "preceed": 82, "ordinari": [83, 329], "odedisplay": 83, "display": 83, "column_nam": [84, 237], "mark": [84, 85, 92, 237, 307, 326], "drop_dropped_column": [84, 237, 305, 331], "undrop_column": [84, 305, 331], "undrop": [84, 237], "drop_column": [85, 237, 305, 331], "them": [85, 188, 189, 308, 323, 325, 326, 328, 332, 333, 342, 347], "dy": 86, "deps_1": 86, "771084": [86, 89], "881859": [86, 89], "441728": [86, 89], "113050": [86, 89], "783055": [86, 89], "150": [86, 87, 89, 90, 91, 330], "375041": [86, 89], "151": [86, 87, 89, 90, 91], "833395": [86, 89], "152": [86, 87, 89, 90, 91], "876707": [86, 89], "153": [86, 87, 89, 90, 91, 314], "905095": [86, 89], "154": [86, 87, 89, 90, 91], "099690": [86, 89], "evaluate_eta_gradi": [86, 305], "deta_1": 87, "deta_2": 87, "159537": 87, "609116": 87, "325893": 87, "562289": 87, "104417": 87, "346161": 87, "452951": 87, "682310": 87, "838840": 87, "981836": 87, "424423": 87, "973013": 87, "497185": 87, "344797": 87, "198714": 87, "697161": 87, "987731": 87, "941806": 87, "817067": 87, "309945": 87, "evaluate_epsilon_gradi": [87, 305], "573770": 88, "739": [88, 93, 108, 159, 217, 315, 331], "165105": 88, "741": [88, 93, 108, 159, 217, 315, 331], "742": [88, 93, 108, 159, 217, 315, 331], "743": [88, 93, 108, 159, 217, 315, 331], "evaluate_population_predict": [89, 305], "529739": 90, "179910": 90, "688648": 90, "798916": 90, "023225": 90, "459036": 90, "223295": 90, "217288": 90, "472888": 90, "226455": 90, "evaluate_individual_predict": [90, 305], "wre": [91, 305], "313859": 91, "675721": 91, "544240": 91, "921720": 91, "517677": 91, "223935": 91, "053334": 91, "007023": 91, "931252": 91, "778389": 91, "flag": [92, 305, 331, 344, 348], "care": [92, 280], "accord": [93, 125, 305, 326, 332, 346, 348], "queri": 93, "120": [93, 109, 159, 217, 315, 330, 331], "132": [93, 109, 159, 217, 315, 330, 331], "144": [93, 109, 159, 217, 315, 330, 331, 343], "146": [93, 126, 159, 217, 313, 315, 330, 331], "400": [93, 330], "00469307": [96, 97, 98, 171, 209, 223, 236, 242, 329, 331, 333], "fix_paramet": [96, 98, 238, 239, 331], "unfix_paramat": [96, 97, 98, 239], "fix_paramaters_to": [96, 239], "unfix_paramaters_to": [96, 97, 98, 206, 238], "fix_or_unfix_paramet": [97, 98, 238, 239, 331], "fix_parameters_to": [97, 206, 238, 331], "60": [100, 313, 326, 331, 338], "63": [100, 126, 330, 331, 340], "cmax": [104, 305, 331], "tmax": [104, 305, 331], "cmin": [104, 305, 331], "tmin": [104, 305, 331], "doseid": [104, 108, 331], "589": [104, 109, 331], "get_baselin": [106, 305, 331], "set_covari": [106, 331], "period": [108, 331], "96": [109, 234, 303, 313, 331, 332], "retriev": [112, 113, 120, 121, 128, 129, 130, 132, 260, 261, 280, 284, 287, 305, 329, 330, 331, 349], "those": [113, 308, 326, 331, 348], "often": [113, 307, 311, 329, 343], "get_pd_paramet": 113, "get_pk_paramet": [113, 128, 129, 132, 305], "get_rv_paramet": [113, 128, 130, 151, 305], "has_random_effect": [113, 128, 132, 305], "opr": [114, 125, 131], "get_population_prediction_express": [114, 305], "epress": [114, 131], "condit": [115, 205, 305, 320, 326, 342, 345], "item": [119, 310, 326], "activ": [120, 121, 122, 311, 326], "get_number_of_observ": [120, 126, 305, 331], "get_number_of_observations_per_individu": [120, 121, 126, 305, 331], "total": [121, 221, 286, 305, 331, 347], "get_number_of_individu": [121, 122, 305, 331], "observation_count": 122, "oeta\u2082": 125, "oeta\u2081": 125, "keep_index": [126, 305], "112": [126, 330, 331, 340], "131": [126, 330, 331], "73": [126, 309, 330, 331, 342], "get_theta": [127, 133, 305], "get_sigma": [127, 134, 305], "var_typ": 128, "get_individual_paramet": [128, 130, 132, 151, 305], "get_individual_prediction_express": [131, 305], "get_omega": [133, 134, 305], "structur": [134, 263, 282, 305, 307, 313, 315, 323, 325, 328, 329, 332, 346, 348], "00": [134, 309, 320, 329, 330, 331, 338, 340, 341, 343], "olumn": 135, "milligram": [135, 315], "liter": [135, 315], "kilogram": [135, 315], "named_subscript": 137, "greek": 137, "subscript": 137, "cleanup_model": [137, 305], "\u03b8\u2081": 137, "\u03b8\u2082": 137, "\u03b8\u2083": 137, "\u03b7\u2081": 137, "\u03b7\u2082": 137, "\u03b5\u2081": 137, "mani": [138, 139, 150, 191, 305, 331, 341], "has_proportional_error_model": [138, 139, 153, 305], "has_combined_error_model": [138, 150, 153, 305], "has_weighted_error_model": [138, 139, 150, 305], "has_additive_error_model": [139, 150, 153, 305], "reli": [142, 146, 147, 155, 326], "heurist": [142, 146, 147, 155], "abl": [142, 146, 147, 155, 305, 319, 322, 336, 337, 345], "detect": [142, 146, 147, 155, 305, 322, 329, 336, 350], "instantan": [143, 207, 328], "has_od": [144, 145, 305], "has_linear_odes_with_real_eigenvalu": [144, 148, 305], "has_linear_od": [145, 148, 305], "micha": [146, 147, 210, 211, 221, 307, 328, 347], "menten": [146, 147, 210, 211, 221, 307, 328, 347], "set_michaelis_menten_elimin": [146, 203, 211, 226, 305, 331], "michali": 147, "set_mixed_mm_fo_elimin": [147, 331], "add_metabolit": [149, 305], "sequenti": [152, 218, 305, 307, 328, 332], "dpharmpi": 152, "has_zero_order_absorpt": [152, 305], "has_first_order_absorpt": 152, "set_zero_order_elimin": [155, 203, 210, 211, 305, 331], "determin": [156, 157, 189, 249, 271, 323, 325, 326, 332, 341], "model1": [156, 305], "model2": 156, "constraint": [157, 209, 223, 228, 236, 238, 305, 316], "vari": [158, 220, 272, 305, 307, 342], "get_covariate_baselin": [158, 305, 331], "load": [159, 160, 251, 322], "unload_dataset": [159, 305], "statment": 161, "theta_1": [162, 329], "\u03bc\u2081": 162, "\u03bc\u2082": 162, "dataset_or_model": [163, 189], "name_pattern": [163, 189], "omitted_": 163, "omiss": 163, "omit": [163, 307, 313, 347], "placehold": [163, 189], "yield": [163, 188, 189], "cwre": [164, 165, 171, 276, 277, 330, 331, 340, 342], "chart": [164, 165, 166, 167, 168, 169, 170, 303], "facetchart": 168, "iofv1": 169, "iofv2": 169, "against": [169, 326], "iofv": [169, 277, 303, 305, 327, 330, 344], "scatterplot": 169, "res1": 169, "res2": 169, "individual_ofv": [169, 286, 305, 330], "nonlin": 169, "problem": [171, 175, 305, 313, 319, 323, 325, 326, 327, 331, 333], "subroutin": [171, 305, 326, 331, 333], "advan1": [171, 331, 333], "trans2": [171, 331, 333], "IF": [171, 305, 326, 331], "gt": [171, 331], "lt": [171, 331], "npde": [171, 331], "noappend": [171, 331], "noprint": [171, 331], "onehead": [171, 331], "sigma\u2081": [172, 329], "\u2081": [172, 329], "home": [174, 305, 329], "run1": [174, 261, 331], "mod": [174, 280, 282, 305, 307, 309, 315, 329, 330, 331], "read_model_from_databas": [174, 175, 305], "databas": [174, 175, 259, 280, 281, 282, 284, 287, 288, 291, 297, 302, 305, 348], "read_model_from_str": [174, 305, 331], "err": [175, 331], "has_covariate_effect": [177, 305], "unrun": 178, "to_remov": [180, 181, 307], "eta_iov_1_1": 181, "add_lag_tim": [182, 222, 305, 331], "uloq": 183, "alq": 183, "loq": [183, 263, 307], "consecut": [183, 231], "736": 183, "set_lloq_data": [183, 231, 305], "add_peripheral_compart": [185, 214, 305, 331], "new_nam": [187, 212], "renam": [187, 305], "clash": [187, 280, 282], "occur": [187, 215, 319, 323, 325, 326], "constant": [188, 194, 221, 325, 347], "resampl": [189, 264], "stratifi": [189, 307], "sample_s": [189, 307], "resample_": 189, "randomli": [189, 192, 341], "renumb": [189, 307], "upward": 189, "stratif": [189, 307], "valueerror": 189, "rais": [189, 242, 305, 341], "strata": 189, "stratum": 189, "suppli": [189, 323, 325, 332, 340], "control": [189, 311, 325, 326, 329], "pattern": [189, 326], "samples_per_id": 190, "pool": [190, 323], "iec": 190, "127941": 190, "037273": 190, "065492": 190, "182851": 190, "263323": 190, "265849": 190, "295883": 190, "060346": 190, "012108": 190, "219967": 190, "034279": 190, "040988": 190, "187879": 190, "143184": 190, "088845": 190, "034655": 190, "187779": 190, "014214": 190, "019953": 190, "151151": 190, "sample_parameters_from_covariance_matrix": [190, 192, 305], "sample_parameters_uniformli": [190, 191, 305], "uniform": [190, 191, 192, 341], "force_posdef_sampl": [191, 192, 307], "force_posdef_covmatrix": [191, 307], "never": [191, 332], "005069": 191, "974989": 191, "204629": 191, "024756": 191, "012088": 191, "012943": 191, "004690": 191, "958431": 191, "233231": 191, "038866": 191, "029000": 191, "012516": 191, "004902": [191, 303], "950778": 191, "128388": 191, "019020": 191, "023866": 191, "013413": [191, 341], "sample_individual_estim": [191, 192, 305], "estiat": [191, 192], "reject": 192, "004878": 192, "908216": 192, "149441": 192, "029179": 192, "025472": 192, "012947": 192, "004828": 192, "014444": 192, "149958": 192, "028853": 192, "027653": 192, "013348": 192, "004347": 192, "053837": 192, "165804": 192, "028465": 192, "026798": 192, "013727": 192, "data_tran": [193, 195, 216, 305], "series_term": 193, "\u00b2": [193, 195], "epsilon_1": [193, 195, 216], "expans": 193, "approxim": [193, 221, 326, 347], "term": [193, 305, 323, 326], "\u03b5\u2090": [193, 195, 331], "set_proportional_error_model": [193, 195, 305, 331], "set_combined_error_model": [193, 216, 305, 331, 342], "const": 194, "epsilon_2": 195, "remove_error_model": [195, 216, 305, 331], "\u03b5\u209a": [195, 216, 331], "set_additive_error_model": [195, 216, 305, 331], "fix_to_log": 198, "dynam": [198, 294, 326], "lambda": [198, 232, 233, 338, 340], "zeta": [198, 338, 340], "emul": 198, "set_instantaneous_absorpt": [202, 218, 225], "list_of_ep": [204, 215], "same_eta": [204, 307], "ruv": [204, 307], "eta_rv1": 204, "set_power_on_ruv": [204, 305, 331, 342], "get_initial_condit": [205, 305], "remove_loq_data": [208, 231, 305, 331], "set_upper_bound": [209, 236, 331], "unconstrain_paramet": [209, 223, 238, 331], "clmm": [210, 211, 226, 331], "km": [210, 211, 226, 305, 331], "set_first_order_elimin": [210, 211, 226, 305, 331], "advan": [213, 305, 331], "cvode": [213, 266, 307, 319], "advan14": [213, 307], "dgear": [213, 266, 307, 319], "advan8": [213, 307], "dverk": [213, 266, 307, 319], "advan6": [213, 307], "ida": [213, 266, 307, 319], "advan15": [213, 307], "lsoda": [213, 266, 307, 319], "advan13": [213, 307, 331], "lsodi": [213, 266, 307, 319], "advan9": [213, 307], "prefer": [213, 326], "q2": 214, "q3": 214, "v3": 214, "peripheral2": 214, "lower_limit": 215, "zero_protect": [215, 216, 305], "said": 215, "autodetect": 215, "protect": [215, 216, 305, 326], "power\u2081": 215, "set_iiv_on_ruv": [215, 305, 331, 342], "225e": [216, 331], "ipredadj": [216, 331], "ref": [217, 350], "1234": 219, "simulationstep": 219, "quantil": [220, 303, 305], "mediat": [221, 347], "disposit": [221, 347], "irrevers": [221, 347], "bind": [221, 347], "ib": 221, "receptor": [221, 347], "cr": 221, "quasi": [221, 347], "qss": 221, "wagner": 221, "mmapp": 221, "drug_tot": [221, 347], "keep_depot": [222, 305], "transit1": 222, "transit2": 222, "k23": 222, "transit3": 222, "k34": 222, "k40": 222, "set_lower_bound": [223, 236, 331], "use_thetas_for_error_stdev": [224, 305, 331], "smallest": [226, 331], "get_zero_order_input": [227, 305], "simplifi": [228, 305, 306, 316, 331, 337], "ab": [228, 233, 307, 331], "analyt": 229, "create_joint_distribut": [230, 305, 331], "m4": [231, 331], "m1": [231, 305, 343], "m3": [231, 331], "m5": [231, 305], "m6": [231, 305], "m7": [231, 305], "explain": [231, 313, 318, 326, 337, 348], "overridden": 231, "shown": [231, 318], "discard": 231, "modifi": [231, 305, 315, 326, 335, 349], "beal": 231, "sl": 231, "pharmacodyn": 231, "2001": 231, "oct": 231, "481": 231, "504": 231, "doi": [231, 233, 320, 342], "1023": 231, "1012299115260": 231, "erratum": 231, "2002": 231, "jun": 231, "309": 231, "pmid": 231, "11768292": 231, "cumd": [231, 331], "cumdz": [231, 331], "list_of_eta": [232, 233, 234], "boxcox": [232, 305], "lambda1": [232, 233], "transform_etas_tdist": [232, 233, 305, 331], "transform_etas_john_drap": [232, 234, 305, 331], "john": [233, 305, 307], "draper": [233, 305, 307], "spelect": 233, "1980": 233, "famili": [233, 326], "journal": [233, 342], "royal": 233, "societi": 233, "190": 233, "197": 233, "2307": 233, "2986305": 233, "transform_etas_boxcox": [233, 234, 305, 331], "degre": [234, 340], "freedom": [234, 326, 340], "80": [234, 313, 330, 340, 342], "df1": 234, "translat": [235, 305], "hour": [235, 315], "caution": 235, "reset": [235, 289, 305], "account": 235, "unfix_paramet": [236, 305, 331], "unload": 240, "had": [241, 326, 331], "move_est_close_to_bound": 242, "00469555": 242, "984258": [242, 251, 330], "15892": 242, "0293508": [242, 329], "027906": [242, 251, 329, 330, 341], "sd_eps_1": 243, "set_weighted_error_model": [243, 305, 331], "whose": [244, 326], "suffix": 244, "overwrit": [244, 245], "newdataset": 244, "recalcul": 247, "frem_dir1": 247, "read_result": [247, 260, 305, 309], "model_or_model": [248, 269], "run_tool": [248, 263, 276, 305], "supress_warn": 249, "choos": [249, 305, 323, 326, 332, 333, 335], "supress": 249, "fulfil": [250, 326, 345], "004696": [251, 330, 341], "158920": [251, 330], "029351": [251, 330, 341], "84": [252, 253, 277, 323, 325, 332, 341, 343], "influenti": [252, 253, 277, 305], "machin": [252, 253, 254, 280, 284, 287, 315, 322, 326], "learn": [252, 253, 254, 322], "threshold": [252, 253, 254, 307, 313], "signal": [252, 253, 327], "raw": [252, 253, 254, 277, 303, 305, 315], "delta": [252, 303, 305, 327], "tell": [252, 254, 326], "predict_influential_outli": [252, 254, 305], "predict_outli": [252, 253, 305], "outlier_cutoff": 253, "influential_cutoff": 253, "outlier": [253, 254, 277, 305, 344], "influential_outli": 253, "predict_influential_individu": [253, 254, 305], "simev": [254, 305, 339], "singal": 254, "281443": 254, "057392": 254, "119105": 254, "846849": 254, "600540": 254, "014008": 254, "750734": 254, "247175": 254, "117002": 254, "835389": 254, "529582": 254, "035670": 254, "292333": 254, "303278": 254, "565949": 254, "078192": 254, "291295": 254, "466421": 254, "402343": 254, "699996": 254, "567987": 254, "526776": 254, "303918": 254, "177588": 254, "272142": 254, "390000": 254, "775876": 254, "501528": 254, "700951": 254, "352599": 254, "294196": 254, "744014": 254, "215364": [254, 343], "208691": 254, "713130": 254, "300293": 254, "810736": 254, "459877": 254, "675125": 254, "563835": 254, "526945": 254, "449199": 254, "720714": 254, "792248": 254, "860923": 254, "731858": 254, "247131": 254, "894190": 254, "282737": 254, "153398": 254, "200546": 254, "902774": 254, "586427": 254, "183329": 254, "036930": 254, "639868": 254, "765279": 254, "209665": 254, "225693": 254, "base_model": 256, "base_model_r": 256, "models_r": [256, 276, 277], "parent_dict": 256, "bic_typ": 256, "child": 256, "relev": [256, 309, 326, 333], "lrt": [256, 267, 268, 270], "denot": [256, 320, 331], "model_1": [256, 320], "model_2": [256, 320], "create_result": [258, 305], "resum": [259, 263, 297, 307, 348], "resmod_dir1": 259, "retrieve_model": [260, 280, 284, 287, 305, 309], "tooldatabas": [261, 281, 288, 294, 297], "modeldatabas": [261, 280, 282, 291], "tooldir_path": 261, "retrieve_final_model": [261, 305], "allometryresult": 262, "strategi": [263, 305, 323, 332, 348], "amd": [263, 305, 309, 318, 345, 347, 348], "modelsearch": [263, 270, 276, 305, 309, 318, 347, 348], "reult": 263, "procedur": [263, 326, 347, 348], "retri": [263, 271, 305, 348], "e_max": [263, 273], "search": [263, 265, 270, 273, 305, 307, 309, 313, 323, 325, 328, 337, 348], "proiorit": 263, "weither": 263, "run_iiv": [263, 305], "bootstrap": [264, 305, 339], "bootstrapresult": [264, 305], "500": 264, "naming_index_offset": 265, "try": [265, 307, 319, 337, 341, 350], "offset": 265, "covsearchresult": 265, "estmethod": [266, 305, 348], "exhaust": [266, 270, 305, 318], "exhaustive_with_upd": [266, 319], "exhaustive_only_ev": [266, 305, 319], "mode": [266, 305, 320, 326], "estmethodresult": 266, "reduc": [266, 305, 319, 343], "iivsearch": [267, 305, 348], "brute_force_no_of_eta": [267, 323], "brute_force_block_structur": [267, 323], "add_diagon": [267, 270, 305, 323, 332], "pd_add_diagon": 267, "pd_fullblock": 267, "criteri": [267, 268, 270, 272], "iivsearchresult": 267, "iovsearch": [268, 305, 348], "iovsearchresult": 268, "modelfeatur": 270, "exhaustive_stepwis": [270, 332], "modelsearchresult": 270, "prefix": [271, 341], "retriesresult": 271, "max_it": [272, 305], "attempt": [272, 313, 326, 341], "assess": [272, 342], "ruvsearchresult": 272, "extra_model": [273, 346, 347], "extra_model_result": [273, 346, 347], "structsearch": [273, 305, 348], "structsearchresult": 273, "model_typ": 273, "arg": 274, "outlier_count": 276, "dofv_vs_par": 276, "predicted_dofv": [276, 277], "predicted_residu": [276, 277], "fit_result": 276, "inf_select": 277, "mathrm": [277, 344], "veebar": 277, "inf_param": 277, "out_ob": 277, "least": [277, 309, 326, 332, 345], "outli": [277, 344], "out_ind": 277, "inf_outli": 277, "summarize_individu": [277, 305], "include_all_estimation_step": 278, "runtim": [278, 286, 305, 319], "wasn": [278, 305], "estmat": 278, "586": [278, 330, 341], "276056": [278, 341], "lzma": [279, 289], "again": [279, 350], "compress": [279, 289], "Not": [279, 315, 326, 332], "save": [279, 289, 292, 305], "file_extens": [280, 282], "nontransactionalmodeldatabas": [280, 287], "local": [280, 281, 282, 284, 287, 288, 291, 311, 323, 326], "store": [280, 281, 282, 284, 287, 288, 291, 305, 309, 333], "modelnam": 280, "recommend": [280, 350], "localmodeldirectorydatabas": 280, "retrieve_fil": [280, 284, 287], "filesystem": [280, 284, 287], "model_nam": [280, 282, 284, 287, 320], "retrieve_local_fil": [280, 284, 287], "destination_path": [280, 284, 287], "retrieve_model_entri": [280, 284, 287], "modelentri": [280, 282, 284, 287], "retrieve_modelfit_result": [280, 284, 287], "store_local_fil": [280, 281, 284, 287, 288, 291], "new_filenam": [280, 284, 287], "store_metadata": [280, 281, 284, 287, 288, 291], "store_model": [280, 284, 287], "store_model_entri": [280, 284, 287], "model_entri": [280, 284, 287], "transact": [280, 282, 284, 287, 326], "store_modelfit_result": [280, 284, 287], "toolnam": [281, 288, 291, 309], "exist_ok": 281, "read_metadata": [281, 288, 291], "source_path": [281, 288, 291], "store_result": [281, 288, 291], "transactionalmodeldatabas": 282, "subdirectori": [282, 309], "list_model": 282, "snapshot": [282, 284], "readabl": [282, 284, 289, 315, 326, 337], "context": [282, 284, 326, 337], "model_or_model_entri": [282, 284], "writabl": [282, 284], "timestamp": 283, "log_error": 283, "log_warn": 283, "abc": [284, 291], "baseclass": 284, "primari": 284, "center": [284, 341], "around": [284, 308], "belong": 284, "attach": [285, 326], "attach_result": 285, "__version__": [286, 289], "106": [286, 289, 313, 323, 338, 340, 342], "ofv_iter": [286, 305], "parameter_estimates_sdcorr": [286, 330], "parameter_estimates_iter": [286, 305], "standard_errors_sdcorr": [286, 330], "relative_standard_error": [286, 330], "minimization_successful_iter": 286, "estimation_runtime_iter": 286, "termination_caus": 286, "termination_cause_iter": 286, "function_evalu": 286, "function_evaluations_iter": 286, "significant_digits_iter": 286, "log_likelihood": 286, "covstep_success": 286, "gradients_iter": 286, "evaluation_ofv": 286, "classic": 286, "caus": [286, 305, 326, 337], "prematur": 286, "maxevals_exceed": [286, 345], "dummi": [287, 288], "anyth": [287, 288, 311, 323, 326], "desir": [287, 288], "get_and_reset_index": 289, "attr": 289, "wrapper": [289, 305, 311, 316, 322, 350], "facilit": 289, "multiindex": [289, 305], "to_csv": 289, "serial": [289, 305, 315, 337], "task_input": 290, "model_databas": 291, "workflowbas": [292, 293], "acycl": 292, "task": [292, 293, 305, 336, 337], "node": [292, 294], "edg": 292, "as_dask_dict": 292, "dask": [292, 294, 305, 337], "plot_dask": 292, "add_task": 293, "predecessor": [293, 326], "insert_workflow": 293, "replace_task": 293, "new_task": 293, "wf": 294, "unique_nam": 294, "db": 294, "whatev": [294, 326], "alia": [295, 296], "localdirectorydatabas": [295, 302], "localdirectorytooldatabas": [296, 302, 309], "dispatch": [297, 302, 305, 309], "execut": [297, 305, 326], "executiondispatch": 297, "default_dispatch": 302, "local_dask": [302, 309], "default_model_databas": 302, "default_tool_databas": 302, "psn": [303, 304, 305, 307, 314, 320, 327, 338, 340, 341, 343, 344, 348, 349], "parameter_statist": 303, "bia": [303, 305], "divid": [303, 307, 333], "005890": 303, "005891": 303, "000460": 303, "078170": 303, "pop_v": 303, "431004": 303, "422850": 303, "073015": 303, "051024": 303, "149260": 303, "124740": 303, "112645": 303, "754686": 303, "189801": 303, "185916": 303, "045563": 303, "240056": 303, "015470": 303, "015184": 303, "003553": 303, "229641": 303, "parameter_distribut": 303, "lowest": [303, 320], "highest": [303, 305, 320, 333], "interpol": 303, "fall": [303, 305], "x_0": 303, "x_1": 303, "np": [303, 315, 329], "004851": 303, "004857": 303, "005031": 303, "005149": 303, "277810": 303, "278405": 303, "283765": 303, "309488": 303, "326434": 303, "000011": 303, "000097": 303, "000869": 303, "006275": 303, "013558": 303, "079940": 303, "080472": 303, "085258": 303, "101225": 303, "119080": 303, "007645": 303, "007719": 303, "008382": 303, "009481": 303, "009956": 303, "97": [303, 313, 347], "006659": 303, "006846": 303, "007353": 303, "007460": 303, "007472": 303, "547333": 303, "582182": 303, "631219": 303, "644090": 303, "645520": 303, "353679": 303, "367954": 303, "416361": 303, "433175": 303, "435043": 303, "265224": 303, "282926": 303, "290666": 303, "291792": 303, "291917": 303, "021341": 303, "022691": 303, "025584": 303, "027052": 303, "027215": 303, "parameter_estimates_histogram": 303, "histogram": [303, 305], "repeatchart": 303, "006755": 303, "52531": 303, "108662": 303, "258316": 303, "011408": 303, "005424": 303, "43599": 303, "270899": 303, "156400": 303, "014023": 303, "006585": 303, "38641": 303, "226891": 303, "162075": 303, "010971": 303, "005757": 303, "47090": 303, "193243": 303, "019133": 303, "006875": 303, "50111": 303, "345382": 303, "176756": 303, "009135": 303, "005683": 303, "34027": 303, "163931": 303, "159868": 303, "010816": 303, "005795": 303, "34379": 303, "075865": 303, "194188": 303, "018041": 303, "006078": 303, "35172": 303, "040387": 303, "214176": 303, "015683": 303, "98": [303, 313, 320, 323], "005353": 303, "44898": 303, "155477": 303, "258743": 303, "020128": 303, "006247": 303, "49069": 303, "125491": 303, "219146": 303, "018971": 303, "ofv_statist": 303, "bootstrap_bootdata_ofv": 303, "original_bootdata_ofv": 303, "sum": [303, 314], "bootstrap_origdata_ofv": 303, "boostrap": 303, "original_origdata_ofv": 303, "delta_bootdata": 303, "delta_origdata": 303, "08165": 303, "729": 303, "644638": 303, "737749": 303, "ofv_distribut": 303, "parameter_distriut": 303, "593": 303, "389406": 303, "972104": 303, "599": 303, "216391": 303, "654": [303, 305], "548507": 303, "660": 303, "573965": 303, "795": 303, "776225": 303, "803": 303, "946508": 303, "816": 303, "836314": 303, "820": [303, 305, 330], "873796": 303, "821": 303, "322405": 303, "ofv_plot": 303, "dofv_quantiles_plot": 303, "show": [303, 307, 318, 320, 326, 334, 340, 341, 344], "metric": [303, 304, 330], "chi": 303, "squar": [303, 318], "664": 303, "272157": 303, "749": 303, "459450": 303, "061103": 303, "725470": 303, "679": 303, "585721": 303, "702": 303, "481949": 303, "748": 303, "074871": 303, "710": [303, 305], "203812": 303, "787": [303, 319], "180418": 303, "771": 303, "202034": 303, "119974e": 303, "491440e": 303, "096413e": 303, "005331": 303, "000922": 303, "001519": 303, "460998e": 303, "365879e": 303, "012689": 303, "000981": 303, "760432e": 303, "331894e": 303, "002076": 303, "755294e": 303, "000035": 303, "000176": 303, "000078": 303, "262063e": 303, "included_individu": 303, "case_result": [304, 305], "cook_scor": 304, "jackknife_cook_scor": 304, "delta_ofv": 304, "dofv_influenti": 304, "130159": 304, "121389": 304, "015207": 304, "348263": 304, "336159": 304, "144045": 304, "192433": 304, "181125": 304, "031030": 304, "163095": 304, "155901": 304, "026142": 304, "422651": 304, "404915": 304, "190732": 304, "374312": 304, "343311": 304, "097063": 304, "169869": 304, "163883": 304, "026223": 304, "263865": 304, "254943": 304, "058123": 304, "757098": 304, "673587": 304, "477910": 304, "150161": 304, "144191": 304, "023623": 304, "361646": 304, "352901": 304, "217902": 304, "255533": 304, "215005": 304, "035375": 304, "191848": 304, "187019": 304, "038199": 304, "376365": 304, "337975": 304, "096680": 304, "142806": 304, "137340": 304, "014709": 304, "193393": 304, "179744": 304, "031711": 304, "131746": 304, "122842": 304, "020637": 304, "176644": 304, "932149": 304, "036787": 304, "128197": 304, "120498": 304, "019030": 304, "141093": 304, "138101": 304, "029021": 304, "176582": 304, "153583": 304, "035291": 304, "104396": 304, "100064": 304, "015499": 304, "552071": 304, "501458": 304, "278595": 304, "242334": 304, "217068": 304, "047627": 304, "792099": 304, "715951": 304, "798775": 304, "135247": 304, "133493": 304, "021356": 304, "442779": 304, "424958": 304, "125763": 304, "132903": 304, "127188": 304, "010157": 304, "081122": 304, "076790": 304, "005443": 304, "183624": 304, "168501": 304, "027707": 304, "113959": 304, "111168": 304, "012363": 304, "532749": 304, "515747": 304, "325048": 304, "094133": 304, "091212": 304, "014747": 304, "447798": 304, "406737": 304, "194457": 304, "364978": 304, "352973": 304, "124295": 304, "270838": 304, "252922": 304, "063675": 304, "129553": 304, "121963": 304, "014043": 304, "254914": 304, "243250": 304, "064025": 304, "207529": 304, "194633": 304, "046887": 304, "239182": 304, "218112": 304, "044252": 304, "181986": 304, "173826": 304, "020285": 304, "604112": 304, "584208": 304, "604211": 304, "407717": 304, "369648": 304, "154161": 304, "215722": 304, "196744": 304, "043742": 304, "214167": 304, "200091": 304, "036238": 304, "094284": 304, "089002": 304, "007506": 304, "074174": 304, "072365": 304, "007535": 304, "743323": 304, "717468": 304, "654313": 304, "153971": 304, "147360": 304, "014502": 304, "284706": 304, "278460": 304, "072960": 304, "331587": 304, "309374": 304, "116933": 304, "447965": 304, "421612": 304, "129593": 304, "184872": 304, "175196": 304, "029896": 304, "430382": 304, "415446": 304, "141657": 304, "409307": 304, "369197": 304, "189729": 304, "084764": 304, "079718": 304, "007416": 304, "107600": 304, "103145": 304, "013947": 304, "154672": 304, "150761": 304, "028236": 304, "155632": 304, "150461": 304, "034848": 304, "covariance_ratio": 304, "skipped_individu": 304, "050505": 304, "963884": 304, "058896": 304, "087449": 304, "985403": 304, "029066": 304, "101636": 304, "086424": 304, "017369": 304, "094799": 304, "849310": 304, "121111": 304, "049151": 304, "096456": 304, "070088": 304, "040691": 304, "065881": 304, "606158": 304, "205007": 304, "099191": 304, "143483": 304, "050691": 304, "086007": 304, "156273": 304, "919336": 304, "056714": 304, "999221": 304, "029600": 304, "034017": 304, "108785": 304, "038495": 304, "954054": 304, "053618": 304, "096334": 304, "943556": 304, "125423": 304, "086167": 304, "145822": 304, "113939": 304, "114399": 304, "057664": 304, "788608": 304, "063991": 304, "115559": 304, "160549": 304, "034685": 304, "035618": 304, "714976": 304, "092664": 304, "089158": 304, "054565": 304, "002555": 304, "032356": 304, "003056": 304, "936719": 304, "122771": 304, "078285": 304, "096841": 304, "068821": 304, "sqrt": [304, 331], "p_i": 304, "p_": 304, "orig": 304, "sum_": 304, "overlin": [304, 320], "_j": 304, "_k": [304, 320], "det": 304, "Then": [304, 320, 331], "ofv_": 304, "iofv_": 304, "iofv_k": 304, "ofv_k": 304, "case_column": 304, "rikard": [304, 306, 312, 337, 342], "nordgren": [304, 306, 312, 337, 342], "sebastian": [304, 306, 312], "ueckert": [304, 306, 312], "svetlana": 304, "freiberga": 304, "karlsson": [304, 306, 312, 320, 342], "faster": [304, 305, 337], "2018": [304, 326, 342], "abstr": [304, 306], "8683": 304, "www": [304, 306, 326], "meet": [304, 306, 308, 326, 337], "get_central_volume_and_clear": 305, "phc": 305, "subtool": [305, 309, 345, 348], "write_csv": 305, "frem": [305, 329, 339, 340], "postprocess": [305, 339], "bin_observ": 305, "plot_dv_vs_pr": 305, "plot_abs_cwres_vs_ipr": 305, "stagewis": 305, "clearenc": 305, "replace_non_random_rv": 305, "get_observ": [305, 331], "is_strictness_fulfil": 305, "properli": 305, "calculate_b": [305, 323, 325, 332], "incorrectli": 305, "final_model": 305, "plot_dv_vs_ipr": 305, "plot_cwres_vs_idv": 305, "add_indirect_effect": 305, "circul": 305, "version": [305, 307, 309, 322, 326], "filter_dataset": 305, "load_dataset": 305, "blqdv": 305, "better": [305, 332, 341, 342], "usag": [305, 307], "set_reference_valu": 305, "create_basic_pk_model": [305, 331], "add_bioavail": 305, "autogener": 305, "typ": 305, "add_effect_compart": 305, "reorgan": 305, "saddl": 305, "llq": 305, "preced": 305, "reorder": 305, "model4": 305, "create_report": 305, "write_model": [305, 329, 331, 333], "did": [305, 343], "dadt": [305, 331], "de": [305, 331], "set_zero_order_input": 305, "set_tmdd": 305, "plugin": [305, 311, 316, 317, 324], "generate_model_cod": 305, "get_model_cod": 305, "advan7": 305, "didn": 305, "header": 305, "is_linear": 305, "plot_transformed_eta_distribut": 305, "create_config_templ": [305, 310], "get_dv_symbol": 305, "set_initial_condit": 305, "abbr": [305, 331, 333], "set_dvid": [305, 331], "regress": 305, "defdos": [305, 331], "sometim": 305, "wrong": 305, "bad": 305, "1551": 305, "is_real": 305, "advan5": 305, "copy_model": 305, "nlmixr2": [305, 324, 330, 331], "display_od": 305, "rework": 305, "run_covsearch": [305, 313], "explicitodesystem": 305, "eval": 305, "successfulli": [305, 341, 350], "round": [305, 315, 345], "proxi": [305, 326], "1314": 305, "1355": [305, 313], "1378": [305, 323], "typo": 305, "1377": 305, "1381": 305, "mm": [305, 307, 328, 332], "1064": [305, 323], "afd7707": 305, "1139": 305, "1394": 305, "too": [305, 326], "1117": 305, "timeout": 305, "loop": 305, "wait": 305, "lst": [305, 309], "much": 305, "ncomp": 305, "deidentify_data": [305, 331], "cli": 305, "anonym": 305, "setter": 305, "multivari": 305, "1293": 305, "1302": [305, 313], "1303": [305, 332], "last20": 305, "run_modelsearch": [305, 309, 332], "run_iovsearch": [305, 325], "run_ruvsearch": [305, 342], "run_iivsearch": [305, 323], "nomem": 305, "rh": 305, "1180": 305, "887": [305, 323, 325], "1162": 305, "1032": 305, "add_covariate_effect": [305, 331], "1004": 305, "1181": 305, "9fd701521": 305, "best_model": 305, "final_model_nam": 305, "a7fbcbfe2": 305, "update_initial_individual_estim": 305, "modelsearch_candidate1": [305, 309, 332], "wors": 305, "calculate_a": 305, "check_parameters_near_bound": 305, "check_high_correl": 305, "plot_iofv_vs_iofv": 305, "plot_individual_predict": 305, "evaluate_express": 305, "evaluate_weighted_residu": 305, "parameter_esimt": 305, "calculate_pk_parameters_statist": 305, "update_init": [305, 331], "predict_": 305, "summarize_individuals_count_t": 305, "print_fit_summari": 305, "write_result": 305, "rank_model": 305, "speedup": 305, "297a64041": 305, "1101": 305, "57fc4fee8": 305, "fd417aaf": 305, "convert_model": [305, 331], "d5458e36": 305, "keyerror": 305, "localmodeldirectori": 305, "filenotfounderror": 305, "1193bd39": 305, "unus": 305, "submodul": 305, "bb96a13c": 305, "update_paramet": 305, "0ca786c5": 305, "dd056da3": 305, "915bc9c7": 305, "get_config_path": [305, 310], "disabl": [305, 308, 310], "82b32278": 305, "unwant": 305, "debug": 305, "1131a610": 305, "ebfafb45": 305, "1173": 305, "fb070ee1": 305, "1049": [305, 323], "pyreadr": 305, "easier": [305, 316, 329], "instal": [305, 307, 310, 326, 349], "mac": [305, 311], "get_evid": [305, 331], "resmod": [305, 339], "916": 305, "errors_allow": 305, "1055": 305, "attibut": 305, "1092": 305, "exlud": 305, "unreport": 305, "1076": 305, "988": 305, "1c65359": 305, "42fe72f": 305, "1001": 305, "lead": 305, "uneven": 305, "branch": [305, 311], "stepwis": [305, 309, 313, 318, 343], "694": 305, "708": 305, "comment": [305, 333], "790": 305, "974": 305, "produc": [305, 326], "1017": 305, "989": 305, "71f4cf23": 305, "dsl": 305, "932": 305, "973": 305, "cfc09bad": 305, "975": 305, "917": 305, "977": 305, "908": 305, "fd564168": 305, "088a046a": 305, "c76fa476": 305, "430f1d2e": 305, "make_declar": 305, "greekify_model": 305, "find_clearance_paramet": 305, "find_volume_paramet": 305, "vp": 305, "newer": 305, "seprat": 305, "solv": 305, "sporad": 305, "race": [305, 308], "lazi": 305, "duplic": 305, "745": 305, "1st": 305, "3rd": 305, "licens": [305, 310], "advanx": 305, "add_time_after_dos": [305, 331], "intercompartment": 305, "695": 305, "defob": 305, "gl": 305, "solve_ode_system": 305, "meta": 305, "switch": [305, 337], "read_dataset_from_datainfo": [305, 331], "addl": 305, "linalgerror": 305, "656": [305, 323], "summary_individu": 305, "tflite": [305, 322], "649": 305, "expand_additional_dos": [305, 331], "dbic": [305, 323, 325, 332, 334, 347], "modelsyntaxerror": 305, "588": 305, "625": [305, 323], "578": 305, "vc1": 305, "577": 305, "success": [305, 308, 313, 319, 323, 325, 345], "632": 305, "636": 305, "boundari": [305, 325, 332, 345], "590": 305, "gl_real": 305, "sampled_iofv": [305, 344], "subblock": 305, "check_dataset": [305, 331], "tensorflow": 305, "modelbuild": 305, "add_mdt_iiv": 305, "add_eta": [305, 340], "etas_as_fullblock": 305, "iiv_as_fullblock": 305, "add_mdt_eta": 305, "wip": 305, "don": 305, "130": 305, "calculate_se_from_inf": 305, "calculate_cov_from_inf": 305, "calculate_inf_from_cov": 305, "calculate_inf_from_corrs": 305, "calculate_corr_from_inf": 305, "528": 305, "457": 305, "translate_nmtran_tim": [305, 331], "print_model_cod": [305, 322, 331], "has_michaelis_menten_elimin": 305, "has_zero_order_elimin": 305, "has_first_order_elimin": 305, "has_mixed_mm_fo_elimin": 305, "2c": 305, "1c": 305, "timevari": 305, "create_symbol": 305, "remove_unused_parameters_and_rv": 305, "mu_reference_model": 305, "simplify_express": 305, "bump_model_numb": 305, "get_doseid": [305, 331], "get_unit_of": 305, "get_concentration_parameters_from_data": [305, 331], "resample_data": 305, "omit_data": 305, "get_observation_express": 305, "get_individu": 305, "get_dos": [305, 331], "list_time_varying_covari": [305, 331], "estmeth": 305, "optim": [305, 316, 329, 337], "incorrect": 305, "add_allometri": [305, 331], "add_covariance_step": 305, "remove_covariance_step": 305, "insert_aft": 305, "modelstat": 305, "power_on_ruv": 305, "estimationmethod": 305, "guard": 305, "avoid": [305, 316, 326, 350], "cdd": 305, "bipp": [305, 307], "5000": 305, "shift": 305, "nest": 305, "set_dtbs_error_model": [305, 331], "dure": [305, 311, 348, 350], "logger": 305, "parametr": 305, "broken": 305, "parallel": [305, 341, 348], "print_model_symbol": 305, "parameter_sampl": 305, "api": [305, 316, 331, 336, 337, 349], "improv": [305, 340], "eta_shrinkag": 305, "summarize_model": 305, "window": [305, 311, 322, 326], "rstudio": [305, 337, 350], "zero_order_absorpt": 305, "first_order_absorpt": 305, "bolus_absorpt": 305, "set_bolus_absorpt": [305, 331], "seq_zo_fo_absorpt": 305, "set_seq_zo_fo_absorpt": [305, 331], "have_zero_order_absorpt": 305, "individual_shrinkag": 305, "individual_parameter_statist": 305, "pk_paramet": 305, "create_rv_block": 305, "split_rv_block": 305, "nind": 305, "nob": 305, "nobsi": 305, "remove_error": 305, "additive_error": 305, "proportional_error": 305, "combined_error": 305, "has_additive_error": 305, "has_proportional_error": 305, "has_combined_error": 305, "theta_as_stdev": 305, "set_dtbs_error": 305, "tdist": [305, 338], "john_drap": 305, "add_individual_paramet": 305, "first_order_elimin": 305, "zero_order_elimin": 305, "michaelis_menten_elimin": 305, "mixed_mm_fo_elimin": 305, "revert": 305, "thread": [305, 308], "site": 305, "crossval": [305, 339], "qa": [305, 339], "plain": [305, 310, 311], "sdcorr": 305, "data_transform": 305, "evalut": 305, "dependent_variable_symbol": 305, "releas": [305, 326, 350], "claus": 305, "interfac": [305, 316, 322, 324, 326, 329, 331, 337, 349, 350], "com": 305, "stdin": 305, "123": [305, 330], "clearer": 305, "prioriti": [305, 333], "aggregatedmodelfitresult": 305, "priorit": [305, 333], "half": [305, 338, 340], "life": [305, 338, 340], "set_nam": 305, "parameter_init": 305, "base_parameter_chang": [305, 320], "parameter_vari": [305, 320, 340], "coeffici": 305, "frem_result": 305, "simevalresult": 305, "odesystem": 305, "nonfixed_init": 305, "parameterset": 305, "migrat": 305, "github": [305, 311, 322, 324, 337, 350], "action": [305, 307, 308, 311, 326, 337], "columntyp": 305, "to_base_model": 305, "comined_mm_fo_elimin": 305, "absorption_r": 305, "pretti": 305, "qaresult": 305, "nmtranparseerror": 305, "error_model": 305, "pharmpyconfigpath": [305, 310], "environ": [305, 308, 349, 350], "linearizeresult": 305, "reset_indic": 305, "multiindic": 305, "functionsadd_lag_tim": 305, "yaml": 305, "view": [305, 326, 343], "assumpt": [305, 326], "0th": [305, 307], "parser": 305, "individul": 305, "extend": [305, 326, 340, 343], "librari": [305, 322, 324, 326, 337, 350], "stella": [306, 312, 337], "belin": [306, 312, 337], "gunnar": [306, 312], "yngman": [306, 312, 320], "simon": [306, 312], "carter": [306, 312], "buatoi": [306, 312], "jo\u00e3o": [306, 312], "abrant": [306, 312], "andrew": [306, 312], "hooker": [306, 312], "assemblerr": 306, "novel": 306, "process": [306, 311, 342], "2021": [306, 320], "9656": 306, "subcommand": 307, "top": [307, 309, 315], "help": [307, 308, 313, 328, 331, 337, 350], "verb": 307, "particular": [307, 308, 311, 315, 326, 327], "welcom": [307, 308, 311, 326], "exit": 307, "program": [307, 308, 322, 326], "pheno_r": [307, 315, 329, 330, 331], "prettyprint": 307, "output_fil": 307, "idcol": 307, "datecol": 307, "match": 307, "pager": 307, "stdout": [307, 309], "colnam": 307, "datasetsmultipl": 307, "1th": 307, "quot": 307, "comb": 307, "elimini": 307, "propot": 307, "error_typ": 307, "givenbi": 307, "cov_sampl": 307, "posdef": 307, "non_fix": 307, "input_path": 307, "runord": 307, "particip": 308, "project": [308, 311, 324, 326, 350], "made": [308, 313, 326, 329, 341], "member": 308, "globe": 308, "divers": 308, "skill": [308, 337], "person": [308, 326], "experi": 308, "growth": 308, "everyon": [308, 311, 326], "guidelin": 308, "insid": [308, 326, 347], "goal": 308, "inclus": [308, 326, 340], "grow": 308, "pledg": 308, "treat": [308, 311, 326], "peopl": 308, "harass": 308, "bulli": 308, "sexual": 308, "orient": 308, "gender": 308, "ident": 308, "appear": [308, 350], "nation": [308, 312], "ethnic": 308, "religion": 308, "imageri": 308, "sexist": 308, "racist": 308, "exclusionari": 308, "joke": 308, "acknowledg": [308, 326], "citat": 308, "request": [308, 311], "author": [308, 326], "own": [308, 310, 316, 326], "cite": 308, "realiz": 308, "varieti": 308, "opinion": 308, "background": 308, "serv": [308, 326, 334, 337], "enrich": 308, "discuss": 308, "pro": 308, "con": 308, "technologi": 308, "proactiv": 308, "ensur": [308, 326, 341], "heard": 308, "feel": [308, 337], "confid": 308, "freeli": 308, "answer": 308, "respectfulli": 308, "pai": 308, "attent": 308, "feedback": 308, "forum": 308, "especi": 308, "contribut": [308, 312, 324, 326], "conscienti": 308, "percept": 308, "wider": 308, "respond": 308, "strive": 308, "behavior": 308, "encourag": [308, 311, 316, 324], "debat": 308, "disagr": 308, "silent": 308, "violat": [308, 326], "contact": [308, 326], "talk": 308, "privat": [308, 326], "situat": 308, "onlin": 308, "offlin": 308, "mail": [308, 326], "social": 308, "media": 308, "confer": 308, "adapt": [308, 326], "astropi": 308, "aspect": [309, 323, 331, 340], "modelsearch_dir1": 309, "hash": 309, "modelsearch_candidate2": [309, 332], "mytab_mox1": 309, "modelsearch_candidate3": [309, 332], "modelsearch_candidate4": [309, 332], "subfold": 309, "softwar": [309, 326, 329, 330, 331, 337, 348], "temporari": 309, "finish": 309, "your": [309, 311, 322, 324, 326, 333, 350], "script": [309, 326], "null": [309, 315, 323, 325, 332, 350], "addition": [309, 319, 332], "quickli": [309, 342], "recreat": 309, "frame": 309, "programmat": 309, "pharmpy_vers": 309, "tool_nam": 309, "start_tim": 309, "2022": [309, 313, 319, 323, 325, 332], "22t14": 309, "312240": 309, "02": [309, 313, 340, 343], "end_tim": 309, "592109": 309, "mox2": [309, 313, 319, 323, 325, 332], "common_opt": 309, "tmp": 309, "tool_result": 309, "subsequ": [309, 332, 333], "thu": [309, 316, 323, 326, 329], "global": [310, 350], "nonmen": 310, "conf": 310, "ini": [310, 331], "default_nonmem_path": 310, "nmfe751": 310, "licfil": 310, "rpath": 310, "temporarili": 310, "pharmpyconfigfil": 310, "bug": 311, "appreci": 311, "suggest": [311, 324], "suitabl": [311, 337], "student": [311, 337], "commun": [311, 326], "aspir": 311, "conduct": [311, 332], "foster": 311, "linux": [311, 322], "maco": [311, 322], "ll": [311, 331], "badg": 311, "pip": [311, 322], "python3": 311, "pip3": 311, "guid": [311, 315, 329, 331], "former": 311, "ubuntu": 311, "apt": 311, "url": [311, 322], "render": [311, 326, 337], "On": [311, 337], "sudo": 311, "brew": 311, "unnecessari": [311, 326], "thing": [311, 326], "instruct": [311, 322, 330, 348], "black": 311, "formatt": 311, "flake8": 311, "linter": 311, "isort": 311, "lint": 311, "reformat": 311, "py39": 311, "test_paramet": 311, "py": [311, 322], "test_get_theta": 311, "apart": 311, "suit": 311, "purpos": [311, 326], "test_modelsearch": 311, "test_summary_individu": 311, "pull": 311, "manag": 311, "contributor": [311, 326], "emploi": 311, "commit": [311, 326], "push": 311, "name_of_branch": 311, "deploy": 311, "setup": 311, "pypi": [311, 322], "trigger": [311, 329], "tag": 311, "disturb": 311, "checkout": 311, "rebas": 311, "changelog": 311, "bump": 311, "good": [311, 326], "semant": 311, "bumpvers": 311, "cfg": 311, "sh": 311, "patch": 311, "minor": 311, "major": [311, 326], "copyright": 311, "necessari": [311, 326], "coi": 311, "stream": [311, 329], "verbatim": [311, 326], "farmaci": 312, "uu": 312, "johan": 312, "borg": 312, "antonia": 312, "hufnagl": 312, "kajsa": 312, "harl": 312, "zhe": [312, 337], "huang": [312, 337], "aurelien": 312, "oom": 312, "viktor": 312, "rogn\u00e5": 312, "piyanan": 312, "assawasuwannakit": 312, "xiaomei": 312, "chen": 312, "alzahra": 312, "hamdan": 312, "osama": 312, "qutishat": 312, "shijun": 312, "wang": 312, "tianwu": 312, "yang": 312, "keqi": 312, "shi": 312, "xuanlin": 312, "liu": 312, "samia": 312, "moham": 312, "yersultan": 312, "mirasbekov": 312, "warm": 312, "thank": 312, "sponsor": 312, "hoffman": 312, "la": 312, "roch": 312, "ltd": 312, "pharmetheu": 312, "uppsala": [312, 324], "univers": [312, 324], "enabl": [312, 326], "resourc": 312, "swedish": 312, "infrastructur": 312, "snic": 312, "uppmax": 312, "research": [312, 337], "council": 312, "inter": [313, 323, 331], "five": [313, 347], "sai": [313, 326, 333], "forcefulli": 313, "manual": [313, 315, 328], "rewritten": 313, "notic": [313, 326], "semicolon": 313, "wildcard": [313, 328], "sentenc": 313, "filtrat": [313, 332], "filtered_input_model": 313, "reflect": 313, "covsearch_run1": 313, "covsearch_run2": 313, "covsearch_run3": 313, "covsearch_run4": 313, "covsearch_run5": 313, "covsearch_run6": 313, "covsearch_run7": 313, "covsearch_run8": 313, "covsearch_run9": 313, "covsearch_run10": 313, "covsearch_run11": 313, "covsearch_run12": 313, "covsearch_run13": 313, "covsearch_run14": 313, "covsearch_run15": 313, "covsearch_run16": 313, "covsearch_run17": 313, "covsearch_run18": 313, "covsearch_run19": 313, "covsearch_run20": 313, "covsearch_run21": 313, "covsearch_run22": 313, "covsearch_run23": 313, "covsearch_run24": 313, "covsearch_run25": 313, "covsearch_run26": 313, "covsearch_run27": 313, "covsearch_run28": 313, "covsearch_run29": 313, "covsearch_run30": 313, "covsearch_run31": 313, "covsearch_run32": 313, "covsearch_run33": 313, "covsearch_run34": 313, "covsearch_run35": 313, "covsearch_run36": 313, "covsearch_run37": 313, "covsearch_run38": 313, "covsearch_run39": 313, "covsearch_run40": 313, "covsearch_run41": 313, "covsearch_run42": 313, "covsearch_run43": 313, "covsearch_run44": 313, "covsearch_run45": 313, "covsearch_run46": 313, "covsearch_run47": 313, "covsearch_run48": 313, "covsearch_run49": 313, "covsearch_run50": 313, "covsearch_run51": 313, "covsearch_run52": 313, "covsearch_run53": 313, "covsearch_run54": 313, "pvalu": [313, 343], "goal_pvalu": [313, 343], "is_backward": [313, 343], "047127e": 313, "03": [313, 338, 340, 343], "710000e": 313, "568110e": 313, "494490e": 313, "498453e": 313, "459287e": 313, "280678e": 313, "923500e": 313, "003390e": 313, "984500e": 313, "372293e": 313, "176965e": 313, "207550e": 313, "626878e": 313, "564495e": 313, "539960e": 313, "762000e": 313, "823200e": 313, "417058e": 313, "759040e": 313, "469024e": 313, "811054e": 313, "642452e": 313, "840779e": 313, "261720e": 313, "651215e": 313, "954671e": 313, "163414e": 313, "926594e": 313, "491049e": 313, "423998e": 313, "706676e": 313, "374390e": 313, "054865e": 313, "105347e": 313, "300000e": 313, "029682e": 313, "641559e": 313, "748923e": 313, "363918e": 313, "203548e": 313, "052323e": 313, "567877e": 313, "507358e": 313, "510000e": 313, "1292": [313, 319, 323, 325, 332], "186761": [313, 319, 323, 325, 332], "742325": 313, "929085": 313, "315057": 313, "1346": 313, "501817": 313, "978215": 313, "1332": 313, "164976": 313, "062682": 313, "1312": 313, "249442": 313, "061671": 313, "248431": 313, "056538": 313, "1313": [313, 332], "243298": 313, "732689": 313, "919450": 313, "651626": 313, "1335": 313, "838386": 313, "814832": 313, "1334": 313, "001593": 313, "363759": 313, "550520": 313, "989077": 313, "175838": 313, "136326": 313, "323087": 313, "387950": 313, "1316": 313, "574711": 313, "961688": 313, "148448": 313, "743393": 313, "930153": 313, "617998": 313, "1340": 313, "804759": 313, "641996": 313, "1345": 313, "828756": 313, "288366": 313, "1357": 313, "475127": 313, "263168": 313, "1343": [313, 323], "449928": 313, "814686": 313, "1319": 313, "001446": 313, "181808": 313, "368568": 313, "957602": 313, "144362": 313, "567343": 313, "1347": 313, "754104": 313, "426389": 313, "613149": 313, "324567": 313, "1358": 313, "511327": 313, "446030": 313, "632790": 313, "549224": 313, "1326": 313, "735985": 313, "997342": 313, "184102": 313, "617389": 313, "1351": 313, "804150": 313, "900404": 313, "1350": 313, "087164": 313, "566615": 313, "1391": 313, "753375": 313, "929659": 313, "1352": 313, "116420": 313, "990522": 313, "177283": 313, "217267": 313, "404028": 313, "62": [313, 338], "729333": 313, "1354": 313, "916093": 313, "101": [313, 331], "379219": 313, "1393": 313, "565980": 313, "67": [313, 340, 343], "670588": 313, "1359": 313, "857348": 313, "016040": 313, "202801": 313, "926496": 313, "113256": 313, "139": 313, "462177": 313, "1431": 313, "648937": 313, "83": [313, 340], "706655": 313, "1375": 313, "893415": 313, "798603": 313, "1367": 313, "985364": 313, "801019": 313, "1438": 313, "987780": 313, "92": 313, "443408": 313, "1384": 313, "630169": 313, "997461": 313, "1439": 313, "184221": 313, "322869": 313, "509630": 313, "925020": 313, "111781": 313, "142": 313, "814402": 313, "1435": 313, "001163": [313, 327], "862830": 313, "049591": 313, "449696": 313, "636456": 313, "801017": 313, "987778": 313, "89": [313, 332, 341], "86": 313, "1414": 313, "872375": 313, "93": [313, 319], "810457": 313, "630168": 313, "68": 313, "pop_vc_estim": [313, 319, 325, 342], "pop_mat_estim": [313, 319, 325, 342], "5328": [313, 319, 323, 325, 332], "104": [313, 319, 323, 325, 332], "2300": [313, 319, 323, 332], "433676": [313, 319, 323, 325, 332], "2632": 313, "103": [313, 323, 347], "2400": 313, "447194": 313, "8757": 313, "2690": 313, "429235": 313, "4824": 313, "0490": 313, "435646": 313, "1536": 313, "7690": 313, "430342": 313, "9763": 313, "102": 313, "8640": 313, "428158": 313, "9807": 313, "1030": 313, "505090": 313, "3823": 313, "4790": 313, "453248": 313, "3323": 313, "5279": 313, "434088": 313, "7087": 313, "109": [313, 332], "1750": 313, "459561": 313, "8501": 313, "4740": 313, "428178": 313, "4821": 313, "0270": 313, "435683": 313, "1635": 313, "5920": 313, "433194": 313, "0931": 313, "1120": 313, "435607": 313, "1216": 313, "2180": 313, "519385": 313, "3873": 313, "4580": 313, "453399": 313, "4279": 313, "6231": 313, "442192": 313, "9115": 313, "9240": 313, "466270": 313, "7337": 313, "9590": 313, "409478": 313, "3781": 313, "2760": 313, "415011": 313, "1007": 313, "5110": 313, "446059": 313, "1211": 313, "8490": 313, "522201": 313, "2833": 313, "7400": 313, "430777": 313, "3688": 313, "9010": 313, "444906": 313, "9130": 313, "7450": 313, "468161": 313, "8124": 313, "7120": 313, "407766": 313, "3789": 313, "2080": 313, "416694": 313, "1985": 313, "6770": 313, "441794": 313, "2994": 313, "94": 313, "1796": 313, "587939": 313, "4692": 313, "3027": 313, "440385": 313, "0941": 313, "6170": 313, "463834": 313, "6693": 313, "2570": 313, "413923": 313, "3618": 313, "427491": 313, "2658": 313, "5620": 313, "521096": 313, "4546": 313, "9522": 313, "446657": 313, "0732": 313, "105": [313, 319, 342], "0130": 313, "454492": 313, "7145": 313, "9771": 313, "451302": 313, "3318": 313, "9710": 313, "477444": 313, "4944": 313, "3068": 313, "502124": 313, "0790": 313, "7890": 313, "462595": 313, "7389": 313, "8006": 313, "491811": 313, "6677": 313, "7770": 313, "477864": 313, "6488": 313, "0460": 313, "472418": 313, "9834": 313, "9929": 313, "474434": 313, "0359": 313, "2120": 313, "478021": 313, "0706": 313, "1991": 313, "474688": 313, "0336": 313, "8083": 313, "475373": 313, "0636": 313, "2525": 313, "473063": 313, "0292": 313, "8033": 313, "473542": 313, "0651": 313, "9375": 313, "483644": 313, "0661": 313, "5310": 313, "462817": 313, "0432": 313, "1300": [313, 325], "446808": 313, "7913": 313, "90": 313, "1894": 313, "489466": 313, "9838": 313, "9945": 313, "474441": 313, "0361": 313, "478038": 313, "ruv_prop_estim": [313, 319, 325, 342], "pop_clage_estim": 313, "209972": [313, 319, 323, 325, 332], "197452": 313, "005338": 313, "192852": 313, "199549": 313, "193411": 313, "195608": 313, "192557": 313, "198783": 313, "191425": 313, "192934": 313, "192682": 313, "000659": 313, "199545": 313, "000303": 313, "193747": 313, "000956": 313, "197305": 313, "006150": 313, "194664": 313, "005918": 313, "198812": 313, "000334": 313, "192753": 313, "006503": 313, "194238": 313, "009567": 313, "189160": 313, "005291": 313, "195766": 313, "003125": 313, "195730": 313, "004767": 313, "195098": 313, "006600": 313, "195843": 313, "001364": 313, "189330": 313, "003100": 313, "193116": 313, "008094": 313, "189540": 313, "006380": 313, "196038": 313, "002606": 313, "197429": 313, "000340": 313, "204599": 313, "002549": 313, "190442": 313, "000522": 313, "195705": 313, "005726": 313, "192398": 313, "002984": 313, "196915": 313, "000299": 313, "198387": 313, "001229": 313, "190453": 313, "000216": 313, "197082": 313, "005988": 313, "191512": 313, "002433": 313, "194217": 313, "000649": 313, "191075": 313, "001918": 313, "197129": 313, "005915": 313, "183751": 313, "001489": 313, "187999": 313, "001004": 313, "194026": 313, "005955": 313, "187663": 313, "002481": 313, "193344": 313, "009365": 313, "187822": 313, "002901": 313, "187730": 313, "187425": 313, "002946": 313, "184713": 313, "006622": 313, "187724": 313, "002919": 313, "187525": 313, "003050": 313, "192812": 313, "005142": 313, "183104": 313, "001493": 313, "187672": 313, "002483": 313, "193349": 313, "009366": 313, "pop_clwt_estim": 313, "382904": 313, "010536": 313, "387669": 313, "010497": 313, "396947": 313, "010523": 313, "385807": 313, "010703": 313, "554417": 313, "011851": 313, "519989": 313, "012179": 313, "808497": 313, "011109": 313, "737404": [313, 344], "007109": 313, "709206": 313, "000803": 313, "736659": 313, "000429": 313, "706752": 313, "000822": 313, "662625": 313, "002097": 313, "709124": 313, "000793": 313, "704774": 313, "427285": 313, "003711": 313, "779125": 313, "001087": 313, "007108": 313, "pop_matage_estim": 313, "pop_matsex_estim": 313, "059279": 313, "517590": 313, "056724": 313, "520520": 313, "063392": 313, "057943": 313, "019268": 313, "348000": 313, "008419": 313, "040813": 313, "045624": 313, "023159": 313, "057041": 313, "059912": 313, "003577": 313, "495110": 313, "070972": 313, "033397": 313, "013863": 313, "012482": 313, "367050": 313, "020109": 313, "442940": 313, "030354": 313, "491875": 313, "038044": 313, "224276": 313, "001885": 313, "848782": 313, "017435": 313, "646840": 313, "585757": 313, "000169": 313, "367142": 313, "002221": 313, "737357": 313, "009685": 313, "033267": 313, "009238": 313, "267484": 313, "012667": 313, "165471": 313, "005033": 313, "094740": 313, "010833": 313, "065816": 313, "004749": 313, "096523": 313, "005557": 313, "098655": 313, "107862": 313, "012020": 313, "118838": 313, "005781": 313, "002862": 313, "222520": 313, "005160": 313, "361570": 313, "008017": 313, "030930": 313, "005034": 313, "094706": 313, "010829": 313, "065876": 313, "pop_matwt_estim": 313, "pop_vcage_estim": 313, "019706": 313, "014651": 313, "020136": 313, "014954": 313, "022336": 313, "011936": 313, "005508": 313, "002344": 313, "013967": 313, "034213": 313, "034044": 313, "009672": 313, "008593": 313, "017124": 313, "000315": 313, "022223": 313, "019316": 313, "009542": 313, "010323": 313, "008652": 313, "018053": 313, "019211": 313, "001906": 313, "014021": 313, "011399": 313, "003565": 313, "010903": 313, "014331": 313, "013699": 313, "015830": 313, "000202": [313, 344], "002078": 313, "009019": 313, "005773": 313, "012366": 313, "002607": 313, "002247": 313, "005768": 313, "011567": 313, "006160": 313, "014272": 313, "004566": 313, "010938": 313, "002378": 313, "007473": 313, "011606": 313, "010672": 313, "000456": 313, "009445": 313, "014649": 313, "012169": 313, "005771": 313, "002248": 313, "pop_vcwt_estim": 313, "953372": 313, "013320": 313, "984897": 313, "012092": 313, "972469": 313, "011946": 313, "954734": 313, "010781": 313, "009540": 313, "009922": 313, "989687": 313, "009576": 313, "986758": 313, "869150": 313, "632058": 313, "008418": 313, "751771": 313, "007571": 313, "416489": 313, "013879": 313, "724866": 313, "008196": 313, "746265": 313, "007399": 313, "727224": 313, "008331": 313, "666572": 313, "010074": 313, "751144": 313, "008031": 313, "711725": 313, "008833": 313, "012851": 313, "967468": 313, "751794": 313, "007573": 313, "416464": 313, "013880": 313, "462": 313, "nhowev": [313, 319, 325], "reduced_ofv": [313, 343], "extended_ofv": [313, 343], "ofv_drop": [313, 343], "extended_st": [313, 343], "621435": 313, "246753": 313, "394001": 313, "645626": 313, "219363": 313, "001068": 313, "875674": 313, "899671": 313, "152040": 313, "126842": 313, "678359": 313, "045482": 313, "821275": 313, "431017": 313, "290062": 313, "366965": 313, "488428": 313, "591623": 313, "039740": 313, "659788": 313, "942802": 313, "017391": 313, "380435": 313, "441298": 313, "668043": 313, "180108": 313, "388697": 313, "680065": 313, "025518": 313, "935973": 313, "77": 313, "446136": 313, "690615": 313, "782563": 313, "71": [313, 342], "002416": 313, "644805": 313, "554053": 313, "674591": 313, "072441": 313, "183059": 313, "134631": 313, "547765": 313, "311846": 313, "373764": 313, "196444": 313, "delta_df": [313, 343], "extended_signific": [313, 343], "covariate_effect": [313, 320, 340, 343], "ofv_summari": [313, 343], "candidate_summari": [313, 343], "n_test": [313, 343], "n_ok": [313, 343], "n_localmin": [313, 343], "n_fail": [313, 343], "stepinclud": [313, 343], "estimation_ofv": 314, "prediction_ofv": 314, "545": 314, "863847": 314, "186": 314, "192727": 314, "953185": 314, "694832": 314, "547": 314, "843632": 314, "184": [314, 343], "022535": 314, "579": 314, "109635": 314, "596550": 314, "prediction_ofv_sum": 314, "747": 314, "506644594254": 314, "read_raw_dataset": 315, "sever": [315, 322, 331, 340], "examin": [315, 319, 322, 332, 349], "di": 315, "role": 315, "identif": [315, 342], "mostli": [315, 316, 337], "steven": 315, "typologi": 315, "en": [315, 316, 320], "wikipedia": 315, "wiki": [315, 326], "level_of_measur": 315, "annot": 315, "kg": 315, "mg": 315, "l": 315, "low": [315, 331, 349], "understand": [315, 336], "accompani": [315, 326], "arrai": [315, 328, 329, 331], "And": [315, 326, 328, 331], "under": [316, 324, 326, 343, 350], "construct": [316, 336], "complet": 316, "four": 316, "distinct": 316, "layer": [316, 332, 335], "worklow": 316, "higher": [316, 324, 329, 331, 344], "coupl": 316, "mathemat": [316, 329, 337], "concid": 316, "live": 316, "namespac": 316, "mutablesequ": 316, "scalar": [316, 329], "element": [316, 330, 350], "concern": [316, 326], "expos": 316, "numpydoc": 316, "readthedoc": 316, "ecosystem": 316, "wrap": 316, "share": [316, 326, 335, 341], "leak": 316, "third": [316, 326], "parti": [316, 326], "break": 316, "psc": 318, "reason": [318, 326, 337], "fewewst": 318, "But": [318, 326], "run_estmethod": 319, "chapter": [319, 332], "few": 319, "cartesian": 319, "9999": 319, "runtime_estim": 319, "estmethod_run2": 319, "2422": 319, "465718": 319, "81": [319, 323, 330], "estmethod_run1": 319, "2271": 319, "769243": 319, "run_typ": 319, "1299": [319, 325], "696027": 319, "2420": 319, "117263": 319, "145": 319, "2702": 319, "1840": 319, "3241": 319, "6578": 319, "iiv_cl_estim": [319, 325, 342], "iiv_vc_estim": [319, 325, 342], "481858": [319, 323, 325, 332], "593654": [319, 323, 325, 332], "439589": 319, "483291": 319, "598179": 319, "901289": 319, "419533": 319, "408292": 319, "iiv_mat_estim": [319, 325, 342], "000130": [319, 325, 332], "322572": 319, "197647": 319, "865979": 319, "105366": 319, "10000": 319, "WITH": [319, 323, 325, 326], "THE": [319, 323, 325, 326], "model_3b": 320, "u": [320, 331], "n_": 320, "par": [320, 329], "eta_k": 320, "bmatrix": 320, "vdot": 320, "eta_": [320, 329, 331], "sim": [320, 329, 331, 344], "mathcal": [320, 329, 331], "mu_2": 320, "omega_": [320, 329], "n1": 320, "n2": 320, "ddot": 320, "latter": 320, "partit": 320, "5th": 320, "630859": 320, "868770": 320, "176754": 320, "95th": 320, "925602": 320, "082310": 320, "244607": 320, "569077": 320, "600360": 320, "632538": 320, "532478": 320, "824355": 320, "138312": 320, "577861": 320, "761430": 320, "991915": 320, "003863": 320, "148763": 320, "297579": 320, "600771": 320, "631260": 320, "661025": 320, "315965": 320, "549669": 320, "811532": 320, "margin": 320, "ij": 320, "ijk": 320, "omega_k": 320, "sigma_1": 320, "sigma_2": 320, "sigma_i": 320, "turn": [320, 329], "percent": 320, "red": 320, "figur": [320, 334], "vconcatchart": 320, "sigma_": [320, 329], "020503": 320, "628814": 320, "009309": 320, "544459": 320, "026950": 320, "613127": 320, "050396": 320, "551581": 320, "individual_effect": 320, "913307": 320, "899565": 320, "923297": 320, "939015": 320, "926632": 320, "948404": 320, "933506": 320, "894967": 320, "970755": 320, "010192": 320, "973823": 320, "047109": 320, "992728": 320, "986142": 320, "999404": 320, "361911": 320, "322628": 320, "418737": 320, "894772": 320, "868658": 320, "917333": 320, "947797": 320, "923656": 320, "969732": 320, "771958": 320, "748072": 320, "790423": 320, "790120": 320, "768277": 320, "806911": 320, "percentu": 320, "unexplained_vari": 320, "sd_observ": 320, "sd_5th": 320, "sd_95th": 320, "469535": 320, "359934": 320, "547612": 320, "465490": 320, "352335": 320, "538174": 320, "165502": 320, "141580": 320, "190726": 320, "159149": 320, "134989": 320, "183613": 320, "420471": 320, "327104": 320, "490419": 320, "404440": 320, "306148": 320, "467046": 320, "143317": 320, "122348": 320, "166012": 320, "141826": 320, "120282": 320, "163610": 320, "percetil": 320, "025328": 320, "022571": 320, "020115": 320, "216681": 320, "188254": 320, "163572": 320, "027391": 320, "021634": 320, "020540": 320, "intermedi": 320, "model_4": [320, 329], "parameter_inits_and_estim": 320, "model_3": 320, "115195": 320, "007066": 320, "209016": 320, "125999": 320, "020191": 320, "224959": 320, "126000": 320, "007084": 320, "38635": 320, "220463": 320, "195326": 320, "176796": 320, "bsv_apgr": [320, 329], "010583": 320, "107027": 320, "000008": 320, "171529": 320, "404278": 320, "000010": 320, "012042": 320, "115427": 320, "000032": 320, "208475": 320, "415588": 320, "000030": 320, "062712": 320, "117271": 320, "039930": 320, "446939": 320, "402075": 320, "bsv_wgt": [320, 329], "244579": 320, "244448": 320, "002173": 320, "002170": 320, "244080": 320, "007763": 320, "007760": 320, "249237": 320, "034610": 320, "015250": 320, "relative_chang": 320, "773218": 320, "095327": 320, "520526": 320, "271369": 320, "110618": 320, "896": 320, "974324": 320, "868": [320, 323], "657803": 320, "852": 320, "803483": 320, "753": 320, "302743": 320, "themselv": 320, "ideal": 320, "estimated_covari": 320, "stdev": 320, "423728": 320, "237640": 320, "525424": 320, "704565": [320, 331], "nyberg": 320, "hb": 320, "jonsson": 320, "mo": 320, "introduct": 320, "cpt": 320, "pharmacometr": [320, 324, 326, 348], "syst": 320, "pharmacol": 320, "1002": 320, "psp4": 320, "12741": 320, "plan": 322, "stabl": 322, "googl": [322, 337], "coral": 322, "repo": 322, "tflite_runtim": 322, "nonlinear": 322, "read_model_result": 323, "brute": [323, 325], "explor": [323, 337], "naiv": 323, "minima": 323, "\u03b4ofv": [323, 325, 332], "\u03b4aic": [323, 325, 332], "\u03b4bic": [323, 325, 332], "iivsearch_no_of_etas_candidate3": 323, "282024": 323, "iivsearch_no_of_etas_candidate2": 323, "217": 323, "691571": 323, "iivsearch_no_of_etas_candidate6": 323, "385": 323, "641987": 323, "iivsearch_no_of_etas_candidate1": 323, "631": 323, "871991": 323, "iivsearch_no_of_etas_candidate5": 323, "633": [323, 330], "419500": 323, "iivsearch_no_of_etas_candidate4": 323, "815": 323, "076729": 323, "iivsearch_no_of_etas_candidate7": 323, "834": 323, "249063": 323, "iivsearch_block_structure_candidate1": 323, "971960": 323, "1283": 323, "597406": 323, "1279": 323, "315382": 323, "1061": 323, "623812": 323, "893": 323, "673395": 323, "443392": 323, "645": 323, "895882": 323, "464": 323, "238653": 323, "066319": 323, "1365": 323, "569365": 323, "178325": 323, "1280": 323, "1278": [323, 332], "1070": 323, "204731": 323, "1058": 323, "897": 323, "963854": 323, "024311": 323, "644": 323, "650": 323, "186341": 323, "640": 323, "468": 323, "529112": 323, "458": 323, "437": 323, "440744": 323, "1364": 323, "1261": [323, 325], "189012": 323, "1259": [323, 332], "530267": [323, 332], "1039": 323, "215418": [323, 343], "641723": 323, "034998": 323, "620": 323, "864210": 323, "439": 323, "206982": 323, "417": 323, "411370": 323, "160972": 323, "5333": 323, "0366": 323, "1164": 323, "2929": 323, "8058": 323, "9055": 323, "2270": 323, "9424": 323, "1360": 323, "239": 323, "1090": 323, "234": 323, "6680": 323, "9380": 323, "110": 323, "6690": 323, "9880": 323, "433544": 323, "114210": 323, "347648": 323, "316164": 323, "310155": 323, "922906": 323, "434563": 323, "436279": 323, "481830": 323, "594777": 323, "396159": 323, "516927": 323, "593578": 323, "414690": 323, "247930": 323, "656304": 323, "00013": 323, "31998": 323, "08352": 323, "43473": 323, "209975": 323, "401593": 323, "574966": 323, "736398": 323, "750954": 323, "744891": 323, "810669": 323, "215885": 323, "iiv_cl_iiv_vc_estim": 323, "498114": 323, "371": 323, "rxode2": [324, 330, 331], "post": [324, 342], "sens": 325, "approach": 325, "nonzero": 325, "iovsearch_run7": 325, "iovsearch_run5": 325, "iovsearch_run3": 325, "iovsearch_run4": 325, "iovsearch_run2": 325, "iovsearch_run1": 325, "iovsearch_run8": 325, "540508": 325, "1265": 325, "694052": 325, "230772": 325, "384316": 325, "230394": 325, "383938": 325, "1262": 325, "153544": 325, "750000": 325, "403544": 325, "750400": 325, "403145": 325, "060114": 325, "093431": 325, "043077": 325, "1257": 325, "110467": 325, "782429": 325, "1115": 325, "911624": 325, "015062": 325, "707566": 325, "017679": 325, "017280": 325, "707992": 325, "707614": 325, "017728": 325, "1145": 325, "944840": 325, "230": 325, "1954": 325, "242": [325, 338, 340], "440613": 325, "1403": 325, "665": 325, "439784": 325, "1951": 325, "241": 325, "1950": 325, "440611": 325, "1402": 325, "439785": 325, "439783": 325, "2313": 325, "438628": 325, "474140": 325, "586866": 325, "311861": 325, "472835": 325, "590422": 325, "320387": 325, "474125": 325, "586859": 325, "311859": 325, "474111": 325, "586860": 325, "311903": 325, "590425": 325, "320393": 325, "472840": 325, "590424": 325, "320395": 325, "572627": 325, "290631": 325, "omega_iov_1_estim": 325, "194680": 325, "002735": 325, "195532": 325, "194676": 325, "194675": 325, "195531": 325, "197005": 325, "483460": 325, "omega_iov_2_estim": 325, "omega_iov_3_estim": 325, "000006": 325, "000000e": [325, 341, 343], "279": [325, 338], "NEAR": [325, 332], "adopt": 326, "wikimedia": 326, "bowl_of_hygieia_by_david": 326, "svg": 326, "cc": 326, "BY": 326, "sa": 326, "font": 326, "pt": 326, "san": 326, "relicens": 326, "lgpl": 326, "know": 326, "maintaint": 326, "2024": 326, "redistribut": 326, "publish": 326, "foundat": 326, "hope": 326, "warranti": 326, "impli": 326, "merchant": 326, "FOR": 326, "modif": [326, 340], "permit": 326, "retain": 326, "disclaim": 326, "reproduc": 326, "materi": 326, "holder": 326, "AND": 326, "AS": 326, "OR": 326, "BUT": 326, "NOT": 326, "TO": 326, "OF": 326, "IN": 326, "shall": 326, "BE": 326, "liabl": 326, "incident": 326, "exemplari": 326, "consequenti": 326, "damag": 326, "procur": 326, "servic": 326, "loss": 326, "profit": 326, "busi": 326, "interrupt": 326, "theori": [326, 329], "liabil": 326, "contract": 326, "tort": 326, "neglig": 326, "aris": 326, "advis": 326, "SUCH": 326, "june": 326, "2007": 326, "inc": 326, "fsf": 326, "preambl": 326, "copyleft": 326, "practic": 326, "awai": 326, "contrast": 326, "guarante": 326, "speak": 326, "price": 326, "charg": 326, "wish": 326, "piec": 326, "prevent": 326, "deni": 326, "ask": [326, 350], "surrend": 326, "therefor": [326, 345], "grati": 326, "fee": 326, "recipi": 326, "gpl": 326, "assert": 326, "offer": [326, 331], "permiss": 326, "clearli": 326, "sake": 326, "erron": 326, "devic": 326, "although": 326, "manufactur": 326, "fundament": 326, "incompat": 326, "aim": [326, 340], "systemat": 326, "abus": 326, "area": [326, 337], "unaccept": 326, "prohibit": 326, "substanti": 326, "domain": [326, 328, 335], "stand": 326, "readi": 326, "provis": 326, "futur": 326, "threaten": 326, "constantli": 326, "patent": 326, "danger": 326, "proprietari": 326, "assur": 326, "law": 326, "semiconductor": 326, "mask": 326, "license": 326, "address": 326, "organ": [326, 329], "fashion": 326, "earlier": 326, "cover": [326, 332, 333, 336, 349], "unmodifi": 326, "propag": 326, "secondarili": 326, "infring": 326, "countri": 326, "convei": 326, "mere": 326, "network": 326, "transfer": 326, "extent": 326, "conveni": [326, 329], "promin": 326, "visibl": 326, "menu": 326, "criterion": [326, 345], "offici": 326, "wide": 326, "among": 326, "essenti": 326, "kernel": 326, "link": [326, 342], "subprogram": 326, "intim": 326, "regener": 326, "grant": 326, "irrevoc": 326, "affirm": 326, "unlimit": 326, "constitut": 326, "fair": 326, "sole": [326, 341], "facil": 326, "compli": 326, "behalf": 326, "relationship": [326, 343], "circumst": 326, "sublicens": 326, "anti": 326, "circumvent": 326, "deem": 326, "technolog": 326, "oblig": 326, "articl": 326, "wipo": 326, "treati": 326, "decemb": 326, "1996": 326, "waiv": 326, "forbid": 326, "exercis": 326, "intent": 326, "enforc": 326, "medium": [326, 337], "conspicu": 326, "intact": 326, "anyon": 326, "who": [326, 333], "possess": 326, "invalid": 326, "natur": 326, "storag": 326, "aggreg": 326, "beyond": 326, "embodi": 326, "durabl": 326, "customarili": 326, "interchang": 326, "spare": 326, "cost": 326, "server": 326, "occasion": 326, "noncommerci": 326, "subsect": 326, "6b": 326, "further": [326, 329], "clear": [326, 350], "host": 326, "satisfi": 326, "peer": 326, "transmiss": 326, "6d": 326, "portion": 326, "consum": 326, "tangibl": 326, "household": 326, "sold": 326, "incorpor": 326, "dwell": 326, "doubt": 326, "resolv": [326, 335], "favor": 326, "coverag": 326, "typic": [326, 348], "commerci": 326, "industri": 326, "suffic": 326, "interf": 326, "perpetu": 326, "character": 326, "nor": 326, "abil": 326, "rom": 326, "advers": 326, "protocol": 326, "publicli": 326, "password": 326, "unpack": 326, "supplement": 326, "govern": 326, "notwithstand": 326, "misrepresent": 326, "licensor": 326, "declin": 326, "trademark": 326, "trade": 326, "indemnif": 326, "contractu": 326, "impos": 326, "surviv": 326, "expressli": 326, "void": 326, "paragraph": 326, "ceas": 326, "reinstat": 326, "provision": 326, "perman": 326, "notifi": 326, "prior": 326, "dai": 326, "cessat": 326, "moreov": 326, "cure": 326, "receipt": 326, "qualifi": 326, "ancillari": 326, "consequ": 326, "likewis": 326, "downstream": 326, "complianc": 326, "entiti": 326, "asset": 326, "subdivid": 326, "plu": 326, "effort": 326, "royalti": 326, "litig": 326, "claim": 326, "counterclaim": 326, "lawsuit": 326, "alleg": 326, "sell": 326, "sale": 326, "acquir": 326, "hereaft": 326, "manner": [326, 332], "worldwid": 326, "agreement": 326, "denomin": 326, "coven": 326, "sue": 326, "knowingli": 326, "readili": 326, "arrang": [326, 345, 347], "depriv": 326, "yourself": 326, "benefit": [326, 337], "knowledg": 326, "believ": 326, "pursuant": 326, "convey": 326, "discriminatori": 326, "scope": [326, 346], "payment": 326, "primarili": 326, "march": 326, "constru": 326, "defens": 326, "court": 326, "contradict": 326, "excus": 326, "simultan": [326, 332], "pertin": 326, "agre": 326, "whom": 326, "refrain": 326, "affero": 326, "revis": 326, "Such": 326, "spirit": 326, "ever": 326, "THERE": 326, "qualiti": 326, "prove": 326, "defect": 326, "repair": 326, "WILL": 326, "inabl": 326, "BEING": 326, "inaccur": 326, "sustain": 326, "failur": [326, 337], "review": 326, "waiver": 326, "civil": 326, "greatest": 326, "achiev": 326, "safest": 326, "pointer": 326, "brief": 326, "idea": [326, 337], "electron": 326, "paper": 326, "hypothet": 326, "Of": 326, "cours": 326, "gui": 326, "box": [326, 340], "employ": 326, "programm": 326, "school": 326, "philosophi": 326, "why": 326, "7b2feb6f20b626a559d3150f6638c111f20b5213": 326, "lin_evalu": 327, "lin_estim": 327, "847272": 327, "problemat": 327, "742853": 327, "722681": 327, "020172": 327, "049270": 327, "072922": 327, "023652": 327, "042005": 327, "025071": 327, "016933": 327, "812731": 327, "767326": 327, "045405": 327, "092668": 327, "052741": 327, "039927": 327, "345523": 327, "466217": 327, "120694": 327, "092993": 327, "062696": 327, "030297": 327, "515740": 327, "483016": 327, "032724": 327, "320532": 327, "253131": 327, "067401": 327, "998789": 327, "959488": 327, "039301": 327, "216717": 327, "214554": 327, "002163": 327, "099921": 327, "125228": 327, "025306": 327, "321679": 327, "306275": 327, "015405": 327, "261241": 327, "333707": 327, "072466": 327, "671243": 327, "651480": 327, "019763": 327, "330720": 327, "297562": 327, "033158": 327, "936161": 327, "906483": 327, "029678": 327, "714069": 327, "871090": 327, "157021": 327, "019825": 327, "011817": 327, "008008": 327, "056142": 327, "013498": 327, "042644": 327, "248747": 327, "213924": 327, "034823": 327, "605213": 327, "571494": 327, "033719": 327, "815937": 327, "898911": 327, "082974": 327, "454128": 327, "483765": 327, "029637": 327, "964631": 327, "119373": 327, "154742": 327, "186715": 327, "170103": 327, "016612": 327, "077661": 327, "064019": 327, "013642": 327, "940635": 327, "941894": 327, "001260": 327, "074883": 327, "073446": 327, "001437": 327, "256369": 327, "245489": 327, "010881": 327, "103887": 327, "101956": 327, "001932": 327, "907728": 327, "900485": 327, "007243": 327, "743720": 327, "709980": 327, "033740": 327, "047324": 327, "021009": 327, "026315": 327, "430306": 327, "400894": 327, "029412": 327, "781609": 327, "798011": 327, "016402": 327, "378940": 327, "371430": 327, "007511": 327, "194729": 327, "237151": 327, "042422": 327, "599213": 327, "525654": 327, "073559": 327, "709166": 327, "667521": 327, "041645": 327, "219054": 327, "180075": 327, "038978": 327, "122738": 327, "296506": 327, "173768": 327, "229686": 327, "228531": 327, "001156": 327, "756406": 327, "734272": 327, "022134": 327, "979740": 327, "927830": 327, "051910": 327, "813988": 327, "812185": 327, "001803": 327, "234962": 327, "233799": 327, "389988": 327, "431669": 327, "041681": 327, "057167": 327, "047647": 327, "009521": 327, "429917": 327, "365265": 327, "064652": 327, "011212": 327, "105276": 327, "094064": 327, "302735": 327, "342891": 327, "040156": 327, "292516": 327, "307608": 327, "015092": 327, "067193": 327, "977095": 327, "090098": 327, "359971": 327, "357379": 327, "002592": 327, "340768": 327, "341140": 327, "000372": 327, "515376": 327, "511708": 327, "003668": 327, "970486": 327, "940640": 327, "029846": 327, "638461": 327, "592266": 327, "046195": 327, "iofv_plot": 327, "concis": 328, "delai": [328, 332], "newlin": 328, "semi": [328, 341], "colon": 328, "endpoint": 328, "inst": [328, 332], "nodepot": 328, "directeffect": [328, 334, 346], "effectcomp": [328, 334], "comprtment": [328, 334], "indirecteffect": [328, 334], "autom": 328, "li": [328, 329], "pk_iiv": 328, "pd_iiv": 328, "At": 329, "heart": 329, "subclass": 329, "mymodel": [329, 331], "parset": 329, "displaystyl": [329, 331], "eps_": 329, "similarli": [329, 350], "theta_": 329, "s_": 329, "a_": [329, 331, 347], "quit": 329, "flexibl": 329, "cumbersom": 329, "unimport": 329, "frem_path": 329, "frem_model": 329, "frem_model_result": 329, "omega\u2082": 329, "omega\u2083": 329, "omega\u2084": 329, "\u2082": 329, "eta\u2083": 329, "\u2083": 329, "eta\u2084": 329, "eps\u2082": 329, "epscov": 329, "bsv_": 329, "omega_2_1": 329, "omega_3_1": 329, "omega_4_1": 329, "omega_3_2": 329, "omega_4_2": 329, "omega_4_3": 329, "000286193": 329, "0676481": 329, "0256033": 329, "0235094": 329, "00161838": 329, "24458": 329, "omega_est": 329, "0393482": 329, "0168369": 329, "0442286": 329, "0426757": 329, "0259374": 329, "0654878": 329, "00168063": 329, "983027": 329, "240423": 329, "98305": 329, "choleski": 329, "198363807182661": 329, "0848788911603008": 329, "136868454493349": 329, "222967085720797": 329, "616745467855979": 329, "743597812371906": 329, "215138540674925": 329, "145697201390566": 329, "508675383095755": 329, "810424017694199": 329, "pure": 329, "astyp": 329, "numeric64": 329, "linalg": 329, "19836381": 329, "08487889": 329, "13686845": 329, "22296709": 329, "61674547": 329, "74359781": 329, "21513854": 329, "1456972": 329, "50867538": 329, "81042402": 329, "esim": 330, "testdata": 330, "2760562818805": 330, "171321": 330, "167051": 330, "115069": 330, "Or": 330, "039153": 330, "022378": 330, "009904": 330, "044731": [330, 341], "027325": 330, "527072": [330, 341], "457068": [330, 341], "267918": [330, 341], "172147": [330, 341], "proper": 330, "388058": 330, "356900": 330, "238442": 330, "096516": 330, "invers": [330, 341], "29955600": 330, "800": 330, "910": 330, "039": 330, "207": 330, "809": 330, "520": 330, "980": 330, "200": 330, "450": 330, "810": 330, "947352": 330, "970591": 330, "982342": 330, "457091": 330, "839437": 330, "257230": 330, "098338": 330, "538621": 330, "647969": 330, "394643": 330, "480164": 330, "650233": 330, "991406": 330, "378880": 330, "739902": 330, "328800": 330, "113284": 330, "212096": 330, "334047": 330, "327778": 330, "821533": 330, "631281": 330, "861669": 330, "915261": 330, "988977": 330, "279273": 330, "733181": 330, "830053": 330, "851724": 330, "212095": 330, "774791": 330, "352283": 330, "172643": 330, "427376": 330, "381444": 330, "624014": 330, "970627": 330, "177028": 330, "206540": 330, "955029": 330, "982447": 330, "051499": 330, "424503": 330, "734342": 330, "018477": 330, "810285": 330, "279258": 330, "168486": 330, "190508": 330, "749134": 330, "598565": 330, "237467": 330, "568934": 330, "800062": 330, "098025": 330, "586253": 330, "663948": 330, "850993": 330, "605845": 330, "143": 330, "045": 330, "971": 330, "881": 330, "575": 330, "080": 330, "063": 330, "427": 330, "668": 330, "543": 330, "662": 330, "478": 330, "667": 330, "253": 330, "495": 330, "918": 330, "67071": 330, "401100": 330, "35080": 330, "587770": 330, "36360": 330, "278800": 330, "19730": 330, "670700": 330, "21710": 330, "352600": 330, "86050": 330, "067200": 330, "35060": 330, "059269": 330, "72100": 330, "036754": 330, "10860": 330, "814140": 330, "28180": 330, "699410": 330, "eb": 330, "043861": 330, "005430": 330, "166321": 330, "131833": 330, "095934": 330, "130868": 330, "009154": 330, "017388": 330, "102019": 330, "283500": 330, "019417": 330, "099839": 330, "045946": 330, "059072": 330, "024270": 330, "189351": 330, "248536": 330, "091872": 330, "009545": 330, "012052": 330, "066151": 330, "293685": 330, "030236": 330, "074789": 330, "094502": 330, "147433": 330, "076820": 330, "105604": 330, "020051": 330, "066265": 330, "086035": 330, "023260": 330, "067138": 330, "030859": 330, "337255": 330, "035532": 330, "032579": 330, "028410": 330, "003589": 330, "080613": 330, "060233": 330, "052854": 330, "004469": 330, "057344": 330, "051992": 330, "212941": 330, "137510": 330, "004111": 330, "023282": 330, "302636": 330, "039069": 330, "119442": 330, "044956": 330, "263320": 330, "000776": 330, "083231": 330, "003150": 330, "012752": 330, "049654": 330, "080932": 330, "000555": 330, "099614": 330, "061864": 330, "332738": 330, "038156": 330, "067641": 330, "038017": 330, "184137": 330, "156617": 330, "208753": 330, "114558": 330, "053036": 330, "008405": 330, "026004": 330, "144920": 330, "081646": 330, "083320": 330, "015380": 330, "000392": 330, "078062": 330, "018966": 330, "112030": 330, "112715": 330, "383786": 330, "001730": 330, "167583": 330, "042068": 330, "066598": 330, "037600": 330, "000093": 330, "010662": 330, "009775": 330, "058306": 330, "229005": 330, "033958": 330, "008959": 330, "092312": 330, "050987": 330, "192569": 330, "002727": 330, "225657": 330, "115824": 330, "204269": 330, "054792": 330, "066334": 330, "123689": 330, "239678": 330, "047215": 330, "186615": 330, "000949": 330, "010812": 330, "015929": 330, "017213": 330, "005234": 330, "122552": 330, "076677": 330, "095696": 330, "024883": 330, "002999": 330, "007157": 330, "inspect": [331, 349], "model_nlmixr": 331, "diff": [331, 337], "add_error": 331, "prop_error": 331, "focei": 331, "model_start": 331, "eta_vc": 331, "pop_": 331, "225": 331, "epsilon_": 331, "iiv_cl_iiv_vc": 331, "\u03c3": 331, "iiv_mat": 331, "iiv_": 331, "advan2": 331, "THEN": 331, "22500000000000e": 331, "cond": 331, "maxev": 331, "99999": 331, "cipredi": 331, "mytab": 331, "tlag": 331, "alag1": 331, "advan3": 331, "trans4": 331, "run4": 331, "tol": 331, "pop_clmm": 331, "85000000000001": 331, "pop_km": 331, "iiv_clmm": 331, "iiv_clmm_iiv_vc": 331, "iiv_cl_iiv_mat": 331, "iiv_vc_iiv_mat": 331, "0094868": 331, "onto": 331, "wgt_median": 331, "30000": 331, "clwgt": 331, "pop_clwgt": 331, "user_effect": 331, "wgt_std": 331, "add_population_paramet": 331, "unfix_parameters_to": 331, "\u03b5\u209a\u2081": 331, "p1": 331, "set_time_varying_error_model": [331, 342], "100000000000000": 331, "f_flag": 331, "f_": 331, "geq": 331, "get_id": 331, "get_mdv": 331, "largest": 331, "ser": 331, "grammar": [332, 346], "leav": 332, "obtain": 332, "basi": 332, "594608": 332, "1272": 332, "124874": 332, "558028": 332, "088295": 332, "956313": 332, "1270": 332, "486580": 332, "287000": 332, "1260": 332, "817266": 332, "362287": 332, "1327": 332, "153182": 332, "1325": 332, "551467": 332, "1307": 332, "301235": 332, "1295": 332, "1305": 332, "1289": 332, "2927": 332, "4334": 332, "7778": 332, "0058": 332, "1640": 332, "260324": 332, "7646": 332, "824443": 332, "5477": 332, "607839": 332, "1147": 332, "842498": 332, "470974": 332, "595276": 332, "526185": 332, "930160": 332, "495109": 332, "322680": 332, "470531": 332, "515250": 332, "312692": 332, "194221": 332, "202201": 332, "207885": 332, "232322": 332, "199750": 332, "205369": 332, "193439": 332, "pop_qp1_estim": 332, "pop_vp1_estim": 332, "pop_mdt_estim": 332, "155413": 332, "4192": 332, "6100": 332, "172730": 332, "3977": 332, "4562": 332, "158070": 332, "8042": 332, "8517": 332, "iiv_mdt_estim": 332, "156289": 332, "330": 332, "topic": 333, "scheme": 333, "theta_cl": 333, "mention": 333, "ve": 333, "despit": 333, "write_etas_in_abbr": 333, "run_structsearch": [334, 341, 346, 347], "ec": [334, 346], "additionali": 334, "structsearch_run2": [334, 347], "effectcomp_linear": 334, "215004": 334, "745013": 334, "structsearch_run1": [334, 347], "direct_emax": 334, "212603": 334, "747413": 334, "baseline_model": 334, "960017": 334, "structsearch_run3": [334, 347], "effectcomp_emax": 334, "984380": 334, "944396": 334, "e_max_init": 334, "altair": [335, 337], "vega": 335, "lite": 335, "ggplot": 335, "editor": 335, "clamp": 335, "vconcat": 335, "spec": 335, "inten": 336, "export": 336, "strictli": 336, "necessesari": 336, "detect_model": 336, "summer": 337, "master": 337, "thesi": 337, "internship": 337, "email": 337, "team": 337, "tox": 337, "pytest": 337, "sphinx": 337, "wise": 337, "known": 337, "trial": 337, "involv": 337, "outcom": 337, "350h": 337, "difficulti": 337, "mentor": 337, "scipi": 337, "focu": 337, "proof": 337, "concept": 337, "algebra": 337, "scratch": 337, "almost": 337, "compat": 337, "benefici": 337, "175h": 337, "easi": 337, "potenti": 337, "eas": 337, "jupyt": 337, "holoview": 337, "bokeh": 337, "monitor": 337, "ongo": 337, "veri": 337, "happen": [337, 350], "converg": 337, "sort": [337, 348], "dashboard": 337, "complement": 337, "realtim": 337, "restart": [337, 350], "middl": 337, "worflow": 337, "autocorrel": [338, 340], "dtb": [338, 340], "idv_varying_ruv": 338, "idv_varying_ruv_cutoff0": 338, "idv_varying_ruv_cutoff1": 338, "idv_varying_ruv_cutoff2": 338, "idv_varying_ruv_cutoff3": 338, "idv_varying_ruv_cutoff4": 338, "idv_varying_ruv_cutoff5": 338, "idv_varying_ruv_cutoff6": 338, "idv_varying_ruv_cutoff7": 338, "idv_varying_ruv_cutoff8": 338, "idv_varying_combin": 338, "idv_varying_theta": 338, "cv": [338, 340], "772": [338, 340], "042": [338, 340], "sdeps_0": [338, 340], "t1": 338, "298": 338, "sdeps_t1": 338, "t2": 338, "886": 338, "t0": [338, 340], "271": [338, 340], "sdeps_t0": [338, 340], "390": [338, 340], "956": [338, 340], "717": 338, "014": 338, "914": 338, "983": 338, "884": 338, "017": 338, "955": 338, "958": 338, "969": 338, "933": 338, "022": 338, "819": 338, "007": 338, "755": 338, "982": 338, "642": 338, "387": 338, "th_0": 338, "257": 338, "sdep": 338, "th_t1": 338, "124": 338, "th_t2": 338, "delta_pow": [338, 340], "037": [338, 340], "delet": 339, "diagnost": 339, "improement": 340, "592698": 340, "197887": 340, "007493": 340, "521171": 340, "et1apgr": 340, "487930": 340, "residual_error_model": 340, "910000": 340, "030000": 340, "diagnos": 340, "structural_bia": 340, "cpred": 340, "binmin": 340, "binmax": 340, "binid": 340, "159": 340, "258": 340, "strutur": 340, "mdel": 340, "fullblock_paramet": 340, "183463": 340, "171306": 340, "554610": 340, "154408": 340, "167053": 340, "cox": 340, "boxcox_paramet": 340, "shape": 340, "new_sd": 340, "old_sd": 340, "922083": 340, "182037": 340, "332800": 340, "166021": 340, "tdist_paramet": 340, "79": 340, "9997": 340, "168477": 340, "9986": 340, "166469": 340, "residual_error": 340, "additional_paramet": 340, "coeff": 340, "48793": 340, "033334": 340, "48218": 340, "052342": 340, "59034": 340, "008371": 340, "00887": 340, "003273": 340, "tweak": [341, 348], "slightli": [341, 343], "instabl": 341, "_retries_run2": 341, "behaviour": 341, "invert": 341, "maxiumum": 341, "took": 341, "number_of_retri": 341, "922734e": 341, "383697e": 341, "302390e": 341, "061417e": 341, "387580e": 341, "276057": 341, "ptvcl_estim": 341, "ptvcl_se": 341, "ptvcl_rse": 341, "00021": 341, "87": 341, "044758": 341, "044716": 341, "044732": 341, "044728": 341, "044669": 341, "theta_3_rs": 341, "ivcl_estim": 341, "ivcl_s": 341, "ivcl_rs": 341, "527096": 341, "029349": 341, "013418": 341, "457176": 341, "527011": 341, "029350": 341, "013416": 341, "457114": 341, "527151": 341, "457044": 341, "527073": 341, "457083": 341, "526863": 341, "457001": 341, "ivv_estim": 341, "ivv_s": 341, "ivv_rs": 341, "sigma_1_1_estim": 341, "007471": 341, "267734": 341, "007475": 341, "267856": 341, "027907": 341, "007476": 341, "267878": 341, "007468": 341, "267603": 341, "267944": 341, "sigma_1_1_s": 341, "sigma_1_1_rs": 341, "002276": 341, "171888": 341, "002280": 341, "172226": 341, "172227": 341, "002281": 341, "172295": 341, "002275": 341, "171784": 341, "ibrahim": 342, "inde": 342, "cwres_model": 342, "479721": 342, "385268": 342, "002792": 342, "time_varying1": 342, "117041": 342, "555154": 342, "time_varying3": 342, "336641": 342, "091207": 342, "065738": 342, "654562": 342, "046578": 342, "519115": 342, "612710": 342, "643741": 342, "027766": 342, "sigma_add": 342, "000367": 342, "sigma_prop": 342, "967365": 342, "00123": 342, "0976": 342, "12252": 342, "14299": 342, "000337": 342, "05242": 342, "006105": 342, "10545": 342, "12659": 342, "15573": 342, "00054": 342, "04769": 342, "030825": 342, "mox3": 342, "best_ruvsearch_1": 342, "2460": 342, "704469": 342, "957378": 342, "2473": 342, "661847": 342, "269102": 342, "2495": 342, "973571": 342, "2444": 342, "2455": 342, "2475": 342, "2423": 342, "757516": 342, "2435": 342, "047712": 342, "2453": 342, "068976": 342, "707": 342, "5434": 342, "531596": 342, "794": 342, "3091": 342, "528620": 342, "733": 342, "3094": 342, "532547": 342, "iiv_vc_iiv_cl_estim": 342, "077743": 342, "038888": 342, "076793": 342, "039924": 342, "071628": 342, "038470": 342, "072309": 342, "704770": 342, "093311": 342, "074889": 342, "707665": 342, "081095": 342, "075048": 342, "705429": 342, "044311": 342, "iiv_ruv1_estim": 342, "time_varying_estim": 342, "039675": 342, "040734": 342, "42509": 342, "moustafa": 342, "m": 342, "maria": 342, "kjellsson": 342, "aap": 342, "1208": 342, "s12248": 342, "018": 342, "0240": 342, "pha": 343, "219210": 343, "90878": 343, "219167": 343, "36222": 343, "bmi": 343, "219171": 343, "47564": 343, "cycll": 343, "219203": 343, "94536": 343, "diag": 343, "219206": 343, "01527": 343, "disdur": 343, "219032": 343, "86056": 343, "215321": 343, "70954": 343, "215306": 343, "67698": 343, "phia": 343, "men": 343, "215407": 343, "40295": 343, "phib": 343, "georeg": 343, "215373": 343, "77800": 343, "216968": 343, "25989": 343, "slp": 343, "215359": 343, "18150": 343, "54656": 343, "140000e": 343, "43314": 343, "390000e": 343, "96342": 343, "319000e": 343, "89351": 343, "695800e": 343, "178": 343, "04822": 343, "290000e": 343, "03256": 343, "060000e": 343, "72597": 343, "10102": 343, "580000e": 343, "1661": 343, "58291": 343, "50452": 343, "phaag": 343, "phabmi": 343, "phacycl": 343, "phadiag": 343, "phadisdur": 343, "backward_scm_dir1": 343, "phawt": 343, "phiamen": 343, "phibgeoreg": 343, "phibmen": 343, "slpgeoreg": 343, "304": 343, "beween": 343, "215961": 343, "46277": 343, "3249": 343, "44601": 343, "215748": 343, "07194": 343, "213": 343, "39083": 343, "215570": 343, "57352": 343, "49842": 343, "215486": 343, "23440": 343, "33912": 343, "87007": 343, "36433": 343, "215357": 343, "74693": 343, "61": 343, "12314": 343, "215337": 343, "95044": 343, "79649": 343, "24090": 343, "215332": 343, "91461": 343, "23763": 343, "67861": 343, "00163": 343, "215450": 343, "74783": 343, "07085": 343, "215491": 343, "11568": 343, "43870": 343, "500000e": 343, "700000e": 343, "170000e": 343, "260000e": 343, "360000e": 343, "600000e": 343, "020000e": 343, "620000e": 343, "430000e": 343, "200000e": 343, "lbest": 343, "cpl": 343, "853273": 344, "488686": 344, "230120": 344, "885525": 344, "860736": 344, "921633": 344, "533799": 344, "824880": 344, "027733": 344, "080061": 344, "568383": 344, "946876": 344, "322738": 344, "916884": 344, "654589": 344, "276361": 344, "376218": 344, "604188": 344, "546277": 344, "638247": 344, "370783": 344, "489785": 344, "898802": 344, "467337": 344, "058260": 344, "136159": 344, "957716": 344, "968860": 344, "773450": 344, "472019": 344, "775938": 344, "151210": 344, "664634": 344, "210594": 344, "600450": 344, "318875": 344, "793703": 344, "551158": 344, "527835": 344, "639544": 344, "104682": 344, "526828": 344, "330868": 344, "796073": 344, "615899": 344, "185132": 344, "354616": 344, "293600": 344, "438225": 344, "486179": 344, "818812": 344, "720261": 344, "884839": 344, "376893": 344, "924846": 344, "121901": 344, "446579": 344, "436720": 344, "367480": 344, "114640": 344, "024193": 344, "512627": 344, "615092": 344, "341680": 344, "054791": 344, "408347": 344, "548598": 344, "842566": 344, "018308": 344, "759167": 344, "864669": 344, "867625": 344, "424024": 344, "638560": 344, "664954": 344, "317393": 344, "280139": 344, "078385": 344, "413680": 344, "622712": 344, "282087": 344, "331177": 344, "631655": 344, "882876": 344, "704503": 344, "361556": 344, "678095": 344, "371773": 344, "758919": 344, "037941": 344, "026935": 344, "422555": 344, "166879": 344, "966413": 344, "814952": 344, "708577": 344, "009725": 344, "266944": 344, "567697": 344, "878300": 344, "715708": 344, "989005": 344, "459161": 344, "212573": 344, "388393": 344, "868224": 344, "383043": 344, "621329": 344, "260472": 344, "003027": 344, "277388": 344, "933191": 344, "676905": 344, "110075": 344, "398492": 344, "380865": 344, "366018": 344, "585174": 344, "956306": 344, "905147": 344, "191401": 344, "546036": 344, "961895": 344, "726349": 344, "445912": 344, "534496": 344, "553003": 344, "682987": 344, "231970": 344, "099846": 344, "876780": 344, "900845": 344, "846457": 344, "802797": 344, "988276": 344, "991350": 344, "924166": 344, "749003": 344, "207434": 344, "662582": 344, "725509": 344, "326447": 344, "115117": 344, "196823": 344, "434087": 344, "488859": 344, "212538": 344, "782192": 344, "806515": 344, "851698": 344, "599116": 344, "743671": 344, "140249": 344, "574493": 344, "296737": 344, "429352": 344, "831345": 344, "880881": 344, "659430": 344, "994987": 344, "574667": 344, "191840": 344, "901408": 344, "630846": 344, "775355": 344, "072216": 344, "874349": 344, "956378": 344, "693935": 344, "483346": 344, "794788": 344, "711150": 344, "676572": 344, "668763": 344, "905528": 344, "793645": 344, "382384": 344, "800871": 344, "954047": 344, "455902": 344, "186642": 344, "928532": 344, "498709": 344, "748099": 344, "731336": 344, "425364": 344, "773375": 344, "366585": 344, "497867": 344, "247095": 344, "504667": 344, "030662": 344, "762211": 344, "551208": 344, "565811": 344, "765259": 344, "455400": 344, "662370": 344, "056323": 344, "552114": 344, "630121": 344, "257409": 344, "502366": 344, "580405": 344, "370226": 344, "040276": 344, "035731": 344, "360000": 344, "305631": 344, "275622": 344, "597045": 344, "515088": 344, "957232": 344, "716192": 344, "544260": 344, "155311": 344, "400720": 344, "751915": 344, "361498": 344, "676934": 344, "022410": 344, "363698": 344, "974785": 344, "952586": 344, "024682": 344, "597599": 344, "424237": 344, "434510": 344, "886356": 344, "073683": 344, "575363": 344, "087082": 344, "098997": 344, "073635": 344, "712658": 344, "879430": 344, "253049": 344, "151935": 344, "963905": 344, "169888": 344, "044583": 344, "178975": 344, "497236": 344, "567520": 344, "351619": 344, "564632": 344, "360173": 344, "264764": 344, "765897": 344, "999275": 344, "255630": 344, "695028": 344, "414926": 344, "572606": 344, "586789": 344, "899880": 344, "408061": 344, "516160": 344, "907778": 344, "244786": 344, "249772": 344, "473731": 344, "297200": 344, "916145": 344, "362886": 344, "416676": 344, "659481": 344, "864820": 344, "606428": 344, "744242": 344, "988252": 344, "069317": 344, "936980": 344, "862927": 344, "693535": 344, "269584": 344, "517867": 344, "716822": 344, "605768": 344, "965455": 344, "764024": 344, "346212": 344, "125029": 344, "980420": 344, "500103": 344, "133073": 344, "132983": 344, "462547": 344, "583418": 344, "811144": 344, "585654": 344, "027851": 344, "105503": 344, "036534": 344, "363551": 344, "031564": 344, "960296": 344, "402983": 344, "850645": 344, "378125": 344, "892175": 344, "525306": 344, "587323": 344, "032512": 344, "052073": 344, "269137": 344, "242420": 344, "404922": 344, "950516": 344, "788249": 344, "435102": 344, "448461": 344, "512603": 344, "815026": 344, "884049": 344, "777419": 344, "589215": 344, "541949": 344, "175264": 344, "926077": 344, "601504": 344, "416254": 344, "923185": 344, "371639": 344, "194473": 344, "944302": 344, "487277": 344, "418469": 344, "824234": 344, "663661": 344, "550825": 344, "735586": 344, "547459": 344, "675347": 344, "903583": 344, "500411": 344, "875052": 344, "556035": 344, "247584": 344, "271405": 344, "501681": 344, "881148": 344, "432371": 344, "874004": 344, "804622": 344, "876965": 344, "372005": 344, "366355": 344, "323449": 344, "133006": 344, "319025": 344, "885439": 344, "357159": 344, "995045": 344, "575351": 344, "165042": 344, "215148": 344, "482883": 344, "300884": 344, "083424": 344, "993262": 344, "005653": 344, "928279": 344, "180960": 344, "905658": 344, "098483": 344, "795252": 344, "364078": 344, "313336": 344, "706108": 344, "078494": 344, "351839": 344, "542369": 344, "916754": 344, "823449": 344, "221459": 344, "873918": 344, "136767": 344, "405150": 344, "135159": 344, "899285": 344, "488282": 344, "406903": 344, "562788": 344, "230477": 344, "736463": 344, "892761": 344, "328937": 344, "479966": 344, "061750": 344, "849137": 344, "929665": 344, "432346": 344, "925921": 344, "423537": 344, "247238": 344, "694969": 344, "962122": 344, "705806": 344, "484284": 344, "387386": 344, "086333": 344, "056381": 344, "114753": 344, "853355": 344, "603301": 344, "449888": 344, "178961": 344, "695800": 344, "748996": 344, "138213": 344, "238692": 344, "541680": 344, "272954": 344, "929655": 344, "713778": 344, "316351": 344, "421235": 344, "563473": 344, "335429": 344, "937635": 344, "480043": 344, "959843": 344, "461262": 344, "462408": 344, "300601": 344, "811596": 344, "501489": 344, "179394": 344, "570879": 344, "786560": 344, "219194": 344, "218010": 344, "351180": 344, "612812": 344, "630512": 344, "051986": 344, "806204": 344, "584818": 344, "816485": 344, "767349": 344, "998400": 344, "892200": 344, "776532": 344, "822404": 344, "225727": 344, "018880": 344, "015416": 344, "565671": 344, "348921": 344, "250063": 344, "838099": 344, "341361": 344, "382526": 344, "944073": 344, "297823": 344, "086788": 344, "857266": 344, "485191": 344, "409142": 344, "516464": 344, "002572": 344, "733704": 344, "755737": 344, "793265": 344, "151243": 344, "707700": 344, "851982": 344, "912201": 344, "931900": 344, "538437": 344, "401748": 344, "069326": 344, "376121": 344, "196475": 344, "926835": 344, "077897": 344, "372391": 344, "848184": 344, "985533": 344, "819544": 344, "826862": 344, "572217": 344, "551558": 344, "843029": 344, "119652": 344, "298009": 344, "042324": 344, "187278": 344, "134650": 344, "361844": 344, "406685": 344, "802175": 344, "266702": 344, "169391": 344, "496993": 344, "639042": 344, "868679": 344, "106708": 344, "454421": 344, "977219": 344, "982047": 344, "904024": 344, "889492": 344, "641421": 344, "169297": 344, "840067": 344, "835458": 344, "853009": 344, "856403": 344, "884553": 344, "819836": 344, "374133": 344, "118999": 344, "893425": 344, "285544": 344, "415675": 344, "509070": 344, "046265": 344, "277992": 344, "396594": 344, "324755": 344, "684344": 344, "688954": 344, "358567": 344, "394438": 344, "493584": 344, "841335": 344, "496109": 344, "119216": 344, "933397": 344, "253768": 344, "222423": 344, "448507": 344, "178177": 344, "731451": 344, "206488": 344, "518105": 344, "477206": 344, "746436": 344, "911020": 344, "320820": 344, "408266": 344, "763155": 344, "453899": 344, "180204": 344, "337790": 344, "686115": 344, "783555": 344, "457112": 344, "195385": 344, "043157": 344, "972480": 344, "814145": 344, "016286": 344, "225458": 344, "723710": 344, "602344": 344, "846592": 344, "699366": 344, "408322": 344, "451814": 344, "243399": 344, "509957": 344, "159667": 344, "866250": 344, "933824": 344, "481351": 344, "625663": 344, "495039": 344, "087071": 344, "907322": 344, "573838": 344, "611250": 344, "344235": 344, "606033": 344, "749030": 344, "860290": 344, "308617": 344, "584165": 344, "941132": 344, "153441": 344, "631308": 344, "824837": 344, "193338": 344, "054769": 344, "758791": 344, "348849": 344, "iofv_summari": 344, "orgin": 344, "ob": 344, "sampled_mean": 344, "sampled_stdev": 344, "residual_q1": 344, "743042": 344, "219056": 344, "682820": 344, "550173": 344, "035912": 344, "049484": 344, "184218": 344, "853744": 344, "006216": 344, "975298": 344, "041599": 344, "817153": 344, "833045": 344, "781196": 344, "154061": 344, "813525": 344, "398238": 344, "645044": 344, "535071": 344, "205425": 344, "092618": 344, "104527": 344, "106160": 344, "955250": 344, "058617": 344, "344659": 344, "355728": 344, "480441": 344, "205000": 344, "804075": 344, "093249": 344, "372011": 344, "653334": 344, "076303": 344, "579270": 344, "515891": 344, "726464": 344, "480796": 344, "226795": 344, "894556": 344, "321253": 344, "216333": 344, "282456": 344, "045968": 344, "751381": 344, "998817": 344, "568506": 344, "544129": 344, "725055": 344, "084491": 344, "216676": 344, "724839": 344, "269729": 344, "664468": 344, "086120": 344, "099508": 344, "844053": 344, "234199": 344, "780837": 344, "277342": 344, "322169": 344, "051428": 344, "923117": 344, "660772": 344, "466385": 344, "260479": 344, "909214": 344, "004430": 344, "115441": 344, "597439": 344, "671231": 344, "358037": 344, "499079": 344, "674971": 344, "086542": 344, "331370": 344, "633905": 344, "558617": 344, "085015": 344, "554653": 344, "936751": 344, "068515": 344, "800265": 344, "310055": 344, "124015": 344, "712276": 344, "729628": 344, "167439": 344, "715703": 344, "274087": 344, "019852": 344, "305414": 344, "613668": 344, "109257": 344, "443973": 344, "056317": 344, "238664": 344, "161298": 344, "229080": 344, "385458": 344, "248420": 344, "105258": 344, "155784": 344, "539027": 344, "615940": 344, "605320": 344, "132029": 344, "756164": 344, "869343": 344, "544161": 344, "814910": 344, "779158": 344, "268737": 344, "897306": 344, "707535": 344, "453306": 344, "105961": 344, "531367": 344, "507478": 344, "179203": 344, "964192": 344, "235433": 344, "534690": 344, "029698": 344, "870557": 344, "187065": 344, "049483": 344, "611648": 344, "535116": 344, "053927": 344, "077425": 344, "840121": 344, "621227": 344, "470444": 344, "449597": 344, "941064": 344, "849583": 344, "418397": 344, "769517": 344, "495183": 344, "074840": 344, "265168": 344, "489546": 344, "543569": 344, "924754": 344, "255799": 344, "423379": 344, "792450": 344, "651388": 344, "107140": 344, "103779": 344, "709601": 344, "655290": 344, "365991": 344, "222470": 344, "908651": 344, "744590": 344, "726324": 344, "426971": 344, "126409": 344, "743926": 344, "055593": 344, "673502": 344, "381335": 344, "618133": 344, "047349": 344, "322600": 344, "222872": 344, "042834": 344, "180077": 344, "430602": 344, "209284": 344, "495631": 344, "189252": 344, "623118": 344, "780755": 344, "405726": 344, "643222": 344, "836788": 344, "746180": 344, "378962": 344, "498420": 344, "745719": 344, "565835": 344, "016391": 344, "193803": 344, "882538": 344, "054206": 344, "416539": 344, "288743": 344, "598975": 344, "649295": 344, "743847": 344, "028856": 344, "860963": 344, "709391": 344, "906579": 344, "841825": 344, "571912": 344, "121771": 344, "219260": 344, "791821": 344, "756310": 344, "933335": 344, "360735": 344, "121911": 344, "657069": 344, "952413": 344, "311206": 344, "124618": 344, "229621": 344, "945504": 344, "493299": 344, "630288": 344, "415407": 344, "756085": 344, "131488": 344, "213636": 344, "050337": 344, "463633": 344, "980475": 344, "118333": 344, "749123": 344, "229958": 344, "025404": 344, "813878": 344, "738522": 344, "668408": 344, "112740": 344, "972107": 344, "235064": 344, "396011": 344, "934618": 344, "518106": 344, "392308": 344, "216396": 344, "339562": 344, "024801": 344, "793238": 344, "057118": 344, "556378": 344, "796045": 344, "776264": 344, "019010": 344, "430617": 344, "431370": 344, "731493": 344, "527208": 344, "010968": 344, "724711": 344, "959211": 344, "448445": 344, "131466": 344, "302385": 344, "264697": 344, "597597": 344, "779232": 344, "494133": 344, "292477": 344, "639161": 344, "067293": 344, "167700": 344, "637834": 344, "067793": 344, "249132": 344, "314731": 344, "969084": 344, "239401": 344, "359860": 344, "215238": 344, "477740": 344, "578842": 344, "053376": 344, "340902": 344, "021182": 344, "172446": 344, "684367": 344, "059050": 344, "515114": 344, "245427": 344, "197044": 344, "787564": 344, "106919": 344, "970391": 344, "379183": 344, "982728": 344, "807580": 344, "296212": 344, "639192": 344, "874018": 344, "032032": 344, "252364": 344, "047063": 344, "residual_q3": 344, "residual_outli": 344, "832458": 344, "136329": 344, "090316": 344, "021748": 344, "766581": 344, "001176": 344, "238974": 344, "071653": 344, "388881": 344, "584759": 344, "780298": 344, "680349": 344, "043355": 344, "691710": 344, "827298": 344, "317850": 344, "008777": 344, "291308": 344, "498512": 344, "312807": 344, "178997": 344, "306182": 344, "116610": 344, "468439": 344, "007865": 344, "384037": 344, "344744": 344, "151930": 344, "790639": 344, "416342": 344, "637759": 344, "153920": 344, "135334": 344, "038095": 344, "705065": 344, "359915": 344, "588440": 344, "151899": 344, "730945": 344, "514178": 344, "784304": 344, "977290": 344, "707253": 344, "982678": 344, "384237": 344, "576792": 344, "302778": 344, "342653": 344, "313826": 344, "775998": 344, "274818": 344, "191111": 344, "817604": 344, "421290": 344, "461701": 344, "940801": 344, "437023": 344, "207477": 344, "755739": 344, "individual_predictions_plot": 344, "exceed": 345, "rse_theta": 345, "rse_omega": 345, "rse_sigma": 345, "condition_numb": 345, "final_zero_gradi": 345, "final_zero_gradient_theta": 345, "final_zero_gradient_omega": 345, "final_zero_gradient_sigma": 345, "estimate_near_boundari": 345, "estimate_near_boundary_theta": 345, "estimate_near_boundary_omega": 345, "estimate_near_boundary_sigma": 345, "smaller": 345, "mandatori": 346, "target_tot": 347, "da_": 347, "deg": 347, "syn": 347, "lafre": 347, "mc": 347, "entral": 347, "kint": 347, "specifii": 347, "minu": 347, "full1": 347, "679076": 347, "4243": 347, "302405": 347, "full2": 347, "679069": 347, "302412": 347, "structsearch_run5": 347, "cr1": 347, "987197": 347, "4246": 347, "994284": 347, "qss2": 347, "4257": 347, "981481": 347, "structsearch_run11": 347, "897162": 347, "4289": 347, "878642": 347, "structsearch_run9": 347, "ib1": 347, "201724": 347, "4355": 347, "183204": 347, "structsearch_run7": 347, "201728": 347, "183209": 347, "structsearch_run12": 347, "284581": 347, "4361": 347, "266061": 347, "full3": 347, "structsearch_run4": 347, "full4": 347, "structsearch_run6": 347, "cr2": 347, "structsearch_run8": 347, "ib2": 347, "structsearch_run10": 347, "trim": 348, "gotcha": 349, "cran": 350, "rapid": 350, "remot": 350, "install_github": 350, "install_pharmpi": 350, "session": 350, "packagevers": 350, "print_pharmpy_vers": 350, "reticul": 350, "miniconda": 350, "py_discover_config": 350, "conda_cr": 350, "python_vers": 350, "virtual": 350, "libpython": 350, "lib": 350, "libpython3": 350, "mirror": 350, "pipe": 350, "magrittr": 350}, "objects": {"pharmpy": [[299, 0, 0, "-", "model"], [300, 0, 0, "-", "modeling"], [301, 0, 0, "-", "tools"], [302, 0, 0, "-", "workflows"], [307, 6, 1, "cmdoption-pharmpy-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-version", "--version"], [307, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "Parameter"], [24, 1, 1, "", "Parameters"], [25, 1, 1, "", "RandomVariables"], [26, 1, 1, "", "SimulationStep"], [27, 1, 1, "", "Statement"], [28, 1, 1, "", "Statements"], [29, 1, 1, "", "VariabilityHierarchy"], [30, 1, 1, "", "VariabilityLevel"], [31, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_compartment_or_raise"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_peripheral_compartments"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 2, 1, "", "to_dict"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "parameter_uncertainty_method"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_parameter_uncertainty_methods"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[23, 2, 1, "", "create"], [23, 3, 1, "", "fix"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "init"], [23, 3, 1, "", "lower"], [23, 3, 1, "", "name"], [23, 2, 1, "", "replace"], [23, 3, 1, "", "symbol"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 3, 1, "", "fixed"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "inits"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "names"], [24, 3, 1, "", "nonfixed"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "set_fix"], [24, 2, 1, "", "set_initial_estimates"], [24, 3, 1, "", "symbols"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[25, 3, 1, "", "covariance_matrix"], [25, 2, 1, "", "create"], [25, 3, 1, "", "epsilon_levels"], [25, 3, 1, "", "epsilons"], [25, 3, 1, "", "eta_levels"], [25, 3, 1, "", "etas"], [25, 3, 1, "", "free_symbols"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_covariance"], [25, 2, 1, "", "get_rvs_with_same_dist"], [25, 3, 1, "", "iiv"], [25, 3, 1, "", "iov"], [25, 2, 1, "", "join"], [25, 3, 1, "", "names"], [25, 2, 1, "", "nearest_valid_parameters"], [25, 3, 1, "", "nrvs"], [25, 3, 1, "", "parameter_names"], [25, 2, 1, "", "parameters_sdcorr"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "replace_with_sympy_rvs"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "subs"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "unjoin"], [25, 2, 1, "", "validate_parameters"], [25, 3, 1, "", "variance_parameters"]], "pharmpy.model.SimulationStep": [[26, 2, 1, "", "create"], [26, 2, 1, "", "from_dict"], [26, 3, 1, "", "n"], [26, 2, 1, "", "replace"], [26, 3, 1, "", "seed"], [26, 2, 1, "", "to_dict"]], "pharmpy.model.Statement": [[27, 3, 1, "", "free_symbols"], [27, 3, 1, "", "rhs_symbols"], [27, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[28, 3, 1, "", "after_odes"], [28, 3, 1, "", "before_odes"], [28, 2, 1, "", "dependencies"], [28, 2, 1, "", "direct_dependencies"], [28, 3, 1, "", "error"], [28, 2, 1, "", "find_assignment"], [28, 2, 1, "", "find_assignment_index"], [28, 3, 1, "", "free_symbols"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "full_expression"], [28, 3, 1, "", "ode_system"], [28, 2, 1, "", "reassign"], [28, 2, 1, "", "remove_symbol_definitions"], [28, 2, 1, "", "subs"], [28, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[29, 2, 1, "", "create"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "levels"], [29, 3, 1, "", "names"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "group"], [30, 3, 1, "", "name"], [30, 3, 1, "", "reference"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[32, 5, 1, "", "add_admid"], [33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_bioavailability"], [35, 5, 1, "", "add_cmt"], [36, 5, 1, "", "add_covariate_effect"], [37, 5, 1, "", "add_effect_compartment"], [38, 5, 1, "", "add_estimation_step"], [39, 5, 1, "", "add_iiv"], [40, 5, 1, "", "add_indirect_effect"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_parameter_uncertainty_step"], [46, 5, 1, "", "add_pd_iiv"], [47, 5, 1, "", "add_peripheral_compartment"], [48, 5, 1, "", "add_pk_iiv"], [49, 5, 1, "", "add_population_parameter"], [50, 5, 1, "", "add_time_after_dose"], [51, 5, 1, "", "append_estimation_step_options"], [52, 5, 1, "", "bin_observations"], [53, 5, 1, "", "bump_model_number"], [54, 5, 1, "", "calculate_aic"], [55, 5, 1, "", "calculate_bic"], [56, 5, 1, "", "calculate_corr_from_cov"], [57, 5, 1, "", "calculate_corr_from_prec"], [58, 5, 1, "", "calculate_cov_from_corrse"], [59, 5, 1, "", "calculate_cov_from_prec"], [60, 5, 1, "", "calculate_epsilon_gradient_expression"], [61, 5, 1, "", "calculate_eta_gradient_expression"], [62, 5, 1, "", "calculate_eta_shrinkage"], [63, 5, 1, "", "calculate_individual_parameter_statistics"], [64, 5, 1, "", "calculate_individual_shrinkage"], [65, 5, 1, "", "calculate_parameters_from_ucp"], [66, 5, 1, "", "calculate_pk_parameters_statistics"], [67, 5, 1, "", "calculate_prec_from_corrse"], [68, 5, 1, "", "calculate_prec_from_cov"], [69, 5, 1, "", "calculate_se_from_cov"], [70, 5, 1, "", "calculate_se_from_prec"], [71, 5, 1, "", "calculate_ucp_scale"], [72, 5, 1, "", "check_dataset"], [73, 5, 1, "", "check_high_correlations"], [74, 5, 1, "", "check_parameters_near_bounds"], [75, 5, 1, "", "cleanup_model"], [76, 5, 1, "", "convert_model"], [77, 5, 1, "", "create_basic_pk_model"], [78, 5, 1, "", "create_config_template"], [79, 5, 1, "", "create_joint_distribution"], [80, 5, 1, "", "create_rng"], [81, 5, 1, "", "create_symbol"], [82, 5, 1, "", "deidentify_data"], [83, 5, 1, "", "display_odes"], [84, 5, 1, "", "drop_columns"], [85, 5, 1, "", "drop_dropped_columns"], [86, 5, 1, "", "evaluate_epsilon_gradient"], [87, 5, 1, "", "evaluate_eta_gradient"], [88, 5, 1, "", "evaluate_expression"], [89, 5, 1, "", "evaluate_individual_prediction"], [90, 5, 1, "", "evaluate_population_prediction"], [91, 5, 1, "", "evaluate_weighted_residuals"], [92, 5, 1, "", "expand_additional_doses"], [93, 5, 1, "", "filter_dataset"], [94, 5, 1, "", "find_clearance_parameters"], [95, 5, 1, "", "find_volume_parameters"], [96, 5, 1, "", "fix_or_unfix_parameters"], [97, 5, 1, "", "fix_parameters"], [98, 5, 1, "", "fix_parameters_to"], [99, 5, 1, "", "get_admid"], [100, 5, 1, "", "get_baselines"], [101, 5, 1, "", "get_bioavailability"], [102, 5, 1, "", "get_central_volume_and_clearance"], [103, 5, 1, "", "get_cmt"], [104, 5, 1, "", "get_concentration_parameters_from_data"], [105, 5, 1, "", "get_config_path"], [106, 5, 1, "", "get_covariate_baselines"], [107, 5, 1, "", "get_covariates"], [108, 5, 1, "", "get_doseid"], [109, 5, 1, "", "get_doses"], [110, 5, 1, "", "get_dv_symbol"], [111, 5, 1, "", "get_evid"], [112, 5, 1, "", "get_ids"], [113, 5, 1, "", "get_individual_parameters"], [114, 5, 1, "", "get_individual_prediction_expression"], [115, 5, 1, "", "get_initial_conditions"], [116, 5, 1, "", "get_lag_times"], [117, 5, 1, "", "get_mdv"], [118, 5, 1, "", "get_model_code"], [119, 5, 1, "", "get_model_covariates"], [120, 5, 1, "", "get_number_of_individuals"], [121, 5, 1, "", "get_number_of_observations"], [122, 5, 1, "", "get_number_of_observations_per_individual"], [123, 5, 1, "", "get_number_of_peripheral_compartments"], [124, 5, 1, "", "get_number_of_transit_compartments"], [125, 5, 1, "", "get_observation_expression"], [126, 5, 1, "", "get_observations"], [127, 5, 1, "", "get_omegas"], [128, 5, 1, "", "get_parameter_rv"], [129, 5, 1, "", "get_pd_parameters"], [130, 5, 1, "", "get_pk_parameters"], [131, 5, 1, "", "get_population_prediction_expression"], [132, 5, 1, "", "get_rv_parameters"], [133, 5, 1, "", "get_sigmas"], [134, 5, 1, "", "get_thetas"], [135, 5, 1, "", "get_unit_of"], [136, 5, 1, "", "get_zero_order_inputs"], [137, 5, 1, "", "greekify_model"], [138, 5, 1, "", "has_additive_error_model"], [139, 5, 1, "", "has_combined_error_model"], [140, 5, 1, "", "has_covariate_effect"], [141, 5, 1, "", "has_first_order_absorption"], [142, 5, 1, "", "has_first_order_elimination"], [143, 5, 1, "", "has_instantaneous_absorption"], [144, 5, 1, "", "has_linear_odes"], [145, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [146, 5, 1, "", "has_michaelis_menten_elimination"], [147, 5, 1, "", "has_mixed_mm_fo_elimination"], [148, 5, 1, "", "has_odes"], [149, 5, 1, "", "has_presystemic_metabolite"], [150, 5, 1, "", "has_proportional_error_model"], [151, 5, 1, "", "has_random_effect"], [152, 5, 1, "", "has_seq_zo_fo_absorption"], [153, 5, 1, "", "has_weighted_error_model"], [154, 5, 1, "", "has_zero_order_absorption"], [155, 5, 1, "", "has_zero_order_elimination"], [156, 5, 1, "", "is_linearized"], [157, 5, 1, "", "is_real"], [158, 5, 1, "", "list_time_varying_covariates"], [159, 5, 1, "", "load_dataset"], [160, 5, 1, "", "load_example_model"], [161, 5, 1, "", "make_declarative"], [162, 5, 1, "", "mu_reference_model"], [163, 5, 1, "", "omit_data"], [164, 5, 1, "", "plot_abs_cwres_vs_ipred"], [165, 5, 1, "", "plot_cwres_vs_idv"], [166, 5, 1, "", "plot_dv_vs_ipred"], [167, 5, 1, "", "plot_dv_vs_pred"], [168, 5, 1, "", "plot_individual_predictions"], [169, 5, 1, "", "plot_iofv_vs_iofv"], [170, 5, 1, "", "plot_transformed_eta_distributions"], [171, 5, 1, "", "print_model_code"], [172, 5, 1, "", "print_model_symbols"], [173, 5, 1, "", "read_dataset_from_datainfo"], [174, 5, 1, "", "read_model"], [175, 5, 1, "", "read_model_from_string"], [176, 5, 1, "", "remove_bioavailability"], [177, 5, 1, "", "remove_covariate_effect"], [178, 5, 1, "", "remove_error_model"], [179, 5, 1, "", "remove_estimation_step"], [180, 5, 1, "", "remove_iiv"], [181, 5, 1, "", "remove_iov"], [182, 5, 1, "", "remove_lag_time"], [183, 5, 1, "", "remove_loq_data"], [184, 5, 1, "", "remove_parameter_uncertainty_step"], [185, 5, 1, "", "remove_peripheral_compartment"], [186, 5, 1, "", "remove_unused_parameters_and_rvs"], [187, 5, 1, "", "rename_symbols"], [188, 5, 1, "", "replace_non_random_rvs"], [189, 5, 1, "", "resample_data"], [190, 5, 1, "", "sample_individual_estimates"], [191, 5, 1, "", "sample_parameters_from_covariance_matrix"], [192, 5, 1, "", "sample_parameters_uniformly"], [193, 5, 1, "", "set_additive_error_model"], [194, 5, 1, "", "set_baseline_effect"], [195, 5, 1, "", "set_combined_error_model"], [196, 5, 1, "", "set_covariates"], [197, 5, 1, "", "set_direct_effect"], [198, 5, 1, "", "set_dtbs_error_model"], [199, 5, 1, "", "set_dvid"], [200, 5, 1, "", "set_estimation_step"], [201, 5, 1, "", "set_evaluation_step"], [202, 5, 1, "", "set_first_order_absorption"], [203, 5, 1, "", "set_first_order_elimination"], [204, 5, 1, "", "set_iiv_on_ruv"], [205, 5, 1, "", "set_initial_condition"], [206, 5, 1, "", "set_initial_estimates"], [207, 5, 1, "", "set_instantaneous_absorption"], [208, 5, 1, "", "set_lloq_data"], [209, 5, 1, "", "set_lower_bounds"], [210, 5, 1, "", "set_michaelis_menten_elimination"], [211, 5, 1, "", "set_mixed_mm_fo_elimination"], [212, 5, 1, "", "set_name"], [213, 5, 1, "", "set_ode_solver"], [214, 5, 1, "", "set_peripheral_compartments"], [215, 5, 1, "", "set_power_on_ruv"], [216, 5, 1, "", "set_proportional_error_model"], [217, 5, 1, "", "set_reference_values"], [218, 5, 1, "", "set_seq_zo_fo_absorption"], [219, 5, 1, "", "set_simulation"], [220, 5, 1, "", "set_time_varying_error_model"], [221, 5, 1, "", "set_tmdd"], [222, 5, 1, "", "set_transit_compartments"], [223, 5, 1, "", "set_upper_bounds"], [224, 5, 1, "", "set_weighted_error_model"], [225, 5, 1, "", "set_zero_order_absorption"], [226, 5, 1, "", "set_zero_order_elimination"], [227, 5, 1, "", "set_zero_order_input"], [228, 5, 1, "", "simplify_expression"], [229, 5, 1, "", "solve_ode_system"], [230, 5, 1, "", "split_joint_distribution"], [231, 5, 1, "", "transform_blq"], [232, 5, 1, "", "transform_etas_boxcox"], [233, 5, 1, "", "transform_etas_john_draper"], [234, 5, 1, "", "transform_etas_tdist"], [235, 5, 1, "", "translate_nmtran_time"], [236, 5, 1, "", "unconstrain_parameters"], [237, 5, 1, "", "undrop_columns"], [238, 5, 1, "", "unfix_parameters"], [239, 5, 1, "", "unfix_parameters_to"], [240, 5, 1, "", "unload_dataset"], [241, 5, 1, "", "update_initial_individual_estimates"], [242, 5, 1, "", "update_inits"], [243, 5, 1, "", "use_thetas_for_error_stdev"], [244, 5, 1, "", "write_csv"], [245, 5, 1, "", "write_model"]], "pharmpy.tools": [[246, 5, 1, "", "create_report"], [247, 5, 1, "", "create_results"], [248, 5, 1, "", "fit"], [249, 5, 1, "", "get_model_features"], [250, 5, 1, "", "is_strictness_fulfilled"], [251, 5, 1, "", "load_example_modelfit_results"], [252, 5, 1, "", "predict_influential_individuals"], [253, 5, 1, "", "predict_influential_outliers"], [254, 5, 1, "", "predict_outliers"], [255, 5, 1, "", "print_fit_summary"], [256, 5, 1, "", "rank_models"], [257, 5, 1, "", "read_modelfit_results"], [258, 5, 1, "", "read_results"], [259, 5, 1, "", "resume_tool"], [260, 5, 1, "", "retrieve_final_model"], [261, 5, 1, "", "retrieve_models"], [262, 5, 1, "", "run_allometry"], [263, 5, 1, "", "run_amd"], [264, 5, 1, "", "run_bootstrap"], [265, 5, 1, "", "run_covsearch"], [266, 5, 1, "", "run_estmethod"], [267, 5, 1, "", "run_iivsearch"], [268, 5, 1, "", "run_iovsearch"], [269, 5, 1, "", "run_modelfit"], [270, 5, 1, "", "run_modelsearch"], [271, 5, 1, "", "run_retries"], [272, 5, 1, "", "run_ruvsearch"], [273, 5, 1, "", "run_structsearch"], [274, 5, 1, "", "run_tool"], [275, 5, 1, "", "summarize_errors"], [276, 5, 1, "", "summarize_individuals"], [277, 5, 1, "", "summarize_individuals_count_table"], [278, 5, 1, "", "summarize_modelfit_results"], [279, 5, 1, "", "write_results"]], "pharmpy.workflows": [[280, 1, 1, "", "LocalDirectoryDatabase"], [281, 1, 1, "", "LocalDirectoryToolDatabase"], [282, 1, 1, "", "LocalModelDirectoryDatabase"], [283, 1, 1, "", "Log"], [284, 1, 1, "", "ModelDatabase"], [285, 1, 1, "", "ModelEntry"], [286, 1, 1, "", "ModelfitResults"], [287, 1, 1, "", "NullModelDatabase"], [288, 1, 1, "", "NullToolDatabase"], [289, 1, 1, "", "Results"], [290, 1, 1, "", "Task"], [291, 1, 1, "", "ToolDatabase"], [292, 1, 1, "", "Workflow"], [293, 1, 1, "", "WorkflowBuilder"], [294, 5, 1, "", "call_workflow"], [295, 3, 1, "", "default_model_database"], [296, 3, 1, "", "default_tool_database"], [297, 5, 1, "", "execute_workflow"], [298, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[280, 2, 1, "", "retrieve_file"], [280, 2, 1, "", "retrieve_local_files"], [280, 2, 1, "", "retrieve_model"], [280, 2, 1, "", "retrieve_model_entry"], [280, 2, 1, "", "retrieve_modelfit_results"], [280, 2, 1, "", "store_local_file"], [280, 2, 1, "", "store_metadata"], [280, 2, 1, "", "store_model"], [280, 2, 1, "", "store_model_entry"], [280, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[281, 2, 1, "", "from_dict"], [281, 2, 1, "", "read_metadata"], [281, 2, 1, "", "store_local_file"], [281, 2, 1, "", "store_metadata"], [281, 2, 1, "", "store_results"], [281, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[282, 2, 1, "", "list_models"], [282, 2, 1, "", "snapshot"], [282, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[283, 3, 1, "", "errors"], [283, 2, 1, "", "from_dict"], [283, 2, 1, "", "log_error"], [283, 2, 1, "", "log_warning"], [283, 2, 1, "", "to_dataframe"], [283, 2, 1, "", "to_dict"], [283, 3, 1, "", "warnings"]], "pharmpy.workflows.ModelDatabase": [[284, 2, 1, "", "retrieve_file"], [284, 2, 1, "", "retrieve_local_files"], [284, 2, 1, "", "retrieve_model"], [284, 2, 1, "", "retrieve_model_entry"], [284, 2, 1, "", "retrieve_modelfit_results"], [284, 2, 1, "", "snapshot"], [284, 2, 1, "", "store_local_file"], [284, 2, 1, "", "store_metadata"], [284, 2, 1, "", "store_model"], [284, 2, 1, "", "store_model_entry"], [284, 2, 1, "", "store_modelfit_results"], [284, 2, 1, "", "transaction"]], "pharmpy.workflows.ModelEntry": [[285, 2, 1, "", "attach_results"], [285, 2, 1, "", "create"], [285, 3, 1, "", "log"], [285, 3, 1, "", "model"], [285, 3, 1, "", "modelfit_results"], [285, 3, 1, "", "parent"]], "pharmpy.workflows.ModelfitResults": [[286, 3, 1, "", "correlation_matrix"], [286, 3, 1, "", "covariance_matrix"], [286, 3, 1, "", "covstep_successful"], [286, 3, 1, "", "description"], [286, 3, 1, "", "estimation_runtime"], [286, 3, 1, "", "estimation_runtime_iterations"], [286, 3, 1, "", "evaluation"], [286, 3, 1, "", "function_evaluations"], [286, 3, 1, "", "function_evaluations_iterations"], [286, 3, 1, "", "gradients"], [286, 3, 1, "", "gradients_iterations"], [286, 3, 1, "", "individual_estimates"], [286, 3, 1, "", "individual_estimates_covariance"], [286, 3, 1, "", "individual_ofv"], [286, 3, 1, "", "log"], [286, 3, 1, "", "log_likelihood"], [286, 3, 1, "", "minimization_successful"], [286, 3, 1, "", "minimization_successful_iterations"], [286, 3, 1, "", "name"], [286, 3, 1, "", "ofv"], [286, 3, 1, "", "ofv_iterations"], [286, 3, 1, "", "parameter_estimates"], [286, 3, 1, "", "parameter_estimates_iterations"], [286, 3, 1, "", "parameter_estimates_sdcorr"], [286, 3, 1, "", "precision_matrix"], [286, 3, 1, "", "predictions"], [286, 3, 1, "", "relative_standard_errors"], [286, 3, 1, "", "residuals"], [286, 3, 1, "", "runtime_total"], [286, 3, 1, "", "significant_digits"], [286, 3, 1, "", "significant_digits_iterations"], [286, 3, 1, "", "standard_errors"], [286, 3, 1, "", "standard_errors_sdcorr"], [286, 3, 1, "", "termination_cause"], [286, 3, 1, "", "termination_cause_iterations"], [286, 3, 1, "", "warnings"]], "pharmpy.workflows.NullModelDatabase": [[287, 2, 1, "", "retrieve_file"], [287, 2, 1, "", "retrieve_local_files"], [287, 2, 1, "", "retrieve_model"], [287, 2, 1, "", "retrieve_model_entry"], [287, 2, 1, "", "retrieve_modelfit_results"], [287, 2, 1, "", "store_local_file"], [287, 2, 1, "", "store_metadata"], [287, 2, 1, "", "store_model"], [287, 2, 1, "", "store_model_entry"], [287, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[288, 2, 1, "", "read_metadata"], [288, 2, 1, "", "store_local_file"], [288, 2, 1, "", "store_metadata"], [288, 2, 1, "", "store_results"]], "pharmpy.workflows.Results": [[289, 2, 1, "", "from_dict"], [289, 2, 1, "", "get_and_reset_index"], [289, 2, 1, "", "to_csv"], [289, 2, 1, "", "to_dict"], [289, 2, 1, "", "to_json"]], "pharmpy.workflows.Task": [[290, 2, 1, "", "create"], [290, 3, 1, "", "function"], [290, 3, 1, "", "name"], [290, 2, 1, "", "replace"], [290, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[291, 3, 1, "", "model_database"], [291, 3, 1, "", "path"], [291, 2, 1, "", "read_metadata"], [291, 2, 1, "", "store_local_file"], [291, 2, 1, "", "store_metadata"], [291, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[292, 2, 1, "", "as_dask_dict"], [292, 2, 1, "", "create"], [292, 3, 1, "", "name"], [292, 2, 1, "", "plot_dask"], [292, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[293, 2, 1, "", "add_task"], [293, 2, 1, "", "insert_workflow"], [293, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[307, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [307, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[307, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[307, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [307, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[307, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [307, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[307, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [307, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[307, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [307, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [307, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [307, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [307, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [307, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [307, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[307, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[307, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[307, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[307, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[307, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[307, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[307, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [307, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[307, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[307, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [307, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[307, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[307, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [307, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [307, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[307, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[307, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [307, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [307, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [307, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [307, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[307, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[307, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[307, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[307, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [307, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [307, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [307, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[307, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[307, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[307, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[307, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[307, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[307, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[307, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[307, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[307, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[307, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[307, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[307, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [307, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [307, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [307, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [307, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [307, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [307, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [307, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [307, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [307, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [307, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [307, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [307, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[307, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [307, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[307, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[307, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [307, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [307, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [307, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[307, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[307, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [307, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[307, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[307, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [307, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [307, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[307, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [307, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 310, 333], "dataset": [0, 309, 315, 329, 331], "overview": [0, 336, 340], "pars": 0, "translat": 0, "step": [0, 329, 331, 343], "nm": 0, "tran": 0, "comment": 0, "line": [0, 307], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 331], "date": 0, "id": 0, "check": [0, 311], "tabl": 0, "file": [0, 310, 315], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 311], "all": [0, 2, 312], "zero": 0, "individu": [0, 303, 304, 320, 327, 330, 344], "phc": 0, "control": 0, "stream": 0, "gener": [0, 321, 326], "option": [0, 1, 302, 313, 319, 323, 325, 328, 332, 334, 342, 347, 348], "problem": 0, "data": [0, 302, 307], "eta": [0, 331], "code": [0, 308, 311], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 289, 303, 304, 307, 309, 313, 314, 318, 319, 320, 323, 325, 327, 330, 332, 334, 338, 340, 341, 342, 343, 344, 346, 347], "spars": 0, "matrix": [0, 303, 330], "allometri": [1, 2, 307, 331], "run": [1, 2, 307, 309, 311, 313, 318, 319, 323, 325, 332, 334, 341, 342, 346, 347], "argument": [1, 2, 313, 319, 323, 325, 332, 334, 341, 342, 346, 347], "mandatori": [1, 313, 319, 323, 325, 332, 334, 342, 347], "procedur": [1, 342], "The": [1, 303, 304, 310, 314, 316, 318, 319, 320, 323, 327, 329, 332, 338, 340, 341, 342, 343, 344, 346], "automat": 2, "model": [2, 18, 299, 300, 307, 315, 316, 318, 323, 328, 329, 330, 331, 332, 333, 334, 338, 342, 346, 347], "develop": [2, 311, 312, 317], "amd": [2, 307], "input": [2, 312], "search": [2, 318, 332, 334, 346], "space": [2, 318, 332, 334, 346], "strategi": 2, "default": 2, "retri": [2, 341], "sir": 2, "sri": 2, "rsi": 2, "subtool": 2, "us": [2, 311, 333, 350], "structur": [2, 331, 340], "modelsearch": [2, 307, 332], "structsearch": [2, 318, 334, 346, 347], "iivsearch": [2, 307, 323], "iovsearch": [2, 307, 325], "residu": [2, 330, 340], "covari": [2, 303, 304, 320, 330, 331, 340], "final": [2, 330], "api": 3, "refer": [3, 304, 307, 320], "assign": 4, "bolu": 5, "columninfo": [6, 315], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 315, 329], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 325, 329, 331], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "paramet": [23, 24, 303, 316, 319, 320, 329, 330, 331, 333], "randomvari": [25, 316], "simulationstep": 26, "statement": [27, 28, 316, 329], "variabilityhierarchi": 29, "variabilitylevel": 30, "to_compartmental_system": 31, "add_admid": 32, "add_allometri": 33, "add_bioavail": 34, "add_cmt": 35, "add_covariate_effect": 36, "add_effect_compart": 37, "add_estimation_step": 38, "add_iiv": [39, 307], "add_indirect_effect": 40, "add_individual_paramet": 41, "add_iov": [42, 307], "add_lag_tim": 43, "add_metabolit": 44, "add_parameter_uncertainty_step": 45, "add_pd_iiv": 46, "add_peripheral_compart": 47, "add_pk_iiv": 48, "add_population_paramet": 49, "add_time_after_dos": 50, "append_estimation_step_opt": 51, "bin_observ": 52, "bump_model_numb": 53, "calculate_a": 54, "calculate_b": 55, "calculate_corr_from_cov": 56, "calculate_corr_from_prec": 57, "calculate_cov_from_corrs": 58, "calculate_cov_from_prec": 59, "calculate_epsilon_gradient_express": 60, "calculate_eta_gradient_express": 61, "calculate_eta_shrinkag": 62, "calculate_individual_parameter_statist": 63, "calculate_individual_shrinkag": 64, "calculate_parameters_from_ucp": 65, "calculate_pk_parameters_statist": 66, "calculate_prec_from_corrs": 67, "calculate_prec_from_cov": 68, "calculate_se_from_cov": 69, "calculate_se_from_prec": 70, "calculate_ucp_scal": 71, "check_dataset": 72, "check_high_correl": 73, "check_parameters_near_bound": 74, "cleanup_model": 75, "convert_model": 76, "create_basic_pk_model": 77, "create_config_templ": 78, "create_joint_distribut": [79, 307], "create_rng": 80, "create_symbol": 81, "deidentify_data": 82, "display_od": 83, "drop_column": 84, "drop_dropped_column": 85, "evaluate_epsilon_gradi": 86, "evaluate_eta_gradi": 87, "evaluate_express": 88, "evaluate_individual_predict": 89, "evaluate_population_predict": 90, "evaluate_weighted_residu": 91, "expand_additional_dos": 92, "filter_dataset": 93, "find_clearance_paramet": 94, "find_volume_paramet": 95, "fix_or_unfix_paramet": 96, "fix_paramet": 97, "fix_parameters_to": 98, "get_admid": 99, "get_baselin": 100, "get_bioavail": 101, "get_central_volume_and_clear": 102, "get_cmt": 103, "get_concentration_parameters_from_data": 104, "get_config_path": 105, "get_covariate_baselin": 106, "get_covari": 107, "get_doseid": 108, "get_dos": 109, "get_dv_symbol": 110, "get_evid": 111, "get_id": 112, "get_individual_paramet": 113, "get_individual_prediction_express": 114, "get_initial_condit": 115, "get_lag_tim": 116, "get_mdv": 117, "get_model_cod": 118, "get_model_covari": 119, "get_number_of_individu": 120, "get_number_of_observ": 121, "get_number_of_observations_per_individu": 122, "get_number_of_peripheral_compart": 123, "get_number_of_transit_compart": 124, "get_observation_express": 125, "get_observ": 126, "get_omega": 127, "get_parameter_rv": 128, "get_pd_paramet": 129, "get_pk_paramet": 130, "get_population_prediction_express": 131, "get_rv_paramet": 132, "get_sigma": 133, "get_theta": 134, "get_unit_of": 135, "get_zero_order_input": 136, "greekify_model": 137, "has_additive_error_model": 138, "has_combined_error_model": 139, "has_covariate_effect": 140, "has_first_order_absorpt": 141, "has_first_order_elimin": 142, "has_instantaneous_absorpt": 143, "has_linear_od": 144, "has_linear_odes_with_real_eigenvalu": 145, "has_michaelis_menten_elimin": 146, "has_mixed_mm_fo_elimin": 147, "has_od": 148, "has_presystemic_metabolit": 149, "has_proportional_error_model": 150, "has_random_effect": 151, "has_seq_zo_fo_absorpt": 152, "has_weighted_error_model": 153, "has_zero_order_absorpt": 154, "has_zero_order_elimin": 155, "is_linear": 156, "is_real": 157, "list_time_varying_covari": 158, "load_dataset": 159, "load_example_model": 160, "make_declar": 161, "mu_reference_model": 162, "omit_data": 163, "plot_abs_cwres_vs_ipr": 164, "plot_cwres_vs_idv": 165, "plot_dv_vs_ipr": 166, "plot_dv_vs_pr": 167, "plot_individual_predict": 168, "plot_iofv_vs_iofv": 169, "plot_transformed_eta_distribut": 170, "print_model_cod": 171, "print_model_symbol": 172, "read_dataset_from_datainfo": 173, "read_model": 174, "read_model_from_str": 175, "remove_bioavail": 176, "remove_covariate_effect": 177, "remove_error_model": 178, "remove_estimation_step": 179, "remove_iiv": [180, 307], "remove_iov": [181, 307], "remove_lag_tim": 182, "remove_loq_data": 183, "remove_parameter_uncertainty_step": 184, "remove_peripheral_compart": 185, "remove_unused_parameters_and_rv": 186, "rename_symbol": 187, "replace_non_random_rv": 188, "resample_data": 189, "sample_individual_estim": 190, "sample_parameters_from_covariance_matrix": 191, "sample_parameters_uniformli": 192, "set_additive_error_model": 193, "set_baseline_effect": 194, "set_combined_error_model": 195, "set_covari": 196, "set_direct_effect": 197, "set_dtbs_error_model": 198, "set_dvid": 199, "set_estimation_step": 200, "set_evaluation_step": 201, "set_first_order_absorpt": 202, "set_first_order_elimin": 203, "set_iiv_on_ruv": 204, "set_initial_condit": 205, "set_initial_estim": 206, "set_instantaneous_absorpt": 207, "set_lloq_data": 208, "set_lower_bound": 209, "set_michaelis_menten_elimin": 210, "set_mixed_mm_fo_elimin": 211, "set_nam": 212, "set_ode_solv": 213, "set_peripheral_compart": 214, "set_power_on_ruv": 215, "set_proportional_error_model": 216, "set_reference_valu": 217, "set_seq_zo_fo_absorpt": 218, "set_simul": 219, "set_time_varying_error_model": 220, "set_tmdd": 221, "set_transit_compart": 222, "set_upper_bound": 223, "set_weighted_error_model": 224, "set_zero_order_absorpt": 225, "set_zero_order_elimin": 226, "set_zero_order_input": 227, "simplify_express": 228, "solve_ode_system": 229, "split_joint_distribut": 230, "transform_blq": 231, "transform_etas_boxcox": 232, "transform_etas_john_drap": 233, "transform_etas_tdist": 234, "translate_nmtran_tim": 235, "unconstrain_paramet": 236, "undrop_column": 237, "unfix_paramet": 238, "unfix_parameters_to": 239, "unload_dataset": 240, "update_initial_individual_estim": 241, "update_init": [242, 307], "use_thetas_for_error_stdev": 243, "write_csv": 244, "write_model": 245, "create_report": 246, "create_result": 247, "fit": [248, 330], "get_model_featur": 249, "is_strictness_fulfil": 250, "load_example_modelfit_result": 251, "predict_influential_individu": 252, "predict_influential_outli": 253, "predict_outli": 254, "print_fit_summari": 255, "rank_model": 256, "read_modelfit_result": 257, "read_result": 258, "resume_tool": 259, "retrieve_final_model": 260, "retrieve_model": 261, "run_allometri": 262, "run_amd": 263, "run_bootstrap": 264, "run_covsearch": 265, "run_estmethod": 266, "run_iivsearch": 267, "run_iovsearch": 268, "run_modelfit": 269, "run_modelsearch": 270, "run_retri": 271, "run_ruvsearch": 272, "run_structsearch": 273, "run_tool": 274, "summarize_error": 275, "summarize_individu": 276, "summarize_individuals_count_t": 277, "summarize_modelfit_result": 278, "write_result": 279, "localdirectorydatabas": 280, "localdirectorytooldatabas": 281, "localmodeldirectorydatabas": 282, "log": 283, "modeldatabas": 284, "modelentri": 285, "modelfitresult": 286, "nullmodeldatabas": 287, "nulltooldatabas": 288, "task": 290, "tooldatabas": 291, "workflow": [292, 302, 311, 318, 334, 347], "workflowbuild": 293, "call_workflow": 294, "default_model_databas": 295, "default_tool_databas": 296, "execute_workflow": 297, "split_common_opt": 298, "pharmpi": [299, 300, 301, 302, 306, 307, 308, 310, 311, 316, 324, 329, 335, 339, 348, 350], "packag": [299, 300, 301, 302], "function": [299, 300, 301, 302, 331], "class": [299, 302, 316], "tool": [301, 309, 339, 348], "modul": [302, 316], "bootstrap": [303, 307], "postprocess": [303, 320], "statist": 303, "ofv": [303, 304, 307, 314, 320, 327, 330, 343, 344], "includ": 303, "case": 304, "delet": 304, "diagnost": 304, "cdd": [304, 307], "cook": 304, "score": 304, "jackknif": 304, "cookscor": 304, "ratio": 304, "delta": 304, "skip": 304, "column": 304, "changelog": 305, "0": 305, "106": 305, "2024": 305, "01": 305, "11": 305, "new": [305, 325, 333], "featur": [305, 309, 328, 332], "chang": [305, 335], "bugfix": 305, "105": 305, "2023": 305, "12": 305, "07": 305, "104": 305, "06": 305, "103": 305, "10": 305, "102": 305, "09": 305, "28": 305, "101": 305, "100": 305, "08": 305, "25": 305, "99": 305, "23": 305, "98": 305, "21": 305, "97": 305, "96": 305, "05": 305, "26": 305, "95": 305, "22": 305, "94": 305, "04": 305, "93": 305, "19": 305, "92": 305, "91": 305, "03": 305, "90": 305, "02": 305, "24": 305, "89": 305, "88": 305, "2022": 305, "87": 305, "14": 305, "86": 305, "30": 305, "85": 305, "18": 305, "84": 305, "1": 305, "13": 305, "bug": 305, "fix": 305, "83": 305, "82": 305, "81": 305, "80": 305, "79": 305, "16": 305, "78": 305, "20": 305, "77": 305, "76": 305, "75": 305, "74": 305, "73": 305, "72": 305, "71": 305, "70": 305, "17": 305, "69": 305, "29": 305, "68": 305, "27": 305, "67": 305, "66": 305, "65": 305, "64": 305, "63": 305, "62": 305, "61": 305, "31": 305, "59": 305, "58": 305, "4": 305, "57": 305, "56": 305, "55": 305, "54": 305, "53": 305, "52": 305, "51": 305, "50": 305, "49": 305, "48": 305, "47": 305, "46": 305, "45": 305, "44": 305, "43": 305, "42": 305, "41": 305, "2021": 305, "40": 305, "39": 305, "15": 305, "38": 305, "37": 305, "36": 305, "35": 305, "34": 305, "3": 305, "2": [305, 326], "33": 305, "32": 305, "2020": 305, "9": 305, "8": 305, "7": 305, "6": 305, "5": 305, "2018": 305, "citat": 306, "how": 306, "cite": 306, "pharmr": [306, 350], "command": 307, "interfac": 307, "append": 307, "deidentifi": 307, "filter": 307, "print": 307, "resampl": 307, "write": [307, 329, 331, 333], "info": 307, "absorption_r": 307, "add_cov_effect": 307, "boxcox": [307, 340], "elimination_r": 307, "error": [307, 330, 331, 340, 350], "iiv_on_ruv": 307, "john_drap": 307, "peripheral_compart": 307, "power_on_ruv": 307, "sampl": [307, 344], "tdist": [307, 340], "transit_compart": 307, "frem": [307, 320], "linear": [307, 327], "qa": [307, 340], "report": 307, "ruvsearch": [307, 342], "scm": [307, 343], "simev": [307, 344], "summari": [307, 343, 344], "covsearch": [307, 313], "estmethod": [307, 319], "execut": 307, "commun": 308, "conduct": 308, "common": [309, 332, 348], "databas": 309, "directori": 309, "metadata": 309, "configur": 310, "avail": 310, "plugin": [310, 333, 336], "nlmixr": 310, "rxode": 310, "environ": [310, 311], "variabl": [310, 320, 329, 331, 333], "contribut": 311, "set": [311, 335], "up": 311, "support": 311, "platform": 311, "instal": [311, 322, 350], "python": [311, 350], "git": 311, "fork": 311, "clone": 311, "repositori": 311, "tox": 311, "graphviz": 311, "build": 311, "document": [311, 317], "unit": [311, 315], "test": 311, "integr": 311, "usabl": 311, "virtual": 311, "standard": [311, 330], "releas": 311, "version": [311, 350], "inform": [311, 331], "contributor": 312, "current": 312, "team": 312, "past": 312, "present": 312, "scientif": 312, "fund": 312, "effect": [313, 320, 340], "algorithm": [313, 319, 323, 325, 332], "crossval": 314, "crossvalid": 314, "retriev": 315, "from": 315, "updat": [315, 319], "type": [315, 328, 346, 347], "scale": [315, 341], "continu": 315, "categori": 315, "drop": 315, "datatyp": 315, "descriptor": 315, "design": 316, "principl": 316, "level": [316, 329], "architectur": 316, "heart": 316, "docstr": 316, "depend": [316, 329], "drug": 318, "metabolit": 318, "exhaust": [319, 332], "onli": 319, "evalu": 319, "estim": [319, 320, 329, 330, 331], "method": 319, "solver": 319, "uncertainti": 319, "coeffici": 320, "unexplain": 320, "valu": 320, "get": 322, "start": [322, 323], "A": 322, "first": 322, "exampl": [322, 328, 331, 334, 345, 347], "ad": [323, 329, 331, 332], "iiv": [323, 332], "compar": [323, 325, 332], "rank": [323, 325, 332], "candid": [323, 325, 332, 343], "welcom": 324, "iov": 325, "licens": 326, "logo": 326, "copyright": 326, "bsd": 326, "claus": 326, "gnu": 326, "lesser": 326, "public": 326, "languag": 328, "mfl": 328, "symbol": [328, 329], "describ": 328, "interv": 328, "redund": 328, "descript": [328, 329], "read": [329, 331, 333], "inspect": 329, "attribut": 329, "name": [329, 333], "random": [329, 333], "low": 329, "manipul": 329, "object": 329, "creat": [329, 331], "substitut": 329, "numer": 329, "modelfit": 330, "rel": 330, "correl": 330, "precis": 330, "indiviud": 330, "predict": [330, 344], "basic": 331, "load": 331, "convert": 331, "transform": 331, "absorpt": 331, "rate": 331, "delai": 331, "elimin": 331, "remov": 331, "popul": 331, "blq": 331, "examin": 331, "modifi": 331, "subject": 331, "observ": 331, "dose": 331, "extract": 331, "group": 331, "after": 331, "concentr": 331, "behaviour": 332, "between": [332, 350], "combin": 332, "exclus": 332, "stepwis": 332, "reduc": 332, "dure": 332, "pkpd": 334, "plot": [335, 344], "theme": 335, "axi": 335, "project": 337, "suggest": 337, "resmod": 338, "psn": 339, "connect": 339, "bia": 340, "fullblock": 340, "normal": 341, "ucp": 341, "strict": 345, "tmdd": 347, "full": 347, "ib": 347, "cr": 347, "qss": 347, "wagner": 347, "mmapp": 347, "dv": 347, "user": 349, "guid": 349, "r": 350, "troubl": 350, "shoot": 350, "wrong": 350, "when": 350, "conda": 350, "import": 350, "mismatch": 350, "gotcha": 350, "list": 350, "indic": 350}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"get_covariate_baselines": [[106, "get-covariate-baselines"]], "get_initial_conditions": [[115, "get-initial-conditions"]], "evaluate_weighted_residuals": [[91, "evaluate-weighted-residuals"]], "get_central_volume_and_clearance": [[102, "get-central-volume-and-clearance"]], "filter_dataset": [[93, "filter-dataset"]], "get_admid": [[99, "get-admid"]], "get_individual_parameters": [[113, "get-individual-parameters"]], "fix_or_unfix_parameters": [[96, "fix-or-unfix-parameters"]], "get_concentration_parameters_from_data": [[104, "get-concentration-parameters-from-data"]], "evaluate_population_prediction": [[90, "evaluate-population-prediction"]], "find_volume_parameters": [[95, "find-volume-parameters"]], "fix_parameters": [[97, "fix-parameters"]], "get_covariates": [[107, "get-covariates"]], "get_individual_prediction_expression": [[114, "get-individual-prediction-expression"]], "get_bioavailability": [[101, "get-bioavailability"]], "find_clearance_parameters": [[94, "find-clearance-parameters"]], "evaluate_eta_gradient": [[87, "evaluate-eta-gradient"]], "get_doses": [[109, "get-doses"]], "get_baselines": [[100, "get-baselines"]], "get_evid": [[111, "get-evid"]], "get_config_path": [[105, "get-config-path"]], "get_doseid": [[108, "get-doseid"]], "evaluate_individual_prediction": [[89, "evaluate-individual-prediction"]], "get_ids": [[112, "get-ids"]], "get_cmt": [[103, "get-cmt"]], "get_dv_symbol": [[110, "get-dv-symbol"]], "expand_additional_doses": [[92, "expand-additional-doses"]], "evaluate_expression": [[88, "evaluate-expression"]], "fix_parameters_to": [[98, "fix-parameters-to"]], "cleanup_model": [[75, "cleanup-model"]], "create_config_template": [[78, "create-config-template"]], "create_symbol": [[81, "create-symbol"]], "calculate_individual_parameter_statistics": [[63, "calculate-individual-parameter-statistics"]], "calculate_epsilon_gradient_expression": [[60, "calculate-epsilon-gradient-expression"]], "check_parameters_near_bounds": [[74, "check-parameters-near-bounds"]], "calculate_eta_shrinkage": [[62, "calculate-eta-shrinkage"]], "drop_columns": [[84, "drop-columns"]], "calculate_prec_from_cov": [[68, "calculate-prec-from-cov"]], "calculate_prec_from_corrse": [[67, "calculate-prec-from-corrse"]], "calculate_se_from_cov": [[69, "calculate-se-from-cov"]], "calculate_se_from_prec": [[70, "calculate-se-from-prec"]], "calculate_pk_parameters_statistics": [[66, "calculate-pk-parameters-statistics"]], "calculate_ucp_scale": [[71, "calculate-ucp-scale"]], "calculate_individual_shrinkage": [[64, "calculate-individual-shrinkage"]], "deidentify_data": [[82, "deidentify-data"]], "calculate_parameters_from_ucp": [[65, "calculate-parameters-from-ucp"]], "calculate_cov_from_corrse": [[58, "calculate-cov-from-corrse"]], "check_dataset": [[72, "check-dataset"]], "create_rng": [[80, "create-rng"]], "calculate_cov_from_prec": [[59, "calculate-cov-from-prec"]], "check_high_correlations": [[73, "check-high-correlations"]], "create_basic_pk_model": [[77, "create-basic-pk-model"]], "evaluate_epsilon_gradient": [[86, "evaluate-epsilon-gradient"]], "create_joint_distribution": [[79, "create-joint-distribution"]], "display_odes": [[83, "display-odes"]], "calculate_eta_gradient_expression": [[61, "calculate-eta-gradient-expression"]], "drop_dropped_columns": [[85, "drop-dropped-columns"]], "convert_model": [[76, "convert-model"]], "User guide": [[349, "user-guide"]], "Tools": [[348, "tools"]], "Tools in Pharmpy": [[348, "tools-in-pharmpy"]], "Common options": [[348, "common-options"]], "Pharmpy in R": [[350, "pharmpy-in-r"]], "Installing pharmr": [[350, "installing-pharmr"]], "Trouble shooting": [[350, "trouble-shooting"]], "Wrong Python version when using conda": [[350, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[350, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[350, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[350, "using-pharmr"]], "Gotchas": [[350, "gotchas"]], "List indices": [[350, "list-indices"]], "calculate_corr_from_prec": [[57, "calculate-corr-from-prec"]], "add_allometry": [[33, "add-allometry"]], "add_time_after_dose": [[50, "add-time-after-dose"]], "add_estimation_step": [[38, "add-estimation-step"]], "add_bioavailability": [[34, "add-bioavailability"]], "add_cmt": [[35, "add-cmt"]], "add_covariate_effect": [[36, "add-covariate-effect"]], "add_pd_iiv": [[46, "add-pd-iiv"]], "calculate_bic": [[55, "calculate-bic"]], "append_estimation_step_options": [[51, "append-estimation-step-options"]], "bump_model_number": [[53, "bump-model-number"]], "add_metabolite": [[44, "add-metabolite"]], "add_iov": [[42, "add-iov"]], "add_peripheral_compartment": [[47, "add-peripheral-compartment"]], "add_effect_compartment": [[37, "add-effect-compartment"]], "add_population_parameter": [[49, "add-population-parameter"]], "add_indirect_effect": [[40, "add-indirect-effect"]], "add_lag_time": [[43, "add-lag-time"]], "calculate_corr_from_cov": [[56, "calculate-corr-from-cov"]], "to_compartmental_system": [[31, "to-compartmental-system"]], "add_admid": [[32, "add-admid"]], "VariabilityLevel": [[30, "variabilitylevel"]], "add_parameter_uncertainty_step": [[45, "add-parameter-uncertainty-step"]], "VariabilityHierarchy": [[29, "variabilityhierarchy"]], "bin_observations": [[52, "bin-observations"]], "add_pk_iiv": [[48, "add-pk-iiv"]], "add_iiv": [[39, "add-iiv"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "calculate_aic": [[54, "calculate-aic"]], "run_allometry": [[262, "run-allometry"]], "LocalDirectoryDatabase": [[280, "localdirectorydatabase"]], "LocalDirectoryToolDatabase": [[281, "localdirectorytooldatabase"]], "summarize_individuals_count_table": [[277, "summarize-individuals-count-table"]], "run_ruvsearch": [[272, "run-ruvsearch"]], "summarize_individuals": [[276, "summarize-individuals"]], "write_results": [[279, "write-results"]], "run_modelfit": [[269, "run-modelfit"]], "run_retries": [[271, "run-retries"]], "run_modelsearch": [[270, "run-modelsearch"]], "summarize_modelfit_results": [[278, "summarize-modelfit-results"]], "run_bootstrap": [[264, "run-bootstrap"]], "NullToolDatabase": [[288, "nulltooldatabase"]], "run_iovsearch": [[268, "run-iovsearch"]], "LocalModelDirectoryDatabase": [[282, "localmodeldirectorydatabase"]], "ModelfitResults": [[286, "modelfitresults"]], "run_tool": [[274, "run-tool"]], "summarize_errors": [[275, "summarize-errors"]], "run_covsearch": [[265, "run-covsearch"]], "run_amd": [[263, "run-amd"]], "Results": [[289, "results"], [2, "results"], [318, "results"], [309, "results"], [313, "results"], [346, "results"], [334, "results"], [325, "results"], [347, "results"]], "run_estmethod": [[266, "run-estmethod"]], "Log": [[283, "log"]], "ModelEntry": [[285, "modelentry"]], "retrieve_models": [[261, "retrieve-models"]], "run_structsearch": [[273, "run-structsearch"]], "ModelDatabase": [[284, "modeldatabase"]], "run_iivsearch": [[267, "run-iivsearch"]], "NullModelDatabase": [[287, "nullmodeldatabase"]], "transform_etas_john_draper": [[233, "transform-etas-john-draper"]], "unload_dataset": [[240, "unload-dataset"]], "rank_models": [[256, "rank-models"]], "translate_nmtran_time": [[235, "translate-nmtran-time"]], "predict_influential_outliers": [[253, "predict-influential-outliers"]], "unfix_parameters": [[238, "unfix-parameters"]], "predict_outliers": [[254, "predict-outliers"]], "transform_etas_boxcox": [[232, "transform-etas-boxcox"]], "read_results": [[258, "read-results"]], "is_strictness_fulfilled": [[250, "is-strictness-fulfilled"]], "undrop_columns": [[237, "undrop-columns"]], "update_inits": [[242, "update-inits"]], "get_model_features": [[249, "get-model-features"]], "predict_influential_individuals": [[252, "predict-influential-individuals"]], "read_modelfit_results": [[257, "read-modelfit-results"]], "write_model": [[245, "write-model"]], "fit": [[248, "fit"]], "create_results": [[247, "create-results"]], "transform_etas_tdist": [[234, "transform-etas-tdist"]], "print_fit_summary": [[255, "print-fit-summary"]], "load_example_modelfit_results": [[251, "load-example-modelfit-results"]], "update_initial_individual_estimates": [[241, "update-initial-individual-estimates"]], "use_thetas_for_error_stdev": [[243, "use-thetas-for-error-stdev"]], "create_report": [[246, "create-report"]], "resume_tool": [[259, "resume-tool"]], "unfix_parameters_to": [[239, "unfix-parameters-to"]], "unconstrain_parameters": [[236, "unconstrain-parameters"]], "retrieve_final_model": [[260, "retrieve-final-model"]], "write_csv": [[244, "write-csv"]], "set_michaelis_menten_elimination": [[210, "set-michaelis-menten-elimination"]], "split_joint_distribution": [[230, "split-joint-distribution"]], "set_initial_condition": [[205, "set-initial-condition"]], "set_reference_values": [[217, "set-reference-values"]], "set_lloq_data": [[208, "set-lloq-data"]], "set_zero_order_elimination": [[226, "set-zero-order-elimination"]], "set_name": [[212, "set-name"]], "set_transit_compartments": [[222, "set-transit-compartments"]], "set_time_varying_error_model": [[220, "set-time-varying-error-model"]], "set_initial_estimates": [[206, "set-initial-estimates"]], "set_proportional_error_model": [[216, "set-proportional-error-model"]], "set_zero_order_absorption": [[225, "set-zero-order-absorption"]], "set_simulation": [[219, "set-simulation"]], "set_iiv_on_ruv": [[204, "set-iiv-on-ruv"]], "set_mixed_mm_fo_elimination": [[211, "set-mixed-mm-fo-elimination"]], "set_weighted_error_model": [[224, "set-weighted-error-model"]], "set_first_order_elimination": [[203, "set-first-order-elimination"]], "set_instantaneous_absorption": [[207, "set-instantaneous-absorption"]], "set_upper_bounds": [[223, "set-upper-bounds"]], "set_tmdd": [[221, "set-tmdd"]], "set_peripheral_compartments": [[214, "set-peripheral-compartments"]], "transform_blq": [[231, "transform-blq"]], "set_zero_order_input": [[227, "set-zero-order-input"]], "solve_ode_system": [[229, "solve-ode-system"]], "set_seq_zo_fo_absorption": [[218, "set-seq-zo-fo-absorption"]], "set_lower_bounds": [[209, "set-lower-bounds"]], "set_power_on_ruv": [[215, "set-power-on-ruv"]], "simplify_expression": [[228, "simplify-expression"]], "set_ode_solver": [[213, "set-ode-solver"]], "remove_iov": [[181, "remove-iov"]], "set_covariates": [[196, "set-covariates"]], "remove_iiv": [[180, "remove-iiv"]], "sample_parameters_from_covariance_matrix": [[191, "sample-parameters-from-covariance-matrix"]], "remove_unused_parameters_and_rvs": [[186, "remove-unused-parameters-and-rvs"]], "sample_parameters_uniformly": [[192, "sample-parameters-uniformly"]], "set_evaluation_step": [[201, "set-evaluation-step"]], "remove_loq_data": [[183, "remove-loq-data"]], "read_model": [[174, "read-model"]], "set_estimation_step": [[200, "set-estimation-step"]], "set_dtbs_error_model": [[198, "set-dtbs-error-model"]], "remove_bioavailability": [[176, "remove-bioavailability"]], "remove_lag_time": [[182, "remove-lag-time"]], "remove_parameter_uncertainty_step": [[184, "remove-parameter-uncertainty-step"]], "set_dvid": [[199, "set-dvid"]], "remove_error_model": [[178, "remove-error-model"]], "replace_non_random_rvs": [[188, "replace-non-random-rvs"]], "sample_individual_estimates": [[190, "sample-individual-estimates"]], "read_model_from_string": [[175, "read-model-from-string"]], "set_first_order_absorption": [[202, "set-first-order-absorption"]], "resample_data": [[189, "resample-data"]], "set_combined_error_model": [[195, "set-combined-error-model"]], "rename_symbols": [[187, "rename-symbols"]], "remove_peripheral_compartment": [[185, "remove-peripheral-compartment"]], "remove_covariate_effect": [[177, "remove-covariate-effect"]], "set_baseline_effect": [[194, "set-baseline-effect"]], "set_additive_error_model": [[193, "set-additive-error-model"]], "remove_estimation_step": [[179, "remove-estimation-step"]], "set_direct_effect": [[197, "set-direct-effect"]], "ModelError": [[19, "modelerror"]], "SimulationStep": [[26, "simulationstep"]], "API Reference": [[3, "api-reference"]], "Infusion": [[16, "infusion"]], "EstimationSteps": [[15, "estimationsteps"]], "DatasetError": [[11, "dataseterror"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"], [315, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "PHI/PHC": [[0, "phi-phc"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Statement": [[27, "statement"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "EstimationStep": [[14, "estimationstep"]], "Assignment": [[4, "assignment"]], "Parameters": [[24, "parameters"], [329, "parameters"]], "Statements": [[28, "statements"], [329, "statements"]], "ColumnInfo": [[6, "columninfo"], [315, "columninfo"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "DataInfo": [[10, "datainfo"], [315, "datainfo"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Bolus": [[5, "bolus"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [318, "running"], [313, "running"], [332, "running"], [346, "running"], [334, "running"], [341, "running"], [342, "running"], [325, "running"], [347, "running"], [319, "running"], [323, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [313, "arguments"], [332, "arguments"], [346, "arguments"], [334, "arguments"], [341, "arguments"], [342, "arguments"], [325, "arguments"], [347, "arguments"], [319, "arguments"], [323, "arguments"]], "Mandatory": [[1, "mandatory"], [313, "mandatory"], [332, "mandatory"], [334, "mandatory"], [342, "mandatory"], [325, "mandatory"], [347, "mandatory"], [319, "mandatory"], [323, "mandatory"]], "Optional": [[1, "optional"], [313, "optional"], [332, "optional"], [334, "optional"], [342, "optional"], [325, "optional"], [347, "optional"], [319, "optional"], [323, "optional"]], "Procedure": [[1, "procedure"], [342, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "Distribution": [[13, "distribution"], [331, "distribution"]], "Model": [[18, "model"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "RandomVariables": [[25, "randomvariables"]], "DatasetWarning": [[12, "datasetwarning"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"], [334, "search-space"]], "Strategy for running AMD": [[2, "strategy-for-running-amd"]], "all (default)": [[2, "all-default"]], "retries": [[2, "retries"]], "SIR": [[2, "sir"]], "SRI": [[2, "sri"]], "RSI": [[2, "rsi"]], "Subtools used in AMD": [[2, "subtools-used-in-amd"]], "Structural": [[2, "structural"]], "Modelsearch": [[2, "modelsearch"], [332, "modelsearch"]], "Structsearch": [[2, "structsearch"], [346, "structsearch"]], "IIVsearch": [[2, "iivsearch"], [323, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [325, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Retries": [[2, "id1"], [341, "retries"]], "Final model": [[2, "final-model"]], "Compartment": [[7, "compartment"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "Parameter": [[23, "parameter"]], "NormalDistribution": [[22, "normaldistribution"]], "get_mdv": [[117, "get-mdv"]], "get_model_code": [[118, "get-model-code"]], "has_covariate_effect": [[140, "has-covariate-effect"]], "get_observation_expression": [[125, "get-observation-expression"]], "get_number_of_observations_per_individual": [[122, "get-number-of-observations-per-individual"]], "greekify_model": [[137, "greekify-model"]], "get_number_of_transit_compartments": [[124, "get-number-of-transit-compartments"]], "get_sigmas": [[133, "get-sigmas"]], "get_model_covariates": [[119, "get-model-covariates"]], "get_number_of_peripheral_compartments": [[123, "get-number-of-peripheral-compartments"]], "get_lag_times": [[116, "get-lag-times"]], "get_population_prediction_expression": [[131, "get-population-prediction-expression"]], "get_rv_parameters": [[132, "get-rv-parameters"]], "get_unit_of": [[135, "get-unit-of"]], "get_number_of_individuals": [[120, "get-number-of-individuals"]], "get_thetas": [[134, "get-thetas"]], "get_number_of_observations": [[121, "get-number-of-observations"]], "get_parameter_rv": [[128, "get-parameter-rv"]], "get_omegas": [[127, "get-omegas"]], "get_observations": [[126, "get-observations"]], "get_pd_parameters": [[129, "get-pd-parameters"]], "has_linear_odes": [[144, "has-linear-odes"]], "get_zero_order_inputs": [[136, "get-zero-order-inputs"]], "has_additive_error_model": [[138, "has-additive-error-model"]], "get_pk_parameters": [[130, "get-pk-parameters"]], "has_first_order_absorption": [[141, "has-first-order-absorption"]], "has_first_order_elimination": [[142, "has-first-order-elimination"]], "has_combined_error_model": [[139, "has-combined-error-model"]], "has_instantaneous_absorption": [[143, "has-instantaneous-absorption"]], "Citation": [[306, "citation"]], "How to cite Pharmpy and pharmr": [[306, "how-to-cite-pharmpy-and-pharmr"]], "default_tool_database": [[296, "default-tool-database"]], "Documentation for developers": [[317, "documentation-for-developers"]], "ToolDatabase": [[291, "tooldatabase"]], "Drug metabolite": [[318, "drug-metabolite"]], "Models": [[318, "models"], [334, "models"], [342, "models"], [347, "models"]], "Structsearch workflow": [[318, "structsearch-workflow"], [334, "structsearch-workflow"], [347, "structsearch-workflow"]], "The search space": [[318, "the-search-space"], [332, "the-search-space"], [346, "the-search-space"]], "call_workflow": [[294, "call-workflow"]], "Bootstrap": [[303, "bootstrap"]], "The Bootstrap postprocessing and results": [[303, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[303, "parameter-statistics"]], "OFV statistics": [[303, "ofv-statistics"]], "Covariance matrix": [[303, "covariance-matrix"], [330, "covariance-matrix"]], "Included individuals": [[303, "included-individuals"]], "Crossval": [[314, "crossval"]], "The crossval results": [[314, "the-crossval-results"]], "Crossvalidation OFVs": [[314, "crossvalidation-ofvs"]], "Changelog": [[305, "changelog"]], "0.106.0 (2024-01-11)": [[305, "id1"]], "New features": [[305, "new-features"], [305, "id3"], [305, "id6"], [305, "id12"], [305, "id16"], [305, "id18"], [305, "id21"], [305, "id25"], [305, "id28"], [305, "id32"], [305, "id38"], [305, "id42"], [305, "id46"], [305, "id49"], [305, "id53"], [305, "id56"], [305, "id59"], [305, "id72"], [305, "id82"], [305, "id89"], [305, "id100"], [305, "id104"], [305, "id111"], [305, "id114"], [305, "id118"], [305, "id124"], [305, "id128"], [305, "id134"], [305, "id139"], [305, "id143"], [305, "id146"], [305, "id154"], [305, "id158"], [305, "id164"], [305, "id173"], [305, "id177"], [305, "id180"], [305, "id184"], [305, "id186"], [305, "id191"], [305, "id194"], [305, "id198"]], "Changes": [[305, "changes"], [305, "id4"], [305, "id9"], [305, "id13"], [305, "id19"], [305, "id22"], [305, "id26"], [305, "id29"], [305, "id31"], [305, "id35"], [305, "id39"], [305, "id43"], [305, "id50"], [305, "id54"], [305, "id57"], [305, "id60"], [305, "id62"], [305, "id64"], [305, "id67"], [305, "id70"], [305, "id73"], [305, "id75"], [305, "id78"], [305, "id83"], [305, "id86"], [305, "id90"], [305, "id93"], [305, "id96"], [305, "id101"], [305, "id105"], [305, "id108"], [305, "id112"], [305, "id115"], [305, "id119"], [305, "id125"], [305, "id129"], [305, "id140"], [305, "id144"], [305, "id149"], [305, "id155"], [305, "id165"], [305, "id170"], [305, "id174"], [305, "id181"], [305, "id187"], [305, "id192"], [305, "id195"], [305, "id199"]], "Bugfixes": [[305, "bugfixes"], [305, "id7"], [305, "id10"], [305, "id14"], [305, "id23"], [305, "id33"], [305, "id36"], [305, "id40"], [305, "id44"], [305, "id47"], [305, "id51"], [305, "id65"], [305, "id68"], [305, "id94"], [305, "id98"], [305, "id102"], [305, "id106"], [305, "id109"], [305, "id116"], [305, "id120"], [305, "id122"], [305, "id126"], [305, "id130"], [305, "id132"], [305, "id135"], [305, "id137"], [305, "id141"], [305, "id147"], [305, "id150"], [305, "id152"], [305, "id156"], [305, "id160"], [305, "id162"], [305, "id166"], [305, "id168"], [305, "id171"], [305, "id175"], [305, "id178"], [305, "id182"], [305, "id189"], [305, "id196"], [305, "id200"]], "0.105.0 (2023-12-07)": [[305, "id2"]], "0.104.0 (2023-11-06)": [[305, "id5"]], "0.103.0 (2023-10-12)": [[305, "id8"]], "0.102.0 (2023-09-28)": [[305, "id11"]], "0.101.0 (2023-09-01)": [[305, "id15"]], "0.100.0 (2023-08-25)": [[305, "id17"]], "0.99.0 (2023-08-23)": [[305, "id20"]], "0.98.0 (2023-07-21)": [[305, "id24"]], "0.97.0 (2023-06-28)": [[305, "id27"]], "0.96.0 (2023-05-26)": [[305, "id30"]], "0.95.0 (2023-05-22)": [[305, "id34"]], "0.94.0 (2023-04-26)": [[305, "id37"]], "0.93.0 (2023-04-19)": [[305, "id41"]], "0.92.0 (2023-04-05)": [[305, "id45"]], "0.91.0 (2023-03-03)": [[305, "id48"]], "0.90.0 (2023-02-24)": [[305, "id52"]], "0.89.0 (2023-01-26)": [[305, "id55"]], "0.88.0 (2022-12-21)": [[305, "id58"]], "0.87.0 (2022-12-14)": [[305, "id61"]], "0.86.0 (2022-11-30)": [[305, "id63"]], "0.85.0 (2022-11-18)": [[305, "id66"]], "0.84.1 (2022-11-13)": [[305, "id69"]], "Bug fixes": [[305, "bug-fixes"], [305, "id76"], [305, "id80"], [305, "id84"], [305, "id87"], [305, "id91"]], "0.84.0 (2022-11-09)": [[305, "id71"]], "0.83.0 (2022-11-01)": [[305, "id74"]], "0.82.0 (2022-10-24)": [[305, "id77"]], "0.81.1 (2022-10-24)": [[305, "id79"]], "0.81.0 (2022-10-21)": [[305, "id81"]], "0.80.0 (2022-10-19)": [[305, "id85"]], "0.79.0 (2022-10-16)": [[305, "id88"]], "0.78.0 (2022-09-20)": [[305, "id92"]], "0.77.0 (2022-09-08)": [[305, "id95"]], "0.76.1 (2022-09-06)": [[305, "id97"]], "0.76.0 (2022-09-05)": [[305, "id99"]], "0.75.0 (2022-08-10)": [[305, "id103"]], "0.74.0 (2022-07-18)": [[305, "id107"]], "0.73.0 (2022-06-21)": [[305, "id110"]], "0.72.0 (2022-06-08)": [[305, "id113"]], "0.71.0 (2022-05-24)": [[305, "id117"]], "0.70.1 (2022-05-17)": [[305, "id121"]], "0.70.0 (2022-05-13)": [[305, "id123"]], "0.69.0 (2022-04-29)": [[305, "id127"]], "0.68.0 (2022-04-27)": [[305, "id131"]], "0.67.0 (2022-04-25)": [[305, "id133"]], "0.66.0 (2022-04-20)": [[305, "id136"]], "0.65.0 (2022-04-14)": [[305, "id138"]], "0.64.0 (2022-04-12)": [[305, "id142"]], "0.63.0 (2022-04-07)": [[305, "id145"]], "0.62.0 (2022-04-04)": [[305, "id148"]], "New feature": [[305, "new-feature"]], "0.61.1 (2022-03-31)": [[305, "id151"]], "0.61.0 (2022-03-29)": [[305, "id153"]], "0.59.0 (2022-03-25)": [[305, "id157"]], "0.58.4 (2022-03-24)": [[305, "id159"]], "0.58.1 (2022-03-22)": [[305, "id161"]], "0.58.0 (2022-03-22)": [[305, "id163"]], "0.57.0 (2022-03-21)": [[305, "id167"]], "0.56.0 (2022-03-17)": [[305, "id169"]], "0.55.0 (2022-03-16)": [[305, "id172"]], "0.54.0 (2022-03-08)": [[305, "id176"]], "0.53.0 (2022-03-04)": [[305, "id179"]], "0.52.0 (2022-02-25)": [[305, "id183"]], "0.51.0 (2022-02-24)": [[305, "id185"]], "0.50.1 (2022-02-16)": [[305, "id188"]], "0.50.0 (2022-02-16)": [[305, "id190"]], "0.49.0 (2022-02-10)": [[305, "id193"]], "0.48.0 (2022-02-04)": [[305, "id197"]], "0.47.0 (2022-01-28)": [[305, "id201"]], "0.46.0 (2022-01-27)": [[305, "id202"]], "0.45.0 (2022-01-21)": [[305, "id203"]], "0.44.0 (2022-01-20)": [[305, "id204"]], "0.43.0 (2022-01-12)": [[305, "id205"]], "0.42.0 (2022-01-11)": [[305, "id206"]], "0.41.0 (2021-12-21)": [[305, "id207"]], "0.40.0 (2021-12-16)": [[305, "id208"]], "0.39.0 (2021-12-15)": [[305, "id209"]], "0.38.0 (2021-12-08)": [[305, "id210"]], "0.37.1 (2021-11-26)": [[305, "id211"]], "0.37.0 (2021-11-24)": [[305, "id212"]], "0.36.0 (2021-11-11)": [[305, "id213"]], "0.35.0 (2021-11-02)": [[305, "id214"]], "0.34.3 (2021-10-28)": [[305, "id215"]], "0.34.2 (2021-10-26)": [[305, "id216"]], "0.34.1 (2021-10-20)": [[305, "id217"]], "0.34.0 (2021-10-14)": [[305, "id218"]], "0.33.0 (2021-10-11)": [[305, "id219"]], "0.32.0 (2021-09-28)": [[305, "id220"]], "0.31.0 (2021-09-21)": [[305, "id221"]], "0.30.0 (2021-09-06)": [[305, "id222"]], "0.29.0 (2021-08-25)": [[305, "id223"]], "0.28.0 (2021-08-24)": [[305, "id224"]], "0.27.0 (2021-08-09)": [[305, "id225"]], "0.26.1 (2021-08-04)": [[305, "id226"]], "0.26.0 (2021-07-13)": [[305, "id227"]], "0.25.1 (2021-07-08)": [[305, "id228"]], "0.25.0 (2021-06-24)": [[305, "id229"]], "0.24.0 (2021-05-25)": [[305, "id230"]], "0.23.4 (2021-05-03)": [[305, "id231"]], "0.23.3 (2021-04-29)": [[305, "id232"]], "0.23.2 (2021-04-28)": [[305, "id233"]], "0.23.1 (2021-04-28)": [[305, "id234"]], "0.23.0 (2021-04-28)": [[305, "id235"]], "0.22.0 (2021-03-29)": [[305, "id236"]], "0.21.0 (2021-03-22)": [[305, "id237"]], "0.20.1 (2021-03-11)": [[305, "id238"]], "0.20.0 (2021-03-11)": [[305, "id239"]], "0.19.0 (2021-03-02)": [[305, "id240"]], "0.18.0 (2021-03-01)": [[305, "id241"]], "0.17.0 (2021-02-15)": [[305, "id242"]], "0.16.0 (2021-02-08)": [[305, "id243"]], "0.15.0 (2021-02-01)": [[305, "id244"]], "0.14.0 (2021-01-25)": [[305, "id245"]], "0.13.0 (2021-01-18)": [[305, "id246"]], "0.12.0 (2020-12-18)": [[305, "id247"]], "0.11.0 (2020-11-20)": [[305, "id248"]], "0.10.0 (2020-11-16)": [[305, "id249"]], "0.9.0 (2020-10-26)": [[305, "id250"]], "0.8.0 (2020-10-08)": [[305, "id251"]], "0.7.0 (2020-09-28)": [[305, "id252"]], "0.6.0 (2020-09-18)": [[305, "id253"]], "0.5.0 (2020-09-04)": [[305, "id254"]], "0.4.0 (2020-07-24)": [[305, "id255"]], "0.3.0 (2020-06-16)": [[305, "id256"]], "0.2.0 (2020-03-27)": [[305, "id257"]], "0.1.0 (2018-07-22)": [[305, "id258"]], "WorkflowBuilder": [[293, "workflowbuilder"]], "Retrieving the dataset from a model": [[315, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[315, "update-the-dataset-of-a-model"]], "type": [[315, "type"]], "scale": [[315, "scale"]], "continuous": [[315, "continuous"]], "categories": [[315, "categories"]], "unit": [[315, "unit"]], "drop": [[315, "drop"]], "datatype": [[315, "datatype"]], "descriptor": [[315, "descriptor"]], "datainfo file": [[315, "datainfo-file"]], "Contribute": [[311, "contribute"]], "Set up the development environment": [[311, "set-up-the-development-environment"]], "Supported platforms": [[311, "supported-platforms"]], "Install Python": [[311, "install-python"]], "Install git": [[311, "install-git"]], "Fork and clone the code repository": [[311, "fork-and-clone-the-code-repository"]], "Install tox": [[311, "install-tox"]], "Install graphviz used for building the documentation": [[311, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[311, "using-the-development-environment"]], "Running tox": [[311, "running-tox"]], "Check code formatting": [[311, "check-code-formatting"]], "Run the unit tests": [[311, "run-the-unit-tests"]], "Build and test the documentation": [[311, "build-and-test-the-documentation"]], "Run the integration tests": [[311, "run-the-integration-tests"]], "Build a usable virtual environment": [[311, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[311, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[311, "releasing-pharmpy-and-documentation"]], "Version": [[311, "version"]], "Information for developers": [[311, "information-for-developers"]], "Common features": [[309, "common-features"]], "Tool database": [[309, "tool-database"]], "Running directory": [[309, "running-directory"]], "Metadata": [[309, "metadata"]], "Datasets": [[309, "datasets"]], "Configuration": [[310, "configuration"]], "The configuration file": [[310, "the-configuration-file"]], "Available configurations": [[310, "available-configurations"]], "pharmpy.plugins.nonmem": [[310, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[310, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[310, "pharmpy-plugins-rxode"]], "Environment variables": [[310, "environment-variables"]], "Contributors": [[312, "authors"]], "Development": [[312, "development"]], "Current team": [[312, "current-team"]], "All developers past and present": [[312, "all-developers-past-and-present"]], "Scientific input": [[312, "scientific-input"]], "Funding": [[312, "funding"]], "pharmpy.tools Package": [[301, "module-pharmpy.tools"]], "Functions": [[301, "functions"], [299, "functions"], [300, "functions"], [302, "functions"]], "pharmpy.model Package": [[299, "module-pharmpy.model"]], "Classes": [[299, "classes"], [302, "classes"]], "pharmpy.modeling Package": [[300, "module-pharmpy.modeling"]], "split_common_options": [[298, "split-common-options"]], "pharmpy.workflows Package": [[302, "module-pharmpy.workflows"]], "Options for the data module": [[302, "id1"]], "Command line interface": [[307, "command-line-interface"]], "pharmpy": [[307, "pharmpy"]], "pharmpy data": [[307, "pharmpy-data"]], "pharmpy data append": [[307, "pharmpy-data-append"]], "pharmpy data deidentify": [[307, "pharmpy-data-deidentify"]], "pharmpy data filter": [[307, "pharmpy-data-filter"]], "pharmpy data print": [[307, "pharmpy-data-print"]], "pharmpy data reference": [[307, "pharmpy-data-reference"]], "pharmpy data resample": [[307, "pharmpy-data-resample"]], "pharmpy data write": [[307, "pharmpy-data-write"]], "pharmpy info": [[307, "pharmpy-info"]], "pharmpy model": [[307, "pharmpy-model"]], "pharmpy model absorption_rate": [[307, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[307, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[307, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[307, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[307, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[307, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[307, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[307, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[307, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[307, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[307, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[307, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[307, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[307, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[307, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[307, "pharmpy-model-sample"]], "pharmpy model tdist": [[307, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[307, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[307, "pharmpy-model-update-inits"]], "pharmpy results": [[307, "pharmpy-results"]], "pharmpy results bootstrap": [[307, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[307, "pharmpy-results-cdd"]], "pharmpy results frem": [[307, "pharmpy-results-frem"]], "pharmpy results linearize": [[307, "pharmpy-results-linearize"]], "pharmpy results ofv": [[307, "pharmpy-results-ofv"]], "pharmpy results print": [[307, "pharmpy-results-print"]], "pharmpy results qa": [[307, "pharmpy-results-qa"]], "pharmpy results report": [[307, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[307, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[307, "pharmpy-results-scm"]], "pharmpy results simeval": [[307, "pharmpy-results-simeval"]], "pharmpy results summary": [[307, "pharmpy-results-summary"]], "pharmpy run": [[307, "pharmpy-run"]], "pharmpy run allometry": [[307, "pharmpy-run-allometry"]], "pharmpy run amd": [[307, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[307, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[307, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[307, "pharmpy-run-estmethod"]], "pharmpy run execute": [[307, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[307, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[307, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[307, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[307, "pharmpy-run-ruvsearch"]], "Workflow": [[292, "workflow"]], "Design principles": [[316, "design-principles"]], "Levels of the architecture": [[316, "levels-of-the-architecture"]], "The Heart, The Model Class": [[316, "the-heart-the-model-class"]], "pharmpy.Parameters": [[316, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[316, "pharmpy-randomvariables"]], "pharmpy.Statements": [[316, "pharmpy-statements"]], "The pharmpy.modeling module": [[316, "the-pharmpy-modeling-module"]], "Docstrings": [[316, "docstrings"]], "Dependencies": [[316, "dependencies"]], "execute_workflow": [[297, "execute-workflow"]], "Case deletion diagnostics": [[304, "case-deletion-diagnostics"]], "The cdd results": [[304, "the-cdd-results"]], "Case results": [[304, "case-results"]], "Cook score": [[304, "cook-score"]], "Jackknife cookscore": [[304, "jackknife-cookscore"]], "Covariance ratio": [[304, "covariance-ratio"]], "Delta OFV": [[304, "delta-ofv"]], "Skipped individuals": [[304, "skipped-individuals"]], "Case column": [[304, "case-column"]], "References": [[304, "references"], [320, "references"]], "Task": [[290, "task"]], "Pharmpy Community Code of Conduct": [[308, "pharmpy-community-code-of-conduct"]], "default_model_database": [[295, "default-model-database"]], "COVsearch": [[313, "covsearch"]], "Effects": [[313, "effects"]], "Algorithm": [[313, "algorithm"], [325, "algorithm"]], "plot_iofv_vs_iofv": [[169, "plot-iofv-vs-iofv"]], "read_dataset_from_datainfo": [[173, "read-dataset-from-datainfo"]], "is_real": [[157, "is-real"]], "plot_cwres_vs_idv": [[165, "plot-cwres-vs-idv"]], "has_michaelis_menten_elimination": [[146, "has-michaelis-menten-elimination"]], "is_linearized": [[156, "is-linearized"]], "has_zero_order_absorption": [[154, "has-zero-order-absorption"]], "print_model_code": [[171, "print-model-code"]], "has_proportional_error_model": [[150, "has-proportional-error-model"]], "plot_dv_vs_ipred": [[166, "plot-dv-vs-ipred"]], "has_presystemic_metabolite": [[149, "has-presystemic-metabolite"]], "has_seq_zo_fo_absorption": [[152, "has-seq-zo-fo-absorption"]], "has_weighted_error_model": [[153, "has-weighted-error-model"]], "has_odes": [[148, "has-odes"]], "plot_individual_predictions": [[168, "plot-individual-predictions"]], "make_declarative": [[161, "make-declarative"]], "mu_reference_model": [[162, "mu-reference-model"]], "has_random_effect": [[151, "has-random-effect"]], "has_linear_odes_with_real_eigenvalues": [[145, "has-linear-odes-with-real-eigenvalues"]], "load_example_model": [[160, "load-example-model"]], "plot_dv_vs_pred": [[167, "plot-dv-vs-pred"]], "has_mixed_mm_fo_elimination": [[147, "has-mixed-mm-fo-elimination"]], "plot_abs_cwres_vs_ipred": [[164, "plot-abs-cwres-vs-ipred"]], "print_model_symbols": [[172, "print-model-symbols"]], "has_zero_order_elimination": [[155, "has-zero-order-elimination"]], "plot_transformed_eta_distributions": [[170, "plot-transformed-eta-distributions"]], "load_dataset": [[159, "load-dataset"]], "list_time_varying_covariates": [[158, "list-time-varying-covariates"]], "omit_data": [[163, "omit-data"]], "QA": [[340, "qa"]], "The qa results": [[340, "the-qa-results"]], "Overview": [[340, "overview"]], "Structural bias": [[340, "structural-bias"]], "Fullblock": [[340, "fullblock"]], "Boxcox": [[340, "boxcox"]], "Tdist": [[340, "tdist"]], "Residual error": [[340, "residual-error"]], "Covariate effects": [[340, "covariate-effects"], [320, "covariate-effects"]], "General": [[321, "general"]], "Algorithms": [[332, "algorithms"], [319, "algorithms"], [323, "algorithms"]], "Common behaviours between algorithms": [[332, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[332, "feature-combination-exclusions"]], "Exhaustive search": [[332, "exhaustive-search"]], "Exhaustive stepwise search": [[332, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[332, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[332, "adding-iiv-to-the-candidate-models-during-search"]], "Comparing and ranking candidates": [[332, "comparing-and-ranking-candidates"], [325, "comparing-and-ranking-candidates"], [323, "comparing-and-ranking-candidates"]], "The Modelsearch results": [[332, "the-modelsearch-results"]], "Plugins": [[336, "plugins"]], "Overview of a plugin": [[336, "overview-of-a-plugin"]], "The model types": [[346, "the-model-types"]], "Modeling": [[331, "modeling"]], "Basic functions": [[331, "basic-functions"]], "Reading and writing models": [[331, "reading-and-writing-models"]], "Loading example models": [[331, "loading-example-models"]], "Converting models": [[331, "converting-models"]], "Create basic models": [[331, "create-basic-models"]], "Modeling transformations": [[331, "modeling-transformations"]], "Structural model": [[331, "structural-model"]], "Absorption rate": [[331, "absorption-rate"]], "Absorption delay": [[331, "absorption-delay"]], "Elimination": [[331, "elimination"]], "Parameter variability model": [[331, "parameter-variability-model"]], "Adding and removing parameter variability": [[331, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[331, "adding-and-removing-covariance"]], "Eta transformations": [[331, "eta-transformations"]], "Covariates and allometry": [[331, "covariates-and-allometry"]], "Population parameters": [[331, "population-parameters"]], "Error model": [[331, "error-model"]], "BLQ transformations": [[331, "blq-transformations"]], "Estimation steps": [[331, "estimation-steps"], [329, "estimation-steps"]], "Examining and modifying dataset": [[331, "examining-and-modifying-dataset"]], "Subjects": [[331, "subjects"]], "Observations": [[331, "observations"]], "Dosing": [[331, "dosing"]], "Extract dosing information": [[331, "extract-dosing-information"]], "Dose grouping": [[331, "dose-grouping"]], "Time after dose": [[331, "time-after-dose"]], "Concentration parameters": [[331, "concentration-parameters"]], "Project suggestions": [[337, "project-suggestions"]], "Plots in Pharmpy": [[335, "plots-in-pharmpy"]], "Setting themes": [[335, "setting-themes"]], "Changing axis of plots": [[335, "changing-axis-of-plots"]], "Simeval": [[344, "simeval"]], "The simeval results": [[344, "the-simeval-results"]], "Sampled Individual OFVs": [[344, "sampled-individual-ofvs"]], "Individual OFV summary": [[344, "individual-ofv-summary"]], "Individual prediction plot": [[344, "individual-prediction-plot"]], "Welcome to Pharmpy": [[324, "welcome-to-pharmpy"]], "PKPD": [[334, "pkpd"]], "Examples": [[334, "examples"], [345, "examples"], [347, "examples"], [328, "examples"]], "License": [[326, "license"]], "Logo": [[326, "logo"]], "Copyright": [[326, "copyright"]], "BSD 2-clause License": [[326, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[326, "gnu-lesser-general-public-license"]], "Scales": [[341, "scales"]], "Normal": [[341, "normal"]], "UCP": [[341, "ucp"]], "The Retries results": [[341, "the-retries-results"]], "Model estimation and results": [[330, "model-estimation-and-results"]], "Fitting a model": [[330, "fitting-a-model"]], "Modelfit results": [[330, "modelfit-results"]], "Final OFV": [[330, "final-ofv"]], "Parameter estimates": [[330, "parameter-estimates"], [320, "parameter-estimates"]], "Standard errors of parameter estimates": [[330, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[330, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[330, "correlation-matrix"]], "Precision Matrix": [[330, "precision-matrix"]], "Indiviudal OFV": [[330, "indiviudal-ofv"]], "Predictions": [[330, "predictions"]], "Residuals": [[330, "residuals"]], "Individual estimates": [[330, "individual-estimates"]], "ruvsearch": [[342, "ruvsearch"]], "The RUVsearch results": [[342, "the-ruvsearch-results"]], "PsN with Pharmpy": [[339, "psn-with-pharmpy"]], "Tools connected to PsN": [[339, "tools-connected-to-psn"]], "Getting started": [[322, "getting-started"]], "Installation": [[322, "installation"]], "A first example": [[322, "a-first-example"]], "Strictness": [[345, "strictness"]], "FREM": [[320, "frem"]], "The FREM postprocessing and results": [[320, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[320, "parameter-covariate-coefficients"]], "Individual covariate effects": [[320, "individual-covariate-effects"]], "Unexplained variability": [[320, "unexplained-variability"]], "OFV": [[320, "ofv"]], "Estimated covariate values": [[320, "estimated-covariate-values"]], "Distribution of new IOVs": [[325, "distribution-of-new-iovs"]], "The Pharmpy model": [[329, "the-pharmpy-model"]], "Reading in a model": [[329, "reading-in-a-model"], [333, "reading-in-a-model"]], "Writing a model": [[329, "writing-a-model"], [333, "writing-a-model"]], "Inspecting the model attributes": [[329, "inspecting-the-model-attributes"]], "Name and description": [[329, "name-and-description"]], "Random variables": [[329, "random-variables"]], "Dataset and datainfo": [[329, "dataset-and-datainfo"]], "Dependent variables": [[329, "dependent-variables"]], "Low level manipulations of the model object": [[329, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[329, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[329, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Resmod": [[338, "resmod"]], "The resmod results": [[338, "the-resmod-results"]], "Resmod models": [[338, "resmod-models"]], "TMDD": [[347, "tmdd"]], "Full model:": [[347, "full-model"]], "IB model:": [[347, "ib-model"]], "CR model:": [[347, "cr-model"]], "CR + IB model:": [[347, "cr-ib-model"]], "QSS model:": [[347, "qss-model"]], "Wagner model:": [[347, "wagner-model"]], "MMAPP model:": [[347, "mmapp-model"]], "DV types": [[347, "dv-types"]], "Estmethod": [[319, "estmethod"]], "Exhaustive": [[319, "exhaustive"]], "Exhaustive (with update)": [[319, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[319, "exhaustive-only-evaluation"]], "Estimation methods": [[319, "estimation-methods"]], "Solvers": [[319, "solvers"]], "Parameter uncertainty methods": [[319, "parameter-uncertainty-methods"]], "The Estmethod results": [[319, "the-estmethod-results"]], "Using the NONMEM plugin": [[333, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[333, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[333, "new-parameters-and-random-variables"]], "scm": [[343, "scm"]], "The scm results": [[343, "the-scm-results"]], "Steps": [[343, "steps"]], "OFV Summary": [[343, "ofv-summary"]], "Candidate Summary": [[343, "candidate-summary"]], "Model feature language (MFL)": [[328, "model-feature-language-mfl"]], "Option types": [[328, "option-types"]], "Model features": [[328, "model-features"]], "Symbols": [[328, "symbols"]], "Describe intervals": [[328, "describe-intervals"]], "Redundant descriptions": [[328, "redundant-descriptions"]], "Adding IIV to the start model": [[323, "adding-iiv-to-the-start-model"]], "The IIVsearch results": [[323, "the-iivsearch-results"]], "Linearize": [[327, "linearize"]], "The linearize results": [[327, "the-linearize-results"]], "OFVs": [[327, "ofvs"]], "Individual OFVs": [[327, "individual-ofvs"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_compartment_or_raise() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment_or_raise"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[23, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[24, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[25, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.subs"]], "symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.symbols"]], "to_dict() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.variance_parameters"]], "simulationstep (class in pharmpy.model)": [[26, "pharmpy.model.SimulationStep"]], "create() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.create"]], "from_dict() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.from_dict"]], "n (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.n"]], "replace() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.replace"]], "seed (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.seed"]], "to_dict() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.to_dict"]], "statement (class in pharmpy.model)": [[27, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[27, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[28, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[28, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[29, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[31, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[32, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_bioavailability"]], "add_cmt() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_cmt"]], "add_covariate_effect() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.append_estimation_step_options"]], "bin_observations() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.bin_observations"]], "bump_model_number() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_bioavailability"]], "get_central_volume_and_clearance() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_central_volume_and_clearance"]], "get_cmt() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_covariate_baselines"]], "get_covariates() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_covariates"]], "get_doseid() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.omit_data"]], "plot_abs_cwres_vs_ipred() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.plot_abs_cwres_vs_ipred"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_dv_vs_pred() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.plot_dv_vs_pred"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.rename_symbols"]], "replace_non_random_rvs() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.replace_non_random_rvs"]], "resample_data() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_additive_error_model"]], "set_baseline_effect() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_baseline_effect"]], "set_combined_error_model() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_simulation() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.set_simulation"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[237, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[238, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[239, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[240, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[241, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[242, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[243, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[244, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[245, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[246, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[247, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[248, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[249, "pharmpy.tools.get_model_features"]], "is_strictness_fulfilled() (in module pharmpy.tools)": [[250, "pharmpy.tools.is_strictness_fulfilled"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[251, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[252, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[253, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[254, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[255, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[256, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[257, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[258, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[259, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[260, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[261, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[262, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[263, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[264, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[265, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[266, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[267, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[268, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[269, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[270, "pharmpy.tools.run_modelsearch"]], "run_retries() (in module pharmpy.tools)": [[271, "pharmpy.tools.run_retries"]], "run_ruvsearch() (in module pharmpy.tools)": [[272, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[273, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[274, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[275, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[276, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[277, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[278, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[279, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[280, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[280, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[281, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[282, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[282, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[282, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[282, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[283, "pharmpy.workflows.Log"]], "errors (pharmpy.workflows.log attribute)": [[283, "pharmpy.workflows.Log.errors"]], "from_dict() (pharmpy.workflows.log class method)": [[283, "pharmpy.workflows.Log.from_dict"]], "log_error() (pharmpy.workflows.log method)": [[283, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[283, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[283, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[283, "pharmpy.workflows.Log.to_dict"]], "warnings (pharmpy.workflows.log attribute)": [[283, "pharmpy.workflows.Log.warnings"]], "modeldatabase (class in pharmpy.workflows)": [[284, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[284, "pharmpy.workflows.ModelDatabase.transaction"]], "modelentry (class in pharmpy.workflows)": [[285, "pharmpy.workflows.ModelEntry"]], "attach_results() (pharmpy.workflows.modelentry method)": [[285, "pharmpy.workflows.ModelEntry.attach_results"]], "create() (pharmpy.workflows.modelentry class method)": [[285, "pharmpy.workflows.ModelEntry.create"]], "log (pharmpy.workflows.modelentry attribute)": [[285, "pharmpy.workflows.ModelEntry.log"]], "model (pharmpy.workflows.modelentry attribute)": [[285, "pharmpy.workflows.ModelEntry.model"]], "modelfit_results (pharmpy.workflows.modelentry attribute)": [[285, "pharmpy.workflows.ModelEntry.modelfit_results"]], "parent (pharmpy.workflows.modelentry attribute)": [[285, "pharmpy.workflows.ModelEntry.parent"]], "modelfitresults (class in pharmpy.workflows)": [[286, "pharmpy.workflows.ModelfitResults"]], "correlation_matrix (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.correlation_matrix"]], "covariance_matrix (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.covariance_matrix"]], "covstep_successful (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.covstep_successful"]], "description (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.description"]], "estimation_runtime (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.estimation_runtime"]], "estimation_runtime_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.estimation_runtime_iterations"]], "evaluation (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.evaluation"]], "function_evaluations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.function_evaluations"]], "function_evaluations_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.function_evaluations_iterations"]], "gradients (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.gradients"]], "gradients_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.gradients_iterations"]], "individual_estimates (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.individual_estimates"]], "individual_estimates_covariance (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.individual_estimates_covariance"]], "individual_ofv (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.individual_ofv"]], "log (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.log"]], "log_likelihood (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.log_likelihood"]], "minimization_successful (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.minimization_successful"]], "minimization_successful_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.minimization_successful_iterations"]], "name (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.name"]], "ofv (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.ofv"]], "ofv_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.ofv_iterations"]], "parameter_estimates (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.parameter_estimates"]], "parameter_estimates_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.parameter_estimates_iterations"]], "parameter_estimates_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.parameter_estimates_sdcorr"]], "precision_matrix (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.precision_matrix"]], "predictions (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.predictions"]], "relative_standard_errors (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.relative_standard_errors"]], "residuals (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.residuals"]], "runtime_total (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.runtime_total"]], "significant_digits (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.significant_digits"]], "significant_digits_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.significant_digits_iterations"]], "standard_errors (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.standard_errors"]], "standard_errors_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.standard_errors_sdcorr"]], "termination_cause (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.termination_cause"]], "termination_cause_iterations (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.termination_cause_iterations"]], "warnings (pharmpy.workflows.modelfitresults attribute)": [[286, "pharmpy.workflows.ModelfitResults.warnings"]], "nullmodeldatabase (class in pharmpy.workflows)": [[287, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[287, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[288, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[288, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[288, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[288, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[288, "pharmpy.workflows.NullToolDatabase.store_results"]], "results (class in pharmpy.workflows)": [[289, "pharmpy.workflows.Results"]], "from_dict() (pharmpy.workflows.results class method)": [[289, "pharmpy.workflows.Results.from_dict"]], "get_and_reset_index() (pharmpy.workflows.results method)": [[289, "pharmpy.workflows.Results.get_and_reset_index"]], "to_csv() (pharmpy.workflows.results method)": [[289, "pharmpy.workflows.Results.to_csv"]], "to_dict() (pharmpy.workflows.results method)": [[289, "pharmpy.workflows.Results.to_dict"]], "to_json() (pharmpy.workflows.results method)": [[289, "pharmpy.workflows.Results.to_json"]], "task (class in pharmpy.workflows)": [[290, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[290, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[290, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[290, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[290, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[290, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[291, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[291, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[291, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[291, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[291, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[291, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[291, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[292, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[292, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[292, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[292, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[292, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[292, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[293, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[293, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[293, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[293, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[294, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[295, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[296, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[297, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[298, "pharmpy.workflows.split_common_options"]], "module": [[299, "module-pharmpy.model"], [300, "module-pharmpy.modeling"], [301, "module-pharmpy.tools"], [302, "module-pharmpy.workflows"]], "pharmpy.model": [[299, "module-pharmpy.model"]], "pharmpy.modeling": [[300, "module-pharmpy.modeling"]], "pharmpy.tools": [[301, "module-pharmpy.tools"]], "pharmpy.workflows": [[302, "module-pharmpy.workflows"]], "--administration": [[307, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[307, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[307, "cmdoption-pharmpy-run-allometry-allometric_variable"], [307, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[307, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[307, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[307, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[307, "cmdoption-pharmpy-run-iivsearch-cutoff"], [307, "cmdoption-pharmpy-run-iovsearch-cutoff"], [307, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[307, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[307, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[307, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[307, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [307, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[307, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[307, "cmdoption-pharmpy-model-add_iov-eta_names"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[307, "cmdoption-pharmpy-model-add_iov-etas"], [307, "cmdoption-pharmpy-model-boxcox-etas"], [307, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [307, "cmdoption-pharmpy-model-john_draper-etas"], [307, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[307, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[307, "cmdoption-pharmpy-data-append-f"], [307, "cmdoption-pharmpy-data-deidentify-f"], [307, "cmdoption-pharmpy-data-filter-f"], [307, "cmdoption-pharmpy-data-reference-f"], [307, "cmdoption-pharmpy-data-write-f"], [307, "cmdoption-pharmpy-model-absorption_rate-f"], [307, "cmdoption-pharmpy-model-add_cov_effect-f"], [307, "cmdoption-pharmpy-model-add_iiv-f"], [307, "cmdoption-pharmpy-model-add_iov-f"], [307, "cmdoption-pharmpy-model-boxcox-f"], [307, "cmdoption-pharmpy-model-create_joint_distribution-f"], [307, "cmdoption-pharmpy-model-elimination_rate-f"], [307, "cmdoption-pharmpy-model-error-f"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [307, "cmdoption-pharmpy-model-john_draper-f"], [307, "cmdoption-pharmpy-model-peripheral_compartments-f"], [307, "cmdoption-pharmpy-model-power_on_ruv-f"], [307, "cmdoption-pharmpy-model-remove_iiv-f"], [307, "cmdoption-pharmpy-model-remove_iov-f"], [307, "cmdoption-pharmpy-model-tdist-f"], [307, "cmdoption-pharmpy-model-transit_compartments-f"], [307, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[307, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[307, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[307, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[307, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[307, "cmdoption-pharmpy-data-append-h"], [307, "cmdoption-pharmpy-data-deidentify-h"], [307, "cmdoption-pharmpy-data-filter-h"], [307, "cmdoption-pharmpy-data-h"], [307, "cmdoption-pharmpy-data-print-h"], [307, "cmdoption-pharmpy-data-reference-h"], [307, "cmdoption-pharmpy-data-resample-h"], [307, "cmdoption-pharmpy-data-write-h"], [307, "cmdoption-pharmpy-h"], [307, "cmdoption-pharmpy-info-h"], [307, "cmdoption-pharmpy-model-absorption_rate-h"], [307, "cmdoption-pharmpy-model-add_cov_effect-h"], [307, "cmdoption-pharmpy-model-add_iiv-h"], [307, "cmdoption-pharmpy-model-add_iov-h"], [307, "cmdoption-pharmpy-model-boxcox-h"], [307, "cmdoption-pharmpy-model-create_joint_distribution-h"], [307, "cmdoption-pharmpy-model-elimination_rate-h"], [307, "cmdoption-pharmpy-model-error-h"], [307, "cmdoption-pharmpy-model-h"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [307, "cmdoption-pharmpy-model-john_draper-h"], [307, "cmdoption-pharmpy-model-peripheral_compartments-h"], [307, "cmdoption-pharmpy-model-power_on_ruv-h"], [307, "cmdoption-pharmpy-model-print-h"], [307, "cmdoption-pharmpy-model-remove_iiv-h"], [307, "cmdoption-pharmpy-model-remove_iov-h"], [307, "cmdoption-pharmpy-model-sample-h"], [307, "cmdoption-pharmpy-model-tdist-h"], [307, "cmdoption-pharmpy-model-transit_compartments-h"], [307, "cmdoption-pharmpy-model-update_inits-h"], [307, "cmdoption-pharmpy-results-bootstrap-h"], [307, "cmdoption-pharmpy-results-cdd-h"], [307, "cmdoption-pharmpy-results-frem-h"], [307, "cmdoption-pharmpy-results-h"], [307, "cmdoption-pharmpy-results-linearize-h"], [307, "cmdoption-pharmpy-results-ofv-h"], [307, "cmdoption-pharmpy-results-print-h"], [307, "cmdoption-pharmpy-results-qa-h"], [307, "cmdoption-pharmpy-results-report-h"], [307, "cmdoption-pharmpy-results-ruvsearch-h"], [307, "cmdoption-pharmpy-results-scm-h"], [307, "cmdoption-pharmpy-results-simeval-h"], [307, "cmdoption-pharmpy-results-summary-h"], [307, "cmdoption-pharmpy-run-allometry-h"], [307, "cmdoption-pharmpy-run-amd-h"], [307, "cmdoption-pharmpy-run-bootstrap-h"], [307, "cmdoption-pharmpy-run-covsearch-h"], [307, "cmdoption-pharmpy-run-estmethod-h"], [307, "cmdoption-pharmpy-run-execute-h"], [307, "cmdoption-pharmpy-run-h"], [307, "cmdoption-pharmpy-run-iivsearch-h"], [307, "cmdoption-pharmpy-run-iovsearch-h"], [307, "cmdoption-pharmpy-run-modelsearch-h"], [307, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[307, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[307, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [307, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[307, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[307, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[307, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[307, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[307, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[307, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[307, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[307, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[307, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[307, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[307, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[307, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[307, "cmdoption-pharmpy-model-add_cov_effect-operation"], [307, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[307, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[307, "cmdoption-pharmpy-data-append-o"], [307, "cmdoption-pharmpy-data-deidentify-o"], [307, "cmdoption-pharmpy-data-filter-o"], [307, "cmdoption-pharmpy-data-reference-o"], [307, "cmdoption-pharmpy-data-write-o"], [307, "cmdoption-pharmpy-model-absorption_rate-o"], [307, "cmdoption-pharmpy-model-add_cov_effect-o"], [307, "cmdoption-pharmpy-model-add_iiv-o"], [307, "cmdoption-pharmpy-model-add_iov-o"], [307, "cmdoption-pharmpy-model-boxcox-o"], [307, "cmdoption-pharmpy-model-create_joint_distribution-o"], [307, "cmdoption-pharmpy-model-elimination_rate-o"], [307, "cmdoption-pharmpy-model-error-o"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [307, "cmdoption-pharmpy-model-john_draper-o"], [307, "cmdoption-pharmpy-model-peripheral_compartments-o"], [307, "cmdoption-pharmpy-model-power_on_ruv-o"], [307, "cmdoption-pharmpy-model-remove_iiv-o"], [307, "cmdoption-pharmpy-model-remove_iov-o"], [307, "cmdoption-pharmpy-model-tdist-o"], [307, "cmdoption-pharmpy-model-transit_compartments-o"], [307, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[307, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[307, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[307, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[307, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[307, "cmdoption-pharmpy-run-allometry-path"], [307, "cmdoption-pharmpy-run-amd-path"], [307, "cmdoption-pharmpy-run-covsearch-path"], [307, "cmdoption-pharmpy-run-estmethod-path"], [307, "cmdoption-pharmpy-run-iivsearch-path"], [307, "cmdoption-pharmpy-run-iovsearch-path"], [307, "cmdoption-pharmpy-run-modelsearch-path"], [307, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[307, "cmdoption-pharmpy-run-iivsearch-rank_type"], [307, "cmdoption-pharmpy-run-iovsearch-rank_type"], [307, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[307, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[307, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[307, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[307, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[307, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[307, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[307, "cmdoption-pharmpy-model-sample-samples"], [307, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[307, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[307, "cmdoption-pharmpy-data-resample-seed"], [307, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[307, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[307, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[307, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[307, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[307, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[307, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[307, "cmdoption-pharmpy-version"]], "-f": [[307, "cmdoption-pharmpy-data-append-f"], [307, "cmdoption-pharmpy-data-deidentify-f"], [307, "cmdoption-pharmpy-data-filter-f"], [307, "cmdoption-pharmpy-data-reference-f"], [307, "cmdoption-pharmpy-data-write-f"], [307, "cmdoption-pharmpy-model-absorption_rate-f"], [307, "cmdoption-pharmpy-model-add_cov_effect-f"], [307, "cmdoption-pharmpy-model-add_iiv-f"], [307, "cmdoption-pharmpy-model-add_iov-f"], [307, "cmdoption-pharmpy-model-boxcox-f"], [307, "cmdoption-pharmpy-model-create_joint_distribution-f"], [307, "cmdoption-pharmpy-model-elimination_rate-f"], [307, "cmdoption-pharmpy-model-error-f"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [307, "cmdoption-pharmpy-model-john_draper-f"], [307, "cmdoption-pharmpy-model-peripheral_compartments-f"], [307, "cmdoption-pharmpy-model-power_on_ruv-f"], [307, "cmdoption-pharmpy-model-remove_iiv-f"], [307, "cmdoption-pharmpy-model-remove_iov-f"], [307, "cmdoption-pharmpy-model-tdist-f"], [307, "cmdoption-pharmpy-model-transit_compartments-f"], [307, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[307, "cmdoption-pharmpy-data-append-h"], [307, "cmdoption-pharmpy-data-deidentify-h"], [307, "cmdoption-pharmpy-data-filter-h"], [307, "cmdoption-pharmpy-data-h"], [307, "cmdoption-pharmpy-data-print-h"], [307, "cmdoption-pharmpy-data-reference-h"], [307, "cmdoption-pharmpy-data-resample-h"], [307, "cmdoption-pharmpy-data-write-h"], [307, "cmdoption-pharmpy-h"], [307, "cmdoption-pharmpy-info-h"], [307, "cmdoption-pharmpy-model-absorption_rate-h"], [307, "cmdoption-pharmpy-model-add_cov_effect-h"], [307, "cmdoption-pharmpy-model-add_iiv-h"], [307, "cmdoption-pharmpy-model-add_iov-h"], [307, "cmdoption-pharmpy-model-boxcox-h"], [307, "cmdoption-pharmpy-model-create_joint_distribution-h"], [307, "cmdoption-pharmpy-model-elimination_rate-h"], [307, "cmdoption-pharmpy-model-error-h"], [307, "cmdoption-pharmpy-model-h"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [307, "cmdoption-pharmpy-model-john_draper-h"], [307, "cmdoption-pharmpy-model-peripheral_compartments-h"], [307, "cmdoption-pharmpy-model-power_on_ruv-h"], [307, "cmdoption-pharmpy-model-print-h"], [307, "cmdoption-pharmpy-model-remove_iiv-h"], [307, "cmdoption-pharmpy-model-remove_iov-h"], [307, "cmdoption-pharmpy-model-sample-h"], [307, "cmdoption-pharmpy-model-tdist-h"], [307, "cmdoption-pharmpy-model-transit_compartments-h"], [307, "cmdoption-pharmpy-model-update_inits-h"], [307, "cmdoption-pharmpy-results-bootstrap-h"], [307, "cmdoption-pharmpy-results-cdd-h"], [307, "cmdoption-pharmpy-results-frem-h"], [307, "cmdoption-pharmpy-results-h"], [307, "cmdoption-pharmpy-results-linearize-h"], [307, "cmdoption-pharmpy-results-ofv-h"], [307, "cmdoption-pharmpy-results-print-h"], [307, "cmdoption-pharmpy-results-qa-h"], [307, "cmdoption-pharmpy-results-report-h"], [307, "cmdoption-pharmpy-results-ruvsearch-h"], [307, "cmdoption-pharmpy-results-scm-h"], [307, "cmdoption-pharmpy-results-simeval-h"], [307, "cmdoption-pharmpy-results-summary-h"], [307, "cmdoption-pharmpy-run-allometry-h"], [307, "cmdoption-pharmpy-run-amd-h"], [307, "cmdoption-pharmpy-run-bootstrap-h"], [307, "cmdoption-pharmpy-run-covsearch-h"], [307, "cmdoption-pharmpy-run-estmethod-h"], [307, "cmdoption-pharmpy-run-execute-h"], [307, "cmdoption-pharmpy-run-h"], [307, "cmdoption-pharmpy-run-iivsearch-h"], [307, "cmdoption-pharmpy-run-iovsearch-h"], [307, "cmdoption-pharmpy-run-modelsearch-h"], [307, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[307, "cmdoption-pharmpy-data-append-o"], [307, "cmdoption-pharmpy-data-deidentify-o"], [307, "cmdoption-pharmpy-data-filter-o"], [307, "cmdoption-pharmpy-data-reference-o"], [307, "cmdoption-pharmpy-data-write-o"], [307, "cmdoption-pharmpy-model-absorption_rate-o"], [307, "cmdoption-pharmpy-model-add_cov_effect-o"], [307, "cmdoption-pharmpy-model-add_iiv-o"], [307, "cmdoption-pharmpy-model-add_iov-o"], [307, "cmdoption-pharmpy-model-boxcox-o"], [307, "cmdoption-pharmpy-model-create_joint_distribution-o"], [307, "cmdoption-pharmpy-model-elimination_rate-o"], [307, "cmdoption-pharmpy-model-error-o"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [307, "cmdoption-pharmpy-model-john_draper-o"], [307, "cmdoption-pharmpy-model-peripheral_compartments-o"], [307, "cmdoption-pharmpy-model-power_on_ruv-o"], [307, "cmdoption-pharmpy-model-remove_iiv-o"], [307, "cmdoption-pharmpy-model-remove_iov-o"], [307, "cmdoption-pharmpy-model-tdist-o"], [307, "cmdoption-pharmpy-model-transit_compartments-o"], [307, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[307, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [307, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [307, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[307, "cmdoption-pharmpy-data-reference-arg-colname"]], "covariate": [[307, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[307, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[307, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[307, "cmdoption-pharmpy-data-append-arg-expression"], [307, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[307, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[307, "cmdoption-pharmpy-data-append-arg-file"], [307, "cmdoption-pharmpy-data-deidentify-arg-file"], [307, "cmdoption-pharmpy-data-filter-arg-file"], [307, "cmdoption-pharmpy-data-print-arg-file"], [307, "cmdoption-pharmpy-data-reference-arg-file"], [307, "cmdoption-pharmpy-data-resample-arg-file"], [307, "cmdoption-pharmpy-data-write-arg-file"], [307, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [307, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [307, "cmdoption-pharmpy-model-add_iiv-arg-file"], [307, "cmdoption-pharmpy-model-add_iov-arg-file"], [307, "cmdoption-pharmpy-model-boxcox-arg-file"], [307, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [307, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [307, "cmdoption-pharmpy-model-error-arg-file"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [307, "cmdoption-pharmpy-model-john_draper-arg-file"], [307, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [307, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [307, "cmdoption-pharmpy-model-print-arg-file"], [307, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [307, "cmdoption-pharmpy-model-remove_iov-arg-file"], [307, "cmdoption-pharmpy-model-sample-arg-file"], [307, "cmdoption-pharmpy-model-tdist-arg-file"], [307, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [307, "cmdoption-pharmpy-model-update_inits-arg-file"], [307, "cmdoption-pharmpy-results-ofv-arg-file"], [307, "cmdoption-pharmpy-results-print-arg-file"], [307, "cmdoption-pharmpy-results-summary-arg-file"], [307, "cmdoption-pharmpy-run-allometry-arg-file"], [307, "cmdoption-pharmpy-run-bootstrap-arg-file"], [307, "cmdoption-pharmpy-run-covsearch-arg-file"], [307, "cmdoption-pharmpy-run-estmethod-arg-file"], [307, "cmdoption-pharmpy-run-execute-arg-file"], [307, "cmdoption-pharmpy-run-iivsearch-arg-file"], [307, "cmdoption-pharmpy-run-iovsearch-arg-file"], [307, "cmdoption-pharmpy-run-modelsearch-arg-file"], [307, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[307, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[307, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[307, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [307, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[307, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[307, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [307, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[307, "cmdoption-pharmpy-h"], [307, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[307, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[307, "cmdoption-pharmpy-data-append-arg-expression"], [307, "cmdoption-pharmpy-data-append-arg-file"], [307, "cmdoption-pharmpy-data-append-f"], [307, "cmdoption-pharmpy-data-append-h"], [307, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[307, "cmdoption-pharmpy-data-deidentify-arg-file"], [307, "cmdoption-pharmpy-data-deidentify-datecols"], [307, "cmdoption-pharmpy-data-deidentify-f"], [307, "cmdoption-pharmpy-data-deidentify-h"], [307, "cmdoption-pharmpy-data-deidentify-idcol"], [307, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[307, "cmdoption-pharmpy-data-filter-arg-expressions"], [307, "cmdoption-pharmpy-data-filter-arg-file"], [307, "cmdoption-pharmpy-data-filter-f"], [307, "cmdoption-pharmpy-data-filter-h"], [307, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[307, "cmdoption-pharmpy-data-print-arg-file"], [307, "cmdoption-pharmpy-data-print-columns"], [307, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[307, "cmdoption-pharmpy-data-reference-arg-colname"], [307, "cmdoption-pharmpy-data-reference-arg-file"], [307, "cmdoption-pharmpy-data-reference-f"], [307, "cmdoption-pharmpy-data-reference-h"], [307, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[307, "cmdoption-pharmpy-data-resample-arg-file"], [307, "cmdoption-pharmpy-data-resample-group"], [307, "cmdoption-pharmpy-data-resample-h"], [307, "cmdoption-pharmpy-data-resample-replace"], [307, "cmdoption-pharmpy-data-resample-resamples"], [307, "cmdoption-pharmpy-data-resample-sample_size"], [307, "cmdoption-pharmpy-data-resample-seed"], [307, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[307, "cmdoption-pharmpy-data-write-arg-file"], [307, "cmdoption-pharmpy-data-write-f"], [307, "cmdoption-pharmpy-data-write-h"], [307, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[307, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[307, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[307, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [307, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [307, "cmdoption-pharmpy-model-absorption_rate-f"], [307, "cmdoption-pharmpy-model-absorption_rate-h"], [307, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[307, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [307, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [307, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [307, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [307, "cmdoption-pharmpy-model-add_cov_effect-f"], [307, "cmdoption-pharmpy-model-add_cov_effect-h"], [307, "cmdoption-pharmpy-model-add_cov_effect-o"], [307, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[307, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [307, "cmdoption-pharmpy-model-add_iiv-arg-file"], [307, "cmdoption-pharmpy-model-add_iiv-arg-param"], [307, "cmdoption-pharmpy-model-add_iiv-eta_name"], [307, "cmdoption-pharmpy-model-add_iiv-f"], [307, "cmdoption-pharmpy-model-add_iiv-h"], [307, "cmdoption-pharmpy-model-add_iiv-o"], [307, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[307, "cmdoption-pharmpy-model-add_iov-arg-file"], [307, "cmdoption-pharmpy-model-add_iov-arg-occ"], [307, "cmdoption-pharmpy-model-add_iov-eta_names"], [307, "cmdoption-pharmpy-model-add_iov-etas"], [307, "cmdoption-pharmpy-model-add_iov-f"], [307, "cmdoption-pharmpy-model-add_iov-h"], [307, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[307, "cmdoption-pharmpy-model-boxcox-arg-file"], [307, "cmdoption-pharmpy-model-boxcox-etas"], [307, "cmdoption-pharmpy-model-boxcox-f"], [307, "cmdoption-pharmpy-model-boxcox-h"], [307, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[307, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [307, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [307, "cmdoption-pharmpy-model-create_joint_distribution-f"], [307, "cmdoption-pharmpy-model-create_joint_distribution-h"], [307, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[307, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [307, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [307, "cmdoption-pharmpy-model-elimination_rate-f"], [307, "cmdoption-pharmpy-model-elimination_rate-h"], [307, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[307, "cmdoption-pharmpy-model-error-arg-error_type"], [307, "cmdoption-pharmpy-model-error-arg-file"], [307, "cmdoption-pharmpy-model-error-f"], [307, "cmdoption-pharmpy-model-error-h"], [307, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[307, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [307, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[307, "cmdoption-pharmpy-model-john_draper-arg-file"], [307, "cmdoption-pharmpy-model-john_draper-etas"], [307, "cmdoption-pharmpy-model-john_draper-f"], [307, "cmdoption-pharmpy-model-john_draper-h"], [307, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[307, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [307, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [307, "cmdoption-pharmpy-model-peripheral_compartments-f"], [307, "cmdoption-pharmpy-model-peripheral_compartments-h"], [307, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[307, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [307, "cmdoption-pharmpy-model-power_on_ruv-eps"], [307, "cmdoption-pharmpy-model-power_on_ruv-f"], [307, "cmdoption-pharmpy-model-power_on_ruv-h"], [307, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[307, "cmdoption-pharmpy-model-print-arg-file"], [307, "cmdoption-pharmpy-model-print-explicit-odes"], [307, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[307, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [307, "cmdoption-pharmpy-model-remove_iiv-f"], [307, "cmdoption-pharmpy-model-remove_iiv-h"], [307, "cmdoption-pharmpy-model-remove_iiv-o"], [307, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[307, "cmdoption-pharmpy-model-remove_iov-arg-file"], [307, "cmdoption-pharmpy-model-remove_iov-f"], [307, "cmdoption-pharmpy-model-remove_iov-h"], [307, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[307, "cmdoption-pharmpy-model-sample-arg-file"], [307, "cmdoption-pharmpy-model-sample-h"], [307, "cmdoption-pharmpy-model-sample-samples"], [307, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[307, "cmdoption-pharmpy-model-tdist-arg-file"], [307, "cmdoption-pharmpy-model-tdist-etas"], [307, "cmdoption-pharmpy-model-tdist-f"], [307, "cmdoption-pharmpy-model-tdist-h"], [307, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[307, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [307, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [307, "cmdoption-pharmpy-model-transit_compartments-f"], [307, "cmdoption-pharmpy-model-transit_compartments-h"], [307, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[307, "cmdoption-pharmpy-model-update_inits-arg-file"], [307, "cmdoption-pharmpy-model-update_inits-f"], [307, "cmdoption-pharmpy-model-update_inits-h"], [307, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[307, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[307, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [307, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[307, "cmdoption-pharmpy-results-cdd-arg-psn"], [307, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[307, "cmdoption-pharmpy-results-frem-arg-psn"], [307, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [307, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [307, "cmdoption-pharmpy-results-frem-h"], [307, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[307, "cmdoption-pharmpy-results-linearize-arg-psn"], [307, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[307, "cmdoption-pharmpy-results-ofv-arg-file"], [307, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[307, "cmdoption-pharmpy-results-print-arg-file"], [307, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[307, "cmdoption-pharmpy-results-qa-arg-psn"], [307, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[307, "cmdoption-pharmpy-results-report-arg-psn"], [307, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[307, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [307, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[307, "cmdoption-pharmpy-results-scm-arg-psn"], [307, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[307, "cmdoption-pharmpy-results-simeval-arg-psn"], [307, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[307, "cmdoption-pharmpy-results-summary-arg-file"], [307, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[307, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[307, "cmdoption-pharmpy-run-allometry-allometric_variable"], [307, "cmdoption-pharmpy-run-allometry-arg-file"], [307, "cmdoption-pharmpy-run-allometry-h"], [307, "cmdoption-pharmpy-run-allometry-initials"], [307, "cmdoption-pharmpy-run-allometry-lower_bounds"], [307, "cmdoption-pharmpy-run-allometry-non_fixed"], [307, "cmdoption-pharmpy-run-allometry-parameters"], [307, "cmdoption-pharmpy-run-allometry-path"], [307, "cmdoption-pharmpy-run-allometry-reference_value"], [307, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[307, "cmdoption-pharmpy-run-amd-administration"], [307, "cmdoption-pharmpy-run-amd-allometric_variable"], [307, "cmdoption-pharmpy-run-amd-arg-input_path"], [307, "cmdoption-pharmpy-run-amd-cl_init"], [307, "cmdoption-pharmpy-run-amd-h"], [307, "cmdoption-pharmpy-run-amd-lloq_limit"], [307, "cmdoption-pharmpy-run-amd-lloq_method"], [307, "cmdoption-pharmpy-run-amd-mat_init"], [307, "cmdoption-pharmpy-run-amd-modeltype"], [307, "cmdoption-pharmpy-run-amd-occasion"], [307, "cmdoption-pharmpy-run-amd-order"], [307, "cmdoption-pharmpy-run-amd-path"], [307, "cmdoption-pharmpy-run-amd-resume"], [307, "cmdoption-pharmpy-run-amd-search_space"], [307, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[307, "cmdoption-pharmpy-run-bootstrap-arg-file"], [307, "cmdoption-pharmpy-run-bootstrap-h"], [307, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[307, "cmdoption-pharmpy-run-covsearch-algorithm"], [307, "cmdoption-pharmpy-run-covsearch-arg-file"], [307, "cmdoption-pharmpy-run-covsearch-effects"], [307, "cmdoption-pharmpy-run-covsearch-h"], [307, "cmdoption-pharmpy-run-covsearch-max_steps"], [307, "cmdoption-pharmpy-run-covsearch-p_backward"], [307, "cmdoption-pharmpy-run-covsearch-p_forward"], [307, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[307, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [307, "cmdoption-pharmpy-run-estmethod-arg-file"], [307, "cmdoption-pharmpy-run-estmethod-h"], [307, "cmdoption-pharmpy-run-estmethod-methods"], [307, "cmdoption-pharmpy-run-estmethod-path"], [307, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[307, "cmdoption-pharmpy-run-execute-arg-file"], [307, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[307, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [307, "cmdoption-pharmpy-run-iivsearch-arg-file"], [307, "cmdoption-pharmpy-run-iivsearch-cutoff"], [307, "cmdoption-pharmpy-run-iivsearch-h"], [307, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [307, "cmdoption-pharmpy-run-iivsearch-path"], [307, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[307, "cmdoption-pharmpy-run-iovsearch-arg-file"], [307, "cmdoption-pharmpy-run-iovsearch-column"], [307, "cmdoption-pharmpy-run-iovsearch-cutoff"], [307, "cmdoption-pharmpy-run-iovsearch-distribution"], [307, "cmdoption-pharmpy-run-iovsearch-h"], [307, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [307, "cmdoption-pharmpy-run-iovsearch-path"], [307, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[307, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [307, "cmdoption-pharmpy-run-modelsearch-arg-file"], [307, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [307, "cmdoption-pharmpy-run-modelsearch-cutoff"], [307, "cmdoption-pharmpy-run-modelsearch-h"], [307, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [307, "cmdoption-pharmpy-run-modelsearch-path"], [307, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[307, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [307, "cmdoption-pharmpy-run-ruvsearch-groups"], [307, "cmdoption-pharmpy-run-ruvsearch-h"], [307, "cmdoption-pharmpy-run-ruvsearch-p_value"], [307, "cmdoption-pharmpy-run-ruvsearch-path"], [307, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[307, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [307, "cmdoption-pharmpy-results-cdd-arg-psn"], [307, "cmdoption-pharmpy-results-frem-arg-psn"], [307, "cmdoption-pharmpy-results-linearize-arg-psn"], [307, "cmdoption-pharmpy-results-qa-arg-psn"], [307, "cmdoption-pharmpy-results-report-arg-psn"], [307, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [307, "cmdoption-pharmpy-results-scm-arg-psn"], [307, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[307, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [307, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})