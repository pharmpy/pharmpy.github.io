Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.SimulationStep", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_cmt", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bin_observations", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_central_volume_and_clearance", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_covariate_effects", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_dv_vs_pred", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.replace_non_random_rvs", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_baseline_effect", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dataset", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_simulation", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.is_strictness_fulfilled", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_retries", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.ModelEntry", "api/pharmpy.workflows.ModelfitResults", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Results", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "common_features", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "drug_metabolite", "estmethod", "frem", "general", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "mfl", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "pkpd", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "retries", "ruvsearch", "scm", "simeval", "strictness", "structsearch", "tmdd", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.SimulationStep.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_cmt.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bin_observations.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_central_volume_and_clearance.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_covariate_effects.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_dv_vs_pred.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.replace_non_random_rvs.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_baseline_effect.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dataset.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_simulation.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.is_strictness_fulfilled.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_retries.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.ModelEntry.rst", "api/pharmpy.workflows.ModelfitResults.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Results.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "common_features.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "drug_metabolite.rst", "estmethod.rst", "frem.rst", "general.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "mfl.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "pkpd.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "retries.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "strictness.rst", "structsearch.rst", "tmdd.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "SimulationStep", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_cmt", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bin_observations", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_central_volume_and_clearance", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_covariate_effects", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_abs_cwres_vs_ipred", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_dv_vs_pred", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "replace_non_random_rvs", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_baseline_effect", "set_combined_error_model", "set_covariates", "set_dataset", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_simulation", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "is_strictness_fulfilled", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_retries", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "ModelEntry", "ModelfitResults", "NullModelDatabase", "NullToolDatabase", "Results", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "Command line interface", "Pharmpy Community Code of Conduct", "Common features", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Dataset", "Design principles", "Documentation for developers", "Drug metabolite", "Estmethod", "FREM", "General", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "Model feature language (MFL)", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "PKPD", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "Retries", "ruvsearch", "scm", "Simeval", "Strictness", "Structsearch", "TMDD", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 23, 24, 25, 28, 30, 35, 60, 61, 75, 80, 84, 85, 86, 87, 89, 90, 91, 92, 99, 103, 111, 114, 120, 121, 122, 125, 131, 135, 142, 146, 147, 155, 178, 188, 193, 195, 217, 230, 232, 236, 243, 270, 277, 281, 285, 287, 288, 289, 305, 306, 308, 309, 310, 311, 312, 314, 316, 317, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 341, 342, 343, 344, 346, 347, 348, 350, 351], "section": [0, 310, 311, 314, 327, 330, 341, 349], "i": [0, 1, 2, 6, 8, 9, 14, 18, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 53, 55, 62, 63, 72, 74, 75, 76, 79, 80, 82, 84, 86, 87, 89, 90, 91, 99, 100, 103, 106, 110, 111, 113, 115, 119, 120, 121, 122, 137, 138, 139, 144, 145, 150, 156, 157, 159, 162, 163, 180, 181, 185, 189, 190, 191, 193, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 211, 212, 215, 216, 217, 219, 221, 222, 223, 226, 227, 228, 231, 232, 233, 234, 235, 241, 243, 245, 246, 250, 251, 253, 255, 257, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 279, 281, 285, 286, 288, 289, 290, 295, 304, 305, 306, 308, 309, 310, 311, 312, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 351], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 255, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 310, 324, 327, 332, 337, 338, 343, 349], "The": [0, 2, 3, 6, 8, 9, 10, 14, 18, 23, 24, 25, 28, 33, 36, 40, 42, 44, 47, 52, 63, 71, 77, 79, 82, 86, 87, 88, 89, 90, 91, 107, 113, 130, 135, 138, 139, 150, 151, 153, 173, 189, 193, 195, 206, 209, 217, 228, 232, 247, 250, 260, 264, 266, 267, 272, 273, 274, 277, 287, 306, 308, 309, 310, 312, 313, 314, 316, 323, 326, 327, 329, 331, 332, 334, 335, 337, 338, 346, 348, 349, 350, 351], "inform": [0, 1, 2, 6, 8, 135, 232, 264, 306, 308, 310, 314, 316, 317, 319, 320, 322, 324, 325, 326, 327, 330, 333, 335, 338, 342, 343, 344, 347, 348, 350], "intend": [0, 310, 327, 330], "non": [0, 24, 74, 79, 88, 103, 231, 306, 316, 317, 321, 327, 329, 330, 332, 338, 346], "hard": [0, 338], "find": [0, 8, 28, 53, 94, 95, 113, 135, 188, 262, 279, 306, 325, 327, 342, 347, 348, 350, 351], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 290, 312, 314, 316, 319, 320, 323, 324, 326, 327, 330, 331, 332, 333, 335, 342, 343, 347, 348], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 305, 306, 310, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 326, 327, 328, 331, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 347, 348, 350], "develop": [0, 264, 306, 327, 337, 338, 349, 351], "remov": [0, 2, 9, 25, 28, 84, 120, 121, 122, 159, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 206, 210, 224, 237, 239, 241, 264, 305, 306, 308, 314, 317, 324, 326, 327, 334], "row": [0, 2, 24, 86, 87, 93, 100, 104, 106, 159, 190, 191, 197, 218, 232, 278, 304, 306, 308, 314, 316, 321, 331, 332, 342, 344], "split": [0, 79, 231, 299, 306, 308, 330, 349], "drop": [0, 2, 6, 18, 84, 85, 238, 306, 338, 344], "column": [0, 2, 6, 8, 10, 18, 24, 30, 32, 35, 42, 50, 63, 82, 84, 85, 86, 87, 88, 92, 93, 99, 103, 104, 106, 111, 159, 163, 168, 172, 183, 189, 190, 196, 197, 200, 209, 218, 221, 232, 236, 238, 253, 254, 255, 264, 269, 277, 278, 304, 306, 308, 310, 314, 316, 321, 326, 330, 331, 332, 342, 344], "error": [0, 2, 11, 19, 20, 23, 25, 28, 56, 57, 58, 59, 63, 66, 67, 68, 69, 70, 133, 138, 139, 150, 153, 171, 178, 193, 195, 216, 217, 221, 225, 232, 244, 273, 276, 279, 284, 287, 304, 306, 314, 320, 324, 326, 333, 334, 342, 343, 344, 346, 349], "handl": [0, 2, 3, 92, 230, 232, 306, 316, 317, 321, 338], "valid": [0, 2, 25, 110, 192, 264, 306, 324, 327], "some": [0, 2, 8, 10, 66, 79, 178, 188, 193, 232, 283, 304, 306, 308, 310, 312, 314, 316, 327, 328, 332, 333, 337, 338, 343, 349], "rule": [0, 72, 327], "These": [0, 310, 312, 317, 321, 327, 328, 332, 337, 338], "were": [0, 25, 28, 276, 304, 305, 306, 310, 316, 320, 321, 327, 331, 333, 351], "test": [0, 2, 55, 140, 157, 266, 267, 269, 271, 273, 274, 306, 308, 313, 314, 319, 320, 323, 326, 329, 331, 333, 335, 338, 343, 347], "7": [0, 2, 36, 56, 58, 59, 64, 68, 69, 87, 93, 100, 106, 122, 126, 159, 197, 218, 255, 304, 305, 314, 316, 321, 324, 326, 327, 328, 331, 332, 335, 339, 341, 343, 344, 345, 348], "4": [0, 1, 2, 6, 56, 58, 59, 64, 68, 69, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 122, 159, 168, 197, 218, 235, 255, 273, 279, 304, 305, 314, 315, 316, 320, 321, 324, 326, 327, 328, 330, 331, 332, 333, 335, 339, 341, 342, 343, 344, 345, 346, 348], "3": [0, 2, 6, 28, 56, 57, 58, 59, 64, 67, 68, 69, 70, 73, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 109, 112, 122, 126, 159, 168, 171, 185, 190, 191, 192, 197, 218, 223, 232, 233, 234, 235, 253, 254, 255, 273, 278, 304, 305, 314, 315, 316, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 339, 341, 342, 343, 344, 345, 348, 351], "delimet": 0, "between": [0, 8, 9, 25, 32, 79, 99, 232, 277, 287, 295, 304, 305, 306, 308, 320, 321, 326, 327, 334, 338, 341, 343], "comma": [0, 308, 329], "space": [0, 71, 264, 271, 274, 306, 308, 310, 314, 329, 342, 349], "tab": [0, 171, 306, 332, 336], "befor": [0, 28, 191, 192, 242, 306, 308, 314, 328, 342], "after": [0, 2, 6, 28, 120, 121, 122, 221, 262, 276, 279, 283, 305, 306, 308, 315, 316, 321, 324, 327, 328, 330, 333, 338, 339, 341, 344, 345, 351], "ar": [0, 2, 3, 4, 6, 7, 8, 14, 24, 25, 28, 37, 38, 39, 42, 48, 63, 77, 79, 82, 103, 104, 119, 138, 139, 150, 160, 180, 181, 183, 186, 188, 192, 194, 195, 198, 201, 202, 216, 222, 231, 232, 236, 243, 251, 252, 257, 264, 266, 270, 281, 283, 286, 304, 306, 308, 309, 310, 312, 314, 316, 317, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 342, 344, 346, 347, 348, 349, 351], "give": [0, 24, 113, 119, 162, 192, 216, 281, 285, 288, 304, 306, 308, 321, 326, 327, 330, 342, 344], "sic": 0, "begin": [0, 321, 330, 332], "end": [0, 38, 53, 310, 321, 327, 330, 332], "insert": [0, 294, 306], "each": [0, 2, 6, 8, 25, 33, 35, 36, 62, 63, 64, 86, 87, 88, 89, 90, 91, 100, 106, 108, 122, 161, 168, 169, 183, 189, 192, 203, 205, 216, 218, 283, 287, 304, 305, 306, 308, 310, 311, 314, 316, 317, 319, 320, 321, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 341, 342, 343, 344, 345, 348, 351], "can": [0, 1, 2, 6, 10, 18, 24, 25, 28, 34, 35, 40, 55, 63, 71, 80, 88, 135, 189, 230, 232, 250, 262, 267, 270, 283, 286, 288, 289, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 342, 343, 346, 347, 348, 349, 350, 351], "onli": [0, 2, 3, 8, 10, 14, 25, 36, 60, 61, 72, 75, 84, 86, 87, 89, 90, 91, 93, 110, 113, 114, 125, 131, 138, 139, 150, 161, 189, 193, 195, 203, 205, 216, 217, 218, 221, 222, 230, 232, 242, 257, 270, 273, 274, 279, 286, 295, 306, 308, 309, 310, 314, 324, 326, 327, 329, 330, 333, 335, 337, 342, 347, 348, 349], "numer": [0, 6, 29, 86, 87, 89, 90, 304, 306, 316, 338, 346], "e": [0, 2, 6, 14, 18, 25, 37, 39, 55, 75, 81, 120, 121, 122, 162, 181, 194, 198, 199, 222, 304, 306, 312, 316, 320, 321, 324, 326, 327, 329, 330, 332, 333, 334, 335, 338, 343, 346, 347, 348], "other": [0, 7, 9, 18, 25, 28, 44, 76, 169, 270, 294, 299, 304, 306, 309, 312, 317, 324, 327, 338], "charact": [0, 10, 316], "than": [0, 23, 24, 306, 324, 327, 333, 346], "ee": 0, "0123456789": 0, "allow": [0, 2, 6, 14, 25, 36, 222, 257, 264, 272, 281, 282, 285, 288, 298, 306, 308, 310, 314, 327, 329, 330, 333, 338, 342, 346, 347, 348, 349], "except": [0, 11, 12, 19, 20, 21, 39, 63, 189, 232, 306, 327], "ii": [0, 6], "datx": [0, 306], "fortran": 0, "short": [0, 312, 327], "form": [0, 25, 189, 306, 327], "exponenti": [0, 36, 39, 48, 205, 314, 321], "notat": 0, "2": [0, 1, 2, 6, 18, 28, 33, 36, 38, 43, 47, 49, 51, 54, 55, 56, 57, 58, 59, 64, 67, 68, 69, 70, 74, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 112, 122, 126, 159, 168, 171, 185, 190, 191, 192, 193, 195, 197, 203, 207, 211, 212, 215, 217, 218, 219, 222, 223, 226, 232, 234, 235, 255, 263, 273, 277, 304, 305, 308, 312, 314, 315, 316, 319, 320, 321, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 348], "1": [0, 1, 2, 5, 6, 7, 8, 14, 16, 17, 18, 22, 24, 25, 26, 28, 33, 34, 36, 37, 38, 39, 40, 44, 47, 49, 52, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 70, 75, 77, 82, 86, 87, 88, 89, 90, 91, 93, 100, 104, 106, 108, 109, 110, 112, 122, 126, 134, 137, 159, 160, 161, 162, 163, 168, 171, 175, 185, 189, 190, 191, 192, 197, 198, 202, 203, 204, 205, 208, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 226, 227, 230, 232, 233, 234, 235, 243, 255, 263, 264, 265, 266, 268, 269, 271, 272, 273, 274, 277, 304, 305, 308, 310, 311, 312, 314, 315, 316, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 351], "mean": [0, 2, 13, 17, 18, 22, 63, 66, 77, 162, 190, 191, 264, 281, 285, 304, 305, 306, 308, 310, 321, 324, 327, 330, 331, 332, 333, 335, 338, 341, 345, 346, 347], "2e": 0, "2e1": 0, "A": [0, 2, 5, 8, 15, 17, 18, 23, 24, 25, 28, 30, 52, 63, 65, 66, 71, 82, 83, 88, 94, 95, 113, 119, 127, 128, 129, 130, 132, 133, 134, 135, 163, 168, 173, 188, 189, 190, 191, 193, 195, 207, 210, 217, 221, 224, 250, 251, 261, 270, 273, 276, 279, 281, 285, 286, 287, 288, 295, 304, 305, 307, 308, 312, 313, 316, 317, 319, 324, 326, 327, 328, 329, 330, 332, 333, 337, 338, 342, 343, 344, 346, 349], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 83, 282, 284, 290, 299, 327, 332, 348], "instead": [0, 2, 9, 47, 72, 88, 119, 215, 232, 272, 281, 305, 306, 308, 316, 317, 319, 320, 321, 327, 338, 342], "lone": 0, "an": [0, 2, 4, 6, 8, 9, 10, 15, 16, 18, 24, 25, 28, 31, 32, 33, 35, 37, 40, 41, 42, 51, 52, 55, 71, 99, 103, 108, 111, 138, 139, 140, 144, 145, 148, 150, 153, 157, 160, 162, 177, 189, 193, 198, 206, 232, 234, 247, 250, 252, 253, 254, 255, 276, 277, 279, 282, 284, 306, 308, 310, 311, 312, 314, 316, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 335, 338, 341, 342, 344, 345, 346, 347, 348, 349, 351], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 23, 24, 25, 28, 33, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 51, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 79, 80, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 100, 104, 106, 108, 109, 115, 126, 127, 133, 134, 136, 137, 159, 160, 161, 162, 171, 175, 179, 183, 184, 185, 188, 190, 191, 192, 195, 197, 198, 199, 201, 202, 205, 206, 207, 209, 210, 216, 217, 218, 220, 221, 224, 231, 232, 233, 234, 237, 240, 243, 252, 254, 255, 263, 264, 266, 268, 269, 271, 272, 273, 274, 278, 279, 287, 290, 304, 305, 308, 310, 312, 314, 316, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 351], "dot": 0, "most": [0, 6, 36, 230, 308, 317, 327, 341, 342], "24": [0, 2, 64, 93, 100, 106, 109, 122, 126, 159, 197, 218, 255, 304, 305, 314, 316, 320, 324, 326, 328, 331, 332, 333, 341, 345], "long": [0, 306, 327, 338], "count": [0, 108, 232, 278, 285, 306, 333], "delimit": 0, "wa": [0, 277, 287, 290, 304, 306, 313, 324, 327, 328, 343, 344, 346], "eaten": 0, "empti": [0, 2, 18, 25, 276, 311, 342], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 25, 28, 32, 34, 35, 43, 47, 53, 55, 72, 79, 84, 96, 97, 98, 99, 115, 126, 185, 191, 193, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 237, 239, 240, 242, 243, 257, 290, 306, 308, 309, 311, 316, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 347, 348, 349, 351], "As": [0, 2, 25, 309, 310, 329, 332, 333, 334, 342], "contain": [0, 2, 3, 25, 52, 82, 88, 164, 165, 166, 167, 251, 253, 254, 255, 304, 305, 308, 310, 314, 315, 316, 317, 319, 320, 324, 326, 327, 330, 331, 333, 335, 339, 341, 342, 343, 344, 345, 347, 348], "drope": 0, "input": [0, 7, 8, 9, 10, 25, 28, 36, 37, 39, 42, 69, 70, 80, 85, 136, 140, 141, 151, 171, 175, 191, 205, 228, 250, 251, 264, 272, 277, 278, 291, 294, 306, 308, 314, 316, 319, 320, 324, 326, 332, 333, 334, 335, 338, 342, 343, 347, 348, 349], "ani": [0, 2, 6, 9, 18, 51, 63, 74, 113, 186, 262, 267, 278, 291, 295, 310, 312, 314, 316, 323, 324, 326, 327, 329, 330, 331, 332, 334, 338, 342, 348, 349, 351], "limit": [0, 2, 6, 73, 183, 209, 216, 232, 264, 306, 308, 326, 327, 336, 342], "length": [0, 52, 88, 89, 90, 91, 108, 109, 126, 306, 332], "If": [0, 2, 8, 10, 18, 28, 33, 34, 36, 44, 47, 53, 55, 63, 78, 79, 80, 88, 99, 103, 108, 110, 111, 149, 180, 181, 185, 189, 191, 203, 205, 206, 215, 216, 222, 228, 231, 232, 233, 234, 235, 236, 243, 257, 264, 268, 271, 279, 294, 304, 308, 310, 312, 314, 316, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 338, 342, 346, 348, 349, 351], "ha": [0, 2, 8, 18, 25, 40, 79, 88, 100, 106, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 304, 306, 308, 309, 310, 312, 314, 316, 317, 319, 320, 324, 326, 327, 330, 332, 333, 335, 340, 342, 343, 344, 346, 348, 351], "more": [0, 2, 8, 24, 232, 263, 266, 268, 269, 271, 273, 274, 306, 308, 310, 314, 319, 320, 323, 324, 325, 327, 330, 332, 333, 335, 338, 341, 347, 350], "extra": [0, 18, 274, 306, 347, 348], "consid": [0, 103, 268, 269, 271, 306, 314, 317, 320, 324, 326, 327, 333, 343], "start": [0, 2, 8, 38, 51, 108, 163, 179, 189, 268, 274, 306, 308, 310, 312, 314, 319, 320, 321, 326, 327, 330, 331, 332, 333, 335, 342, 343, 344, 347, 348, 349, 351], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 286, 287, 288, 290, 295, 304, 306, 308, 309, 310, 312, 314, 317, 319, 320, 321, 323, 324, 326, 327, 330, 331, 332, 333, 334, 335, 336, 338, 342, 343, 345, 346, 347, 348, 349, 350, 351], "been": [0, 2, 6, 156, 309, 310, 314, 316, 327, 332, 342, 351], "provid": [0, 25, 191, 216, 308, 309, 313, 314, 316, 324, 326, 327, 333, 351], "default": [0, 1, 6, 7, 9, 14, 18, 23, 25, 30, 33, 36, 38, 39, 40, 46, 48, 53, 55, 62, 79, 80, 84, 110, 113, 115, 119, 128, 130, 137, 138, 139, 150, 151, 180, 181, 189, 190, 191, 193, 195, 201, 202, 205, 206, 216, 217, 221, 231, 233, 234, 235, 245, 246, 249, 250, 257, 263, 264, 266, 268, 269, 271, 272, 274, 279, 281, 285, 288, 298, 303, 306, 308, 311, 314, 319, 324, 326, 329, 330, 332, 333, 334, 335, 336, 342, 343, 346, 347, 348, 351], "where": [0, 2, 7, 33, 47, 232, 257, 262, 304, 305, 306, 309, 310, 311, 314, 316, 320, 321, 326, 327, 332, 333, 334, 338, 342, 346, 351], "rexex": 0, "": [0, 8, 10, 14, 71, 107, 175, 306, 308, 314, 316, 319, 321, 327, 334, 339, 342], "za": 0, "z": [0, 33], "either": [0, 2, 39, 40, 82, 110, 264, 271, 272, 324, 327, 329, 330, 332, 335, 346, 347, 351], "surround": 0, "two": [0, 2, 8, 9, 25, 28, 82, 169, 304, 306, 307, 308, 310, 314, 319, 327, 329, 338, 343, 348, 349], "By": [0, 14, 18, 25, 113, 138, 139, 150, 326, 327, 330], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 25, 28, 53, 71, 163, 177, 190, 232, 247, 268, 269, 270, 271, 272, 273, 285, 304, 305, 306, 308, 310, 311, 314, 319, 320, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 342, 343, 344, 347, 348, 351], "interpret": [0, 306, 327, 351], "us": [0, 1, 6, 8, 9, 10, 13, 14, 15, 18, 24, 25, 28, 32, 33, 42, 45, 52, 55, 63, 71, 79, 80, 82, 86, 87, 88, 89, 90, 91, 99, 107, 113, 119, 126, 137, 162, 163, 186, 189, 190, 191, 192, 193, 195, 203, 205, 214, 216, 217, 225, 232, 236, 242, 244, 245, 249, 253, 254, 255, 257, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 285, 288, 289, 290, 292, 294, 298, 304, 305, 306, 308, 310, 311, 314, 316, 317, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 341, 342, 343, 344, 348, 349, 350], "chang": [0, 9, 18, 24, 25, 38, 82, 201, 203, 207, 208, 210, 216, 219, 220, 224, 226, 232, 240, 308, 312, 314, 327, 330, 332, 333, 334, 342, 343, 351], "howev": [0, 2, 8, 324, 327, 329, 333, 334, 342, 351], "one": [0, 2, 6, 8, 9, 10, 14, 22, 23, 24, 25, 26, 36, 44, 75, 77, 84, 88, 97, 138, 139, 150, 172, 189, 191, 200, 203, 205, 225, 232, 236, 238, 239, 244, 249, 270, 273, 276, 278, 281, 285, 287, 288, 292, 306, 308, 309, 310, 312, 316, 317, 319, 320, 321, 324, 326, 327, 329, 330, 332, 333, 334, 338, 342, 346, 348], "legal": [0, 327], "ones": [0, 9, 113, 314, 321], "9": [0, 6, 47, 52, 64, 73, 87, 90, 93, 100, 104, 106, 122, 126, 243, 255, 304, 305, 314, 316, 326, 327, 328, 331, 332, 341, 343, 344, 345], "sinc": [0, 6, 206, 306, 316, 317, 321, 324, 332, 333, 334, 338, 351], "number": [0, 2, 6, 8, 14, 22, 23, 26, 35, 42, 52, 53, 55, 63, 66, 74, 80, 81, 82, 120, 121, 122, 123, 124, 126, 163, 166, 183, 189, 190, 191, 192, 193, 205, 215, 220, 223, 264, 265, 266, 270, 272, 273, 277, 278, 287, 304, 306, 308, 314, 316, 319, 324, 327, 329, 332, 341, 342, 343, 344, 346, 351], "valu": [0, 1, 2, 6, 10, 18, 23, 24, 25, 33, 39, 46, 48, 49, 55, 63, 65, 66, 73, 74, 86, 87, 88, 89, 90, 91, 96, 98, 100, 104, 106, 107, 127, 133, 134, 157, 183, 188, 189, 192, 209, 218, 221, 232, 240, 257, 263, 266, 268, 269, 271, 272, 273, 274, 279, 287, 303, 304, 306, 308, 312, 314, 316, 320, 324, 328, 330, 332, 333, 342, 343, 344, 345], "met": [0, 274, 319, 327, 329], "doubl": 0, "big": 0, "warn": [0, 2, 12, 250, 276, 284, 287, 306, 314, 320, 324, 326, 333, 342, 351], "larger": [0, 327], "pad": 0, "filter": [0, 93, 120, 121, 122, 306, 314, 316, 333], "so": [0, 23, 93, 189, 283, 309, 312, 317, 327, 333, 334, 341, 351], "characterscannot": 0, "neither": [0, 327], "perform": [0, 2, 14, 75, 82, 192, 308, 314, 327, 330, 332, 333, 334, 342, 348], "order": [0, 2, 8, 9, 25, 28, 32, 77, 136, 141, 142, 147, 152, 154, 155, 189, 203, 204, 212, 219, 226, 227, 228, 306, 308, 310, 316, 323, 324, 327, 329, 330, 331, 332, 333, 338, 348, 349], "given": [0, 2, 9, 25, 38, 77, 81, 86, 87, 89, 90, 91, 97, 98, 128, 129, 130, 132, 140, 151, 157, 159, 173, 180, 181, 190, 191, 192, 197, 221, 229, 232, 239, 240, 248, 250, 257, 264, 272, 281, 283, 285, 288, 294, 306, 308, 312, 316, 320, 321, 324, 326, 327, 333, 334, 341, 342, 343, 347], "critic": [0, 309], "case": [0, 2, 8, 35, 77, 79, 92, 138, 139, 150, 189, 232, 279, 306, 314, 319, 324, 326, 327, 330, 332, 333, 335, 340, 348, 350], "illeg": 0, "get": [0, 2, 4, 5, 6, 7, 8, 10, 16, 25, 28, 32, 35, 99, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 127, 131, 133, 134, 136, 158, 264, 278, 306, 316, 321, 326, 327, 330, 331, 338, 342, 348, 351], "need": [0, 2, 18, 39, 75, 92, 135, 306, 311, 312, 313, 317, 319, 321, 323, 324, 327, 330, 331, 333, 337, 349, 351], "becaus": [0, 8, 306, 327], "later": [0, 323, 327], "comparison": [0, 333, 338], "It": [0, 2, 18, 281, 309, 310, 311, 312, 316, 317, 323, 324, 325, 327, 329, 330, 331, 332, 336, 341, 342, 351], "possibl": [0, 2, 6, 8, 25, 113, 142, 146, 147, 155, 230, 286, 306, 310, 311, 312, 316, 319, 324, 327, 329, 330, 331, 332, 333, 334, 336, 338, 341, 347, 348, 349, 351], "done": [0, 1, 75, 76, 82, 86, 87, 89, 90, 91, 189, 309, 314, 330, 333, 336, 343], "eq": [0, 8, 31, 332], "ne": 0, "text": [0, 18, 36, 37, 40, 198, 330, 332, 338, 348], "otherwis": [0, 6, 28, 33, 34, 36, 39, 43, 75, 79, 99, 103, 111, 126, 137, 138, 139, 150, 153, 156, 160, 161, 162, 189, 203, 216, 217, 219, 221, 223, 226, 232, 287, 309, 314, 316, 327, 330, 332, 338, 348], "appropri": [0, 2, 309, 327], "letter": [0, 137], "alphanum": 0, "underscor": 0, "real": [0, 145, 157, 316, 317], "special": [0, 6, 236, 312, 316, 317, 327], "digit": [0, 74, 306, 346], "enclos": 0, "ok": [0, 317], "w": [0, 28, 75, 137, 160, 171, 172, 178, 193, 205, 217, 221, 225, 232, 244, 314, 327, 330, 332], "o": [0, 305, 307, 308, 313, 343], "With": [0, 2, 329, 342], "eqn": 0, "ge": [0, 332], "etc": [0, 3, 306, 310, 332, 334, 344], "maximum": [0, 2, 14, 36, 74, 232, 266, 308, 314, 342, 346], "have": [0, 2, 6, 8, 18, 25, 28, 36, 39, 82, 107, 113, 141, 152, 154, 222, 236, 269, 278, 283, 285, 306, 308, 310, 311, 312, 313, 314, 316, 317, 320, 323, 324, 326, 327, 330, 331, 333, 334, 336, 338, 342, 346, 348, 349, 351], "12": [0, 2, 64, 93, 100, 104, 106, 108, 109, 122, 159, 197, 218, 255, 304, 305, 314, 316, 319, 320, 321, 323, 324, 326, 327, 328, 331, 332, 333, 339, 341, 343, 344, 345, 348], "must": [0, 2, 23, 42, 79, 189, 205, 281, 305, 308, 327, 330, 346], "decreas": [0, 272, 317, 342], "within": [0, 2, 107, 189, 309, 314, 327, 329], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 2, 18, 25, 28, 216, 304, 309, 312, 314, 317, 327, 333, 334, 351], "affect": [0, 113, 119, 203, 216, 232, 306, 327, 334], "even": [0, 23, 81, 85, 100, 106, 113, 311, 327, 334], "still": [0, 327, 334, 351], "cannot": [0, 2, 8, 63, 79, 250, 280, 306, 314, 316, 327, 329], "both": [0, 1, 2, 8, 18, 42, 152, 199, 232, 278, 306, 309, 314, 316, 319, 320, 324, 326, 327, 331, 333, 342, 343, 347, 348, 349], "reenter": 0, "think": 0, "risk": [0, 327], "being": [0, 6, 25, 35, 44, 63, 143, 149, 192, 193, 195, 217, 305, 306, 311, 319, 320, 321, 327, 334, 338, 344], "truncat": 0, "encod": [0, 225, 244, 306, 316, 336], "here": [0, 2, 119, 316, 317, 318, 320, 322, 323, 324, 331, 332, 333, 338, 349, 350], "possibli": [0, 338], "partial": [0, 313, 338], "list": [0, 2, 6, 8, 10, 13, 14, 17, 24, 25, 28, 31, 33, 39, 42, 79, 82, 84, 85, 94, 95, 97, 98, 107, 112, 113, 119, 128, 129, 130, 132, 158, 168, 180, 181, 189, 190, 196, 205, 216, 231, 233, 234, 235, 237, 238, 239, 240, 249, 257, 262, 263, 264, 267, 268, 269, 270, 273, 276, 277, 278, 279, 287, 293, 294, 304, 305, 306, 308, 309, 312, 314, 316, 320, 326, 327, 329, 330, 332, 335, 341, 342, 343, 344, 347, 348], "decid": [0, 2, 44, 151, 324, 326, 327, 333, 343], "whether": [0, 23, 33, 36, 39, 55, 79, 140, 149, 151, 189, 205, 251, 253, 255, 264, 279, 282, 298, 306, 308, 324, 327, 329, 333, 348, 349], "put": [0, 8, 163, 189, 306, 317, 321, 324], "up": [0, 14, 309, 311, 314, 323, 331, 349, 351], "written": [0, 306, 310, 327, 330, 332, 334], "scientif": [0, 317], "14": [0, 2, 64, 87, 100, 106, 122, 255, 304, 305, 314, 324, 326, 327, 328, 331, 332, 341, 344, 345, 348], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 108, 206, 304, 332, 342], "describ": [0, 2, 25, 28, 63, 141, 142, 143, 146, 147, 152, 154, 155, 304, 314, 316, 324, 326, 330, 335, 342], "output": [0, 8, 18, 278, 294, 306, 308, 310, 312, 327, 330, 332], "alwai": [0, 188, 191, 306, 316, 329, 332, 333, 342, 347], "synonym": [0, 306], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 24, 25, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 47, 49, 52, 53, 63, 74, 76, 79, 81, 82, 84, 89, 90, 91, 97, 101, 107, 108, 109, 113, 116, 119, 122, 126, 128, 129, 130, 132, 137, 138, 139, 140, 150, 158, 160, 163, 166, 169, 177, 180, 181, 183, 185, 187, 189, 193, 194, 195, 196, 198, 200, 205, 206, 209, 213, 215, 216, 217, 218, 221, 228, 231, 233, 234, 235, 238, 239, 252, 257, 262, 263, 264, 266, 269, 272, 275, 276, 279, 281, 282, 283, 285, 287, 288, 291, 292, 293, 294, 295, 303, 305, 306, 308, 311, 314, 316, 319, 324, 326, 327, 329, 331, 332, 333, 335, 337, 342, 343, 344, 347, 348], "avail": [0, 1, 2, 6, 33, 43, 52, 63, 135, 160, 203, 219, 223, 226, 232, 252, 257, 264, 304, 308, 310, 314, 320, 321, 324, 326, 327, 329, 330, 331, 332, 333, 334, 338, 342, 343, 345, 347, 348, 350, 351], "carri": [0, 327], "over": [0, 126, 163, 189, 221, 253, 254, 255, 304, 305, 306, 310, 319, 321, 326], "onc": [0, 2, 161, 314, 324, 334, 342], "covari": [0, 6, 10, 14, 17, 25, 33, 36, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 70, 79, 106, 107, 119, 140, 158, 171, 177, 190, 191, 192, 196, 232, 264, 266, 287, 306, 308, 314, 316, 317, 324, 326, 329, 338, 342, 344, 346, 349], "final": [0, 45, 184, 261, 264, 272, 287, 306, 314, 319, 320, 321, 324, 326, 327, 332, 333, 334, 335, 342, 343, 344, 346, 347, 348], "estim": [0, 1, 2, 3, 14, 15, 18, 23, 24, 33, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 51, 62, 63, 64, 66, 73, 74, 77, 79, 88, 96, 97, 98, 169, 170, 171, 175, 179, 184, 185, 190, 191, 192, 193, 195, 201, 202, 203, 207, 211, 212, 216, 217, 219, 223, 225, 226, 227, 232, 233, 234, 235, 239, 240, 242, 243, 244, 249, 252, 263, 264, 267, 272, 274, 279, 287, 304, 305, 306, 308, 310, 314, 315, 317, 324, 325, 326, 328, 333, 335, 337, 338, 341, 342, 343, 346, 347, 348, 349, 350], "oppos": [0, 342], "ext": [0, 306, 310], "per": [0, 6, 14, 24, 75, 120, 121, 122, 126, 190, 191, 216, 221, 278, 314, 348], "est": [0, 38, 45, 51, 179, 184, 330, 332], "first": [0, 2, 7, 25, 34, 36, 43, 77, 81, 100, 106, 110, 138, 139, 141, 142, 147, 150, 152, 169, 176, 193, 195, 201, 203, 204, 205, 212, 217, 219, 221, 223, 226, 232, 287, 306, 308, 310, 314, 321, 324, 326, 327, 329, 332, 333, 334, 338, 351], "call": [0, 278, 295, 306, 311, 312, 327, 334, 351], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 305, 306, 308, 314, 324, 326, 329, 333, 335, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349], "theta": [0, 1, 28, 33, 36, 39, 127, 133, 134, 171, 172, 175, 216, 225, 244, 306, 324, 332, 333, 334, 338, 342, 343, 346], "sigma": [0, 1, 2, 127, 133, 134, 171, 172, 175, 193, 195, 217, 306, 321, 324, 332, 333, 334, 342, 346], "omega": [0, 1, 22, 25, 64, 127, 133, 134, 171, 172, 175, 306, 321, 324, 330, 332, 333, 334, 341, 342, 343, 346], "fix": [0, 1, 2, 23, 24, 33, 44, 49, 55, 79, 96, 97, 98, 127, 133, 134, 188, 199, 207, 210, 224, 231, 237, 239, 240, 263, 308, 324, 327, 329, 330, 332, 338], "offdiagon": 0, "could": [0, 18, 306, 316, 324, 327, 332, 337, 338], "part": [0, 2, 18, 25, 81, 232, 304, 306, 308, 312, 313, 314, 327, 330, 333, 334, 338, 349], "NO": [0, 327], "probabl": [0, 232], "same": [0, 2, 8, 10, 18, 25, 28, 42, 53, 74, 75, 96, 97, 98, 108, 154, 205, 207, 216, 239, 240, 245, 264, 269, 281, 283, 285, 305, 306, 308, 309, 310, 314, 316, 319, 320, 321, 324, 326, 327, 329, 330, 332, 333, 342, 348, 351], "type": [0, 2, 6, 8, 10, 18, 27, 28, 35, 36, 55, 77, 103, 107, 128, 130, 168, 173, 197, 222, 250, 257, 264, 268, 269, 271, 274, 303, 306, 308, 312, 314, 319, 321, 323, 324, 326, 327, 330, 333, 335, 338, 346, 349], "now": [0, 306, 312, 332, 334], "investig": 0, "follow": [0, 2, 14, 36, 39, 162, 231, 304, 306, 308, 309, 312, 313, 314, 316, 317, 319, 320, 323, 324, 326, 327, 329, 330, 332, 333, 334, 335, 337, 348, 351], "like": [0, 25, 310, 316, 319, 327, 334, 338], "One": [0, 2, 25, 163, 168, 287, 291, 294, 308, 338, 351], "last": [0, 2, 8, 28, 32, 99, 202, 279], "left": [0, 4, 63, 314, 330, 332, 333, 337], "justifi": 0, "size": [0, 6, 13, 189, 232, 306, 309, 338], "13": [0, 1, 2, 64, 100, 104, 106, 108, 122, 255, 304, 305, 314, 320, 324, 327, 328, 331, 332, 339, 341, 344, 345, 348], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 285, 286, 287, 288, 292, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 320, 321, 322, 323, 325, 326, 327, 328, 337, 338, 341, 342, 344, 345, 346, 349, 350, 351], "n": [0, 6, 17, 22, 25, 26, 37, 40, 47, 79, 82, 185, 191, 192, 198, 215, 220, 223, 231, 234, 270, 304, 305, 306, 321, 324, 330, 332, 346], "flatten": [0, 306], "triangular": 0, "correl": [0, 14, 56, 57, 58, 59, 67, 68, 69, 70, 73, 79, 243, 287, 306, 324, 341], "abov": [0, 33, 36, 39, 73, 183, 232, 304, 305, 314, 319, 321, 327, 332, 335, 342, 351], "off": [0, 2, 306, 329, 333, 348], "diagon": [0, 171, 306, 324, 331, 332, 333], "obj": 0, "right": [0, 4, 8, 327, 330, 332, 351], "also": [0, 2, 25, 34, 85, 113, 189, 306, 310, 311, 312, 314, 316, 317, 319, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 338, 342, 343, 347, 348, 351], "22": [0, 2, 64, 86, 87, 89, 90, 100, 106, 122, 126, 255, 304, 305, 314, 321, 328, 331, 332, 345], "integ": [0, 6, 137, 306, 308, 329], "5": [0, 2, 28, 33, 36, 56, 58, 59, 63, 64, 68, 69, 75, 87, 88, 93, 98, 100, 104, 106, 109, 122, 126, 137, 159, 160, 161, 162, 168, 171, 197, 218, 232, 235, 240, 255, 272, 277, 278, 304, 305, 314, 316, 321, 324, 326, 327, 328, 330, 331, 332, 333, 335, 339, 341, 342, 344, 345, 348], "expon": [0, 1, 33, 263, 308], "regular": [0, 2, 10, 319, 325], "take": [0, 2, 23, 25, 80, 251, 287, 306, 309, 316, 320, 324, 326, 327, 333, 335, 338, 347], "19": [0, 64, 87, 100, 106, 122, 255, 304, 305, 328, 331, 332, 341, 344, 345], "posit": [0, 25, 191, 192, 232, 306, 308, 309, 317, 342], "neg": [0, 329], "For": [0, 2, 8, 36, 39, 120, 121, 122, 162, 188, 218, 222, 232, 236, 263, 264, 266, 268, 269, 271, 273, 274, 304, 305, 308, 310, 311, 312, 314, 319, 320, 321, 323, 324, 327, 329, 330, 333, 334, 335, 338, 342, 347, 351], "20": [0, 64, 90, 93, 100, 106, 122, 255, 304, 305, 314, 327, 328, 331, 332, 339, 341, 342, 344, 345], "In": [0, 2, 8, 35, 79, 92, 309, 310, 312, 314, 323, 324, 326, 327, 330, 331, 332, 333, 335, 338, 342, 346, 348, 349, 351], "observ": [0, 6, 14, 18, 43, 52, 108, 120, 121, 122, 125, 126, 203, 219, 223, 226, 227, 232, 277, 278, 304, 306, 321, 335, 338, 341, 345, 348], "em": [0, 14], "algorithm": [0, 2, 264, 266, 267, 268, 271, 277, 306, 308, 310, 319, 338, 349], "insead": 0, "calcul": [0, 14, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 88, 104, 257, 304, 305, 306, 321, 324, 325, 326, 333], "phi_1": 0, "mu_1": [0, 162, 321], "eta_1": [0, 28, 36, 60, 62, 64, 79, 114, 128, 132, 162, 190, 231, 233, 234, 235, 321, 330, 331, 332], "mu": [0, 162, 306, 321], "referenc": [0, 162, 306], "mu_i": 0, "implicitli": 0, "equival": [0, 327, 329, 348], "random": [0, 2, 3, 13, 17, 18, 22, 25, 26, 42, 55, 63, 66, 80, 82, 113, 128, 132, 135, 151, 188, 190, 191, 192, 220, 264, 272, 306, 308, 317, 321, 326, 332, 341, 342, 351], "operatornam": [0, 305, 321, 345], "var": [0, 25, 64, 321], "phi_i": 0, "eta_i": [0, 321], "j": [0, 232, 234, 305, 321], "phi_j": 0, "mu_j": 0, "eta_j": 0, "byte": 0, "evid": [0, 111, 306], "toward": [0, 108, 306], "token": [0, 329], "whitespac": 0, "parenthes": [0, 329], "multipl": [0, 2, 4, 8, 25, 28, 35, 55, 103, 138, 139, 150, 203, 222, 264, 274, 276, 294, 306, 314, 317, 329, 330, 332, 343, 344, 348, 349], "open": [0, 309, 312, 325, 327, 336], "keyword": [0, 308], "kept": [0, 92, 126, 306, 308, 324], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 306, 308, 310, 311, 312, 314, 316, 317, 319, 320, 324, 326, 327, 330, 333, 334, 336, 337, 338, 342, 343, 347, 349, 351], "csv": [0, 2, 175, 245, 280, 290, 306, 308, 310, 314, 316, 319, 320, 324, 326, 332, 333, 335, 342, 343, 347, 348], "wgt": [0, 2, 4, 6, 10, 28, 33, 36, 75, 84, 85, 93, 100, 106, 119, 135, 137, 159, 160, 161, 162, 166, 171, 172, 177, 197, 218, 233, 234, 235, 238, 263, 316, 321, 329, 330, 332, 334, 338, 341], "23": [0, 2, 63, 64, 66, 80, 87, 100, 106, 122, 190, 191, 192, 255, 304, 305, 314, 328, 331, 332, 344, 345], "titl": 0, "crash": [0, 306], "nmtran": [0, 6, 14], "There": [0, 2, 283, 314, 320, 332, 342, 348], "72": [0, 2], "includ": [0, 2, 3, 17, 22, 25, 48, 168, 232, 279, 305, 306, 309, 314, 319, 324, 325, 326, 327, 329, 331, 332, 333, 335, 341, 342, 344, 347, 348], "come": [0, 232, 312, 327], "filenam": [0, 18, 281, 285, 288, 293, 330], "repres": [0, 4, 6, 23, 24, 25, 34, 308, 314, 316, 317, 319, 321, 327, 330, 335], "rel": [0, 287, 306, 321, 342, 346], "path": [0, 1, 2, 10, 18, 53, 77, 105, 173, 174, 197, 245, 246, 247, 248, 249, 258, 259, 260, 262, 264, 280, 281, 282, 283, 285, 288, 289, 290, 292, 293, 298, 306, 308, 310, 311, 314, 316, 319, 320, 323, 324, 326, 330, 331, 332, 333, 335, 342, 343, 344, 347, 348, 349, 351], "work": [0, 287, 306, 309, 312, 320, 327, 330, 338], "directori": [0, 248, 249, 262, 281, 282, 283, 306, 308, 311, 312, 330, 344], "when": [0, 2, 14, 32, 36, 75, 99, 188, 272, 306, 309, 310, 312, 316, 319, 320, 324, 326, 327, 330, 334, 335, 341, 342, 344, 348], "invok": 0, "nmfe": 0, "content": [0, 2, 277, 278, 314, 316, 320, 324, 326, 327, 333, 342], "simpli": [0, 23, 312, 319, 320, 334], "seen": [0, 2, 316, 320, 324, 333, 342], "54": [0, 64, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 333, 339, 341, 345], "doe": [0, 2, 53, 81, 105, 183, 232, 281, 282, 283, 288, 289, 306, 317, 320, 324, 326, 327, 333, 334, 341], "pk": [0, 2, 6, 41, 48, 77, 113, 130, 171, 232, 306, 314, 324, 329, 332, 333, 334, 335, 347, 348, 349], "pred": [0, 90, 167, 171, 175, 306, 331, 332, 341, 345], "simpl": [0, 1, 171, 230, 279, 332, 334, 342], "merg": [0, 306, 312, 327], "placement": [0, 311], "place": [0, 2, 311, 327], "seem": 0, "restrict": [0, 283, 327], "automat": [0, 14, 33, 264, 306, 312, 314, 323, 327, 329, 343, 349], "creat": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 32, 35, 44, 75, 77, 78, 80, 81, 99, 103, 104, 111, 126, 180, 194, 205, 216, 247, 248, 250, 262, 272, 277, 278, 281, 282, 283, 284, 285, 286, 290, 291, 293, 295, 298, 304, 305, 306, 308, 310, 311, 312, 314, 315, 316, 319, 320, 321, 324, 328, 333, 335, 338, 339, 341, 342, 343, 344, 345, 348, 349, 350], "continu": [0, 2, 6, 18, 36, 306, 309, 312, 314, 321, 327, 329, 338], "factor": [0, 338], "compil": [0, 327], "11138": 0, "445": [0, 324], "though": [0, 327], "outsid": [0, 306, 309, 327], "standard": [0, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 244, 247, 287, 304, 306, 317, 321, 327, 332, 334, 338, 341, 343, 345, 346], "gfortran": 0, "8": [0, 2, 6, 52, 56, 57, 58, 59, 64, 67, 68, 69, 70, 93, 100, 106, 109, 122, 126, 159, 166, 197, 218, 255, 304, 305, 314, 316, 319, 324, 326, 327, 328, 331, 332, 339, 341, 342, 343, 344, 345, 348, 351], "hh": 0, "nep": 0, "h": [0, 308], "second": [0, 169, 308, 319, 334], "f": [0, 28, 40, 75, 137, 160, 171, 172, 178, 193, 195, 205, 216, 217, 221, 232, 244, 304, 306, 308, 313, 327, 330, 332, 334], "respect": [0, 2, 306, 309, 320, 321, 327, 332, 333, 334, 347], "ep": [0, 28, 171, 306, 332, 334], "implicit": [0, 306], "kind": [0, 6, 8, 130, 314, 327], "dpsize": 0, "main": [0, 286, 308, 312, 338, 351], "function": [0, 3, 10, 14, 25, 33, 36, 37, 40, 60, 61, 80, 85, 86, 87, 89, 90, 91, 96, 97, 98, 114, 125, 131, 142, 146, 147, 155, 188, 193, 194, 195, 198, 207, 216, 217, 230, 236, 239, 240, 243, 248, 257, 268, 271, 287, 291, 304, 306, 308, 310, 311, 312, 316, 317, 324, 326, 327, 330, 331, 333, 334, 337, 338, 341, 342, 343, 344, 350, 351], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 25, 29, 30, 33, 42, 52, 63, 81, 88, 113, 127, 128, 132, 133, 135, 138, 139, 150, 151, 172, 188, 192, 193, 195, 205, 216, 217, 221, 263, 264, 287, 306, 308, 314, 316, 317, 324, 331, 338, 341, 350, 351], "doesn": [0, 28, 285, 306, 324], "t": [0, 6, 7, 8, 28, 33, 37, 75, 83, 115, 137, 160, 198, 211, 212, 217, 227, 235, 279, 285, 291, 293, 305, 306, 321, 324, 330, 332, 339, 341, 348], "declar": [0, 2, 75, 161, 314, 329], "assign": [0, 6, 28, 75, 306, 308, 330], "stop": [0, 324], "entri": [0, 232, 281, 284, 285, 288], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 23, 24, 25, 28, 60, 61, 75, 81, 102, 110, 114, 119, 125, 131, 135, 161, 172, 187, 216, 264, 306, 314, 317, 332, 338], "separ": [0, 2, 10, 79, 92, 162, 189, 231, 264, 283, 286, 306, 308, 312, 314, 316, 317, 321, 327, 329, 338, 348], "thnn": 0, "nn": [0, 321], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 2, 6, 23, 25, 44, 183, 209, 232, 251, 306, 327, 332, 335], "ad": [0, 2, 9, 18, 33, 34, 36, 39, 47, 55, 92, 215, 268, 269, 271, 294, 306, 308, 314, 319, 326, 327, 329, 334, 343, 344, 349], "x": [0, 2, 24, 33, 75, 86, 87, 93, 104, 159, 190, 197, 218, 304, 314, 316, 321, 331, 332, 336, 342, 344], "xxe": 0, "xx": 0, "string": [0, 2, 6, 10, 18, 25, 28, 113, 119, 173, 174, 175, 250, 264, 271, 272, 290, 306, 316, 332, 333, 342, 346, 347], "tool": [1, 2, 3, 14, 18, 51, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 86, 87, 88, 89, 90, 91, 164, 165, 166, 167, 168, 169, 178, 190, 191, 192, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 289, 292, 298, 303, 304, 306, 307, 308, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 335, 337, 338, 342, 343, 346, 347, 348, 350, 351], "add": [1, 9, 14, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 75, 92, 115, 198, 215, 216, 217, 294, 306, 314, 319, 324, 327, 329, 332, 333, 334, 336, 349], "allometr": [1, 2, 33, 263, 306, 308, 349], "scale": [1, 2, 6, 18, 33, 62, 65, 71, 192, 263, 272, 287, 306, 308, 321, 336, 349], "pharmr": [1, 2, 3, 306, 312, 314, 317, 320, 323, 324, 325, 326, 333, 342, 343, 347, 348, 350], "command": [1, 306, 312, 314, 320, 323, 324, 325, 326, 327, 332, 333, 343, 350], "line": [1, 75, 306, 314, 320, 323, 324, 325, 326, 327, 332, 333, 343, 350], "To": [1, 2, 311, 312, 314, 320, 323, 324, 326, 327, 329, 331, 332, 333, 335, 336, 342, 343, 351], "initi": [1, 2, 15, 18, 23, 24, 33, 39, 42, 43, 46, 47, 48, 49, 77, 79, 80, 88, 96, 97, 98, 115, 185, 193, 195, 203, 205, 206, 207, 211, 212, 216, 217, 219, 223, 226, 227, 233, 234, 235, 239, 240, 242, 243, 263, 264, 272, 274, 293, 306, 308, 314, 319, 320, 321, 324, 326, 327, 330, 332, 333, 335, 342, 343, 347, 348, 349], "python": [1, 2, 164, 165, 166, 167, 168, 169, 305, 306, 308, 310, 314, 316, 317, 319, 320, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 347, 348, 350], "r": [1, 2, 14, 40, 164, 165, 166, 167, 168, 169, 290, 305, 306, 310, 311, 314, 316, 317, 319, 320, 323, 324, 325, 326, 330, 331, 332, 333, 334, 335, 342, 343, 347, 348, 350], "read_model": [1, 2, 175, 306, 314, 316, 319, 320, 324, 326, 330, 332, 333, 335, 342, 343, 347, 348, 351], "read_modelfit_result": [1, 2, 306, 314, 319, 320, 324, 326, 330, 331, 333, 335, 342, 343, 347, 348], "run_allometri": [1, 306], "start_model": [1, 2, 277, 310, 314, 319, 320, 324, 326, 333, 335, 342, 343, 347, 348], "start_model_result": [1, 310, 314, 319, 320, 324, 326, 333, 335, 342, 343, 347, 348], "re": [1, 2, 164, 165, 166, 167, 168, 248, 251, 259, 260, 261, 265, 266, 275, 282, 289, 292, 305, 310, 314, 319, 320, 324, 326, 331, 333, 335, 342, 343, 345, 347, 348], "code": [1, 14, 18, 20, 75, 118, 119, 135, 142, 146, 147, 155, 171, 175, 216, 217, 246, 306, 313, 314, 319, 320, 324, 325, 326, 327, 332, 333, 334, 335, 337, 338, 343, 347, 348, 351], "redefin": [1, 314, 320, 324, 326, 333, 343], "accordingli": [1, 314, 320, 324, 326, 333, 334, 343], "descript": [1, 2, 6, 18, 29, 52, 277, 278, 279, 287, 303, 304, 306, 310, 311, 314, 316, 319, 320, 324, 326, 333, 335, 342, 343, 344, 346, 347, 348, 349], "modelfitresult": [1, 2, 21, 249, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 286, 306, 314, 319, 320, 324, 326, 333, 335, 342, 343, 347, 348], "allometric_vari": [1, 2, 33, 263, 264, 308], "wt": [1, 28, 263, 264, 266, 314, 344], "reference_valu": [1, 2, 33, 263, 308], "refer": [1, 30, 33, 75, 82, 154, 218, 261, 263, 264, 279, 306, 314, 327, 332, 334, 335, 347, 350, 351], "70": [1, 2, 33, 100, 263, 332, 341], "appli": [1, 2, 18, 34, 193, 195, 205, 216, 217, 233, 234, 235, 263, 306, 308, 309, 316, 321, 324, 327, 329, 332, 333, 341, 342], "all": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 24, 25, 27, 28, 29, 33, 39, 44, 46, 48, 52, 72, 75, 79, 82, 84, 92, 97, 98, 101, 104, 106, 107, 109, 112, 113, 116, 127, 130, 133, 134, 136, 137, 142, 146, 147, 151, 155, 158, 168, 170, 172, 180, 181, 188, 190, 191, 205, 210, 216, 218, 224, 231, 232, 233, 234, 235, 237, 238, 239, 240, 262, 263, 267, 268, 269, 271, 279, 281, 285, 287, 288, 290, 294, 299, 304, 305, 306, 308, 309, 310, 312, 314, 315, 316, 317, 320, 321, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 342, 346, 347, 348, 349, 351], "cl": [1, 2, 4, 8, 24, 28, 33, 36, 39, 42, 47, 63, 75, 77, 81, 83, 94, 102, 113, 128, 130, 132, 137, 140, 151, 157, 160, 161, 162, 171, 172, 177, 180, 185, 203, 204, 208, 211, 212, 215, 219, 226, 230, 233, 234, 235, 263, 264, 266, 314, 321, 324, 326, 330, 332, 334, 348], "q": [1, 33, 47, 185, 263, 306, 332], "v": [1, 8, 24, 28, 33, 37, 63, 75, 77, 83, 95, 102, 113, 130, 135, 137, 160, 161, 162, 164, 165, 166, 167, 171, 172, 180, 198, 203, 204, 208, 211, 212, 219, 226, 227, 230, 263, 266, 312, 314, 321, 326, 329, 330, 332, 334, 345, 348], "75": [1, 33, 263, 314, 320], "lower_bound": [1, 2, 33, 263, 308], "lower": [1, 2, 6, 23, 24, 33, 36, 49, 73, 96, 97, 98, 127, 133, 134, 183, 207, 209, 210, 216, 224, 237, 240, 263, 264, 308, 317, 324, 330, 332, 342], "bound": [1, 23, 24, 33, 49, 74, 192, 210, 224, 233, 234, 235, 237, 243, 263, 281, 285, 288, 306, 308, 330, 342, 346], "upper_bound": [1, 2, 33, 263, 308], "upper": [1, 23, 24, 33, 36, 49, 96, 97, 98, 127, 133, 134, 183, 207, 210, 224, 237, 240, 263, 306, 308, 330, 332, 342], "should": [1, 6, 23, 33, 36, 39, 42, 49, 126, 189, 205, 263, 268, 269, 271, 306, 308, 309, 311, 312, 314, 317, 321, 324, 326, 327, 328, 329, 333, 338, 343], "true": [1, 2, 6, 9, 10, 15, 18, 24, 33, 34, 40, 45, 55, 62, 72, 81, 84, 92, 96, 97, 98, 115, 119, 126, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 177, 184, 191, 197, 199, 201, 202, 205, 216, 217, 223, 238, 239, 240, 241, 242, 246, 251, 255, 263, 279, 280, 287, 306, 314, 316, 320, 324, 326, 330, 332, 333, 334, 336, 342, 343, 344, 345, 346, 351], "No": [1, 6, 232, 288, 289, 327, 333], "select": [1, 2, 189, 218, 233, 235, 278, 304, 306, 308, 314, 319, 324, 326, 330, 333, 335, 336, 342, 343, 344, 346, 347, 348, 349], "see": [1, 2, 6, 8, 18, 36, 39, 232, 255, 263, 264, 266, 268, 269, 271, 273, 274, 308, 309, 310, 311, 312, 314, 316, 317, 319, 320, 324, 326, 327, 328, 330, 332, 333, 334, 338, 342, 343, 347], "about": [1, 2, 6, 309, 310, 314, 316, 320, 322, 323, 324, 326, 327, 332, 333, 342, 343, 347], "actual": [1, 2, 23, 162, 188, 314, 320, 324, 326, 327, 333, 342, 343], "minim": [1, 2, 306, 314, 320, 324, 326, 333, 342, 343, 346], "statu": [1, 2, 287, 306, 314, 317, 320, 324, 326, 327, 333, 342, 343], "time": [1, 2, 6, 7, 9, 10, 24, 28, 33, 42, 43, 75, 77, 84, 85, 93, 100, 108, 109, 116, 126, 137, 158, 159, 160, 161, 162, 163, 171, 172, 175, 182, 197, 203, 206, 218, 219, 221, 223, 226, 236, 264, 273, 306, 308, 310, 314, 316, 320, 321, 324, 326, 327, 329, 330, 331, 333, 334, 335, 338, 341, 342, 343, 345, 347], "you": [1, 2, 311, 312, 314, 320, 323, 324, 325, 326, 327, 331, 332, 333, 334, 338, 342, 343, 349, 350, 351], "look": [1, 2, 28, 53, 113, 151, 310, 314, 319, 320, 324, 326, 333, 334, 335, 342, 343], "summary_model": [1, 2, 306, 310, 314, 320, 324, 326, 333, 342, 343], "tabl": [1, 2, 62, 171, 193, 232, 278, 287, 304, 305, 306, 310, 312, 314, 315, 319, 320, 321, 324, 326, 328, 332, 333, 335, 339, 341, 342, 343, 344, 345, 347, 348], "gener": [1, 2, 6, 32, 63, 66, 76, 80, 99, 163, 189, 190, 191, 192, 264, 272, 291, 293, 306, 308, 310, 314, 316, 320, 321, 324, 325, 326, 332, 333, 337, 338, 342, 343, 348, 349], "summarize_modelfit_result": [1, 2, 306, 314, 320, 324, 326, 333, 342, 343], "minimization_success": [1, 2, 251, 257, 264, 266, 268, 269, 271, 272, 273, 274, 279, 287, 314, 319, 320, 324, 326, 333, 335, 342, 343, 346, 347, 348], "errors_found": [1, 2, 314, 320, 324, 326, 333, 342, 343], "pheno": [1, 8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 88, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 109, 110, 112, 113, 115, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 252, 255, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 323, 330, 331, 332, 334, 342], "phenobarb": [1, 171, 279, 332, 342], "scaled_model": [1, 2], "warnings_found": [1, 2, 314, 320, 324, 326, 333, 342, 343], "ofv": [1, 2, 55, 169, 253, 257, 268, 269, 271, 277, 278, 279, 287, 306, 314, 320, 324, 326, 333, 341, 342, 343], "aic": [1, 54, 257, 268, 269, 271, 306, 324, 326, 333, 343], "bic": [1, 2, 55, 257, 268, 269, 271, 306, 308, 310, 314, 319, 324, 326, 333, 335, 343, 348], "730": [1, 304, 321, 328], "894727": [1, 321, 328], "740": [1, 88, 93, 108, 159, 197, 218, 316, 332], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 279, 287, 314, 320, 324, 326, 333, 342, 343], "estimation_runtim": [1, 2, 287, 314, 320, 324, 326, 333, 342, 343], "_estim": [1, 324, 333], "32": [1, 2, 6, 64, 100, 106, 122, 255, 304, 305, 308, 314, 320, 328, 331, 332, 341, 342, 345], "005818": [1, 321], "121955": 1, "44555": [1, 321], "111053": [1, 321], "201526": [1, 321], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 321], "014030": 1, "fulli": [2, 310], "best": [2, 306, 314, 319, 324, 326, 327, 333, 335, 342, 343, 346, 347, 348, 349], "dataset": [2, 10, 11, 12, 18, 32, 33, 35, 50, 52, 63, 72, 77, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 103, 104, 108, 111, 112, 117, 120, 121, 122, 126, 135, 154, 159, 163, 173, 183, 189, 196, 197, 218, 232, 236, 241, 245, 264, 269, 305, 306, 308, 312, 321, 325, 326, 335, 345, 350], "combin": [2, 4, 79, 138, 139, 150, 153, 193, 195, 217, 231, 232, 264, 270, 273, 306, 319, 320, 321, 324, 327, 329, 332, 343], "ruvsearch": [2, 273, 275, 306, 349], "covsearch": [2, 264, 266, 306, 349], "run_amd": [2, 306], "dataset_path": [2, 77, 197, 332], "modeltyp": [2, 264, 308], "basic_pk": [2, 264, 308], "administr": [2, 5, 6, 16, 77, 99, 264, 306, 308, 319, 332], "oral": [2, 7, 77, 203, 264, 306, 308, 319, 329, 332], "search_spac": [2, 264, 266, 271, 274, 306, 308, 310, 319, 333, 335, 347], "let": [2, 14, 18, 82, 306, 314, 321, 329, 332, 334], "categor": [2, 6, 36, 306, 314, 316, 321, 329], "sex": [2, 309, 314, 329, 338], "ag": [2, 6, 266, 314, 329, 344], "occas": [2, 42, 264, 269, 306, 308, 326, 332], "visi": [2, 326], "specifi": [2, 6, 9, 28, 33, 39, 47, 85, 96, 98, 173, 183, 185, 193, 195, 215, 216, 217, 222, 232, 240, 247, 267, 306, 311, 314, 319, 320, 324, 326, 327, 330, 331, 335, 346, 347, 348], "iiv": [2, 17, 22, 25, 30, 39, 42, 46, 48, 55, 79, 113, 128, 151, 180, 205, 231, 268, 269, 271, 306, 308, 314, 326, 329, 330, 332, 349], "we": [2, 309, 312, 314, 321, 323, 324, 325, 327, 330, 332, 334, 338, 351], "our": [2, 309, 312, 313, 327, 338], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 24, 25, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 61, 65, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 92, 93, 96, 97, 98, 104, 114, 125, 127, 131, 133, 134, 135, 137, 160, 161, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 251, 252, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 298, 304, 306, 308, 310, 311, 314, 316, 317, 319, 320, 324, 326, 327, 332, 333, 334, 335, 338, 342, 343, 347, 348, 350, 351], "build": [2, 264, 307, 308, 317, 329, 332], "g": [2, 18, 25, 75, 81, 181, 222, 306, 312, 316, 320, 321, 324, 326, 329, 333, 338, 343, 346, 347, 348], "pkpd": [2, 113, 264, 274, 306, 347, 349], "drug_metabolit": [2, 264, 274, 319, 329, 347], "tmdd": [2, 222, 264, 274, 306, 347, 349], "rout": [2, 264], "iv": [2, 77, 203, 264, 306, 308, 319, 329], "ivor": [2, 77, 264, 308, 319], "cl_init": [2, 77, 264, 308, 332], "popul": [2, 18, 28, 49, 88, 89, 90, 114, 131, 137, 243, 264, 287, 306, 308, 344], "clearanc": [2, 33, 77, 94, 102, 264, 306, 308, 314, 324, 326, 334], "01": [2, 17, 25, 36, 77, 216, 243, 264, 266, 308, 314, 332, 341, 344], "vc_init": [2, 77, 264, 308, 332], "central": [2, 7, 8, 9, 28, 44, 47, 75, 77, 123, 137, 141, 143, 149, 160, 185, 203, 204, 206, 208, 211, 212, 215, 219, 223, 226, 227, 228, 230, 264, 306, 308, 312, 317, 330, 332, 348], "compart": [2, 6, 8, 9, 31, 34, 35, 37, 43, 44, 47, 77, 101, 103, 116, 123, 124, 136, 141, 143, 176, 182, 185, 203, 206, 215, 223, 228, 264, 306, 308, 319, 329, 332, 333, 335, 348], "volum": [2, 33, 47, 77, 95, 102, 264, 306, 308, 314, 326, 327], "mat_init": [2, 77, 264, 308, 332], "absorpt": [2, 77, 130, 141, 143, 152, 154, 203, 208, 219, 223, 226, 250, 264, 271, 277, 306, 308, 310, 319, 324, 326, 329, 333], "b_init": [2, 264, 274, 335, 347], "baselin": [2, 37, 40, 100, 106, 158, 194, 198, 264, 274, 306, 321, 335, 347], "effect": [2, 33, 36, 37, 39, 40, 55, 107, 113, 140, 151, 177, 180, 194, 198, 216, 257, 264, 266, 306, 308, 317, 323, 327, 329, 330, 332, 335, 338, 344, 347, 349], "emax_init": [2, 264, 274, 335, 347], "emax": [2, 37, 40, 46, 198, 329, 335], "ec50_init": [2, 264, 274, 335, 347], "ec50": 2, "met_init": [2, 264, 274, 335, 347], "equilibr": [2, 264, 335, 347], "mfl": [2, 250, 264, 266, 277, 306, 308, 314, 319, 322, 333, 335, 347, 349], "depend": [2, 6, 18, 28, 32, 35, 63, 79, 82, 99, 103, 113, 138, 139, 150, 193, 195, 205, 216, 217, 221, 306, 310, 311, 314, 316, 324, 334, 347, 348, 351], "lloq_limit": [2, 264, 308], "quantif": [2, 6, 183, 209, 232, 264, 308], "lloq_method": [2, 264, 308], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 38, 45, 52, 171, 175, 201, 202, 232, 264, 267, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 305, 306, 308, 314, 317, 327, 330, 332, 338, 342, 349, 351], "transform_blq": [2, 183, 209, 264, 306, 308, 332], "defin": [2, 8, 66, 119, 135, 141, 143, 152, 154, 162, 172, 232, 306, 314, 317, 327, 329, 330, 345], "differ": [2, 3, 18, 25, 55, 277, 279, 286, 304, 305, 306, 309, 310, 311, 314, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 341, 342, 343, 344, 347, 348, 351], "deafult": 2, "bodi": [2, 6, 10, 33, 309, 316, 327, 338], "weight": [2, 6, 10, 33, 91, 138, 139, 150, 153, 225, 244, 314, 316, 338, 343], "strict": [2, 251, 257, 264, 266, 268, 269, 271, 272, 273, 274, 306, 314, 319, 322, 324, 326, 327, 333, 335, 342, 343, 347, 348, 349], "criteria": [2, 251, 257, 264, 266, 268, 272, 274, 278, 306, 308, 314, 319, 324, 326, 333, 335, 342, 343, 346, 347, 348], "rounding_error": [2, 251, 264, 266, 268, 269, 271, 272, 273, 274, 287, 314, 319, 324, 326, 333, 335, 342, 343, 346, 347, 348], "sigdig": [2, 264, 266, 268, 269, 271, 272, 273, 274, 314, 319, 324, 326, 333, 335, 342, 343, 346, 347, 348], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 23, 24, 25, 26, 28, 29, 30, 33, 38, 39, 42, 45, 47, 49, 53, 63, 66, 77, 79, 80, 82, 86, 87, 88, 89, 90, 91, 105, 110, 113, 138, 139, 150, 157, 159, 166, 168, 173, 180, 181, 183, 184, 185, 189, 190, 191, 192, 193, 195, 197, 205, 209, 214, 215, 216, 217, 220, 221, 222, 231, 232, 233, 234, 235, 241, 245, 249, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 281, 282, 285, 286, 287, 288, 290, 293, 294, 298, 306, 308, 310, 311, 316, 321, 324, 326, 330, 332, 333, 335, 348], "mechanistic_covari": [2, 264], "priorit": [2, 306, 334], "element": [2, 317, 331, 351], "tupl": [2, 6, 7, 8, 25, 107, 163, 189, 264, 291, 299], "associ": [2, 8, 309, 326, 327], "extract": [2, 33, 99, 103, 107, 111, 250, 264, 306, 308, 325, 330], "retries_strategi": [2, 264], "how": [2, 3, 14, 191, 264, 268, 271, 306, 308, 309, 312, 314, 316, 319, 323, 324, 326, 327, 330, 332, 333, 334, 342, 344, 350], "option": [2, 6, 9, 14, 18, 25, 36, 39, 42, 51, 55, 77, 79, 86, 87, 89, 90, 91, 113, 189, 192, 197, 232, 250, 257, 264, 272, 274, 281, 285, 286, 288, 299, 304, 306, 308, 310, 319, 327, 330, 332, 347, 350, 351], "skip": [2, 264, 268, 273, 306, 308, 314, 324, 343], "all_fin": [2, 264], "seed": [2, 26, 63, 66, 80, 190, 191, 192, 220, 264, 272, 308, 342], "step": [2, 14, 15, 18, 26, 37, 38, 40, 45, 51, 179, 184, 198, 201, 202, 220, 266, 279, 286, 287, 306, 308, 312, 314, 320, 323, 324, 326, 327, 333, 338, 342, 343, 351], "sampl": [2, 14, 25, 80, 188, 189, 190, 191, 192, 321, 342], "dv_type": [2, 222, 264, 274, 348], "dictionari": [2, 5, 10, 14, 16, 17, 22, 24, 25, 29, 86, 87, 89, 90, 91, 101, 107, 116, 189, 207, 210, 222, 224, 264, 274, 281, 282, 285, 288, 289, 290, 292, 293, 299, 330, 348], "dv": [2, 6, 10, 28, 75, 84, 85, 93, 100, 110, 113, 126, 137, 138, 139, 150, 159, 160, 166, 167, 168, 171, 172, 175, 193, 195, 197, 205, 209, 211, 212, 216, 217, 218, 221, 222, 232, 264, 273, 274, 306, 316, 330, 332, 334, 345], "target": [2, 222, 344, 348], "kei": [2, 107, 222, 257, 277, 285, 327, 343, 348], "drug": [2, 8, 44, 149, 222, 306, 329, 338, 347, 348, 349], "complex": [2, 306, 312, 323, 348], "drug_tot": [2, 222, 348], "target_tot": [2, 348], "parameter_uncertainty_method": [2, 14, 15, 38, 45, 184, 201, 202, 264, 267, 306, 320, 330, 332], "uncertainti": [2, 14, 45, 63, 64, 66, 184, 190, 191, 192, 264, 267, 306, 308, 321, 331, 349], "current": [2, 25, 38, 39, 60, 61, 75, 76, 86, 87, 89, 90, 91, 114, 125, 131, 141, 154, 160, 194, 201, 202, 203, 208, 219, 230, 232, 236, 250, 252, 266, 270, 274, 285, 287, 295, 305, 306, 308, 310, 312, 314, 315, 319, 321, 323, 325, 326, 327, 328, 329, 330, 335, 337, 338, 339, 341, 342, 343, 344, 345, 347], "implement": [2, 14, 37, 194, 198, 222, 281, 283, 285, 288, 319, 327, 330, 335, 338, 346, 348, 349], "sandwich": [2, 14, 15, 45, 201, 202, 264, 267, 330], "smat": [2, 14, 264, 267], "rmat": [2, 14, 264, 267], "efim": [2, 14, 264, 306], "ignore_datainfo_fallback": [2, 264, 306], "wether": [2, 44], "connect": [2, 8, 18, 44, 107, 123, 216, 272, 281, 283, 286, 294, 306, 308, 316, 319, 327, 335, 338, 349, 350], "datainfo": [2, 18, 32, 35, 85, 159, 173, 196, 197, 245, 264, 306, 310, 350], "infer": 2, "regard": [2, 319, 327, 333, 335, 342], "explicitli": [2, 308, 326, 327], "user": [2, 39, 105, 264, 306, 316, 317, 324, 326, 327, 330, 331, 332, 333, 334], "varibl": 2, "fals": [2, 6, 9, 13, 14, 17, 18, 22, 23, 24, 30, 34, 36, 38, 40, 44, 49, 55, 62, 72, 74, 81, 84, 92, 96, 97, 98, 115, 119, 126, 127, 133, 134, 137, 138, 139, 140, 146, 147, 150, 151, 153, 154, 155, 156, 157, 177, 189, 191, 199, 207, 210, 216, 223, 224, 237, 239, 240, 242, 243, 245, 250, 251, 255, 264, 272, 279, 280, 282, 287, 290, 298, 305, 314, 316, 320, 330, 332, 334, 336, 344, 345, 346], "absenc": [2, 327], "correspond": [2, 9, 14, 18, 214, 305, 310, 327, 329, 330, 345], "file": [2, 10, 18, 53, 78, 105, 171, 173, 174, 175, 245, 246, 247, 258, 259, 280, 281, 282, 283, 285, 288, 289, 290, 292, 293, 306, 308, 310, 312, 314, 319, 320, 323, 324, 326, 327, 330, 331, 332, 333, 334, 335, 337, 342, 343, 347, 348, 349, 350], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 284, 286, 287, 290, 291, 292, 293, 306, 311, 314, 316, 327, 331, 332, 333, 350], "elimin": [2, 77, 130, 142, 146, 147, 155, 204, 211, 212, 227, 250, 306, 319, 329, 333], "vc": [2, 47, 185, 314, 324, 326, 332], "mat": [2, 48, 77, 305, 306, 307, 313, 314, 324, 326, 332, 334, 343], "proport": [2, 39, 138, 139, 150, 153, 189, 193, 195, 216, 217, 232, 306, 332], "foce": [2, 14, 15, 38, 45, 184, 201, 202, 267, 306, 308, 320, 330, 332], "interact": [2, 14, 15, 38, 45, 171, 184, 201, 202, 306, 309, 310, 320, 327, 330, 332, 338, 351], "requir": [2, 75, 306, 308, 314, 323, 327, 335, 341, 342], "cmt": [2, 32, 35, 99, 103, 306], "dose": [2, 5, 6, 7, 8, 9, 16, 32, 34, 35, 43, 92, 99, 101, 103, 108, 109, 115, 119, 143, 154, 176, 182, 203, 218, 221, 306, 316], "creation": [2, 321, 333], "easili": [2, 330], "differenti": [2, 83, 330], "id": [2, 5, 6, 10, 16, 52, 64, 82, 84, 85, 93, 100, 104, 106, 108, 109, 112, 122, 126, 159, 171, 172, 175, 190, 197, 218, 255, 305, 306, 308, 316, 321, 328, 331, 332, 334, 345], "admid": [2, 5, 6, 7, 8, 9, 16, 28, 32, 35, 47, 75, 99, 103, 137, 160, 185, 203, 204, 208, 211, 212, 215, 219, 223, 226, 227, 230, 330, 332], "data": [2, 6, 18, 30, 86, 87, 88, 89, 90, 91, 106, 119, 171, 172, 175, 183, 193, 195, 199, 209, 217, 232, 264, 278, 304, 306, 310, 316, 321, 326, 327, 329, 330, 332, 334, 338], "well": [2, 63, 149, 232, 310, 314, 319, 320, 324, 326, 327, 329, 332, 333, 335, 341, 342, 343, 347, 348, 350], "anoth": [2, 9, 18, 28, 141, 295, 332], "assum": [2, 25, 39, 44, 281, 306, 321, 327, 334], "correct": [2, 10, 306, 327, 332, 351], "along": [2, 327], "wai": [2, 24, 39, 142, 146, 147, 155, 232, 306, 310, 312, 316, 320, 327, 329, 330, 342, 351], "specif": [2, 14, 18, 24, 51, 85, 189, 216, 248, 251, 306, 308, 314, 316, 324, 327, 329, 330, 333, 338, 347, 349], "support": [2, 8, 14, 18, 28, 38, 39, 60, 61, 76, 77, 86, 87, 89, 90, 91, 114, 125, 131, 138, 139, 150, 201, 202, 203, 208, 219, 232, 266, 273, 295, 306, 308, 310, 314, 316, 317, 319, 320, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 342, 347], "nonmem": [2, 18, 75, 76, 85, 120, 121, 122, 197, 214, 270, 306, 307, 310, 312, 323, 325, 330, 331, 332, 338, 349], "rate": [2, 6, 8, 9, 16, 40, 47, 77, 154, 203, 208, 219, 223, 226, 306, 310, 329], "via": [2, 306, 308, 310, 311, 312, 323, 325, 329, 330, 332, 334, 351], "exclud": [2, 119, 277, 324, 326, 327, 333, 346], "pleas": [2, 310, 312, 319, 323, 324, 327, 330, 332, 347, 351], "featur": [2, 250, 312, 314, 319, 320, 322, 324, 325, 326, 327, 335, 343, 347, 348, 349], "languag": [2, 118, 171, 250, 309, 314, 317, 322, 327, 333, 347, 349], "fo": [2, 14, 38, 201, 202, 267, 306, 308, 319, 320, 329, 333, 338], "zo": [2, 271, 277, 306, 310, 329, 333], "seq": [2, 329, 333], "lagtim": [2, 208, 219, 250, 306, 310, 329, 333], "ON": [2, 327, 329, 333], "transit": [2, 8, 124, 141, 215, 223, 250, 306, 329, 333], "10": [2, 24, 42, 52, 64, 79, 87, 100, 104, 106, 108, 122, 183, 206, 209, 210, 220, 224, 228, 232, 234, 255, 272, 304, 305, 314, 316, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 341, 342, 343, 344, 345, 348, 351], "peripher": [2, 8, 47, 123, 185, 215, 250, 271, 277, 306, 310, 319, 329, 332, 333, 348], "cat": [2, 36, 314, 329], "note": [2, 4, 6, 23, 35, 75, 76, 104, 113, 120, 121, 122, 216, 232, 279, 280, 281, 285, 288, 304, 316, 319, 324, 326, 331, 332, 334, 335, 344, 348], "overriden": 2, "ignor": [2, 9, 120, 121, 122, 171, 264, 306, 308, 332, 334], "soon": 2, "stai": [2, 25], "vice": 2, "versa": 2, "instanc": [2, 140, 177, 264, 314, 329, 342], "below": [2, 6, 183, 209, 232, 311, 312, 319, 320, 324, 326, 327, 333, 335, 342, 343, 347, 348], "might": [2, 75, 310, 327, 338, 342, 351], "applic": [2, 77, 280, 298, 310, 327, 329, 338], "detail": [2, 232, 263, 266, 268, 269, 271, 273, 274, 310, 320, 327, 330, 333, 335, 341, 343, 347, 350], "singl": [2, 8, 10, 23, 25, 188, 231, 236, 249, 270, 276, 279, 281, 306, 308, 314, 317, 319, 321, 324, 327, 329], "manual": [2, 314, 316, 329], "exact": [2, 327], "workflow": [2, 3, 260, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 306, 310, 323, 325, 327, 333, 338], "henc": 2, "visual": [2, 293], "extens": [2, 18, 281, 283, 316, 327, 330], "principl": [2, 330], "question": [2, 309], "becom": [2, 231, 306, 308, 319, 338], "relat": [2, 3, 281, 285, 286, 288, 306, 309, 344], "acronym": 2, "six": 2, "subhead": 2, "modetyp": 2, "distribut": [2, 17, 22, 25, 42, 47, 63, 66, 79, 130, 162, 170, 185, 188, 190, 191, 192, 231, 235, 269, 295, 304, 306, 308, 321, 327, 329, 333, 341, 342, 349], "metabolit": [2, 8, 44, 149, 306, 329, 347, 349], "term": [2, 193, 306, 324, 327], "keep": [2, 14, 23, 183, 189, 268, 281, 306, 309, 317, 324, 327, 329], "iov": [2, 25, 42, 113, 128, 151, 181, 269, 306, 308, 332, 341, 349], "explain": [2, 232, 314, 319, 327, 338, 349], "ruv": [2, 205], "power": [2, 36, 216, 232, 273, 327, 332, 338, 339, 341, 343], "vari": [2, 158, 221, 273, 306, 308, 343], "identifi": [2, 6, 30, 314, 316, 324, 327, 341, 349], "chosen": [2, 205, 306, 319, 324, 332, 349], "analysi": 2, "compon": [2, 308, 317, 323, 327, 330, 341], "pd": [2, 6, 15, 37, 40, 46, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 79, 82, 86, 87, 88, 89, 90, 91, 99, 100, 103, 104, 106, 108, 109, 111, 113, 117, 122, 126, 129, 163, 164, 165, 166, 167, 168, 169, 170, 173, 189, 190, 191, 192, 197, 198, 242, 243, 253, 254, 255, 257, 276, 277, 278, 279, 284, 287, 306, 316, 329, 335], "stage": [2, 314], "reduced_stepwis": [2, 271, 277, 306, 310, 333], "iiv_strategi": [2, 268, 271, 306, 308, 310, 324, 333], "absorption_delai": [2, 271, 306, 310, 333], "rank_typ": [2, 257, 268, 269, 271, 308, 310, 324, 326, 333], "mix": [2, 42, 55, 147, 212, 257, 306, 317, 323, 326, 329, 330, 333, 338], "cutoff": [2, 221, 253, 254, 255, 257, 268, 269, 271, 306, 308, 310, 324, 326, 333], "expect": [2, 14, 55, 63, 66, 309, 311, 327, 341], "rerun": [2, 349], "brute_forc": [2, 306], "fullblock": [2, 268, 271, 306, 324, 333], "no_add": [2, 268, 271, 306, 324, 333], "tri": [2, 308, 333], "list_of_paramet": [2, 39, 42, 269, 308, 326], "remain": [2, 25, 93, 232, 309, 324, 327], "group": [2, 24, 30, 163, 168, 189, 273, 308, 325, 343], "p_valu": [2, 273, 308, 343], "05": [2, 47, 56, 57, 58, 59, 67, 68, 69, 70, 185, 304, 308, 314, 331, 332, 341, 344], "p_forward": [2, 266, 308, 314], "p_backward": [2, 266, 308, 314], "max_step": [2, 266, 308, 314], "scm": [2, 266, 306, 314, 338, 340], "forward": [2, 266, 306, 308, 314, 344], "backward": [2, 266, 279, 306, 308, 314, 344], "entir": [2, 309, 312, 327, 329, 342], "three": [2, 306, 317, 327, 334], "directli": [2, 44, 104, 143, 281, 285, 288, 306, 308, 310, 317, 327, 330, 332, 338], "due": [2, 306, 343, 346], "miss": [2, 6, 100, 106, 306], "next": [2, 53, 306, 324, 327, 332, 333, 334, 343], "mechanist": 2, "exploratori": [2, 314, 329], "number_of_candid": [2, 272, 342], "fraction": [2, 7, 192, 272, 304, 321, 342], "ucp": [2, 65, 71, 192, 272], "use_initial_estim": [2, 272, 342], "prefix_nam": [2, 272, 342], "previous": [2, 63, 66, 168, 170, 306, 334], "variou": [2, 75, 232, 277, 278, 287, 306, 308, 309, 312, 314, 317, 319, 320, 324, 325, 326, 333, 335, 338, 342, 343, 347, 348], "summari": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 256, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 306, 310, 314, 319, 320, 321, 324, 326, 333, 335, 339, 342, 343, 347, 348], "access": [2, 310, 314, 316, 319, 320, 324, 326, 327, 330, 332, 333, 334, 335, 342, 343, 347, 348, 351], "json": [2, 10, 259, 261, 280, 290, 306, 308, 310, 314, 316, 319, 320, 324, 326, 333, 335, 342, 343, 347, 348], "format": [2, 18, 76, 306, 308, 311, 314, 317, 319, 320, 323, 324, 325, 326, 327, 330, 332, 333, 335, 337, 342, 343, 347, 348], "summary_tool": [2, 306, 314, 319, 320, 324, 326, 333, 335, 342, 343, 348], "candid": [2, 271, 272, 306, 308, 310, 314, 319, 320, 335, 342, 343, 348, 349], "compar": [2, 257, 304, 306, 314, 319, 320, 335, 338, 342, 343, 348, 349], "rank": [2, 257, 268, 269, 271, 306, 308, 314, 319, 335, 342, 343, 346, 348, 349], "selected_model": 2, "nan": [2, 104, 243, 304, 306, 314, 319, 320, 321, 324, 326, 332, 333, 341, 342, 343, 344, 346, 348], "modelsearch_run7": 2, "depot": [2, 7, 8, 9, 44, 141, 149, 203, 219, 223, 306, 329, 332, 333], "2364": 2, "853749": 2, "iivsearch_run34": 2, "mdt": [2, 306, 332], "2397": 2, "309843": 2, "best_ruvsearch_2": [2, 343], "time_varying2": [2, 343], "iiv_on_ruv": [2, 273, 306, 339, 341, 343], "2496": 2, "804117": 2, "iovsearch_run6": [2, 326], "2619": 2, "709509": 2, "2645": 2, "684455": 2, "dofv": [2, 253, 254, 277, 304, 305, 306, 314, 339, 341, 342, 343], "n_param": [2, 314, 319, 326, 335, 342, 343, 348], "d_param": [2, 314, 319, 326, 335, 342, 343, 348], "000000": [2, 49, 56, 57, 58, 67, 314, 321, 324, 326, 331, 333, 335, 343, 348], "456094": 2, "11": [2, 64, 86, 87, 89, 100, 104, 106, 108, 122, 255, 304, 305, 310, 314, 321, 323, 324, 326, 327, 328, 331, 332, 333, 341, 344, 345, 348, 351], "99": [2, 49, 134, 171, 243, 304, 314, 330, 332], "494274": 2, "122": 2, "905392": 2, "25": [2, 64, 86, 89, 90, 93, 100, 106, 109, 122, 159, 197, 255, 304, 305, 314, 316, 324, 328, 331, 332, 333, 339, 341, 342, 345], "974946": 2, "modelsearch_run1": [2, 306], "modelsearch_run2": 2, "modelsearch_run3": 2, "modelsearch_run4": 2, "retries_run1": [2, 342], "retries_run2": [2, 342], "retries_run3": [2, 342], "retries_run4": [2, 342], "retries_run5": [2, 342], "2272": 2, "860804": 2, "35": [2, 64, 93, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 343, 345], "2091": 2, "335594": 2, "332746": 2, "516": 2, "332840": 2, "1089": 2, "2032": 2, "002236": 2, "2700": 2, "2530": 2, "976558": 2, "1663": 2, "2476": 2, "102607": 2, "2178": 2, "2600": 2, "287460": 2, "3740": 2, "2123": 2, "583364": 2, "2210": 2, "pop_cl_estim": [2, 314, 320, 326, 343], "40": [2, 64, 93, 100, 104, 106, 122, 126, 159, 183, 197, 218, 255, 304, 305, 316, 320, 328, 331, 332, 342, 344, 345], "63140": 2, "91": [2, 339, 341], "36500": 2, "505": 2, "27": [2, 64, 100, 106, 122, 126, 255, 304, 305, 314, 328, 331, 332, 333, 335, 343, 345], "36780": 2, "1078": 2, "46": [2, 64, 93, 100, 106, 122, 255, 304, 305, 320, 328, 331, 332, 345], "37230": 2, "2687": 2, "82": 2, "91807": 2, "1651": 2, "66": [2, 314, 339], "09260": 2, "2166": 2, "09": [2, 39, 46, 48, 195, 205, 217, 314, 324, 332, 333, 334, 335, 339], "88190": 2, "3728": 2, "76": [2, 314], "26100": 2, "2196": 2, "26": [2, 64, 100, 106, 122, 255, 304, 305, 314, 326, 328, 331, 332, 341, 344, 345], "26170": 2, "pop_cl_s": 2, "pop_cl_rs": 2, "pop_vcage_rs": 2, "pop_clsex_estim": [2, 314], "pop_clsex_s": 2, "pop_clsex_rs": 2, "pop_mdtsex_estim": 2, "pop_mdtsex_s": 2, "pop_mdtsex_rs": 2, "pop_vcsex_estim": [2, 314], "pop_vcsex_s": 2, "pop_vcsex_rs": 2, "127": [2, 6, 324], "summary_error": [2, 314, 320, 324, 326, 333, 342], "summarize_error": [2, 306, 314, 320, 324, 326, 333, 342], "datafram": [2, 6, 15, 18, 24, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 79, 82, 86, 87, 89, 90, 91, 100, 104, 106, 163, 164, 165, 166, 167, 168, 170, 173, 189, 190, 191, 192, 197, 242, 253, 254, 255, 257, 276, 277, 278, 279, 284, 287, 290, 306, 316, 338, 342], "messag": [2, 284, 306, 308, 314, 320, 324, 326, 333, 342], "index": [2, 10, 18, 24, 25, 28, 38, 51, 52, 63, 66, 73, 74, 109, 126, 179, 201, 202, 266, 276, 279, 290, 305, 306, 321, 323, 330, 332, 342, 344, 351], "categori": [2, 6, 18, 36, 42, 172, 276, 314, 319, 320, 324, 326, 329, 333, 335, 342], "error_no": [2, 314, 320, 324, 326, 333, 342], "plot": [2, 164, 165, 166, 167, 168, 169, 170, 306, 321, 328, 338], "found": [2, 8, 24, 113, 276, 294, 304, 305, 306, 312, 315, 318, 321, 322, 323, 324, 326, 327, 330, 331, 333, 341, 342, 343, 347, 349, 350, 351], "report": [2, 247, 306, 312, 325, 338], "panda": [2, 6, 10, 306, 316, 317, 338], "io": [2, 312, 317, 323], "style": 2, "styler": 2, "0x7f4d03d57ad0": 2, "nbsp": 2, "rse": [2, 304, 331, 346], "pop_cl": [2, 4, 304, 332], "0637": 2, "pop_vc": [2, 332], "6158": 2, "pop_mat": [2, 48, 332, 334], "0313": 2, "pop_qp1": [2, 332], "108": [2, 93, 109, 159, 197, 218, 316, 331, 332], "3610": 2, "pop_vp1": [2, 332], "2972": 2, "pop_mdt": [2, 332], "9278": 2, "time_vari": [2, 221, 273, 341, 343], "2106": 2, "iiv_vc": [2, 332], "1818": 2, "iiv_cl": [2, 17, 22, 25, 332, 334], "2668": 2, "iiv_cl_iiv_mdt": 2, "1068": 2, "iiv_mdt": 2, "3711": 2, "iiv_ruv1": 2, "1777": 2, "omega_iov_2": 2, "1395": 2, "1436": 2, "alt": [2, 164, 165, 166, 167, 168, 169, 170, 304, 321, 328], "layerchart": [2, 164, 165, 166, 167, 169, 304, 328], "run_structsearch": [2, 319, 335, 342, 347, 348], "dvid": [2, 6, 18, 44, 93, 110, 113, 138, 139, 150, 193, 195, 200, 205, 216, 217, 221, 319, 330, 335, 339, 341, 343], "directeffect": [2, 329, 335, 347], "page": [3, 305, 307, 312, 320, 333, 334, 347], "public": [3, 317], "modul": [3, 8, 306, 311, 316, 330, 332, 337, 351], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 310, 316, 323, 327, 330, 332], "statement": [3, 4, 8, 18, 33, 34, 36, 37, 39, 41, 42, 46, 47, 48, 75, 137, 160, 161, 162, 178, 180, 185, 186, 193, 194, 195, 198, 203, 204, 205, 208, 211, 212, 215, 216, 217, 219, 221, 223, 226, 227, 230, 232, 233, 234, 235, 244, 251, 306, 308, 314, 319, 327, 332, 338, 346], "transform": [3, 18, 34, 170, 193, 195, 199, 217, 232, 233, 234, 235, 306, 323, 333, 334, 341, 342, 350], "manipul": [3, 24, 316, 325, 332, 334, 350], "built": [3, 160, 252, 308, 312, 319, 325], "run": [3, 79, 168, 170, 183, 216, 248, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 285, 292, 304, 305, 306, 315, 323, 325, 327, 328, 331, 337, 338, 341, 344, 345, 349, 351], "packag": [3, 308, 317, 323, 325, 327, 336, 351], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 25, 28, 39, 60, 61, 63, 88, 93, 101, 114, 116, 125, 131, 135, 157, 193, 195, 206, 216, 217, 228, 229, 306, 308, 309, 327, 330, 338, 345], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 309, 312, 325, 327, 330], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 42, 52, 99, 257, 268, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 313, 314, 319, 321, 324, 326, 327, 328, 330, 332, 333, 334, 335, 336, 341, 342, 343, 344, 347, 348], "represent": [4, 250, 293, 316, 323, 334], "togeth": [4, 25, 208, 219, 312, 317, 321, 328, 343, 351], "expr": [4, 9, 25, 28, 37, 40, 93, 113, 125, 138, 139, 150, 157, 193, 194, 195, 198, 205, 206, 209, 216, 217, 221, 228, 229, 306], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 25, 28, 222, 309, 327, 338, 348], "hand": [4, 8, 63], "side": [4, 8, 63, 199], "eta_cl": [4, 39, 42, 332, 334], "rhs_symbol": [4, 8, 27], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 282, 284, 286, 290, 291, 293], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 282, 284, 290], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 35, 53, 188, 189, 200, 218, 230, 232, 291, 293, 294, 306, 308, 316, 317, 332, 334], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 38, 201, 248, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 288, 289, 290, 291, 293, 306], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28, 330], "substitut": [4, 5, 7, 8, 16, 17, 22, 25, 27, 28, 327, 332], "dict": [4, 5, 6, 10, 16, 17, 22, 24, 25, 28, 51, 65, 86, 87, 89, 90, 91, 96, 98, 101, 115, 116, 170, 187, 207, 210, 218, 222, 224, 240, 257, 264, 274, 281, 282, 285, 288, 289, 292, 293, 299, 316, 330], "old": [4, 28, 187, 306, 341], "new": [4, 6, 9, 10, 14, 17, 22, 23, 24, 25, 26, 28, 29, 34, 39, 42, 46, 48, 49, 76, 80, 81, 92, 96, 97, 98, 126, 187, 188, 189, 193, 195, 197, 205, 207, 209, 213, 216, 217, 239, 240, 243, 294, 295, 308, 309, 312, 314, 316, 324, 327, 329, 332, 333, 337, 341, 342, 343, 349], "pair": [4, 5, 8, 16, 17, 22, 25, 28, 36, 73, 218, 277, 308], "return": [4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 288, 290, 293, 295, 298, 299, 306, 327, 332, 342, 347], "updat": [4, 9, 10, 18, 24, 28, 197, 206, 228, 242, 243, 245, 272, 306, 308, 312, 324, 325, 327, 332, 333, 334, 338, 343, 350, 351], "b": [4, 37, 40, 129, 194, 198, 327, 333, 346], "to_dict": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 282, 284, 290], "amount": [5, 6, 7, 8, 16, 37, 115, 306, 316, 319, 330, 333], "immut": [5, 6, 10, 13, 15, 16, 18, 23, 24, 25, 27, 28, 29, 30, 286, 290, 291, 293, 306, 332], "int": [5, 8, 9, 16, 28, 33, 38, 44, 51, 52, 55, 63, 66, 74, 80, 108, 110, 113, 120, 121, 123, 124, 138, 139, 150, 166, 179, 183, 189, 190, 191, 192, 193, 195, 201, 202, 205, 215, 216, 217, 220, 221, 223, 264, 265, 266, 270, 272, 273, 276, 287, 348], "amt": [5, 7, 8, 10, 16, 28, 33, 47, 75, 84, 85, 93, 100, 109, 115, 137, 159, 160, 161, 162, 171, 172, 185, 197, 203, 204, 208, 211, 212, 215, 218, 219, 223, 226, 227, 230, 316, 330, 332, 334], "unknown": [6, 157, 316], "unit": [6, 18, 135, 342], "ratio": [6, 266, 273, 306, 308, 316, 343], "datatyp": [6, 18, 173, 197], "float64": [6, 10, 62, 69, 70, 73, 88, 89, 90, 91, 109, 126, 252, 316, 330, 331, 332], "descriptor": [6, 10, 18, 33], "str": [6, 7, 8, 10, 17, 18, 22, 23, 25, 28, 30, 33, 36, 39, 41, 42, 45, 47, 49, 52, 63, 77, 81, 82, 84, 88, 93, 97, 105, 110, 113, 118, 128, 129, 130, 132, 135, 138, 139, 140, 150, 151, 157, 160, 163, 166, 169, 170, 173, 174, 175, 177, 180, 181, 183, 185, 189, 192, 193, 194, 195, 197, 200, 205, 206, 209, 213, 215, 216, 217, 221, 222, 228, 229, 231, 232, 233, 234, 235, 238, 239, 245, 246, 248, 249, 250, 251, 252, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 303, 306], "colum": 6, "measur": [6, 309, 316, 327], "bool": [6, 9, 18, 23, 30, 33, 34, 36, 40, 44, 49, 55, 62, 72, 74, 81, 84, 92, 115, 119, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 189, 191, 205, 216, 217, 223, 242, 243, 245, 246, 251, 263, 264, 272, 279, 280, 282, 287, 290, 298], "discret": [6, 316, 326], "union": [6, 110, 113, 138, 139, 150, 170, 193, 195, 205, 206, 216, 217, 221, 228], "label": [6, 306], "bar": [6, 321], "dtype": [6, 10, 52, 62, 65, 69, 70, 73, 74, 88, 89, 90, 91, 108, 109, 122, 126, 252, 316, 331, 332], "nomin": [6, 316], "ordin": [6, 316], "rang": [6, 82, 290, 329], "na": [6, 232], "int8": 6, "sign": [6, 234, 327], "bit": 6, "128": 6, "int16": 6, "16": [6, 64, 87, 100, 106, 122, 217, 235, 255, 304, 305, 314, 324, 326, 327, 328, 331, 332, 339, 341, 344, 345, 348], "768": 6, "767": 6, "int32": [6, 10, 52, 316], "147": 6, "483": 6, "648": 6, "647": [6, 324], "int64": [6, 122, 332], "64": 6, "223": [6, 315], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": 6, "uint16": 6, "65": [6, 314], "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 64, 87, 93, 100, 106, 122, 255, 304, 305, 314, 324, 326, 328, 331, 332, 339, 341, 345], "446": 6, "744": [6, 88, 93, 108, 159, 197, 218, 316, 331, 332], "073": 6, "709": 6, "551": 6, "615": 6, "float16": 6, "binari": [6, 327], "float": [6, 23, 33, 39, 46, 48, 49, 54, 55, 73, 74, 77, 170, 183, 192, 209, 216, 221, 232, 253, 254, 255, 257, 263, 264, 266, 268, 269, 271, 272, 273, 274, 287, 306], "6": [6, 64, 88, 93, 100, 106, 122, 126, 159, 197, 218, 255, 304, 305, 314, 316, 321, 324, 326, 327, 328, 331, 332, 333, 335, 341, 342, 343, 344, 345, 348], "55": [6, 64, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 333, 341, 345], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 85, 236, 306, 308, 330], "tran": [6, 85, 236, 306, 308, 330], "date": [6, 82, 85, 236, 306, 308, 327, 351], "common": [6, 36, 66, 299, 322, 327, 350], "birth": 6, "human": [6, 290, 338], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 316, 338], "concentr": [6, 40, 104, 316, 338], "substanc": 6, "blood": 6, "subject": [6, 14, 100, 112, 278, 316, 327], "uniqu": [6, 30, 53, 81, 189, 281, 295, 306, 308, 310, 332], "statist": [6, 63, 66, 234, 316, 321, 330], "interv": [6, 316, 317], "ration": 6, "individu": [6, 18, 41, 62, 63, 64, 66, 79, 89, 90, 113, 114, 120, 121, 122, 126, 131, 168, 169, 170, 180, 190, 191, 192, 242, 253, 254, 255, 277, 278, 287, 306, 314, 324, 327, 332, 338, 341], "max": [6, 36, 37, 40, 198, 211, 212, 304, 332, 335, 347], "idv": [6, 10, 52, 126, 165, 221, 316, 341], "independ": [6, 8, 52, 316, 327, 330, 332, 336, 341, 349], "infus": [6, 154, 219, 226, 306, 332], "addit": [6, 36, 39, 51, 55, 81, 92, 138, 139, 150, 153, 193, 195, 217, 232, 306, 314, 316, 320, 324, 327, 341, 343, 348, 349], "interdos": 6, "ss": 6, "steadi": [6, 222, 306, 348], "state": [6, 24, 36, 222, 306, 319, 327, 335, 344, 346, 347, 348], "event": [6, 32, 99, 111, 218, 236, 306, 309, 327], "mdv": [6, 117, 306], "yet": [6, 310], "exactli": 6, "lloq": [6, 183, 209, 232, 264, 306, 308, 332], "blq": [6, 183, 209, 232, 273, 306], "unkown": 6, "hasn": 6, "custom": [6, 36, 39, 42, 205, 327, 338], "sympi": [6, 8, 17, 22, 25, 102, 110, 136, 157, 306, 317, 330, 338], "physic": [6, 135, 309, 316, 327], "recogn": [6, 214, 309, 327, 334], "without": [6, 9, 60, 61, 86, 87, 89, 90, 91, 114, 125, 131, 189, 283, 304, 306, 308, 312, 317, 319, 327, 330], "static": [6, 10, 18, 291], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 25, 28, 31, 76, 137, 162, 223, 290, 306, 308], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 23, 25, 72, 73, 74, 110, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 306, 310, 330, 332, 334, 335, 342, 351], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 306, 308, 338], "properti": [6, 14, 17, 22, 23, 24, 26, 29, 327, 330], "lag_tim": [7, 9, 306], "bioavail": [7, 9, 34, 101, 176, 306, 329], "compartmentbas": 7, "compartment": [7, 8, 31, 306, 308, 330], "system": [7, 8, 9, 28, 31, 60, 61, 63, 83, 86, 87, 89, 90, 91, 114, 115, 125, 131, 141, 143, 144, 145, 148, 149, 152, 154, 206, 228, 230, 285, 306, 308, 311, 312, 319, 325, 327, 330, 334], "lag": [7, 9, 43, 116, 182, 306], "enter": [7, 327], "bolu": [7, 8, 28, 47, 75, 137, 160, 185, 203, 204, 208, 211, 212, 215, 223, 227, 230, 306, 330, 332], "comp": [7, 8, 306], "a_centr": [7, 8, 28, 37, 75, 83, 115, 137, 160, 198, 206, 211, 212, 217, 227, 330, 332], "alag": [7, 306], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 310], "builder": [8, 9, 293, 294], "graph": [8, 293, 308, 312, 319], "od": [8, 28, 31, 48, 60, 61, 63, 86, 87, 89, 90, 91, 114, 115, 125, 131, 141, 143, 144, 145, 148, 152, 154, 206, 214, 228, 230, 306, 308], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 223, 329], "k21": [8, 329], "vector": [8, 17, 136, 190, 191, 192, 305, 321, 330], "load_example_model": [8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 251, 255, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 306, 323, 331, 332], "pprint": 8, "ode_system": [8, 28, 37, 47, 185, 203, 204, 208, 211, 212, 215, 219, 223, 226, 227, 230, 306, 330, 332], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 47, 141, 149, 293, 327, 333], "compartment_nam": 8, "compartmental_matrix": [8, 330], "matrix": [8, 14, 17, 25, 56, 57, 58, 59, 63, 66, 67, 68, 69, 70, 73, 136, 190, 191, 192, 287, 305, 306, 308, 321, 330, 332, 342, 346], "set_first_order_absorpt": [8, 48, 208, 219, 226, 306, 332], "dosing_compart": 8, "receiv": [8, 327], "equat": [8, 63, 83, 330, 332], "zero_order_input": 8, "zero": [8, 9, 74, 136, 152, 154, 155, 162, 206, 219, 226, 227, 228, 306, 310, 326, 329, 332, 333, 336, 346], "set_zero_order_absorpt": [8, 203, 208, 219, 306, 332, 351], "atom": 8, "http": [8, 305, 316, 317, 321, 323, 327, 343], "doc": [8, 312], "org": [8, 305, 307, 316, 321, 327, 343], "latest": [8, 306, 317, 323], "core": [8, 323, 330], "html": [8, 247, 317, 327], "basic": [8, 25, 77, 78, 290, 306, 316, 319, 327, 329, 334, 350], "find_compart": [8, 9, 37], "its": [8, 23, 28, 74, 82, 162, 277, 306, 308, 314, 316, 317, 323, 324, 325, 327, 330, 332, 346, 351], "find_compartment_or_rais": 8, "find_depot": 8, "out": [8, 25, 40, 72, 243, 306, 327, 330, 337, 342, 351], "outflow": 8, "unidirect": [8, 44, 141], "find_peripheral_compart": 8, "perihper": 8, "find_transit_compart": 8, "chain": 8, "distinguish": [8, 327], "get_bidirect": 8, "bidirect": 8, "interest": [8, 63, 309, 314, 327, 338], "get_compartment_inflow": 8, "go": [8, 138, 139, 150, 270, 279, 306, 316, 327, 332], "inflow": 8, "get_compartment_outflow": 8, "get_flow": 8, "destin": [8, 9, 245, 246, 281, 285, 288, 308], "ka": [8, 9, 41, 203, 219, 306, 326, 332], "get_n_connect": 8, "c": [9, 37, 40, 168, 198, 234, 307, 313, 320, 321, 326, 327, 332, 334, 343, 346], "compartmentalsystem": [9, 28, 306, 330], "newli": [9, 25, 326], "move_dos": 9, "move": [9, 243, 306], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 176], "set_dos": 9, "previou": [9, 23, 25, 28, 43, 79, 108, 137, 203, 219, 223, 226, 264, 278, 298, 306, 308, 327, 333, 348], "exist": [9, 10, 28, 33, 35, 36, 51, 53, 78, 81, 105, 108, 232, 281, 282, 283, 306, 308, 311, 316, 326, 348, 349], "argument": [9, 38, 86, 87, 89, 90, 91, 113, 201, 248, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 286, 291, 306, 308, 319, 329, 346, 349, 351], "set_input": 9, "set_lag_tim": [9, 306], "force_absolute_path": 10, "sequenc": [10, 15, 24, 25, 28, 79], "metadata": [10, 281, 282, 285, 288, 289, 292, 306], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 82], "idv_column": 10, "apgr": [10, 28, 33, 36, 75, 84, 85, 93, 100, 106, 119, 137, 140, 159, 160, 161, 162, 171, 172, 197, 218, 238, 316, 321, 330, 332, 334, 341], "fa1": [10, 84, 85, 93, 100, 159, 171, 172, 197, 218, 316, 332], "fa2": [10, 84, 85, 93, 100, 159, 171, 172, 197, 218, 316, 332], "intern": [10, 18, 306, 312, 330, 334, 338], "example_model": 10, "dta": [10, 171, 332, 334], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "read_json": 10, "read": [10, 173, 174, 175, 258, 259, 264, 280, 281, 282, 285, 288, 289, 292, 306, 310, 311, 316, 323, 327, 331, 337, 338, 340, 350], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 290, 316], "recover": 12, "issu": [12, 21, 306, 312, 325, 351], "hashabl": 13, "level": [13, 17, 22, 25, 29, 30, 113, 151, 232, 306, 308, 310, 316, 325, 332, 338, 344, 350], "variabilitylevel": 13, "parameter_nam": [13, 25, 97, 237, 239, 306, 334], "definit": [13, 14, 18, 26, 28, 64, 191, 192, 255, 306, 308, 314, 321, 327, 329, 330, 342], "varianc": [13, 17, 22, 25, 62, 63, 66, 188, 205, 243, 324, 330, 342, 349], "abstract": [13, 27, 285, 292, 305, 307, 317, 325, 330], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 25], "name1": [13, 17, 22, 169], "name2": [13, 17, 22, 169], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 330, 332], "evalu": [14, 38, 86, 87, 88, 89, 90, 91, 201, 202, 251, 267, 279, 287, 304, 306, 325, 330, 332, 338, 341, 345, 346], "maximum_evalu": [14, 320, 330, 332], "laplac": [14, 38, 201, 202, 267, 306, 308, 320, 330, 332], "isampl": [14, 38, 51, 201, 306, 320, 330, 332], "niter": [14, 38, 51, 201, 306, 320, 330, 332], "auto": [14, 15, 306, 320, 330, 332], "keep_every_nth_it": [14, 15, 306, 320, 330, 332], "residu": [14, 25, 91, 133, 164, 165, 254, 255, 277, 287, 306, 343, 345, 349], "predict": [14, 18, 89, 90, 114, 119, 131, 164, 166, 167, 168, 253, 254, 255, 277, 287, 306, 315, 341], "solver": [14, 26, 214, 220, 267, 306, 308, 349], "solver_rtol": [14, 26, 220], "solver_atol": [14, 26, 220], "tool_opt": [14, 15, 26, 38, 51, 201, 220, 310, 330, 332], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 26, 36, 39, 76, 82, 107, 287, 288, 289, 308, 311, 312, 314, 317, 327, 330, 332, 337, 346], "epsilon": [14, 25, 60, 61, 86, 87, 172, 205, 216, 225, 232, 244, 306, 317, 332], "deriv": [14, 26, 135, 306, 312, 314, 332, 335], "eta": [14, 25, 28, 39, 42, 60, 61, 62, 64, 79, 86, 87, 89, 162, 170, 171, 172, 175, 180, 181, 205, 231, 233, 234, 235, 287, 306, 317, 321, 324, 326, 329, 330, 334, 341], "preserv": [14, 25, 327], "comput": [14, 312, 313, 314, 327, 342], "similar": [14, 304, 320, 327, 333, 342, 343], "result": [14, 25, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 79, 86, 87, 88, 89, 90, 91, 190, 191, 192, 242, 243, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 292, 295, 298, 306, 309, 312, 325, 327, 334, 337, 338, 340, 346, 349, 350], "everi": [14, 232, 316, 327], "nth": 14, "iter": [14, 15, 28, 63, 163, 189, 191, 273, 287, 306, 324, 332, 339, 342, 343], "laplacian": 14, "cross": [14, 327], "product": [14, 40, 309, 320, 327, 329, 335], "gradient": [14, 60, 61, 86, 87, 287, 306, 346], "fim": 14, "design": [14, 313, 327, 329, 330, 338], "append": [14, 51, 306], "uncondit": [14, 171, 332], "regardless": [14, 216, 309, 327, 330], "termin": [14, 287, 327, 346], "print": [14, 72, 125, 171, 172, 256, 290, 306, 332], "eigenvalu": [14, 145], "precond": 14, "precondit": 14, "cycl": 14, "supported_method": [14, 320], "frozenset": 14, "bay": [14, 38, 201, 202, 267, 308], "imp": [14, 38, 201, 202, 267, 306, 308, 320, 332], "impmap": [14, 38, 201, 202, 267, 306, 308], "ITS": [14, 38, 201, 202, 267, 306, 308, 326, 333], "saem": [14, 38, 201, 202, 267, 306, 308], "supported_parameter_uncertainty_method": 14, "to_datafram": [15, 24, 284], "overview": [15, 284, 304, 308, 318, 330, 344], "estimation_step": [15, 18, 38, 45, 51, 179, 184, 201, 202, 220, 306, 330, 332], "doctest": 15, "ellipsi": 15, "durat": [16, 219, 226, 332], "mutual": [16, 326, 329], "exclus": [16, 327, 329], "d1": [16, 219, 226, 306, 332], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 25, 42, 79, 231, 269, 321, 326, 332], "omega_cl": [17, 22, 25], "omega_v": [17, 25], "corr_cl_v": [17, 25], "omega_cl_v": [17, 25], "dist": [17, 22, 25, 306, 312, 330], "iiv_v": [17, 25], "itself": [17, 22, 327], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 25], "random_vari": [18, 79, 231, 330, 332, 351], "dependent_vari": [18, 306, 330], "y": [18, 24, 28, 75, 110, 135, 137, 160, 171, 172, 175, 178, 193, 195, 205, 216, 217, 221, 232, 244, 330, 332, 334], "observation_transform": [18, 306], "estimationstep": [18, 38, 45, 184, 201, 202, 306, 320, 330], "parent_model": [18, 306, 314, 319, 320, 324, 326, 333, 335, 342, 343, 348], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "map": [18, 31, 316], "model_cod": [18, 306], "parent": [18, 257, 277, 278, 286, 295, 319, 320], "randomvari": [18, 306, 330], "likelihood": [18, 54, 55, 232, 266, 273, 308, 343], "2ll": [18, 54, 55, 306], "log": [18, 36, 37, 39, 55, 162, 193, 195, 198, 199, 217, 286, 287, 306, 316, 321], "record": [18, 52, 86, 87, 88, 89, 90, 91, 92, 163, 183, 209, 287, 306, 312, 334], "would": [18, 30, 162, 304, 314, 319, 321, 324, 327, 332, 334, 338], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 306, 325, 334, 337, 349], "parse_model_from_str": 18, "update_sourc": [18, 306, 334], "dummypath": [18, 332], "write_fil": 18, "forc": [18, 25, 81, 191, 192, 242, 245, 246, 306, 308, 324, 326, 327], "write": [18, 245, 246, 280, 306, 312, 313, 314, 327, 337, 350], "extern": [18, 258, 312, 316, 317, 323, 337, 338], "msg": 20, "syntax": [20, 306, 329], "normal": [22, 25, 30, 42, 65, 71, 162, 188, 192, 272, 321, 326, 327], "init": [23, 24, 36, 49, 98, 207, 240, 243, 308, 321, 330, 342], "inf": [23, 332], "param": 23, "tvcl": [23, 28, 33, 39, 42, 75, 88, 137, 160, 161, 162, 171, 172, 180, 321, 330, 332, 334], "005": 23, "boolean": [23, 24, 92, 97, 98, 189, 199, 205, 239, 240, 253, 254, 255, 316, 346], "constrain": [23, 317, 330], "unfix": [23, 96, 97, 98, 207, 237, 239, 240, 306], "back": [23, 71, 306], "less": [23, 348], "greater": [23, 346], "altern": [23, 234, 312, 327], "constructor": [23, 306], "collect": [24, 25, 310, 321, 327], "usual": [24, 312], "displai": [24, 83, 193, 306, 321, 327], "summar": [24, 276, 278, 279, 321, 328], "par1": 24, "par2": 24, "pset": 24, "fixed": [24, 96], "nonfix": 24, "set_fix": 24, "set_initial_estim": [24, 306, 332], "100": [24, 36, 38, 51, 190, 201, 235, 304, 308, 314, 319, 331, 332, 336, 344], "eta_level": 25, "epsilon_level": 25, "act": [25, 200], "while": [25, 310, 312, 314, 319, 332, 335, 349, 351], "variabilityhierarchi": 25, "contin": 25, "hierarchi": [25, 29], "rv": [25, 79, 132, 186, 231, 330, 351], "normaldistribut": [25, 330], "covariance_matrix": [25, 56, 63, 66, 68, 69, 191, 287, 304, 306, 331], "nrv": 25, "variance_paramet": 25, "rv1": 25, "rv2": 25, "get_rvs_with_same_dist": 25, "join": [25, 231, 306, 309], "ind": 25, "fill": 25, "name_templ": 25, "param_nam": 25, "cov": [25, 36, 56, 63, 64, 66, 68, 69, 191, 305, 306, 312, 320, 321, 332], "taken": [25, 92, 100, 106, 236, 281, 316, 319, 321, 342], "templat": [25, 36, 39, 78, 311], "overrid": [25, 306, 311, 329], "dist1": 25, "dist2": 25, "_": [25, 278, 305, 321], "unjoin": 25, "nearest_valid_paramet": 25, "parameter_valu": 25, "small": 25, "parameters_sdcorr": 25, "sd": [25, 62, 332, 341, 345], "corr": [25, 58, 67, 341], "replace_with_sympy_rv": 25, "stat": [25, 28, 310], "std": [25, 332], "rng": [25, 63, 66, 80, 190, 191, 192, 264, 272], "jointnormaldistribut": [25, 330], "validate_paramet": 25, "seri": [25, 52, 58, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 88, 89, 90, 91, 99, 103, 108, 109, 111, 117, 122, 126, 169, 170, 191, 192, 193, 232, 234, 243, 287, 306, 331], "matric": [25, 64, 192, 306, 317, 331], "semidefinit": [25, 306, 317, 342], "64206": [26, 220], "simul": [26, 220, 338, 345], "replic": [26, 220], "signific": [28, 74, 268, 269, 271, 306, 327, 344, 346], "after_od": [28, 217], "s\u2081": [28, 33, 75, 137, 160, 161, 162, 172, 217, 330], "eps\u2081": [28, 75, 125, 137, 160, 172, 178, 193, 205, 216, 221, 232, 244, 330], "ipr": [28, 75, 89, 137, 160, 164, 166, 171, 172, 216, 217, 306, 330, 331, 332, 345], "ir": [28, 75, 137, 160, 171, 172, 217, 330, 332], "iwr": [28, 75, 137, 160, 171, 172, 217, 330, 332], "before_od": [28, 33, 36, 161, 162, 233, 234, 235], "btime": [28, 33, 75, 137, 160, 161, 162, 171, 172, 330, 332], "tad": [28, 33, 50, 75, 137, 160, 161, 162, 171, 172, 306, 330, 332, 341], "ptvcl": [28, 33, 36, 49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 75, 96, 97, 98, 134, 137, 160, 161, 162, 171, 172, 191, 192, 207, 210, 224, 229, 233, 234, 235, 237, 239, 240, 243, 252, 330, 331, 332], "tvv": [28, 33, 75, 137, 160, 161, 162, 171, 172, 180, 321, 330, 332, 334], "ptvv": [28, 33, 49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 75, 134, 137, 160, 161, 162, 171, 172, 191, 192, 239, 240, 243, 252, 330, 331, 332], "theta\u2083": [28, 33, 75, 137, 160, 161, 162, 172, 330], "eta\u2081": [28, 33, 75, 79, 125, 137, 160, 161, 162, 172, 231, 330], "\u212f": [28, 33, 46, 48, 75, 137, 160, 161, 162, 205, 330, 332], "eta\u2082": [28, 33, 75, 79, 125, 137, 160, 161, 162, 172, 231, 330], "whole": [28, 308, 310, 316, 327], "s1": [28, 151, 171, 332, 334], "symbol_or_stat": 28, "direct_depend": 28, "direct": [28, 293, 314, 327, 329, 335, 344, 347], "find_assign": [28, 39, 41, 42, 46, 48, 178, 180, 193, 194, 195, 198, 205, 216, 221, 232, 244], "find_assignment_index": 28, "full_express": [28, 36, 233, 234, 235], "expand": [28, 92], "full": [28, 79, 114, 125, 131, 222, 305, 306, 311, 321, 324, 326, 327, 333, 341], "exp": [28, 36, 39, 171, 233, 234, 235, 266, 314, 332, 334], "reassign": 28, "sypmpi": 28, "remove_symbol_definit": 28, "elsewher": 28, "longer": [28, 306], "make": [28, 75, 113, 161, 178, 187, 189, 266, 306, 312, 317, 326, 327, 329, 330, 333, 349, 351], "sure": [28, 187, 306, 327, 351], "unless": [28, 290, 314, 327], "func": [31, 291], "presenc": [32, 35, 99, 103], "correctli": [32, 35, 99, 306], "get_admid": [32, 35], "get_cmt": [32, 35, 306, 332], "p": [33, 257, 266, 273, 304, 305, 306, 308, 314, 321, 332, 343, 344], "alreadi": [33, 36, 78, 200, 206, 228, 306, 308, 312, 314, 326, 327, 333], "noth": [33, 53, 183, 232, 327], "texpr": [33, 88, 229], "allometri": [33, 263, 264, 306, 349], "remove_covariate_effect": [33, 306, 332], "allo_cl": 33, "allo_v": 33, "add_paramet": [34, 306], "logit_transform": 34, "logit": [34, 39, 306], "remove_bioavail": [34, 306], "allow_nest": [36, 306], "linear": [36, 37, 40, 129, 144, 145, 156, 169, 198, 304, 305, 306, 317, 329, 330, 332, 335, 338, 340], "lin": 36, "coveff": [36, 81], "median": [36, 63, 66, 304, 306, 332, 338], "001": [36, 74, 243, 266, 273, 306, 314, 332, 343, 344, 346], "equal": [36, 42, 52, 189, 205, 312, 346], "minimum": [36, 317, 335], "000": [36, 331], "frac": [36, 37, 40, 193, 195, 198, 305, 330, 332, 345, 348], "min": [36, 193, 195, 304, 332], "piecewis": [36, 306], "hockei": 36, "stick": 36, "piece_lin": 36, "theta1": [36, 332], "theta2": [36, 332], "pow": [36, 332], "mai": [36, 232, 310, 324, 326, 327, 332, 333], "abbrevi": [36, 39, 306, 308, 312, 334], "multipli": [36, 39, 205, 304, 332], "pop_clapgr": 36, "cdot": [37, 39, 40, 47, 185, 198, 321, 330, 332, 348], "slope": [37, 40, 129, 198], "bigg": [37, 198], "e_": [37, 40, 198], "ec_": [37, 40, 198], "50": [37, 40, 64, 100, 106, 122, 198, 255, 304, 305, 328, 331, 332, 333, 335, 341, 345, 347], "biggl": [37, 198, 348], "lbrace": [37, 198], "quad": [37, 198], "leq": [37, 198, 321], "atop": [37, 198], "els": [37, 72, 198, 232, 306, 332, 346], "sigmoid": [37, 40, 198], "bigl": [37, 198, 348], "c_0": [37, 198], "loglin": [37, 198], "a_effect": 37, "ke0": 37, "idx": [38, 51, 179, 201, 202, 351], "pass": [38, 80, 201, 248, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 295, 327], "opt": [38, 51, 201, 311], "1000": [38, 51, 88, 201, 321], "len": [38, 51, 179, 183], "set_estimation_step": [38, 45, 51, 179, 184, 202, 306, 332, 351], "remove_estimation_step": [38, 45, 51, 184, 201, 202, 332], "append_estimation_step_opt": [38, 45, 179, 184, 201, 202, 306, 332], "add_parameter_uncertainty_step": [38, 51, 179, 184, 201, 202, 332], "remove_parameter_uncertainty_step": [38, 45, 51, 179, 201, 202, 332], "set_evaluation_step": [38, 45, 51, 179, 184, 201, 332], "initial_estim": [39, 46, 48], "eta_nam": [39, 42, 205], "prop": [39, 332], "rescal": 39, "re_log": 39, "phi": [39, 306, 310, 312, 332], "remove_iiv": [39, 42, 46, 48, 181, 306, 332, 334], "add_pk_iiv": [39, 42, 180, 181, 306, 332, 333], "add_iov": [39, 46, 48, 180, 181, 306, 332], "remove_iov": [39, 42, 46, 48, 180, 306, 332], "prod": 40, "indirect": [40, 327, 329, 335], "turnov": 40, "c_c": 40, "impact": [40, 341], "degrad": [40, 329, 335], "respons": [40, 327], "dr": 40, "dt": [40, 83, 332, 348], "k_": [40, 348], "inhibit": 40, "stimul": 40, "r_0": [40, 348], "pop_ka": [41, 49], "occ": [42, 269, 308, 314, 326], "disjoint": [42, 269, 326], "accept": [42, 120, 121, 122, 308, 327], "explicit": [42, 269, 306, 308, 309, 326, 329], "copi": [42, 127, 133, 134, 306, 310, 324, 326, 327, 332], "add_iiv": [42, 46, 48, 180, 181, 306, 332, 334], "set_transit_compart": [43, 182, 306, 332], "remove_lag_tim": [43, 306, 332], "drug_dvid": 44, "presystem": [44, 149, 306, 319], "present": [44, 99, 103, 111, 308, 314, 316, 319, 321, 327, 333, 349], "presystemet": 44, "add_estimation_step": [45, 51, 179, 184, 201, 202, 306, 332], "set_direct_effect": [46, 129, 306], "ec_50": [46, 264, 274], "ec\u2085\u2080": 46, "pop_ec_50": 46, "eta_ec_50": 46, "parameter": 47, "qpn": 47, "vpn": 47, "volumn": 47, "mathsf": [47, 185], "qp1": [47, 185, 306, 332], "vp1": [47, 185, 332], "qp2": [47, 185, 306], "vp2": [47, 185], "peripheral1": [47, 185, 215, 332], "v1": [47, 185, 215, 332], "v2": [47, 185, 215, 332], "set_peripheral_compart": [47, 185, 306, 332], "remove_peripheral_compart": [47, 215, 306, 332], "Will": [48, 281, 282, 283, 342], "eta_mat": [48, 332], "004693": [49, 65, 134, 321, 330], "009160": [49, 134, 330], "theta_3": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 134, 191, 192, 239, 240, 243, 252, 330, 331, 332], "100000": [49, 134, 320, 330, 332], "ivcl": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 79, 127, 171, 172, 191, 192, 231, 240, 243, 252, 304, 321, 330, 331, 332, 334], "030963": [49, 127, 321, 330], "ivv": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 79, 127, 171, 172, 191, 192, 231, 240, 243, 252, 304, 321, 330, 331, 332], "031128": [49, 127, 171, 243, 321, 330, 332, 334], "sigma_1_1": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 74, 133, 191, 192, 240, 243, 252, 304, 330, 331, 332], "013241": [49, 133, 171, 243, 252, 321, 330, 331, 332, 342], "nbin": 52, "bin": [52, 166, 273, 341, 351], "equal_width": 52, "width": 52, "equal_numb": 52, "binn": 52, "want": [52, 309, 312, 314, 324, 325, 326, 327, 332, 333, 334, 337], "origin": [52, 92, 126, 245, 281, 285, 288, 304, 305, 306, 309, 312, 321, 327, 345], "421": 52, "527": 52, "118": [52, 190, 306, 321], "135": [52, 126, 331, 332, 341], "512": [52, 315], "203": 52, "475": 52, "510": 52, "133": 52, "267": [52, 331], "155": [52, 86, 87, 89, 90, 91, 121, 126, 331, 332], "increas": [53, 272, 312, 342], "until": [53, 279, 327, 351], "do": [53, 191, 304, 306, 308, 312, 321, 327, 334, 343, 346, 351], "run2": [53, 213, 332], "run3": [53, 332], "n_estimated_paramet": [54, 55], "fit": [54, 55, 170, 232, 256, 270, 277, 279, 285, 306, 327, 330, 332, 342, 343, 350, 351], "multiple_test": 55, "mult_test_p": [55, 257], "mult_test_": 55, "variat": 55, "n_random_paramet": 55, "n_individu": 55, "n_fixed_paramet": 55, "n_observ": 55, "n_estimated_iiv_omega_paramet": 55, "penalti": 55, "mbic": [55, 268, 269, 271, 306], "n_predictor": 55, "n_expected_model": 55, "mult_test": 55, "load_example_modelfit_result": [55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 86, 87, 88, 89, 90, 91, 164, 165, 166, 167, 168, 169, 190, 191, 192, 242, 243, 251, 255, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 279, 306], "611": 55, "7071686183284": 55, "616": [55, 306, 331], "536606983396": 55, "610": 55, "7412809453149": 55, "594": 55, "431131169692": 55, "411510e": [56, 59, 68, 69, 331], "08": [56, 58, 59, 68, 69, 314, 331], "010000e": [56, 59, 68, 69, 331], "000002": [56, 58, 59, 68, 69, 304, 331], "000001": [56, 58, 59, 63, 66, 68, 69, 304, 326, 331, 333], "538630e": [56, 58, 59, 68, 69, 331], "07": [56, 57, 58, 59, 67, 68, 69, 70, 304, 314, 324, 326, 331, 341, 342, 344], "178090e": [56, 59, 68, 69, 331], "233530e": [56, 59, 68, 69, 331], "04": [56, 57, 58, 59, 67, 68, 69, 70, 304, 314, 326, 331, 341, 344], "000804": [56, 58, 59, 68, 69, 314, 331], "000050": [56, 58, 59, 68, 69, 331], "171840e": [56, 59, 68, 69, 331], "461760e": [56, 59, 68, 69, 331], "665010e": [56, 59, 68, 69, 331], "06": [56, 58, 59, 68, 69, 304, 310, 314, 324, 326, 331, 341, 344], "040250e": [56, 59, 68, 69, 331], "007016": [56, 58, 59, 68, 69, 331], "000108": [56, 58, 59, 68, 69, 331], "944800e": [56, 59, 68, 69, 331], "932950e": [56, 59, 68, 69, 331], "093430e": [56, 59, 68, 69, 331], "981380e": [56, 58, 59, 68, 69, 331], "000180": [56, 58, 59, 68, 69, 331], "856650e": [56, 59, 68, 69, 331], "867230e": [56, 59, 68, 69, 331], "000039": [56, 58, 59, 68, 69, 331], "000019": [56, 58, 59, 68, 69, 331], "589820e": [56, 58, 59, 68, 69, 331], "685650e": [56, 59, 68, 69, 331], "000029": [56, 58, 59, 68, 69, 331], "000005": [56, 58, 59, 68, 69, 331], "195640e": [56, 59, 68, 69, 331], "007099": [56, 57, 58, 67, 331], "094640": [56, 57, 58, 67, 331], "388059": [56, 57, 58, 67, 73], "097981": [56, 57, 58, 67, 331], "170820": [56, 57, 58, 67, 331], "356899": [56, 57, 58, 67, 73], "138062": [56, 57, 58, 67, 331], "356662": [56, 57, 58, 67, 73, 331], "238441": [56, 57, 58, 67], "096515": [56, 57, 58, 67], "062991": [56, 57, 58, 67, 331], "153616": [56, 57, 58, 67, 331], "185111": [56, 57, 58, 67, 331], "159170": [56, 57, 58, 67, 331], "027495": [56, 57, 58, 67, 331], "calculate_se_from_cov": [56, 57, 58, 59, 67, 68, 70, 306], "calculate_se_from_prec": [56, 57, 58, 59, 67, 68, 69], "precis": [56, 57, 58, 59, 67, 68, 69, 70, 287, 306, 327], "calculate_cov_from_prec": [56, 57, 58, 67, 68, 69, 70], "calculate_cov_from_corrs": [56, 57, 59, 67, 68, 69, 70, 306], "calculate_prec_from_cov": [56, 57, 58, 59, 67, 69, 70], "calculate_prec_from_corrs": [56, 57, 58, 59, 68, 69, 70], "calculate_corr_from_prec": [56, 58, 59, 67, 68, 69, 70], "precision_matrix": [57, 59, 70, 287, 331], "prec": [57, 59, 70], "995567e": [57, 59, 68, 70], "22660": [57, 59, 67, 68, 70, 331], "028196": [57, 59, 68, 70], "16057": [57, 59, 67, 68, 70, 331], "855248": [57, 59, 68, 70], "203511": [57, 59, 67, 68, 70, 331], "614428": [57, 59, 68, 70], "39474": [57, 59, 67, 68, 70, 331], "250514": [57, 59, 68, 70], "820118": [57, 59, 68, 70], "299536": [57, 59, 68, 70], "266003e": [57, 59, 68, 70], "2129": [57, 59, 67, 68, 70, 331], "904642": [57, 59, 68, 70], "260": [57, 59, 67, 68, 70, 331], "176234": [57, 59, 68, 70], "375": [57, 59, 67, 68, 70, 331], "266233": [57, 59, 68, 70], "2800": [57, 59, 67, 68, 70, 331], "816246": [57, 59, 68, 70], "7718": [57, 59, 67, 68, 70, 331], "769557": [57, 59, 68, 70], "605786e": [57, 59, 68, 70], "187": [57, 59, 67, 68, 70, 331], "038903": [57, 59, 68, 70], "177": [57, 59, 67, 68, 70, 306, 331, 344], "207683": [57, 59, 68, 70], "205": [57, 59, 67, 68, 70, 331], "808480": [57, 59, 68, 70], "2225": [57, 59, 67, 68, 70, 331], "150449": [57, 59, 68, 70], "035116e": [57, 59, 68, 70], "7527": [57, 59, 67, 68, 70, 331], "530027": [57, 59, 68, 70], "2462": [57, 59, 67, 68, 70, 331], "974821": [57, 59, 68, 70], "9977": [57, 59, 67, 68, 70, 331], "488860": [57, 59, 68, 70], "947425e": [57, 59, 68, 70], "22343": [57, 59, 67, 68, 70, 331], "198618": [57, 59, 68, 70], "9370": [57, 59, 67, 68, 70, 331], "758371": [57, 59, 68, 70], "201183e": [57, 59, 68, 70], "249847": [57, 59, 68, 70, 331], "177845": [57, 59, 68, 70], "calculate_corr_from_cov": [57, 58, 59, 67, 68, 69, 70, 306], "se": [58, 67, 313, 314, 331], "correlation_matrix": [58, 67, 73, 287, 331], "standard_error": [58, 67, 287, 331], "411512e": 58, "009998e": 58, "178111e": 58, "233518e": 58, "171834e": 58, "461762e": 58, "665011e": 58, "040245e": 58, "944801e": 58, "932957e": 58, "093431e": 58, "856651e": 58, "867245e": 58, "685661e": 58, "195664e": 58, "pheno_linear": [60, 61, 86, 87, 89, 90, 91, 114, 125, 131, 156, 160, 169, 252, 257], "d_eps1": [60, 125], "d_epseta1_1": [60, 125], "oeta1": [60, 114, 131], "d_epseta1_2": [60, 125], "eta_2": [60, 62, 64, 79, 114, 190, 231, 331, 332], "oeta2": [60, 114, 131], "calculate_eta_gradient_express": [60, 306], "d_eta1": [61, 114, 125, 131], "d_eta2": [61, 114, 125, 131], "calculate_epsilon_gradient_express": [61, 306], "parameter_estim": [62, 63, 64, 66, 74, 88, 90, 91, 170, 191, 192, 243, 252, 287, 304, 306, 330, 331], "individual_estim": [62, 79, 86, 87, 89, 170, 190, 242, 287, 306, 331], "shrinkag": [62, 64], "deviat": [62, 244, 287, 304, 321, 328, 331, 332, 341, 345], "pe": [62, 63, 64, 66, 88, 90, 191, 192], "ie": [62, 190, 242], "720481": 62, "240295": 62, "471305": 62, "128389": 62, "calculate_individual_shrinkag": [62, 306], "expr_or_expr": 63, "arbitrari": [63, 66], "solut": [63, 230], "th": [63, 305, 321], "95": [63, 304, 321, 332], "percentil": [63, 304, 321], "create_rng": [63, 66, 190, 191, 192], "k": [63, 305, 306, 312, 314, 321], "stderr": [63, 66, 304, 310], "p5": [63, 66, 321], "004234": [63, 66], "001138": [63, 66], "004907": [63, 66], "001247": [63, 66], "p95": [63, 66, 321], "individual_estimates_covari": [64, 190, 287, 306, 331], "ieta_shr": 64, "847789": 64, "256473": 64, "796643": 64, "210669": 64, "755025": 64, "226957": 64, "764541": 64, "216405": 64, "816192": 64, "203974": 64, "778108": 64, "210992": 64, "659420": 64, "236875": 64, "668551": 64, "240097": 64, "260056": 64, "200374": 64, "725190": 64, "226563": 64, "972110": 64, "421852": 64, "249640": 64, "254119": 64, "730294": 64, "364932": 64, "165785": 64, "194464": 64, "15": [64, 87, 100, 106, 122, 255, 304, 305, 314, 324, 327, 328, 331, 332, 344, 345], "813399": 64, "313554": 64, "797328": 64, "213211": 64, "17": [64, 86, 87, 89, 90, 93, 100, 104, 106, 122, 126, 159, 197, 218, 255, 304, 305, 314, 316, 324, 326, 327, 328, 331, 332, 339, 341, 345], "769059": 64, "278079": 64, "098506": 64, "176778": 64, "749022": 64, "235386": 64, "742181": 64, "222932": 64, "21": [64, 86, 89, 100, 106, 122, 255, 304, 305, 314, 320, 321, 328, 331, 332, 339, 341, 342, 345], "317956": 64, "264473": 64, "943950": 64, "232732": 64, "707183": 64, "259077": 64, "553787": 64, "247717": 64, "826349": 64, "114302": 64, "854777": 64, "341384": 64, "820829": 64, "263235": 64, "28": [64, 86, 89, 90, 100, 106, 122, 232, 255, 304, 305, 314, 324, 327, 328, 331, 332, 335, 341, 345], "999942": 64, "319986": 64, "29": [64, 86, 89, 90, 100, 106, 122, 232, 234, 255, 304, 305, 307, 314, 319, 324, 327, 328, 331, 332, 335, 341, 345], "967084": 64, "432760": 64, "30": [64, 100, 106, 122, 255, 304, 305, 314, 320, 327, 328, 331, 332, 341, 345], "404773": 64, "325215": 64, "31": [64, 86, 89, 100, 106, 122, 126, 255, 304, 305, 310, 314, 328, 331, 332, 339, 341, 345, 348], "999980": 64, "318421": 64, "925283": 64, "167667": 64, "33": [64, 100, 106, 122, 126, 255, 305, 314, 328, 331, 332, 333, 344, 345], "913706": 64, "242106": 64, "34": [64, 90, 100, 106, 122, 126, 255, 304, 305, 314, 328, 331, 332, 339, 341, 345], "875554": 64, "249197": 64, "849135": 64, "294294": 64, "36": [64, 66, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 341, 345], "172206": [64, 345], "246422": 64, "37": [64, 93, 100, 106, 109, 122, 159, 197, 218, 255, 305, 314, 316, 328, 331, 332, 345], "747380": 64, "278340": 64, "38": [64, 86, 89, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 345], "187440": 64, "231249": 64, "39": [64, 100, 106, 122, 255, 304, 305, 314, 326, 328, 331, 332, 341, 344, 345], "237805": 64, "254485": 64, "999925": 64, "189793": 64, "41": [64, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 341, 345], "941906": 64, "170998": 64, "42": [64, 66, 93, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 333, 344, 345], "923801": 64, "244046": 64, "43": [64, 93, 100, 106, 122, 255, 304, 305, 314, 320, 328, 331, 332, 344, 345], "999928": 64, "320403": 64, "44": [64, 93, 100, 106, 122, 255, 304, 305, 328, 331, 332, 345], "237637": 64, "260453": 64, "45": [64, 93, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 345], "869540": 64, "194503": 64, "999949": 64, "319750": 64, "47": [64, 100, 106, 122, 126, 255, 304, 305, 328, 331, 332, 333, 341, 345], "983782": 64, "393234": 64, "48": [64, 100, 106, 109, 122, 255, 304, 305, 314, 328, 331, 332, 344, 345], "698267": 64, "169337": 64, "49": [64, 100, 106, 122, 255, 304, 305, 328, 331, 332, 345], "776674": 64, "214962": 64, "688847": 64, "192608": 64, "51": [64, 100, 106, 122, 255, 304, 305, 310, 314, 328, 331, 332, 345], "822213": 64, "202534": 64, "52": [64, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 333, 344, 345], "511489": 64, "273601": 64, "53": [64, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 339, 341, 345], "964757": 64, "223448": 64, "762153": 64, "181648": 64, "965657": 64, "435741": 64, "56": [64, 100, 106, 122, 255, 304, 305, 314, 328, 331, 332, 345], "995278": 64, "354798": 64, "57": [64, 100, 106, 112, 122, 190, 255, 304, 305, 314, 320, 321, 328, 331, 332, 345], "813382": 64, "263372": 64, "58": [64, 100, 106, 112, 122, 126, 190, 255, 304, 305, 321, 328, 331, 332, 344, 345], "727295": 64, "232867": 64, "59": [64, 93, 100, 104, 106, 109, 112, 120, 122, 126, 159, 190, 197, 218, 255, 304, 305, 314, 316, 320, 321, 328, 331, 332, 333, 345], "738777": 64, "224742": 64, "calculate_eta_shrinkag": [64, 306], "ucpscal": [65, 71], "calculate_ucp_scal": [65, 306], "00916": [65, 171, 243, 321, 330, 332, 334], "0309626": [65, 171, 243, 330, 332, 334], "031127999999999996": 65, "013241000000000001": 65, "convers": [65, 306, 319, 325], "pharmacokinet": [66, 232, 332], "pre": [66, 149, 319], "t_half_elim": 66, "173": 66, "337164": 66, "1769": 66, "493756": 66, "843398": 66, "149": [66, 326], "567842": 66, "1317": [66, 314], "474199": 66, "233070": 66, "k_e": 66, "calculate_individual_parameter_statist": [66, 306], "995565e": 67, "041788": 67, "848052": 67, "410335": 67, "240358": 67, "820116": [67, 331], "179011": 67, "266004e": 67, "908225": 67, "176399": 67, "266263": 67, "818557": 67, "757955": 67, "605785e": 67, "038825": 67, "207512": 67, "808434": 67, "144772": 67, "035114e": 67, "518562": 67, "972906": 67, "457873": 67, "947424e": 67, "197906": 67, "736254": 67, "201162e": 67, "249846": 67, "006431": 67, "000210": [69, 70, 331], "026895": [69, 70, 331], "083762": [69, 70, 331], "013415": [69, 70, 331, 342], "007477": [69, 70, 331, 342], "002279": [69, 70, 331, 342], "unconstrain": [71, 342], "calculate_parameters_from_ucp": [71, 306], "verbos": 72, "consist": [72, 310, 314, 327, 329, 346], "across": [72, 306, 327], "consol": 72, "fail": [72, 306, 327, 338], "cor": [73, 312], "highli": 73, "high": [73, 316, 317, 338], "absolut": [73, 306, 327], "zero_limit": 74, "significant_digit": [74, 287, 306], "close": [74, 243, 306, 321, 327, 328], "subset": [74, 190, 330, 335], "distanc": [74, 82, 345, 346], "logic": [74, 333, 346], "cleanup": 75, "what": [75, 327, 334, 338], "inlin": 75, "clean": 75, "certain": [75, 110, 113, 163, 306, 311, 314, 324, 326, 327, 329, 337], "to_format": 76, "inplac": 76, "nlmixr": [76, 270, 306, 312, 331, 332], "rxode": [76, 270, 306], "underli": [76, 118, 171, 330], "converted_model": 76, "delai": [77, 329, 333], "config": [78, 105, 306, 311, 312, 336], "configur": [78, 306, 323, 331, 334, 349, 350], "overwritten": [78, 281], "block": [79, 180, 216, 268, 306, 319, 321, 324, 329, 332, 333, 341], "iiv_cl_iiv_v": [79, 231], "split_joint_distribut": [79, 306, 332], "through": [80, 308, 309, 311, 314, 319, 327, 329, 330, 332, 342], "numpi": [80, 316, 317, 330], "standard_norm": 80, "5532605888887387": 80, "stem": 81, "force_numb": 81, "coveff1": 81, "temp": 81, "temp1": 81, "cl1": 81, "df": [82, 87, 278, 279, 306, 316, 339, 341], "date_column": 82, "deidentifi": [82, 306], "year": [82, 306, 312, 327], "earliest": 82, "maintain": [82, 309, 312, 313, 325, 327, 337, 338], "leap": 82, "1901": 82, "1902": 82, "1903": 82, "1904": 82, "closest": 82, "preceed": 82, "ordinari": [83, 330], "odedisplay": 83, "display": 83, "column_nam": [84, 238], "mark": [84, 85, 92, 238, 308, 327], "drop_dropped_column": [84, 238, 306, 332], "undrop_column": [84, 306, 332], "undrop": [84, 238], "drop_column": [85, 238, 306, 332], "them": [85, 188, 189, 309, 324, 326, 327, 329, 333, 334, 343], "dy": 86, "deps_1": 86, "771084": [86, 89], "881859": [86, 89], "441728": [86, 89], "113050": [86, 89], "783055": [86, 89], "150": [86, 87, 89, 90, 91, 331], "375041": [86, 89], "151": [86, 87, 89, 90, 91], "833395": [86, 89], "152": [86, 87, 89, 90, 91], "876707": [86, 89], "153": [86, 87, 89, 90, 91, 315], "905095": [86, 89], "154": [86, 87, 89, 90, 91], "099690": [86, 89], "evaluate_eta_gradi": [86, 306], "deta_1": 87, "deta_2": 87, "159537": 87, "609116": 87, "325893": 87, "562289": 87, "104417": 87, "346161": 87, "452951": 87, "682310": 87, "838840": 87, "981836": 87, "424423": 87, "973013": 87, "497185": 87, "344797": 87, "198714": 87, "697161": 87, "987731": 87, "941806": 87, "817067": 87, "309945": 87, "evaluate_epsilon_gradi": [87, 306], "573770": 88, "739": [88, 93, 108, 159, 197, 218, 316, 332], "165105": 88, "741": [88, 93, 108, 159, 197, 218, 316, 332], "742": [88, 93, 108, 159, 197, 218, 316, 332], "743": [88, 93, 108, 159, 197, 218, 316, 332], "evaluate_population_predict": [89, 306], "529739": 90, "179910": 90, "688648": 90, "798916": 90, "023225": 90, "459036": 90, "223295": 90, "217288": 90, "472888": 90, "226455": 90, "evaluate_individual_predict": [90, 306], "wre": [91, 306], "313859": 91, "675721": 91, "544240": 91, "921720": 91, "517677": 91, "223935": 91, "053334": 91, "007023": 91, "931252": 91, "778389": 91, "flag": [92, 306, 332, 345, 349], "care": [92, 281], "accord": [93, 125, 306, 327, 333, 347, 349], "queri": 93, "120": [93, 109, 159, 197, 218, 316, 331, 332], "132": [93, 109, 159, 197, 218, 316, 331, 332], "144": [93, 109, 159, 197, 218, 316, 331, 332, 344], "146": [93, 126, 159, 197, 218, 314, 316, 331, 332], "400": [93, 331], "00469307": [96, 97, 98, 171, 210, 224, 237, 243, 330, 332, 334], "fix_paramet": [96, 98, 239, 240, 332], "unfix_paramat": [96, 97, 98, 240], "fix_paramaters_to": [96, 240], "unfix_paramaters_to": [96, 97, 98, 207, 239], "fix_or_unfix_paramet": [97, 98, 239, 240, 332], "fix_parameters_to": [97, 207, 239, 332], "60": [100, 314, 327, 332, 339], "63": [100, 126, 331, 332, 341], "cmax": [104, 306, 332], "tmax": [104, 306, 332], "cmin": [104, 306, 332], "tmin": [104, 306, 332], "doseid": [104, 108, 332], "589": [104, 109, 332], "get_baselin": [106, 306, 332], "set_covari": [106, 332], "period": [108, 332], "96": [109, 235, 304, 314, 332, 333], "retriev": [112, 113, 120, 121, 128, 129, 130, 132, 261, 262, 281, 285, 288, 306, 330, 331, 332, 350], "those": [113, 309, 327, 332, 349], "often": [113, 308, 312, 330, 344], "get_pd_paramet": 113, "get_pk_paramet": [113, 128, 129, 132, 306], "get_rv_paramet": [113, 128, 130, 151, 306], "has_random_effect": [113, 128, 132, 306], "opr": [114, 125, 131], "get_population_prediction_express": [114, 306], "epress": [114, 131], "condit": [115, 206, 306, 321, 327, 343, 346], "item": [119, 311, 327], "activ": [120, 121, 122, 312, 327], "get_number_of_observ": [120, 126, 306, 332], "get_number_of_observations_per_individu": [120, 121, 126, 306, 332], "total": [121, 222, 287, 306, 332, 348], "get_number_of_individu": [121, 122, 306, 332], "observation_count": 122, "unicod": 125, "oeta\u2082": 125, "oeta\u2081": 125, "keep_index": [126, 306], "112": [126, 331, 332, 341], "131": [126, 331, 332], "73": [126, 310, 331, 332, 343], "get_theta": [127, 133, 306], "get_sigma": [127, 134, 306], "var_typ": 128, "get_individual_paramet": [128, 130, 132, 151, 306], "get_individual_prediction_express": [131, 306], "get_omega": [133, 134, 306], "structur": [134, 264, 268, 283, 306, 308, 314, 316, 324, 326, 329, 330, 333, 347, 349], "00": [134, 310, 321, 330, 331, 332, 339, 341, 342, 344], "olumn": 135, "milligram": [135, 316], "liter": [135, 316], "kilogram": [135, 316], "named_subscript": 137, "greek": 137, "subscript": 137, "cleanup_model": [137, 306], "\u03b8\u2081": 137, "\u03b8\u2082": 137, "\u03b8\u2083": 137, "\u03b7\u2081": 137, "\u03b7\u2082": 137, "\u03b5\u2081": 137, "mani": [138, 139, 150, 191, 306, 332, 342], "has_proportional_error_model": [138, 139, 153, 306], "has_combined_error_model": [138, 150, 153, 306], "has_weighted_error_model": [138, 139, 150, 306], "has_additive_error_model": [139, 150, 153, 306], "reli": [142, 146, 147, 155, 327], "heurist": [142, 146, 147, 155], "abl": [142, 146, 147, 155, 306, 320, 323, 337, 338, 346], "detect": [142, 146, 147, 155, 306, 323, 330, 337, 351], "instantan": [143, 208, 329], "has_od": [144, 145, 306], "has_linear_odes_with_real_eigenvalu": [144, 148, 306], "has_linear_od": [145, 148, 306], "micha": [146, 147, 211, 212, 222, 329, 348], "menten": [146, 147, 211, 212, 222, 329, 348], "set_michaelis_menten_elimin": [146, 204, 212, 227, 306, 332], "michali": 147, "set_mixed_mm_fo_elimin": [147, 332], "add_metabolit": [149, 306], "sequenti": [152, 219, 306, 329, 333], "dpharmpi": 152, "has_zero_order_absorpt": [152, 306], "has_first_order_absorpt": 152, "set_zero_order_elimin": [155, 204, 211, 212, 306, 332], "determin": [156, 157, 189, 250, 268, 272, 324, 326, 327, 333, 342], "model1": [156, 306], "model2": 156, "constraint": [157, 210, 224, 229, 237, 239, 306, 317], "get_covariate_baselin": [158, 306, 332], "load": [159, 160, 197, 252, 323], "unload_dataset": [159, 197, 306], "statment": 161, "theta_1": [162, 330], "\u03bc\u2081": 162, "\u03bc\u2082": 162, "dataset_or_model": [163, 189], "name_pattern": [163, 189], "omitted_": 163, "omiss": 163, "omit": [163, 314, 348], "placehold": [163, 189], "yield": [163, 188, 189], "cwre": [164, 165, 171, 277, 278, 331, 332, 341, 343], "chart": [164, 165, 166, 167, 168, 169, 170, 304], "strat": 166, "stratif": [166, 189, 308], "vconcatchart": [166, 321], "facetchart": 168, "iofv1": 169, "iofv2": 169, "against": [169, 327], "iofv": [169, 278, 304, 306, 328, 331, 345], "scatterplot": 169, "res1": 169, "res2": 169, "individual_ofv": [169, 287, 306, 331], "nonlin": 169, "problem": [171, 175, 306, 314, 320, 324, 326, 327, 328, 332, 334], "subroutin": [171, 306, 327, 332, 334], "advan1": [171, 332, 334], "trans2": [171, 332, 334], "IF": [171, 306, 327, 332], "gt": [171, 332], "lt": [171, 332], "npde": [171, 332], "noappend": [171, 332], "noprint": [171, 332], "onehead": [171, 332], "sigma\u2081": [172, 330], "\u2081": [172, 330], "home": [174, 306, 330], "run1": [174, 262, 332], "mod": [174, 281, 283, 306, 308, 310, 316, 330, 331, 332], "read_model_from_databas": [174, 175, 306], "databas": [174, 175, 260, 281, 282, 283, 285, 288, 289, 292, 298, 303, 306, 349], "read_model_from_str": [174, 306, 332], "err": [175, 332], "has_covariate_effect": [177, 306], "unrun": 178, "to_remov": [180, 181], "eta_iov_1_1": 181, "add_lag_tim": [182, 223, 306, 332], "uloq": 183, "alq": 183, "loq": [183, 264, 308], "consecut": [183, 232], "736": 183, "set_lloq_data": [183, 232, 306], "add_peripheral_compart": [185, 215, 306, 332], "new_nam": [187, 213], "renam": [187, 306], "clash": [187, 281, 283], "occur": [187, 216, 320, 324, 326, 327], "constant": [188, 194, 222, 326, 348], "resampl": [189, 265], "stratifi": [189, 308], "sample_s": [189, 308], "resample_": 189, "randomli": [189, 192, 342], "renumb": [189, 308], "upward": 189, "valueerror": 189, "rais": [189, 243, 306, 342], "strata": 189, "stratum": 189, "suppli": [189, 324, 326, 333, 341], "control": [189, 312, 326, 327, 330], "pattern": [189, 327], "samples_per_id": 190, "pool": [190, 324], "iec": 190, "127941": 190, "037273": 190, "065492": 190, "182851": 190, "263323": 190, "265849": 190, "295883": 190, "060346": 190, "012108": 190, "219967": 190, "034279": 190, "040988": 190, "187879": 190, "143184": 190, "088845": 190, "034655": 190, "187779": 190, "014214": 190, "019953": 190, "151151": 190, "sample_parameters_from_covariance_matrix": [190, 192, 306], "sample_parameters_uniformli": [190, 191, 306], "uniform": [190, 191, 192, 342], "force_posdef_sampl": [191, 192, 308], "force_posdef_covmatrix": [191, 308], "never": [191, 333], "005069": 191, "974989": 191, "204629": 191, "024756": 191, "012088": 191, "012943": 191, "004690": 191, "958431": 191, "233231": 191, "038866": 191, "029000": 191, "012516": 191, "004902": [191, 304], "950778": 191, "128388": 191, "019020": 191, "023866": 191, "013413": [191, 342], "sample_individual_estim": [191, 192, 306], "estiat": [191, 192], "reject": 192, "004878": 192, "908216": 192, "149441": 192, "029179": 192, "025472": 192, "012947": 192, "004828": 192, "014444": 192, "149958": 192, "028853": 192, "027653": 192, "013348": 192, "004347": 192, "053837": 192, "165804": 192, "028465": 192, "026798": 192, "013727": 192, "data_tran": [193, 195, 217, 306], "series_term": 193, "\u00b2": [193, 195], "epsilon_1": [193, 195, 217], "expans": 193, "approxim": [193, 222, 327, 348], "\u03b5\u2090": [193, 195, 332], "set_proportional_error_model": [193, 195, 306, 332], "set_combined_error_model": [193, 217, 306, 332, 343], "const": 194, "epsilon_2": 195, "remove_error_model": [195, 217, 306, 332], "\u03b5\u209a": [195, 217, 332], "set_additive_error_model": [195, 217, 306, 332], "path_or_df": 197, "load_dataset": [197, 306], "fix_to_log": 199, "dynam": [199, 295, 327], "lambda": [199, 233, 234, 339, 341], "zeta": [199, 339, 341], "emul": 199, "set_instantaneous_absorpt": [203, 219, 226], "list_of_ep": [205, 216], "same_eta": 205, "eta_rv1": 205, "set_power_on_ruv": [205, 306, 332, 343], "get_initial_condit": [206, 306], "remove_loq_data": [209, 232, 306, 332], "set_upper_bound": [210, 237, 332], "unconstrain_paramet": [210, 224, 239, 332], "clmm": [211, 212, 227, 332], "km": [211, 212, 227, 306, 332], "set_first_order_elimin": [211, 212, 227, 306, 332], "advan": [214, 306, 332], "cvode": [214, 267, 308, 320], "advan14": [214, 308], "dgear": [214, 267, 308, 320], "advan8": [214, 308], "dverk": [214, 267, 308, 320], "advan6": [214, 308], "ida": [214, 267, 308, 320], "advan15": [214, 308], "lsoda": [214, 267, 308, 320], "advan13": [214, 308, 332], "lsodi": [214, 267, 308, 320], "advan9": [214, 308], "prefer": [214, 327], "q2": 215, "q3": 215, "v3": 215, "peripheral2": 215, "lower_limit": 216, "zero_protect": [216, 217, 306], "said": 216, "autodetect": 216, "protect": [216, 217, 306, 327], "power\u2081": 216, "set_iiv_on_ruv": [216, 306, 332, 343], "225e": [217, 332], "ipredadj": [217, 332], "ref": [218, 351], "1234": 220, "simulationstep": 220, "quantil": [221, 304, 306], "mediat": [222, 348], "disposit": [222, 348], "irrevers": [222, 348], "bind": [222, 348], "ib": 222, "receptor": [222, 348], "cr": 222, "quasi": [222, 348], "qss": 222, "wagner": 222, "mmapp": 222, "keep_depot": [223, 306], "transit1": 223, "transit2": 223, "k23": 223, "transit3": 223, "k34": 223, "k40": 223, "set_lower_bound": [224, 237, 332], "use_thetas_for_error_stdev": [225, 306, 332], "smallest": [227, 332], "get_zero_order_input": [228, 306], "simplifi": [229, 306, 307, 317, 332, 338], "ab": [229, 234, 308, 332], "analyt": 230, "create_joint_distribut": [231, 306, 332], "m4": [232, 332], "m1": [232, 306, 344], "m3": [232, 332], "m5": [232, 306], "m6": [232, 306], "m7": [232, 306], "overridden": 232, "shown": [232, 319], "discard": 232, "modifi": [232, 306, 316, 327, 336, 350], "beal": 232, "sl": 232, "pharmacodyn": 232, "2001": 232, "oct": 232, "481": 232, "504": 232, "doi": [232, 234, 321, 343], "1023": 232, "1012299115260": 232, "erratum": 232, "2002": 232, "jun": 232, "309": 232, "pmid": 232, "11768292": 232, "cumd": [232, 332], "cumdz": [232, 332], "list_of_eta": [233, 234, 235], "boxcox": [233, 306], "lambda1": [233, 234], "transform_etas_tdist": [233, 234, 306, 332], "transform_etas_john_drap": [233, 235, 306, 332], "john": [234, 306], "draper": [234, 306], "spelect": 234, "1980": 234, "famili": [234, 327], "journal": [234, 343], "royal": 234, "societi": 234, "190": 234, "197": 234, "2307": 234, "2986305": 234, "transform_etas_boxcox": [234, 235, 306, 332], "degre": [235, 341], "freedom": [235, 327, 341], "80": [235, 314, 331, 341, 343], "df1": 235, "translat": [236, 306], "hour": [236, 316], "caution": 236, "reset": [236, 290, 306], "account": 236, "unfix_paramet": [237, 306, 332], "unload": 241, "had": [242, 327, 332], "move_est_close_to_bound": 243, "00469555": 243, "984258": [243, 252, 331], "15892": 243, "0293508": [243, 330], "027906": [243, 252, 330, 331, 342], "sd_eps_1": 244, "set_weighted_error_model": [244, 306, 332], "whose": [245, 327], "suffix": 245, "overwrit": [245, 246], "newdataset": 245, "recalcul": 248, "frem_dir1": 248, "read_result": [248, 261, 306, 310], "model_or_model": [249, 270], "run_tool": [249, 264, 277, 306], "supress_warn": 250, "choos": [250, 306, 324, 327, 333, 334, 336], "supress": 250, "fulfil": [251, 327, 346], "modelfit": [252, 257, 270, 279, 281, 285, 286, 287, 288, 304, 306, 308, 350], "004696": [252, 331, 342], "158920": [252, 331], "029351": [252, 331, 342], "84": [253, 254, 278, 324, 326, 333, 342, 344], "influenti": [253, 254, 278, 306], "machin": [253, 254, 255, 281, 285, 288, 316, 323, 327], "learn": [253, 254, 255, 323], "threshold": [253, 254, 255, 308, 314], "signal": [253, 254, 328], "raw": [253, 254, 255, 278, 304, 306, 316], "delta": [253, 304, 306, 328], "tell": [253, 255, 327], "predict_influential_outli": [253, 255, 306], "predict_outli": [253, 254, 306], "outlier_cutoff": 254, "influential_cutoff": 254, "outlier": [254, 255, 278, 306, 345], "influential_outli": 254, "predict_influential_individu": [254, 255, 306], "simev": [255, 306, 340], "singal": 255, "281443": 255, "057392": 255, "119105": 255, "846849": 255, "600540": 255, "014008": 255, "750734": 255, "247175": 255, "117002": 255, "835389": 255, "529582": 255, "035670": 255, "292333": 255, "303278": 255, "565949": 255, "078192": 255, "291295": 255, "466421": 255, "402343": 255, "699996": 255, "567987": 255, "526776": 255, "303918": 255, "177588": 255, "272142": 255, "390000": 255, "775876": 255, "501528": 255, "700951": 255, "352599": 255, "294196": 255, "744014": 255, "215364": [255, 344], "208691": 255, "713130": 255, "300293": 255, "810736": 255, "459877": 255, "675125": 255, "563835": 255, "526945": 255, "449199": 255, "720714": 255, "792248": 255, "860923": 255, "731858": 255, "247131": 255, "894190": 255, "282737": 255, "153398": 255, "200546": 255, "902774": 255, "586427": 255, "183329": 255, "036930": 255, "639868": 255, "765279": 255, "209665": 255, "225693": 255, "modelfit_result": [256, 286, 306], "base_model": 257, "base_model_r": 257, "models_r": [257, 277, 278], "parent_dict": 257, "bic_typ": 257, "child": 257, "relev": [257, 310, 327, 334], "lrt": [257, 268, 269, 271], "denot": [257, 321, 332], "model_1": [257, 321], "model_2": [257, 321], "create_result": [259, 306], "resum": [260, 264, 298, 308, 349], "resmod_dir1": 260, "retrieve_model": [261, 281, 285, 288, 306, 310], "tooldatabas": [262, 282, 289, 295, 298], "modeldatabas": [262, 281, 283, 292], "tooldir_path": 262, "retrieve_final_model": [262, 306], "allometryresult": 263, "strategi": [264, 306, 324, 333, 349], "amd": [264, 306, 310, 319, 346, 348, 349], "reult": 264, "procedur": [264, 327, 349], "reevalu": 264, "e_max": [264, 274], "search": [264, 266, 271, 274, 306, 308, 310, 314, 326, 329, 338, 349], "proiorit": 264, "crcl": 264, "retri": [264, 272, 306, 349], "run_iiv": [264, 306], "bootstrap": [265, 306, 340], "bootstrapresult": [265, 306], "500": 265, "naming_index_offset": 266, "try": [266, 308, 320, 338, 342, 351], "offset": 266, "covsearchresult": 266, "estmethod": [267, 306, 349], "exhaust": [267, 271, 306, 319], "exhaustive_with_upd": [267, 320], "exhaustive_only_ev": [267, 306, 320], "mode": [267, 306, 321, 327], "estmethodresult": 267, "reduc": [267, 306, 320, 344], "top_down_exhaust": [268, 324], "correlation_algorithm": [268, 324], "iivsearch": [268, 306, 349], "bottom_up_stepwis": [268, 324], "add_diagon": [268, 271, 306, 324, 333], "pd_add_diagon": 268, "pd_fullblock": 268, "argumen": 268, "iivsearchresult": 268, "td_brute_forc": [268, 324], "iovsearch": [269, 306, 349], "criteri": [269, 271, 273], "iovsearchresult": 269, "modelsearch": [271, 277, 306, 310, 319, 348, 349], "modelfeatur": 271, "exhaustive_stepwis": [271, 333], "modelsearchresult": 271, "prefix": [272, 342], "retriesresult": 272, "max_it": [273, 306], "attempt": [273, 314, 327, 342], "assess": [273, 343], "ruvsearchresult": 273, "extra_model": [274, 347, 348], "extra_model_result": [274, 347, 348], "structsearch": [274, 306, 349], "structsearchresult": 274, "model_typ": 274, "arg": 275, "outlier_count": 277, "dofv_vs_par": 277, "predicted_dofv": [277, 278], "predicted_residu": [277, 278], "fit_result": 277, "inf_select": 278, "mathrm": [278, 345], "veebar": 278, "inf_param": 278, "out_ob": 278, "least": [278, 310, 327, 333, 346], "outli": [278, 345], "out_ind": 278, "inf_outli": 278, "summarize_individu": [278, 306], "include_all_estimation_step": 279, "runtim": [279, 287, 306, 320], "wasn": [279, 306], "estmat": 279, "586": [279, 331, 342], "276056": [279, 342], "lzma": [280, 290], "again": [280, 351], "compress": [280, 290], "Not": [280, 316, 327, 333], "save": [280, 290, 293, 306], "file_extens": [281, 283], "nontransactionalmodeldatabas": [281, 288], "local": [281, 282, 283, 285, 288, 289, 292, 312, 324, 327], "store": [281, 282, 283, 285, 288, 289, 292, 306, 310, 334], "modelnam": 281, "recommend": [281, 324, 351], "localmodeldirectorydatabas": 281, "retrieve_fil": [281, 285, 288], "filesystem": [281, 285, 288], "model_nam": [281, 283, 285, 288, 321], "retrieve_local_fil": [281, 285, 288], "destination_path": [281, 285, 288], "retrieve_model_entri": [281, 285, 288], "modelentri": [281, 283, 285, 288], "retrieve_modelfit_result": [281, 285, 288], "store_local_fil": [281, 282, 285, 288, 289, 292], "new_filenam": [281, 285, 288], "store_metadata": [281, 282, 285, 288, 289, 292], "store_model": [281, 285, 288], "store_model_entri": [281, 285, 288], "model_entri": [281, 285, 288], "transact": [281, 283, 285, 288, 327], "store_modelfit_result": [281, 285, 288], "toolnam": [282, 289, 292, 310], "exist_ok": 282, "read_metadata": [282, 289, 292], "source_path": [282, 289, 292], "store_result": [282, 289, 292], "transactionalmodeldatabas": 283, "subdirectori": [283, 310], "list_model": 283, "snapshot": [283, 285], "readabl": [283, 285, 290, 316, 327, 338], "context": [283, 285, 327, 338], "model_or_model_entri": [283, 285], "writabl": [283, 285], "timestamp": 284, "log_error": 284, "log_warn": 284, "abc": [285, 292], "baseclass": 285, "primari": 285, "center": [285, 342], "around": [285, 309], "belong": 285, "attach": [286, 327], "attach_result": 286, "__version__": [287, 290], "107": [287, 290], "ofv_iter": [287, 306], "parameter_estimates_sdcorr": [287, 331], "parameter_estimates_iter": [287, 306], "standard_errors_sdcorr": [287, 331], "relative_standard_error": [287, 331], "minimization_successful_iter": 287, "estimation_runtime_iter": 287, "termination_caus": 287, "termination_cause_iter": 287, "function_evalu": 287, "function_evaluations_iter": 287, "significant_digits_iter": 287, "log_likelihood": 287, "covstep_success": 287, "gradients_iter": 287, "evaluation_ofv": 287, "classic": 287, "caus": [287, 306, 327, 338], "prematur": 287, "maxevals_exceed": [287, 346], "dummi": [288, 289], "anyth": [288, 289, 312, 324, 327], "desir": [288, 289], "get_and_reset_index": 290, "attr": 290, "wrapper": [290, 306, 312, 317, 323, 351], "facilit": 290, "multiindex": [290, 306], "to_csv": 290, "serial": [290, 306, 316, 338], "task_input": 291, "model_databas": 292, "workflowbas": [293, 294], "acycl": 293, "task": [293, 294, 306, 337, 338], "node": [293, 295], "edg": 293, "as_dask_dict": 293, "dask": [293, 295, 306, 338], "plot_dask": 293, "add_task": 294, "predecessor": [294, 327], "insert_workflow": 294, "replace_task": 294, "new_task": 294, "wf": 295, "unique_nam": 295, "db": 295, "whatev": [295, 327], "alia": [296, 297], "localdirectorydatabas": [296, 303], "localdirectorytooldatabas": [297, 303, 310], "dispatch": [298, 303, 306, 310], "execut": [298, 306, 327], "executiondispatch": 298, "default_dispatch": 303, "local_dask": [303, 310], "default_model_databas": 303, "default_tool_databas": 303, "psn": [304, 305, 306, 308, 315, 321, 328, 339, 341, 342, 344, 345, 349, 350], "parameter_statist": 304, "bia": [304, 306], "divid": [304, 308, 334], "005890": 304, "005891": 304, "000460": 304, "078170": 304, "pop_v": 304, "431004": 304, "422850": 304, "073015": 304, "051024": 304, "149260": 304, "124740": 304, "112645": 304, "754686": 304, "189801": 304, "185916": 304, "045563": 304, "240056": 304, "015470": 304, "015184": 304, "003553": 304, "229641": 304, "parameter_distribut": 304, "lowest": [304, 321], "highest": [304, 306, 321, 334], "interpol": 304, "fall": [304, 306], "x_0": 304, "x_1": 304, "np": [304, 316, 330], "004851": 304, "004857": 304, "005031": 304, "005149": 304, "277810": 304, "278405": 304, "283765": 304, "309488": 304, "326434": 304, "000011": 304, "000097": 304, "000869": 304, "006275": 304, "013558": 304, "079940": 304, "080472": 304, "085258": 304, "101225": 304, "119080": 304, "007645": 304, "007719": 304, "008382": 304, "009481": 304, "009956": 304, "97": [304, 314, 348], "006659": 304, "006846": 304, "007353": 304, "007460": 304, "007472": 304, "547333": 304, "582182": 304, "631219": 304, "644090": 304, "645520": 304, "353679": 304, "367954": 304, "416361": 304, "433175": 304, "435043": 304, "265224": 304, "282926": 304, "290666": 304, "291792": 304, "291917": 304, "021341": 304, "022691": 304, "025584": 304, "027052": 304, "027215": 304, "parameter_estimates_histogram": 304, "histogram": [304, 306], "repeatchart": 304, "006755": 304, "52531": 304, "108662": 304, "258316": 304, "011408": 304, "005424": 304, "43599": 304, "270899": 304, "156400": 304, "014023": 304, "006585": 304, "38641": 304, "226891": 304, "162075": 304, "010971": 304, "005757": 304, "47090": 304, "193243": 304, "019133": 304, "006875": 304, "50111": 304, "345382": 304, "176756": 304, "009135": 304, "005683": 304, "34027": 304, "163931": 304, "159868": 304, "010816": 304, "005795": 304, "34379": 304, "075865": 304, "194188": 304, "018041": 304, "006078": 304, "35172": 304, "040387": 304, "214176": 304, "015683": 304, "98": [304, 314, 321, 324], "005353": 304, "44898": 304, "155477": 304, "258743": 304, "020128": 304, "006247": 304, "49069": 304, "125491": 304, "219146": 304, "018971": 304, "ofv_statist": 304, "bootstrap_bootdata_ofv": 304, "original_bootdata_ofv": 304, "sum": [304, 315], "bootstrap_origdata_ofv": 304, "boostrap": 304, "original_origdata_ofv": 304, "delta_bootdata": 304, "delta_origdata": 304, "08165": 304, "729": 304, "644638": 304, "737749": 304, "ofv_distribut": 304, "parameter_distriut": 304, "593": 304, "389406": 304, "972104": 304, "599": 304, "216391": 304, "654": [304, 306], "548507": 304, "660": 304, "573965": 304, "795": 304, "776225": 304, "803": 304, "946508": 304, "816": 304, "836314": 304, "820": [304, 306, 331], "873796": 304, "821": 304, "322405": 304, "ofv_plot": 304, "dofv_quantiles_plot": 304, "show": [304, 308, 319, 321, 327, 335, 341, 342, 345], "metric": [304, 305, 331], "chi": 304, "squar": [304, 319], "664": 304, "272157": 304, "749": 304, "459450": 304, "061103": 304, "725470": 304, "679": 304, "585721": 304, "702": 304, "481949": 304, "748": 304, "074871": 304, "710": [304, 306], "203812": 304, "787": [304, 320], "180418": 304, "771": 304, "202034": 304, "119974e": 304, "491440e": 304, "096413e": 304, "005331": 304, "000922": 304, "001519": 304, "460998e": 304, "365879e": 304, "012689": 304, "000981": 304, "760432e": 304, "331894e": 304, "002076": 304, "755294e": 304, "000035": 304, "000176": 304, "000078": 304, "262063e": 304, "included_individu": 304, "case_result": [305, 306], "cook_scor": 305, "jackknife_cook_scor": 305, "delta_ofv": 305, "dofv_influenti": 305, "130159": 305, "121389": 305, "015207": 305, "348263": 305, "336159": 305, "144045": 305, "192433": 305, "181125": 305, "031030": 305, "163095": 305, "155901": 305, "026142": 305, "422651": 305, "404915": 305, "190732": 305, "374312": 305, "343311": 305, "097063": 305, "169869": 305, "163883": 305, "026223": 305, "263865": 305, "254943": 305, "058123": 305, "757098": 305, "673587": 305, "477910": 305, "150161": 305, "144191": 305, "023623": 305, "361646": 305, "352901": 305, "217902": 305, "255533": 305, "215005": 305, "035375": 305, "191848": 305, "187019": 305, "038199": 305, "376365": 305, "337975": 305, "096680": 305, "142806": 305, "137340": 305, "014709": 305, "193393": 305, "179744": 305, "031711": 305, "131746": 305, "122842": 305, "020637": 305, "176644": 305, "932149": 305, "036787": 305, "128197": 305, "120498": 305, "019030": 305, "141093": 305, "138101": 305, "029021": 305, "176582": 305, "153583": 305, "035291": 305, "104396": 305, "100064": 305, "015499": 305, "552071": 305, "501458": 305, "278595": 305, "242334": 305, "217068": 305, "047627": 305, "792099": 305, "715951": 305, "798775": 305, "135247": 305, "133493": 305, "021356": 305, "442779": 305, "424958": 305, "125763": 305, "132903": 305, "127188": 305, "010157": 305, "081122": 305, "076790": 305, "005443": 305, "183624": 305, "168501": 305, "027707": 305, "113959": 305, "111168": 305, "012363": 305, "532749": 305, "515747": 305, "325048": 305, "094133": 305, "091212": 305, "014747": 305, "447798": 305, "406737": 305, "194457": 305, "364978": 305, "352973": 305, "124295": 305, "270838": 305, "252922": 305, "063675": 305, "129553": 305, "121963": 305, "014043": 305, "254914": 305, "243250": 305, "064025": 305, "207529": 305, "194633": 305, "046887": 305, "239182": 305, "218112": 305, "044252": 305, "181986": 305, "173826": 305, "020285": 305, "604112": 305, "584208": 305, "604211": 305, "407717": 305, "369648": 305, "154161": 305, "215722": 305, "196744": 305, "043742": 305, "214167": 305, "200091": 305, "036238": 305, "094284": 305, "089002": 305, "007506": 305, "074174": 305, "072365": 305, "007535": 305, "743323": 305, "717468": 305, "654313": 305, "153971": 305, "147360": 305, "014502": 305, "284706": 305, "278460": 305, "072960": 305, "331587": 305, "309374": 305, "116933": 305, "447965": 305, "421612": 305, "129593": 305, "184872": 305, "175196": 305, "029896": 305, "430382": 305, "415446": 305, "141657": 305, "409307": 305, "369197": 305, "189729": 305, "084764": 305, "079718": 305, "007416": 305, "107600": 305, "103145": 305, "013947": 305, "154672": 305, "150761": 305, "028236": 305, "155632": 305, "150461": 305, "034848": 305, "covariance_ratio": 305, "skipped_individu": 305, "050505": 305, "963884": 305, "058896": 305, "087449": 305, "985403": 305, "029066": 305, "101636": 305, "086424": 305, "017369": 305, "094799": 305, "849310": 305, "121111": 305, "049151": 305, "096456": 305, "070088": 305, "040691": 305, "065881": 305, "606158": 305, "205007": 305, "099191": 305, "143483": 305, "050691": 305, "086007": 305, "156273": 305, "919336": 305, "056714": 305, "999221": 305, "029600": 305, "034017": 305, "108785": 305, "038495": 305, "954054": 305, "053618": 305, "096334": 305, "943556": 305, "125423": 305, "086167": 305, "145822": 305, "113939": 305, "114399": 305, "057664": 305, "788608": 305, "063991": 305, "115559": 305, "160549": 305, "034685": 305, "035618": 305, "714976": 305, "092664": 305, "089158": 305, "054565": 305, "002555": 305, "032356": 305, "003056": 305, "936719": 305, "122771": 305, "078285": 305, "096841": 305, "068821": 305, "sqrt": [305, 332], "p_i": 305, "p_": 305, "orig": 305, "sum_": 305, "overlin": [305, 321], "_j": 305, "_k": [305, 321], "det": 305, "Then": [305, 321, 332], "ofv_": 305, "iofv_": 305, "iofv_k": 305, "ofv_k": 305, "case_column": 305, "rikard": [305, 307, 313, 338, 343], "nordgren": [305, 307, 313, 338, 343], "sebastian": [305, 307, 313], "ueckert": [305, 307, 313], "svetlana": 305, "freiberga": 305, "karlsson": [305, 307, 313, 321, 343], "faster": [305, 306, 338], "2018": [305, 327, 343], "abstr": [305, 307], "8683": 305, "www": [305, 307, 327], "meet": [305, 307, 309, 327, 338], "set_dataset": 306, "symengin": [306, 317, 338], "invalid": [306, 327], "filter_dataset": 306, "dir_nam": 306, "get_central_volume_and_clear": 306, "phc": 306, "subtool": [306, 310, 346, 349], "write_csv": 306, "frem": [306, 330, 340, 341], "postprocess": [306, 340], "bin_observ": 306, "plot_dv_vs_pr": 306, "plot_abs_cwres_vs_ipr": 306, "stagewis": 306, "clearenc": 306, "replace_non_random_rv": 306, "get_observ": [306, 332], "is_strictness_fulfil": 306, "properli": 306, "calculate_b": [306, 324, 326, 333], "incorrectli": 306, "final_model": 306, "plot_dv_vs_ipr": 306, "plot_cwres_vs_idv": 306, "add_indirect_effect": 306, "circul": 306, "version": [306, 308, 310, 323, 327], "blqdv": 306, "better": [306, 324, 333, 342, 343], "usag": [306, 308], "set_reference_valu": 306, "create_basic_pk_model": [306, 332], "add_bioavail": 306, "autogener": 306, "typ": 306, "add_effect_compart": 306, "reorgan": 306, "saddl": 306, "llq": 306, "preced": 306, "reorder": 306, "model4": 306, "create_report": 306, "write_model": [306, 330, 332, 334], "did": [306, 344], "dadt": [306, 332], "de": [306, 332], "set_zero_order_input": 306, "set_tmdd": 306, "plugin": [306, 312, 317, 318, 325], "generate_model_cod": 306, "get_model_cod": 306, "advan7": 306, "didn": 306, "header": 306, "is_linear": 306, "plot_transformed_eta_distribut": 306, "create_config_templ": [306, 311], "get_dv_symbol": 306, "set_initial_condit": 306, "abbr": [306, 332, 334], "set_dvid": [306, 332], "regress": 306, "defdos": [306, 332], "sometim": 306, "wrong": 306, "bad": 306, "1551": 306, "is_real": 306, "advan5": 306, "copy_model": 306, "nlmixr2": [306, 325, 331, 332], "display_od": 306, "rework": 306, "run_covsearch": [306, 314], "explicitodesystem": 306, "eval": 306, "successfulli": [306, 342, 351], "round": [306, 316, 346], "proxi": [306, 327], "1314": 306, "1355": [306, 314], "1378": [306, 324], "typo": 306, "1377": 306, "1381": 306, "mm": [306, 329, 333], "1064": [306, 324], "afd7707": 306, "1139": 306, "1394": 306, "too": [306, 327], "1117": 306, "timeout": 306, "loop": 306, "wait": 306, "lst": [306, 310], "much": 306, "ncomp": 306, "deidentify_data": [306, 332], "cli": 306, "anonym": 306, "setter": 306, "multivari": 306, "1293": 306, "1302": [306, 314], "1303": [306, 333], "last20": 306, "run_modelsearch": [306, 310, 333], "run_iovsearch": [306, 326], "run_ruvsearch": [306, 343], "run_iivsearch": [306, 324], "nomem": 306, "rh": 306, "1180": 306, "887": [306, 324, 326], "1162": 306, "1032": 306, "add_covariate_effect": [306, 332], "1004": 306, "1181": 306, "9fd701521": 306, "best_model": 306, "final_model_nam": 306, "a7fbcbfe2": 306, "update_initial_individual_estim": 306, "modelsearch_candidate1": [306, 310, 333], "wors": 306, "calculate_a": 306, "check_parameters_near_bound": 306, "check_high_correl": 306, "plot_iofv_vs_iofv": 306, "plot_individual_predict": 306, "evaluate_express": 306, "evaluate_weighted_residu": 306, "parameter_esimt": 306, "calculate_pk_parameters_statist": 306, "update_init": [306, 332], "predict_": 306, "summarize_individuals_count_t": 306, "print_fit_summari": 306, "write_result": 306, "rank_model": 306, "speedup": 306, "297a64041": 306, "1101": 306, "57fc4fee8": 306, "fd417aaf": 306, "convert_model": [306, 332], "d5458e36": 306, "keyerror": 306, "localmodeldirectori": 306, "filenotfounderror": 306, "1193bd39": 306, "unus": 306, "submodul": 306, "bb96a13c": 306, "update_paramet": 306, "0ca786c5": 306, "dd056da3": 306, "915bc9c7": 306, "get_config_path": [306, 311], "disabl": [306, 309, 311], "82b32278": 306, "unwant": 306, "debug": 306, "1131a610": 306, "ebfafb45": 306, "1173": 306, "fb070ee1": 306, "1049": [306, 324], "pyreadr": 306, "easier": [306, 317, 330], "instal": [306, 308, 311, 327, 350], "mac": [306, 312], "get_evid": [306, 332], "resmod": [306, 340], "916": 306, "errors_allow": 306, "1055": 306, "attibut": 306, "1092": 306, "exlud": 306, "unreport": 306, "1076": 306, "988": 306, "1c65359": 306, "42fe72f": 306, "1001": 306, "lead": 306, "uneven": 306, "branch": [306, 312], "stepwis": [306, 310, 314, 319, 344], "694": 306, "708": 306, "comment": [306, 334], "790": 306, "974": 306, "produc": [306, 327], "1017": 306, "989": 306, "71f4cf23": 306, "dsl": 306, "932": 306, "973": 306, "cfc09bad": 306, "975": 306, "917": 306, "977": 306, "908": 306, "fd564168": 306, "088a046a": 306, "c76fa476": 306, "430f1d2e": 306, "make_declar": 306, "greekify_model": 306, "find_clearance_paramet": 306, "find_volume_paramet": 306, "vp": 306, "newer": 306, "seprat": 306, "solv": 306, "sporad": 306, "race": [306, 309], "lazi": 306, "duplic": 306, "745": 306, "1st": 306, "3rd": 306, "licens": [306, 311], "advanx": 306, "add_time_after_dos": [306, 332], "intercompartment": 306, "695": 306, "defob": 306, "gl": 306, "solve_ode_system": 306, "meta": 306, "switch": [306, 338], "read_dataset_from_datainfo": [306, 332], "addl": 306, "linalgerror": 306, "656": [306, 324], "summary_individu": 306, "tflite": [306, 323], "649": 306, "expand_additional_dos": [306, 332], "dbic": [306, 319, 324, 326, 333, 335, 348], "modelsyntaxerror": 306, "588": 306, "625": [306, 324], "578": 306, "vc1": 306, "577": 306, "success": [306, 309, 314, 320, 324, 326, 346], "632": 306, "636": 306, "boundari": [306, 326, 333, 346], "590": 306, "gl_real": 306, "sampled_iofv": [306, 345], "subblock": 306, "check_dataset": [306, 332], "tensorflow": 306, "modelbuild": 306, "add_mdt_iiv": 306, "add_eta": [306, 341], "etas_as_fullblock": 306, "iiv_as_fullblock": 306, "add_mdt_eta": 306, "wip": 306, "don": 306, "130": 306, "calculate_se_from_inf": 306, "calculate_cov_from_inf": 306, "calculate_inf_from_cov": 306, "calculate_inf_from_corrs": 306, "calculate_corr_from_inf": 306, "528": 306, "457": 306, "translate_nmtran_tim": [306, 332], "print_model_cod": [306, 323, 332], "has_michaelis_menten_elimin": 306, "has_zero_order_elimin": 306, "has_first_order_elimin": 306, "has_mixed_mm_fo_elimin": 306, "2c": 306, "1c": 306, "timevari": 306, "create_symbol": 306, "remove_unused_parameters_and_rv": 306, "mu_reference_model": 306, "simplify_express": 306, "bump_model_numb": 306, "get_doseid": [306, 332], "get_unit_of": 306, "get_concentration_parameters_from_data": [306, 332], "resample_data": 306, "omit_data": 306, "get_observation_express": 306, "get_individu": 306, "get_dos": [306, 332], "list_time_varying_covari": [306, 332], "estmeth": 306, "optim": [306, 317, 330, 338], "incorrect": 306, "add_allometri": [306, 332], "add_covariance_step": 306, "remove_covariance_step": 306, "insert_aft": 306, "modelstat": 306, "power_on_ruv": 306, "estimationmethod": 306, "guard": 306, "avoid": [306, 317, 327, 351], "cdd": 306, "bipp": [306, 308], "5000": 306, "shift": 306, "nest": 306, "set_dtbs_error_model": [306, 332], "dure": [306, 312, 349, 351], "logger": 306, "parametr": 306, "broken": 306, "parallel": [306, 342, 349], "print_model_symbol": 306, "parameter_sampl": 306, "api": [306, 317, 332, 337, 338, 350], "improv": [306, 341], "eta_shrinkag": 306, "summarize_model": 306, "window": [306, 312, 323, 327], "rstudio": [306, 338, 351], "zero_order_absorpt": 306, "first_order_absorpt": 306, "bolus_absorpt": 306, "set_bolus_absorpt": [306, 332], "seq_zo_fo_absorpt": 306, "set_seq_zo_fo_absorpt": [306, 332], "have_zero_order_absorpt": 306, "individual_shrinkag": 306, "individual_parameter_statist": 306, "pk_paramet": 306, "create_rv_block": 306, "split_rv_block": 306, "nind": 306, "nob": 306, "nobsi": 306, "remove_error": 306, "additive_error": 306, "proportional_error": 306, "combined_error": 306, "has_additive_error": 306, "has_proportional_error": 306, "has_combined_error": 306, "theta_as_stdev": 306, "set_dtbs_error": 306, "tdist": [306, 339], "john_drap": 306, "add_individual_paramet": 306, "first_order_elimin": 306, "zero_order_elimin": 306, "michaelis_menten_elimin": 306, "mixed_mm_fo_elimin": 306, "revert": 306, "thread": [306, 309], "site": 306, "crossval": [306, 340], "qa": [306, 340], "plain": [306, 311, 312], "sdcorr": 306, "data_transform": 306, "evalut": 306, "dependent_variable_symbol": 306, "releas": [306, 327, 351], "claus": 306, "interfac": [306, 317, 323, 325, 327, 330, 332, 338, 350, 351], "com": 306, "stdin": 306, "123": [306, 331], "clearer": 306, "prioriti": [306, 334], "aggregatedmodelfitresult": 306, "half": [306, 339, 341], "life": [306, 339, 341], "set_nam": 306, "parameter_init": 306, "base_parameter_chang": [306, 321], "parameter_vari": [306, 321, 341], "coeffici": 306, "frem_result": 306, "simevalresult": 306, "odesystem": 306, "nonfixed_init": 306, "parameterset": 306, "migrat": 306, "github": [306, 312, 323, 325, 338, 351], "action": [306, 308, 309, 312, 327, 338], "columntyp": 306, "to_base_model": 306, "comined_mm_fo_elimin": 306, "absorption_r": 306, "pretti": 306, "qaresult": 306, "nmtranparseerror": 306, "error_model": 306, "pharmpyconfigpath": [306, 311], "environ": [306, 309, 350, 351], "linearizeresult": 306, "reset_indic": 306, "multiindic": 306, "functionsadd_lag_tim": 306, "yaml": 306, "view": [306, 327, 344], "assumpt": [306, 327], "0th": 306, "parser": 306, "individul": 306, "extend": [306, 327, 341, 344], "librari": [306, 323, 325, 327, 338, 351], "stella": [307, 313, 338], "belin": [307, 313, 338], "gunnar": [307, 313], "yngman": [307, 313, 321], "simon": [307, 313], "carter": [307, 313], "buatoi": [307, 313], "jo\u00e3o": [307, 313], "abrant": [307, 313], "andrew": [307, 313], "hooker": [307, 313], "assemblerr": 307, "novel": 307, "process": [307, 312, 343], "2021": [307, 321], "9656": 307, "subcommand": 308, "top": [308, 310, 316], "help": [308, 309, 314, 329, 332, 338, 351], "verb": 308, "particular": [308, 309, 312, 316, 327, 328], "welcom": [308, 309, 312, 327], "exit": 308, "program": [308, 309, 323, 327], "pheno_r": [308, 316, 330, 331, 332], "prettyprint": 308, "output_fil": 308, "idcol": 308, "datecol": 308, "match": 308, "pager": 308, "stdout": [308, 310], "colnam": 308, "datasetsmultipl": 308, "givenbi": 308, "cov_sampl": 308, "posdef": 308, "non_fix": 308, "input_path": 308, "runord": 308, "quot": 308, "particip": 309, "project": [309, 312, 325, 327, 351], "made": [309, 314, 327, 330, 342], "member": 309, "globe": 309, "divers": 309, "skill": [309, 338], "person": [309, 327], "experi": 309, "growth": 309, "everyon": [309, 312, 327], "guidelin": 309, "insid": [309, 327, 348], "goal": 309, "inclus": [309, 327, 341], "grow": 309, "pledg": 309, "treat": [309, 312, 327, 348], "peopl": 309, "harass": 309, "bulli": 309, "sexual": 309, "orient": 309, "gender": 309, "ident": 309, "appear": [309, 351], "nation": [309, 313], "ethnic": 309, "religion": 309, "imageri": 309, "sexist": 309, "racist": 309, "exclusionari": 309, "joke": 309, "acknowledg": [309, 327], "citat": 309, "request": [309, 312], "author": [309, 327], "own": [309, 311, 317, 327], "cite": 309, "realiz": 309, "varieti": 309, "opinion": 309, "background": 309, "serv": [309, 327, 335, 338], "enrich": 309, "discuss": 309, "pro": 309, "con": 309, "technologi": 309, "proactiv": 309, "ensur": [309, 327, 342], "heard": 309, "feel": [309, 338], "confid": 309, "freeli": 309, "answer": 309, "respectfulli": 309, "pai": 309, "attent": 309, "feedback": 309, "forum": 309, "especi": 309, "contribut": [309, 313, 325, 327], "conscienti": 309, "percept": 309, "wider": 309, "respond": 309, "strive": 309, "behavior": 309, "encourag": [309, 312, 317, 325], "debat": 309, "disagr": 309, "silent": 309, "violat": [309, 327], "contact": [309, 327], "talk": 309, "privat": [309, 327], "situat": 309, "onlin": 309, "offlin": 309, "mail": [309, 327], "social": 309, "media": 309, "confer": 309, "adapt": [309, 327], "astropi": 309, "aspect": [310, 324, 332, 341], "modelsearch_dir1": 310, "hash": 310, "modelsearch_candidate2": [310, 333], "mytab_mox1": 310, "modelsearch_candidate3": [310, 333], "modelsearch_candidate4": [310, 333], "subfold": 310, "softwar": [310, 327, 330, 331, 332, 338, 349], "temporari": 310, "finish": 310, "your": [310, 312, 323, 325, 327, 334, 351], "script": [310, 327], "null": [310, 316, 324, 326, 333, 351], "addition": [310, 320, 333], "quickli": [310, 343], "recreat": 310, "frame": 310, "programmat": 310, "pharmpy_vers": 310, "tool_nam": 310, "start_tim": 310, "2022": [310, 314, 320, 324, 326, 333], "22t14": 310, "312240": 310, "02": [310, 314, 341, 344], "end_tim": 310, "592109": 310, "mox2": [310, 314, 320, 324, 326, 333], "common_opt": 310, "tmp": 310, "tool_result": 310, "subsequ": [310, 333, 334], "thu": [310, 317, 324, 327, 330], "global": [311, 351], "nonmen": 311, "conf": 311, "ini": [311, 332], "default_nonmem_path": 311, "nmfe751": 311, "licfil": 311, "rpath": 311, "temporarili": 311, "pharmpyconfigfil": 311, "bug": 312, "appreci": 312, "suggest": [312, 325], "suitabl": [312, 338], "student": [312, 338], "commun": [312, 327], "aspir": 312, "conduct": [312, 333], "foster": 312, "linux": [312, 323], "maco": [312, 323], "ll": [312, 332], "badg": 312, "pip": [312, 323], "python3": 312, "pip3": 312, "guid": [312, 316, 330, 332], "former": 312, "ubuntu": 312, "apt": 312, "url": [312, 323], "render": [312, 327, 338], "On": [312, 338], "sudo": 312, "brew": 312, "unnecessari": [312, 327], "thing": [312, 327], "instruct": [312, 323, 331, 349], "black": 312, "formatt": 312, "flake8": 312, "linter": 312, "isort": 312, "lint": 312, "reformat": 312, "py39": 312, "test_paramet": 312, "py": [312, 323], "test_get_theta": 312, "apart": 312, "suit": 312, "purpos": [312, 327], "test_modelsearch": 312, "test_summary_individu": 312, "pull": 312, "manag": 312, "contributor": [312, 327], "emploi": 312, "commit": [312, 327], "push": 312, "name_of_branch": 312, "deploy": 312, "setup": 312, "pypi": [312, 323], "trigger": [312, 330], "tag": 312, "disturb": 312, "checkout": 312, "rebas": 312, "changelog": 312, "bump": 312, "good": [312, 327], "semant": 312, "bumpvers": 312, "cfg": 312, "sh": 312, "patch": 312, "minor": 312, "major": [312, 327], "copyright": 312, "necessari": [312, 327], "coi": 312, "stream": [312, 330], "verbatim": [312, 327], "farmaci": 313, "uu": 313, "johan": 313, "borg": 313, "antonia": 313, "hufnagl": 313, "kajsa": 313, "harl": 313, "zhe": [313, 338], "huang": [313, 338], "aurelien": 313, "oom": 313, "viktor": 313, "rogn\u00e5": 313, "piyanan": 313, "assawasuwannakit": 313, "xiaomei": 313, "chen": 313, "alzahra": 313, "hamdan": 313, "osama": 313, "qutishat": 313, "shijun": 313, "wang": 313, "tianwu": 313, "yang": 313, "keqi": 313, "shi": 313, "xuanlin": 313, "liu": 313, "samia": 313, "moham": 313, "yersultan": 313, "mirasbekov": 313, "warm": 313, "thank": 313, "sponsor": 313, "hoffman": 313, "la": 313, "roch": 313, "ltd": 313, "pharmetheu": 313, "uppsala": [313, 325], "univers": [313, 325], "enabl": [313, 327], "resourc": 313, "swedish": 313, "infrastructur": 313, "snic": 313, "uppmax": 313, "research": [313, 338], "council": 313, "inter": [314, 324, 332], "five": [314, 348], "sai": [314, 327, 334], "forcefulli": 314, "rewritten": 314, "notic": [314, 327], "semicolon": 314, "sentenc": 314, "filtrat": [314, 333], "filtered_input_model": 314, "reflect": 314, "covsearch_run1": 314, "covsearch_run2": 314, "covsearch_run3": 314, "covsearch_run4": 314, "covsearch_run5": 314, "covsearch_run6": 314, "covsearch_run7": 314, "covsearch_run8": 314, "covsearch_run9": 314, "covsearch_run10": 314, "covsearch_run11": 314, "covsearch_run12": 314, "covsearch_run13": 314, "covsearch_run14": 314, "covsearch_run15": 314, "covsearch_run16": 314, "covsearch_run17": 314, "covsearch_run18": 314, "covsearch_run19": 314, "covsearch_run20": 314, "covsearch_run21": 314, "covsearch_run22": 314, "covsearch_run23": 314, "covsearch_run24": 314, "covsearch_run25": 314, "covsearch_run26": 314, "covsearch_run27": 314, "covsearch_run28": 314, "covsearch_run29": 314, "covsearch_run30": 314, "covsearch_run31": 314, "covsearch_run32": 314, "covsearch_run33": 314, "covsearch_run34": 314, "covsearch_run35": 314, "covsearch_run36": 314, "covsearch_run37": 314, "covsearch_run38": 314, "covsearch_run39": 314, "covsearch_run40": 314, "covsearch_run41": 314, "covsearch_run42": 314, "covsearch_run43": 314, "covsearch_run44": 314, "covsearch_run45": 314, "covsearch_run46": 314, "covsearch_run47": 314, "covsearch_run48": 314, "covsearch_run49": 314, "covsearch_run50": 314, "covsearch_run51": 314, "covsearch_run52": 314, "covsearch_run53": 314, "covsearch_run54": 314, "pvalu": [314, 344], "goal_pvalu": [314, 344], "is_backward": [314, 344], "047127e": 314, "03": [314, 339, 341, 344], "710000e": 314, "568110e": 314, "494490e": 314, "498453e": 314, "459287e": 314, "280678e": 314, "923500e": 314, "003390e": 314, "984500e": 314, "372293e": 314, "176965e": 314, "207550e": 314, "626878e": 314, "564495e": 314, "539960e": 314, "762000e": 314, "823200e": 314, "417058e": 314, "759040e": 314, "469024e": 314, "811054e": 314, "642452e": 314, "840779e": 314, "261720e": 314, "651215e": 314, "954671e": 314, "163414e": 314, "926594e": 314, "491049e": 314, "423998e": 314, "706676e": 314, "374390e": 314, "054865e": 314, "105347e": 314, "300000e": 314, "029682e": 314, "641559e": 314, "748923e": 314, "363918e": 314, "203548e": 314, "052323e": 314, "567877e": 314, "507358e": 314, "510000e": 314, "1292": [314, 320, 324, 326, 333], "186761": [314, 320, 324, 326, 333], "742325": 314, "929085": 314, "315057": 314, "1346": 314, "501817": 314, "978215": 314, "1332": 314, "164976": 314, "062682": 314, "1312": 314, "249442": 314, "061671": 314, "248431": 314, "056538": 314, "1313": [314, 333], "243298": 314, "732689": 314, "919450": 314, "651626": 314, "1335": 314, "838386": 314, "814832": 314, "1334": 314, "001593": 314, "363759": 314, "550520": 314, "989077": 314, "175838": 314, "136326": 314, "323087": 314, "387950": 314, "1316": 314, "574711": 314, "961688": 314, "148448": 314, "743393": 314, "930153": 314, "617998": 314, "1340": 314, "804759": 314, "641996": 314, "1345": 314, "828756": 314, "288366": 314, "1357": 314, "475127": 314, "263168": 314, "1343": [314, 324], "449928": 314, "814686": 314, "1319": 314, "001446": 314, "181808": 314, "368568": 314, "957602": 314, "144362": 314, "567343": 314, "1347": 314, "754104": 314, "426389": 314, "613149": 314, "324567": 314, "1358": 314, "511327": 314, "446030": 314, "632790": 314, "549224": 314, "1326": 314, "735985": 314, "997342": 314, "184102": 314, "617389": 314, "1351": 314, "804150": 314, "900404": 314, "1350": 314, "087164": 314, "566615": 314, "1391": 314, "753375": 314, "929659": 314, "1352": 314, "116420": 314, "990522": 314, "177283": 314, "217267": 314, "404028": 314, "62": [314, 339], "729333": 314, "1354": 314, "916093": 314, "101": [314, 332], "379219": 314, "1393": 314, "565980": 314, "67": [314, 341, 344], "670588": 314, "1359": 314, "857348": 314, "016040": 314, "202801": 314, "926496": 314, "113256": 314, "139": 314, "462177": 314, "1431": 314, "648937": 314, "83": [314, 341], "706655": 314, "1375": 314, "893415": 314, "798603": 314, "1367": 314, "985364": 314, "801019": 314, "1438": 314, "987780": 314, "92": 314, "443408": 314, "1384": 314, "630169": 314, "997461": 314, "1439": 314, "184221": 314, "322869": 314, "509630": 314, "925020": 314, "111781": 314, "142": 314, "814402": 314, "1435": 314, "001163": [314, 328], "862830": 314, "049591": 314, "449696": 314, "636456": 314, "801017": 314, "987778": 314, "89": [314, 333, 342], "86": 314, "1414": 314, "872375": 314, "93": [314, 320], "810457": 314, "630168": 314, "68": 314, "pop_vc_estim": [314, 320, 326, 343], "pop_mat_estim": [314, 320, 326, 343], "5328": [314, 320, 324, 326, 333], "104": [314, 320, 324, 326, 333], "2300": [314, 320, 324, 333], "433676": [314, 320, 324, 326, 333], "2632": 314, "103": [314, 324, 348], "2400": 314, "447194": 314, "8757": 314, "106": [314, 324, 339, 341, 343], "2690": 314, "429235": 314, "4824": 314, "0490": 314, "435646": 314, "1536": 314, "7690": 314, "430342": 314, "9763": 314, "102": 314, "8640": 314, "428158": 314, "9807": 314, "1030": 314, "505090": 314, "3823": 314, "4790": 314, "453248": 314, "3323": 314, "5279": 314, "434088": 314, "7087": 314, "109": [314, 333], "1750": 314, "459561": 314, "8501": 314, "4740": 314, "428178": 314, "4821": 314, "0270": 314, "435683": 314, "1635": 314, "5920": 314, "433194": 314, "0931": 314, "1120": 314, "435607": 314, "1216": 314, "2180": 314, "519385": 314, "3873": 314, "4580": 314, "453399": 314, "4279": 314, "6231": 314, "442192": 314, "9115": 314, "9240": 314, "466270": 314, "7337": 314, "9590": 314, "409478": 314, "3781": 314, "2760": 314, "415011": 314, "1007": 314, "5110": 314, "446059": 314, "1211": 314, "8490": 314, "522201": 314, "2833": 314, "7400": 314, "430777": 314, "3688": 314, "9010": 314, "444906": 314, "9130": 314, "7450": 314, "468161": 314, "8124": 314, "7120": 314, "407766": 314, "3789": 314, "2080": 314, "416694": 314, "1985": 314, "6770": 314, "441794": 314, "2994": 314, "94": 314, "1796": 314, "587939": 314, "4692": 314, "3027": 314, "440385": 314, "0941": 314, "6170": 314, "463834": 314, "6693": 314, "2570": 314, "413923": 314, "3618": 314, "427491": 314, "2658": 314, "5620": 314, "521096": 314, "4546": 314, "9522": 314, "446657": 314, "0732": 314, "105": [314, 320, 343], "0130": 314, "454492": 314, "7145": 314, "9771": 314, "451302": 314, "3318": 314, "9710": 314, "477444": 314, "4944": 314, "3068": 314, "502124": 314, "0790": 314, "7890": 314, "462595": 314, "7389": 314, "8006": 314, "491811": 314, "6677": 314, "7770": 314, "477864": 314, "6488": 314, "0460": 314, "472418": 314, "9834": 314, "9929": 314, "474434": 314, "0359": 314, "2120": 314, "478021": 314, "0706": 314, "1991": 314, "474688": 314, "0336": 314, "8083": 314, "475373": 314, "0636": 314, "2525": 314, "473063": 314, "0292": 314, "8033": 314, "473542": 314, "0651": 314, "9375": 314, "483644": 314, "0661": 314, "5310": 314, "462817": 314, "0432": 314, "1300": [314, 326], "446808": 314, "7913": 314, "90": 314, "1894": 314, "489466": 314, "9838": 314, "9945": 314, "474441": 314, "0361": 314, "478038": 314, "ruv_prop_estim": [314, 320, 326, 343], "pop_clage_estim": 314, "209972": [314, 320, 324, 326, 333], "197452": 314, "005338": 314, "192852": 314, "199549": 314, "193411": 314, "195608": 314, "192557": 314, "198783": 314, "191425": 314, "192934": 314, "192682": 314, "000659": 314, "199545": 314, "000303": 314, "193747": 314, "000956": 314, "197305": 314, "006150": 314, "194664": 314, "005918": 314, "198812": 314, "000334": 314, "192753": 314, "006503": 314, "194238": 314, "009567": 314, "189160": 314, "005291": 314, "195766": 314, "003125": 314, "195730": 314, "004767": 314, "195098": 314, "006600": 314, "195843": 314, "001364": 314, "189330": 314, "003100": 314, "193116": 314, "008094": 314, "189540": 314, "006380": 314, "196038": 314, "002606": 314, "197429": 314, "000340": 314, "204599": 314, "002549": 314, "190442": 314, "000522": 314, "195705": 314, "005726": 314, "192398": 314, "002984": 314, "196915": 314, "000299": 314, "198387": 314, "001229": 314, "190453": 314, "000216": 314, "197082": 314, "005988": 314, "191512": 314, "002433": 314, "194217": 314, "000649": 314, "191075": 314, "001918": 314, "197129": 314, "005915": 314, "183751": 314, "001489": 314, "187999": 314, "001004": 314, "194026": 314, "005955": 314, "187663": 314, "002481": 314, "193344": 314, "009365": 314, "187822": 314, "002901": 314, "187730": 314, "187425": 314, "002946": 314, "184713": 314, "006622": 314, "187724": 314, "002919": 314, "187525": 314, "003050": 314, "192812": 314, "005142": 314, "183104": 314, "001493": 314, "187672": 314, "002483": 314, "193349": 314, "009366": 314, "pop_clwt_estim": 314, "382904": 314, "010536": 314, "387669": 314, "010497": 314, "396947": 314, "010523": 314, "385807": 314, "010703": 314, "554417": 314, "011851": 314, "519989": 314, "012179": 314, "808497": 314, "011109": 314, "737404": [314, 345], "007109": 314, "709206": 314, "000803": 314, "736659": 314, "000429": 314, "706752": 314, "000822": 314, "662625": 314, "002097": 314, "709124": 314, "000793": 314, "704774": 314, "427285": 314, "003711": 314, "779125": 314, "001087": 314, "007108": 314, "pop_matage_estim": 314, "pop_matsex_estim": 314, "059279": 314, "517590": 314, "056724": 314, "520520": 314, "063392": 314, "057943": 314, "019268": 314, "348000": 314, "008419": 314, "040813": 314, "045624": 314, "023159": 314, "057041": 314, "059912": 314, "003577": 314, "495110": 314, "070972": 314, "033397": 314, "013863": 314, "012482": 314, "367050": 314, "020109": 314, "442940": 314, "030354": 314, "491875": 314, "038044": 314, "224276": 314, "001885": 314, "848782": 314, "017435": 314, "646840": 314, "585757": 314, "000169": 314, "367142": 314, "002221": 314, "737357": 314, "009685": 314, "033267": 314, "009238": 314, "267484": 314, "012667": 314, "165471": 314, "005033": 314, "094740": 314, "010833": 314, "065816": 314, "004749": 314, "096523": 314, "005557": 314, "098655": 314, "107862": 314, "012020": 314, "118838": 314, "005781": 314, "002862": 314, "222520": 314, "005160": 314, "361570": 314, "008017": 314, "030930": 314, "005034": 314, "094706": 314, "010829": 314, "065876": 314, "pop_matwt_estim": 314, "pop_vcage_estim": 314, "019706": 314, "014651": 314, "020136": 314, "014954": 314, "022336": 314, "011936": 314, "005508": 314, "002344": 314, "013967": 314, "034213": 314, "034044": 314, "009672": 314, "008593": 314, "017124": 314, "000315": 314, "022223": 314, "019316": 314, "009542": 314, "010323": 314, "008652": 314, "018053": 314, "019211": 314, "001906": 314, "014021": 314, "011399": 314, "003565": 314, "010903": 314, "014331": 314, "013699": 314, "015830": 314, "000202": [314, 345], "002078": 314, "009019": 314, "005773": 314, "012366": 314, "002607": 314, "002247": 314, "005768": 314, "011567": 314, "006160": 314, "014272": 314, "004566": 314, "010938": 314, "002378": 314, "007473": 314, "011606": 314, "010672": 314, "000456": 314, "009445": 314, "014649": 314, "012169": 314, "005771": 314, "002248": 314, "pop_vcwt_estim": 314, "953372": 314, "013320": 314, "984897": 314, "012092": 314, "972469": 314, "011946": 314, "954734": 314, "010781": 314, "009540": 314, "009922": 314, "989687": 314, "009576": 314, "986758": 314, "869150": 314, "632058": 314, "008418": 314, "751771": 314, "007571": 314, "416489": 314, "013879": 314, "724866": 314, "008196": 314, "746265": 314, "007399": 314, "727224": 314, "008331": 314, "666572": 314, "010074": 314, "751144": 314, "008031": 314, "711725": 314, "008833": 314, "012851": 314, "967468": 314, "751794": 314, "007573": 314, "416464": 314, "013880": 314, "462": 314, "nhowev": [314, 320, 326], "reduced_ofv": [314, 344], "extended_ofv": [314, 344], "ofv_drop": [314, 344], "extended_st": [314, 344], "621435": 314, "246753": 314, "394001": 314, "645626": 314, "219363": 314, "001068": 314, "875674": 314, "899671": 314, "152040": 314, "126842": 314, "678359": 314, "045482": 314, "821275": 314, "431017": 314, "290062": 314, "366965": 314, "488428": 314, "591623": 314, "039740": 314, "659788": 314, "942802": 314, "017391": 314, "380435": 314, "441298": 314, "668043": 314, "180108": 314, "388697": 314, "680065": 314, "025518": 314, "935973": 314, "77": 314, "446136": 314, "690615": 314, "782563": 314, "71": [314, 343], "002416": 314, "644805": 314, "554053": 314, "674591": 314, "072441": 314, "183059": 314, "134631": 314, "547765": 314, "311846": 314, "373764": 314, "196444": 314, "delta_df": [314, 344], "extended_signific": [314, 344], "covariate_effect": [314, 321, 341, 344], "ofv_summari": [314, 344], "candidate_summari": [314, 344], "n_test": [314, 344], "n_ok": [314, 344], "n_localmin": [314, 344], "n_fail": [314, 344], "stepinclud": [314, 344], "estimation_ofv": 315, "prediction_ofv": 315, "545": 315, "863847": 315, "186": 315, "192727": 315, "953185": 315, "694832": 315, "547": 315, "843632": 315, "184": [315, 344], "022535": 315, "579": 315, "109635": 315, "596550": 315, "prediction_ofv_sum": 315, "747": 315, "506644594254": 315, "read_raw_dataset": 316, "sever": [316, 323, 332, 341], "examin": [316, 320, 323, 333, 350], "di": 316, "role": 316, "identif": [316, 343], "mostli": [316, 317, 338], "steven": 316, "typologi": 316, "en": [316, 317, 321], "wikipedia": 316, "wiki": [316, 327], "level_of_measur": 316, "annot": 316, "kg": 316, "mg": 316, "l": 316, "low": [316, 332, 350], "understand": [316, 337], "accompani": [316, 327], "arrai": [316, 329, 330, 332], "And": [316, 327, 329, 332], "under": [317, 325, 327, 344, 351], "construct": [317, 337], "complet": 317, "four": 317, "distinct": 317, "layer": [317, 333, 336], "worklow": 317, "higher": [317, 325, 330, 332, 345], "coupl": 317, "mathemat": [317, 330, 338], "concid": 317, "live": 317, "namespac": 317, "mutablesequ": 317, "scalar": [317, 330], "concern": [317, 327], "expos": 317, "numpydoc": 317, "readthedoc": 317, "ecosystem": 317, "wrap": 317, "share": [317, 327, 336, 342], "leak": 317, "third": [317, 327], "parti": [317, 327], "break": 317, "psc": 319, "reason": [319, 327, 338], "fewewst": 319, "But": [319, 327], "structsearch_run1": [319, 335, 348], "metabolite_bas": 319, "structsearch_run2": [319, 335, 348], "metabolite_psc": 319, "structsearch_run3": [319, 335, 348], "structsearch_run4": [319, 348], "305346": 319, "run_estmethod": 320, "chapter": [320, 333], "few": 320, "cartesian": 320, "9999": 320, "runtime_estim": 320, "estmethod_run2": 320, "2422": 320, "465718": 320, "81": [320, 324, 331], "estmethod_run1": 320, "2271": 320, "769243": 320, "run_typ": 320, "1299": [320, 326], "696027": 320, "2420": 320, "117263": 320, "145": 320, "2702": 320, "1840": 320, "3241": 320, "6578": 320, "iiv_cl_estim": [320, 326, 343], "iiv_vc_estim": [320, 326, 343], "481858": [320, 324, 326, 333], "593654": [320, 324, 326, 333], "439589": 320, "483291": 320, "598179": 320, "901289": 320, "419533": 320, "408292": 320, "iiv_mat_estim": [320, 326, 343], "000130": [320, 326, 333], "322572": 320, "197647": 320, "865979": 320, "105366": 320, "10000": 320, "WITH": [320, 324, 326, 327], "THE": [320, 324, 326, 327], "model_3b": 321, "u": [321, 332], "n_": 321, "par": [321, 330], "eta_k": 321, "bmatrix": 321, "vdot": 321, "eta_": [321, 330, 332], "sim": [321, 330, 332, 345], "mathcal": [321, 330, 332], "mu_2": 321, "omega_": [321, 330], "n1": 321, "n2": 321, "ddot": 321, "latter": 321, "partit": 321, "5th": 321, "630859": 321, "868770": 321, "176754": 321, "95th": 321, "925602": 321, "082310": 321, "244607": 321, "569077": 321, "600360": 321, "632538": 321, "532478": 321, "824355": 321, "138312": 321, "577861": 321, "761430": 321, "991915": 321, "003863": 321, "148763": 321, "297579": 321, "600771": 321, "631260": 321, "661025": 321, "315965": 321, "549669": 321, "811532": 321, "margin": 321, "ij": 321, "ijk": 321, "omega_k": 321, "sigma_1": 321, "sigma_2": 321, "sigma_i": 321, "turn": [321, 330], "percent": 321, "red": 321, "figur": [321, 335], "sigma_": [321, 330], "020503": 321, "628814": 321, "009309": 321, "544459": 321, "026950": 321, "613127": 321, "050396": 321, "551581": 321, "individual_effect": 321, "913307": 321, "899565": 321, "923297": 321, "939015": 321, "926632": 321, "948404": 321, "933506": 321, "894967": 321, "970755": 321, "010192": 321, "973823": 321, "047109": 321, "992728": 321, "986142": 321, "999404": 321, "361911": 321, "322628": 321, "418737": 321, "894772": 321, "868658": 321, "917333": 321, "947797": 321, "923656": 321, "969732": 321, "771958": 321, "748072": 321, "790423": 321, "790120": 321, "768277": 321, "806911": 321, "percentu": 321, "unexplained_vari": 321, "sd_observ": 321, "sd_5th": 321, "sd_95th": 321, "469535": 321, "359934": 321, "547612": 321, "465490": 321, "352335": 321, "538174": 321, "165502": 321, "141580": 321, "190726": 321, "159149": 321, "134989": 321, "183613": 321, "420471": 321, "327104": 321, "490419": 321, "404440": 321, "306148": 321, "467046": 321, "143317": 321, "122348": 321, "166012": 321, "141826": 321, "120282": 321, "163610": 321, "percetil": 321, "025328": 321, "022571": 321, "020115": 321, "216681": 321, "188254": 321, "163572": 321, "027391": 321, "021634": 321, "020540": 321, "intermedi": 321, "model_4": [321, 330], "parameter_inits_and_estim": 321, "model_3": 321, "115195": 321, "007066": 321, "209016": 321, "125999": 321, "020191": 321, "224959": 321, "126000": 321, "007084": 321, "38635": 321, "220463": 321, "195326": 321, "176796": 321, "bsv_apgr": [321, 330], "010583": 321, "107027": 321, "000008": 321, "171529": 321, "404278": 321, "000010": 321, "012042": 321, "115427": 321, "000032": 321, "208475": 321, "415588": 321, "000030": 321, "062712": 321, "117271": 321, "039930": 321, "446939": 321, "402075": 321, "bsv_wgt": [321, 330], "244579": 321, "244448": 321, "002173": 321, "002170": 321, "244080": 321, "007763": 321, "007760": 321, "249237": 321, "034610": 321, "015250": 321, "relative_chang": 321, "773218": 321, "095327": 321, "520526": 321, "271369": 321, "110618": 321, "896": 321, "974324": 321, "868": [321, 324], "657803": 321, "852": 321, "803483": 321, "753": 321, "302743": 321, "themselv": 321, "ideal": 321, "estimated_covari": 321, "stdev": 321, "423728": 321, "237640": 321, "525424": 321, "704565": 321, "nyberg": 321, "hb": 321, "jonsson": 321, "mo": 321, "introduct": 321, "cpt": 321, "pharmacometr": [321, 325, 327, 349], "syst": 321, "pharmacol": 321, "1002": 321, "psp4": 321, "12741": 321, "plan": 323, "stabl": 323, "googl": [323, 338], "coral": 323, "repo": 323, "tflite_runtim": 323, "nonlinear": 323, "read_model_result": 324, "brute": [324, 326], "explor": [324, 338], "approach": [324, 326], "naiv": 324, "minima": 324, "alphabet": 324, "thusli": 324, "\u03b4ofv": [324, 326, 333], "\u03b4aic": [324, 326, 333], "\u03b4bic": [324, 326, 333], "iivsearch_no_of_etas_candidate3": 324, "282024": 324, "iivsearch_no_of_etas_candidate2": 324, "217": 324, "691571": 324, "iivsearch_no_of_etas_candidate6": 324, "385": 324, "641987": 324, "iivsearch_no_of_etas_candidate1": 324, "631": 324, "871991": 324, "iivsearch_no_of_etas_candidate5": 324, "633": [324, 331], "419500": 324, "iivsearch_no_of_etas_candidate4": 324, "815": 324, "076729": 324, "iivsearch_no_of_etas_candidate7": 324, "834": 324, "249063": 324, "iivsearch_block_structure_candidate1": 324, "971960": 324, "1283": 324, "597406": 324, "1279": 324, "315382": 324, "1061": 324, "623812": 324, "893": 324, "673395": 324, "443392": 324, "645": 324, "895882": 324, "464": 324, "238653": 324, "066319": 324, "1365": 324, "569365": 324, "178325": 324, "1280": 324, "1278": [324, 333], "1070": 324, "204731": 324, "1058": 324, "897": 324, "963854": 324, "024311": 324, "644": 324, "650": 324, "186341": 324, "640": 324, "468": 324, "529112": 324, "458": 324, "437": 324, "440744": 324, "1364": 324, "1261": [324, 326], "189012": 324, "1259": [324, 333], "530267": [324, 333], "1039": 324, "215418": [324, 344], "641723": 324, "034998": 324, "620": 324, "864210": 324, "439": 324, "206982": 324, "417": 324, "411370": 324, "160972": 324, "5333": 324, "0366": 324, "1164": 324, "2929": 324, "8058": 324, "9055": 324, "2270": 324, "9424": 324, "1360": 324, "239": 324, "1090": 324, "234": 324, "6680": 324, "9380": 324, "110": 324, "6690": 324, "9880": 324, "433544": 324, "114210": 324, "347648": 324, "316164": 324, "310155": 324, "922906": 324, "434563": 324, "436279": 324, "481830": 324, "594777": 324, "396159": 324, "516927": 324, "593578": 324, "414690": 324, "247930": 324, "656304": 324, "00013": 324, "31998": 324, "08352": 324, "43473": 324, "209975": 324, "401593": 324, "574966": 324, "736398": 324, "750954": 324, "744891": 324, "810669": 324, "215885": 324, "iiv_cl_iiv_vc_estim": 324, "498114": 324, "371": 324, "rxode2": [325, 331, 332], "post": [325, 343], "sens": 326, "nonzero": 326, "iovsearch_run7": 326, "iovsearch_run5": 326, "iovsearch_run3": 326, "iovsearch_run4": 326, "iovsearch_run2": 326, "iovsearch_run1": 326, "iovsearch_run8": 326, "540508": 326, "1265": 326, "694052": 326, "230772": 326, "384316": 326, "230394": 326, "383938": 326, "1262": 326, "153544": 326, "750000": 326, "403544": 326, "750400": 326, "403145": 326, "060114": 326, "093431": 326, "043077": 326, "1257": 326, "110467": 326, "782429": 326, "1115": 326, "911624": 326, "015062": 326, "707566": 326, "017679": 326, "017280": 326, "707992": 326, "707614": 326, "017728": 326, "1145": 326, "944840": 326, "230": 326, "1954": 326, "242": [326, 339, 341], "440613": 326, "1403": 326, "665": 326, "439784": 326, "1951": 326, "241": 326, "1950": 326, "440611": 326, "1402": 326, "439785": 326, "439783": 326, "2313": 326, "438628": 326, "474140": 326, "586866": 326, "311861": 326, "472835": 326, "590422": 326, "320387": 326, "474125": 326, "586859": 326, "311859": 326, "474111": 326, "586860": 326, "311903": 326, "590425": 326, "320393": 326, "472840": 326, "590424": 326, "320395": 326, "572627": 326, "290631": 326, "omega_iov_1_estim": 326, "194680": 326, "002735": 326, "195532": 326, "194676": 326, "194675": 326, "195531": 326, "197005": 326, "483460": 326, "omega_iov_2_estim": 326, "omega_iov_3_estim": 326, "000006": 326, "000000e": [326, 342, 344], "279": [326, 339], "NEAR": [326, 333], "adopt": 327, "wikimedia": 327, "bowl_of_hygieia_by_david": 327, "svg": 327, "cc": 327, "BY": 327, "sa": 327, "font": 327, "pt": 327, "san": 327, "relicens": 327, "lgpl": 327, "know": 327, "maintaint": 327, "2024": 327, "redistribut": 327, "publish": 327, "foundat": 327, "hope": 327, "warranti": 327, "impli": 327, "merchant": 327, "FOR": 327, "modif": [327, 341], "permit": 327, "retain": 327, "disclaim": 327, "reproduc": 327, "materi": 327, "holder": 327, "AND": 327, "AS": 327, "OR": 327, "BUT": 327, "NOT": 327, "TO": 327, "OF": 327, "IN": 327, "shall": 327, "BE": 327, "liabl": 327, "incident": 327, "exemplari": 327, "consequenti": 327, "damag": 327, "procur": 327, "servic": 327, "loss": 327, "profit": 327, "busi": 327, "interrupt": 327, "theori": [327, 330], "liabil": 327, "contract": 327, "tort": 327, "neglig": 327, "aris": 327, "advis": 327, "SUCH": 327, "june": 327, "2007": 327, "inc": 327, "fsf": 327, "preambl": 327, "copyleft": 327, "practic": 327, "awai": 327, "contrast": 327, "guarante": 327, "speak": 327, "price": 327, "charg": 327, "wish": 327, "piec": 327, "prevent": 327, "deni": 327, "ask": [327, 351], "surrend": 327, "therefor": [327, 346], "grati": 327, "fee": 327, "recipi": 327, "gpl": 327, "assert": 327, "offer": [327, 332], "permiss": 327, "clearli": 327, "sake": 327, "erron": 327, "devic": 327, "although": 327, "manufactur": 327, "fundament": 327, "incompat": 327, "aim": [327, 341], "systemat": 327, "abus": 327, "area": [327, 338], "unaccept": 327, "prohibit": 327, "substanti": 327, "domain": [327, 329, 336], "stand": 327, "readi": 327, "provis": 327, "futur": 327, "threaten": 327, "constantli": 327, "patent": 327, "danger": 327, "proprietari": 327, "assur": 327, "law": 327, "semiconductor": 327, "mask": 327, "license": 327, "address": 327, "organ": [327, 330], "fashion": 327, "earlier": 327, "cover": [327, 333, 334, 337, 350], "unmodifi": 327, "propag": 327, "secondarili": 327, "infring": 327, "countri": 327, "convei": 327, "mere": 327, "network": 327, "transfer": 327, "extent": 327, "conveni": [327, 330], "promin": 327, "visibl": 327, "menu": 327, "criterion": [327, 346], "offici": 327, "wide": 327, "among": 327, "essenti": 327, "kernel": 327, "link": [327, 343], "subprogram": 327, "intim": 327, "regener": 327, "grant": 327, "irrevoc": 327, "affirm": 327, "unlimit": 327, "constitut": 327, "fair": 327, "sole": [327, 342], "facil": 327, "compli": 327, "behalf": 327, "relationship": [327, 344], "circumst": 327, "sublicens": 327, "anti": 327, "circumvent": 327, "deem": 327, "technolog": 327, "oblig": 327, "articl": 327, "wipo": 327, "treati": 327, "decemb": 327, "1996": 327, "waiv": 327, "forbid": 327, "exercis": 327, "intent": 327, "enforc": 327, "medium": [327, 338], "conspicu": 327, "intact": 327, "anyon": 327, "who": [327, 334], "possess": 327, "natur": 327, "storag": 327, "aggreg": 327, "beyond": 327, "embodi": 327, "durabl": 327, "customarili": 327, "interchang": 327, "spare": 327, "cost": 327, "server": 327, "occasion": 327, "noncommerci": 327, "subsect": 327, "6b": 327, "further": [327, 330], "clear": [327, 351], "host": 327, "satisfi": 327, "peer": 327, "transmiss": 327, "6d": 327, "portion": 327, "consum": 327, "tangibl": 327, "household": 327, "sold": 327, "incorpor": 327, "dwell": 327, "doubt": 327, "resolv": [327, 336], "favor": 327, "coverag": 327, "typic": [327, 349], "commerci": 327, "industri": 327, "suffic": 327, "interf": 327, "perpetu": 327, "character": 327, "nor": 327, "abil": 327, "rom": 327, "advers": 327, "protocol": 327, "publicli": 327, "password": 327, "unpack": 327, "supplement": 327, "govern": 327, "notwithstand": 327, "misrepresent": 327, "licensor": 327, "declin": 327, "trademark": 327, "trade": 327, "indemnif": 327, "contractu": 327, "impos": 327, "surviv": 327, "expressli": 327, "void": 327, "paragraph": 327, "ceas": 327, "reinstat": 327, "provision": 327, "perman": 327, "notifi": 327, "prior": 327, "dai": 327, "cessat": 327, "moreov": 327, "cure": 327, "receipt": 327, "qualifi": 327, "ancillari": 327, "consequ": 327, "likewis": 327, "downstream": 327, "complianc": 327, "entiti": 327, "asset": 327, "subdivid": 327, "plu": 327, "effort": 327, "royalti": 327, "litig": 327, "claim": 327, "counterclaim": 327, "lawsuit": 327, "alleg": 327, "sell": 327, "sale": 327, "acquir": 327, "hereaft": 327, "manner": [327, 333], "worldwid": 327, "agreement": 327, "denomin": 327, "coven": 327, "sue": 327, "knowingli": 327, "readili": 327, "arrang": [327, 346, 348], "depriv": 327, "yourself": 327, "benefit": [327, 338], "knowledg": 327, "believ": 327, "pursuant": 327, "convey": 327, "discriminatori": 327, "scope": [327, 347], "payment": 327, "primarili": 327, "march": 327, "constru": 327, "defens": 327, "court": 327, "contradict": 327, "excus": 327, "simultan": [327, 333], "pertin": 327, "agre": 327, "whom": 327, "refrain": 327, "affero": 327, "revis": 327, "Such": 327, "spirit": 327, "ever": 327, "THERE": 327, "qualiti": 327, "prove": 327, "defect": 327, "repair": 327, "WILL": 327, "inabl": 327, "BEING": 327, "inaccur": 327, "sustain": 327, "failur": [327, 338], "review": 327, "waiver": 327, "civil": 327, "greatest": 327, "achiev": 327, "safest": 327, "pointer": 327, "brief": 327, "idea": [327, 338], "electron": 327, "paper": 327, "hypothet": 327, "Of": 327, "cours": 327, "gui": 327, "box": [327, 341], "employ": 327, "programm": 327, "school": 327, "philosophi": 327, "why": 327, "7b2feb6f20b626a559d3150f6638c111f20b5213": 327, "lin_evalu": 328, "lin_estim": 328, "847272": 328, "problemat": 328, "742853": 328, "722681": 328, "020172": 328, "049270": 328, "072922": 328, "023652": 328, "042005": 328, "025071": 328, "016933": 328, "812731": 328, "767326": 328, "045405": 328, "092668": 328, "052741": 328, "039927": 328, "345523": 328, "466217": 328, "120694": 328, "092993": 328, "062696": 328, "030297": 328, "515740": 328, "483016": 328, "032724": 328, "320532": 328, "253131": 328, "067401": 328, "998789": 328, "959488": 328, "039301": 328, "216717": 328, "214554": 328, "002163": 328, "099921": 328, "125228": 328, "025306": 328, "321679": 328, "306275": 328, "015405": 328, "261241": 328, "333707": 328, "072466": 328, "671243": 328, "651480": 328, "019763": 328, "330720": 328, "297562": 328, "033158": 328, "936161": 328, "906483": 328, "029678": 328, "714069": 328, "871090": 328, "157021": 328, "019825": 328, "011817": 328, "008008": 328, "056142": 328, "013498": 328, "042644": 328, "248747": 328, "213924": 328, "034823": 328, "605213": 328, "571494": 328, "033719": 328, "815937": 328, "898911": 328, "082974": 328, "454128": 328, "483765": 328, "029637": 328, "964631": 328, "119373": 328, "154742": 328, "186715": 328, "170103": 328, "016612": 328, "077661": 328, "064019": 328, "013642": 328, "940635": 328, "941894": 328, "001260": 328, "074883": 328, "073446": 328, "001437": 328, "256369": 328, "245489": 328, "010881": 328, "103887": 328, "101956": 328, "001932": 328, "907728": 328, "900485": 328, "007243": 328, "743720": 328, "709980": 328, "033740": 328, "047324": 328, "021009": 328, "026315": 328, "430306": 328, "400894": 328, "029412": 328, "781609": 328, "798011": 328, "016402": 328, "378940": 328, "371430": 328, "007511": 328, "194729": 328, "237151": 328, "042422": 328, "599213": 328, "525654": 328, "073559": 328, "709166": 328, "667521": 328, "041645": 328, "219054": 328, "180075": 328, "038978": 328, "122738": 328, "296506": 328, "173768": 328, "229686": 328, "228531": 328, "001156": 328, "756406": 328, "734272": 328, "022134": 328, "979740": 328, "927830": 328, "051910": 328, "813988": 328, "812185": 328, "001803": 328, "234962": 328, "233799": 328, "389988": 328, "431669": 328, "041681": 328, "057167": 328, "047647": 328, "009521": 328, "429917": 328, "365265": 328, "064652": 328, "011212": 328, "105276": 328, "094064": 328, "302735": 328, "342891": 328, "040156": 328, "292516": 328, "307608": 328, "015092": 328, "067193": 328, "977095": 328, "090098": 328, "359971": 328, "357379": 328, "002592": 328, "340768": 328, "341140": 328, "000372": 328, "515376": 328, "511708": 328, "003668": 328, "970486": 328, "940640": 328, "029846": 328, "638461": 328, "592266": 328, "046195": 328, "iofv_plot": 328, "concis": 329, "newlin": 329, "semi": [329, 342], "colon": 329, "endpoint": 329, "wildcard": 329, "inst": [329, 333], "nodepot": 329, "effectcomp": [329, 335], "comprtment": [329, 335], "indirecteffect": [329, 335], "autom": 329, "li": [329, 330], "pk_iiv": 329, "pd_iiv": 329, "At": 330, "heart": 330, "subclass": 330, "mymodel": [330, 332], "parset": 330, "eps_": 330, "similarli": [330, 351], "theta_": 330, "s_": 330, "a_": [330, 332, 348], "quit": 330, "flexibl": 330, "cumbersom": 330, "unimport": 330, "frem_path": 330, "frem_model": 330, "frem_model_result": 330, "omega\u2082": 330, "omega\u2083": 330, "omega\u2084": 330, "\u2082": 330, "eta\u2083": 330, "\u2083": 330, "eta\u2084": 330, "eps\u2082": 330, "epscov": 330, "bsv_": 330, "000286193": 330, "0676481": 330, "0256033": 330, "0235094": 330, "00161838": 330, "24458": 330, "omega_est": 330, "0393482": 330, "0168369": 330, "0442286": 330, "0426757": 330, "0259374": 330, "0654878": 330, "00168063": 330, "983027": 330, "240423": 330, "98305": 330, "choleski": 330, "198363807182661": 330, "0848788911603008": 330, "136868454493349": 330, "222967085720797": 330, "616745467855979": 330, "743597812371906": 330, "215138540674925": 330, "145697201390566": 330, "508675383095755": 330, "810424017694199": 330, "pure": 330, "astyp": 330, "numeric64": 330, "linalg": 330, "19836381": 330, "08487889": 330, "13686845": 330, "22296709": 330, "61674547": 330, "74359781": 330, "21513854": 330, "1456972": 330, "50867538": 330, "81042402": 330, "esim": 331, "testdata": 331, "2760562818805": 331, "171321": 331, "167051": 331, "115069": 331, "Or": 331, "039153": 331, "022378": 331, "009904": 331, "044731": [331, 342], "027325": 331, "527072": [331, 342], "457068": [331, 342], "267918": [331, 342], "172147": [331, 342], "proper": 331, "388058": 331, "356900": 331, "238442": 331, "096516": 331, "invers": [331, 342], "29955600": 331, "800": 331, "910": 331, "039": 331, "207": 331, "809": 331, "520": 331, "980": 331, "200": 331, "450": 331, "810": 331, "947352": 331, "970591": 331, "982342": 331, "457091": 331, "839437": 331, "257230": 331, "098338": 331, "538621": 331, "647969": 331, "394643": 331, "480164": 331, "650233": 331, "991406": 331, "378880": 331, "739902": 331, "328800": 331, "113284": 331, "212096": 331, "334047": 331, "327778": 331, "821533": 331, "631281": 331, "861669": 331, "915261": 331, "988977": 331, "279273": 331, "733181": 331, "830053": 331, "851724": 331, "212095": 331, "774791": 331, "352283": 331, "172643": 331, "427376": 331, "381444": 331, "624014": 331, "970627": 331, "177028": 331, "206540": 331, "955029": 331, "982447": 331, "051499": 331, "424503": 331, "734342": 331, "018477": 331, "810285": 331, "279258": 331, "168486": 331, "190508": 331, "749134": 331, "598565": 331, "237467": 331, "568934": 331, "800062": 331, "098025": 331, "586253": 331, "663948": 331, "850993": 331, "605845": 331, "143": 331, "045": 331, "971": 331, "881": 331, "575": 331, "080": 331, "063": 331, "427": 331, "668": 331, "543": 331, "662": 331, "478": 331, "667": 331, "253": 331, "495": 331, "918": 331, "67071": 331, "401100": 331, "35080": 331, "587770": 331, "36360": 331, "278800": 331, "19730": 331, "670700": 331, "21710": 331, "352600": 331, "86050": 331, "067200": 331, "35060": 331, "059269": 331, "72100": 331, "036754": 331, "10860": 331, "814140": 331, "28180": 331, "699410": 331, "eb": 331, "043861": 331, "005430": 331, "166321": 331, "131833": 331, "095934": 331, "130868": 331, "009154": 331, "017388": 331, "102019": 331, "283500": 331, "019417": 331, "099839": 331, "045946": 331, "059072": 331, "024270": 331, "189351": 331, "248536": 331, "091872": 331, "009545": 331, "012052": 331, "066151": 331, "293685": 331, "030236": 331, "074789": 331, "094502": 331, "147433": 331, "076820": 331, "105604": 331, "020051": 331, "066265": 331, "086035": 331, "023260": 331, "067138": 331, "030859": 331, "337255": 331, "035532": 331, "032579": 331, "028410": 331, "003589": 331, "080613": 331, "060233": 331, "052854": 331, "004469": 331, "057344": 331, "051992": 331, "212941": 331, "137510": 331, "004111": 331, "023282": 331, "302636": 331, "039069": 331, "119442": 331, "044956": 331, "263320": 331, "000776": 331, "083231": 331, "003150": 331, "012752": 331, "049654": 331, "080932": 331, "000555": 331, "099614": 331, "061864": 331, "332738": 331, "038156": 331, "067641": 331, "038017": 331, "184137": 331, "156617": 331, "208753": 331, "114558": 331, "053036": 331, "008405": 331, "026004": 331, "144920": 331, "081646": 331, "083320": 331, "015380": 331, "000392": 331, "078062": 331, "018966": 331, "112030": 331, "112715": 331, "383786": 331, "001730": 331, "167583": 331, "042068": 331, "066598": 331, "037600": 331, "000093": 331, "010662": 331, "009775": 331, "058306": 331, "229005": 331, "033958": 331, "008959": 331, "092312": 331, "050987": 331, "192569": 331, "002727": 331, "225657": 331, "115824": 331, "204269": 331, "054792": 331, "066334": 331, "123689": 331, "239678": 331, "047215": 331, "186615": 331, "000949": 331, "010812": 331, "015929": 331, "017213": 331, "005234": 331, "122552": 331, "076677": 331, "095696": 331, "024883": 331, "002999": 331, "007157": 331, "inspect": [332, 350], "model_nlmixr": 332, "diff": [332, 338], "add_error": 332, "prop_error": 332, "focei": 332, "model_start": 332, "eta_vc": 332, "pop_": 332, "225": 332, "epsilon_": 332, "iiv_cl_iiv_vc": 332, "\u03c3": 332, "iiv_mat": 332, "iiv_": 332, "advan2": 332, "THEN": 332, "22500000000000e": 332, "cond": 332, "maxev": 332, "99999": 332, "cipredi": 332, "mytab": 332, "tlag": 332, "alag1": 332, "advan3": 332, "trans4": 332, "run4": 332, "tol": 332, "pop_clmm": 332, "85000000000001": 332, "pop_km": 332, "iiv_clmm": 332, "iiv_clmm_iiv_vc": 332, "iiv_cl_iiv_mat": 332, "iiv_vc_iiv_mat": 332, "0094868": 332, "onto": 332, "wgt_median": 332, "30000000000000": 332, "clwgt": 332, "pop_clwgt": 332, "user_effect": 332, "wgt_std": 332, "704564727537012": 332, "add_population_paramet": 332, "unfix_parameters_to": 332, "\u03b5\u209a\u2081": 332, "p1": 332, "set_time_varying_error_model": [332, 343], "100000000000000": 332, "f_flag": 332, "f_": 332, "geq": 332, "get_id": 332, "get_mdv": 332, "largest": 332, "ser": 332, "grammar": [333, 347], "leav": 333, "obtain": 333, "basi": 333, "594608": 333, "1272": 333, "124874": 333, "558028": 333, "088295": 333, "956313": 333, "1270": 333, "486580": 333, "287000": 333, "1260": 333, "817266": 333, "362287": 333, "1327": 333, "153182": 333, "1325": 333, "551467": 333, "1307": 333, "301235": 333, "1295": 333, "1305": 333, "1289": 333, "2927": 333, "4334": 333, "7778": 333, "0058": 333, "1640": 333, "260324": 333, "7646": 333, "824443": 333, "5477": 333, "607839": 333, "1147": 333, "842498": 333, "470974": 333, "595276": 333, "526185": 333, "930160": 333, "495109": 333, "322680": 333, "470531": 333, "515250": 333, "312692": 333, "194221": 333, "202201": 333, "207885": 333, "232322": 333, "199750": 333, "205369": 333, "193439": 333, "pop_qp1_estim": 333, "pop_vp1_estim": 333, "pop_mdt_estim": 333, "155413": 333, "4192": 333, "6100": 333, "172730": 333, "3977": 333, "4562": 333, "158070": 333, "8042": 333, "8517": 333, "iiv_mdt_estim": 333, "156289": 333, "330": 333, "topic": 334, "scheme": 334, "theta_cl": 334, "mention": 334, "ve": 334, "despit": 334, "write_etas_in_abbr": 334, "ec": [335, 347], "additionali": 335, "effectcomp_linear": 335, "215004": 335, "745013": 335, "direct_emax": 335, "212603": 335, "747413": 335, "baseline_model": 335, "960017": 335, "effectcomp_emax": 335, "984380": 335, "944396": 335, "e_max_init": 335, "altair": [336, 338], "vega": 336, "lite": 336, "ggplot": 336, "editor": 336, "clamp": 336, "vconcat": 336, "spec": 336, "inten": 337, "export": 337, "strictli": 337, "necessesari": 337, "detect_model": 337, "summer": 338, "master": 338, "thesi": 338, "internship": 338, "email": 338, "team": 338, "tox": 338, "pytest": 338, "sphinx": 338, "wise": 338, "known": 338, "trial": 338, "involv": 338, "outcom": 338, "350h": 338, "difficulti": 338, "mentor": 338, "scipi": 338, "focu": 338, "proof": 338, "concept": 338, "algebra": 338, "scratch": 338, "almost": 338, "compat": 338, "benefici": 338, "175h": 338, "easi": 338, "potenti": 338, "eas": 338, "jupyt": 338, "holoview": 338, "bokeh": 338, "monitor": 338, "ongo": 338, "veri": 338, "happen": [338, 351], "converg": 338, "sort": [338, 349], "dashboard": 338, "complement": 338, "realtim": 338, "restart": [338, 351], "middl": 338, "worflow": 338, "autocorrel": [339, 341], "dtb": [339, 341], "idv_varying_ruv": 339, "idv_varying_ruv_cutoff0": 339, "idv_varying_ruv_cutoff1": 339, "idv_varying_ruv_cutoff2": 339, "idv_varying_ruv_cutoff3": 339, "idv_varying_ruv_cutoff4": 339, "idv_varying_ruv_cutoff5": 339, "idv_varying_ruv_cutoff6": 339, "idv_varying_ruv_cutoff7": 339, "idv_varying_ruv_cutoff8": 339, "idv_varying_combin": 339, "idv_varying_theta": 339, "cv": [339, 341], "772": [339, 341], "042": [339, 341], "sdeps_0": [339, 341], "t1": 339, "298": 339, "sdeps_t1": 339, "t2": 339, "886": 339, "t0": [339, 341], "271": [339, 341], "sdeps_t0": [339, 341], "390": [339, 341], "956": [339, 341], "717": 339, "014": 339, "914": 339, "983": 339, "884": 339, "017": 339, "955": 339, "958": 339, "969": 339, "933": 339, "022": 339, "819": 339, "007": 339, "755": 339, "982": 339, "642": 339, "387": 339, "th_0": 339, "257": 339, "sdep": 339, "th_t1": 339, "124": 339, "th_t2": 339, "delta_pow": [339, 341], "037": [339, 341], "delet": 340, "diagnost": 340, "improement": 341, "592698": 341, "197887": 341, "007493": 341, "521171": 341, "et1apgr": 341, "487930": 341, "residual_error_model": 341, "910000": 341, "030000": 341, "diagnos": 341, "structural_bia": 341, "cpred": 341, "binmin": 341, "binmax": 341, "binid": 341, "159": 341, "258": 341, "strutur": 341, "mdel": 341, "fullblock_paramet": 341, "183463": 341, "171306": 341, "554610": 341, "154408": 341, "167053": 341, "cox": 341, "boxcox_paramet": 341, "shape": 341, "new_sd": 341, "old_sd": 341, "922083": 341, "182037": 341, "332800": 341, "166021": 341, "tdist_paramet": 341, "79": 341, "9997": 341, "168477": 341, "9986": 341, "166469": 341, "residual_error": 341, "additional_paramet": 341, "coeff": 341, "48793": 341, "033334": 341, "48218": 341, "052342": 341, "59034": 341, "008371": 341, "00887": 341, "003273": 341, "tweak": [342, 349], "slightli": [342, 344], "instabl": 342, "_retries_run2": 342, "behaviour": 342, "invert": 342, "maxiumum": 342, "took": 342, "number_of_retri": 342, "922734e": 342, "383697e": 342, "302390e": 342, "061417e": 342, "387580e": 342, "276057": 342, "ptvcl_estim": 342, "ptvcl_se": 342, "ptvcl_rse": 342, "00021": 342, "87": 342, "044758": 342, "044716": 342, "044732": 342, "044728": 342, "044669": 342, "theta_3_rs": 342, "ivcl_estim": 342, "ivcl_s": 342, "ivcl_rs": 342, "527096": 342, "029349": 342, "013418": 342, "457176": 342, "527011": 342, "029350": 342, "013416": 342, "457114": 342, "527151": 342, "457044": 342, "527073": 342, "457083": 342, "526863": 342, "457001": 342, "ivv_estim": 342, "ivv_s": 342, "ivv_rs": 342, "sigma_1_1_estim": 342, "007471": 342, "267734": 342, "007475": 342, "267856": 342, "027907": 342, "007476": 342, "267878": 342, "007468": 342, "267603": 342, "267944": 342, "sigma_1_1_s": 342, "sigma_1_1_rs": 342, "002276": 342, "171888": 342, "002280": 342, "172226": 342, "172227": 342, "002281": 342, "172295": 342, "002275": 342, "171784": 342, "ibrahim": 343, "inde": 343, "cwres_model": 343, "479721": 343, "385268": 343, "002792": 343, "time_varying1": 343, "117041": 343, "555154": 343, "time_varying3": 343, "336641": 343, "091207": 343, "065738": 343, "654562": 343, "046578": 343, "519115": 343, "612710": 343, "643741": 343, "027766": 343, "sigma_add": 343, "000367": 343, "sigma_prop": 343, "967365": 343, "00123": 343, "0976": 343, "12252": 343, "14299": 343, "000337": 343, "05242": 343, "006105": 343, "10545": 343, "12659": 343, "15573": 343, "00054": 343, "04769": 343, "030825": 343, "mox3": 343, "best_ruvsearch_1": 343, "2460": 343, "704469": 343, "957378": 343, "2473": 343, "661847": 343, "269102": 343, "2495": 343, "973571": 343, "2444": 343, "2455": 343, "2475": 343, "2423": 343, "757516": 343, "2435": 343, "047712": 343, "2453": 343, "068976": 343, "707": 343, "5434": 343, "531596": 343, "794": 343, "3091": 343, "528620": 343, "733": 343, "3094": 343, "532547": 343, "iiv_vc_iiv_cl_estim": 343, "077743": 343, "038888": 343, "076793": 343, "039924": 343, "071628": 343, "038470": 343, "072309": 343, "704770": 343, "093311": 343, "074889": 343, "707665": 343, "081095": 343, "075048": 343, "705429": 343, "044311": 343, "iiv_ruv1_estim": 343, "time_varying_estim": 343, "039675": 343, "040734": 343, "42509": 343, "moustafa": 343, "m": 343, "maria": 343, "kjellsson": 343, "aap": 343, "1208": 343, "s12248": 343, "018": 343, "0240": 343, "pha": 344, "219210": 344, "90878": 344, "219167": 344, "36222": 344, "bmi": 344, "219171": 344, "47564": 344, "cycll": 344, "219203": 344, "94536": 344, "diag": 344, "219206": 344, "01527": 344, "disdur": 344, "219032": 344, "86056": 344, "215321": 344, "70954": 344, "215306": 344, "67698": 344, "phia": 344, "men": 344, "215407": 344, "40295": 344, "phib": 344, "georeg": 344, "215373": 344, "77800": 344, "216968": 344, "25989": 344, "slp": 344, "215359": 344, "18150": 344, "54656": 344, "140000e": 344, "43314": 344, "390000e": 344, "96342": 344, "319000e": 344, "89351": 344, "695800e": 344, "178": 344, "04822": 344, "290000e": 344, "03256": 344, "060000e": 344, "72597": 344, "10102": 344, "580000e": 344, "1661": 344, "58291": 344, "50452": 344, "phaag": 344, "phabmi": 344, "phacycl": 344, "phadiag": 344, "phadisdur": 344, "backward_scm_dir1": 344, "phawt": 344, "phiamen": 344, "phibgeoreg": 344, "phibmen": 344, "slpgeoreg": 344, "304": 344, "beween": 344, "215961": 344, "46277": 344, "3249": 344, "44601": 344, "215748": 344, "07194": 344, "213": 344, "39083": 344, "215570": 344, "57352": 344, "49842": 344, "215486": 344, "23440": 344, "33912": 344, "87007": 344, "36433": 344, "215357": 344, "74693": 344, "61": 344, "12314": 344, "215337": 344, "95044": 344, "79649": 344, "24090": 344, "215332": 344, "91461": 344, "23763": 344, "67861": 344, "00163": 344, "215450": 344, "74783": 344, "07085": 344, "215491": 344, "11568": 344, "43870": 344, "500000e": 344, "700000e": 344, "170000e": 344, "260000e": 344, "360000e": 344, "600000e": 344, "020000e": 344, "620000e": 344, "430000e": 344, "200000e": 344, "lbest": 344, "cpl": 344, "230120": 345, "215148": 345, "853273": 345, "488686": 345, "165042": 345, "885525": 345, "027733": 345, "993262": 345, "533799": 345, "824880": 345, "083424": 345, "080061": 345, "654589": 345, "905658": 345, "322738": 345, "916884": 345, "180960": 345, "276361": 345, "370783": 345, "313336": 345, "546277": 345, "638247": 345, "364078": 345, "489785": 345, "957716": 345, "542369": 345, "058260": 345, "136159": 345, "351839": 345, "968860": 345, "664634": 345, "873918": 345, "775938": 345, "151210": 345, "221459": 345, "210594": 345, "527835": 345, "899285": 345, "793703": 345, "551158": 345, "135159": 345, "639544": 345, "615899": 345, "230477": 345, "330868": 345, "796073": 345, "562788": 345, "185132": 345, "818812": 345, "479966": 345, "438225": 345, "486179": 345, "328937": 345, "720261": 345, "446579": 345, "432346": 345, "924846": 345, "121901": 345, "929665": 345, "436720": 345, "615092": 345, "694969": 345, "024193": 345, "512627": 345, "247238": 345, "341680": 345, "018308": 345, "387386": 345, "548598": 345, "842566": 345, "484284": 345, "759167": 345, "664954": 345, "853355": 345, "424024": 345, "638560": 345, "114753": 345, "317393": 345, "282087": 345, "695800": 345, "413680": 345, "622712": 345, "178961": 345, "331177": 345, "678095": 345, "541680": 345, "704503": 345, "361556": 345, "238692": 345, "371773": 345, "166879": 345, "316351": 345, "026935": 345, "422555": 345, "713778": 345, "966413": 345, "567697": 345, "937635": 345, "009725": 345, "266944": 345, "335429": 345, "878300": 345, "388393": 345, "462408": 345, "459161": 345, "212573": 345, "461262": 345, "868224": 345, "277388": 345, "179394": 345, "260472": 345, "003027": 345, "501489": 345, "933191": 345, "366018": 345, "218010": 345, "398492": 345, "380865": 345, "219194": 345, "585174": 345, "961895": 345, "051986": 345, "191401": 345, "546036": 345, "630512": 345, "726349": 345, "231970": 345, "767349": 345, "553003": 345, "682987": 345, "816485": 345, "099846": 345, "988276": 345, "822404": 345, "846457": 345, "802797": 345, "776532": 345, "991350": 345, "725509": 345, "565671": 345, "207434": 345, "662582": 345, "015416": 345, "326447": 345, "212538": 345, "341361": 345, "434087": 345, "488859": 345, "838099": 345, "782192": 345, "140249": 345, "086788": 345, "599116": 345, "743671": 345, "297823": 345, "574493": 345, "659430": 345, "516464": 345, "831345": 345, "880881": 345, "409142": 345, "994987": 345, "775355": 345, "793265": 345, "901408": 345, "630846": 345, "755737": 345, "072216": 345, "794788": 345, "912201": 345, "693935": 345, "483346": 345, "851982": 345, "711150": 345, "382384": 345, "069326": 345, "905528": 345, "793645": 345, "401748": 345, "800871": 345, "498709": 345, "077897": 345, "186642": 345, "928532": 345, "926835": 345, "748099": 345, "497867": 345, "819544": 345, "773375": 345, "366585": 345, "985533": 345, "247095": 345, "565811": 345, "843029": 345, "762211": 345, "551208": 345, "551558": 345, "765259": 345, "630121": 345, "187278": 345, "056323": 345, "552114": 345, "042324": 345, "257409": 345, "035731": 345, "802175": 345, "370226": 345, "040276": 345, "406685": 345, "360000": 345, "957232": 345, "639042": 345, "597045": 345, "515088": 345, "496993": 345, "716192": 345, "361498": 345, "977219": 345, "400720": 345, "751915": 345, "454421": 345, "676934": 345, "024682": 345, "641421": 345, "974785": 345, "952586": 345, "889492": 345, "597599": 345, "575363": 345, "853009": 345, "886356": 345, "073683": 345, "835458": 345, "087082": 345, "253049": 345, "374133": 345, "712658": 345, "879430": 345, "819836": 345, "151935": 345, "497236": 345, "415675": 345, "044583": 345, "178975": 345, "285544": 345, "567520": 345, "765897": 345, "396594": 345, "360173": 345, "264764": 345, "277992": 345, "999275": 345, "586789": 345, "358567": 345, "414926": 345, "572606": 345, "688954": 345, "899880": 345, "249772": 345, "496109": 345, "907778": 345, "244786": 345, "841335": 345, "473731": 345, "659481": 345, "222423": 345, "362886": 345, "416676": 345, "253768": 345, "864820": 345, "936980": 345, "206488": 345, "988252": 345, "069317": 345, "731451": 345, "862927": 345, "605768": 345, "911020": 345, "517867": 345, "716822": 345, "746436": 345, "965455": 345, "980420": 345, "453899": 345, "346212": 345, "125029": 345, "763155": 345, "500103": 345, "811144": 345, "783555": 345, "462547": 345, "583418": 345, "686115": 345, "585654": 345, "031564": 345, "972480": 345, "036534": 345, "363551": 345, "043157": 345, "960296": 345, "525306": 345, "723710": 345, "378125": 345, "892175": 345, "225458": 345, "587323": 345, "404922": 345, "408322": 345, "269137": 345, "242420": 345, "699366": 345, "950516": 345, "815026": 345, "159667": 345, "448461": 345, "512603": 345, "509957": 345, "884049": 345, "926077": 345, "625663": 345, "541949": 345, "175264": 345, "481351": 345, "601504": 345, "944302": 345, "907322": 345, "371639": 345, "194473": 345, "487277": 345, "735586": 345, "606033": 345, "663661": 345, "550825": 345, "344235": 345, "547459": 345, "556035": 345, "584165": 345, "500411": 345, "875052": 345, "308617": 345, "247584": 345, "874004": 345, "824837": 345, "881148": 345, "432371": 345, "631308": 345, "804622": 345, "133006": 345, "348849": 345, "366355": 345, "323449": 345, "758791": 345, "319025": 345, "860736": 345, "995045": 345, "575351": 345, "921633": 345, "568383": 345, "482883": 345, "300884": 345, "946876": 345, "376218": 345, "005653": 345, "928279": 345, "604188": 345, "898802": 345, "098483": 345, "795252": 345, "467337": 345, "773450": 345, "706108": 345, "078494": 345, "472019": 345, "600450": 345, "916754": 345, "823449": 345, "318875": 345, "104682": 345, "136767": 345, "405150": 345, "526828": 345, "354616": 345, "488282": 345, "406903": 345, "293600": 345, "884839": 345, "736463": 345, "892761": 345, "376893": 345, "367480": 345, "061750": 345, "849137": 345, "114640": 345, "054791": 345, "925921": 345, "423537": 345, "408347": 345, "864669": 345, "962122": 345, "705806": 345, "867625": 345, "280139": 345, "086333": 345, "056381": 345, "078385": 345, "631655": 345, "603301": 345, "449888": 345, "882876": 345, "758919": 345, "748996": 345, "138213": 345, "037941": 345, "814952": 345, "272954": 345, "929655": 345, "708577": 345, "715708": 345, "421235": 345, "563473": 345, "989005": 345, "383043": 345, "480043": 345, "959843": 345, "621329": 345, "676905": 345, "300601": 345, "811596": 345, "110075": 345, "956306": 345, "570879": 345, "786560": 345, "905147": 345, "445912": 345, "351180": 345, "612812": 345, "534496": 345, "876780": 345, "806204": 345, "584818": 345, "900845": 345, "924166": 345, "998400": 345, "892200": 345, "749003": 345, "115117": 345, "225727": 345, "018880": 345, "196823": 345, "806515": 345, "348921": 345, "250063": 345, "851698": 345, "296737": 345, "382526": 345, "944073": 345, "429352": 345, "574667": 345, "857266": 345, "485191": 345, "191840": 345, "874349": 345, "002572": 345, "733704": 345, "956378": 345, "676572": 345, "151243": 345, "707700": 345, "668763": 345, "954047": 345, "931900": 345, "538437": 345, "455902": 345, "731336": 345, "376121": 345, "196475": 345, "425364": 345, "504667": 345, "372391": 345, "848184": 345, "030662": 345, "455400": 345, "826862": 345, "572217": 345, "662370": 345, "502366": 345, "119652": 345, "298009": 345, "580405": 345, "305631": 345, "134650": 345, "361844": 345, "275622": 345, "544260": 345, "266702": 345, "169391": 345, "155311": 345, "022410": 345, "868679": 345, "106708": 345, "363698": 345, "424237": 345, "982047": 345, "904024": 345, "434510": 345, "098997": 345, "169297": 345, "840067": 345, "073635": 345, "963905": 345, "856403": 345, "884553": 345, "169888": 345, "351619": 345, "118999": 345, "893425": 345, "564632": 345, "255630": 345, "509070": 345, "046265": 345, "695028": 345, "408061": 345, "324755": 345, "684344": 345, "516160": 345, "297200": 345, "394438": 345, "493584": 345, "916145": 345, "606428": 345, "119216": 345, "933397": 345, "744242": 345, "693535": 345, "448507": 345, "178177": 345, "269584": 345, "764024": 345, "518105": 345, "477206": 345, "133073": 345, "320820": 345, "408266": 345, "132983": 345, "027851": 345, "180204": 345, "337790": 345, "105503": 345, "402983": 345, "457112": 345, "195385": 345, "850645": 345, "032512": 345, "814145": 345, "016286": 345, "052073": 345, "788249": 345, "602344": 345, "846592": 345, "435102": 345, "777419": 345, "451814": 345, "243399": 345, "589215": 345, "416254": 345, "866250": 345, "933824": 345, "923185": 345, "418469": 345, "495039": 345, "087071": 345, "824234": 345, "675347": 345, "573838": 345, "611250": 345, "903583": 345, "271405": 345, "749030": 345, "860290": 345, "501681": 345, "876965": 345, "941132": 345, "153441": 345, "372005": 345, "885439": 345, "193338": 345, "054769": 345, "357159": 345, "iofv_summari": 345, "orgin": 345, "ob": 345, "sampled_mean": 345, "sampled_stdev": 345, "residual_q1": 345, "743042": 345, "219056": 345, "682820": 345, "550173": 345, "035912": 345, "049484": 345, "184218": 345, "853744": 345, "006216": 345, "975298": 345, "041599": 345, "817153": 345, "833045": 345, "781196": 345, "154061": 345, "813525": 345, "398238": 345, "645044": 345, "535071": 345, "205425": 345, "092618": 345, "104527": 345, "106160": 345, "955250": 345, "058617": 345, "344659": 345, "355728": 345, "480441": 345, "205000": 345, "804075": 345, "093249": 345, "372011": 345, "653334": 345, "076303": 345, "579270": 345, "515891": 345, "726464": 345, "480796": 345, "226795": 345, "894556": 345, "321253": 345, "216333": 345, "282456": 345, "045968": 345, "751381": 345, "998817": 345, "568506": 345, "544129": 345, "725055": 345, "084491": 345, "216676": 345, "724839": 345, "269729": 345, "664468": 345, "086120": 345, "099508": 345, "844053": 345, "234199": 345, "780837": 345, "277342": 345, "322169": 345, "051428": 345, "923117": 345, "660772": 345, "466385": 345, "260479": 345, "909214": 345, "004430": 345, "115441": 345, "597439": 345, "671231": 345, "358037": 345, "499079": 345, "674971": 345, "086542": 345, "331370": 345, "633905": 345, "558617": 345, "085015": 345, "554653": 345, "936751": 345, "068515": 345, "800265": 345, "310055": 345, "124015": 345, "712276": 345, "729628": 345, "167439": 345, "715703": 345, "274087": 345, "019852": 345, "305414": 345, "613668": 345, "109257": 345, "443973": 345, "056317": 345, "238664": 345, "161298": 345, "229080": 345, "385458": 345, "248420": 345, "105258": 345, "155784": 345, "539027": 345, "615940": 345, "605320": 345, "132029": 345, "756164": 345, "869343": 345, "544161": 345, "814910": 345, "779158": 345, "268737": 345, "897306": 345, "707535": 345, "453306": 345, "105961": 345, "531367": 345, "507478": 345, "179203": 345, "964192": 345, "235433": 345, "534690": 345, "029698": 345, "870557": 345, "187065": 345, "049483": 345, "611648": 345, "535116": 345, "053927": 345, "077425": 345, "840121": 345, "621227": 345, "470444": 345, "449597": 345, "941064": 345, "849583": 345, "418397": 345, "769517": 345, "495183": 345, "074840": 345, "265168": 345, "489546": 345, "543569": 345, "924754": 345, "255799": 345, "423379": 345, "792450": 345, "651388": 345, "107140": 345, "103779": 345, "709601": 345, "655290": 345, "365991": 345, "222470": 345, "908651": 345, "744590": 345, "726324": 345, "426971": 345, "126409": 345, "743926": 345, "055593": 345, "673502": 345, "381335": 345, "618133": 345, "047349": 345, "322600": 345, "222872": 345, "042834": 345, "180077": 345, "430602": 345, "209284": 345, "495631": 345, "189252": 345, "623118": 345, "780755": 345, "405726": 345, "643222": 345, "836788": 345, "746180": 345, "378962": 345, "498420": 345, "745719": 345, "565835": 345, "016391": 345, "193803": 345, "882538": 345, "054206": 345, "416539": 345, "288743": 345, "598975": 345, "649295": 345, "743847": 345, "028856": 345, "860963": 345, "709391": 345, "906579": 345, "841825": 345, "571912": 345, "121771": 345, "219260": 345, "791821": 345, "756310": 345, "933335": 345, "360735": 345, "121911": 345, "657069": 345, "952413": 345, "311206": 345, "124618": 345, "229621": 345, "945504": 345, "493299": 345, "630288": 345, "415407": 345, "756085": 345, "131488": 345, "213636": 345, "050337": 345, "463633": 345, "980475": 345, "118333": 345, "749123": 345, "229958": 345, "025404": 345, "813878": 345, "738522": 345, "668408": 345, "112740": 345, "972107": 345, "235064": 345, "396011": 345, "934618": 345, "518106": 345, "392308": 345, "216396": 345, "339562": 345, "024801": 345, "793238": 345, "057118": 345, "556378": 345, "796045": 345, "776264": 345, "019010": 345, "430617": 345, "431370": 345, "731493": 345, "527208": 345, "010968": 345, "724711": 345, "959211": 345, "448445": 345, "131466": 345, "302385": 345, "264697": 345, "597597": 345, "779232": 345, "494133": 345, "292477": 345, "639161": 345, "067293": 345, "167700": 345, "637834": 345, "067793": 345, "249132": 345, "314731": 345, "969084": 345, "239401": 345, "359860": 345, "215238": 345, "477740": 345, "578842": 345, "053376": 345, "340902": 345, "021182": 345, "172446": 345, "684367": 345, "059050": 345, "515114": 345, "245427": 345, "197044": 345, "787564": 345, "106919": 345, "970391": 345, "379183": 345, "982728": 345, "807580": 345, "296212": 345, "639192": 345, "874018": 345, "032032": 345, "252364": 345, "047063": 345, "residual_q3": 345, "residual_outli": 345, "832458": 345, "136329": 345, "090316": 345, "021748": 345, "766581": 345, "001176": 345, "238974": 345, "071653": 345, "388881": 345, "584759": 345, "780298": 345, "680349": 345, "043355": 345, "691710": 345, "827298": 345, "317850": 345, "008777": 345, "291308": 345, "498512": 345, "312807": 345, "178997": 345, "306182": 345, "116610": 345, "468439": 345, "007865": 345, "384037": 345, "344744": 345, "151930": 345, "790639": 345, "416342": 345, "637759": 345, "153920": 345, "135334": 345, "038095": 345, "705065": 345, "359915": 345, "588440": 345, "151899": 345, "730945": 345, "514178": 345, "784304": 345, "977290": 345, "707253": 345, "982678": 345, "384237": 345, "576792": 345, "302778": 345, "342653": 345, "313826": 345, "775998": 345, "274818": 345, "191111": 345, "817604": 345, "421290": 345, "461701": 345, "940801": 345, "437023": 345, "207477": 345, "755739": 345, "individual_predictions_plot": 345, "exceed": 346, "rse_theta": 346, "rse_omega": 346, "rse_sigma": 346, "condition_numb": 346, "final_zero_gradi": 346, "final_zero_gradient_theta": 346, "final_zero_gradient_omega": 346, "final_zero_gradient_sigma": 346, "estimate_near_boundari": 346, "estimate_near_boundary_theta": 346, "estimate_near_boundary_omega": 346, "estimate_near_boundary_sigma": 346, "smaller": 346, "mandatori": 347, "da_": 348, "deg": 348, "syn": 348, "lafre": 348, "mc": 348, "entral": 348, "kint": 348, "specifii": 348, "standalon": 348, "minu": 348, "full1": 348, "679076": 348, "4243": 348, "302405": 348, "full2": 348, "679069": 348, "302412": 348, "structsearch_run5": 348, "cr1": 348, "987197": 348, "4246": 348, "994284": 348, "qss2": 348, "4257": 348, "981481": 348, "structsearch_run11": 348, "897162": 348, "4289": 348, "878642": 348, "structsearch_run9": 348, "ib1": 348, "201724": 348, "4355": 348, "183204": 348, "structsearch_run7": 348, "201728": 348, "183209": 348, "structsearch_run12": 348, "284581": 348, "4361": 348, "266061": 348, "full3": 348, "full4": 348, "structsearch_run6": 348, "cr2": 348, "structsearch_run8": 348, "ib2": 348, "structsearch_run10": 348, "trim": 349, "gotcha": 350, "cran": 351, "rapid": 351, "remot": 351, "install_github": 351, "install_pharmpi": 351, "session": 351, "packagevers": 351, "print_pharmpy_vers": 351, "reticul": 351, "miniconda": 351, "py_discover_config": 351, "conda_cr": 351, "python_vers": 351, "virtual": 351, "libpython": 351, "lib": 351, "libpython3": 351, "mirror": 351, "pipe": 351, "magrittr": 351}, "objects": {"pharmpy": [[300, 0, 0, "-", "model"], [301, 0, 0, "-", "modeling"], [302, 0, 0, "-", "tools"], [303, 0, 0, "-", "workflows"], [308, 6, 1, "cmdoption-pharmpy-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-version", "--version"], [308, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "Parameter"], [24, 1, 1, "", "Parameters"], [25, 1, 1, "", "RandomVariables"], [26, 1, 1, "", "SimulationStep"], [27, 1, 1, "", "Statement"], [28, 1, 1, "", "Statements"], [29, 1, 1, "", "VariabilityHierarchy"], [30, 1, 1, "", "VariabilityLevel"], [31, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_compartment_or_raise"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_peripheral_compartments"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 2, 1, "", "to_dict"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "parameter_uncertainty_method"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_parameter_uncertainty_methods"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[23, 2, 1, "", "create"], [23, 3, 1, "", "fix"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "init"], [23, 3, 1, "", "lower"], [23, 3, 1, "", "name"], [23, 2, 1, "", "replace"], [23, 3, 1, "", "symbol"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 3, 1, "", "fixed"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "inits"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "names"], [24, 3, 1, "", "nonfixed"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "set_fix"], [24, 2, 1, "", "set_initial_estimates"], [24, 3, 1, "", "symbols"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[25, 3, 1, "", "covariance_matrix"], [25, 2, 1, "", "create"], [25, 3, 1, "", "epsilon_levels"], [25, 3, 1, "", "epsilons"], [25, 3, 1, "", "eta_levels"], [25, 3, 1, "", "etas"], [25, 3, 1, "", "free_symbols"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_covariance"], [25, 2, 1, "", "get_rvs_with_same_dist"], [25, 3, 1, "", "iiv"], [25, 3, 1, "", "iov"], [25, 2, 1, "", "join"], [25, 3, 1, "", "names"], [25, 2, 1, "", "nearest_valid_parameters"], [25, 3, 1, "", "nrvs"], [25, 3, 1, "", "parameter_names"], [25, 2, 1, "", "parameters_sdcorr"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "replace_with_sympy_rvs"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "subs"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "unjoin"], [25, 2, 1, "", "validate_parameters"], [25, 3, 1, "", "variance_parameters"]], "pharmpy.model.SimulationStep": [[26, 2, 1, "", "create"], [26, 2, 1, "", "from_dict"], [26, 3, 1, "", "n"], [26, 2, 1, "", "replace"], [26, 3, 1, "", "seed"], [26, 2, 1, "", "to_dict"]], "pharmpy.model.Statement": [[27, 3, 1, "", "free_symbols"], [27, 3, 1, "", "rhs_symbols"], [27, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[28, 3, 1, "", "after_odes"], [28, 3, 1, "", "before_odes"], [28, 2, 1, "", "dependencies"], [28, 2, 1, "", "direct_dependencies"], [28, 3, 1, "", "error"], [28, 2, 1, "", "find_assignment"], [28, 2, 1, "", "find_assignment_index"], [28, 3, 1, "", "free_symbols"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "full_expression"], [28, 3, 1, "", "ode_system"], [28, 2, 1, "", "reassign"], [28, 2, 1, "", "remove_symbol_definitions"], [28, 2, 1, "", "subs"], [28, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[29, 2, 1, "", "create"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "levels"], [29, 3, 1, "", "names"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "group"], [30, 3, 1, "", "name"], [30, 3, 1, "", "reference"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[32, 5, 1, "", "add_admid"], [33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_bioavailability"], [35, 5, 1, "", "add_cmt"], [36, 5, 1, "", "add_covariate_effect"], [37, 5, 1, "", "add_effect_compartment"], [38, 5, 1, "", "add_estimation_step"], [39, 5, 1, "", "add_iiv"], [40, 5, 1, "", "add_indirect_effect"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_parameter_uncertainty_step"], [46, 5, 1, "", "add_pd_iiv"], [47, 5, 1, "", "add_peripheral_compartment"], [48, 5, 1, "", "add_pk_iiv"], [49, 5, 1, "", "add_population_parameter"], [50, 5, 1, "", "add_time_after_dose"], [51, 5, 1, "", "append_estimation_step_options"], [52, 5, 1, "", "bin_observations"], [53, 5, 1, "", "bump_model_number"], [54, 5, 1, "", "calculate_aic"], [55, 5, 1, "", "calculate_bic"], [56, 5, 1, "", "calculate_corr_from_cov"], [57, 5, 1, "", "calculate_corr_from_prec"], [58, 5, 1, "", "calculate_cov_from_corrse"], [59, 5, 1, "", "calculate_cov_from_prec"], [60, 5, 1, "", "calculate_epsilon_gradient_expression"], [61, 5, 1, "", "calculate_eta_gradient_expression"], [62, 5, 1, "", "calculate_eta_shrinkage"], [63, 5, 1, "", "calculate_individual_parameter_statistics"], [64, 5, 1, "", "calculate_individual_shrinkage"], [65, 5, 1, "", "calculate_parameters_from_ucp"], [66, 5, 1, "", "calculate_pk_parameters_statistics"], [67, 5, 1, "", "calculate_prec_from_corrse"], [68, 5, 1, "", "calculate_prec_from_cov"], [69, 5, 1, "", "calculate_se_from_cov"], [70, 5, 1, "", "calculate_se_from_prec"], [71, 5, 1, "", "calculate_ucp_scale"], [72, 5, 1, "", "check_dataset"], [73, 5, 1, "", "check_high_correlations"], [74, 5, 1, "", "check_parameters_near_bounds"], [75, 5, 1, "", "cleanup_model"], [76, 5, 1, "", "convert_model"], [77, 5, 1, "", "create_basic_pk_model"], [78, 5, 1, "", "create_config_template"], [79, 5, 1, "", "create_joint_distribution"], [80, 5, 1, "", "create_rng"], [81, 5, 1, "", "create_symbol"], [82, 5, 1, "", "deidentify_data"], [83, 5, 1, "", "display_odes"], [84, 5, 1, "", "drop_columns"], [85, 5, 1, "", "drop_dropped_columns"], [86, 5, 1, "", "evaluate_epsilon_gradient"], [87, 5, 1, "", "evaluate_eta_gradient"], [88, 5, 1, "", "evaluate_expression"], [89, 5, 1, "", "evaluate_individual_prediction"], [90, 5, 1, "", "evaluate_population_prediction"], [91, 5, 1, "", "evaluate_weighted_residuals"], [92, 5, 1, "", "expand_additional_doses"], [93, 5, 1, "", "filter_dataset"], [94, 5, 1, "", "find_clearance_parameters"], [95, 5, 1, "", "find_volume_parameters"], [96, 5, 1, "", "fix_or_unfix_parameters"], [97, 5, 1, "", "fix_parameters"], [98, 5, 1, "", "fix_parameters_to"], [99, 5, 1, "", "get_admid"], [100, 5, 1, "", "get_baselines"], [101, 5, 1, "", "get_bioavailability"], [102, 5, 1, "", "get_central_volume_and_clearance"], [103, 5, 1, "", "get_cmt"], [104, 5, 1, "", "get_concentration_parameters_from_data"], [105, 5, 1, "", "get_config_path"], [106, 5, 1, "", "get_covariate_baselines"], [107, 5, 1, "", "get_covariate_effects"], [108, 5, 1, "", "get_doseid"], [109, 5, 1, "", "get_doses"], [110, 5, 1, "", "get_dv_symbol"], [111, 5, 1, "", "get_evid"], [112, 5, 1, "", "get_ids"], [113, 5, 1, "", "get_individual_parameters"], [114, 5, 1, "", "get_individual_prediction_expression"], [115, 5, 1, "", "get_initial_conditions"], [116, 5, 1, "", "get_lag_times"], [117, 5, 1, "", "get_mdv"], [118, 5, 1, "", "get_model_code"], [119, 5, 1, "", "get_model_covariates"], [120, 5, 1, "", "get_number_of_individuals"], [121, 5, 1, "", "get_number_of_observations"], [122, 5, 1, "", "get_number_of_observations_per_individual"], [123, 5, 1, "", "get_number_of_peripheral_compartments"], [124, 5, 1, "", "get_number_of_transit_compartments"], [125, 5, 1, "", "get_observation_expression"], [126, 5, 1, "", "get_observations"], [127, 5, 1, "", "get_omegas"], [128, 5, 1, "", "get_parameter_rv"], [129, 5, 1, "", "get_pd_parameters"], [130, 5, 1, "", "get_pk_parameters"], [131, 5, 1, "", "get_population_prediction_expression"], [132, 5, 1, "", "get_rv_parameters"], [133, 5, 1, "", "get_sigmas"], [134, 5, 1, "", "get_thetas"], [135, 5, 1, "", "get_unit_of"], [136, 5, 1, "", "get_zero_order_inputs"], [137, 5, 1, "", "greekify_model"], [138, 5, 1, "", "has_additive_error_model"], [139, 5, 1, "", "has_combined_error_model"], [140, 5, 1, "", "has_covariate_effect"], [141, 5, 1, "", "has_first_order_absorption"], [142, 5, 1, "", "has_first_order_elimination"], [143, 5, 1, "", "has_instantaneous_absorption"], [144, 5, 1, "", "has_linear_odes"], [145, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [146, 5, 1, "", "has_michaelis_menten_elimination"], [147, 5, 1, "", "has_mixed_mm_fo_elimination"], [148, 5, 1, "", "has_odes"], [149, 5, 1, "", "has_presystemic_metabolite"], [150, 5, 1, "", "has_proportional_error_model"], [151, 5, 1, "", "has_random_effect"], [152, 5, 1, "", "has_seq_zo_fo_absorption"], [153, 5, 1, "", "has_weighted_error_model"], [154, 5, 1, "", "has_zero_order_absorption"], [155, 5, 1, "", "has_zero_order_elimination"], [156, 5, 1, "", "is_linearized"], [157, 5, 1, "", "is_real"], [158, 5, 1, "", "list_time_varying_covariates"], [159, 5, 1, "", "load_dataset"], [160, 5, 1, "", "load_example_model"], [161, 5, 1, "", "make_declarative"], [162, 5, 1, "", "mu_reference_model"], [163, 5, 1, "", "omit_data"], [164, 5, 1, "", "plot_abs_cwres_vs_ipred"], [165, 5, 1, "", "plot_cwres_vs_idv"], [166, 5, 1, "", "plot_dv_vs_ipred"], [167, 5, 1, "", "plot_dv_vs_pred"], [168, 5, 1, "", "plot_individual_predictions"], [169, 5, 1, "", "plot_iofv_vs_iofv"], [170, 5, 1, "", "plot_transformed_eta_distributions"], [171, 5, 1, "", "print_model_code"], [172, 5, 1, "", "print_model_symbols"], [173, 5, 1, "", "read_dataset_from_datainfo"], [174, 5, 1, "", "read_model"], [175, 5, 1, "", "read_model_from_string"], [176, 5, 1, "", "remove_bioavailability"], [177, 5, 1, "", "remove_covariate_effect"], [178, 5, 1, "", "remove_error_model"], [179, 5, 1, "", "remove_estimation_step"], [180, 5, 1, "", "remove_iiv"], [181, 5, 1, "", "remove_iov"], [182, 5, 1, "", "remove_lag_time"], [183, 5, 1, "", "remove_loq_data"], [184, 5, 1, "", "remove_parameter_uncertainty_step"], [185, 5, 1, "", "remove_peripheral_compartment"], [186, 5, 1, "", "remove_unused_parameters_and_rvs"], [187, 5, 1, "", "rename_symbols"], [188, 5, 1, "", "replace_non_random_rvs"], [189, 5, 1, "", "resample_data"], [190, 5, 1, "", "sample_individual_estimates"], [191, 5, 1, "", "sample_parameters_from_covariance_matrix"], [192, 5, 1, "", "sample_parameters_uniformly"], [193, 5, 1, "", "set_additive_error_model"], [194, 5, 1, "", "set_baseline_effect"], [195, 5, 1, "", "set_combined_error_model"], [196, 5, 1, "", "set_covariates"], [197, 5, 1, "", "set_dataset"], [198, 5, 1, "", "set_direct_effect"], [199, 5, 1, "", "set_dtbs_error_model"], [200, 5, 1, "", "set_dvid"], [201, 5, 1, "", "set_estimation_step"], [202, 5, 1, "", "set_evaluation_step"], [203, 5, 1, "", "set_first_order_absorption"], [204, 5, 1, "", "set_first_order_elimination"], [205, 5, 1, "", "set_iiv_on_ruv"], [206, 5, 1, "", "set_initial_condition"], [207, 5, 1, "", "set_initial_estimates"], [208, 5, 1, "", "set_instantaneous_absorption"], [209, 5, 1, "", "set_lloq_data"], [210, 5, 1, "", "set_lower_bounds"], [211, 5, 1, "", "set_michaelis_menten_elimination"], [212, 5, 1, "", "set_mixed_mm_fo_elimination"], [213, 5, 1, "", "set_name"], [214, 5, 1, "", "set_ode_solver"], [215, 5, 1, "", "set_peripheral_compartments"], [216, 5, 1, "", "set_power_on_ruv"], [217, 5, 1, "", "set_proportional_error_model"], [218, 5, 1, "", "set_reference_values"], [219, 5, 1, "", "set_seq_zo_fo_absorption"], [220, 5, 1, "", "set_simulation"], [221, 5, 1, "", "set_time_varying_error_model"], [222, 5, 1, "", "set_tmdd"], [223, 5, 1, "", "set_transit_compartments"], [224, 5, 1, "", "set_upper_bounds"], [225, 5, 1, "", "set_weighted_error_model"], [226, 5, 1, "", "set_zero_order_absorption"], [227, 5, 1, "", "set_zero_order_elimination"], [228, 5, 1, "", "set_zero_order_input"], [229, 5, 1, "", "simplify_expression"], [230, 5, 1, "", "solve_ode_system"], [231, 5, 1, "", "split_joint_distribution"], [232, 5, 1, "", "transform_blq"], [233, 5, 1, "", "transform_etas_boxcox"], [234, 5, 1, "", "transform_etas_john_draper"], [235, 5, 1, "", "transform_etas_tdist"], [236, 5, 1, "", "translate_nmtran_time"], [237, 5, 1, "", "unconstrain_parameters"], [238, 5, 1, "", "undrop_columns"], [239, 5, 1, "", "unfix_parameters"], [240, 5, 1, "", "unfix_parameters_to"], [241, 5, 1, "", "unload_dataset"], [242, 5, 1, "", "update_initial_individual_estimates"], [243, 5, 1, "", "update_inits"], [244, 5, 1, "", "use_thetas_for_error_stdev"], [245, 5, 1, "", "write_csv"], [246, 5, 1, "", "write_model"]], "pharmpy.tools": [[247, 5, 1, "", "create_report"], [248, 5, 1, "", "create_results"], [249, 5, 1, "", "fit"], [250, 5, 1, "", "get_model_features"], [251, 5, 1, "", "is_strictness_fulfilled"], [252, 5, 1, "", "load_example_modelfit_results"], [253, 5, 1, "", "predict_influential_individuals"], [254, 5, 1, "", "predict_influential_outliers"], [255, 5, 1, "", "predict_outliers"], [256, 5, 1, "", "print_fit_summary"], [257, 5, 1, "", "rank_models"], [258, 5, 1, "", "read_modelfit_results"], [259, 5, 1, "", "read_results"], [260, 5, 1, "", "resume_tool"], [261, 5, 1, "", "retrieve_final_model"], [262, 5, 1, "", "retrieve_models"], [263, 5, 1, "", "run_allometry"], [264, 5, 1, "", "run_amd"], [265, 5, 1, "", "run_bootstrap"], [266, 5, 1, "", "run_covsearch"], [267, 5, 1, "", "run_estmethod"], [268, 5, 1, "", "run_iivsearch"], [269, 5, 1, "", "run_iovsearch"], [270, 5, 1, "", "run_modelfit"], [271, 5, 1, "", "run_modelsearch"], [272, 5, 1, "", "run_retries"], [273, 5, 1, "", "run_ruvsearch"], [274, 5, 1, "", "run_structsearch"], [275, 5, 1, "", "run_tool"], [276, 5, 1, "", "summarize_errors"], [277, 5, 1, "", "summarize_individuals"], [278, 5, 1, "", "summarize_individuals_count_table"], [279, 5, 1, "", "summarize_modelfit_results"], [280, 5, 1, "", "write_results"]], "pharmpy.workflows": [[281, 1, 1, "", "LocalDirectoryDatabase"], [282, 1, 1, "", "LocalDirectoryToolDatabase"], [283, 1, 1, "", "LocalModelDirectoryDatabase"], [284, 1, 1, "", "Log"], [285, 1, 1, "", "ModelDatabase"], [286, 1, 1, "", "ModelEntry"], [287, 1, 1, "", "ModelfitResults"], [288, 1, 1, "", "NullModelDatabase"], [289, 1, 1, "", "NullToolDatabase"], [290, 1, 1, "", "Results"], [291, 1, 1, "", "Task"], [292, 1, 1, "", "ToolDatabase"], [293, 1, 1, "", "Workflow"], [294, 1, 1, "", "WorkflowBuilder"], [295, 5, 1, "", "call_workflow"], [296, 3, 1, "", "default_model_database"], [297, 3, 1, "", "default_tool_database"], [298, 5, 1, "", "execute_workflow"], [299, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[281, 2, 1, "", "retrieve_file"], [281, 2, 1, "", "retrieve_local_files"], [281, 2, 1, "", "retrieve_model"], [281, 2, 1, "", "retrieve_model_entry"], [281, 2, 1, "", "retrieve_modelfit_results"], [281, 2, 1, "", "store_local_file"], [281, 2, 1, "", "store_metadata"], [281, 2, 1, "", "store_model"], [281, 2, 1, "", "store_model_entry"], [281, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[282, 2, 1, "", "from_dict"], [282, 2, 1, "", "read_metadata"], [282, 2, 1, "", "store_local_file"], [282, 2, 1, "", "store_metadata"], [282, 2, 1, "", "store_results"], [282, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[283, 2, 1, "", "list_models"], [283, 2, 1, "", "snapshot"], [283, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[284, 3, 1, "", "errors"], [284, 2, 1, "", "from_dict"], [284, 2, 1, "", "log_error"], [284, 2, 1, "", "log_warning"], [284, 2, 1, "", "to_dataframe"], [284, 2, 1, "", "to_dict"], [284, 3, 1, "", "warnings"]], "pharmpy.workflows.ModelDatabase": [[285, 2, 1, "", "retrieve_file"], [285, 2, 1, "", "retrieve_local_files"], [285, 2, 1, "", "retrieve_model"], [285, 2, 1, "", "retrieve_model_entry"], [285, 2, 1, "", "retrieve_modelfit_results"], [285, 2, 1, "", "snapshot"], [285, 2, 1, "", "store_local_file"], [285, 2, 1, "", "store_metadata"], [285, 2, 1, "", "store_model"], [285, 2, 1, "", "store_model_entry"], [285, 2, 1, "", "store_modelfit_results"], [285, 2, 1, "", "transaction"]], "pharmpy.workflows.ModelEntry": [[286, 2, 1, "", "attach_results"], [286, 2, 1, "", "create"], [286, 3, 1, "", "log"], [286, 3, 1, "", "model"], [286, 3, 1, "", "modelfit_results"], [286, 3, 1, "", "parent"]], "pharmpy.workflows.ModelfitResults": [[287, 3, 1, "", "correlation_matrix"], [287, 3, 1, "", "covariance_matrix"], [287, 3, 1, "", "covstep_successful"], [287, 3, 1, "", "description"], [287, 3, 1, "", "estimation_runtime"], [287, 3, 1, "", "estimation_runtime_iterations"], [287, 3, 1, "", "evaluation"], [287, 3, 1, "", "function_evaluations"], [287, 3, 1, "", "function_evaluations_iterations"], [287, 3, 1, "", "gradients"], [287, 3, 1, "", "gradients_iterations"], [287, 3, 1, "", "individual_estimates"], [287, 3, 1, "", "individual_estimates_covariance"], [287, 3, 1, "", "individual_ofv"], [287, 3, 1, "", "log"], [287, 3, 1, "", "log_likelihood"], [287, 3, 1, "", "minimization_successful"], [287, 3, 1, "", "minimization_successful_iterations"], [287, 3, 1, "", "name"], [287, 3, 1, "", "ofv"], [287, 3, 1, "", "ofv_iterations"], [287, 3, 1, "", "parameter_estimates"], [287, 3, 1, "", "parameter_estimates_iterations"], [287, 3, 1, "", "parameter_estimates_sdcorr"], [287, 3, 1, "", "precision_matrix"], [287, 3, 1, "", "predictions"], [287, 3, 1, "", "relative_standard_errors"], [287, 3, 1, "", "residuals"], [287, 3, 1, "", "runtime_total"], [287, 3, 1, "", "significant_digits"], [287, 3, 1, "", "significant_digits_iterations"], [287, 3, 1, "", "standard_errors"], [287, 3, 1, "", "standard_errors_sdcorr"], [287, 3, 1, "", "termination_cause"], [287, 3, 1, "", "termination_cause_iterations"], [287, 3, 1, "", "warnings"]], "pharmpy.workflows.NullModelDatabase": [[288, 2, 1, "", "retrieve_file"], [288, 2, 1, "", "retrieve_local_files"], [288, 2, 1, "", "retrieve_model"], [288, 2, 1, "", "retrieve_model_entry"], [288, 2, 1, "", "retrieve_modelfit_results"], [288, 2, 1, "", "store_local_file"], [288, 2, 1, "", "store_metadata"], [288, 2, 1, "", "store_model"], [288, 2, 1, "", "store_model_entry"], [288, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[289, 2, 1, "", "read_metadata"], [289, 2, 1, "", "store_local_file"], [289, 2, 1, "", "store_metadata"], [289, 2, 1, "", "store_results"]], "pharmpy.workflows.Results": [[290, 2, 1, "", "from_dict"], [290, 2, 1, "", "get_and_reset_index"], [290, 2, 1, "", "to_csv"], [290, 2, 1, "", "to_dict"], [290, 2, 1, "", "to_json"]], "pharmpy.workflows.Task": [[291, 2, 1, "", "create"], [291, 3, 1, "", "function"], [291, 3, 1, "", "name"], [291, 2, 1, "", "replace"], [291, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[292, 3, 1, "", "model_database"], [292, 3, 1, "", "path"], [292, 2, 1, "", "read_metadata"], [292, 2, 1, "", "store_local_file"], [292, 2, 1, "", "store_metadata"], [292, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[293, 2, 1, "", "as_dask_dict"], [293, 2, 1, "", "create"], [293, 3, 1, "", "name"], [293, 2, 1, "", "plot_dask"], [293, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[294, 2, 1, "", "add_task"], [294, 2, 1, "", "insert_workflow"], [294, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[308, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [308, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [308, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [308, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [308, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [308, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[308, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [308, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[308, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [308, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [308, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [308, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [308, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [308, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[308, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [308, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[308, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [308, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [308, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [308, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [308, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [308, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[308, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [308, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [308, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [308, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [308, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [308, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [308, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[308, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [308, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [308, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [308, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [308, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[308, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[308, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-print": [[308, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [308, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-sample": [[308, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [308, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [308, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-update_inits": [[308, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [308, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [308, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [308, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [308, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[308, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[308, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[308, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[308, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [308, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [308, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [308, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[308, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[308, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[308, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[308, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[308, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[308, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[308, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[308, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[308, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[308, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[308, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[308, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [308, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [308, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [308, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [308, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [308, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [308, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [308, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [308, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [308, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [308, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [308, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [308, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[308, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [308, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[308, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[308, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [308, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [308, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [308, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[308, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[308, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [308, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[308, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[308, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [308, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [308, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[308, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [308, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 311, 334], "dataset": [0, 310, 316, 330, 332], "overview": [0, 337, 341], "pars": 0, "translat": 0, "step": [0, 330, 332, 344], "nm": 0, "tran": 0, "comment": 0, "line": [0, 308], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 332], "date": 0, "id": 0, "check": [0, 312], "tabl": 0, "file": [0, 311, 316], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 312], "all": [0, 313], "zero": 0, "individu": [0, 304, 305, 321, 328, 331, 345], "phc": 0, "control": 0, "stream": 0, "gener": [0, 322, 327], "option": [0, 1, 303, 314, 320, 324, 326, 329, 333, 335, 343, 348, 349], "problem": 0, "data": [0, 303, 308], "eta": [0, 332], "code": [0, 309, 312], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 290, 304, 305, 308, 310, 314, 315, 319, 320, 321, 324, 326, 328, 331, 333, 335, 339, 341, 342, 343, 344, 345, 347, 348], "spars": 0, "matrix": [0, 304, 331], "allometri": [1, 2, 308, 332], "run": [1, 2, 308, 310, 312, 314, 319, 320, 324, 326, 333, 335, 342, 343, 347, 348], "argument": [1, 2, 314, 320, 324, 326, 333, 335, 342, 343, 347, 348], "mandatori": [1, 314, 320, 324, 326, 333, 335, 343, 348], "procedur": [1, 343], "The": [1, 304, 305, 311, 315, 317, 319, 320, 321, 324, 328, 330, 333, 339, 341, 342, 343, 344, 345, 347], "automat": 2, "model": [2, 18, 300, 301, 308, 316, 317, 319, 324, 329, 330, 331, 332, 333, 334, 335, 339, 343, 347, 348], "develop": [2, 312, 313, 318], "amd": [2, 308], "input": [2, 313], "search": [2, 319, 324, 333, 335, 347], "space": [2, 319, 333, 335, 347], "strategi": 2, "default": 2, "reevalu": 2, "sir": 2, "sri": 2, "rsi": 2, "subtool": 2, "us": [2, 312, 334, 351], "structur": [2, 332, 341], "modelsearch": [2, 308, 333], "structsearch": [2, 319, 335, 347, 348], "iivsearch": [2, 308, 324], "iovsearch": [2, 308, 326], "residu": [2, 331, 341], "covari": [2, 304, 305, 321, 331, 332, 341], "retri": [2, 342], "final": [2, 331], "exampl": [2, 323, 329, 332, 335, 346, 348], "api": 3, "refer": [3, 305, 308, 321], "assign": 4, "bolu": 5, "columninfo": [6, 316], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 316, 330], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 326, 330, 332], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "paramet": [23, 24, 304, 317, 320, 321, 330, 331, 332, 334], "randomvari": [25, 317], "simulationstep": 26, "statement": [27, 28, 317, 330], "variabilityhierarchi": 29, "variabilitylevel": 30, "to_compartmental_system": 31, "add_admid": 32, "add_allometri": 33, "add_bioavail": 34, "add_cmt": 35, "add_covariate_effect": 36, "add_effect_compart": 37, "add_estimation_step": 38, "add_iiv": 39, "add_indirect_effect": 40, "add_individual_paramet": 41, "add_iov": 42, "add_lag_tim": 43, "add_metabolit": 44, "add_parameter_uncertainty_step": 45, "add_pd_iiv": 46, "add_peripheral_compart": 47, "add_pk_iiv": 48, "add_population_paramet": 49, "add_time_after_dos": 50, "append_estimation_step_opt": 51, "bin_observ": 52, "bump_model_numb": 53, "calculate_a": 54, "calculate_b": 55, "calculate_corr_from_cov": 56, "calculate_corr_from_prec": 57, "calculate_cov_from_corrs": 58, "calculate_cov_from_prec": 59, "calculate_epsilon_gradient_express": 60, "calculate_eta_gradient_express": 61, "calculate_eta_shrinkag": 62, "calculate_individual_parameter_statist": 63, "calculate_individual_shrinkag": 64, "calculate_parameters_from_ucp": 65, "calculate_pk_parameters_statist": 66, "calculate_prec_from_corrs": 67, "calculate_prec_from_cov": 68, "calculate_se_from_cov": 69, "calculate_se_from_prec": 70, "calculate_ucp_scal": 71, "check_dataset": 72, "check_high_correl": 73, "check_parameters_near_bound": 74, "cleanup_model": 75, "convert_model": 76, "create_basic_pk_model": 77, "create_config_templ": 78, "create_joint_distribut": 79, "create_rng": 80, "create_symbol": 81, "deidentify_data": 82, "display_od": 83, "drop_column": 84, "drop_dropped_column": 85, "evaluate_epsilon_gradi": 86, "evaluate_eta_gradi": 87, "evaluate_express": 88, "evaluate_individual_predict": 89, "evaluate_population_predict": 90, "evaluate_weighted_residu": 91, "expand_additional_dos": 92, "filter_dataset": 93, "find_clearance_paramet": 94, "find_volume_paramet": 95, "fix_or_unfix_paramet": 96, "fix_paramet": 97, "fix_parameters_to": 98, "get_admid": 99, "get_baselin": 100, "get_bioavail": 101, "get_central_volume_and_clear": 102, "get_cmt": 103, "get_concentration_parameters_from_data": 104, "get_config_path": 105, "get_covariate_baselin": 106, "get_covariate_effect": 107, "get_doseid": 108, "get_dos": 109, "get_dv_symbol": 110, "get_evid": 111, "get_id": 112, "get_individual_paramet": 113, "get_individual_prediction_express": 114, "get_initial_condit": 115, "get_lag_tim": 116, "get_mdv": 117, "get_model_cod": 118, "get_model_covari": 119, "get_number_of_individu": 120, "get_number_of_observ": 121, "get_number_of_observations_per_individu": 122, "get_number_of_peripheral_compart": 123, "get_number_of_transit_compart": 124, "get_observation_express": 125, "get_observ": 126, "get_omega": 127, "get_parameter_rv": 128, "get_pd_paramet": 129, "get_pk_paramet": 130, "get_population_prediction_express": 131, "get_rv_paramet": 132, "get_sigma": 133, "get_theta": 134, "get_unit_of": 135, "get_zero_order_input": 136, "greekify_model": 137, "has_additive_error_model": 138, "has_combined_error_model": 139, "has_covariate_effect": 140, "has_first_order_absorpt": 141, "has_first_order_elimin": 142, "has_instantaneous_absorpt": 143, "has_linear_od": 144, "has_linear_odes_with_real_eigenvalu": 145, "has_michaelis_menten_elimin": 146, "has_mixed_mm_fo_elimin": 147, "has_od": 148, "has_presystemic_metabolit": 149, "has_proportional_error_model": 150, "has_random_effect": 151, "has_seq_zo_fo_absorpt": 152, "has_weighted_error_model": 153, "has_zero_order_absorpt": 154, "has_zero_order_elimin": 155, "is_linear": 156, "is_real": 157, "list_time_varying_covari": 158, "load_dataset": 159, "load_example_model": 160, "make_declar": 161, "mu_reference_model": 162, "omit_data": 163, "plot_abs_cwres_vs_ipr": 164, "plot_cwres_vs_idv": 165, "plot_dv_vs_ipr": 166, "plot_dv_vs_pr": 167, "plot_individual_predict": 168, "plot_iofv_vs_iofv": 169, "plot_transformed_eta_distribut": 170, "print_model_cod": 171, "print_model_symbol": 172, "read_dataset_from_datainfo": 173, "read_model": 174, "read_model_from_str": 175, "remove_bioavail": 176, "remove_covariate_effect": 177, "remove_error_model": 178, "remove_estimation_step": 179, "remove_iiv": 180, "remove_iov": 181, "remove_lag_tim": 182, "remove_loq_data": 183, "remove_parameter_uncertainty_step": 184, "remove_peripheral_compart": 185, "remove_unused_parameters_and_rv": 186, "rename_symbol": 187, "replace_non_random_rv": 188, "resample_data": 189, "sample_individual_estim": 190, "sample_parameters_from_covariance_matrix": 191, "sample_parameters_uniformli": 192, "set_additive_error_model": 193, "set_baseline_effect": 194, "set_combined_error_model": 195, "set_covari": 196, "set_dataset": 197, "set_direct_effect": 198, "set_dtbs_error_model": 199, "set_dvid": 200, "set_estimation_step": 201, "set_evaluation_step": 202, "set_first_order_absorpt": 203, "set_first_order_elimin": 204, "set_iiv_on_ruv": 205, "set_initial_condit": 206, "set_initial_estim": 207, "set_instantaneous_absorpt": 208, "set_lloq_data": 209, "set_lower_bound": 210, "set_michaelis_menten_elimin": 211, "set_mixed_mm_fo_elimin": 212, "set_nam": 213, "set_ode_solv": 214, "set_peripheral_compart": 215, "set_power_on_ruv": 216, "set_proportional_error_model": 217, "set_reference_valu": 218, "set_seq_zo_fo_absorpt": 219, "set_simul": 220, "set_time_varying_error_model": 221, "set_tmdd": 222, "set_transit_compart": 223, "set_upper_bound": 224, "set_weighted_error_model": 225, "set_zero_order_absorpt": 226, "set_zero_order_elimin": 227, "set_zero_order_input": 228, "simplify_express": 229, "solve_ode_system": 230, "split_joint_distribut": 231, "transform_blq": 232, "transform_etas_boxcox": 233, "transform_etas_john_drap": 234, "transform_etas_tdist": 235, "translate_nmtran_tim": 236, "unconstrain_paramet": 237, "undrop_column": 238, "unfix_paramet": 239, "unfix_parameters_to": 240, "unload_dataset": 241, "update_initial_individual_estim": 242, "update_init": [243, 308], "use_thetas_for_error_stdev": 244, "write_csv": 245, "write_model": 246, "create_report": 247, "create_result": 248, "fit": [249, 331], "get_model_featur": 250, "is_strictness_fulfil": 251, "load_example_modelfit_result": 252, "predict_influential_individu": 253, "predict_influential_outli": 254, "predict_outli": 255, "print_fit_summari": 256, "rank_model": 257, "read_modelfit_result": 258, "read_result": 259, "resume_tool": 260, "retrieve_final_model": 261, "retrieve_model": 262, "run_allometri": 263, "run_amd": 264, "run_bootstrap": 265, "run_covsearch": 266, "run_estmethod": 267, "run_iivsearch": 268, "run_iovsearch": 269, "run_modelfit": 270, "run_modelsearch": 271, "run_retri": 272, "run_ruvsearch": 273, "run_structsearch": 274, "run_tool": 275, "summarize_error": 276, "summarize_individu": 277, "summarize_individuals_count_t": 278, "summarize_modelfit_result": 279, "write_result": 280, "localdirectorydatabas": 281, "localdirectorytooldatabas": 282, "localmodeldirectorydatabas": 283, "log": 284, "modeldatabas": 285, "modelentri": 286, "modelfitresult": 287, "nullmodeldatabas": 288, "nulltooldatabas": 289, "task": 291, "tooldatabas": 292, "workflow": [293, 303, 312, 319, 335, 348], "workflowbuild": 294, "call_workflow": 295, "default_model_databas": 296, "default_tool_databas": 297, "execute_workflow": 298, "split_common_opt": 299, "pharmpi": [300, 301, 302, 303, 307, 308, 309, 311, 312, 317, 325, 330, 336, 340, 349, 351], "packag": [300, 301, 302, 303], "function": [300, 301, 302, 303, 332], "class": [300, 303, 317], "tool": [302, 310, 340, 349], "modul": [303, 317], "bootstrap": [304, 308], "postprocess": [304, 321], "statist": 304, "ofv": [304, 305, 308, 315, 321, 328, 331, 344, 345], "includ": 304, "case": 305, "delet": 305, "diagnost": 305, "cdd": [305, 308], "cook": 305, "score": 305, "jackknif": 305, "cookscor": 305, "ratio": 305, "delta": 305, "skip": 305, "column": 305, "changelog": 306, "0": 306, "107": 306, "2024": 306, "03": 306, "04": 306, "new": [306, 326, 334], "featur": [306, 310, 329, 333], "chang": [306, 336], "bugfix": 306, "106": 306, "01": 306, "11": 306, "105": 306, "2023": 306, "12": 306, "07": 306, "104": 306, "06": 306, "103": 306, "10": 306, "102": 306, "09": 306, "28": 306, "101": 306, "100": 306, "08": 306, "25": 306, "99": 306, "23": 306, "98": 306, "21": 306, "97": 306, "96": 306, "05": 306, "26": 306, "95": 306, "22": 306, "94": 306, "93": 306, "19": 306, "92": 306, "91": 306, "90": 306, "02": 306, "24": 306, "89": 306, "88": 306, "2022": 306, "87": 306, "14": 306, "86": 306, "30": 306, "85": 306, "18": 306, "84": 306, "1": 306, "13": 306, "bug": 306, "fix": 306, "83": 306, "82": 306, "81": 306, "80": 306, "79": 306, "16": 306, "78": 306, "20": 306, "77": 306, "76": 306, "75": 306, "74": 306, "73": 306, "72": 306, "71": 306, "70": 306, "17": 306, "69": 306, "29": 306, "68": 306, "27": 306, "67": 306, "66": 306, "65": 306, "64": 306, "63": 306, "62": 306, "61": 306, "31": 306, "59": 306, "58": 306, "4": 306, "57": 306, "56": 306, "55": 306, "54": 306, "53": 306, "52": 306, "51": 306, "50": 306, "49": 306, "48": 306, "47": 306, "46": 306, "45": 306, "44": 306, "43": 306, "42": 306, "41": 306, "2021": 306, "40": 306, "39": 306, "15": 306, "38": 306, "37": 306, "36": 306, "35": 306, "34": 306, "3": 306, "2": [306, 327], "33": 306, "32": 306, "2020": 306, "9": 306, "8": 306, "7": 306, "6": 306, "5": 306, "2018": 306, "citat": 307, "how": 307, "cite": 307, "pharmr": [307, 351], "command": 308, "interfac": 308, "append": 308, "deidentifi": 308, "filter": 308, "print": 308, "resampl": 308, "write": [308, 330, 332, 334], "info": 308, "sampl": [308, 345], "frem": [308, 321], "linear": [308, 328], "qa": [308, 341], "report": 308, "ruvsearch": [308, 343], "scm": [308, 344], "simev": [308, 345], "summari": [308, 344, 345], "covsearch": [308, 314], "estmethod": [308, 320], "execut": 308, "commun": 309, "conduct": 309, "common": [310, 333, 349], "databas": 310, "directori": 310, "metadata": 310, "configur": 311, "avail": 311, "plugin": [311, 334, 337], "nlmixr": 311, "rxode": 311, "environ": [311, 312], "variabl": [311, 321, 330, 332, 334], "contribut": 312, "set": [312, 336], "up": [312, 324], "support": 312, "platform": 312, "instal": [312, 323, 351], "python": [312, 351], "git": 312, "fork": 312, "clone": 312, "repositori": 312, "tox": 312, "graphviz": 312, "build": 312, "document": [312, 318], "unit": [312, 316], "test": 312, "integr": 312, "usabl": 312, "virtual": 312, "standard": [312, 331], "releas": 312, "version": [312, 351], "inform": [312, 332], "contributor": 313, "current": 313, "team": 313, "past": 313, "present": 313, "scientif": 313, "fund": 313, "effect": [314, 321, 341], "wildcard": 314, "algorithm": [314, 320, 324, 326, 333], "crossval": 315, "crossvalid": 315, "retriev": 316, "from": 316, "updat": [316, 320], "type": [316, 329, 347, 348], "scale": [316, 342], "continu": 316, "categori": 316, "drop": 316, "datatyp": 316, "descriptor": 316, "design": 317, "principl": 317, "level": [317, 330], "architectur": 317, "heart": 317, "docstr": 317, "depend": [317, 330], "drug": 319, "metabolit": 319, "exhaust": [320, 324, 333], "onli": 320, "evalu": 320, "estim": [320, 321, 330, 331, 332], "method": 320, "solver": 320, "uncertainti": 320, "coeffici": 321, "unexplain": 321, "valu": 321, "get": 323, "start": [323, 324], "A": 323, "first": 323, "top": 324, "down": 324, "bottom": 324, "stepwis": [324, 333], "ad": [324, 330, 332, 333], "iiv": [324, 333], "compar": [324, 326, 333], "rank": [324, 326, 333], "candid": [324, 326, 333, 344], "welcom": 325, "iov": 326, "licens": 327, "logo": 327, "copyright": 327, "bsd": 327, "claus": 327, "gnu": 327, "lesser": 327, "public": 327, "languag": 329, "mfl": 329, "symbol": [329, 330], "describ": 329, "interv": 329, "redund": 329, "descript": [329, 330], "read": [330, 332, 334], "inspect": 330, "attribut": 330, "name": [330, 334], "random": [330, 334], "low": 330, "manipul": 330, "object": 330, "creat": [330, 332], "substitut": 330, "numer": 330, "modelfit": 331, "error": [331, 332, 341, 351], "rel": 331, "correl": 331, "precis": 331, "indiviud": 331, "predict": [331, 345], "basic": 332, "load": 332, "convert": 332, "transform": 332, "absorpt": 332, "rate": 332, "delai": 332, "elimin": 332, "remov": 332, "popul": 332, "blq": 332, "examin": 332, "modifi": 332, "subject": 332, "observ": 332, "dose": 332, "extract": 332, "group": 332, "after": 332, "concentr": 332, "behaviour": 333, "between": [333, 351], "combin": 333, "exclus": 333, "reduc": 333, "dure": 333, "pkpd": 335, "plot": [336, 345], "theme": 336, "axi": 336, "project": 338, "suggest": 338, "resmod": 339, "psn": 340, "connect": 340, "bia": 341, "fullblock": 341, "boxcox": 341, "tdist": 341, "normal": 342, "ucp": 342, "strict": 346, "tmdd": 348, "full": 348, "ib": 348, "cr": 348, "qss": 348, "wagner": 348, "mmapp": 348, "dv": 348, "user": 350, "guid": 350, "r": 351, "troubl": 351, "shoot": 351, "wrong": 351, "when": 351, "conda": 351, "import": 351, "mismatch": 351, "gotcha": 351, "list": 351, "indic": 351}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"evaluate_eta_gradient": [[87, "evaluate-eta-gradient"]], "evaluate_weighted_residuals": [[91, "evaluate-weighted-residuals"]], "get_baselines": [[100, "get-baselines"]], "get_config_path": [[105, "get-config-path"]], "get_doseid": [[108, "get-doseid"]], "filter_dataset": [[93, "filter-dataset"]], "get_central_volume_and_clearance": [[102, "get-central-volume-and-clearance"]], "get_bioavailability": [[101, "get-bioavailability"]], "find_clearance_parameters": [[94, "find-clearance-parameters"]], "get_ids": [[112, "get-ids"]], "get_covariate_effects": [[107, "get-covariate-effects"]], "evaluate_population_prediction": [[90, "evaluate-population-prediction"]], "find_volume_parameters": [[95, "find-volume-parameters"]], "get_individual_parameters": [[113, "get-individual-parameters"]], "evaluate_individual_prediction": [[89, "evaluate-individual-prediction"]], "fix_or_unfix_parameters": [[96, "fix-or-unfix-parameters"]], "fix_parameters_to": [[98, "fix-parameters-to"]], "fix_parameters": [[97, "fix-parameters"]], "get_cmt": [[103, "get-cmt"]], "get_individual_prediction_expression": [[114, "get-individual-prediction-expression"]], "get_evid": [[111, "get-evid"]], "get_doses": [[109, "get-doses"]], "get_covariate_baselines": [[106, "get-covariate-baselines"]], "get_dv_symbol": [[110, "get-dv-symbol"]], "get_concentration_parameters_from_data": [[104, "get-concentration-parameters-from-data"]], "expand_additional_doses": [[92, "expand-additional-doses"]], "get_initial_conditions": [[115, "get-initial-conditions"]], "evaluate_expression": [[88, "evaluate-expression"]], "get_admid": [[99, "get-admid"]], "calculate_epsilon_gradient_expression": [[60, "calculate-epsilon-gradient-expression"]], "create_config_template": [[78, "create-config-template"]], "check_high_correlations": [[73, "check-high-correlations"]], "calculate_se_from_cov": [[69, "calculate-se-from-cov"]], "create_basic_pk_model": [[77, "create-basic-pk-model"]], "calculate_prec_from_cov": [[68, "calculate-prec-from-cov"]], "convert_model": [[76, "convert-model"]], "display_odes": [[83, "display-odes"]], "check_dataset": [[72, "check-dataset"]], "drop_dropped_columns": [[85, "drop-dropped-columns"]], "check_parameters_near_bounds": [[74, "check-parameters-near-bounds"]], "calculate_cov_from_corrse": [[58, "calculate-cov-from-corrse"]], "calculate_individual_shrinkage": [[64, "calculate-individual-shrinkage"]], "create_symbol": [[81, "create-symbol"]], "calculate_eta_gradient_expression": [[61, "calculate-eta-gradient-expression"]], "calculate_pk_parameters_statistics": [[66, "calculate-pk-parameters-statistics"]], "cleanup_model": [[75, "cleanup-model"]], "create_rng": [[80, "create-rng"]], "calculate_se_from_prec": [[70, "calculate-se-from-prec"]], "evaluate_epsilon_gradient": [[86, "evaluate-epsilon-gradient"]], "calculate_ucp_scale": [[71, "calculate-ucp-scale"]], "calculate_prec_from_corrse": [[67, "calculate-prec-from-corrse"]], "calculate_eta_shrinkage": [[62, "calculate-eta-shrinkage"]], "calculate_cov_from_prec": [[59, "calculate-cov-from-prec"]], "calculate_parameters_from_ucp": [[65, "calculate-parameters-from-ucp"]], "create_joint_distribution": [[79, "create-joint-distribution"]], "deidentify_data": [[82, "deidentify-data"]], "calculate_individual_parameter_statistics": [[63, "calculate-individual-parameter-statistics"]], "drop_columns": [[84, "drop-columns"]], "bump_model_number": [[53, "bump-model-number"]], "add_iiv": [[39, "add-iiv"]], "add_estimation_step": [[38, "add-estimation-step"]], "add_pk_iiv": [[48, "add-pk-iiv"]], "add_bioavailability": [[34, "add-bioavailability"]], "calculate_corr_from_cov": [[56, "calculate-corr-from-cov"]], "add_admid": [[32, "add-admid"]], "add_allometry": [[33, "add-allometry"]], "add_indirect_effect": [[40, "add-indirect-effect"]], "calculate_aic": [[54, "calculate-aic"]], "add_time_after_dose": [[50, "add-time-after-dose"]], "calculate_bic": [[55, "calculate-bic"]], "add_iov": [[42, "add-iov"]], "add_pd_iiv": [[46, "add-pd-iiv"]], "add_metabolite": [[44, "add-metabolite"]], "to_compartmental_system": [[31, "to-compartmental-system"]], "bin_observations": [[52, "bin-observations"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "VariabilityLevel": [[30, "variabilitylevel"]], "VariabilityHierarchy": [[29, "variabilityhierarchy"]], "add_peripheral_compartment": [[47, "add-peripheral-compartment"]], "add_parameter_uncertainty_step": [[45, "add-parameter-uncertainty-step"]], "add_population_parameter": [[49, "add-population-parameter"]], "add_effect_compartment": [[37, "add-effect-compartment"]], "add_lag_time": [[43, "add-lag-time"]], "add_cmt": [[35, "add-cmt"]], "append_estimation_step_options": [[51, "append-estimation-step-options"]], "add_covariate_effect": [[36, "add-covariate-effect"]], "calculate_corr_from_prec": [[57, "calculate-corr-from-prec"]], "Pharmpy in R": [[351, "pharmpy-in-r"]], "Installing pharmr": [[351, "installing-pharmr"]], "Trouble shooting": [[351, "trouble-shooting"]], "Wrong Python version when using conda": [[351, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[351, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[351, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[351, "using-pharmr"]], "Gotchas": [[351, "gotchas"]], "List indices": [[351, "list-indices"]], "User guide": [[350, "user-guide"]], "TMDD": [[348, "tmdd"]], "Running": [[348, "running"], [2, "running"], [1, "running"], [314, "running"], [347, "running"], [324, "running"], [333, "running"], [320, "running"], [335, "running"], [342, "running"], [343, "running"], [326, "running"], [319, "running"]], "Arguments": [[348, "arguments"], [2, "arguments"], [1, "arguments"], [314, "arguments"], [347, "arguments"], [324, "arguments"], [333, "arguments"], [320, "arguments"], [335, "arguments"], [342, "arguments"], [343, "arguments"], [326, "arguments"]], "Mandatory": [[348, "mandatory"], [1, "mandatory"], [314, "mandatory"], [324, "mandatory"], [333, "mandatory"], [320, "mandatory"], [335, "mandatory"], [343, "mandatory"], [326, "mandatory"]], "Optional": [[348, "optional"], [1, "optional"], [314, "optional"], [324, "optional"], [333, "optional"], [320, "optional"], [335, "optional"], [343, "optional"], [326, "optional"]], "Models": [[348, "models"], [335, "models"], [343, "models"], [319, "models"]], "Full model:": [[348, "full-model"]], "IB model:": [[348, "ib-model"]], "CR model:": [[348, "cr-model"]], "CR + IB model:": [[348, "cr-ib-model"]], "QSS model:": [[348, "qss-model"]], "Wagner model:": [[348, "wagner-model"]], "MMAPP model:": [[348, "mmapp-model"]], "DV types": [[348, "dv-types"]], "Structsearch workflow": [[348, "structsearch-workflow"], [335, "structsearch-workflow"], [319, "structsearch-workflow"]], "Results": [[348, "results"], [2, "results"], [290, "results"], [310, "results"], [314, "results"], [347, "results"], [335, "results"], [326, "results"], [319, "results"]], "Examples": [[348, "examples"], [2, "examples"], [329, "examples"], [335, "examples"], [346, "examples"]], "Tools": [[349, "tools"]], "Tools in Pharmpy": [[349, "tools-in-pharmpy"]], "Common options": [[349, "common-options"]], "run_estmethod": [[267, "run-estmethod"]], "ModelfitResults": [[287, "modelfitresults"]], "run_bootstrap": [[265, "run-bootstrap"]], "LocalModelDirectoryDatabase": [[283, "localmodeldirectorydatabase"]], "run_allometry": [[263, "run-allometry"]], "run_covsearch": [[266, "run-covsearch"]], "Log": [[284, "log"]], "run_retries": [[272, "run-retries"]], "ModelEntry": [[286, "modelentry"]], "LocalDirectoryDatabase": [[281, "localdirectorydatabase"]], "run_amd": [[264, "run-amd"]], "LocalDirectoryToolDatabase": [[282, "localdirectorytooldatabase"]], "run_structsearch": [[274, "run-structsearch"]], "run_ruvsearch": [[273, "run-ruvsearch"]], "NullModelDatabase": [[288, "nullmodeldatabase"]], "summarize_errors": [[276, "summarize-errors"]], "write_results": [[280, "write-results"]], "ModelDatabase": [[285, "modeldatabase"]], "NullToolDatabase": [[289, "nulltooldatabase"]], "retrieve_final_model": [[261, "retrieve-final-model"]], "summarize_modelfit_results": [[279, "summarize-modelfit-results"]], "retrieve_models": [[262, "retrieve-models"]], "run_iivsearch": [[268, "run-iivsearch"]], "summarize_individuals_count_table": [[278, "summarize-individuals-count-table"]], "summarize_individuals": [[277, "summarize-individuals"]], "run_tool": [[275, "run-tool"]], "run_iovsearch": [[269, "run-iovsearch"]], "run_modelsearch": [[271, "run-modelsearch"]], "run_modelfit": [[270, "run-modelfit"]], "write_csv": [[245, "write-csv"]], "unfix_parameters": [[239, "unfix-parameters"]], "read_results": [[259, "read-results"]], "load_example_modelfit_results": [[252, "load-example-modelfit-results"]], "predict_outliers": [[255, "predict-outliers"]], "update_initial_individual_estimates": [[242, "update-initial-individual-estimates"]], "get_model_features": [[250, "get-model-features"]], "print_fit_summary": [[256, "print-fit-summary"]], "transform_etas_boxcox": [[233, "transform-etas-boxcox"]], "read_modelfit_results": [[258, "read-modelfit-results"]], "write_model": [[246, "write-model"]], "transform_etas_tdist": [[235, "transform-etas-tdist"]], "predict_influential_individuals": [[253, "predict-influential-individuals"]], "is_strictness_fulfilled": [[251, "is-strictness-fulfilled"]], "undrop_columns": [[238, "undrop-columns"]], "unload_dataset": [[241, "unload-dataset"]], "create_results": [[248, "create-results"]], "unfix_parameters_to": [[240, "unfix-parameters-to"]], "fit": [[249, "fit"]], "use_thetas_for_error_stdev": [[244, "use-thetas-for-error-stdev"]], "rank_models": [[257, "rank-models"]], "transform_blq": [[232, "transform-blq"]], "transform_etas_john_draper": [[234, "transform-etas-john-draper"]], "unconstrain_parameters": [[237, "unconstrain-parameters"]], "translate_nmtran_time": [[236, "translate-nmtran-time"]], "predict_influential_outliers": [[254, "predict-influential-outliers"]], "create_report": [[247, "create-report"]], "update_inits": [[243, "update-inits"]], "resume_tool": [[260, "resume-tool"]], "set_zero_order_absorption": [[226, "set-zero-order-absorption"]], "set_lloq_data": [[209, "set-lloq-data"]], "set_iiv_on_ruv": [[205, "set-iiv-on-ruv"]], "split_joint_distribution": [[231, "split-joint-distribution"]], "set_first_order_elimination": [[204, "set-first-order-elimination"]], "set_power_on_ruv": [[216, "set-power-on-ruv"]], "set_transit_compartments": [[223, "set-transit-compartments"]], "set_peripheral_compartments": [[215, "set-peripheral-compartments"]], "set_initial_estimates": [[207, "set-initial-estimates"]], "set_ode_solver": [[214, "set-ode-solver"]], "set_michaelis_menten_elimination": [[211, "set-michaelis-menten-elimination"]], "set_time_varying_error_model": [[221, "set-time-varying-error-model"]], "set_zero_order_elimination": [[227, "set-zero-order-elimination"]], "set_first_order_absorption": [[203, "set-first-order-absorption"]], "simplify_expression": [[229, "simplify-expression"]], "set_lower_bounds": [[210, "set-lower-bounds"]], "set_initial_condition": [[206, "set-initial-condition"]], "set_tmdd": [[222, "set-tmdd"]], "solve_ode_system": [[230, "solve-ode-system"]], "set_mixed_mm_fo_elimination": [[212, "set-mixed-mm-fo-elimination"]], "set_simulation": [[220, "set-simulation"]], "set_name": [[213, "set-name"]], "set_reference_values": [[218, "set-reference-values"]], "set_weighted_error_model": [[225, "set-weighted-error-model"]], "set_upper_bounds": [[224, "set-upper-bounds"]], "set_zero_order_input": [[228, "set-zero-order-input"]], "set_instantaneous_absorption": [[208, "set-instantaneous-absorption"]], "set_proportional_error_model": [[217, "set-proportional-error-model"]], "set_seq_zo_fo_absorption": [[219, "set-seq-zo-fo-absorption"]], "remove_lag_time": [[182, "remove-lag-time"]], "remove_iiv": [[180, "remove-iiv"]], "resample_data": [[189, "resample-data"]], "rename_symbols": [[187, "rename-symbols"]], "set_evaluation_step": [[202, "set-evaluation-step"]], "sample_individual_estimates": [[190, "sample-individual-estimates"]], "remove_iov": [[181, "remove-iov"]], "remove_estimation_step": [[179, "remove-estimation-step"]], "remove_covariate_effect": [[177, "remove-covariate-effect"]], "remove_loq_data": [[183, "remove-loq-data"]], "set_direct_effect": [[198, "set-direct-effect"]], "set_dvid": [[200, "set-dvid"]], "set_dataset": [[197, "set-dataset"]], "sample_parameters_from_covariance_matrix": [[191, "sample-parameters-from-covariance-matrix"]], "set_additive_error_model": [[193, "set-additive-error-model"]], "sample_parameters_uniformly": [[192, "sample-parameters-uniformly"]], "remove_parameter_uncertainty_step": [[184, "remove-parameter-uncertainty-step"]], "replace_non_random_rvs": [[188, "replace-non-random-rvs"]], "set_combined_error_model": [[195, "set-combined-error-model"]], "remove_unused_parameters_and_rvs": [[186, "remove-unused-parameters-and-rvs"]], "read_model_from_string": [[175, "read-model-from-string"]], "remove_error_model": [[178, "remove-error-model"]], "set_covariates": [[196, "set-covariates"]], "remove_peripheral_compartment": [[185, "remove-peripheral-compartment"]], "set_estimation_step": [[201, "set-estimation-step"]], "set_baseline_effect": [[194, "set-baseline-effect"]], "set_dtbs_error_model": [[199, "set-dtbs-error-model"]], "remove_bioavailability": [[176, "remove-bioavailability"]], "read_model": [[174, "read-model"]], "Parameters": [[24, "parameters"], [330, "parameters"]], "Model": [[18, "model"]], "Assignment": [[4, "assignment"]], "Parameter": [[23, "parameter"]], "Statement": [[27, "statement"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"], [335, "search-space"]], "Strategy for running AMD": [[2, "strategy-for-running-amd"]], "default (default)": [[2, "default-default"]], "reevaluation": [[2, "reevaluation"]], "SIR": [[2, "sir"]], "SRI": [[2, "sri"]], "RSI": [[2, "rsi"]], "Subtools used in AMD": [[2, "subtools-used-in-amd"]], "Structural": [[2, "structural"]], "Modelsearch": [[2, "modelsearch"], [333, "modelsearch"]], "Structsearch": [[2, "structsearch"], [347, "structsearch"]], "IIVsearch": [[2, "iivsearch"], [324, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [326, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Retries": [[2, "retries"], [342, "retries"]], "Final model": [[2, "final-model"]], "Distribution": [[13, "distribution"], [332, "distribution"]], "EstimationStep": [[14, "estimationstep"]], "ModelError": [[19, "modelerror"]], "DatasetError": [[11, "dataseterror"]], "EstimationSteps": [[15, "estimationsteps"]], "Statements": [[28, "statements"], [330, "statements"]], "DatasetWarning": [[12, "datasetwarning"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "SimulationStep": [[26, "simulationstep"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"], [316, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "PHI/PHC": [[0, "phi-phc"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Infusion": [[16, "infusion"]], "NormalDistribution": [[22, "normaldistribution"]], "DataInfo": [[10, "datainfo"], [316, "datainfo"]], "ColumnInfo": [[6, "columninfo"], [316, "columninfo"]], "API Reference": [[3, "api-reference"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "RandomVariables": [[25, "randomvariables"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [343, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Compartment": [[7, "compartment"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "Bolus": [[5, "bolus"]], "has_combined_error_model": [[139, "has-combined-error-model"]], "get_mdv": [[117, "get-mdv"]], "get_number_of_individuals": [[120, "get-number-of-individuals"]], "has_first_order_elimination": [[142, "has-first-order-elimination"]], "get_zero_order_inputs": [[136, "get-zero-order-inputs"]], "get_number_of_peripheral_compartments": [[123, "get-number-of-peripheral-compartments"]], "get_model_code": [[118, "get-model-code"]], "greekify_model": [[137, "greekify-model"]], "get_number_of_observations_per_individual": [[122, "get-number-of-observations-per-individual"]], "get_observations": [[126, "get-observations"]], "get_sigmas": [[133, "get-sigmas"]], "get_omegas": [[127, "get-omegas"]], "get_model_covariates": [[119, "get-model-covariates"]], "get_number_of_observations": [[121, "get-number-of-observations"]], "has_first_order_absorption": [[141, "has-first-order-absorption"]], "get_unit_of": [[135, "get-unit-of"]], "has_additive_error_model": [[138, "has-additive-error-model"]], "get_population_prediction_expression": [[131, "get-population-prediction-expression"]], "has_covariate_effect": [[140, "has-covariate-effect"]], "get_observation_expression": [[125, "get-observation-expression"]], "get_rv_parameters": [[132, "get-rv-parameters"]], "get_lag_times": [[116, "get-lag-times"]], "get_pd_parameters": [[129, "get-pd-parameters"]], "has_instantaneous_absorption": [[143, "has-instantaneous-absorption"]], "get_thetas": [[134, "get-thetas"]], "get_number_of_transit_compartments": [[124, "get-number-of-transit-compartments"]], "has_linear_odes": [[144, "has-linear-odes"]], "get_parameter_rv": [[128, "get-parameter-rv"]], "get_pk_parameters": [[130, "get-pk-parameters"]], "Changelog": [[306, "changelog"]], "0.107.0 (2024-03-04)": [[306, "id1"]], "New features": [[306, "new-features"], [306, "id3"], [306, "id7"], [306, "id10"], [306, "id16"], [306, "id20"], [306, "id22"], [306, "id25"], [306, "id29"], [306, "id32"], [306, "id36"], [306, "id42"], [306, "id46"], [306, "id50"], [306, "id53"], [306, "id57"], [306, "id60"], [306, "id63"], [306, "id76"], [306, "id86"], [306, "id93"], [306, "id104"], [306, "id108"], [306, "id115"], [306, "id118"], [306, "id122"], [306, "id128"], [306, "id132"], [306, "id138"], [306, "id143"], [306, "id147"], [306, "id150"], [306, "id158"], [306, "id162"], [306, "id168"], [306, "id177"], [306, "id181"], [306, "id184"], [306, "id188"], [306, "id190"], [306, "id195"], [306, "id198"], [306, "id202"]], "Changes": [[306, "changes"], [306, "id4"], [306, "id8"], [306, "id13"], [306, "id17"], [306, "id23"], [306, "id26"], [306, "id30"], [306, "id33"], [306, "id35"], [306, "id39"], [306, "id43"], [306, "id47"], [306, "id54"], [306, "id58"], [306, "id61"], [306, "id64"], [306, "id66"], [306, "id68"], [306, "id71"], [306, "id74"], [306, "id77"], [306, "id79"], [306, "id82"], [306, "id87"], [306, "id90"], [306, "id94"], [306, "id97"], [306, "id100"], [306, "id105"], [306, "id109"], [306, "id112"], [306, "id116"], [306, "id119"], [306, "id123"], [306, "id129"], [306, "id133"], [306, "id144"], [306, "id148"], [306, "id153"], [306, "id159"], [306, "id169"], [306, "id174"], [306, "id178"], [306, "id185"], [306, "id191"], [306, "id196"], [306, "id199"], [306, "id203"]], "Bugfixes": [[306, "bugfixes"], [306, "id5"], [306, "id11"], [306, "id14"], [306, "id18"], [306, "id27"], [306, "id37"], [306, "id40"], [306, "id44"], [306, "id48"], [306, "id51"], [306, "id55"], [306, "id69"], [306, "id72"], [306, "id98"], [306, "id102"], [306, "id106"], [306, "id110"], [306, "id113"], [306, "id120"], [306, "id124"], [306, "id126"], [306, "id130"], [306, "id134"], [306, "id136"], [306, "id139"], [306, "id141"], [306, "id145"], [306, "id151"], [306, "id154"], [306, "id156"], [306, "id160"], [306, "id164"], [306, "id166"], [306, "id170"], [306, "id172"], [306, "id175"], [306, "id179"], [306, "id182"], [306, "id186"], [306, "id193"], [306, "id200"], [306, "id204"]], "0.106.0 (2024-01-11)": [[306, "id2"]], "0.105.0 (2023-12-07)": [[306, "id6"]], "0.104.0 (2023-11-06)": [[306, "id9"]], "0.103.0 (2023-10-12)": [[306, "id12"]], "0.102.0 (2023-09-28)": [[306, "id15"]], "0.101.0 (2023-09-01)": [[306, "id19"]], "0.100.0 (2023-08-25)": [[306, "id21"]], "0.99.0 (2023-08-23)": [[306, "id24"]], "0.98.0 (2023-07-21)": [[306, "id28"]], "0.97.0 (2023-06-28)": [[306, "id31"]], "0.96.0 (2023-05-26)": [[306, "id34"]], "0.95.0 (2023-05-22)": [[306, "id38"]], "0.94.0 (2023-04-26)": [[306, "id41"]], "0.93.0 (2023-04-19)": [[306, "id45"]], "0.92.0 (2023-04-05)": [[306, "id49"]], "0.91.0 (2023-03-03)": [[306, "id52"]], "0.90.0 (2023-02-24)": [[306, "id56"]], "0.89.0 (2023-01-26)": [[306, "id59"]], "0.88.0 (2022-12-21)": [[306, "id62"]], "0.87.0 (2022-12-14)": [[306, "id65"]], "0.86.0 (2022-11-30)": [[306, "id67"]], "0.85.0 (2022-11-18)": [[306, "id70"]], "0.84.1 (2022-11-13)": [[306, "id73"]], "Bug fixes": [[306, "bug-fixes"], [306, "id80"], [306, "id84"], [306, "id88"], [306, "id91"], [306, "id95"]], "0.84.0 (2022-11-09)": [[306, "id75"]], "0.83.0 (2022-11-01)": [[306, "id78"]], "0.82.0 (2022-10-24)": [[306, "id81"]], "0.81.1 (2022-10-24)": [[306, "id83"]], "0.81.0 (2022-10-21)": [[306, "id85"]], "0.80.0 (2022-10-19)": [[306, "id89"]], "0.79.0 (2022-10-16)": [[306, "id92"]], "0.78.0 (2022-09-20)": [[306, "id96"]], "0.77.0 (2022-09-08)": [[306, "id99"]], "0.76.1 (2022-09-06)": [[306, "id101"]], "0.76.0 (2022-09-05)": [[306, "id103"]], "0.75.0 (2022-08-10)": [[306, "id107"]], "0.74.0 (2022-07-18)": [[306, "id111"]], "0.73.0 (2022-06-21)": [[306, "id114"]], "0.72.0 (2022-06-08)": [[306, "id117"]], "0.71.0 (2022-05-24)": [[306, "id121"]], "0.70.1 (2022-05-17)": [[306, "id125"]], "0.70.0 (2022-05-13)": [[306, "id127"]], "0.69.0 (2022-04-29)": [[306, "id131"]], "0.68.0 (2022-04-27)": [[306, "id135"]], "0.67.0 (2022-04-25)": [[306, "id137"]], "0.66.0 (2022-04-20)": [[306, "id140"]], "0.65.0 (2022-04-14)": [[306, "id142"]], "0.64.0 (2022-04-12)": [[306, "id146"]], "0.63.0 (2022-04-07)": [[306, "id149"]], "0.62.0 (2022-04-04)": [[306, "id152"]], "New feature": [[306, "new-feature"]], "0.61.1 (2022-03-31)": [[306, "id155"]], "0.61.0 (2022-03-29)": [[306, "id157"]], "0.59.0 (2022-03-25)": [[306, "id161"]], "0.58.4 (2022-03-24)": [[306, "id163"]], "0.58.1 (2022-03-22)": [[306, "id165"]], "0.58.0 (2022-03-22)": [[306, "id167"]], "0.57.0 (2022-03-21)": [[306, "id171"]], "0.56.0 (2022-03-17)": [[306, "id173"]], "0.55.0 (2022-03-16)": [[306, "id176"]], "0.54.0 (2022-03-08)": [[306, "id180"]], "0.53.0 (2022-03-04)": [[306, "id183"]], "0.52.0 (2022-02-25)": [[306, "id187"]], "0.51.0 (2022-02-24)": [[306, "id189"]], "0.50.1 (2022-02-16)": [[306, "id192"]], "0.50.0 (2022-02-16)": [[306, "id194"]], "0.49.0 (2022-02-10)": [[306, "id197"]], "0.48.0 (2022-02-04)": [[306, "id201"]], "0.47.0 (2022-01-28)": [[306, "id205"]], "0.46.0 (2022-01-27)": [[306, "id206"]], "0.45.0 (2022-01-21)": [[306, "id207"]], "0.44.0 (2022-01-20)": [[306, "id208"]], "0.43.0 (2022-01-12)": [[306, "id209"]], "0.42.0 (2022-01-11)": [[306, "id210"]], "0.41.0 (2021-12-21)": [[306, "id211"]], "0.40.0 (2021-12-16)": [[306, "id212"]], "0.39.0 (2021-12-15)": [[306, "id213"]], "0.38.0 (2021-12-08)": [[306, "id214"]], "0.37.1 (2021-11-26)": [[306, "id215"]], "0.37.0 (2021-11-24)": [[306, "id216"]], "0.36.0 (2021-11-11)": [[306, "id217"]], "0.35.0 (2021-11-02)": [[306, "id218"]], "0.34.3 (2021-10-28)": [[306, "id219"]], "0.34.2 (2021-10-26)": [[306, "id220"]], "0.34.1 (2021-10-20)": [[306, "id221"]], "0.34.0 (2021-10-14)": [[306, "id222"]], "0.33.0 (2021-10-11)": [[306, "id223"]], "0.32.0 (2021-09-28)": [[306, "id224"]], "0.31.0 (2021-09-21)": [[306, "id225"]], "0.30.0 (2021-09-06)": [[306, "id226"]], "0.29.0 (2021-08-25)": [[306, "id227"]], "0.28.0 (2021-08-24)": [[306, "id228"]], "0.27.0 (2021-08-09)": [[306, "id229"]], "0.26.1 (2021-08-04)": [[306, "id230"]], "0.26.0 (2021-07-13)": [[306, "id231"]], "0.25.1 (2021-07-08)": [[306, "id232"]], "0.25.0 (2021-06-24)": [[306, "id233"]], "0.24.0 (2021-05-25)": [[306, "id234"]], "0.23.4 (2021-05-03)": [[306, "id235"]], "0.23.3 (2021-04-29)": [[306, "id236"]], "0.23.2 (2021-04-28)": [[306, "id237"]], "0.23.1 (2021-04-28)": [[306, "id238"]], "0.23.0 (2021-04-28)": [[306, "id239"]], "0.22.0 (2021-03-29)": [[306, "id240"]], "0.21.0 (2021-03-22)": [[306, "id241"]], "0.20.1 (2021-03-11)": [[306, "id242"]], "0.20.0 (2021-03-11)": [[306, "id243"]], "0.19.0 (2021-03-02)": [[306, "id244"]], "0.18.0 (2021-03-01)": [[306, "id245"]], "0.17.0 (2021-02-15)": [[306, "id246"]], "0.16.0 (2021-02-08)": [[306, "id247"]], "0.15.0 (2021-02-01)": [[306, "id248"]], "0.14.0 (2021-01-25)": [[306, "id249"]], "0.13.0 (2021-01-18)": [[306, "id250"]], "0.12.0 (2020-12-18)": [[306, "id251"]], "0.11.0 (2020-11-20)": [[306, "id252"]], "0.10.0 (2020-11-16)": [[306, "id253"]], "0.9.0 (2020-10-26)": [[306, "id254"]], "0.8.0 (2020-10-08)": [[306, "id255"]], "0.7.0 (2020-09-28)": [[306, "id256"]], "0.6.0 (2020-09-18)": [[306, "id257"]], "0.5.0 (2020-09-04)": [[306, "id258"]], "0.4.0 (2020-07-24)": [[306, "id259"]], "0.3.0 (2020-06-16)": [[306, "id260"]], "0.2.0 (2020-03-27)": [[306, "id261"]], "0.1.0 (2018-07-22)": [[306, "id262"]], "pharmpy.tools Package": [[302, "module-pharmpy.tools"]], "Functions": [[302, "functions"], [303, "functions"], [300, "functions"], [301, "functions"]], "default_model_database": [[296, "default-model-database"]], "Citation": [[307, "citation"]], "How to cite Pharmpy and pharmr": [[307, "how-to-cite-pharmpy-and-pharmr"]], "Case deletion diagnostics": [[305, "case-deletion-diagnostics"]], "The cdd results": [[305, "the-cdd-results"]], "Case results": [[305, "case-results"]], "Cook score": [[305, "cook-score"]], "Jackknife cookscore": [[305, "jackknife-cookscore"]], "Covariance ratio": [[305, "covariance-ratio"]], "Delta OFV": [[305, "delta-ofv"]], "Skipped individuals": [[305, "skipped-individuals"]], "Case column": [[305, "case-column"]], "References": [[305, "references"], [321, "references"]], "Workflow": [[293, "workflow"]], "Documentation for developers": [[318, "documentation-for-developers"]], "Configuration": [[311, "configuration"]], "The configuration file": [[311, "the-configuration-file"]], "Available configurations": [[311, "available-configurations"]], "pharmpy.plugins.nonmem": [[311, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[311, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[311, "pharmpy-plugins-rxode"]], "Environment variables": [[311, "environment-variables"]], "default_tool_database": [[297, "default-tool-database"]], "pharmpy.workflows Package": [[303, "module-pharmpy.workflows"]], "Options for the data module": [[303, "id1"]], "Classes": [[303, "classes"], [300, "classes"]], "execute_workflow": [[298, "execute-workflow"]], "call_workflow": [[295, "call-workflow"]], "Bootstrap": [[304, "bootstrap"]], "The Bootstrap postprocessing and results": [[304, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[304, "parameter-statistics"]], "OFV statistics": [[304, "ofv-statistics"]], "Covariance matrix": [[304, "covariance-matrix"], [331, "covariance-matrix"]], "Included individuals": [[304, "included-individuals"]], "pharmpy.model Package": [[300, "module-pharmpy.model"]], "Command line interface": [[308, "command-line-interface"]], "pharmpy": [[308, "pharmpy"]], "pharmpy data": [[308, "pharmpy-data"]], "pharmpy data append": [[308, "pharmpy-data-append"]], "pharmpy data deidentify": [[308, "pharmpy-data-deidentify"]], "pharmpy data filter": [[308, "pharmpy-data-filter"]], "pharmpy data print": [[308, "pharmpy-data-print"]], "pharmpy data reference": [[308, "pharmpy-data-reference"]], "pharmpy data resample": [[308, "pharmpy-data-resample"]], "pharmpy data write": [[308, "pharmpy-data-write"]], "pharmpy info": [[308, "pharmpy-info"]], "pharmpy model": [[308, "pharmpy-model"]], "pharmpy model print": [[308, "pharmpy-model-print"]], "pharmpy model sample": [[308, "pharmpy-model-sample"]], "pharmpy model update_inits": [[308, "pharmpy-model-update-inits"]], "pharmpy results": [[308, "pharmpy-results"]], "pharmpy results bootstrap": [[308, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[308, "pharmpy-results-cdd"]], "pharmpy results frem": [[308, "pharmpy-results-frem"]], "pharmpy results linearize": [[308, "pharmpy-results-linearize"]], "pharmpy results ofv": [[308, "pharmpy-results-ofv"]], "pharmpy results print": [[308, "pharmpy-results-print"]], "pharmpy results qa": [[308, "pharmpy-results-qa"]], "pharmpy results report": [[308, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[308, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[308, "pharmpy-results-scm"]], "pharmpy results simeval": [[308, "pharmpy-results-simeval"]], "pharmpy results summary": [[308, "pharmpy-results-summary"]], "pharmpy run": [[308, "pharmpy-run"]], "pharmpy run allometry": [[308, "pharmpy-run-allometry"]], "pharmpy run amd": [[308, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[308, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[308, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[308, "pharmpy-run-estmethod"]], "pharmpy run execute": [[308, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[308, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[308, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[308, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[308, "pharmpy-run-ruvsearch"]], "pharmpy.modeling Package": [[301, "module-pharmpy.modeling"]], "WorkflowBuilder": [[294, "workflowbuilder"]], "Pharmpy Community Code of Conduct": [[309, "pharmpy-community-code-of-conduct"]], "Contribute": [[312, "contribute"]], "Set up the development environment": [[312, "set-up-the-development-environment"]], "Supported platforms": [[312, "supported-platforms"]], "Install Python": [[312, "install-python"]], "Install git": [[312, "install-git"]], "Fork and clone the code repository": [[312, "fork-and-clone-the-code-repository"]], "Install tox": [[312, "install-tox"]], "Install graphviz used for building the documentation": [[312, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[312, "using-the-development-environment"]], "Running tox": [[312, "running-tox"]], "Check code formatting": [[312, "check-code-formatting"]], "Run the unit tests": [[312, "run-the-unit-tests"]], "Build and test the documentation": [[312, "build-and-test-the-documentation"]], "Run the integration tests": [[312, "run-the-integration-tests"]], "Build a usable virtual environment": [[312, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[312, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[312, "releasing-pharmpy-and-documentation"]], "Version": [[312, "version"]], "Information for developers": [[312, "information-for-developers"]], "Design principles": [[317, "design-principles"]], "Levels of the architecture": [[317, "levels-of-the-architecture"]], "The Heart, The Model Class": [[317, "the-heart-the-model-class"]], "pharmpy.Parameters": [[317, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[317, "pharmpy-randomvariables"]], "pharmpy.Statements": [[317, "pharmpy-statements"]], "The pharmpy.modeling module": [[317, "the-pharmpy-modeling-module"]], "Docstrings": [[317, "docstrings"]], "Dependencies": [[317, "dependencies"]], "Contributors": [[313, "authors"]], "Development": [[313, "development"]], "Current team": [[313, "current-team"]], "All developers past and present": [[313, "all-developers-past-and-present"]], "Scientific input": [[313, "scientific-input"]], "Funding": [[313, "funding"]], "ToolDatabase": [[292, "tooldatabase"]], "Common features": [[310, "common-features"]], "Tool database": [[310, "tool-database"]], "Running directory": [[310, "running-directory"]], "Metadata": [[310, "metadata"]], "Datasets": [[310, "datasets"]], "Retrieving the dataset from a model": [[316, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[316, "update-the-dataset-of-a-model"]], "type": [[316, "type"]], "scale": [[316, "scale"]], "continuous": [[316, "continuous"]], "categories": [[316, "categories"]], "unit": [[316, "unit"]], "drop": [[316, "drop"]], "datatype": [[316, "datatype"]], "descriptor": [[316, "descriptor"]], "datainfo file": [[316, "datainfo-file"]], "Crossval": [[315, "crossval"]], "The crossval results": [[315, "the-crossval-results"]], "Crossvalidation OFVs": [[315, "crossvalidation-ofvs"]], "Task": [[291, "task"]], "COVsearch": [[314, "covsearch"]], "Effects": [[314, "effects"]], "Wildcards": [[314, "wildcards"]], "Algorithm": [[314, "algorithm"], [326, "algorithm"]], "split_common_options": [[299, "split-common-options"]], "has_proportional_error_model": [[150, "has-proportional-error-model"]], "has_weighted_error_model": [[153, "has-weighted-error-model"]], "is_linearized": [[156, "is-linearized"]], "plot_iofv_vs_iofv": [[169, "plot-iofv-vs-iofv"]], "print_model_symbols": [[172, "print-model-symbols"]], "plot_dv_vs_pred": [[167, "plot-dv-vs-pred"]], "print_model_code": [[171, "print-model-code"]], "plot_abs_cwres_vs_ipred": [[164, "plot-abs-cwres-vs-ipred"]], "plot_individual_predictions": [[168, "plot-individual-predictions"]], "plot_dv_vs_ipred": [[166, "plot-dv-vs-ipred"]], "has_random_effect": [[151, "has-random-effect"]], "make_declarative": [[161, "make-declarative"]], "is_real": [[157, "is-real"]], "read_dataset_from_datainfo": [[173, "read-dataset-from-datainfo"]], "load_dataset": [[159, "load-dataset"]], "has_seq_zo_fo_absorption": [[152, "has-seq-zo-fo-absorption"]], "plot_cwres_vs_idv": [[165, "plot-cwres-vs-idv"]], "has_presystemic_metabolite": [[149, "has-presystemic-metabolite"]], "has_linear_odes_with_real_eigenvalues": [[145, "has-linear-odes-with-real-eigenvalues"]], "has_michaelis_menten_elimination": [[146, "has-michaelis-menten-elimination"]], "has_mixed_mm_fo_elimination": [[147, "has-mixed-mm-fo-elimination"]], "list_time_varying_covariates": [[158, "list-time-varying-covariates"]], "load_example_model": [[160, "load-example-model"]], "mu_reference_model": [[162, "mu-reference-model"]], "has_odes": [[148, "has-odes"]], "plot_transformed_eta_distributions": [[170, "plot-transformed-eta-distributions"]], "has_zero_order_absorption": [[154, "has-zero-order-absorption"]], "omit_data": [[163, "omit-data"]], "has_zero_order_elimination": [[155, "has-zero-order-elimination"]], "Model estimation and results": [[331, "model-estimation-and-results"]], "Fitting a model": [[331, "fitting-a-model"]], "Modelfit results": [[331, "modelfit-results"]], "Final OFV": [[331, "final-ofv"]], "Parameter estimates": [[331, "parameter-estimates"], [321, "parameter-estimates"]], "Standard errors of parameter estimates": [[331, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[331, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[331, "correlation-matrix"]], "Precision Matrix": [[331, "precision-matrix"]], "Indiviudal OFV": [[331, "indiviudal-ofv"]], "Predictions": [[331, "predictions"]], "Residuals": [[331, "residuals"]], "Individual estimates": [[331, "individual-estimates"]], "The model types": [[347, "the-model-types"]], "The search space": [[347, "the-search-space"], [333, "the-search-space"], [319, "the-search-space"]], "Algorithms": [[324, "algorithms"], [333, "algorithms"], [320, "algorithms"]], "Top down exhaustive search": [[324, "top-down-exhaustive-search"]], "Bottom up stepwise search": [[324, "bottom-up-stepwise-search"]], "Adding IIV to the start model": [[324, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[324, "comparing-and-ranking-candidates"], [333, "comparing-and-ranking-candidates"], [326, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[324, "the-iivsearch-results"]], "License": [[327, "license"]], "Logo": [[327, "logo"]], "Copyright": [[327, "copyright"]], "BSD 2-clause License": [[327, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[327, "gnu-lesser-general-public-license"]], "Common behaviours between algorithms": [[333, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[333, "feature-combination-exclusions"]], "Exhaustive search": [[333, "exhaustive-search"]], "Exhaustive stepwise search": [[333, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[333, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[333, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[333, "the-modelsearch-results"]], "QA": [[341, "qa"]], "The qa results": [[341, "the-qa-results"]], "Overview": [[341, "overview"]], "Structural bias": [[341, "structural-bias"]], "Fullblock": [[341, "fullblock"]], "Boxcox": [[341, "boxcox"]], "Tdist": [[341, "tdist"]], "Residual error": [[341, "residual-error"]], "Covariate effects": [[341, "covariate-effects"], [321, "covariate-effects"]], "Model feature language (MFL)": [[329, "model-feature-language-mfl"]], "Option types": [[329, "option-types"]], "Model features": [[329, "model-features"]], "Symbols": [[329, "symbols"]], "Describe intervals": [[329, "describe-intervals"]], "Redundant descriptions": [[329, "redundant-descriptions"]], "Estmethod": [[320, "estmethod"]], "Exhaustive": [[320, "exhaustive"]], "Exhaustive (with update)": [[320, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[320, "exhaustive-only-evaluation"]], "Estimation methods": [[320, "estimation-methods"]], "Solvers": [[320, "solvers"]], "Parameter uncertainty methods": [[320, "parameter-uncertainty-methods"]], "The Estmethod results": [[320, "the-estmethod-results"]], "Project suggestions": [[338, "project-suggestions"]], "Plugins": [[337, "plugins"]], "Overview of a plugin": [[337, "overview-of-a-plugin"]], "Welcome to Pharmpy": [[325, "welcome-to-pharmpy"]], "PKPD": [[335, "pkpd"]], "The Pharmpy model": [[330, "the-pharmpy-model"]], "Reading in a model": [[330, "reading-in-a-model"], [334, "reading-in-a-model"]], "Writing a model": [[330, "writing-a-model"], [334, "writing-a-model"]], "Inspecting the model attributes": [[330, "inspecting-the-model-attributes"]], "Name and description": [[330, "name-and-description"]], "Random variables": [[330, "random-variables"]], "Dataset and datainfo": [[330, "dataset-and-datainfo"]], "Estimation steps": [[330, "estimation-steps"], [332, "estimation-steps"]], "Dependent variables": [[330, "dependent-variables"]], "Low level manipulations of the model object": [[330, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[330, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[330, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Modeling": [[332, "modeling"]], "Basic functions": [[332, "basic-functions"]], "Reading and writing models": [[332, "reading-and-writing-models"]], "Loading example models": [[332, "loading-example-models"]], "Converting models": [[332, "converting-models"]], "Create basic models": [[332, "create-basic-models"]], "Modeling transformations": [[332, "modeling-transformations"]], "Structural model": [[332, "structural-model"]], "Absorption rate": [[332, "absorption-rate"]], "Absorption delay": [[332, "absorption-delay"]], "Elimination": [[332, "elimination"]], "Parameter variability model": [[332, "parameter-variability-model"]], "Adding and removing parameter variability": [[332, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[332, "adding-and-removing-covariance"]], "Eta transformations": [[332, "eta-transformations"]], "Covariates and allometry": [[332, "covariates-and-allometry"]], "Population parameters": [[332, "population-parameters"]], "Error model": [[332, "error-model"]], "BLQ transformations": [[332, "blq-transformations"]], "Examining and modifying dataset": [[332, "examining-and-modifying-dataset"]], "Subjects": [[332, "subjects"]], "Observations": [[332, "observations"]], "Dosing": [[332, "dosing"]], "Extract dosing information": [[332, "extract-dosing-information"]], "Dose grouping": [[332, "dose-grouping"]], "Time after dose": [[332, "time-after-dose"]], "Concentration parameters": [[332, "concentration-parameters"]], "Plots in Pharmpy": [[336, "plots-in-pharmpy"]], "Setting themes": [[336, "setting-themes"]], "Changing axis of plots": [[336, "changing-axis-of-plots"]], "Scales": [[342, "scales"]], "Normal": [[342, "normal"]], "UCP": [[342, "ucp"]], "The Retries results": [[342, "the-retries-results"]], "Getting started": [[323, "getting-started"]], "Installation": [[323, "installation"]], "A first example": [[323, "a-first-example"]], "ruvsearch": [[343, "ruvsearch"]], "The RUVsearch results": [[343, "the-ruvsearch-results"]], "Strictness": [[346, "strictness"]], "Resmod": [[339, "resmod"]], "The resmod results": [[339, "the-resmod-results"]], "Resmod models": [[339, "resmod-models"]], "FREM": [[321, "frem"]], "The FREM postprocessing and results": [[321, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[321, "parameter-covariate-coefficients"]], "Individual covariate effects": [[321, "individual-covariate-effects"]], "Unexplained variability": [[321, "unexplained-variability"]], "OFV": [[321, "ofv"]], "Estimated covariate values": [[321, "estimated-covariate-values"]], "PsN with Pharmpy": [[340, "psn-with-pharmpy"]], "Tools connected to PsN": [[340, "tools-connected-to-psn"]], "Distribution of new IOVs": [[326, "distribution-of-new-iovs"]], "Drug metabolite": [[319, "drug-metabolite"]], "scm": [[344, "scm"]], "The scm results": [[344, "the-scm-results"]], "Steps": [[344, "steps"]], "OFV Summary": [[344, "ofv-summary"]], "Candidate Summary": [[344, "candidate-summary"]], "General": [[322, "general"]], "Simeval": [[345, "simeval"]], "The simeval results": [[345, "the-simeval-results"]], "Sampled Individual OFVs": [[345, "sampled-individual-ofvs"]], "Individual OFV summary": [[345, "individual-ofv-summary"]], "Individual prediction plot": [[345, "individual-prediction-plot"]], "Linearize": [[328, "linearize"]], "The linearize results": [[328, "the-linearize-results"]], "OFVs": [[328, "ofvs"]], "Individual OFVs": [[328, "individual-ofvs"]], "Using the NONMEM plugin": [[334, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[334, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[334, "new-parameters-and-random-variables"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_compartment_or_raise() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment_or_raise"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[23, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[24, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[25, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.subs"]], "symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.symbols"]], "to_dict() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.variance_parameters"]], "simulationstep (class in pharmpy.model)": [[26, "pharmpy.model.SimulationStep"]], "create() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.create"]], "from_dict() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.from_dict"]], "n (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.n"]], "replace() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.replace"]], "seed (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.seed"]], "to_dict() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.to_dict"]], "statement (class in pharmpy.model)": [[27, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[27, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[28, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[28, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[29, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[31, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[32, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_bioavailability"]], "add_cmt() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_cmt"]], "add_covariate_effect() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.append_estimation_step_options"]], "bin_observations() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.bin_observations"]], "bump_model_number() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_bioavailability"]], "get_central_volume_and_clearance() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_central_volume_and_clearance"]], "get_cmt() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_covariate_baselines"]], "get_covariate_effects() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_covariate_effects"]], "get_doseid() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.omit_data"]], "plot_abs_cwres_vs_ipred() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.plot_abs_cwres_vs_ipred"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_dv_vs_pred() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.plot_dv_vs_pred"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.rename_symbols"]], "replace_non_random_rvs() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.replace_non_random_rvs"]], "resample_data() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_additive_error_model"]], "set_baseline_effect() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_baseline_effect"]], "set_combined_error_model() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_covariates"]], "set_dataset() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_dataset"]], "set_direct_effect() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_simulation() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.set_simulation"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[237, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[238, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[239, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[240, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[241, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[242, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[243, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[244, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[245, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[246, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[247, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[248, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[249, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[250, "pharmpy.tools.get_model_features"]], "is_strictness_fulfilled() (in module pharmpy.tools)": [[251, "pharmpy.tools.is_strictness_fulfilled"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[252, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[253, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[254, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[255, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[256, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[257, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[258, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[259, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[260, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[261, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[262, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[263, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[264, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[265, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[266, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[267, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[268, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[269, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[270, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[271, "pharmpy.tools.run_modelsearch"]], "run_retries() (in module pharmpy.tools)": [[272, "pharmpy.tools.run_retries"]], "run_ruvsearch() (in module pharmpy.tools)": [[273, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[274, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[275, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[276, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[277, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[278, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[279, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[280, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[281, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[281, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[282, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[283, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[283, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[283, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[283, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[284, "pharmpy.workflows.Log"]], "errors (pharmpy.workflows.log attribute)": [[284, "pharmpy.workflows.Log.errors"]], "from_dict() (pharmpy.workflows.log class method)": [[284, "pharmpy.workflows.Log.from_dict"]], "log_error() (pharmpy.workflows.log method)": [[284, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[284, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[284, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[284, "pharmpy.workflows.Log.to_dict"]], "warnings (pharmpy.workflows.log attribute)": [[284, "pharmpy.workflows.Log.warnings"]], "modeldatabase (class in pharmpy.workflows)": [[285, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[285, "pharmpy.workflows.ModelDatabase.transaction"]], "modelentry (class in pharmpy.workflows)": [[286, "pharmpy.workflows.ModelEntry"]], "attach_results() (pharmpy.workflows.modelentry method)": [[286, "pharmpy.workflows.ModelEntry.attach_results"]], "create() (pharmpy.workflows.modelentry class method)": [[286, "pharmpy.workflows.ModelEntry.create"]], "log (pharmpy.workflows.modelentry attribute)": [[286, "pharmpy.workflows.ModelEntry.log"]], "model (pharmpy.workflows.modelentry attribute)": [[286, "pharmpy.workflows.ModelEntry.model"]], "modelfit_results (pharmpy.workflows.modelentry attribute)": [[286, "pharmpy.workflows.ModelEntry.modelfit_results"]], "parent (pharmpy.workflows.modelentry attribute)": [[286, "pharmpy.workflows.ModelEntry.parent"]], "modelfitresults (class in pharmpy.workflows)": [[287, "pharmpy.workflows.ModelfitResults"]], "correlation_matrix (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.correlation_matrix"]], "covariance_matrix (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.covariance_matrix"]], "covstep_successful (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.covstep_successful"]], "description (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.description"]], "estimation_runtime (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.estimation_runtime"]], "estimation_runtime_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.estimation_runtime_iterations"]], "evaluation (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.evaluation"]], "function_evaluations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.function_evaluations"]], "function_evaluations_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.function_evaluations_iterations"]], "gradients (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.gradients"]], "gradients_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.gradients_iterations"]], "individual_estimates (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.individual_estimates"]], "individual_estimates_covariance (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.individual_estimates_covariance"]], "individual_ofv (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.individual_ofv"]], "log (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.log"]], "log_likelihood (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.log_likelihood"]], "minimization_successful (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.minimization_successful"]], "minimization_successful_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.minimization_successful_iterations"]], "name (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.name"]], "ofv (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.ofv"]], "ofv_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.ofv_iterations"]], "parameter_estimates (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.parameter_estimates"]], "parameter_estimates_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.parameter_estimates_iterations"]], "parameter_estimates_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.parameter_estimates_sdcorr"]], "precision_matrix (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.precision_matrix"]], "predictions (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.predictions"]], "relative_standard_errors (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.relative_standard_errors"]], "residuals (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.residuals"]], "runtime_total (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.runtime_total"]], "significant_digits (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.significant_digits"]], "significant_digits_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.significant_digits_iterations"]], "standard_errors (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.standard_errors"]], "standard_errors_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.standard_errors_sdcorr"]], "termination_cause (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.termination_cause"]], "termination_cause_iterations (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.termination_cause_iterations"]], "warnings (pharmpy.workflows.modelfitresults attribute)": [[287, "pharmpy.workflows.ModelfitResults.warnings"]], "nullmodeldatabase (class in pharmpy.workflows)": [[288, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[288, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[289, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[289, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[289, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[289, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[289, "pharmpy.workflows.NullToolDatabase.store_results"]], "results (class in pharmpy.workflows)": [[290, "pharmpy.workflows.Results"]], "from_dict() (pharmpy.workflows.results class method)": [[290, "pharmpy.workflows.Results.from_dict"]], "get_and_reset_index() (pharmpy.workflows.results method)": [[290, "pharmpy.workflows.Results.get_and_reset_index"]], "to_csv() (pharmpy.workflows.results method)": [[290, "pharmpy.workflows.Results.to_csv"]], "to_dict() (pharmpy.workflows.results method)": [[290, "pharmpy.workflows.Results.to_dict"]], "to_json() (pharmpy.workflows.results method)": [[290, "pharmpy.workflows.Results.to_json"]], "task (class in pharmpy.workflows)": [[291, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[291, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[291, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[291, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[291, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[291, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[292, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[292, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[292, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[292, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[292, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[292, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[292, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[293, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[293, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[293, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[293, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[293, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[293, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[294, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[294, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[294, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[294, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[295, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[296, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[297, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[298, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[299, "pharmpy.workflows.split_common_options"]], "module": [[300, "module-pharmpy.model"], [301, "module-pharmpy.modeling"], [302, "module-pharmpy.tools"], [303, "module-pharmpy.workflows"]], "pharmpy.model": [[300, "module-pharmpy.model"]], "pharmpy.modeling": [[301, "module-pharmpy.modeling"]], "pharmpy.tools": [[302, "module-pharmpy.tools"]], "pharmpy.workflows": [[303, "module-pharmpy.workflows"]], "--administration": [[308, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[308, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[308, "cmdoption-pharmpy-run-allometry-allometric_variable"], [308, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[308, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[308, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[308, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[308, "cmdoption-pharmpy-run-iivsearch-cutoff"], [308, "cmdoption-pharmpy-run-iovsearch-cutoff"], [308, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[308, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[308, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[308, "cmdoption-pharmpy-run-covsearch-effects"]], "--explicit-odes": [[308, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[308, "cmdoption-pharmpy-data-append-f"], [308, "cmdoption-pharmpy-data-deidentify-f"], [308, "cmdoption-pharmpy-data-filter-f"], [308, "cmdoption-pharmpy-data-reference-f"], [308, "cmdoption-pharmpy-data-write-f"], [308, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[308, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[308, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[308, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[308, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[308, "cmdoption-pharmpy-data-append-h"], [308, "cmdoption-pharmpy-data-deidentify-h"], [308, "cmdoption-pharmpy-data-filter-h"], [308, "cmdoption-pharmpy-data-h"], [308, "cmdoption-pharmpy-data-print-h"], [308, "cmdoption-pharmpy-data-reference-h"], [308, "cmdoption-pharmpy-data-resample-h"], [308, "cmdoption-pharmpy-data-write-h"], [308, "cmdoption-pharmpy-h"], [308, "cmdoption-pharmpy-info-h"], [308, "cmdoption-pharmpy-model-h"], [308, "cmdoption-pharmpy-model-print-h"], [308, "cmdoption-pharmpy-model-sample-h"], [308, "cmdoption-pharmpy-model-update_inits-h"], [308, "cmdoption-pharmpy-results-bootstrap-h"], [308, "cmdoption-pharmpy-results-cdd-h"], [308, "cmdoption-pharmpy-results-frem-h"], [308, "cmdoption-pharmpy-results-h"], [308, "cmdoption-pharmpy-results-linearize-h"], [308, "cmdoption-pharmpy-results-ofv-h"], [308, "cmdoption-pharmpy-results-print-h"], [308, "cmdoption-pharmpy-results-qa-h"], [308, "cmdoption-pharmpy-results-report-h"], [308, "cmdoption-pharmpy-results-ruvsearch-h"], [308, "cmdoption-pharmpy-results-scm-h"], [308, "cmdoption-pharmpy-results-simeval-h"], [308, "cmdoption-pharmpy-results-summary-h"], [308, "cmdoption-pharmpy-run-allometry-h"], [308, "cmdoption-pharmpy-run-amd-h"], [308, "cmdoption-pharmpy-run-bootstrap-h"], [308, "cmdoption-pharmpy-run-covsearch-h"], [308, "cmdoption-pharmpy-run-estmethod-h"], [308, "cmdoption-pharmpy-run-execute-h"], [308, "cmdoption-pharmpy-run-h"], [308, "cmdoption-pharmpy-run-iivsearch-h"], [308, "cmdoption-pharmpy-run-iovsearch-h"], [308, "cmdoption-pharmpy-run-modelsearch-h"], [308, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[308, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[308, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [308, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[308, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[308, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[308, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[308, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[308, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[308, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[308, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[308, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[308, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[308, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[308, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[308, "cmdoption-pharmpy-run-amd-occasion"]], "--order": [[308, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[308, "cmdoption-pharmpy-data-append-o"], [308, "cmdoption-pharmpy-data-deidentify-o"], [308, "cmdoption-pharmpy-data-filter-o"], [308, "cmdoption-pharmpy-data-reference-o"], [308, "cmdoption-pharmpy-data-write-o"], [308, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[308, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[308, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[308, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[308, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[308, "cmdoption-pharmpy-run-allometry-path"], [308, "cmdoption-pharmpy-run-amd-path"], [308, "cmdoption-pharmpy-run-covsearch-path"], [308, "cmdoption-pharmpy-run-estmethod-path"], [308, "cmdoption-pharmpy-run-iivsearch-path"], [308, "cmdoption-pharmpy-run-iovsearch-path"], [308, "cmdoption-pharmpy-run-modelsearch-path"], [308, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[308, "cmdoption-pharmpy-run-iivsearch-rank_type"], [308, "cmdoption-pharmpy-run-iovsearch-rank_type"], [308, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[308, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[308, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[308, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[308, "cmdoption-pharmpy-run-amd-resume"]], "--sample_size": [[308, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[308, "cmdoption-pharmpy-model-sample-samples"], [308, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[308, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[308, "cmdoption-pharmpy-data-resample-seed"], [308, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[308, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[308, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[308, "cmdoption-pharmpy-data-resample-stratify"]], "--upper_bounds": [[308, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[308, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[308, "cmdoption-pharmpy-version"]], "-f": [[308, "cmdoption-pharmpy-data-append-f"], [308, "cmdoption-pharmpy-data-deidentify-f"], [308, "cmdoption-pharmpy-data-filter-f"], [308, "cmdoption-pharmpy-data-reference-f"], [308, "cmdoption-pharmpy-data-write-f"], [308, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[308, "cmdoption-pharmpy-data-append-h"], [308, "cmdoption-pharmpy-data-deidentify-h"], [308, "cmdoption-pharmpy-data-filter-h"], [308, "cmdoption-pharmpy-data-h"], [308, "cmdoption-pharmpy-data-print-h"], [308, "cmdoption-pharmpy-data-reference-h"], [308, "cmdoption-pharmpy-data-resample-h"], [308, "cmdoption-pharmpy-data-write-h"], [308, "cmdoption-pharmpy-h"], [308, "cmdoption-pharmpy-info-h"], [308, "cmdoption-pharmpy-model-h"], [308, "cmdoption-pharmpy-model-print-h"], [308, "cmdoption-pharmpy-model-sample-h"], [308, "cmdoption-pharmpy-model-update_inits-h"], [308, "cmdoption-pharmpy-results-bootstrap-h"], [308, "cmdoption-pharmpy-results-cdd-h"], [308, "cmdoption-pharmpy-results-frem-h"], [308, "cmdoption-pharmpy-results-h"], [308, "cmdoption-pharmpy-results-linearize-h"], [308, "cmdoption-pharmpy-results-ofv-h"], [308, "cmdoption-pharmpy-results-print-h"], [308, "cmdoption-pharmpy-results-qa-h"], [308, "cmdoption-pharmpy-results-report-h"], [308, "cmdoption-pharmpy-results-ruvsearch-h"], [308, "cmdoption-pharmpy-results-scm-h"], [308, "cmdoption-pharmpy-results-simeval-h"], [308, "cmdoption-pharmpy-results-summary-h"], [308, "cmdoption-pharmpy-run-allometry-h"], [308, "cmdoption-pharmpy-run-amd-h"], [308, "cmdoption-pharmpy-run-bootstrap-h"], [308, "cmdoption-pharmpy-run-covsearch-h"], [308, "cmdoption-pharmpy-run-estmethod-h"], [308, "cmdoption-pharmpy-run-execute-h"], [308, "cmdoption-pharmpy-run-h"], [308, "cmdoption-pharmpy-run-iivsearch-h"], [308, "cmdoption-pharmpy-run-iovsearch-h"], [308, "cmdoption-pharmpy-run-modelsearch-h"], [308, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[308, "cmdoption-pharmpy-data-append-o"], [308, "cmdoption-pharmpy-data-deidentify-o"], [308, "cmdoption-pharmpy-data-filter-o"], [308, "cmdoption-pharmpy-data-reference-o"], [308, "cmdoption-pharmpy-data-write-o"], [308, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[308, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [308, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [308, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[308, "cmdoption-pharmpy-data-reference-arg-colname"]], "expression": [[308, "cmdoption-pharmpy-data-append-arg-expression"]], "expressions": [[308, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[308, "cmdoption-pharmpy-data-append-arg-file"], [308, "cmdoption-pharmpy-data-deidentify-arg-file"], [308, "cmdoption-pharmpy-data-filter-arg-file"], [308, "cmdoption-pharmpy-data-print-arg-file"], [308, "cmdoption-pharmpy-data-reference-arg-file"], [308, "cmdoption-pharmpy-data-resample-arg-file"], [308, "cmdoption-pharmpy-data-write-arg-file"], [308, "cmdoption-pharmpy-model-print-arg-file"], [308, "cmdoption-pharmpy-model-sample-arg-file"], [308, "cmdoption-pharmpy-model-update_inits-arg-file"], [308, "cmdoption-pharmpy-results-ofv-arg-file"], [308, "cmdoption-pharmpy-results-print-arg-file"], [308, "cmdoption-pharmpy-results-summary-arg-file"], [308, "cmdoption-pharmpy-run-allometry-arg-file"], [308, "cmdoption-pharmpy-run-bootstrap-arg-file"], [308, "cmdoption-pharmpy-run-covsearch-arg-file"], [308, "cmdoption-pharmpy-run-estmethod-arg-file"], [308, "cmdoption-pharmpy-run-execute-arg-file"], [308, "cmdoption-pharmpy-run-iivsearch-arg-file"], [308, "cmdoption-pharmpy-run-iovsearch-arg-file"], [308, "cmdoption-pharmpy-run-modelsearch-arg-file"], [308, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[308, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[308, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "pharmpy command line option": [[308, "cmdoption-pharmpy-h"], [308, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[308, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[308, "cmdoption-pharmpy-data-append-arg-expression"], [308, "cmdoption-pharmpy-data-append-arg-file"], [308, "cmdoption-pharmpy-data-append-f"], [308, "cmdoption-pharmpy-data-append-h"], [308, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[308, "cmdoption-pharmpy-data-deidentify-arg-file"], [308, "cmdoption-pharmpy-data-deidentify-datecols"], [308, "cmdoption-pharmpy-data-deidentify-f"], [308, "cmdoption-pharmpy-data-deidentify-h"], [308, "cmdoption-pharmpy-data-deidentify-idcol"], [308, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[308, "cmdoption-pharmpy-data-filter-arg-expressions"], [308, "cmdoption-pharmpy-data-filter-arg-file"], [308, "cmdoption-pharmpy-data-filter-f"], [308, "cmdoption-pharmpy-data-filter-h"], [308, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[308, "cmdoption-pharmpy-data-print-arg-file"], [308, "cmdoption-pharmpy-data-print-columns"], [308, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[308, "cmdoption-pharmpy-data-reference-arg-colname"], [308, "cmdoption-pharmpy-data-reference-arg-file"], [308, "cmdoption-pharmpy-data-reference-f"], [308, "cmdoption-pharmpy-data-reference-h"], [308, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[308, "cmdoption-pharmpy-data-resample-arg-file"], [308, "cmdoption-pharmpy-data-resample-group"], [308, "cmdoption-pharmpy-data-resample-h"], [308, "cmdoption-pharmpy-data-resample-replace"], [308, "cmdoption-pharmpy-data-resample-resamples"], [308, "cmdoption-pharmpy-data-resample-sample_size"], [308, "cmdoption-pharmpy-data-resample-seed"], [308, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[308, "cmdoption-pharmpy-data-write-arg-file"], [308, "cmdoption-pharmpy-data-write-f"], [308, "cmdoption-pharmpy-data-write-h"], [308, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[308, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[308, "cmdoption-pharmpy-model-h"]], "pharmpy-model-print command line option": [[308, "cmdoption-pharmpy-model-print-arg-file"], [308, "cmdoption-pharmpy-model-print-explicit-odes"], [308, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-sample command line option": [[308, "cmdoption-pharmpy-model-sample-arg-file"], [308, "cmdoption-pharmpy-model-sample-h"], [308, "cmdoption-pharmpy-model-sample-samples"], [308, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-update_inits command line option": [[308, "cmdoption-pharmpy-model-update_inits-arg-file"], [308, "cmdoption-pharmpy-model-update_inits-f"], [308, "cmdoption-pharmpy-model-update_inits-h"], [308, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[308, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[308, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [308, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[308, "cmdoption-pharmpy-results-cdd-arg-psn"], [308, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[308, "cmdoption-pharmpy-results-frem-arg-psn"], [308, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [308, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [308, "cmdoption-pharmpy-results-frem-h"], [308, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[308, "cmdoption-pharmpy-results-linearize-arg-psn"], [308, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[308, "cmdoption-pharmpy-results-ofv-arg-file"], [308, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[308, "cmdoption-pharmpy-results-print-arg-file"], [308, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[308, "cmdoption-pharmpy-results-qa-arg-psn"], [308, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[308, "cmdoption-pharmpy-results-report-arg-psn"], [308, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[308, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [308, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[308, "cmdoption-pharmpy-results-scm-arg-psn"], [308, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[308, "cmdoption-pharmpy-results-simeval-arg-psn"], [308, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[308, "cmdoption-pharmpy-results-summary-arg-file"], [308, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[308, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[308, "cmdoption-pharmpy-run-allometry-allometric_variable"], [308, "cmdoption-pharmpy-run-allometry-arg-file"], [308, "cmdoption-pharmpy-run-allometry-h"], [308, "cmdoption-pharmpy-run-allometry-initials"], [308, "cmdoption-pharmpy-run-allometry-lower_bounds"], [308, "cmdoption-pharmpy-run-allometry-non_fixed"], [308, "cmdoption-pharmpy-run-allometry-parameters"], [308, "cmdoption-pharmpy-run-allometry-path"], [308, "cmdoption-pharmpy-run-allometry-reference_value"], [308, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[308, "cmdoption-pharmpy-run-amd-administration"], [308, "cmdoption-pharmpy-run-amd-allometric_variable"], [308, "cmdoption-pharmpy-run-amd-arg-input_path"], [308, "cmdoption-pharmpy-run-amd-cl_init"], [308, "cmdoption-pharmpy-run-amd-h"], [308, "cmdoption-pharmpy-run-amd-lloq_limit"], [308, "cmdoption-pharmpy-run-amd-lloq_method"], [308, "cmdoption-pharmpy-run-amd-mat_init"], [308, "cmdoption-pharmpy-run-amd-modeltype"], [308, "cmdoption-pharmpy-run-amd-occasion"], [308, "cmdoption-pharmpy-run-amd-order"], [308, "cmdoption-pharmpy-run-amd-path"], [308, "cmdoption-pharmpy-run-amd-resume"], [308, "cmdoption-pharmpy-run-amd-search_space"], [308, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[308, "cmdoption-pharmpy-run-bootstrap-arg-file"], [308, "cmdoption-pharmpy-run-bootstrap-h"], [308, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[308, "cmdoption-pharmpy-run-covsearch-algorithm"], [308, "cmdoption-pharmpy-run-covsearch-arg-file"], [308, "cmdoption-pharmpy-run-covsearch-effects"], [308, "cmdoption-pharmpy-run-covsearch-h"], [308, "cmdoption-pharmpy-run-covsearch-max_steps"], [308, "cmdoption-pharmpy-run-covsearch-p_backward"], [308, "cmdoption-pharmpy-run-covsearch-p_forward"], [308, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[308, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [308, "cmdoption-pharmpy-run-estmethod-arg-file"], [308, "cmdoption-pharmpy-run-estmethod-h"], [308, "cmdoption-pharmpy-run-estmethod-methods"], [308, "cmdoption-pharmpy-run-estmethod-path"], [308, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[308, "cmdoption-pharmpy-run-execute-arg-file"], [308, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[308, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [308, "cmdoption-pharmpy-run-iivsearch-arg-file"], [308, "cmdoption-pharmpy-run-iivsearch-cutoff"], [308, "cmdoption-pharmpy-run-iivsearch-h"], [308, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [308, "cmdoption-pharmpy-run-iivsearch-path"], [308, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[308, "cmdoption-pharmpy-run-iovsearch-arg-file"], [308, "cmdoption-pharmpy-run-iovsearch-column"], [308, "cmdoption-pharmpy-run-iovsearch-cutoff"], [308, "cmdoption-pharmpy-run-iovsearch-distribution"], [308, "cmdoption-pharmpy-run-iovsearch-h"], [308, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [308, "cmdoption-pharmpy-run-iovsearch-path"], [308, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[308, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [308, "cmdoption-pharmpy-run-modelsearch-arg-file"], [308, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [308, "cmdoption-pharmpy-run-modelsearch-cutoff"], [308, "cmdoption-pharmpy-run-modelsearch-h"], [308, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [308, "cmdoption-pharmpy-run-modelsearch-path"], [308, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[308, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [308, "cmdoption-pharmpy-run-ruvsearch-groups"], [308, "cmdoption-pharmpy-run-ruvsearch-h"], [308, "cmdoption-pharmpy-run-ruvsearch-p_value"], [308, "cmdoption-pharmpy-run-ruvsearch-path"], [308, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[308, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [308, "cmdoption-pharmpy-results-cdd-arg-psn"], [308, "cmdoption-pharmpy-results-frem-arg-psn"], [308, "cmdoption-pharmpy-results-linearize-arg-psn"], [308, "cmdoption-pharmpy-results-qa-arg-psn"], [308, "cmdoption-pharmpy-results-report-arg-psn"], [308, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [308, "cmdoption-pharmpy-results-scm-arg-psn"], [308, "cmdoption-pharmpy-results-simeval-arg-psn"]]}})