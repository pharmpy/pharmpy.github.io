Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.SimulationStep", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_cmt", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bin_observations", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_covariates", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_dv_vs_pred", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.replace_non_random_rvs", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_baseline_effect", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_simulation", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.is_strictness_fulfilled", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_retries", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.ModelEntry", "api/pharmpy.workflows.ModelfitResults", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Results", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "drug_metabolite", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "pkpd", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "retries", "ruvsearch", "scm", "simeval", "structsearch", "tmdd", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.SimulationStep.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_cmt.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bin_observations.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_covariates.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_abs_cwres_vs_ipred.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_dv_vs_pred.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.replace_non_random_rvs.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_baseline_effect.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_simulation.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.is_strictness_fulfilled.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_retries.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.ModelEntry.rst", "api/pharmpy.workflows.ModelfitResults.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Results.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "drug_metabolite.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "pkpd.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "retries.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "structsearch.rst", "tmdd.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "SimulationStep", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_cmt", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bin_observations", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_covariates", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_abs_cwres_vs_ipred", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_dv_vs_pred", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "replace_non_random_rvs", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_baseline_effect", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_simulation", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "is_strictness_fulfilled", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_retries", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "ModelEntry", "ModelfitResults", "NullModelDatabase", "NullToolDatabase", "Results", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Drug metabolite", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "PKPD", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "Retries", "ruvsearch", "scm", "Simeval", "Structsearch", "TMDD", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 23, 24, 25, 28, 30, 35, 60, 61, 75, 80, 84, 85, 86, 87, 89, 90, 91, 92, 99, 102, 110, 113, 119, 120, 121, 124, 130, 134, 141, 145, 146, 154, 177, 187, 192, 194, 215, 228, 230, 234, 241, 268, 275, 279, 283, 285, 286, 287, 303, 304, 306, 307, 308, 309, 311, 313, 314, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345], "section": [0, 308, 311, 323, 325, 336, 343], "i": [0, 1, 2, 6, 8, 9, 14, 18, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 53, 55, 62, 63, 72, 74, 75, 76, 79, 80, 82, 84, 86, 87, 89, 90, 91, 99, 100, 102, 105, 109, 110, 112, 114, 118, 119, 120, 121, 136, 137, 138, 143, 144, 149, 155, 156, 158, 161, 162, 179, 180, 184, 188, 189, 190, 192, 196, 197, 198, 199, 200, 201, 203, 204, 206, 209, 210, 213, 214, 215, 217, 219, 221, 224, 225, 226, 229, 230, 231, 232, 233, 239, 241, 243, 244, 248, 249, 251, 253, 255, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 277, 279, 283, 284, 286, 287, 288, 293, 302, 303, 304, 306, 307, 308, 309, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 345], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 253, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 304, 320, 323, 327, 332, 333, 338, 343], "The": [0, 2, 3, 6, 8, 9, 10, 14, 18, 23, 24, 25, 28, 33, 36, 40, 42, 44, 47, 52, 63, 71, 79, 82, 86, 87, 88, 89, 90, 91, 106, 112, 129, 134, 137, 138, 149, 150, 152, 172, 188, 192, 194, 204, 207, 215, 226, 230, 245, 248, 258, 262, 264, 265, 270, 271, 272, 275, 285, 304, 307, 309, 310, 311, 313, 319, 322, 323, 326, 327, 329, 330, 332, 333, 342, 343, 344, 345], "inform": [0, 1, 2, 6, 8, 134, 230, 304, 306, 311, 313, 314, 317, 320, 321, 322, 323, 325, 328, 330, 333, 337, 338, 339, 341, 342, 343, 344], "intend": [0, 323, 325, 343], "non": [0, 24, 74, 79, 88, 102, 229, 304, 313, 314, 318, 323, 325, 327, 333, 343], "hard": [0, 333], "find": [0, 8, 28, 53, 94, 95, 112, 134, 187, 260, 277, 304, 321, 323, 337, 341, 342, 344, 345], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 288, 309, 311, 313, 317, 319, 320, 322, 323, 325, 326, 327, 328, 330, 337, 338, 341, 342], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 310, 311, 312, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344], "develop": [0, 262, 304, 323, 332, 333, 343, 345], "remov": [0, 2, 9, 25, 28, 84, 119, 120, 121, 158, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 204, 208, 222, 235, 237, 239, 262, 303, 304, 306, 311, 314, 320, 322, 323, 329], "row": [0, 1, 2, 24, 86, 87, 93, 100, 103, 105, 158, 189, 190, 216, 230, 276, 302, 304, 306, 311, 313, 318, 320, 322, 326, 327, 328, 330, 337, 338, 339, 342], "split": [0, 79, 229, 297, 304, 306, 325, 343], "drop": [0, 2, 6, 18, 84, 85, 236, 304, 333, 339], "column": [0, 1, 2, 6, 8, 10, 18, 24, 30, 32, 35, 42, 50, 63, 82, 84, 85, 86, 87, 88, 92, 93, 99, 102, 103, 105, 110, 158, 162, 167, 171, 182, 188, 189, 195, 198, 207, 216, 219, 230, 234, 236, 251, 252, 253, 262, 267, 275, 276, 302, 304, 306, 311, 313, 318, 320, 322, 325, 326, 327, 328, 330, 337, 338, 339, 342, 343], "error": [0, 2, 11, 19, 20, 23, 25, 28, 56, 57, 58, 59, 63, 66, 67, 68, 69, 70, 132, 137, 138, 149, 152, 170, 177, 192, 194, 214, 215, 219, 223, 230, 242, 271, 274, 277, 282, 285, 302, 304, 311, 317, 320, 322, 328, 329, 330, 337, 338, 339, 342, 343], "handl": [0, 2, 3, 92, 228, 230, 304, 313, 314, 318, 333], "valid": [0, 2, 25, 37, 40, 109, 191, 196, 262, 304, 323], "some": [0, 2, 8, 10, 66, 79, 177, 187, 192, 230, 281, 302, 304, 306, 309, 311, 313, 323, 324, 327, 328, 332, 333, 338, 341, 343], "rule": [0, 72, 323], "These": [0, 309, 314, 318, 323, 324, 327, 332, 333, 342, 343], "were": [0, 25, 28, 274, 302, 303, 304, 313, 317, 318, 323, 326, 328, 343, 345], "test": [0, 2, 55, 139, 156, 264, 265, 267, 269, 271, 272, 304, 306, 310, 311, 316, 317, 319, 320, 322, 326, 328, 330, 333, 338, 341, 343], "7": [0, 1, 2, 36, 56, 58, 59, 64, 68, 69, 87, 93, 100, 105, 121, 125, 158, 216, 253, 302, 303, 311, 313, 318, 320, 322, 323, 324, 326, 327, 328, 330, 334, 336, 337, 338, 339, 340, 342], "4": [0, 1, 2, 6, 56, 58, 59, 64, 68, 69, 86, 87, 88, 89, 90, 91, 93, 100, 103, 105, 107, 121, 158, 216, 233, 253, 271, 277, 302, 303, 311, 312, 313, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 334, 336, 337, 338, 339, 340, 342, 343], "3": [0, 1, 2, 6, 28, 56, 57, 58, 59, 64, 67, 68, 69, 70, 73, 86, 87, 88, 89, 90, 91, 93, 100, 103, 105, 107, 108, 111, 121, 125, 158, 170, 184, 189, 190, 191, 216, 221, 230, 231, 232, 233, 251, 252, 253, 271, 276, 285, 288, 302, 303, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 334, 336, 337, 338, 339, 340, 342, 343, 345], "delimet": 0, "between": [0, 8, 9, 25, 32, 79, 99, 230, 275, 285, 293, 302, 303, 304, 306, 317, 318, 322, 323, 329, 333, 336, 338], "comma": [0, 306, 343], "space": [0, 71, 262, 269, 272, 304, 306, 311, 337, 343], "tab": [0, 170, 304, 327, 331], "befor": [0, 2, 28, 190, 191, 240, 304, 306, 311, 324, 337], "after": [0, 2, 6, 28, 119, 120, 121, 219, 260, 274, 277, 281, 303, 304, 306, 312, 313, 318, 323, 324, 325, 328, 333, 334, 336, 339, 340, 345], "ar": [0, 2, 3, 4, 6, 7, 8, 14, 24, 25, 28, 37, 38, 39, 40, 42, 48, 63, 77, 79, 82, 102, 103, 118, 137, 138, 149, 159, 179, 180, 182, 185, 187, 191, 193, 194, 196, 199, 200, 214, 220, 229, 230, 234, 241, 249, 250, 255, 262, 264, 266, 268, 269, 279, 281, 284, 302, 304, 306, 307, 309, 311, 313, 314, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 337, 339, 341, 342, 343, 345], "give": [0, 24, 112, 118, 161, 191, 214, 279, 283, 286, 302, 304, 306, 318, 322, 323, 325, 337, 339], "sic": 0, "begin": [0, 318, 325, 327], "end": [0, 38, 53, 318, 323, 325, 327, 343], "insert": [0, 292, 304], "each": [0, 2, 6, 8, 25, 33, 35, 36, 62, 63, 64, 86, 87, 88, 89, 90, 91, 100, 105, 107, 121, 160, 167, 168, 182, 188, 191, 201, 203, 214, 216, 281, 285, 302, 303, 306, 308, 311, 313, 314, 316, 317, 318, 320, 322, 323, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 345], "can": [0, 1, 2, 6, 10, 18, 24, 25, 28, 34, 35, 40, 55, 63, 71, 80, 88, 134, 188, 228, 230, 248, 260, 265, 268, 281, 284, 286, 287, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 336, 337, 338, 341, 342, 343, 344, 345], "onli": [0, 2, 3, 8, 10, 14, 25, 36, 60, 61, 72, 75, 84, 86, 87, 89, 90, 91, 93, 109, 112, 113, 124, 130, 137, 138, 149, 160, 188, 192, 194, 201, 203, 214, 215, 216, 219, 228, 230, 240, 268, 271, 272, 277, 284, 293, 304, 306, 307, 311, 322, 323, 325, 328, 330, 332, 337, 341, 342, 343], "numer": [0, 6, 29, 86, 87, 89, 90, 302, 304, 313, 333, 343], "e": [0, 2, 6, 14, 18, 25, 37, 39, 55, 75, 81, 119, 120, 121, 161, 180, 193, 196, 197, 220, 269, 302, 304, 309, 313, 317, 318, 320, 322, 323, 325, 327, 328, 329, 330, 333, 338, 341, 342, 343], "other": [0, 7, 9, 18, 25, 28, 44, 76, 168, 268, 292, 297, 302, 304, 307, 309, 314, 320, 323, 333, 341], "charact": [0, 10, 313], "than": [0, 23, 24, 304, 320, 323, 328, 343], "ee": 0, "0123456789": 0, "allow": [0, 2, 6, 14, 25, 36, 255, 262, 270, 279, 280, 283, 286, 296, 304, 306, 311, 323, 325, 328, 333, 337, 342, 343], "except": [0, 11, 12, 19, 20, 21, 39, 63, 188, 230, 304, 323], "ii": [0, 6], "datx": [0, 304], "fortran": 0, "short": [0, 309, 323], "form": [0, 25, 188, 304, 323], "exponenti": [0, 36, 39, 48, 203, 306, 311, 318], "notat": 0, "2": [0, 1, 2, 6, 18, 28, 33, 36, 38, 43, 47, 49, 51, 54, 55, 56, 57, 58, 59, 64, 67, 68, 69, 70, 74, 86, 87, 88, 89, 90, 91, 93, 100, 103, 105, 107, 111, 121, 125, 158, 170, 184, 189, 190, 191, 192, 194, 201, 205, 209, 210, 213, 215, 216, 217, 220, 221, 224, 230, 232, 233, 253, 261, 271, 275, 302, 303, 306, 309, 311, 312, 313, 316, 317, 318, 320, 322, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 342, 343], "1": [0, 1, 2, 5, 6, 7, 8, 14, 16, 17, 18, 22, 24, 25, 26, 28, 33, 34, 36, 37, 38, 39, 40, 44, 47, 49, 52, 55, 56, 57, 58, 59, 64, 65, 67, 68, 69, 70, 75, 77, 82, 86, 87, 88, 89, 90, 91, 93, 100, 103, 105, 107, 108, 109, 111, 121, 125, 133, 136, 158, 159, 160, 161, 162, 170, 174, 184, 188, 189, 190, 191, 196, 200, 201, 202, 203, 206, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 224, 225, 228, 230, 231, 232, 233, 241, 253, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 275, 302, 303, 306, 308, 309, 311, 312, 313, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345], "mean": [0, 2, 13, 17, 18, 22, 63, 66, 77, 161, 189, 190, 262, 279, 283, 302, 303, 304, 306, 318, 320, 323, 325, 326, 327, 328, 330, 333, 336, 340, 341, 343], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 23, 24, 25, 28, 30, 52, 63, 65, 66, 71, 82, 83, 88, 94, 95, 112, 118, 126, 127, 128, 129, 131, 132, 133, 134, 162, 167, 172, 187, 188, 189, 190, 192, 194, 205, 208, 215, 219, 222, 248, 249, 259, 268, 271, 274, 277, 279, 283, 284, 285, 286, 293, 302, 303, 305, 306, 309, 310, 311, 313, 314, 316, 320, 322, 323, 324, 325, 327, 328, 330, 332, 333, 337, 338, 339, 342, 343], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 83, 280, 282, 288, 297, 323, 327, 342], "instead": [0, 2, 9, 47, 72, 88, 118, 213, 230, 279, 303, 304, 306, 313, 314, 316, 317, 318, 323, 333], "lone": 0, "an": [0, 2, 4, 6, 8, 9, 10, 15, 16, 18, 24, 25, 28, 31, 32, 33, 35, 37, 40, 41, 42, 51, 52, 55, 71, 99, 102, 107, 110, 137, 138, 139, 143, 144, 147, 149, 152, 156, 159, 161, 176, 188, 192, 196, 204, 230, 232, 245, 248, 250, 251, 252, 253, 274, 275, 277, 280, 282, 304, 306, 308, 309, 311, 313, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 333, 336, 337, 339, 340, 341, 342, 343, 345], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 23, 24, 25, 28, 33, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 51, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 79, 80, 86, 87, 88, 89, 90, 91, 93, 96, 97, 98, 100, 103, 105, 107, 108, 114, 125, 126, 132, 133, 135, 136, 158, 159, 160, 161, 170, 174, 178, 182, 183, 184, 187, 189, 190, 191, 194, 196, 197, 199, 200, 203, 204, 205, 207, 208, 214, 215, 216, 218, 219, 222, 229, 230, 231, 232, 235, 238, 241, 250, 252, 253, 261, 262, 264, 266, 267, 269, 270, 271, 272, 276, 277, 285, 288, 302, 303, 306, 309, 311, 313, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345], "dot": 0, "most": [0, 6, 36, 228, 306, 314, 323, 336, 337], "24": [0, 2, 64, 93, 100, 105, 108, 121, 125, 158, 216, 253, 302, 303, 311, 313, 317, 320, 322, 324, 326, 327, 328, 336, 338, 340, 342], "long": [0, 304, 323, 333], "count": [0, 107, 230, 276, 283, 304, 328], "delimit": 0, "wa": [0, 275, 285, 288, 302, 304, 310, 323, 324, 338, 339, 343], "eaten": 0, "empti": [0, 2, 18, 25, 274, 308, 337], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 25, 28, 32, 34, 35, 43, 47, 53, 55, 72, 79, 84, 96, 97, 98, 99, 114, 125, 184, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 235, 237, 238, 240, 241, 288, 304, 306, 307, 308, 313, 316, 317, 319, 320, 321, 322, 325, 326, 327, 328, 329, 341, 342, 343, 345], "As": [0, 25, 307, 327, 328, 329, 337, 343], "contain": [0, 2, 3, 25, 52, 82, 88, 163, 164, 165, 166, 249, 251, 252, 253, 302, 303, 306, 311, 312, 313, 314, 317, 320, 322, 323, 325, 326, 328, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343], "drope": 0, "input": [0, 7, 8, 9, 10, 25, 28, 36, 37, 39, 42, 69, 70, 80, 85, 135, 139, 140, 150, 170, 174, 190, 203, 226, 248, 249, 262, 275, 289, 292, 304, 306, 311, 313, 316, 317, 320, 322, 327, 328, 329, 330, 333, 337, 338, 341, 342, 343], "ani": [0, 2, 6, 9, 18, 51, 63, 74, 112, 185, 260, 265, 276, 289, 293, 309, 311, 313, 319, 320, 322, 323, 325, 326, 327, 329, 333, 337, 343, 345], "limit": [0, 2, 6, 73, 182, 207, 214, 230, 262, 304, 306, 322, 323, 331, 337], "length": [0, 52, 88, 89, 90, 91, 107, 108, 125, 304, 327], "If": [0, 2, 8, 10, 18, 28, 33, 34, 36, 44, 47, 53, 55, 63, 78, 79, 80, 88, 99, 102, 107, 109, 110, 148, 179, 180, 184, 188, 190, 201, 203, 204, 213, 214, 226, 229, 230, 231, 232, 233, 234, 241, 255, 262, 266, 269, 277, 292, 302, 306, 309, 311, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 333, 337, 343, 345], "ha": [0, 2, 8, 18, 25, 40, 79, 88, 100, 105, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 302, 304, 306, 307, 309, 311, 313, 314, 317, 320, 322, 323, 325, 327, 328, 330, 335, 337, 338, 339, 342, 343, 345], "more": [0, 2, 8, 24, 230, 261, 264, 266, 267, 269, 271, 272, 304, 306, 311, 317, 319, 321, 323, 325, 327, 328, 330, 333, 336, 343, 344], "extra": [0, 18, 272, 304, 341, 342], "consid": [0, 2, 102, 266, 267, 269, 304, 311, 314, 317, 320, 322, 323, 328, 338], "start": [0, 2, 8, 38, 51, 107, 162, 178, 188, 266, 272, 304, 306, 309, 311, 317, 318, 322, 323, 325, 326, 327, 328, 330, 337, 338, 339, 341, 342, 343, 345], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 284, 285, 286, 288, 293, 302, 304, 306, 307, 309, 311, 314, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 337, 338, 340, 341, 342, 343, 344, 345], "been": [0, 2, 6, 155, 307, 311, 313, 323, 327, 337, 343, 345], "provid": [0, 25, 190, 214, 306, 307, 310, 311, 313, 320, 322, 323, 328, 345], "default": [0, 1, 2, 6, 7, 9, 14, 18, 23, 25, 30, 33, 36, 38, 39, 40, 46, 48, 53, 55, 62, 79, 80, 84, 109, 112, 114, 118, 127, 129, 136, 137, 138, 149, 150, 179, 180, 188, 189, 190, 192, 194, 199, 200, 203, 204, 214, 215, 219, 229, 231, 232, 233, 243, 244, 247, 248, 255, 261, 262, 264, 266, 267, 269, 270, 272, 277, 279, 283, 286, 296, 301, 304, 306, 308, 311, 316, 320, 322, 325, 327, 328, 329, 330, 331, 337, 338, 341, 342, 343, 345], "where": [0, 2, 7, 33, 47, 230, 260, 302, 303, 304, 307, 308, 311, 313, 317, 318, 322, 323, 327, 328, 329, 333, 337, 343, 345], "rexex": 0, "": [0, 8, 10, 14, 71, 106, 174, 304, 306, 311, 313, 316, 318, 323, 329, 334, 337], "za": 0, "z": [0, 33], "either": [0, 2, 39, 40, 82, 109, 262, 269, 270, 306, 320, 323, 325, 327, 330, 341, 342, 343, 345], "surround": 0, "two": [0, 2, 8, 9, 25, 28, 82, 168, 302, 304, 305, 306, 311, 316, 323, 333, 338, 342, 343], "By": [0, 18, 25, 112, 137, 138, 149, 322, 323, 325], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 25, 28, 53, 71, 162, 176, 189, 230, 245, 266, 267, 268, 269, 270, 271, 283, 302, 303, 304, 306, 308, 311, 317, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 337, 338, 339, 341, 342, 343, 345], "interpret": [0, 304, 323, 345], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 24, 25, 28, 32, 33, 42, 45, 52, 55, 63, 71, 79, 80, 82, 86, 87, 88, 89, 90, 91, 99, 106, 112, 118, 125, 136, 161, 162, 185, 188, 189, 190, 191, 192, 194, 201, 203, 212, 214, 215, 223, 230, 234, 240, 242, 243, 247, 251, 252, 253, 255, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 283, 286, 287, 288, 290, 292, 296, 302, 303, 304, 306, 308, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 336, 337, 338, 339, 342, 343, 344], "chang": [0, 2, 9, 18, 24, 25, 38, 82, 199, 201, 205, 206, 208, 214, 217, 218, 222, 224, 230, 238, 306, 309, 311, 323, 325, 327, 328, 329, 337, 338, 345], "howev": [0, 8, 320, 323, 328, 329, 337, 343, 345], "one": [0, 2, 6, 8, 9, 10, 14, 22, 23, 24, 25, 26, 36, 44, 75, 84, 88, 97, 137, 138, 149, 171, 188, 190, 198, 201, 203, 223, 230, 234, 236, 237, 242, 247, 268, 271, 274, 276, 279, 283, 285, 286, 290, 304, 306, 307, 309, 313, 314, 316, 317, 318, 322, 323, 325, 327, 328, 329, 333, 337, 342, 343], "legal": [0, 323], "ones": [0, 9, 112, 311, 318], "9": [0, 2, 6, 47, 52, 64, 73, 87, 90, 93, 100, 103, 105, 121, 125, 241, 253, 302, 303, 311, 313, 319, 320, 322, 323, 324, 326, 327, 328, 330, 336, 337, 338, 339, 340, 342, 345], "sinc": [0, 6, 204, 304, 313, 314, 318, 320, 327, 328, 329, 333, 345], "number": [0, 2, 6, 8, 14, 22, 23, 26, 35, 42, 52, 53, 55, 63, 66, 74, 80, 81, 82, 119, 120, 121, 122, 123, 125, 162, 182, 188, 189, 190, 191, 192, 203, 213, 218, 221, 262, 263, 264, 268, 270, 271, 275, 276, 285, 302, 304, 306, 311, 313, 316, 323, 327, 330, 336, 337, 338, 339, 342, 343, 345], "valu": [0, 1, 2, 6, 10, 18, 23, 24, 25, 33, 39, 46, 48, 49, 55, 63, 65, 66, 73, 74, 86, 87, 88, 89, 90, 91, 96, 98, 100, 103, 105, 106, 126, 132, 133, 156, 182, 187, 188, 191, 207, 216, 219, 230, 238, 255, 261, 264, 266, 267, 269, 270, 271, 272, 277, 285, 301, 302, 304, 306, 309, 311, 313, 317, 324, 325, 327, 328, 337, 338, 339, 340], "met": [0, 272, 316, 323, 343], "doubl": 0, "big": 0, "warn": [0, 2, 12, 248, 274, 282, 285, 304, 311, 317, 320, 322, 328, 330, 337, 342, 345], "larger": [0, 323], "pad": 0, "filter": [0, 93, 119, 120, 121, 304, 311, 313, 328, 330], "so": [0, 23, 93, 188, 281, 307, 309, 314, 323, 328, 329, 336, 345], "characterscannot": 0, "neither": [0, 323], "perform": [0, 2, 14, 75, 82, 191, 306, 311, 323, 325, 327, 328, 329, 337, 342], "order": [0, 8, 9, 25, 28, 32, 135, 140, 141, 146, 151, 153, 154, 188, 201, 202, 210, 217, 224, 225, 226, 262, 304, 306, 313, 319, 323, 325, 326, 327, 328, 333, 343], "given": [0, 2, 9, 25, 38, 77, 81, 86, 87, 89, 90, 91, 97, 98, 127, 128, 129, 131, 139, 150, 156, 158, 172, 179, 180, 189, 190, 191, 219, 227, 230, 237, 238, 246, 248, 255, 270, 279, 281, 283, 286, 292, 304, 306, 309, 313, 317, 318, 320, 322, 323, 328, 329, 336, 337, 338, 341], "critic": [0, 307], "case": [0, 2, 8, 35, 79, 92, 137, 138, 149, 188, 230, 277, 304, 311, 320, 322, 323, 325, 327, 328, 330, 335, 342, 344], "illeg": 0, "get": [0, 2, 4, 5, 6, 7, 8, 10, 16, 25, 28, 32, 35, 99, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 130, 132, 133, 135, 157, 276, 304, 313, 318, 322, 323, 325, 326, 333, 337, 342, 345], "need": [0, 2, 18, 39, 75, 92, 134, 304, 306, 308, 309, 310, 314, 318, 319, 323, 325, 326, 328, 332, 343, 345], "becaus": [0, 8, 304, 323], "later": [0, 319, 323], "comparison": [0, 328, 333, 341], "It": [0, 18, 279, 307, 308, 309, 313, 314, 319, 320, 321, 323, 325, 326, 327, 331, 336, 337, 343, 345], "possibl": [0, 2, 6, 8, 25, 112, 141, 145, 146, 154, 228, 266, 269, 284, 304, 308, 309, 313, 316, 320, 323, 325, 326, 327, 328, 329, 331, 333, 336, 341, 343, 345], "done": [0, 1, 75, 76, 82, 86, 87, 89, 90, 91, 188, 307, 311, 325, 328, 331, 338], "eq": [0, 8, 31, 327], "ne": 0, "text": [0, 18, 36, 37, 40, 196, 325, 327, 333, 342], "otherwis": [0, 6, 28, 33, 34, 36, 39, 43, 75, 79, 99, 102, 110, 125, 136, 137, 138, 149, 152, 155, 159, 160, 161, 188, 201, 214, 215, 217, 219, 221, 224, 230, 285, 307, 311, 313, 323, 325, 327, 333, 342], "appropri": [0, 307, 323], "letter": [0, 136], "alphanum": 0, "underscor": 0, "real": [0, 144, 156, 313, 314], "special": [0, 6, 234, 309, 313, 314, 323], "digit": [0, 74, 304, 343], "enclos": 0, "ok": [0, 314], "w": [0, 28, 75, 136, 159, 170, 171, 177, 192, 203, 215, 219, 223, 230, 242, 311, 323, 325, 327], "o": [0, 303, 305, 306, 310, 338], "With": [0, 2, 337, 343], "eqn": 0, "ge": [0, 327], "etc": [0, 3, 304, 327, 329, 339, 343], "maximum": [0, 2, 14, 36, 74, 230, 264, 306, 311, 337, 343], "have": [0, 2, 6, 8, 18, 25, 28, 36, 39, 82, 106, 112, 140, 151, 153, 234, 267, 276, 281, 283, 304, 306, 308, 309, 310, 311, 313, 314, 317, 319, 320, 322, 323, 325, 326, 328, 329, 331, 333, 337, 341, 343, 345], "12": [0, 1, 2, 64, 93, 100, 103, 105, 107, 108, 121, 158, 216, 253, 302, 303, 311, 313, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 330, 334, 336, 337, 338, 339, 340, 342], "must": [0, 23, 42, 79, 188, 203, 279, 303, 306, 323, 325, 343], "decreas": [0, 270, 314, 337], "within": [0, 2, 106, 188, 307, 311, 323, 343], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 2, 18, 25, 28, 214, 302, 307, 309, 311, 314, 323, 328, 329, 345], "affect": [0, 112, 118, 201, 214, 230, 304, 323, 329], "even": [0, 23, 81, 85, 100, 105, 112, 308, 323, 329], "still": [0, 323, 329, 345], "cannot": [0, 2, 8, 63, 79, 248, 278, 304, 311, 313, 323, 343], "both": [0, 1, 2, 8, 18, 42, 151, 197, 230, 276, 304, 307, 311, 313, 316, 317, 320, 322, 323, 326, 328, 337, 338, 341, 342, 343], "reenter": 0, "think": 0, "risk": [0, 323], "being": [0, 6, 25, 35, 44, 63, 142, 148, 191, 192, 194, 215, 303, 304, 308, 316, 317, 318, 323, 329, 333, 339, 341], "truncat": 0, "encod": [0, 223, 242, 304, 313, 331], "here": [0, 2, 118, 313, 314, 315, 319, 320, 326, 327, 328, 333, 343, 344], "possibli": [0, 333], "partial": [0, 306, 310, 333], "list": [0, 2, 6, 8, 10, 13, 14, 17, 24, 25, 28, 31, 33, 39, 42, 79, 82, 84, 85, 94, 95, 97, 98, 106, 111, 112, 118, 127, 128, 129, 131, 157, 167, 179, 180, 188, 189, 195, 203, 214, 229, 231, 232, 233, 235, 236, 237, 238, 247, 255, 260, 261, 262, 265, 266, 267, 268, 271, 274, 275, 276, 277, 285, 291, 292, 302, 303, 304, 306, 307, 309, 311, 313, 317, 322, 323, 325, 327, 330, 336, 337, 338, 339, 341, 342, 343], "decid": [0, 2, 44, 150, 320, 322, 323, 328, 338], "whether": [0, 23, 33, 36, 39, 55, 79, 139, 148, 150, 188, 203, 249, 251, 253, 262, 277, 280, 296, 304, 306, 320, 323, 328, 343], "put": [0, 8, 162, 188, 304, 314, 318], "up": [0, 14, 307, 308, 311, 319, 326, 343, 345], "written": [0, 304, 323, 325, 327, 329, 343], "scientif": [0, 314], "14": [0, 2, 64, 87, 100, 105, 121, 253, 302, 303, 311, 320, 322, 323, 324, 326, 327, 330, 336, 339, 340, 342], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 107, 204, 302, 327, 337], "describ": [0, 2, 25, 28, 63, 140, 141, 142, 145, 146, 151, 153, 154, 302, 311, 313, 320, 322, 325, 330, 337], "output": [0, 8, 18, 276, 292, 304, 306, 309, 323, 325, 327, 343], "alwai": [0, 187, 190, 304, 313, 327, 328, 337, 341, 343], "synonym": [0, 304], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 24, 25, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 47, 49, 52, 53, 63, 74, 76, 79, 81, 82, 84, 89, 90, 91, 97, 101, 106, 107, 108, 112, 115, 118, 121, 125, 127, 128, 129, 131, 136, 137, 138, 139, 149, 157, 159, 162, 168, 176, 179, 180, 182, 184, 186, 188, 192, 193, 194, 195, 196, 198, 203, 204, 207, 211, 213, 214, 215, 216, 219, 226, 229, 231, 232, 233, 236, 237, 250, 255, 260, 261, 262, 264, 267, 270, 273, 274, 277, 279, 280, 281, 283, 285, 286, 289, 290, 291, 292, 293, 301, 303, 304, 306, 308, 311, 313, 320, 322, 323, 326, 327, 328, 330, 332, 337, 338, 339, 341, 342, 343], "avail": [0, 1, 2, 6, 33, 43, 52, 63, 134, 159, 201, 217, 221, 224, 230, 250, 255, 262, 302, 306, 311, 317, 318, 320, 322, 323, 325, 326, 327, 328, 329, 333, 337, 338, 340, 341, 342, 343, 344, 345], "carri": [0, 323], "over": [0, 125, 162, 188, 219, 251, 252, 253, 302, 303, 304, 316, 318, 322, 343], "onc": [0, 2, 160, 311, 329, 337], "covari": [0, 6, 10, 14, 17, 25, 33, 36, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 70, 79, 105, 106, 118, 139, 157, 170, 176, 189, 190, 191, 195, 230, 262, 264, 285, 304, 306, 311, 313, 314, 322, 333, 337, 339, 343], "final": [0, 45, 183, 259, 262, 285, 304, 311, 317, 318, 320, 322, 323, 327, 328, 329, 330, 337, 338, 339, 342, 343], "estim": [0, 1, 2, 3, 14, 15, 18, 23, 24, 33, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 51, 62, 63, 64, 66, 73, 74, 77, 79, 88, 96, 97, 98, 168, 169, 170, 174, 178, 183, 184, 189, 190, 191, 192, 194, 199, 200, 201, 205, 209, 210, 214, 215, 217, 221, 223, 224, 225, 230, 231, 232, 233, 237, 238, 240, 241, 242, 247, 250, 261, 262, 265, 270, 272, 277, 285, 302, 303, 304, 306, 311, 312, 314, 320, 321, 322, 324, 328, 330, 332, 333, 336, 337, 338, 341, 342, 343, 344], "oppos": [0, 337], "ext": [0, 304, 342, 343], "per": [0, 6, 14, 24, 75, 119, 120, 121, 125, 189, 190, 214, 219, 276, 311], "est": [0, 38, 45, 51, 178, 183, 325, 327], "first": [0, 2, 7, 25, 34, 36, 43, 81, 100, 105, 109, 137, 138, 140, 141, 146, 149, 151, 168, 175, 192, 194, 199, 201, 202, 203, 210, 215, 217, 219, 221, 224, 230, 285, 304, 306, 311, 318, 320, 322, 323, 327, 328, 329, 333, 343, 345], "call": [0, 276, 293, 304, 308, 309, 323, 329, 345], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 303, 304, 306, 311, 317, 320, 322, 328, 330, 333, 334, 336, 337, 338, 339, 341, 342, 343], "theta": [0, 1, 28, 33, 36, 39, 126, 132, 133, 170, 171, 174, 214, 223, 242, 304, 320, 327, 328, 329, 333, 337, 338, 343], "sigma": [0, 1, 2, 126, 132, 133, 170, 171, 174, 192, 194, 215, 304, 318, 320, 327, 328, 329, 337, 343], "omega": [0, 1, 22, 25, 64, 126, 132, 133, 170, 171, 174, 304, 306, 318, 320, 325, 327, 328, 329, 336, 337, 338, 343], "fix": [0, 1, 2, 23, 24, 33, 44, 49, 55, 79, 96, 97, 98, 126, 132, 133, 187, 197, 205, 208, 222, 229, 235, 237, 238, 261, 306, 320, 323, 325, 327, 333, 343], "offdiagon": 0, "could": [0, 18, 304, 313, 323, 327, 332, 333], "part": [0, 2, 18, 25, 81, 230, 302, 304, 306, 309, 310, 311, 323, 325, 328, 329, 333, 343], "NO": [0, 323], "probabl": [0, 230], "same": [0, 2, 8, 10, 18, 25, 28, 42, 53, 74, 75, 96, 97, 98, 107, 153, 203, 205, 214, 237, 238, 243, 262, 267, 279, 281, 283, 303, 304, 306, 307, 311, 313, 317, 318, 322, 323, 325, 327, 328, 337, 342, 343, 345], "type": [0, 2, 6, 8, 10, 18, 27, 28, 35, 36, 55, 77, 102, 106, 127, 129, 167, 172, 220, 248, 255, 262, 266, 267, 269, 272, 301, 304, 306, 309, 311, 316, 318, 319, 320, 322, 323, 325, 328, 330, 333, 342], "now": [0, 304, 309, 327, 329], "investig": 0, "follow": [0, 2, 14, 36, 39, 161, 229, 302, 304, 306, 307, 309, 310, 311, 313, 314, 316, 317, 319, 320, 322, 323, 325, 327, 328, 329, 330, 332, 342, 343, 345], "like": [0, 25, 313, 316, 323, 329, 333, 343], "One": [0, 2, 25, 162, 167, 285, 289, 292, 306, 333, 345], "last": [0, 2, 8, 28, 32, 99, 200, 277], "left": [0, 4, 63, 311, 325, 327, 328, 332], "justifi": 0, "size": [0, 6, 13, 188, 230, 304, 307, 333], "13": [0, 1, 2, 64, 100, 103, 105, 107, 121, 253, 302, 303, 311, 317, 320, 322, 323, 324, 326, 327, 328, 334, 336, 339, 340, 342], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 284, 285, 286, 290, 301, 302, 303, 304, 305, 307, 308, 309, 311, 317, 318, 319, 321, 322, 323, 324, 332, 333, 336, 337, 339, 340, 344, 345], "n": [0, 6, 17, 22, 25, 26, 37, 40, 47, 79, 82, 184, 190, 191, 196, 213, 218, 221, 229, 232, 268, 302, 303, 304, 306, 318, 320, 325, 327, 343], "flatten": [0, 304], "triangular": 0, "correl": [0, 14, 56, 57, 58, 59, 67, 68, 69, 70, 73, 79, 241, 285, 304, 336], "abov": [0, 33, 36, 39, 73, 182, 230, 302, 303, 311, 316, 318, 323, 327, 330, 337, 345], "off": [0, 2, 328, 342, 343], "diagon": [0, 170, 304, 320, 326, 327, 328], "obj": 0, "right": [0, 4, 8, 323, 325, 327, 345], "also": [0, 2, 25, 34, 85, 112, 188, 304, 308, 309, 311, 313, 314, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 337, 338, 341, 342, 343, 345], "22": [0, 2, 64, 86, 87, 89, 90, 100, 105, 121, 125, 253, 302, 303, 311, 318, 322, 324, 326, 327, 340], "integ": [0, 6, 136, 304, 306, 343], "5": [0, 1, 2, 28, 33, 36, 56, 58, 59, 63, 64, 68, 69, 75, 87, 88, 93, 98, 100, 103, 105, 108, 121, 125, 136, 158, 159, 160, 161, 170, 216, 230, 233, 238, 253, 270, 275, 276, 302, 303, 311, 313, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 334, 336, 337, 339, 340, 342], "expon": [0, 1, 33, 261, 306], "regular": [0, 10, 316, 321], "take": [0, 2, 23, 25, 80, 249, 285, 304, 307, 313, 317, 320, 322, 323, 328, 330, 333, 341, 342], "19": [0, 64, 87, 100, 105, 121, 253, 302, 303, 320, 324, 326, 327, 336, 339, 340, 342], "posit": [0, 25, 190, 191, 230, 304, 306, 307, 314, 337], "neg": [0, 343], "For": [0, 2, 8, 36, 39, 119, 120, 121, 161, 187, 216, 230, 234, 261, 264, 266, 267, 269, 271, 272, 302, 303, 306, 308, 309, 311, 316, 317, 318, 319, 323, 325, 328, 329, 330, 333, 337, 341, 343, 345], "20": [0, 64, 90, 93, 100, 105, 121, 253, 302, 303, 311, 323, 324, 326, 327, 334, 336, 337, 338, 339, 340], "In": [0, 2, 8, 35, 79, 92, 307, 309, 311, 319, 320, 322, 323, 325, 326, 327, 328, 333, 337, 341, 342, 343, 345], "observ": [0, 6, 14, 18, 43, 52, 107, 119, 120, 121, 124, 125, 201, 217, 221, 224, 225, 230, 275, 276, 302, 304, 318, 330, 333, 336, 340], "byte": 0, "evid": [0, 110, 304], "toward": [0, 107, 304], "token": [0, 343], "whitespac": 0, "parenthes": [0, 343], "multipl": [0, 2, 4, 8, 25, 28, 35, 55, 102, 137, 138, 149, 201, 220, 262, 272, 274, 292, 304, 311, 314, 325, 327, 338, 339, 342, 343], "open": [0, 307, 309, 321, 323, 331], "keyword": [0, 306], "kept": [0, 92, 125, 304, 306, 320], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 304, 306, 308, 309, 311, 313, 314, 316, 317, 320, 322, 323, 325, 328, 329, 330, 331, 332, 333, 337, 338, 341, 342, 345], "csv": [0, 2, 174, 243, 278, 288, 304, 306, 311, 313, 317, 320, 322, 327, 328, 330, 337, 338, 341, 342, 343], "wgt": [0, 2, 4, 6, 10, 28, 33, 36, 75, 84, 85, 93, 100, 105, 118, 134, 136, 158, 159, 160, 161, 170, 171, 176, 216, 231, 232, 233, 236, 261, 313, 318, 325, 327, 329, 333, 336, 343], "23": [0, 2, 63, 64, 66, 80, 87, 100, 105, 121, 189, 190, 191, 253, 302, 303, 311, 320, 322, 324, 326, 327, 328, 330, 339, 340], "titl": 0, "crash": [0, 304], "nmtran": [0, 6, 14], "There": [0, 281, 311, 317, 327, 337], "72": [0, 2], "includ": [0, 2, 3, 17, 22, 25, 48, 167, 230, 277, 303, 304, 307, 311, 320, 321, 322, 323, 326, 327, 328, 330, 336, 337, 339, 341, 342, 343], "come": [0, 230, 309, 323], "filenam": [0, 18, 279, 283, 286, 291, 325], "repres": [0, 4, 6, 23, 24, 25, 34, 306, 311, 313, 314, 316, 318, 323, 325, 330, 341], "rel": [0, 285, 304, 318, 337, 343], "path": [0, 1, 2, 10, 18, 53, 77, 104, 172, 173, 243, 244, 245, 246, 247, 256, 257, 258, 260, 262, 278, 279, 280, 281, 283, 286, 287, 288, 290, 291, 296, 304, 306, 308, 311, 313, 317, 319, 320, 322, 325, 326, 327, 328, 330, 337, 338, 339, 341, 342, 343, 345], "work": [0, 285, 304, 307, 309, 317, 323, 325, 333], "directori": [0, 246, 247, 260, 279, 280, 281, 304, 306, 308, 309, 325, 339], "when": [0, 2, 14, 32, 36, 75, 99, 187, 304, 307, 309, 313, 316, 322, 323, 325, 329, 330, 336, 337, 339, 341, 343], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 275, 276, 311, 313, 317, 320, 322, 323, 328, 330, 337, 338, 342], "simpli": [0, 23, 309, 316, 317, 329], "seen": [0, 1, 2, 311, 313, 317, 320, 322, 328, 330, 337, 338, 342], "54": [0, 64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 328, 334, 336, 340], "doe": [0, 2, 53, 81, 104, 182, 230, 279, 280, 281, 286, 287, 304, 314, 317, 320, 322, 323, 328, 329, 336], "pk": [0, 2, 6, 41, 48, 77, 112, 129, 170, 230, 304, 306, 311, 320, 327, 328, 329, 330, 341, 342, 343], "pred": [0, 90, 166, 170, 174, 304, 326, 327, 336, 340], "simpl": [0, 1, 170, 228, 277, 327, 329, 330, 337], "merg": [0, 304, 309, 323], "placement": [0, 308], "place": [0, 2, 308, 323], "seem": 0, "restrict": [0, 281, 323], "automat": [0, 14, 33, 262, 304, 309, 311, 319, 323, 338, 343], "creat": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 32, 35, 44, 75, 77, 78, 80, 81, 99, 102, 103, 110, 125, 179, 193, 203, 214, 245, 246, 248, 260, 275, 276, 279, 280, 281, 282, 283, 284, 288, 289, 291, 293, 296, 302, 303, 304, 306, 308, 309, 311, 312, 313, 316, 317, 318, 320, 324, 328, 330, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344], "continu": [0, 2, 6, 18, 36, 304, 307, 309, 311, 318, 323, 333, 343], "factor": [0, 333], "compil": [0, 323], "11138": 0, "445": [0, 320], "though": [0, 323], "outsid": [0, 304, 307, 323, 342], "standard": [0, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 70, 242, 245, 285, 302, 304, 314, 318, 323, 327, 329, 333, 336, 338, 340, 343], "gfortran": 0, "8": [0, 2, 6, 52, 56, 57, 58, 59, 64, 67, 68, 69, 70, 93, 100, 105, 108, 121, 125, 158, 216, 253, 302, 303, 311, 313, 320, 322, 323, 324, 326, 327, 330, 334, 336, 337, 338, 339, 340, 342, 345], "hh": 0, "j": [0, 230, 232, 303, 318], "nep": 0, "h": [0, 306], "second": [0, 168, 306, 316, 329], "f": [0, 28, 40, 75, 136, 159, 170, 171, 177, 192, 194, 203, 214, 215, 219, 230, 242, 302, 304, 306, 310, 323, 325, 327, 329], "respect": [0, 2, 304, 307, 317, 318, 323, 327, 328, 329, 341], "ep": [0, 28, 170, 304, 306, 327, 329], "implicit": [0, 304], "kind": [0, 6, 8, 129, 311, 323], "dpsize": 0, "main": [0, 284, 306, 309, 333, 345], "function": [0, 3, 10, 14, 25, 33, 36, 37, 40, 60, 61, 80, 85, 86, 87, 89, 90, 91, 96, 97, 98, 113, 124, 130, 141, 145, 146, 154, 187, 192, 193, 194, 196, 205, 214, 215, 228, 234, 237, 238, 241, 246, 255, 266, 269, 285, 289, 302, 304, 306, 308, 309, 313, 314, 320, 322, 323, 325, 326, 328, 329, 332, 333, 336, 337, 338, 339, 343, 344, 345], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 25, 29, 30, 33, 42, 52, 63, 81, 88, 112, 126, 127, 131, 132, 134, 137, 138, 149, 150, 171, 187, 191, 192, 194, 203, 214, 215, 219, 261, 262, 285, 304, 306, 311, 313, 314, 320, 326, 333, 336, 344, 345], "doesn": [0, 28, 283, 304, 320], "t": [0, 6, 7, 8, 28, 33, 37, 75, 83, 114, 136, 159, 196, 209, 210, 215, 225, 233, 277, 283, 289, 291, 303, 304, 306, 318, 320, 325, 327, 334, 336, 342], "declar": [0, 2, 75, 160, 311, 343], "assign": [0, 6, 28, 75, 304, 306, 325], "stop": 0, "entri": [0, 230, 279, 282, 283, 286], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 23, 24, 25, 28, 60, 61, 75, 81, 109, 112, 113, 118, 124, 130, 134, 137, 138, 149, 160, 171, 186, 192, 194, 203, 214, 215, 219, 262, 304, 311, 314, 327, 333], "separ": [0, 2, 10, 79, 92, 161, 188, 229, 262, 281, 284, 304, 306, 309, 311, 313, 314, 318, 323, 333, 343], "thnn": 0, "nn": [0, 318], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 23, 25, 44, 182, 207, 230, 249, 304, 323, 327, 330], "ad": [0, 2, 9, 18, 33, 34, 36, 39, 47, 55, 92, 213, 266, 267, 269, 292, 304, 306, 311, 316, 322, 323, 329, 338, 339, 343], "x": [0, 1, 2, 24, 33, 75, 86, 87, 93, 103, 158, 189, 216, 302, 311, 313, 318, 320, 322, 326, 327, 328, 330, 331, 337, 338, 339, 342], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 25, 28, 112, 118, 172, 173, 174, 248, 262, 269, 270, 288, 304, 313, 327, 328, 337, 341, 343], "tool": [1, 2, 3, 14, 18, 51, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 86, 87, 88, 89, 90, 91, 177, 189, 190, 191, 240, 241, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 287, 290, 296, 301, 302, 304, 305, 306, 309, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 330, 332, 333, 337, 338, 341, 342, 344, 345], "add": [1, 9, 14, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 75, 92, 114, 196, 213, 214, 215, 292, 304, 306, 311, 316, 320, 323, 327, 328, 329, 331, 343], "allometr": [1, 2, 33, 261, 304, 306, 343], "scale": [1, 2, 6, 18, 33, 62, 65, 71, 191, 261, 270, 285, 304, 306, 318, 331, 343], "pharmr": [1, 2, 3, 304, 309, 311, 314, 317, 319, 320, 321, 322, 328, 337, 338, 341, 342, 344], "command": [1, 304, 309, 311, 317, 319, 320, 321, 322, 323, 327, 328, 338, 344], "line": [1, 75, 304, 311, 317, 319, 320, 321, 322, 323, 327, 328, 338, 344], "To": [1, 2, 306, 308, 309, 311, 317, 319, 320, 322, 323, 326, 327, 328, 330, 331, 337, 338, 342, 343, 345], "initi": [1, 2, 15, 18, 23, 24, 33, 39, 42, 43, 46, 47, 48, 49, 77, 79, 80, 88, 96, 97, 98, 114, 184, 192, 194, 201, 203, 204, 205, 209, 210, 214, 215, 217, 221, 224, 225, 231, 232, 233, 237, 238, 240, 241, 261, 262, 270, 272, 291, 304, 306, 311, 317, 318, 320, 322, 323, 325, 327, 328, 330, 337, 338, 341, 342, 343], "python": [1, 2, 303, 304, 306, 311, 313, 314, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 341, 342, 343, 344], "r": [1, 2, 14, 40, 288, 303, 304, 308, 311, 313, 314, 317, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 337, 338, 341, 342, 343, 344], "read_model": [1, 174, 304, 311, 313, 317, 320, 322, 325, 327, 328, 330, 337, 338, 341, 342, 345], "read_modelfit_result": [1, 304, 311, 317, 320, 322, 325, 326, 328, 330, 337, 338, 341, 342], "run_allometri": [1, 304], "start_model": [1, 275, 311, 317, 320, 322, 328, 330, 337, 338, 341, 342, 343], "start_model_result": [1, 311, 317, 320, 322, 328, 330, 337, 338, 341, 342, 343], "re": [1, 2, 246, 249, 257, 258, 259, 263, 264, 273, 280, 287, 290, 303, 311, 317, 320, 322, 326, 328, 330, 337, 338, 340, 341, 342, 343], "code": [1, 14, 18, 20, 75, 117, 118, 134, 141, 145, 146, 154, 170, 174, 214, 215, 244, 304, 310, 311, 316, 317, 320, 321, 322, 323, 327, 328, 329, 330, 332, 333, 338, 341, 342, 345], "redefin": [1, 311, 317, 320, 322, 328, 338], "accordingli": [1, 311, 317, 320, 322, 328, 329, 338], "descript": [1, 2, 6, 18, 29, 52, 275, 276, 277, 285, 301, 302, 304, 308, 311, 313, 316, 317, 320, 322, 328, 330, 337, 338, 339, 341, 342], "modelfitresult": [1, 2, 21, 247, 249, 250, 251, 252, 253, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 284, 304, 311, 317, 320, 322, 328, 330, 337, 338, 341, 342], "allometric_vari": [1, 2, 33, 261, 262, 306], "wt": [1, 28, 261, 264, 311, 339], "reference_valu": [1, 2, 33, 261, 306], "refer": [1, 30, 33, 75, 82, 153, 216, 259, 261, 262, 277, 304, 311, 323, 327, 329, 330, 341, 344, 345], "70": [1, 2, 33, 100, 261, 327, 336], "appli": [1, 2, 18, 34, 192, 194, 203, 214, 215, 231, 232, 233, 261, 304, 306, 307, 313, 318, 323, 327, 328, 336, 337, 341, 343], "all": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 24, 25, 27, 28, 29, 33, 39, 44, 46, 48, 52, 72, 75, 79, 82, 84, 92, 97, 98, 101, 103, 105, 106, 108, 111, 112, 115, 126, 129, 132, 133, 135, 136, 141, 145, 146, 150, 154, 157, 167, 169, 171, 179, 180, 187, 189, 190, 203, 208, 214, 216, 222, 229, 230, 231, 232, 233, 235, 236, 237, 238, 260, 261, 265, 266, 267, 269, 277, 279, 283, 285, 286, 288, 292, 297, 302, 303, 304, 306, 307, 309, 311, 312, 313, 314, 317, 318, 320, 322, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 337, 341, 343, 345], "cl": [1, 2, 4, 8, 24, 28, 33, 36, 39, 42, 47, 63, 75, 81, 83, 94, 112, 127, 129, 131, 136, 139, 150, 156, 159, 160, 161, 170, 171, 176, 179, 184, 201, 202, 206, 209, 210, 213, 217, 224, 228, 231, 232, 233, 261, 264, 311, 318, 320, 322, 325, 327, 329, 342], "q": [1, 33, 47, 184, 261, 304, 327], "v": [1, 8, 24, 28, 33, 37, 63, 75, 83, 95, 112, 129, 134, 136, 159, 160, 161, 163, 164, 165, 166, 170, 171, 179, 196, 201, 202, 206, 209, 210, 217, 224, 225, 228, 261, 264, 309, 311, 318, 322, 325, 327, 329, 340, 342, 343], "75": [1, 2, 33, 261, 311, 317], "lower_bound": [1, 2, 33, 261, 306], "lower": [1, 2, 6, 23, 24, 33, 36, 49, 73, 96, 97, 98, 126, 132, 133, 182, 205, 207, 208, 214, 222, 235, 238, 261, 262, 306, 314, 320, 325, 327, 337], "bound": [1, 23, 24, 33, 49, 74, 191, 208, 222, 231, 232, 233, 235, 241, 261, 279, 283, 286, 304, 306, 325, 337, 343], "upper_bound": [1, 2, 33, 261, 306], "upper": [1, 23, 24, 33, 36, 49, 96, 97, 98, 126, 132, 133, 182, 205, 208, 222, 235, 238, 261, 304, 306, 325, 327, 337], "should": [1, 6, 23, 33, 36, 39, 42, 49, 125, 188, 203, 261, 266, 267, 269, 304, 306, 307, 308, 309, 311, 314, 318, 320, 322, 323, 324, 328, 333, 338, 341, 343], "true": [1, 2, 6, 9, 10, 15, 18, 24, 33, 34, 40, 45, 55, 62, 72, 81, 84, 92, 96, 97, 98, 114, 118, 125, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 158, 176, 183, 190, 197, 199, 200, 203, 214, 215, 221, 236, 237, 238, 239, 240, 244, 249, 253, 261, 277, 278, 285, 304, 311, 313, 317, 320, 322, 325, 327, 328, 329, 330, 331, 337, 338, 339, 340, 342, 343, 345], "No": [1, 6, 230, 286, 287, 323, 328], "select": [1, 2, 188, 216, 231, 233, 276, 302, 304, 306, 311, 320, 322, 325, 328, 330, 331, 337, 338, 339, 341, 342, 343], "see": [1, 2, 6, 8, 18, 36, 39, 230, 253, 261, 262, 264, 266, 267, 269, 271, 272, 306, 307, 308, 309, 311, 313, 314, 316, 317, 320, 322, 323, 324, 325, 327, 328, 329, 330, 333, 337, 338, 341, 342, 343], "about": [1, 2, 6, 307, 311, 313, 317, 319, 320, 322, 323, 327, 328, 330, 337, 338, 341, 342, 343], "actual": [1, 2, 23, 161, 187, 311, 317, 320, 322, 323, 328, 330, 337, 338, 342], "minim": [1, 2, 304, 311, 317, 320, 322, 328, 330, 337, 338, 342, 343], "statu": [1, 2, 285, 304, 311, 314, 317, 320, 322, 323, 328, 330, 337, 338, 342], "time": [1, 2, 6, 7, 9, 10, 24, 28, 33, 42, 43, 75, 77, 84, 85, 93, 100, 107, 108, 115, 125, 136, 157, 158, 159, 160, 161, 162, 170, 171, 174, 181, 201, 204, 216, 217, 219, 221, 224, 234, 262, 271, 304, 306, 311, 313, 317, 318, 320, 322, 323, 325, 326, 328, 329, 330, 333, 336, 337, 338, 340, 341, 342, 343], "you": [1, 2, 308, 309, 311, 317, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 333, 337, 338, 342, 343, 344, 345], "look": [1, 2, 28, 53, 112, 150, 311, 316, 317, 320, 322, 328, 329, 330, 337, 338, 342, 343], "summary_model": [1, 2, 304, 311, 317, 320, 322, 328, 330, 337, 338, 342, 343], "tabl": [1, 2, 62, 170, 192, 230, 276, 285, 302, 303, 304, 309, 311, 312, 317, 318, 320, 322, 324, 327, 328, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343], "gener": [1, 2, 6, 32, 63, 66, 76, 80, 99, 162, 188, 189, 190, 191, 262, 270, 289, 291, 304, 306, 311, 313, 317, 318, 320, 321, 322, 327, 328, 330, 332, 333, 337, 338, 342, 343], "summarize_modelfit_result": [1, 2, 304, 311, 317, 320, 322, 328, 330, 337, 338, 342], "minimization_success": [1, 2, 249, 255, 262, 264, 266, 267, 269, 270, 271, 272, 277, 285, 311, 317, 320, 322, 328, 330, 337, 338, 341, 342, 343], "errors_found": [1, 2, 311, 317, 320, 322, 328, 330, 337, 338, 342], "pheno": [1, 8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 88, 93, 94, 95, 96, 97, 98, 100, 103, 105, 107, 108, 109, 111, 112, 114, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 253, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 319, 325, 326, 327, 329, 337], "phenobarb": [1, 170, 277, 327, 330, 337], "scaled_model": [1, 2], "warnings_found": [1, 2, 311, 317, 320, 322, 328, 330, 337, 338, 342], "ofv": [1, 2, 55, 168, 251, 255, 266, 267, 269, 275, 276, 277, 285, 304, 311, 317, 320, 322, 328, 330, 336, 337, 338, 342], "aic": [1, 54, 255, 266, 267, 269, 304, 320, 322, 328, 338], "bic": [1, 2, 55, 255, 266, 267, 269, 304, 306, 311, 320, 322, 328, 330, 338, 342, 343], "730": [1, 302, 318, 320, 324], "894727": [1, 318, 324], "740": [1, 88, 93, 107, 158, 216, 313, 327], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 277, 285, 311, 317, 320, 322, 328, 330, 337, 338, 342], "estimation_runtim": [1, 2, 285, 311, 317, 320, 322, 328, 330, 337, 338, 342], "_estim": [1, 320, 328], "32": [1, 2, 6, 64, 100, 105, 121, 253, 302, 303, 306, 311, 317, 324, 326, 327, 336, 337, 340], "005818": [1, 318], "121955": 1, "44555": [1, 318], "111053": [1, 318], "201526": [1, 318], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 318], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 254, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 302, 304, 311, 317, 318, 320, 322, 328, 330, 334, 337, 338, 341, 342, 343], "predict": [1, 2, 14, 18, 89, 90, 113, 118, 130, 163, 165, 166, 167, 251, 252, 253, 275, 285, 304, 311, 312, 320, 322, 328, 330, 336, 337, 338, 342], "influenti": [1, 2, 251, 252, 276, 304, 311, 320, 322, 328, 330, 337, 338, 342], "individu": [1, 2, 6, 18, 41, 62, 63, 64, 66, 79, 89, 90, 112, 113, 119, 120, 121, 125, 130, 167, 168, 169, 179, 189, 190, 191, 240, 251, 252, 253, 275, 276, 285, 304, 306, 311, 320, 322, 323, 327, 328, 330, 333, 336, 337, 338, 342], "outlier": [1, 2, 252, 253, 276, 304, 311, 320, 322, 328, 330, 337, 338, 340, 342], "summary_individuals_count": [1, 2, 311, 320, 322, 328, 330, 337, 338, 342], "summarize_individuals_count_t": [1, 2, 304, 311, 320, 322, 328, 330, 337, 338, 342], "parent_model": [1, 2, 18, 304, 311, 317, 320, 322, 328, 330, 337, 338, 342], "inf_select": [1, 2, 276, 311, 320, 322, 328, 330, 337, 338, 342], "inf_param": [1, 2, 276, 311, 320, 322, 328, 330, 337, 338, 342], "out_ob": [1, 2, 276, 311, 320, 322, 328, 330, 337, 338, 342], "out_ind": [1, 2, 276, 311, 320, 322, 328, 330, 337, 338, 342], "inf_outli": [1, 2, 276, 311, 320, 322, 328, 330, 337, 338, 342], "differ": [1, 2, 3, 18, 25, 55, 275, 277, 284, 302, 303, 304, 307, 308, 311, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 336, 337, 338, 339, 341, 342, 343, 345], "statist": [1, 6, 63, 66, 232, 311, 313, 318, 320, 322, 325, 328, 330, 337, 338, 342], "summary_individu": [1, 304, 311, 320, 322, 328, 330, 337, 338, 342], "summarize_individu": [1, 276, 304, 311, 320, 322, 328, 330, 337, 338, 342], "outlier_count": [1, 275, 311, 320, 322, 328, 330, 337, 338, 342], "dofv_vs_par": [1, 275, 311, 320, 322, 328, 330, 337, 338, 342], "id": [1, 2, 5, 6, 10, 16, 52, 64, 82, 84, 85, 93, 100, 103, 105, 107, 108, 111, 121, 125, 158, 170, 171, 174, 189, 216, 253, 303, 304, 306, 311, 313, 318, 320, 322, 324, 326, 327, 328, 329, 330, 337, 338, 340, 342], "nan": [1, 2, 103, 241, 302, 304, 311, 317, 318, 320, 322, 327, 328, 330, 336, 337, 338, 339, 342, 343], "742852": 1, "000000": [1, 2, 49, 56, 57, 58, 67, 311, 318, 320, 322, 326, 328, 330, 337, 338, 342], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 24, 42, 52, 64, 79, 87, 100, 103, 105, 107, 121, 182, 204, 207, 208, 218, 222, 226, 230, 232, 253, 270, 302, 303, 311, 313, 317, 318, 319, 320, 322, 323, 324, 326, 327, 328, 330, 334, 336, 337, 338, 339, 340, 342, 343], "092658": 1, "55": [1, 6, 64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 328, 330, 334, 336, 337, 340, 342], "6": [1, 6, 64, 88, 93, 100, 105, 121, 125, 158, 216, 253, 302, 303, 311, 313, 318, 320, 322, 323, 324, 326, 327, 328, 330, 336, 337, 338, 339, 340, 342], "535711": 1, "175743": 1, "56": [1, 64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 337, 340, 342], "764710": 1, "576072": 1, "57": [1, 64, 100, 105, 111, 121, 189, 253, 302, 303, 311, 317, 318, 324, 326, 327, 337, 340, 342], "975589": 1, "539779": 1, "58": [1, 64, 100, 105, 111, 121, 125, 189, 253, 302, 303, 318, 324, 326, 327, 337, 339, 340, 342], "194798": 1, "775689": 1, "59": [1, 64, 93, 100, 103, 105, 108, 111, 119, 121, 125, 158, 189, 216, 253, 302, 303, 311, 313, 317, 318, 324, 326, 327, 328, 337, 340], "11": [1, 2, 64, 86, 87, 89, 100, 103, 105, 107, 121, 253, 302, 303, 311, 318, 319, 320, 322, 323, 324, 326, 327, 328, 330, 334, 336, 339, 340, 342, 343, 345], "175577": 1, "462889": 1, "predicted_dofv": [1, 275, 276, 311, 320, 322, 328, 330, 337, 338, 342], "predicted_residu": [1, 275, 276, 311, 320, 322, 328, 330, 337, 338, 342], "118": [1, 52, 189, 304, 318, 342], "fulli": [2, 343], "best": [2, 304, 311, 320, 322, 323, 328, 330, 337, 338, 341, 342, 343], "dataset": [2, 10, 11, 12, 18, 32, 33, 35, 50, 52, 63, 72, 77, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 102, 103, 107, 110, 111, 116, 119, 120, 121, 125, 134, 153, 158, 162, 172, 182, 188, 195, 216, 230, 234, 239, 243, 262, 267, 303, 304, 306, 309, 318, 321, 322, 330, 340, 344], "combin": [2, 4, 79, 137, 138, 149, 152, 192, 194, 215, 229, 230, 268, 304, 306, 316, 317, 318, 320, 323, 327, 338, 341, 343], "ruvsearch": [2, 262, 271, 273, 304, 343], "covsearch": [2, 262, 264, 304, 343], "run_amd": [2, 304], "dataset_path": [2, 77, 327], "modeltyp": [2, 262, 306], "basic_pk": [2, 262, 306], "administr": [2, 5, 6, 16, 77, 99, 262, 304, 306, 316, 327], "oral": [2, 7, 77, 201, 262, 304, 306, 316, 327, 343], "search_spac": [2, 262, 269, 272, 304, 306, 328, 330, 341, 343], "let": [2, 14, 18, 82, 304, 311, 318, 327, 329, 343], "categor": [2, 6, 36, 304, 311, 313, 318, 343], "sex": [2, 307, 311, 333, 343], "ag": [2, 6, 264, 311, 339, 343], "occas": [2, 42, 262, 267, 304, 306, 322, 327], "visi": [2, 322], "c": [2, 9, 37, 40, 196, 232, 305, 310, 317, 318, 322, 323, 327, 329, 338, 343], "specifi": [2, 6, 9, 28, 33, 39, 47, 85, 96, 98, 172, 182, 184, 192, 194, 213, 214, 215, 230, 238, 245, 265, 304, 306, 308, 311, 316, 317, 322, 323, 325, 326, 341, 343], "iiv": [2, 17, 22, 25, 30, 39, 42, 46, 48, 55, 79, 112, 127, 150, 179, 203, 229, 262, 266, 267, 269, 304, 306, 311, 322, 325, 327, 343], "we": [2, 307, 309, 311, 318, 319, 321, 323, 325, 327, 329, 333, 345], "our": [2, 307, 309, 310, 323, 333], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 24, 25, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 61, 65, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 92, 93, 96, 97, 98, 103, 113, 124, 126, 130, 132, 133, 134, 136, 159, 160, 161, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 249, 250, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 296, 302, 304, 306, 308, 311, 313, 314, 317, 320, 322, 323, 327, 328, 329, 330, 333, 337, 338, 341, 342, 343, 344, 345], "build": [2, 262, 305, 306, 314, 327, 343], "current": [2, 25, 38, 39, 60, 61, 75, 76, 86, 87, 89, 90, 91, 113, 124, 130, 140, 153, 159, 193, 199, 200, 201, 206, 217, 228, 230, 234, 248, 250, 264, 268, 272, 283, 285, 293, 303, 304, 306, 309, 311, 312, 316, 318, 319, 321, 322, 323, 324, 325, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343], "pkpd": [2, 112, 262, 272, 304, 341, 342, 343], "drug_metabolit": [2, 262, 272, 316, 330, 341, 342, 343], "rout": [2, 262], "iv": [2, 77, 201, 262, 304, 306, 316, 343], "ivor": [2, 77, 262, 306, 316], "cl_init": [2, 77, 262, 306, 327], "popul": [2, 18, 28, 49, 88, 89, 90, 113, 130, 136, 241, 262, 285, 304, 306, 339], "clearanc": [2, 33, 77, 94, 262, 304, 306, 311, 322, 329], "01": [2, 17, 25, 36, 77, 214, 241, 262, 264, 306, 311, 327, 330, 336, 339], "vc_init": [2, 77, 262, 306, 327], "central": [2, 7, 8, 9, 28, 44, 47, 75, 77, 122, 136, 140, 142, 148, 159, 184, 201, 202, 204, 206, 209, 210, 213, 217, 221, 224, 225, 226, 228, 262, 306, 309, 314, 325, 327, 342], "compart": [2, 6, 8, 9, 31, 34, 35, 37, 43, 44, 47, 101, 102, 115, 122, 123, 135, 140, 142, 175, 181, 184, 201, 204, 213, 221, 226, 262, 304, 306, 316, 327, 328, 330, 342, 343], "volum": [2, 33, 47, 77, 95, 262, 304, 306, 311, 322, 323], "mat_init": [2, 77, 262, 306, 327], "absorpt": [2, 77, 129, 140, 142, 151, 153, 201, 206, 217, 221, 224, 248, 262, 269, 275, 304, 306, 316, 320, 322, 328, 341, 343], "b_init": [2, 262, 272, 330, 341], "baselin": [2, 37, 40, 100, 105, 157, 193, 196, 262, 272, 304, 318, 330, 341], "effect": [2, 33, 36, 37, 39, 40, 55, 106, 112, 139, 150, 176, 179, 193, 196, 214, 255, 262, 264, 304, 306, 314, 319, 323, 325, 327, 330, 333, 339, 341, 343], "emax_init": [2, 262, 272, 330, 341], "emax": [2, 37, 40, 46, 196, 330, 343], "ec50_init": [2, 262, 272, 330, 341], "ec50": 2, "met_init": [2, 262, 272, 330, 341], "equilibr": [2, 262, 330, 341], "mfl": [2, 248, 262, 264, 275, 304, 306, 311, 316, 328, 330, 341], "depend": [2, 6, 18, 28, 32, 35, 63, 79, 82, 99, 102, 112, 137, 138, 149, 192, 194, 203, 214, 215, 219, 304, 308, 311, 313, 320, 329, 343, 345], "lloq_limit": [2, 262, 306], "quantif": [2, 6, 182, 207, 230, 262, 306], "lloq_method": [2, 262, 306], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 38, 45, 52, 170, 174, 199, 200, 230, 262, 265, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 303, 304, 306, 311, 314, 323, 325, 327, 333, 337, 343, 345], "transform_blq": [2, 182, 207, 262, 304, 306, 327], "bodi": [2, 6, 10, 33, 307, 313, 323, 333], "weight": [2, 6, 10, 33, 91, 137, 138, 149, 152, 223, 242, 311, 313, 333, 338], "strict": [2, 249, 255, 262, 264, 266, 267, 269, 270, 271, 272, 304, 311, 320, 322, 323, 328, 330, 337, 338, 341, 342], "criteria": [2, 249, 255, 262, 264, 270, 272, 276, 304, 306, 311, 320, 322, 328, 330, 337, 338, 341, 342, 343], "rounding_error": [2, 249, 262, 264, 266, 267, 269, 270, 271, 272, 285, 311, 320, 322, 328, 330, 337, 338, 341, 342, 343], "sigdig": [2, 262, 264, 266, 267, 269, 270, 271, 272, 311, 320, 322, 328, 330, 337, 338, 341, 342, 343], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 23, 24, 25, 26, 28, 29, 30, 33, 38, 39, 42, 45, 47, 49, 53, 63, 66, 77, 79, 80, 82, 86, 87, 88, 89, 90, 91, 104, 109, 112, 137, 138, 149, 156, 158, 167, 172, 179, 180, 182, 183, 184, 188, 189, 190, 191, 192, 194, 203, 207, 212, 213, 214, 215, 218, 219, 220, 229, 230, 231, 232, 233, 239, 243, 247, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 279, 280, 283, 284, 285, 286, 288, 291, 292, 296, 304, 306, 308, 313, 318, 320, 322, 325, 327, 328, 342, 343], "mechanistic_covari": [2, 262], "prioritez": 2, "extract": [2, 33, 99, 102, 106, 110, 248, 262, 304, 306, 321, 325], "retries_strategi": [2, 262], "how": [2, 3, 14, 190, 262, 266, 269, 304, 306, 307, 309, 311, 313, 316, 319, 320, 322, 323, 325, 327, 328, 329, 337, 339, 344], "option": [2, 6, 9, 14, 18, 25, 36, 39, 42, 51, 55, 77, 79, 86, 87, 89, 90, 91, 112, 188, 191, 230, 248, 255, 262, 270, 272, 279, 283, 284, 286, 297, 302, 304, 306, 311, 316, 320, 322, 323, 325, 327, 328, 330, 341, 344, 345], "skip": [2, 262, 271, 306, 311, 338], "all_fin": [2, 262], "seed": [2, 26, 63, 66, 80, 189, 190, 191, 218, 262, 270, 306, 337], "random": [2, 3, 13, 17, 18, 22, 25, 26, 42, 55, 63, 66, 80, 82, 112, 127, 131, 134, 150, 187, 189, 190, 191, 218, 262, 270, 304, 306, 314, 318, 322, 327, 336, 337, 345], "step": [2, 14, 15, 18, 26, 37, 38, 40, 45, 51, 178, 183, 196, 199, 200, 218, 264, 277, 284, 285, 304, 306, 309, 311, 317, 319, 320, 322, 323, 328, 330, 333, 337, 338, 342, 345], "sampl": [2, 14, 25, 80, 187, 188, 189, 190, 191, 318, 337], "dv_type": [2, 220, 262, 272, 342], "dictionari": [2, 5, 10, 14, 16, 17, 22, 24, 25, 29, 86, 87, 89, 90, 91, 101, 106, 115, 188, 205, 208, 220, 222, 262, 272, 279, 280, 283, 286, 287, 288, 290, 291, 297, 325, 342], "dv": [2, 6, 10, 28, 75, 84, 85, 93, 100, 109, 112, 125, 136, 137, 138, 149, 158, 159, 165, 166, 167, 170, 171, 174, 192, 194, 203, 207, 209, 210, 214, 215, 216, 219, 220, 230, 262, 271, 272, 304, 313, 325, 327, 329, 340, 342], "g": [2, 18, 25, 75, 81, 180, 220, 269, 304, 309, 313, 317, 318, 320, 322, 328, 333, 338, 342, 343], "target": [2, 220, 339, 342], "kei": [2, 106, 275, 283, 323, 338, 342], "drug": [2, 8, 44, 148, 220, 304, 333, 341, 342, 343], "complex": [2, 304, 309, 319, 341, 342], "tmdd": [2, 220, 262, 272, 304, 341, 343], "correspond": [2, 9, 14, 18, 212, 303, 323, 325, 340, 343], "datainfo": [2, 18, 32, 35, 85, 158, 172, 195, 243, 304, 343, 344], "file": [2, 10, 18, 53, 78, 104, 170, 172, 173, 174, 243, 244, 245, 256, 257, 278, 279, 280, 281, 283, 286, 287, 288, 290, 291, 304, 306, 309, 311, 317, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 332, 337, 338, 341, 342, 343, 344], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 282, 284, 285, 288, 289, 290, 291, 304, 308, 311, 313, 323, 326, 327, 328, 344], "elimin": [2, 129, 141, 145, 146, 154, 202, 209, 210, 225, 248, 304, 306, 316, 328, 341, 342, 343], "vc": [2, 47, 184, 311, 320, 322, 327], "mat": [2, 48, 303, 304, 305, 310, 311, 320, 322, 327, 329, 338], "proport": [2, 39, 137, 138, 149, 152, 188, 192, 194, 214, 215, 230, 304, 306, 327], "foce": [2, 14, 15, 38, 45, 183, 199, 200, 304, 306, 317, 325, 327], "interact": [2, 14, 15, 38, 45, 170, 183, 199, 200, 304, 307, 317, 323, 325, 327, 333, 343, 345], "requir": [2, 75, 304, 306, 311, 319, 323, 336, 337], "cmt": [2, 32, 35, 99, 102, 304], "dose": [2, 5, 6, 7, 8, 9, 16, 32, 34, 35, 43, 92, 99, 101, 102, 107, 108, 114, 118, 142, 153, 175, 181, 201, 216, 219, 304, 313], "creation": [2, 318, 328], "easili": [2, 325], "differenti": [2, 83, 325], "admid": [2, 5, 6, 7, 8, 9, 16, 28, 32, 35, 47, 75, 99, 102, 136, 159, 184, 201, 202, 206, 209, 210, 213, 217, 221, 224, 225, 228, 325, 327], "data": [2, 6, 18, 30, 86, 87, 88, 89, 90, 91, 105, 118, 170, 171, 174, 182, 192, 194, 197, 207, 215, 230, 262, 276, 302, 304, 313, 318, 322, 323, 325, 327, 329, 330, 333, 342, 343], "well": [2, 63, 148, 230, 311, 317, 320, 322, 323, 327, 328, 330, 336, 337, 338, 341, 342, 343, 344], "anoth": [2, 9, 18, 28, 140, 293, 327, 341], "assum": [2, 25, 39, 44, 279, 304, 318, 323, 329], "correct": [2, 10, 304, 323, 327, 341, 345], "connect": [2, 8, 18, 44, 106, 122, 214, 270, 279, 281, 284, 292, 304, 306, 313, 316, 323, 330, 333, 343, 344], "along": [2, 323], "wai": [2, 24, 39, 141, 145, 146, 154, 230, 304, 309, 313, 317, 323, 325, 337, 343, 345], "specif": [2, 14, 18, 24, 51, 85, 188, 214, 246, 249, 304, 306, 311, 313, 323, 325, 328, 333, 341, 343], "support": [2, 8, 14, 18, 28, 38, 39, 60, 61, 76, 77, 86, 87, 89, 90, 91, 113, 124, 130, 137, 138, 149, 199, 200, 201, 206, 217, 230, 264, 271, 293, 304, 306, 311, 313, 314, 316, 317, 321, 323, 325, 326, 327, 328, 329, 330, 332, 335, 337, 341, 343], "nonmem": [2, 18, 75, 76, 85, 119, 120, 121, 212, 268, 304, 305, 309, 319, 321, 325, 326, 327, 333, 343], "rate": [2, 6, 8, 9, 16, 40, 47, 153, 201, 206, 217, 221, 224, 304, 306, 343], "via": [2, 304, 306, 308, 309, 319, 321, 325, 327, 329, 343, 345], "exclud": [2, 118, 275, 320, 322, 323, 328, 343], "pleas": [2, 309, 316, 319, 323, 325, 327, 341, 342, 343, 345], "featur": [2, 248, 309, 311, 316, 317, 320, 321, 322, 323, 330, 338, 341, 342, 344], "languag": [2, 117, 170, 248, 307, 311, 314, 323, 328, 341], "defin": [2, 8, 66, 118, 134, 140, 142, 151, 153, 161, 171, 230, 304, 311, 314, 323, 325, 340, 343], "fo": [2, 14, 38, 199, 200, 304, 306, 316, 317, 328, 333, 342, 343], "zo": [2, 269, 275, 304, 306, 328, 343], "seq": [2, 306, 328, 343], "lagtim": [2, 206, 217, 248, 304, 328, 343], "ON": [2, 323, 328, 343], "transit": [2, 8, 123, 140, 213, 221, 248, 304, 306, 328, 343], "peripher": [2, 8, 47, 122, 184, 213, 248, 269, 275, 304, 306, 316, 327, 328, 342, 343], "cat": [2, 36, 311, 343], "note": [2, 4, 6, 23, 35, 75, 76, 103, 112, 119, 120, 121, 214, 230, 277, 278, 279, 283, 286, 302, 313, 316, 320, 322, 326, 327, 329, 330, 339, 342], "overriden": 2, "ignor": [2, 9, 119, 120, 121, 170, 304, 306, 327, 329], "soon": 2, "explicitli": [2, 306, 322, 323], "stai": [2, 25], "vice": 2, "versa": 2, "instanc": [2, 139, 176, 311, 337, 343], "null": [2, 313, 320, 322, 328, 343, 345], "yield": [2, 162, 187, 188], "workflow": [2, 3, 258, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 304, 319, 321, 323, 328, 333, 343], "want": [2, 52, 307, 309, 311, 320, 321, 322, 323, 327, 328, 329, 332], "desir": [2, 286, 287], "subset": [2, 74, 189, 325, 330], "algorithm": [2, 264, 265, 266, 269, 275, 304, 306, 316, 333, 343], "six": 2, "below": [2, 6, 182, 207, 230, 308, 309, 316, 317, 320, 322, 323, 328, 330, 337, 338, 341, 342], "detail": [2, 230, 261, 264, 266, 267, 269, 271, 272, 317, 323, 325, 328, 330, 336, 338, 341, 343, 344], "regard": [2, 316, 323, 328, 330, 337], "subhead": 2, "distribut": [2, 17, 22, 25, 42, 47, 63, 66, 79, 129, 161, 169, 184, 187, 189, 190, 191, 229, 233, 267, 293, 302, 304, 306, 318, 323, 328, 336, 337, 341, 343], "metabolit": [2, 8, 44, 148, 304, 341, 343], "term": [2, 192, 304, 320, 323], "keep": [2, 14, 23, 182, 188, 266, 279, 304, 307, 314, 320, 323], "iov": [2, 25, 42, 112, 127, 150, 180, 267, 304, 306, 327, 336, 343], "explain": [2, 230, 311, 316, 323, 333, 343], "ruv": [2, 203, 306], "power": [2, 36, 214, 230, 306, 323, 327, 333, 334, 336, 338], "vari": [2, 157, 219, 271, 304, 306, 338], "identifi": [2, 6, 30, 311, 313, 320, 323, 336, 343], "stage": [2, 311], "reduced_stepwis": [2, 275, 304, 328, 343], "iiv_strategi": [2, 266, 269, 304, 306, 320, 328, 343], "absorption_delai": [2, 269, 304, 328, 343], "rank_typ": [2, 255, 266, 267, 269, 306, 320, 322, 328, 343], "mix": [2, 42, 55, 146, 210, 255, 304, 314, 319, 322, 325, 328, 333, 342, 343], "cutoff": [2, 219, 251, 252, 253, 255, 266, 267, 269, 304, 306, 320, 322, 328, 343], "implement": [2, 14, 37, 193, 196, 220, 279, 281, 283, 286, 316, 323, 325, 330, 333, 342, 343], "expect": [2, 14, 55, 63, 66, 307, 308, 323, 336], "pd": [2, 6, 15, 37, 40, 46, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 79, 82, 86, 87, 88, 89, 90, 91, 99, 100, 102, 103, 105, 107, 108, 110, 112, 116, 121, 125, 128, 162, 163, 164, 165, 166, 167, 168, 169, 172, 188, 189, 190, 191, 196, 240, 241, 251, 252, 253, 255, 274, 275, 276, 277, 282, 285, 304, 313, 330, 343], "brute_forc": [2, 266, 304, 320], "fullblock": [2, 266, 269, 304, 320, 328], "tri": [2, 306, 328], "list_of_paramet": [2, 39, 42, 267, 306, 322], "group": [2, 24, 30, 162, 167, 188, 271, 306, 321, 338], "p_valu": [2, 271, 306, 338], "05": [2, 47, 56, 57, 58, 59, 67, 68, 69, 70, 184, 302, 306, 311, 326, 327, 336, 339], "p_forward": [2, 264, 306, 311], "p_backward": [2, 264, 306, 311], "max_step": [2, 264, 306, 311], "scm": [2, 264, 304, 311, 333, 335], "forward": [2, 264, 304, 306, 311, 339], "backward": [2, 264, 277, 304, 306, 311, 339], "entir": [2, 307, 309, 323, 337, 343], "three": [2, 304, 314, 323, 329], "directli": [2, 44, 103, 142, 279, 283, 286, 304, 306, 314, 323, 325, 327, 333, 343], "due": [2, 304, 338, 341, 343], "miss": [2, 6, 100, 105, 304], "next": [2, 53, 304, 323, 327, 328, 329, 338], "mechanist": 2, "exploratori": [2, 311, 343], "remain": [2, 25, 93, 230, 307, 323], "chosen": [2, 203, 304, 316, 320, 327, 341, 343], "number_of_candid": [2, 270, 337], "fraction": [2, 7, 191, 270, 302, 318, 337], "ucp": [2, 65, 71, 191, 270], "prefix_nam": [2, 270, 337], "previous": [2, 63, 66, 167, 169, 304, 329], "variou": [2, 75, 230, 275, 276, 285, 304, 306, 307, 309, 311, 314, 317, 320, 321, 322, 328, 330, 333, 337, 338, 341, 342], "access": [2, 311, 313, 317, 320, 322, 323, 325, 327, 328, 329, 330, 337, 338, 341, 342, 343, 345], "json": [2, 10, 257, 259, 278, 288, 304, 306, 311, 313, 317, 320, 322, 328, 330, 337, 338, 341, 342, 343], "format": [2, 18, 76, 304, 306, 308, 311, 314, 317, 319, 320, 321, 322, 323, 325, 327, 328, 330, 332, 337, 338, 341, 342], "summary_tool": [2, 304, 311, 317, 320, 322, 328, 330, 337, 338, 342], "candid": [2, 269, 270, 304, 306, 311, 316, 317, 330, 337, 338, 341, 342, 343], "compar": [2, 255, 302, 304, 311, 317, 330, 333, 337, 338, 341, 342, 343], "rank": [2, 255, 266, 267, 269, 304, 306, 311, 330, 337, 338, 342, 343], "selected_model": 2, "modelsearch_run7": 2, "depot": [2, 7, 8, 9, 44, 140, 148, 201, 217, 221, 304, 327, 328, 343], "2364": 2, "853749": 2, "iivsearch_run34": 2, "mdt": [2, 304, 327], "2397": 2, "309843": 2, "best_ruvsearch_2": [2, 338], "time_varying2": [2, 338], "iiv_on_ruv": [2, 304, 334, 336, 338], "2496": 2, "804117": 2, "iovsearch_run6": [2, 322], "2619": 2, "709509": 2, "2645": 2, "684455": 2, "dofv": [2, 251, 252, 275, 302, 303, 304, 311, 334, 336, 337, 338], "n_param": [2, 311, 322, 330, 337, 338, 342], "d_param": [2, 311, 322, 330, 337, 338, 342], "456094": 2, "99": [2, 49, 133, 170, 241, 302, 311, 325, 327], "494274": 2, "122": 2, "905392": 2, "25": [2, 64, 86, 89, 90, 93, 100, 105, 108, 121, 158, 253, 302, 303, 311, 313, 320, 324, 326, 327, 328, 334, 336, 337, 338, 340, 342], "974946": 2, "modelsearch_run1": [2, 304], "modelsearch_run2": 2, "modelsearch_run3": 2, "modelsearch_run4": 2, "retries_run1": [2, 337], "retries_run2": [2, 337], "retries_run3": [2, 337], "retries_run4": [2, 337], "retries_run5": [2, 337], "fals": [2, 6, 9, 13, 14, 17, 18, 22, 23, 24, 30, 34, 36, 38, 40, 44, 49, 55, 62, 72, 74, 81, 84, 92, 96, 97, 98, 114, 118, 125, 126, 132, 133, 136, 137, 138, 139, 145, 146, 149, 150, 152, 153, 154, 155, 156, 176, 188, 190, 197, 205, 208, 214, 221, 222, 235, 237, 238, 240, 241, 243, 248, 249, 253, 262, 277, 278, 280, 285, 288, 296, 303, 311, 313, 317, 325, 327, 329, 331, 339, 340, 342, 343], "2272": 2, "860804": 2, "35": [2, 64, 93, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 338, 340], "2091": 2, "335594": 2, "332746": 2, "516": 2, "332840": 2, "1089": 2, "2032": 2, "002236": 2, "2700": 2, "2530": 2, "976558": 2, "1663": 2, "2476": 2, "102607": 2, "2178": 2, "2600": 2, "287460": 2, "3740": 2, "2123": 2, "583364": 2, "2210": 2, "pop_cl_estim": [2, 311, 317, 322, 338, 342], "40": [2, 64, 93, 100, 103, 105, 121, 125, 158, 182, 216, 253, 302, 303, 313, 317, 324, 326, 327, 337, 339, 340], "63140": 2, "91": [2, 334, 336], "36500": 2, "505": 2, "27": [2, 64, 100, 105, 121, 125, 253, 302, 303, 311, 320, 322, 324, 326, 327, 328, 330, 338, 340], "36780": 2, "1078": 2, "46": [2, 64, 93, 100, 105, 121, 253, 302, 303, 317, 324, 326, 327, 340], "37230": 2, "2687": 2, "82": 2, "91807": 2, "1651": 2, "66": [2, 311, 334], "09260": 2, "2166": 2, "09": [2, 39, 46, 48, 194, 203, 215, 311, 320, 327, 328, 329, 330, 334], "88190": 2, "3728": 2, "76": [2, 311, 342], "26100": 2, "2196": 2, "26": [2, 64, 100, 105, 121, 253, 302, 303, 311, 322, 324, 326, 327, 336, 339, 340, 342], "26170": 2, "pop_cl_s": [2, 342], "pop_cl_rs": [2, 342], "pop_vcage_rs": 2, "pop_clsex_estim": [2, 311], "pop_clsex_s": 2, "pop_clsex_rs": 2, "pop_mdtsex_estim": 2, "pop_mdtsex_s": 2, "pop_mdtsex_rs": 2, "pop_vcsex_estim": [2, 311], "pop_vcsex_s": 2, "pop_vcsex_rs": 2, "127": [2, 6, 320], "dbic": [2, 304, 320, 322, 328, 330, 342], "summary_error": [2, 311, 317, 320, 322, 328, 330, 337, 342], "summarize_error": [2, 304, 311, 317, 320, 322, 328, 330, 337, 342], "datafram": [2, 6, 15, 18, 24, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 79, 82, 86, 87, 89, 90, 91, 100, 103, 105, 162, 163, 164, 165, 166, 167, 169, 172, 188, 189, 190, 191, 240, 251, 252, 253, 255, 274, 275, 276, 277, 282, 285, 288, 304, 313, 333, 337], "messag": [2, 282, 304, 306, 311, 317, 320, 322, 328, 330, 337, 342], "index": [2, 10, 18, 24, 25, 28, 38, 51, 52, 63, 66, 73, 74, 108, 125, 178, 199, 200, 264, 274, 277, 288, 303, 304, 318, 319, 325, 327, 337, 339, 345], "categori": [2, 6, 18, 36, 42, 171, 274, 306, 311, 316, 317, 320, 322, 328, 330, 337, 342, 343], "error_no": [2, 311, 317, 320, 322, 328, 330, 337, 342], "plot": [2, 163, 164, 165, 166, 167, 168, 169, 304, 318, 324, 333], "found": [2, 8, 24, 112, 274, 292, 302, 303, 304, 309, 312, 315, 318, 319, 320, 322, 323, 325, 326, 328, 336, 337, 338, 341, 343, 344, 345], "report": [2, 245, 304, 309, 321, 333], "panda": [2, 6, 10, 304, 313, 314, 333], "io": [2, 309, 314, 319], "style": 2, "styler": 2, "0x7fb8c48b03d0": 2, "nbsp": 2, "rse": [2, 302, 326, 343], "pop_cl": [2, 4, 302, 327], "0637": 2, "pop_vc": [2, 327], "6158": 2, "pop_mat": [2, 48, 327, 329], "0313": 2, "pop_qp1": [2, 327], "108": [2, 93, 108, 158, 216, 313, 326, 327], "3610": 2, "pop_vp1": [2, 327], "2972": 2, "pop_mdt": [2, 327], "9278": 2, "time_vari": [2, 219, 336, 338], "2106": 2, "iiv_vc": [2, 327], "1818": 2, "iiv_cl": [2, 17, 22, 25, 327, 329], "2668": 2, "iiv_cl_iiv_mdt": 2, "1068": 2, "iiv_mdt": 2, "3711": 2, "iiv_ruv1": 2, "1777": 2, "omega_iov_2": 2, "1395": 2, "1436": 2, "alt": [2, 163, 164, 165, 166, 167, 168, 169, 302, 318, 324], "layerchart": [2, 302, 324], "page": [3, 303, 305, 309, 317, 328, 329, 341], "public": [3, 314], "modul": [3, 8, 304, 308, 313, 325, 327, 332, 345], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 304, 313, 319, 323, 325, 327, 343], "relat": [3, 279, 283, 284, 286, 304, 307, 339], "statement": [3, 4, 8, 18, 33, 34, 36, 37, 39, 41, 42, 46, 47, 48, 75, 136, 159, 160, 161, 177, 179, 184, 185, 192, 193, 194, 196, 201, 202, 203, 206, 209, 210, 213, 214, 215, 217, 219, 221, 224, 225, 228, 230, 231, 232, 233, 242, 249, 304, 306, 311, 316, 323, 327, 333, 343], "transform": [3, 18, 34, 169, 192, 194, 197, 215, 230, 231, 232, 233, 304, 306, 319, 328, 329, 336, 337, 344], "manipul": [3, 24, 313, 321, 327, 329, 344], "built": [3, 159, 250, 306, 309, 316, 321], "run": [3, 79, 167, 169, 182, 214, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 283, 290, 302, 303, 304, 312, 319, 321, 323, 324, 326, 332, 333, 336, 339, 340, 345], "packag": [3, 306, 314, 319, 321, 323, 331, 345], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 25, 28, 39, 60, 61, 63, 88, 93, 101, 113, 115, 124, 130, 134, 156, 192, 194, 204, 207, 214, 215, 226, 227, 304, 306, 307, 323, 325, 333, 340], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 307, 309, 321, 323, 325], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 42, 52, 99, 255, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 304, 310, 311, 316, 318, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 336, 337, 338, 339, 341, 342], "represent": [4, 248, 291, 313, 319, 329], "togeth": [4, 25, 206, 217, 309, 314, 318, 324, 338, 345], "sympi": [4, 6, 8, 17, 22, 25, 28, 33, 63, 88, 109, 112, 124, 134, 135, 137, 138, 149, 156, 192, 194, 203, 204, 207, 214, 215, 219, 226, 314, 325, 333], "str": [4, 6, 7, 8, 10, 17, 18, 22, 23, 25, 28, 30, 33, 36, 37, 38, 39, 40, 41, 42, 45, 47, 49, 52, 55, 63, 76, 77, 81, 82, 84, 88, 93, 97, 104, 109, 112, 117, 127, 128, 129, 131, 134, 137, 138, 139, 149, 150, 156, 159, 162, 168, 169, 172, 173, 174, 176, 179, 180, 182, 184, 188, 191, 192, 193, 194, 196, 198, 199, 203, 204, 207, 211, 212, 213, 214, 215, 219, 220, 226, 229, 230, 231, 232, 233, 236, 237, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 293, 301, 304], "expr": [4, 9, 25, 28, 33, 37, 40, 93, 124, 156, 193, 196, 204, 226, 227], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 25, 28, 307, 323, 333], "hand": [4, 8, 63], "side": [4, 8, 63, 197], "eta_cl": [4, 39, 42, 327, 329], "rhs_symbol": [4, 8, 27], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 280, 282, 284, 288, 289, 291], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 280, 282, 288], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 35, 53, 187, 188, 198, 216, 228, 230, 289, 291, 292, 304, 306, 313, 314, 327, 329, 341], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 38, 199, 246, 255, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 286, 287, 288, 289, 291, 304], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28, 325], "substitut": [4, 5, 7, 8, 16, 17, 22, 25, 27, 28, 323, 327], "dict": [4, 5, 6, 10, 16, 17, 22, 24, 25, 28, 51, 65, 86, 87, 89, 90, 91, 96, 98, 101, 114, 115, 169, 186, 205, 208, 216, 220, 222, 238, 262, 272, 279, 280, 283, 286, 287, 290, 291, 297, 313, 325], "old": [4, 28, 186, 304, 336], "new": [4, 6, 9, 10, 14, 17, 22, 23, 24, 25, 26, 28, 29, 34, 39, 42, 46, 48, 49, 76, 80, 81, 92, 96, 97, 98, 125, 186, 187, 188, 192, 194, 203, 205, 207, 211, 214, 215, 237, 238, 241, 292, 293, 306, 307, 309, 311, 313, 323, 327, 328, 332, 336, 337, 338, 343], "pair": [4, 5, 8, 16, 17, 22, 25, 28, 36, 73, 216, 275, 306], "return": [4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 286, 288, 291, 293, 296, 297, 304, 323, 327, 337, 341], "updat": [4, 9, 10, 18, 24, 28, 204, 226, 240, 241, 243, 270, 304, 306, 309, 321, 323, 327, 328, 329, 333, 338, 344, 345], "b": [4, 37, 40, 128, 193, 196, 323, 328, 343], "to_dict": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 280, 282, 288], "amount": [5, 6, 7, 8, 16, 37, 114, 304, 313, 316, 325, 328], "int": [5, 8, 9, 16, 28, 33, 38, 44, 51, 52, 55, 63, 66, 74, 80, 107, 109, 112, 119, 120, 122, 123, 137, 138, 149, 178, 182, 188, 189, 190, 191, 192, 194, 199, 200, 203, 213, 214, 215, 218, 219, 221, 262, 263, 264, 268, 270, 271, 274, 285, 342], "amt": [5, 7, 8, 10, 16, 28, 33, 47, 75, 84, 85, 93, 100, 108, 114, 136, 158, 159, 160, 161, 170, 171, 184, 201, 202, 206, 209, 210, 213, 216, 217, 221, 224, 225, 228, 313, 325, 327, 329], "unknown": [6, 156, 313], "unit": [6, 18, 134, 337], "ratio": [6, 264, 271, 304, 306, 313, 338], "datatyp": [6, 18, 172], "float64": [6, 10, 62, 69, 70, 73, 88, 89, 90, 91, 108, 125, 250, 313, 325, 326, 327], "descriptor": [6, 10, 18, 33], "immut": [6, 10, 13, 15, 18, 23, 24, 25, 27, 28, 29, 30, 284, 288, 289, 291, 304, 327], "colum": 6, "measur": [6, 307, 313, 323], "bool": [6, 9, 18, 23, 30, 33, 34, 36, 40, 44, 49, 55, 62, 72, 74, 81, 84, 92, 114, 118, 125, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 188, 190, 203, 214, 215, 221, 240, 241, 243, 244, 249, 261, 262, 277, 278, 280, 285, 288, 296], "discret": [6, 313, 322], "union": [6, 109, 112, 137, 138, 149, 169, 192, 194, 203, 204, 214, 215, 219, 226], "tupl": [6, 7, 8, 25, 106, 162, 188, 289, 297], "label": [6, 304], "bar": [6, 318], "dtype": [6, 10, 52, 62, 65, 69, 70, 73, 74, 88, 89, 90, 91, 107, 108, 121, 125, 250, 313, 326, 327], "nomin": [6, 313], "ordin": [6, 313], "rang": [6, 82, 288, 343], "na": [6, 230], "int8": 6, "sign": [6, 232, 323], "bit": 6, "128": 6, "int16": 6, "16": [6, 64, 87, 100, 105, 121, 215, 233, 253, 302, 303, 311, 320, 322, 323, 324, 326, 327, 334, 336, 338, 339, 340, 342], "768": 6, "767": 6, "int32": [6, 10, 52, 313], "147": 6, "483": 6, "648": 6, "647": [6, 320], "int64": [6, 121, 327], "64": 6, "223": [6, 312], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 334, 342], "uint16": 6, "65": [6, 311, 342], "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "18": [6, 64, 87, 93, 100, 105, 121, 253, 302, 303, 311, 320, 322, 324, 326, 327, 334, 336, 340], "446": 6, "744": [6, 88, 93, 107, 158, 216, 313, 326, 327], "073": 6, "709": 6, "551": 6, "615": [6, 334, 342], "float16": 6, "binari": [6, 323], "float": [6, 23, 33, 39, 46, 48, 49, 54, 55, 73, 74, 77, 169, 182, 191, 207, 214, 219, 230, 251, 252, 253, 255, 261, 262, 264, 266, 267, 269, 270, 271, 272, 285, 304], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 85, 234, 304, 306, 325], "tran": [6, 85, 234, 304, 306, 325], "date": [6, 82, 85, 234, 304, 306, 323, 345], "common": [6, 36, 66, 297, 323, 344], "birth": 6, "human": [6, 288, 333], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 313, 333], "concentr": [6, 40, 103, 313, 333], "substanc": 6, "blood": 6, "subject": [6, 14, 100, 111, 276, 313, 323], "uniqu": [6, 30, 53, 81, 188, 279, 293, 304, 306, 327, 343], "interv": [6, 313, 314], "ration": 6, "max": [6, 36, 37, 40, 196, 209, 210, 302, 327, 330, 341], "idv": [6, 10, 52, 125, 164, 219, 313, 336], "independ": [6, 8, 52, 313, 323, 325, 327, 331, 336, 343], "dvid": [6, 18, 44, 93, 109, 112, 137, 138, 149, 192, 194, 198, 203, 214, 215, 219, 316, 325, 330, 334, 336, 338], "infus": [6, 153, 217, 224, 304, 327], "addit": [6, 36, 39, 51, 55, 81, 92, 137, 138, 149, 152, 192, 194, 215, 230, 304, 306, 311, 313, 317, 323, 336, 338, 343], "interdos": 6, "ss": 6, "steadi": [6, 220, 304, 342], "state": [6, 24, 36, 220, 304, 323, 330, 339, 341, 342, 343], "event": [6, 32, 99, 110, 216, 234, 304, 307, 323], "mdv": [6, 116, 304], "yet": [6, 343], "exactli": 6, "lloq": [6, 182, 207, 230, 262, 304, 306, 327], "blq": [6, 182, 207, 230, 271, 304], "unkown": 6, "hasn": 6, "custom": [6, 36, 39, 42, 203, 306, 323, 333], "physic": [6, 134, 307, 313, 323], "recogn": [6, 212, 307, 323, 329], "without": [6, 9, 60, 61, 86, 87, 89, 90, 91, 113, 124, 130, 188, 281, 302, 304, 306, 309, 314, 316, 323, 325], "static": [6, 10, 18, 289], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 25, 28, 31, 76, 136, 161, 221, 288, 304, 306, 343], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 23, 25, 72, 73, 74, 109, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 304, 325, 327, 329, 330, 337, 343, 345], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 304, 306, 333], "properti": [6, 14, 17, 22, 23, 24, 26, 29, 323, 325], "lag_tim": [7, 9, 304], "bioavail": [7, 9, 34, 101, 175, 304, 343], "compartment": [7, 8, 31, 304, 306, 325], "system": [7, 8, 9, 28, 31, 60, 61, 63, 83, 86, 87, 89, 90, 91, 113, 114, 124, 130, 140, 142, 143, 144, 147, 148, 151, 153, 204, 226, 228, 283, 304, 306, 308, 309, 316, 321, 323, 325, 329], "lag": [7, 9, 43, 115, 181, 304], "enter": [7, 323], "bolu": [7, 8, 28, 47, 75, 136, 159, 184, 201, 202, 206, 209, 210, 213, 221, 225, 228, 304, 306, 325, 327], "comp": [7, 8, 304], "a_centr": [7, 8, 28, 37, 75, 83, 114, 136, 159, 196, 204, 209, 210, 215, 225, 325, 327], "alag": [7, 304], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 343], "builder": [8, 9, 291, 292], "graph": [8, 291, 306, 309, 316, 341], "od": [8, 28, 31, 48, 60, 61, 63, 86, 87, 89, 90, 91, 113, 114, 124, 130, 140, 142, 143, 144, 147, 151, 153, 204, 212, 226, 228, 304, 306], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 221, 343], "k21": [8, 343], "vector": [8, 17, 135, 189, 190, 191, 303, 318, 325], "load_example_model": [8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 103, 105, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 253, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 304, 319, 326, 327], "pprint": [8, 124], "ode_system": [8, 28, 37, 47, 184, 201, 202, 206, 209, 210, 213, 217, 221, 224, 225, 228, 304, 325, 327], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 47, 140, 148, 291, 323, 328], "compartment_nam": 8, "compartmental_matrix": [8, 325], "matrix": [8, 14, 17, 25, 56, 57, 58, 59, 63, 66, 67, 68, 69, 70, 73, 135, 189, 190, 191, 226, 285, 303, 304, 306, 318, 325, 327, 337, 343], "set_first_order_absorpt": [8, 48, 206, 217, 224, 304, 327], "dosing_compart": 8, "receiv": [8, 323], "equat": [8, 63, 83, 325, 327], "zero_order_input": 8, "zero": [8, 9, 74, 135, 151, 153, 154, 161, 204, 217, 224, 225, 226, 304, 322, 327, 328, 331, 343], "set_zero_order_absorpt": [8, 201, 206, 217, 304, 327, 345], "atom": 8, "http": [8, 303, 313, 314, 318, 319, 323, 338], "doc": [8, 309], "org": [8, 303, 305, 313, 318, 323, 338], "latest": [8, 304, 314, 319], "core": [8, 319, 325], "html": [8, 245, 314, 323], "basic": [8, 77, 78, 288, 304, 313, 316, 323, 329, 343, 344], "find_compart": [8, 9, 37], "its": [8, 23, 28, 74, 82, 161, 275, 304, 306, 311, 313, 314, 319, 321, 323, 325, 327, 341, 343, 345], "find_depot": 8, "out": [8, 25, 40, 72, 241, 304, 323, 325, 332, 337, 345], "outflow": 8, "unidirect": [8, 44, 140], "find_peripheral_compart": 8, "perihper": 8, "associ": [8, 307, 322, 323], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 23, 25, 187, 229, 234, 247, 268, 274, 277, 279, 304, 306, 311, 314, 316, 318, 323, 343], "distinguish": [8, 323], "get_bidirect": 8, "bidirect": 8, "interest": [8, 63, 307, 311, 323, 333], "get_compartment_inflow": 8, "go": [8, 137, 138, 149, 268, 277, 304, 313, 323, 327], "inflow": 8, "get_compartment_outflow": 8, "get_flow": 8, "destin": [8, 9, 243, 244, 279, 283, 286, 306], "ka": [8, 9, 41, 201, 217, 304, 322, 327], "get_n_connect": 8, "compartmentalsystem": [9, 28, 304, 325], "newli": [9, 25, 322], "move_dos": 9, "move": [9, 241, 304], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 175], "set_dos": 9, "previou": [9, 23, 25, 28, 43, 79, 107, 136, 201, 217, 221, 224, 262, 276, 296, 304, 306, 323, 328], "exist": [9, 10, 28, 33, 35, 36, 51, 53, 78, 81, 104, 107, 230, 279, 280, 281, 304, 306, 308, 313, 322, 342, 343], "argument": [9, 38, 86, 87, 89, 90, 91, 112, 199, 246, 255, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 289, 304, 306, 343, 345], "set_input": 9, "set_lag_tim": [9, 304], "force_absolute_path": 10, "sequenc": [10, 15, 24, 25, 28, 79], "metadata": [10, 279, 280, 283, 286, 287, 290, 304], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 82], "idv_column": 10, "apgr": [10, 28, 33, 36, 75, 84, 85, 93, 100, 105, 118, 136, 139, 158, 159, 160, 161, 170, 171, 216, 236, 313, 318, 325, 327, 329, 336], "fa1": [10, 84, 85, 93, 100, 158, 170, 171, 216, 313, 327], "fa2": [10, 84, 85, 93, 100, 158, 170, 171, 216, 313, 327], "example_model": 10, "dta": [10, 170, 327, 329], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "read_json": 10, "read": [10, 172, 173, 174, 256, 257, 262, 278, 279, 280, 283, 286, 287, 290, 304, 308, 313, 319, 323, 326, 332, 333, 335, 343, 344], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 288, 313], "recover": 12, "issu": [12, 21, 304, 309, 321, 345], "hashabl": 13, "level": [13, 17, 22, 25, 29, 30, 112, 150, 230, 304, 306, 313, 321, 327, 333, 339, 343, 344], "variabilitylevel": 13, "parameter_nam": [13, 25, 97, 235, 237, 304, 329], "definit": [13, 14, 18, 26, 28, 64, 190, 191, 253, 304, 306, 311, 318, 323, 325, 337, 343], "varianc": [13, 17, 22, 25, 62, 63, 66, 187, 203, 241, 320, 325, 337, 343], "abstract": [13, 27, 283, 290, 303, 305, 314, 321, 325], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 25], "name1": [13, 17, 22, 168], "name2": [13, 17, 22, 168], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 325, 327], "parameter_uncertainty_method": [14, 15, 38, 45, 183, 199, 200, 265, 325, 327], "evalu": [14, 38, 86, 87, 88, 89, 90, 91, 199, 200, 249, 265, 277, 285, 302, 304, 321, 325, 327, 333, 336, 340, 343], "maximum_evalu": [14, 317, 325, 327], "laplac": [14, 38, 199, 200, 304, 306, 317, 325, 327], "isampl": [14, 38, 51, 199, 304, 317, 325, 327], "niter": [14, 38, 51, 199, 304, 317, 325, 327], "auto": [14, 15, 304, 317, 325, 327], "keep_every_nth_it": [14, 15, 304, 317, 325, 327], "residu": [14, 25, 91, 132, 163, 164, 252, 253, 275, 285, 304, 338, 340, 343], "solver": [14, 26, 212, 218, 265, 304, 306, 343], "solver_rtol": [14, 26, 218], "solver_atol": [14, 26, 218], "tool_opt": [14, 15, 26, 38, 51, 199, 218, 325, 327, 343], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 26, 36, 39, 76, 82, 106, 285, 286, 287, 306, 308, 309, 311, 314, 323, 325, 327, 332, 343], "epsilon": [14, 25, 60, 61, 86, 87, 171, 203, 214, 223, 230, 242, 304, 306, 314, 327], "calcul": [14, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 88, 103, 255, 302, 303, 304, 318, 320, 321, 322, 328], "deriv": [14, 26, 134, 304, 309, 311, 327, 330, 341], "eta": [14, 25, 28, 39, 42, 60, 61, 62, 64, 79, 86, 87, 89, 161, 169, 170, 171, 174, 179, 180, 203, 229, 231, 232, 233, 285, 304, 306, 314, 318, 320, 322, 325, 329, 336, 343], "preserv": [14, 25, 323], "comput": [14, 309, 310, 311, 323, 337, 341], "similar": [14, 302, 317, 323, 328, 337, 338], "em": 14, "result": [14, 18, 25, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 79, 86, 87, 88, 89, 90, 91, 189, 190, 191, 240, 241, 245, 246, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 286, 287, 290, 293, 296, 304, 307, 309, 321, 323, 329, 332, 333, 335, 344], "everi": [14, 230, 313, 323], "nth": 14, "iter": [14, 15, 28, 63, 162, 188, 190, 271, 285, 304, 327, 334, 337, 338], "laplacian": 14, "uncertainti": [14, 45, 63, 64, 66, 183, 189, 190, 191, 265, 304, 306, 318, 326], "sandwich": [14, 15, 45, 199, 200, 325], "cross": [14, 323], "product": [14, 40, 307, 317, 323, 330, 343], "gradient": [14, 60, 61, 86, 87, 285, 304, 343], "fim": 14, "design": [14, 310, 323, 325, 333, 343], "append": [14, 51, 304], "uncondit": [14, 170, 327], "regardless": [14, 214, 307, 323, 325], "termin": [14, 285, 323, 342, 343], "print": [14, 72, 170, 171, 254, 288, 304, 327], "eigenvalu": [14, 144], "precond": 14, "precondit": 14, "cycl": 14, "supported_method": [14, 317], "frozenset": 14, "bay": [14, 199, 200, 306], "imp": [14, 38, 199, 200, 265, 304, 306, 317, 327], "impmap": [14, 38, 199, 200, 304, 306], "ITS": [14, 38, 199, 200, 304, 306, 322, 328, 330], "saem": [14, 38, 199, 200, 265, 304, 306], "supported_parameter_uncertainty_method": 14, "cpg": 14, "efim": 14, "ofim": 14, "to_datafram": [15, 24, 282], "overview": [15, 282, 302, 306, 315, 325, 339], "estimation_step": [15, 18, 38, 45, 51, 178, 183, 199, 200, 218, 304, 325, 327], "doctest": 15, "ellipsi": 15, "durat": [16, 217, 224, 327], "mutual": [16, 322, 343], "exclus": [16, 323, 343], "d1": [16, 217, 224, 304, 327], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 25, 42, 79, 229, 318, 322, 327], "omega_cl": [17, 22, 25], "omega_v": [17, 25], "corr_cl_v": [17, 25], "omega_cl_v": [17, 25], "dist": [17, 22, 25, 304, 309, 325], "iiv_v": [17, 25], "itself": [17, 22, 323], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 25], "random_vari": [18, 79, 229, 325, 327, 345], "dependent_vari": [18, 304, 325], "y": [18, 24, 28, 75, 109, 134, 136, 159, 170, 171, 174, 177, 192, 194, 203, 214, 215, 219, 230, 242, 325, 327, 329], "observation_transform": [18, 304], "estimationstep": [18, 38, 45, 183, 199, 200, 304, 317, 325], "modelfit_result": [18, 253, 277, 284, 304], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 304, 309, 325, 329, 333], "map": [18, 31, 313], "extens": [18, 279, 281, 313, 323, 325], "model_cod": [18, 304], "modelfit": [18, 250, 268, 277, 279, 283, 284, 285, 286, 302, 304, 306, 344], "parent": [18, 275, 276, 284, 293, 316, 317, 341], "randomvari": [18, 304, 325], "likelihood": [18, 54, 55, 230, 264, 271, 306, 338], "2ll": [18, 54, 55, 304], "log": [18, 36, 37, 39, 55, 161, 192, 194, 196, 197, 215, 284, 285, 304, 313, 318], "record": [18, 52, 86, 87, 88, 89, 90, 91, 92, 162, 182, 207, 285, 304, 309, 329], "would": [18, 30, 161, 302, 311, 316, 318, 323, 327, 329, 333], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 304, 321, 329, 332, 343], "parse_model_from_str": 18, "update_sourc": [18, 304, 329], "dummypath": [18, 327], "write_fil": 18, "forc": [18, 25, 81, 190, 191, 240, 243, 244, 304, 306, 322, 323], "write": [18, 243, 244, 278, 304, 309, 310, 311, 323, 332, 344], "extern": [18, 256, 309, 313, 314, 319, 332, 333], "msg": 20, "syntax": [20, 304, 343], "normal": [22, 25, 30, 42, 65, 71, 161, 187, 191, 270, 318, 322, 323], "init": [23, 24, 36, 49, 98, 205, 238, 241, 306, 318, 325, 337], "inf": [23, 327], "param": [23, 306], "tvcl": [23, 28, 33, 39, 42, 75, 88, 136, 159, 160, 161, 170, 171, 179, 318, 325, 327, 329], "005": 23, "boolean": [23, 24, 92, 97, 98, 188, 197, 203, 237, 238, 251, 252, 253, 313, 343], "constrain": [23, 314, 325], "unfix": [23, 96, 97, 98, 205, 235, 237, 238, 304], "back": [23, 71, 304], "less": [23, 342], "greater": [23, 343], "altern": [23, 232, 309, 323, 342], "constructor": [23, 304], "collect": [24, 25, 318, 323, 343], "usual": [24, 309], "displai": [24, 83, 192, 304, 318, 323], "summar": [24, 274, 276, 277, 318, 324], "par1": 24, "par2": 24, "pset": 24, "fixed": [24, 96], "nonfix": 24, "set_fix": 24, "set_initial_estim": [24, 304, 327], "100": [24, 36, 38, 51, 189, 199, 233, 302, 306, 311, 316, 326, 327, 331, 339], "eta_level": 25, "epsilon_level": 25, "act": [25, 198], "while": [25, 309, 311, 316, 327, 330, 343, 345], "variabilityhierarchi": 25, "contin": 25, "hierarchi": [25, 29], "rv": [25, 79, 131, 185, 229, 325, 345], "normaldistribut": [25, 325], "covariance_matrix": [25, 56, 63, 66, 68, 69, 190, 285, 302, 304, 326], "nrv": 25, "variance_paramet": 25, "rv1": 25, "rv2": 25, "get_rvs_with_same_dist": 25, "join": [25, 229, 304, 307], "ind": 25, "fill": 25, "name_templ": 25, "param_nam": 25, "cov": [25, 36, 56, 63, 64, 66, 68, 69, 190, 303, 304, 309, 317, 318, 327], "taken": [25, 92, 100, 105, 234, 279, 313, 316, 318, 337], "templat": [25, 36, 39, 78, 308], "overrid": [25, 304, 308, 343], "dist1": 25, "dist2": 25, "_": [25, 276, 303, 318], "unjoin": 25, "nearest_valid_paramet": 25, "parameter_valu": 25, "small": 25, "parameters_sdcorr": 25, "sd": [25, 62, 327, 336, 340], "corr": [25, 58, 67, 336], "var": [25, 64, 318], "replace_with_sympy_rv": 25, "stat": [25, 28, 343], "std": [25, 327], "rng": [25, 63, 66, 80, 189, 190, 191, 262, 270], "jointnormaldistribut": [25, 325], "validate_paramet": 25, "seri": [25, 52, 58, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 88, 89, 90, 91, 99, 102, 107, 108, 110, 116, 121, 125, 168, 169, 190, 191, 192, 230, 232, 241, 285, 304, 326], "matric": [25, 64, 191, 304, 314, 326], "semidefinit": [25, 304, 314, 337], "use_cach": 25, "symengin": [25, 314, 333], "cach": 25, "64206": [26, 218], "simul": [26, 218, 333, 340], "replic": [26, 218], "signific": [28, 74, 266, 267, 269, 304, 323, 339, 343], "after_od": [28, 215], "s\u2081": [28, 33, 75, 136, 159, 160, 161, 171, 215, 325], "eps\u2081": [28, 75, 124, 136, 159, 171, 177, 192, 203, 214, 219, 230, 242, 325], "ipr": [28, 75, 89, 136, 159, 163, 165, 170, 171, 214, 215, 304, 325, 326, 327, 340], "ir": [28, 75, 136, 159, 170, 171, 215, 325, 327], "iwr": [28, 75, 136, 159, 170, 171, 215, 325, 327], "before_od": [28, 33, 36, 160, 161, 231, 232, 233], "btime": [28, 33, 75, 136, 159, 160, 161, 170, 171, 325, 327], "tad": [28, 33, 50, 75, 136, 159, 160, 161, 170, 171, 304, 325, 327, 336], "ptvcl": [28, 33, 36, 49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 75, 96, 97, 98, 133, 136, 159, 160, 161, 170, 171, 190, 191, 205, 208, 222, 227, 231, 232, 233, 235, 237, 238, 241, 250, 325, 326, 327], "tvv": [28, 33, 75, 136, 159, 160, 161, 170, 171, 179, 318, 325, 327, 329], "ptvv": [28, 33, 49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 75, 133, 136, 159, 160, 161, 170, 171, 190, 191, 237, 238, 241, 250, 325, 326, 327], "theta\u2083": [28, 33, 75, 136, 159, 160, 161, 171, 325], "eta\u2081": [28, 33, 75, 79, 124, 136, 159, 160, 161, 171, 229, 325], "\u212f": [28, 33, 46, 48, 75, 136, 159, 160, 161, 203, 325, 327], "eta\u2082": [28, 33, 75, 79, 124, 136, 159, 160, 161, 171, 229, 325], "whole": [28, 306, 313, 323, 343], "s1": [28, 150, 170, 327, 329], "symbol_or_stat": 28, "direct_depend": 28, "direct": [28, 291, 311, 323, 330, 339, 341, 343], "find_assign": [28, 39, 41, 42, 46, 48, 177, 179, 192, 193, 194, 196, 203, 214, 219, 230, 242], "find_assignment_index": 28, "full_express": [28, 36, 231, 232, 233], "expand": [28, 92], "full": [28, 79, 113, 124, 130, 220, 303, 304, 306, 308, 318, 322, 323, 328, 336], "exp": [28, 36, 39, 170, 231, 232, 233, 264, 311, 327, 329], "eta_1": [28, 36, 60, 62, 64, 79, 113, 127, 131, 161, 189, 229, 231, 232, 233, 318, 325, 326, 327], "reassign": 28, "sypmpi": 28, "remove_symbol_definit": 28, "elsewher": 28, "longer": [28, 304], "make": [28, 75, 112, 160, 177, 186, 188, 264, 304, 309, 314, 322, 323, 325, 328, 343, 345], "sure": [28, 186, 304, 323, 345], "unless": [28, 288, 311, 323], "func": [31, 289], "presenc": [32, 35, 99, 102], "correctli": [32, 35, 99, 304], "get_admid": [32, 35], "get_cmt": [32, 35, 304, 327], "p": [33, 255, 264, 271, 302, 303, 304, 306, 311, 318, 327, 338, 339], "alreadi": [33, 36, 78, 198, 204, 226, 304, 306, 309, 311, 322, 323, 328], "noth": [33, 53, 182, 230, 323], "allometri": [33, 261, 262, 304, 343], "remove_covariate_effect": [33, 304, 327], "allo_cl": 33, "allo_v": 33, "add_paramet": [34, 304], "logit_transform": 34, "logit": [34, 39, 304], "remove_bioavail": [34, 304], "allow_nest": [36, 304], "linear": [36, 37, 40, 128, 143, 144, 155, 196, 302, 303, 304, 314, 325, 327, 330, 333, 335, 343], "lin": 36, "coveff": [36, 81], "median": [36, 63, 66, 302, 304, 327, 333], "001": [36, 74, 241, 264, 271, 304, 311, 327, 338, 339, 343], "equal": [36, 42, 52, 188, 203, 306, 309, 343], "minimum": [36, 314], "000": [36, 326], "frac": [36, 37, 40, 192, 194, 196, 303, 325, 327, 340, 342], "min": [36, 192, 194, 302, 327], "piecewis": [36, 304], "hockei": 36, "stick": 36, "piece_lin": 36, "theta1": [36, 327], "theta2": [36, 327], "pow": [36, 327], "mai": [36, 230, 320, 322, 323, 327, 328, 343], "abbrevi": [36, 39, 304, 306, 309, 329], "multipli": [36, 39, 203, 302, 306, 327], "pop_clapgr": 36, "cdot": [37, 39, 40, 47, 184, 196, 318, 325, 327, 342], "slope": [37, 40, 128, 196], "bigg": [37, 196], "e_": [37, 40, 196], "ec_": [37, 40, 196], "50": [37, 40, 64, 100, 105, 121, 196, 253, 302, 303, 324, 326, 327, 328, 330, 334, 336, 340, 341], "biggl": [37, 196, 342], "lbrace": [37, 196], "quad": [37, 196], "leq": [37, 196, 318], "atop": [37, 196], "els": [37, 72, 196, 230, 304, 327, 343], "sigmoid": [37, 40, 196], "bigl": [37, 196], "c_0": [37, 196], "loglin": [37, 196], "a_effect": 37, "ke0": 37, "idx": [38, 51, 178, 199, 200, 345], "pass": [38, 80, 199, 246, 255, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 293, 323], "opt": [38, 51, 199, 308], "1000": [38, 51, 88, 199, 318], "len": [38, 51, 178, 182], "set_estimation_step": [38, 45, 51, 178, 183, 200, 304, 327, 345], "remove_estimation_step": [38, 45, 51, 183, 199, 200, 327], "append_estimation_step_opt": [38, 45, 178, 183, 199, 200, 304, 327], "add_parameter_uncertainty_step": [38, 51, 178, 183, 199, 200, 327], "remove_parameter_uncertainty_step": [38, 45, 51, 178, 199, 200, 327], "set_evaluation_step": [38, 45, 51, 178, 183, 199, 327], "initial_estim": [39, 46, 48], "eta_nam": [39, 42, 203, 306], "prop": [39, 327], "rescal": 39, "re_log": 39, "user": [39, 104, 304, 313, 314, 320, 322, 323, 325, 326, 327, 328, 329, 342], "phi": [39, 304, 309, 327, 343], "remove_iiv": [39, 42, 46, 48, 180, 304, 327, 329], "add_pk_iiv": [39, 42, 179, 180, 304, 327, 328], "add_iov": [39, 46, 48, 179, 180, 304, 327], "remove_iov": [39, 42, 46, 48, 179, 304, 327], "prod": 40, "indirect": [40, 323, 330, 343], "turnov": 40, "c_c": 40, "impact": [40, 336], "degrad": [40, 330, 343], "respons": [40, 323], "dr": 40, "dt": [40, 83, 327, 342], "k_": [40, 342], "inhibit": 40, "stimul": 40, "r_0": [40, 342], "pop_ka": [41, 49], "occ": [42, 267, 306, 311, 322], "disjoint": [42, 322], "accept": [42, 119, 120, 121, 306, 323], "explicit": [42, 304, 306, 307, 322, 343], "copi": [42, 126, 132, 133, 304, 320, 322, 323, 327, 343], "add_iiv": [42, 46, 48, 179, 180, 304, 327, 329], "set_transit_compart": [43, 181, 304, 327], "remove_lag_tim": [43, 304, 327], "drug_dvid": 44, "presystem": [44, 148, 304, 316], "present": [44, 99, 102, 110, 306, 311, 313, 316, 318, 323, 328, 343], "wether": 44, "presystemet": 44, "add_estimation_step": [45, 51, 178, 183, 199, 200, 304, 327], "set_direct_effect": [46, 128, 304], "ec_50": [46, 262, 272], "ec\u2085\u2080": 46, "pop_ec_50": 46, "eta_ec_50": 46, "parameter": 47, "qpn": 47, "vpn": 47, "volumn": 47, "mathsf": [47, 184], "qp1": [47, 184, 304, 327], "vp1": [47, 184, 327], "qp2": [47, 184, 304], "vp2": [47, 184], "peripheral1": [47, 184, 213, 327], "v1": [47, 184, 213, 327], "v2": [47, 184, 213, 327], "set_peripheral_compart": [47, 184, 304, 327], "remove_peripheral_compart": [47, 213, 304, 327], "Will": [48, 279, 280, 281, 337], "eta_mat": [48, 327], "004693": [49, 65, 133, 318, 325], "009160": [49, 133, 325], "theta_3": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 133, 190, 191, 237, 238, 241, 250, 325, 326, 327], "100000": [49, 133, 317, 325, 327], "ivcl": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 79, 126, 170, 171, 190, 191, 229, 238, 241, 250, 302, 318, 325, 326, 327, 329], "030963": [49, 126, 318, 325], "ivv": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 73, 74, 79, 126, 170, 171, 190, 191, 229, 238, 241, 250, 302, 318, 325, 326, 327], "031128": [49, 126, 170, 241, 318, 325, 327, 329], "sigma_1_1": [49, 56, 57, 58, 59, 65, 67, 68, 69, 70, 74, 132, 190, 191, 238, 241, 250, 302, 325, 326, 327], "013241": [49, 132, 170, 241, 250, 318, 325, 326, 327, 337], "nbin": 52, "bin": [52, 271, 336, 345], "equal_width": 52, "width": 52, "equal_numb": 52, "binn": 52, "origin": [52, 92, 125, 243, 279, 283, 286, 302, 303, 304, 307, 309, 318, 323, 340], "421": [52, 342], "527": 52, "135": [52, 125, 326, 327, 334, 336], "512": [52, 312], "203": [52, 334], "475": 52, "510": 52, "133": 52, "267": [52, 326], "155": [52, 86, 87, 89, 90, 91, 120, 125, 326, 327], "increas": [53, 270, 309, 337], "until": [53, 277, 323, 345], "do": [53, 190, 302, 304, 306, 309, 318, 323, 329, 338, 343, 345], "run2": [53, 211, 327], "run3": [53, 327], "n_estimated_paramet": [54, 55], "fit": [54, 55, 169, 230, 254, 268, 275, 277, 283, 304, 323, 325, 327, 337, 338, 344, 345], "multiple_test": 55, "mult_test_p": [55, 255], "mult_test_": 55, "variat": 55, "n_random_paramet": 55, "n_individu": 55, "n_fixed_paramet": 55, "n_observ": 55, "n_individ": 55, "n_estimated_iiv_omega_paramet": 55, "penalti": 55, "mbic": [55, 266, 269], "n_predictor": 55, "n_expected_model": 55, "mult_test": 55, "load_example_modelfit_result": [55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 86, 87, 88, 89, 90, 91, 189, 190, 191, 240, 241, 249, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 304], "611": 55, "7071686183284": 55, "616": [55, 304, 326], "536606983396": 55, "610": 55, "7412809453149": 55, "594": 55, "431131169692": 55, "411510e": [56, 59, 68, 69, 326], "08": [56, 58, 59, 68, 69, 311, 326], "010000e": [56, 59, 68, 69, 326], "000002": [56, 58, 59, 68, 69, 302, 326], "000001": [56, 58, 59, 63, 66, 68, 69, 302, 322, 326, 328], "538630e": [56, 58, 59, 68, 69, 326], "07": [56, 57, 58, 59, 67, 68, 69, 70, 302, 311, 320, 322, 326, 336, 337, 339], "178090e": [56, 59, 68, 69, 326], "233530e": [56, 59, 68, 69, 326], "04": [56, 57, 58, 59, 67, 68, 69, 70, 302, 311, 322, 326, 330, 336, 339], "000804": [56, 58, 59, 68, 69, 311, 326], "000050": [56, 58, 59, 68, 69, 326], "171840e": [56, 59, 68, 69, 326], "461760e": [56, 59, 68, 69, 326], "665010e": [56, 59, 68, 69, 326], "06": [56, 58, 59, 68, 69, 302, 311, 320, 322, 326, 336, 339, 343], "040250e": [56, 59, 68, 69, 326], "007016": [56, 58, 59, 68, 69, 326], "000108": [56, 58, 59, 68, 69, 326], "944800e": [56, 59, 68, 69, 326], "932950e": [56, 59, 68, 69, 326], "093430e": [56, 59, 68, 69, 326], "981380e": [56, 58, 59, 68, 69, 326], "000180": [56, 58, 59, 68, 69, 326], "856650e": [56, 59, 68, 69, 326], "867230e": [56, 59, 68, 69, 326], "000039": [56, 58, 59, 68, 69, 326], "000019": [56, 58, 59, 68, 69, 326], "589820e": [56, 58, 59, 68, 69, 326], "685650e": [56, 59, 68, 69, 326], "000029": [56, 58, 59, 68, 69, 326], "000005": [56, 58, 59, 68, 69, 326, 337], "195640e": [56, 59, 68, 69, 326], "007099": [56, 57, 58, 67, 326], "094640": [56, 57, 58, 67, 326], "388059": [56, 57, 58, 67, 73], "097981": [56, 57, 58, 67, 326], "170820": [56, 57, 58, 67, 326], "356899": [56, 57, 58, 67, 73], "138062": [56, 57, 58, 67, 326], "356662": [56, 57, 58, 67, 73, 326], "238441": [56, 57, 58, 67], "096515": [56, 57, 58, 67], "062991": [56, 57, 58, 67, 326], "153616": [56, 57, 58, 67, 326], "185111": [56, 57, 58, 67, 326], "159170": [56, 57, 58, 67, 326], "027495": [56, 57, 58, 67, 326], "calculate_se_from_cov": [56, 57, 58, 59, 67, 68, 70, 304], "calculate_se_from_prec": [56, 57, 58, 59, 67, 68, 69], "precis": [56, 57, 58, 59, 67, 68, 69, 70, 285, 304, 323], "calculate_cov_from_prec": [56, 57, 58, 67, 68, 69, 70], "calculate_cov_from_corrs": [56, 57, 59, 67, 68, 69, 70, 304], "calculate_prec_from_cov": [56, 57, 58, 59, 67, 69, 70], "calculate_prec_from_corrs": [56, 57, 58, 59, 68, 69, 70], "calculate_corr_from_prec": [56, 58, 59, 67, 68, 69, 70], "precision_matrix": [57, 59, 70, 285, 326], "prec": [57, 59, 70], "995567e": [57, 59, 68, 70], "22660": [57, 59, 67, 68, 70, 326], "028196": [57, 59, 68, 70], "16057": [57, 59, 67, 68, 70, 326], "855248": [57, 59, 68, 70], "203511": [57, 59, 67, 68, 70, 326], "614428": [57, 59, 68, 70], "39474": [57, 59, 67, 68, 70, 326], "250514": [57, 59, 68, 70], "820118": [57, 59, 68, 70], "299536": [57, 59, 68, 70], "266003e": [57, 59, 68, 70], "2129": [57, 59, 67, 68, 70, 326], "904642": [57, 59, 68, 70], "260": [57, 59, 67, 68, 70, 326], "176234": [57, 59, 68, 70], "375": [57, 59, 67, 68, 70, 326], "266233": [57, 59, 68, 70], "2800": [57, 59, 67, 68, 70, 326], "816246": [57, 59, 68, 70], "7718": [57, 59, 67, 68, 70, 326], "769557": [57, 59, 68, 70], "605786e": [57, 59, 68, 70], "187": [57, 59, 67, 68, 70, 326], "038903": [57, 59, 68, 70], "177": [57, 59, 67, 68, 70, 304, 326, 339], "207683": [57, 59, 68, 70], "205": [57, 59, 67, 68, 70, 326], "808480": [57, 59, 68, 70], "2225": [57, 59, 67, 68, 70, 326], "150449": [57, 59, 68, 70], "035116e": [57, 59, 68, 70], "7527": [57, 59, 67, 68, 70, 326], "530027": [57, 59, 68, 70], "2462": [57, 59, 67, 68, 70, 326], "974821": [57, 59, 68, 70], "9977": [57, 59, 67, 68, 70, 326], "488860": [57, 59, 68, 70], "947425e": [57, 59, 68, 70], "22343": [57, 59, 67, 68, 70, 326], "198618": [57, 59, 68, 70], "9370": [57, 59, 67, 68, 70, 326], "758371": [57, 59, 68, 70], "201183e": [57, 59, 68, 70], "249847": [57, 59, 68, 70, 326], "177845": [57, 59, 68, 70], "calculate_corr_from_cov": [57, 58, 59, 67, 68, 69, 70, 304], "se": [58, 67, 310, 311, 326], "correlation_matrix": [58, 67, 73, 285, 326], "standard_error": [58, 67, 285, 326], "411512e": 58, "009998e": 58, "178111e": 58, "233518e": 58, "171834e": 58, "461762e": 58, "665011e": 58, "040245e": 58, "944801e": 58, "932957e": 58, "093431e": 58, "856651e": 58, "867245e": 58, "685661e": 58, "195664e": 58, "pheno_linear": [60, 61, 86, 87, 89, 90, 91, 113, 124, 130, 155, 159, 250, 255], "d_eps1": [60, 124], "d_epseta1_1": [60, 124], "oeta1": [60, 113, 130], "d_epseta1_2": [60, 124], "eta_2": [60, 62, 64, 79, 113, 189, 229, 326, 327], "oeta2": [60, 113, 130], "calculate_eta_gradient_express": [60, 304], "d_eta1": [61, 113, 124, 130], "d_eta2": [61, 113, 124, 130], "calculate_epsilon_gradient_express": [61, 304], "parameter_estim": [62, 63, 64, 66, 74, 88, 90, 91, 169, 190, 191, 241, 250, 285, 302, 304, 325, 326], "individual_estim": [62, 79, 86, 87, 89, 169, 189, 240, 285, 304, 326], "shrinkag": [62, 64], "deviat": [62, 242, 285, 302, 318, 324, 326, 327, 336, 340], "pe": [62, 63, 64, 66, 88, 90, 190, 191], "ie": [62, 189, 240], "720481": 62, "240295": 62, "471305": 62, "128389": 62, "calculate_individual_shrinkag": [62, 304], "expr_or_expr": 63, "arbitrari": [63, 66], "solut": [63, 228], "th": [63, 303, 318], "95": [63, 302, 318, 327], "percentil": [63, 302, 318], "create_rng": [63, 66, 189, 190, 191], "k": [63, 303, 304, 309, 311, 318], "stderr": [63, 66, 302, 343], "p5": [63, 66, 318], "004234": [63, 66], "001138": [63, 66], "004907": [63, 66], "001247": [63, 66], "p95": [63, 66, 318], "individual_estimates_covari": [64, 189, 285, 304, 326], "ieta_shr": 64, "847789": 64, "256473": 64, "796643": 64, "210669": 64, "755025": 64, "226957": 64, "764541": 64, "216405": 64, "816192": 64, "203974": 64, "778108": 64, "210992": 64, "659420": 64, "236875": 64, "668551": 64, "240097": 64, "260056": 64, "200374": 64, "725190": 64, "226563": 64, "972110": 64, "421852": 64, "249640": 64, "254119": 64, "730294": 64, "364932": 64, "165785": 64, "194464": 64, "15": [64, 87, 100, 105, 121, 253, 302, 303, 311, 320, 322, 323, 324, 326, 327, 339, 340, 342], "813399": 64, "313554": 64, "797328": 64, "213211": 64, "17": [64, 86, 87, 89, 90, 93, 100, 103, 105, 121, 125, 158, 216, 253, 302, 303, 311, 313, 320, 322, 323, 324, 326, 327, 328, 330, 334, 336, 340], "769059": 64, "278079": 64, "098506": 64, "176778": 64, "749022": 64, "235386": 64, "742181": 64, "222932": 64, "21": [64, 86, 89, 100, 105, 121, 253, 302, 303, 311, 317, 318, 324, 326, 327, 330, 334, 336, 337, 340, 342], "317956": 64, "264473": 64, "943950": 64, "232732": 64, "707183": 64, "259077": 64, "553787": 64, "247717": 64, "826349": 64, "114302": 64, "854777": 64, "341384": 64, "820829": 64, "263235": 64, "28": [64, 86, 89, 90, 100, 105, 121, 230, 253, 302, 303, 311, 320, 323, 324, 326, 327, 330, 336, 340, 342], "999942": 64, "319986": 64, "29": [64, 86, 89, 90, 100, 105, 121, 230, 232, 253, 302, 303, 305, 311, 320, 323, 324, 326, 327, 330, 336, 340, 342], "967084": 64, "432760": 64, "30": [64, 100, 105, 121, 253, 302, 303, 311, 317, 320, 322, 323, 324, 326, 327, 328, 334, 336, 340, 342], "404773": 64, "325215": 64, "31": [64, 86, 89, 100, 105, 121, 125, 253, 302, 303, 311, 324, 326, 327, 334, 336, 340, 342, 343], "999980": 64, "318421": 64, "925283": 64, "167667": 64, "33": [64, 100, 105, 121, 125, 253, 303, 311, 324, 326, 327, 328, 339, 340, 342], "913706": 64, "242106": 64, "34": [64, 90, 100, 105, 121, 125, 253, 302, 303, 311, 324, 326, 327, 334, 336, 340, 342], "875554": 64, "249197": 64, "849135": 64, "294294": 64, "36": [64, 66, 100, 105, 121, 253, 302, 303, 311, 320, 322, 324, 326, 327, 328, 336, 340, 342], "172206": [64, 340], "246422": 64, "37": [64, 93, 100, 105, 108, 121, 158, 216, 253, 303, 311, 313, 324, 326, 327, 340], "747380": 64, "278340": 64, "38": [64, 86, 89, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 340, 342], "187440": 64, "231249": 64, "39": [64, 100, 105, 121, 253, 302, 303, 311, 322, 324, 326, 327, 336, 338, 339, 340, 342], "237805": 64, "254485": 64, "999925": 64, "189793": 64, "41": [64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 336, 340, 342], "941906": 64, "170998": 64, "42": [64, 66, 93, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 328, 339, 340], "923801": 64, "244046": 64, "43": [64, 93, 100, 105, 121, 253, 302, 303, 311, 317, 324, 326, 327, 339, 340, 342], "999928": 64, "320403": 64, "44": [64, 93, 100, 105, 121, 253, 302, 303, 324, 326, 327, 340, 342], "237637": 64, "260453": 64, "45": [64, 93, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 340, 342], "869540": 64, "194503": 64, "999949": 64, "319750": 64, "47": [64, 100, 105, 121, 125, 253, 302, 303, 324, 326, 327, 328, 334, 336, 340, 342], "983782": 64, "393234": 64, "48": [64, 100, 105, 108, 121, 253, 302, 303, 311, 324, 326, 327, 338, 339, 340], "698267": 64, "169337": 64, "49": [64, 100, 105, 121, 253, 302, 303, 324, 326, 327, 340], "776674": 64, "214962": 64, "688847": 64, "192608": 64, "51": [64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 340, 343], "822213": 64, "202534": 64, "52": [64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 328, 339, 340], "511489": 64, "273601": 64, "53": [64, 100, 105, 121, 253, 302, 303, 311, 324, 326, 327, 334, 336, 340], "964757": 64, "223448": 64, "762153": 64, "181648": 64, "965657": 64, "435741": 64, "995278": 64, "354798": 64, "813382": 64, "263372": 64, "727295": 64, "232867": 64, "738777": 64, "224742": 64, "calculate_eta_shrinkag": [64, 304], "ucpscal": [65, 71], "calculate_ucp_scal": [65, 304], "00916": [65, 170, 241, 318, 325, 327, 329], "0309626": [65, 170, 241, 325, 327, 329], "031127999999999996": 65, "013241000000000001": 65, "convers": [65, 304, 316, 321], "pharmacokinet": [66, 230, 327], "pre": [66, 148, 316], "t_half_elim": 66, "173": 66, "337164": 66, "1769": 66, "493756": 66, "843398": 66, "149": [66, 322], "567842": 66, "1317": [66, 311], "474199": 66, "233070": 66, "k_e": 66, "calculate_individual_parameter_statist": [66, 304], "995565e": 67, "041788": 67, "848052": 67, "410335": 67, "240358": 67, "820116": [67, 326], "179011": 67, "266004e": 67, "908225": 67, "176399": 67, "266263": 67, "818557": 67, "757955": 67, "605785e": 67, "038825": 67, "207512": 67, "808434": 67, "144772": 67, "035114e": 67, "518562": 67, "972906": 67, "457873": 67, "947424e": 67, "197906": 67, "736254": 67, "201162e": 67, "249846": 67, "006431": 67, "000210": [69, 70, 326], "026895": [69, 70, 326], "083762": [69, 70, 326], "013415": [69, 70, 326, 337], "007477": [69, 70, 326, 337], "002279": [69, 70, 326, 337], "unconstrain": [71, 337], "calculate_parameters_from_ucp": [71, 304], "verbos": 72, "consist": [72, 311, 323, 343], "across": [72, 304, 323], "consol": 72, "fail": [72, 304, 323, 333], "cor": [73, 309], "highli": 73, "high": [73, 313, 314, 333], "absolut": [73, 304, 323], "zero_limit": 74, "significant_digit": [74, 285, 304], "close": [74, 241, 304, 318, 323, 324], "distanc": [74, 82, 340, 343], "logic": [74, 328, 343], "cleanup": 75, "what": [75, 323, 329, 333], "inlin": 75, "clean": 75, "might": [75, 323, 333, 337, 343, 345], "certain": [75, 109, 112, 162, 304, 308, 311, 322, 323, 332, 343], "to_format": 76, "inplac": 76, "nlmixr": [76, 268, 304, 309, 326, 327], "rxode": [76, 304, 326], "underli": [76, 117, 170, 325], "converted_model": 76, "applic": [77, 278, 296, 323, 333, 343], "config": [78, 104, 304, 308, 309, 331], "configur": [78, 304, 319, 326, 329, 343, 344], "overwritten": [78, 279], "block": [79, 179, 214, 304, 306, 316, 318, 320, 327, 328, 336, 343], "iiv_cl_iiv_v": [79, 229], "split_joint_distribut": [79, 304, 327], "through": [80, 306, 307, 308, 311, 316, 323, 325, 327, 337, 343], "numpi": [80, 313, 314, 325], "standard_norm": 80, "5532605888887387": 80, "stem": 81, "force_numb": 81, "coveff1": 81, "temp": 81, "temp1": 81, "cl1": 81, "df": [82, 87, 276, 304, 313, 334, 336], "date_column": 82, "deidentifi": [82, 304], "year": [82, 304, 309, 323], "earliest": 82, "maintain": [82, 307, 309, 310, 321, 323, 332, 333], "leap": 82, "1901": 82, "1902": 82, "1903": 82, "1904": 82, "closest": 82, "preceed": 82, "ordinari": [83, 325], "odedisplay": 83, "display": 83, "column_nam": [84, 236], "mark": [84, 85, 92, 236, 306, 323], "drop_dropped_column": [84, 236, 304, 327], "undrop_column": [84, 304, 327], "undrop": [84, 236], "drop_column": [85, 236, 304, 327], "them": [85, 187, 188, 307, 320, 322, 323, 328, 329, 338, 341, 342, 343], "dy": 86, "deps_1": 86, "771084": [86, 89], "881859": [86, 89], "441728": [86, 89], "113050": [86, 89], "783055": [86, 89], "150": [86, 87, 89, 90, 91, 326], "375041": [86, 89], "151": [86, 87, 89, 90, 91, 334], "833395": [86, 89], "152": [86, 87, 89, 90, 91, 342], "876707": [86, 89], "153": [86, 87, 89, 90, 91, 312], "905095": [86, 89], "154": [86, 87, 89, 90, 91], "099690": [86, 89], "evaluate_eta_gradi": [86, 304], "deta_1": 87, "deta_2": 87, "159537": 87, "609116": 87, "325893": 87, "562289": 87, "104417": 87, "346161": 87, "452951": 87, "682310": 87, "838840": 87, "981836": 87, "424423": 87, "973013": 87, "497185": 87, "344797": 87, "198714": 87, "697161": 87, "987731": 87, "941806": 87, "817067": 87, "309945": 87, "evaluate_epsilon_gradi": [87, 304], "573770": 88, "739": [88, 93, 107, 158, 216, 313, 327, 342], "165105": 88, "741": [88, 93, 107, 158, 216, 313, 327], "742": [88, 93, 107, 158, 216, 313, 327], "743": [88, 93, 107, 158, 216, 313, 327], "evaluate_population_predict": [89, 304], "529739": 90, "179910": 90, "688648": 90, "798916": 90, "023225": 90, "459036": 90, "223295": 90, "217288": 90, "472888": 90, "226455": 90, "evaluate_individual_predict": [90, 304], "wre": [91, 304], "313859": 91, "675721": 91, "544240": 91, "921720": 91, "517677": 91, "223935": 91, "053334": 91, "007023": 91, "931252": 91, "778389": 91, "flag": [92, 304, 327, 340, 343], "care": [92, 279], "accord": [93, 124, 304, 323, 328, 341, 343], "queri": 93, "120": [93, 108, 158, 216, 313, 326, 327], "132": [93, 108, 158, 216, 313, 326, 327, 334], "144": [93, 108, 158, 216, 313, 326, 327, 339], "146": [93, 125, 158, 216, 311, 313, 322, 326, 327], "400": [93, 326], "00469307": [96, 97, 98, 170, 208, 222, 235, 241, 325, 327, 329], "fix_paramet": [96, 98, 237, 238, 327], "unfix_paramat": [96, 97, 98, 238], "fix_paramaters_to": [96, 238], "unfix_paramaters_to": [96, 97, 98, 205, 237], "fix_or_unfix_paramet": [97, 98, 237, 238, 327], "fix_parameters_to": [97, 205, 237, 327], "60": [100, 311, 323, 327, 334], "63": [100, 125, 326, 327, 334, 336], "cmax": [103, 304, 327], "tmax": [103, 304, 327], "cmin": [103, 304, 327], "tmin": [103, 304, 327], "doseid": [103, 107, 327], "589": [103, 108, 327], "get_baselin": [105, 304, 327], "set_covari": [105, 327], "period": [107, 327], "96": [108, 233, 302, 311, 327, 328], "retriev": [111, 112, 119, 120, 127, 128, 129, 131, 259, 260, 279, 283, 286, 304, 325, 326, 327, 344], "those": [112, 307, 323, 327, 343], "often": [112, 306, 309, 325, 339], "get_pd_paramet": 112, "get_pk_paramet": [112, 127, 128, 131, 304], "get_rv_paramet": [112, 127, 129, 150, 304], "has_random_effect": [112, 127, 131, 304], "opr": [113, 124, 130], "get_population_prediction_express": [113, 304], "epress": [113, 130], "condit": [114, 204, 304, 318, 323, 338, 343], "item": [118, 308, 323], "activ": [119, 120, 121, 309, 323], "get_number_of_observ": [119, 125, 304, 327], "get_number_of_observations_per_individu": [119, 120, 125, 304, 327], "total": [120, 220, 285, 304, 327, 342], "get_number_of_individu": [120, 121, 304, 327], "observation_count": 121, "oeta\u2082": 124, "oeta\u2081": 124, "keep_index": [125, 304], "112": [125, 311, 320, 322, 326, 327, 328, 334, 336, 338], "131": [125, 326, 327], "73": [125, 326, 327, 338, 343], "get_theta": [126, 132, 304], "get_sigma": [126, 133, 304], "var_typ": 127, "get_individual_paramet": [127, 129, 131, 150, 304], "get_individual_prediction_express": [130, 304], "get_omega": [132, 133, 304], "structur": [133, 262, 281, 304, 306, 311, 313, 322, 325, 328, 341, 343], "00": [133, 318, 325, 326, 327, 330, 334, 336, 337, 339, 343], "olumn": 134, "milligram": [134, 313], "liter": [134, 313], "kilogram": [134, 313], "named_subscript": 136, "greek": 136, "subscript": 136, "cleanup_model": [136, 304], "\u03b8\u2081": 136, "\u03b8\u2082": 136, "\u03b8\u2083": 136, "\u03b7\u2081": 136, "\u03b7\u2082": 136, "\u03b5\u2081": 136, "mani": [137, 138, 149, 190, 304, 327, 337], "has_proportional_error_model": [137, 138, 152, 304], "has_combined_error_model": [137, 149, 152, 304], "has_weighted_error_model": [137, 138, 149, 304], "has_additive_error_model": [138, 149, 152, 304], "reli": [141, 145, 146, 154, 323], "heurist": [141, 145, 146, 154], "abl": [141, 145, 146, 154, 304, 317, 319, 332, 333, 343], "detect": [141, 145, 146, 154, 304, 319, 325, 332, 345], "instantan": [142, 206, 343], "has_od": [143, 144, 304], "has_linear_odes_with_real_eigenvalu": [143, 147, 304], "has_linear_od": [144, 147, 304], "micha": [145, 146, 209, 210, 220, 306, 342, 343], "menten": [145, 146, 209, 210, 220, 306, 342, 343], "set_michaelis_menten_elimin": [145, 202, 210, 225, 304, 327], "michali": 146, "set_mixed_mm_fo_elimin": [146, 327], "add_metabolit": [148, 304], "sequenti": [151, 217, 304, 306, 328, 343], "dpharmpi": 151, "has_zero_order_absorpt": [151, 304], "has_first_order_absorpt": 151, "set_zero_order_elimin": [154, 202, 209, 210, 304, 327], "determin": [155, 156, 188, 248, 270, 320, 322, 323, 328, 337], "model1": [155, 304], "model2": 155, "constraint": [156, 208, 222, 227, 235, 237, 304, 314], "get_covariate_baselin": [157, 304, 327], "load": [158, 159, 250, 319], "unload_dataset": [158, 304], "statment": 160, "mu": [161, 318], "referenc": 161, "theta_1": [161, 325], "mu_1": [161, 318], "\u03bc\u2081": 161, "\u03bc\u2082": 161, "dataset_or_model": [162, 188], "name_pattern": [162, 188], "omitted_": 162, "omiss": 162, "omit": [162, 306, 311, 342], "placehold": [162, 188], "cwre": [163, 164, 170, 275, 276, 326, 327, 336, 338], "chart": [163, 164, 165, 166, 167, 168, 169, 302], "iofv1": 168, "iofv2": 168, "against": [168, 323], "iofv": [168, 276, 302, 304, 324, 326, 340], "scatterplot": 168, "problem": [170, 174, 304, 311, 317, 320, 322, 323, 324, 327, 329, 342], "subroutin": [170, 304, 323, 327, 329], "advan1": [170, 327, 329], "trans2": [170, 327, 329], "IF": [170, 304, 323, 327], "gt": [170, 327], "lt": [170, 327], "npde": [170, 327], "noappend": [170, 327], "noprint": [170, 327], "onehead": [170, 327], "sigma\u2081": [171, 325], "\u2081": [171, 325], "home": [173, 304, 325], "run1": [173, 260, 327], "mod": [173, 279, 281, 304, 306, 313, 325, 326, 327, 343], "read_model_from_databas": [173, 174, 304], "databas": [173, 174, 258, 279, 280, 281, 283, 286, 287, 290, 296, 301, 304], "read_model_from_str": [173, 304, 327], "err": [174, 327], "has_covariate_effect": [176, 304], "unrun": 177, "to_remov": [179, 180, 306], "eta_iov_1_1": 180, "add_lag_tim": [181, 221, 304, 327], "uloq": 182, "alq": 182, "loq": [182, 262, 306], "consecut": [182, 230], "736": 182, "set_lloq_data": [182, 230, 304], "add_peripheral_compart": [184, 213, 304, 327], "new_nam": [186, 211], "renam": [186, 304], "clash": [186, 279, 281], "occur": [186, 214, 317, 320, 322, 323, 342], "constant": [187, 193, 220, 322, 342], "resampl": [188, 263], "stratifi": [188, 306], "sample_s": [188, 306], "resample_": 188, "randomli": [188, 191, 337], "renumb": [188, 306], "upward": 188, "stratif": [188, 306], "valueerror": 188, "rais": [188, 241, 304, 337], "strata": 188, "stratum": 188, "suppli": [188, 320, 322, 328, 336], "control": [188, 309, 322, 323, 325], "pattern": [188, 323], "samples_per_id": 189, "pool": [189, 320], "iec": 189, "127941": 189, "037273": 189, "065492": 189, "182851": 189, "263323": 189, "265849": 189, "295883": 189, "060346": 189, "012108": 189, "219967": 189, "034279": 189, "040988": 189, "187879": 189, "143184": 189, "088845": 189, "034655": 189, "187779": 189, "014214": 189, "019953": 189, "151151": 189, "sample_parameters_from_covariance_matrix": [189, 191, 304], "sample_parameters_uniformli": [189, 190, 304], "uniform": [189, 190, 191, 337], "force_posdef_sampl": [190, 191, 306], "force_posdef_covmatrix": [190, 306], "never": [190, 328], "005069": 190, "974989": 190, "204629": 190, "024756": 190, "012088": 190, "012943": 190, "004690": 190, "958431": 190, "233231": 190, "038866": 190, "029000": 190, "012516": 190, "004902": [190, 302], "950778": 190, "128388": 190, "019020": 190, "023866": 190, "013413": [190, 337], "sample_individual_estim": [190, 191, 304], "estiat": [190, 191], "reject": 191, "004878": 191, "908216": 191, "149441": 191, "029179": 191, "025472": 191, "012947": 191, "004828": 191, "014444": 191, "149958": 191, "028853": 191, "027653": 191, "013348": 191, "004347": 191, "053837": 191, "165804": 191, "028465": 191, "026798": 191, "013727": 191, "data_tran": [192, 194, 215, 304], "series_term": 192, "\u00b2": [192, 194], "epsilon_1": [192, 194, 215], "expans": 192, "approxim": [192, 220, 323, 342], "\u03b5\u2090": [192, 194, 327], "set_proportional_error_model": [192, 194, 304, 327], "set_combined_error_model": [192, 215, 304, 327, 338], "const": 193, "epsilon_2": 194, "remove_error_model": [194, 215, 304, 327], "\u03b5\u209a": [194, 215, 327], "set_additive_error_model": [194, 215, 304, 327], "fix_to_log": 197, "dynam": [197, 293, 323], "lambda": [197, 231, 232, 334, 336], "zeta": [197, 334, 336], "emul": 197, "set_instantaneous_absorpt": [201, 217, 224], "list_of_ep": [203, 214], "same_eta": [203, 306], "eta_rv1": 203, "set_power_on_ruv": [203, 304, 327, 338], "get_initial_condit": [204, 304], "remove_loq_data": [207, 230, 304, 327], "set_upper_bound": [208, 235, 327], "unconstrain_paramet": [208, 222, 237, 327], "clmm": [209, 210, 225, 327], "km": [209, 210, 225, 304, 327], "set_first_order_elimin": [209, 210, 225, 304, 327], "advan": [212, 304, 327], "cvode": [212, 306], "advan14": [212, 306], "dgear": [212, 306], "advan8": [212, 306], "dverk": [212, 306], "advan6": [212, 306], "ida": [212, 306], "advan15": [212, 306], "lsoda": [212, 306, 317], "advan13": [212, 306, 327], "lsodi": [212, 306, 317], "advan9": [212, 306], "prefer": [212, 323], "q2": 213, "q3": 213, "v3": 213, "peripheral2": 213, "lower_limit": 214, "zero_protect": [214, 215, 304], "said": 214, "autodetect": 214, "protect": [214, 215, 304, 323], "power\u2081": 214, "set_iiv_on_ruv": [214, 304, 327, 338], "225e": [215, 327], "ipredadj": [215, 327], "ref": [216, 345], "1234": 218, "simulationstep": 218, "quantil": [219, 302, 304], "mediat": [220, 342], "disposit": [220, 342], "irrevers": [220, 342], "bind": [220, 342], "ib": 220, "receptor": [220, 342], "cr": 220, "quasi": [220, 342], "qss": 220, "wagner": 220, "mmapp": 220, "keep_depot": [221, 304], "transit1": 221, "transit2": 221, "k23": 221, "transit3": 221, "k34": 221, "k40": 221, "set_lower_bound": [222, 235, 327], "use_thetas_for_error_stdev": [223, 304, 327], "smallest": [225, 327], "get_zero_order_input": [226, 304], "simplifi": [227, 304, 305, 314, 327, 333], "ab": [227, 232, 306, 327], "analyt": 228, "becom": [229, 304, 306, 316, 333], "create_joint_distribut": [229, 304, 327], "m4": [230, 327], "m1": [230, 304, 339], "m3": [230, 327], "m5": [230, 304], "m6": [230, 304], "m7": [230, 304], "overridden": 230, "shown": [230, 316], "discard": 230, "modifi": [230, 304, 313, 323, 331, 344], "beal": 230, "sl": 230, "pharmacodyn": 230, "2001": 230, "oct": 230, "481": [230, 342], "504": 230, "doi": [230, 232, 318, 338], "1023": 230, "1012299115260": 230, "erratum": 230, "2002": 230, "jun": 230, "309": 230, "pmid": 230, "11768292": 230, "cumd": [230, 327], "cumdz": [230, 327], "list_of_eta": [231, 232, 233], "boxcox": [231, 304], "lambda1": [231, 232], "transform_etas_tdist": [231, 232, 304, 327], "transform_etas_john_drap": [231, 233, 304, 327], "john": [232, 304, 306], "draper": [232, 304, 306], "spelect": 232, "1980": 232, "famili": [232, 323], "journal": [232, 338], "royal": 232, "societi": 232, "190": [232, 334], "197": 232, "2307": 232, "2986305": 232, "transform_etas_boxcox": [232, 233, 304, 327], "degre": [233, 336], "freedom": [233, 323, 336], "80": [233, 311, 326, 334, 336, 338], "df1": 233, "translat": [234, 304], "hour": [234, 313], "caution": 234, "reset": [234, 288, 304], "account": 234, "unfix_paramet": [235, 304, 327], "unload": 239, "had": [240, 323, 327], "move_est_close_to_bound": 241, "00469555": 241, "984258": [241, 250, 326], "15892": 241, "0293508": [241, 325], "027906": [241, 250, 325, 326, 337], "sd_eps_1": 242, "set_weighted_error_model": [242, 304, 327], "whose": [243, 323], "suffix": 243, "overwrit": [243, 244], "newdataset": 243, "recalcul": 246, "frem_dir1": 246, "read_result": [246, 259, 304, 343], "model_or_model": [247, 268], "run_tool": [247, 262, 275, 304], "supress_warn": 248, "choos": [248, 304, 320, 323, 328, 329, 331], "supress": 248, "fulfil": [249, 323, 343], "004696": [250, 326, 337], "158920": [250, 326], "029351": [250, 326, 337], "84": [251, 252, 276, 320, 322, 328, 337, 339], "machin": [251, 252, 253, 279, 283, 286, 313, 319, 323], "learn": [251, 252, 253, 319], "threshold": [251, 252, 253, 306, 311], "signal": [251, 252, 324], "raw": [251, 252, 253, 276, 302, 304, 313], "delta": [251, 302, 304, 324], "tell": [251, 253, 323], "predict_influential_outli": [251, 253, 304], "predict_outli": [251, 252, 304], "outlier_cutoff": 252, "influential_cutoff": 252, "influential_outli": 252, "predict_influential_individu": [252, 253, 304], "simev": [253, 304, 335], "singal": 253, "281443": [253, 337], "057392": [253, 337], "119105": [253, 337], "846849": [253, 337], "600540": 253, "014008": 253, "750734": 253, "247175": 253, "117002": 253, "835389": 253, "529582": 253, "035670": 253, "292333": 253, "303278": 253, "565949": 253, "078192": 253, "291295": 253, "466421": 253, "402343": 253, "699996": 253, "567987": 253, "526776": 253, "303918": 253, "177588": 253, "272142": 253, "390000": 253, "775876": 253, "501528": 253, "700951": 253, "352599": 253, "294196": 253, "744014": 253, "215364": [253, 339], "208691": 253, "713130": 253, "300293": 253, "810736": 253, "459877": 253, "675125": 253, "563835": 253, "526945": 253, "449199": 253, "720714": 253, "792248": 253, "860923": 253, "731858": 253, "247131": 253, "894190": 253, "282737": 253, "153398": 253, "200546": 253, "902774": 253, "586427": 253, "183329": 253, "036930": 253, "639868": 253, "765279": 253, "209665": 253, "225693": 253, "base_model": 255, "bic_typ": 255, "lrt": 255, "denot": [255, 318, 327], "model_1": [255, 318], "model_2": [255, 318], "create_result": [257, 304], "resum": [258, 262, 296, 306, 343], "resmod_dir1": 258, "retrieve_model": [259, 279, 283, 286, 304, 343], "tooldatabas": [260, 280, 287, 293, 296], "modeldatabas": [260, 279, 281, 290], "tooldir_path": 260, "retrieve_final_model": [260, 304], "allometryresult": 261, "amd": [262, 304, 316, 342, 343], "modelsearch": [262, 269, 275, 304, 316, 342, 343], "reult": 262, "e_max": [262, 272], "search": [262, 264, 269, 272, 304, 306, 311, 322, 333, 343], "runord": [262, 306], "compon": [262, 306, 314, 319, 323, 325, 336], "proiorit": 262, "weither": 262, "retri": [262, 270, 304, 343], "run_iiv": [262, 304], "bootstrap": [263, 304, 335], "bootstrapresult": [263, 304], "500": 263, "naming_index_offset": 264, "try": [264, 306, 317, 333, 337, 345], "offset": 264, "covsearchresult": 264, "estmethod": [265, 304, 343], "exhaust": [265, 269, 304, 316], "exhaustive_with_upd": [265, 317], "exhaustive_only_ev": [265, 304, 317], "mode": [265, 304, 318, 323, 341], "estmethodresult": 265, "reduc": [265, 304, 317, 339], "no_add": [266, 269, 304, 320, 328], "iivsearch": [266, 304, 343], "brute_force_no_of_eta": [266, 320], "brute_force_block_structur": [266, 320], "strategi": [266, 269, 304, 320, 328], "add_diagon": [266, 269, 304, 320, 328], "criteri": [266, 267, 269, 271], "iivsearchresult": 266, "iovsearch": [267, 304, 343], "iovsearchresult": 267, "modelfeatur": 269, "modelsearchresult": 269, "prefix": [270, 337], "retriesresult": 270, "max_it": [271, 304], "attempt": [271, 311, 323, 337], "assess": [271, 338], "ruvsearchresult": 271, "extra_model": [272, 341, 342], "extra_model_result": [272, 341, 342], "structsearch": [272, 304, 343], "structsearchresult": 272, "model_typ": 272, "arg": 273, "fit_result": 275, "mathrm": [276, 340], "veebar": 276, "least": [276, 323, 328, 341, 343], "outli": [276, 340], "include_all_estimation_step": 277, "runtim": [277, 285, 304, 317], "wasn": [277, 304], "estmat": 277, "586": [277, 326, 337], "276056": [277, 337], "lzma": [278, 288], "again": [278, 345], "compress": [278, 288], "Not": [278, 313, 323, 328], "save": [278, 288, 291, 304], "file_extens": [279, 281], "nontransactionalmodeldatabas": [279, 286], "local": [279, 280, 281, 283, 286, 287, 290, 309, 320, 323], "store": [279, 280, 281, 283, 286, 287, 290, 304, 329, 343], "modelnam": 279, "recommend": [279, 345], "localmodeldirectorydatabas": 279, "retrieve_fil": [279, 283, 286], "filesystem": [279, 283, 286], "model_nam": [279, 281, 283, 286, 318], "retrieve_local_fil": [279, 283, 286], "destination_path": [279, 283, 286], "retrieve_model_entri": [279, 283, 286], "modelentri": [279, 281, 283, 286], "retrieve_modelfit_result": [279, 283, 286], "store_local_fil": [279, 280, 283, 286, 287, 290], "new_filenam": [279, 283, 286], "store_metadata": [279, 280, 283, 286, 287, 290], "store_model": [279, 283, 286], "store_model_entri": [279, 283, 286], "model_entri": [279, 283, 286], "transact": [279, 281, 283, 286, 323], "store_modelfit_result": [279, 283, 286], "toolnam": [280, 287, 290, 343], "exist_ok": 280, "read_metadata": [280, 287, 290], "source_path": [280, 287, 290], "store_result": [280, 287, 290], "transactionalmodeldatabas": 281, "subdirectori": [281, 343], "list_model": 281, "snapshot": [281, 283], "readabl": [281, 283, 288, 313, 323, 333], "context": [281, 283, 323, 333], "model_or_model_entri": [281, 283], "writabl": [281, 283], "timestamp": 282, "log_error": 282, "log_warn": 282, "abc": [283, 290], "baseclass": 283, "primari": 283, "center": [283, 337], "around": [283, 307], "belong": 283, "attach": [284, 323], "attach_result": 284, "__version__": [285, 288], "105": [285, 288, 311, 317, 338], "ofv_iter": [285, 304], "parameter_estimates_sdcorr": [285, 326], "parameter_estimates_iter": [285, 304], "standard_errors_sdcorr": [285, 326], "relative_standard_error": [285, 326], "minimization_successful_iter": 285, "estimation_runtime_iter": 285, "individual_ofv": [285, 304, 326], "termination_caus": 285, "termination_cause_iter": 285, "function_evalu": 285, "function_evaluations_iter": 285, "significant_digits_iter": 285, "log_likelihood": 285, "covstep_success": 285, "gradients_iter": 285, "evaluation_ofv": 285, "classic": 285, "caus": [285, 304, 323, 333], "prematur": 285, "maxevals_exceed": [285, 343], "dummi": [286, 287], "anyth": [286, 287, 309, 320, 323], "get_and_reset_index": 288, "attr": 288, "wrapper": [288, 304, 309, 314, 319, 345], "facilit": 288, "multiindex": [288, 304], "to_csv": 288, "serial": [288, 304, 313, 333], "task_input": 289, "model_databas": 290, "workflowbas": [291, 292], "acycl": 291, "task": [291, 292, 304, 332, 333], "node": [291, 293], "edg": 291, "as_dask_dict": 291, "dask": [291, 293, 304, 333], "plot_dask": 291, "visual": 291, "add_task": 292, "predecessor": [292, 323], "insert_workflow": 292, "replace_task": 292, "new_task": 292, "wf": 293, "unique_nam": 293, "db": 293, "whatev": [293, 323], "alia": [294, 295], "localdirectorydatabas": [294, 301], "localdirectorytooldatabas": [295, 301, 343], "dispatch": [296, 301, 304, 343], "execut": [296, 304, 323], "executiondispatch": 296, "default_dispatch": 301, "local_dask": [301, 343], "default_model_databas": 301, "default_tool_databas": 301, "psn": [302, 303, 304, 306, 312, 318, 324, 334, 336, 337, 339, 340, 343, 344], "parameter_statist": 302, "bia": [302, 304], "divid": [302, 306, 329], "005890": 302, "005891": 302, "000460": 302, "078170": 302, "pop_v": 302, "431004": 302, "422850": 302, "073015": 302, "051024": 302, "149260": 302, "124740": 302, "112645": 302, "754686": 302, "189801": 302, "185916": 302, "045563": 302, "240056": 302, "015470": 302, "015184": 302, "003553": 302, "229641": 302, "parameter_distribut": 302, "lowest": [302, 318], "highest": [302, 304, 318, 329], "interpol": 302, "fall": [302, 304], "x_0": 302, "x_1": 302, "np": [302, 313, 325], "004851": 302, "004857": 302, "005031": 302, "005149": 302, "277810": 302, "278405": 302, "283765": 302, "309488": 302, "326434": 302, "000011": 302, "000097": 302, "000869": 302, "006275": 302, "013558": 302, "079940": 302, "080472": 302, "085258": 302, "101225": 302, "119080": 302, "007645": 302, "007719": 302, "008382": 302, "009481": 302, "009956": 302, "97": [302, 311, 342], "006659": 302, "006846": 302, "007353": 302, "007460": 302, "007472": 302, "547333": 302, "582182": 302, "631219": 302, "644090": 302, "645520": 302, "353679": 302, "367954": 302, "416361": 302, "433175": 302, "435043": 302, "265224": 302, "282926": 302, "290666": 302, "291792": 302, "291917": 302, "021341": 302, "022691": 302, "025584": 302, "027052": 302, "027215": 302, "parameter_estimates_histogram": 302, "histogram": [302, 304], "repeatchart": 302, "006755": 302, "52531": 302, "108662": 302, "258316": 302, "011408": 302, "005424": 302, "43599": 302, "270899": 302, "156400": 302, "014023": 302, "006585": 302, "38641": 302, "226891": 302, "162075": 302, "010971": 302, "005757": 302, "47090": 302, "193243": 302, "019133": 302, "006875": 302, "50111": 302, "345382": 302, "176756": 302, "009135": 302, "005683": 302, "34027": 302, "163931": 302, "159868": 302, "010816": 302, "005795": 302, "34379": 302, "075865": 302, "194188": 302, "018041": 302, "006078": 302, "35172": 302, "040387": 302, "214176": 302, "015683": 302, "98": [302, 311, 318, 320, 342], "005353": 302, "44898": 302, "155477": 302, "258743": 302, "020128": 302, "006247": 302, "49069": 302, "125491": 302, "219146": 302, "018971": 302, "ofv_statist": 302, "bootstrap_bootdata_ofv": 302, "original_bootdata_ofv": 302, "sum": [302, 312], "bootstrap_origdata_ofv": 302, "boostrap": 302, "original_origdata_ofv": 302, "delta_bootdata": 302, "delta_origdata": 302, "08165": 302, "729": 302, "644638": 302, "737749": 302, "ofv_distribut": 302, "parameter_distriut": 302, "593": 302, "389406": 302, "972104": 302, "599": 302, "216391": 302, "654": [302, 304], "548507": 302, "660": 302, "573965": 302, "795": 302, "776225": 302, "803": 302, "946508": 302, "816": 302, "836314": 302, "820": [302, 304, 326], "873796": 302, "821": 302, "322405": 302, "ofv_plot": 302, "dofv_quantiles_plot": 302, "show": [302, 306, 316, 318, 323, 330, 336, 337, 340], "metric": [302, 303, 326], "chi": 302, "squar": [302, 316], "664": 302, "272157": 302, "749": 302, "459450": 302, "061103": 302, "725470": 302, "679": 302, "585721": 302, "702": 302, "481949": 302, "748": 302, "074871": 302, "710": [302, 304], "203812": 302, "787": [302, 317], "180418": 302, "771": 302, "202034": 302, "119974e": 302, "491440e": 302, "096413e": 302, "005331": 302, "000922": 302, "001519": 302, "460998e": 302, "365879e": 302, "012689": 302, "000981": 302, "760432e": 302, "331894e": 302, "002076": 302, "755294e": 302, "000035": 302, "000176": 302, "000078": 302, "262063e": 302, "included_individu": 302, "case_result": [303, 304], "cook_scor": 303, "jackknife_cook_scor": 303, "delta_ofv": 303, "dofv_influenti": 303, "130159": 303, "121389": 303, "015207": 303, "348263": 303, "336159": 303, "144045": 303, "192433": 303, "181125": 303, "031030": 303, "163095": 303, "155901": 303, "026142": 303, "422651": 303, "404915": 303, "190732": 303, "374312": 303, "343311": 303, "097063": 303, "169869": 303, "163883": 303, "026223": 303, "263865": 303, "254943": 303, "058123": 303, "757098": 303, "673587": 303, "477910": 303, "150161": 303, "144191": 303, "023623": 303, "361646": 303, "352901": 303, "217902": 303, "255533": 303, "215005": 303, "035375": 303, "191848": 303, "187019": 303, "038199": 303, "376365": 303, "337975": 303, "096680": 303, "142806": 303, "137340": 303, "014709": 303, "193393": 303, "179744": 303, "031711": 303, "131746": 303, "122842": 303, "020637": 303, "176644": 303, "932149": 303, "036787": 303, "128197": 303, "120498": 303, "019030": 303, "141093": 303, "138101": 303, "029021": 303, "176582": 303, "153583": 303, "035291": 303, "104396": 303, "100064": 303, "015499": 303, "552071": 303, "501458": 303, "278595": 303, "242334": 303, "217068": 303, "047627": 303, "792099": 303, "715951": 303, "798775": 303, "135247": 303, "133493": 303, "021356": 303, "442779": 303, "424958": 303, "125763": 303, "132903": 303, "127188": 303, "010157": 303, "081122": 303, "076790": 303, "005443": 303, "183624": 303, "168501": 303, "027707": 303, "113959": 303, "111168": 303, "012363": 303, "532749": 303, "515747": 303, "325048": 303, "094133": 303, "091212": 303, "014747": 303, "447798": 303, "406737": 303, "194457": 303, "364978": 303, "352973": 303, "124295": 303, "270838": 303, "252922": 303, "063675": 303, "129553": 303, "121963": 303, "014043": 303, "254914": 303, "243250": 303, "064025": 303, "207529": 303, "194633": 303, "046887": 303, "239182": 303, "218112": 303, "044252": 303, "181986": 303, "173826": 303, "020285": 303, "604112": 303, "584208": 303, "604211": 303, "407717": 303, "369648": 303, "154161": 303, "215722": 303, "196744": 303, "043742": 303, "214167": 303, "200091": 303, "036238": 303, "094284": 303, "089002": 303, "007506": 303, "074174": 303, "072365": 303, "007535": 303, "743323": 303, "717468": 303, "654313": 303, "153971": 303, "147360": 303, "014502": 303, "284706": 303, "278460": 303, "072960": 303, "331587": 303, "309374": 303, "116933": 303, "447965": 303, "421612": 303, "129593": 303, "184872": 303, "175196": 303, "029896": 303, "430382": 303, "415446": 303, "141657": 303, "409307": 303, "369197": 303, "189729": 303, "084764": 303, "079718": 303, "007416": 303, "107600": 303, "103145": 303, "013947": 303, "154672": 303, "150761": 303, "028236": 303, "155632": 303, "150461": 303, "034848": 303, "covariance_ratio": 303, "skipped_individu": 303, "050505": 303, "963884": 303, "058896": 303, "087449": 303, "985403": 303, "029066": 303, "101636": 303, "086424": 303, "017369": 303, "094799": 303, "849310": 303, "121111": 303, "049151": 303, "096456": 303, "070088": 303, "040691": 303, "065881": 303, "606158": 303, "205007": 303, "099191": 303, "143483": 303, "050691": 303, "086007": 303, "156273": 303, "919336": 303, "056714": 303, "999221": 303, "029600": 303, "034017": 303, "108785": 303, "038495": 303, "954054": 303, "053618": 303, "096334": 303, "943556": 303, "125423": 303, "086167": 303, "145822": 303, "113939": 303, "114399": 303, "057664": 303, "788608": 303, "063991": 303, "115559": 303, "160549": 303, "034685": 303, "035618": 303, "714976": 303, "092664": 303, "089158": 303, "054565": 303, "002555": 303, "032356": 303, "003056": 303, "936719": 303, "122771": 303, "078285": 303, "096841": 303, "068821": 303, "sqrt": [303, 327], "p_i": 303, "p_": 303, "orig": 303, "operatornam": [303, 318, 340], "sum_": 303, "overlin": [303, 318], "_j": 303, "_k": [303, 318], "det": 303, "Then": [303, 318, 327], "ofv_": 303, "iofv_": 303, "iofv_k": 303, "ofv_k": 303, "case_column": 303, "rikard": [303, 305, 310, 333, 338], "nordgren": [303, 305, 310, 333, 338], "sebastian": [303, 305, 310], "ueckert": [303, 305, 310], "svetlana": 303, "freiberga": 303, "karlsson": [303, 305, 310, 318, 338], "faster": [303, 304, 333], "2018": [303, 323, 338], "abstr": [303, 305], "8683": 303, "www": [303, 305, 323], "meet": [303, 305, 307, 323, 333], "bin_observ": 304, "plot_dv_vs_pr": 304, "plot_abs_cwres_vs_ipr": 304, "stagewis": 304, "clearenc": 304, "replace_non_random_rv": 304, "get_observ": [304, 327], "is_strictness_fulfil": 304, "subtool": [304, 343], "properli": 304, "calculate_b": [304, 320, 322, 328], "incorrectli": 304, "final_model": 304, "plot_dv_vs_ipr": 304, "plot_cwres_vs_idv": 304, "add_indirect_effect": 304, "circul": 304, "version": [304, 306, 319, 323, 343], "filter_dataset": 304, "load_dataset": 304, "blqdv": 304, "better": [304, 328, 337, 338], "usag": [304, 306], "set_reference_valu": 304, "create_basic_pk_model": [304, 327], "add_bioavail": 304, "autogener": 304, "typ": 304, "add_effect_compart": 304, "reorgan": 304, "saddl": 304, "llq": 304, "preced": 304, "reorder": 304, "model4": 304, "frem": [304, 325, 335, 336], "create_report": 304, "write_model": [304, 325, 327, 329], "did": [304, 339], "dadt": [304, 327], "de": [304, 327], "set_zero_order_input": 304, "set_tmdd": 304, "plugin": [304, 309, 314, 315, 321], "generate_model_cod": 304, "get_model_cod": 304, "advan7": 304, "didn": 304, "header": 304, "is_linear": 304, "plot_transformed_eta_distribut": 304, "create_config_templ": [304, 308], "get_dv_symbol": 304, "set_initial_condit": 304, "abbr": [304, 327, 329], "set_dvid": [304, 327], "regress": 304, "defdos": [304, 327], "sometim": 304, "wrong": 304, "bad": 304, "1551": 304, "is_real": 304, "advan5": 304, "copy_model": 304, "nlmixr2": [304, 321, 327], "display_od": 304, "rework": 304, "run_covsearch": [304, 311], "explicitodesystem": 304, "eval": 304, "successfulli": [304, 337, 345], "round": [304, 313, 342, 343], "proxi": [304, 323], "1314": 304, "1355": [304, 311], "1378": [304, 320], "typo": 304, "1377": 304, "1381": 304, "mm": [304, 306, 328, 342, 343], "1064": [304, 320], "afd7707": 304, "1139": 304, "1394": 304, "too": [304, 323], "1117": 304, "timeout": 304, "loop": 304, "wait": 304, "lst": [304, 343], "much": 304, "ncomp": 304, "deidentify_data": [304, 327], "cli": 304, "anonym": 304, "setter": 304, "multivari": 304, "1293": 304, "1302": [304, 311], "1303": [304, 328], "last20": 304, "run_modelsearch": [304, 328, 343], "run_iovsearch": [304, 322], "run_ruvsearch": [304, 338], "run_iivsearch": [304, 320], "nomem": 304, "rh": 304, "1180": 304, "887": [304, 320, 322], "1162": 304, "1032": 304, "add_covariate_effect": [304, 327], "1004": 304, "1181": 304, "9fd701521": 304, "best_model": 304, "final_model_nam": 304, "a7fbcbfe2": 304, "update_initial_individual_estim": 304, "modelsearch_candidate1": [304, 328, 343], "wors": 304, "calculate_a": 304, "check_parameters_near_bound": 304, "check_high_correl": 304, "plot_iofv_vs_iofv": 304, "plot_individual_predict": 304, "evaluate_express": 304, "evaluate_weighted_residu": 304, "parameter_esimt": 304, "calculate_pk_parameters_statist": 304, "update_init": [304, 327], "predict_": 304, "print_fit_summari": 304, "write_result": 304, "rank_model": 304, "speedup": 304, "297a64041": 304, "1101": 304, "57fc4fee8": 304, "fd417aaf": 304, "convert_model": [304, 327], "d5458e36": 304, "keyerror": 304, "localmodeldirectori": 304, "filenotfounderror": 304, "1193bd39": 304, "unus": 304, "submodul": 304, "bb96a13c": 304, "update_paramet": 304, "0ca786c5": 304, "dd056da3": 304, "915bc9c7": 304, "get_config_path": [304, 308], "disabl": [304, 307, 308], "82b32278": 304, "unwant": 304, "debug": 304, "1131a610": 304, "ebfafb45": 304, "1173": 304, "fb070ee1": 304, "1049": [304, 320], "pyreadr": 304, "easier": [304, 314, 325], "instal": [304, 306, 308, 323, 344], "mac": [304, 309], "get_evid": [304, 327], "resmod": [304, 335], "916": 304, "errors_allow": 304, "1055": 304, "attibut": 304, "1092": 304, "exlud": 304, "unreport": 304, "1076": 304, "988": 304, "1c65359": 304, "42fe72f": 304, "1001": 304, "lead": 304, "uneven": 304, "branch": [304, 309], "stepwis": [304, 311, 316, 339, 343], "694": 304, "708": 304, "comment": [304, 329], "790": 304, "974": [304, 334], "produc": [304, 323], "1017": 304, "989": 304, "71f4cf23": 304, "dsl": 304, "932": 304, "973": 304, "cfc09bad": 304, "975": 304, "917": 304, "977": 304, "908": 304, "fd564168": 304, "088a046a": 304, "c76fa476": 304, "430f1d2e": 304, "make_declar": 304, "greekify_model": 304, "find_clearance_paramet": 304, "find_volume_paramet": 304, "vp": 304, "newer": 304, "seprat": 304, "solv": 304, "sporad": 304, "race": [304, 307], "lazi": 304, "duplic": 304, "745": 304, "1st": 304, "3rd": 304, "licens": [304, 308], "advanx": 304, "add_time_after_dos": [304, 327], "intercompartment": 304, "695": 304, "defob": 304, "gl": 304, "solve_ode_system": 304, "meta": 304, "switch": [304, 333], "read_dataset_from_datainfo": [304, 327], "addl": 304, "linalgerror": 304, "656": [304, 320], "tflite": [304, 319], "649": 304, "expand_additional_dos": [304, 327], "modelsyntaxerror": 304, "588": 304, "625": [304, 320], "578": 304, "vc1": 304, "577": 304, "success": [304, 307, 311, 317, 320, 322, 342, 343], "632": [304, 334, 342], "636": 304, "boundari": [304, 322, 328, 330, 343], "590": 304, "gl_real": 304, "sampled_iofv": [304, 340], "subblock": 304, "check_dataset": [304, 327], "tensorflow": 304, "modelbuild": 304, "add_mdt_iiv": 304, "add_eta": [304, 336], "etas_as_fullblock": 304, "iiv_as_fullblock": 304, "add_mdt_eta": 304, "wip": 304, "don": 304, "130": [304, 342], "calculate_se_from_inf": 304, "calculate_cov_from_inf": 304, "calculate_inf_from_cov": 304, "calculate_inf_from_corrs": 304, "calculate_corr_from_inf": 304, "528": 304, "457": 304, "translate_nmtran_tim": [304, 327], "print_model_cod": [304, 319, 327], "has_michaelis_menten_elimin": 304, "has_zero_order_elimin": 304, "has_first_order_elimin": 304, "has_mixed_mm_fo_elimin": 304, "2c": 304, "1c": 304, "timevari": 304, "create_symbol": 304, "remove_unused_parameters_and_rv": 304, "mu_reference_model": 304, "simplify_express": 304, "bump_model_numb": 304, "get_doseid": [304, 327], "get_unit_of": 304, "get_concentration_parameters_from_data": [304, 327], "write_csv": 304, "resample_data": 304, "omit_data": 304, "get_observation_express": 304, "get_individu": 304, "get_dos": [304, 327], "list_time_varying_covari": [304, 327], "estmeth": 304, "optim": [304, 314, 325, 333], "incorrect": 304, "add_allometri": [304, 327], "add_covariance_step": 304, "remove_covariance_step": 304, "insert_aft": 304, "modelstat": 304, "power_on_ruv": 304, "estimationmethod": 304, "guard": 304, "avoid": [304, 314, 323, 345], "cdd": 304, "bipp": [304, 306], "5000": 304, "shift": 304, "nest": 304, "set_dtbs_error_model": [304, 327], "dure": [304, 309, 343, 345], "logger": 304, "parametr": 304, "broken": [304, 342], "parallel": [304, 337, 343], "print_model_symbol": 304, "parameter_sampl": 304, "api": [304, 314, 327, 332, 333, 344], "improv": [304, 336], "eta_shrinkag": 304, "summarize_model": 304, "window": [304, 309, 319, 323], "rstudio": [304, 333, 345], "zero_order_absorpt": 304, "first_order_absorpt": 304, "bolus_absorpt": 304, "set_bolus_absorpt": [304, 327], "seq_zo_fo_absorpt": 304, "set_seq_zo_fo_absorpt": [304, 327], "have_zero_order_absorpt": 304, "individual_shrinkag": 304, "individual_parameter_statist": 304, "pk_paramet": 304, "create_rv_block": 304, "split_rv_block": 304, "nind": 304, "nob": 304, "nobsi": 304, "remove_error": 304, "additive_error": 304, "proportional_error": 304, "combined_error": 304, "has_additive_error": 304, "has_proportional_error": 304, "has_combined_error": 304, "theta_as_stdev": 304, "set_dtbs_error": 304, "tdist": [304, 334], "john_drap": 304, "add_individual_paramet": 304, "first_order_elimin": 304, "zero_order_elimin": 304, "michaelis_menten_elimin": 304, "mixed_mm_fo_elimin": 304, "revert": 304, "thread": [304, 307], "site": 304, "crossval": [304, 335], "qa": [304, 335], "plain": [304, 308, 309], "sdcorr": 304, "data_transform": 304, "evalut": 304, "dependent_variable_symbol": 304, "releas": [304, 323, 345], "claus": 304, "interfac": [304, 314, 319, 321, 323, 325, 327, 333, 344, 345], "com": 304, "stdin": 304, "123": [304, 311, 320, 322, 326, 328, 338], "clearer": 304, "prioriti": [304, 329], "aggregatedmodelfitresult": 304, "priorit": [304, 329], "half": [304, 334, 336], "life": [304, 334, 336], "set_nam": 304, "parameter_init": 304, "base_parameter_chang": [304, 318], "parameter_vari": [304, 318, 336], "coeffici": 304, "frem_result": 304, "simevalresult": 304, "odesystem": 304, "nonfixed_init": 304, "parameterset": 304, "migrat": 304, "github": [304, 309, 319, 321, 333, 345], "action": [304, 306, 307, 309, 323, 333], "columntyp": 304, "to_base_model": 304, "comined_mm_fo_elimin": 304, "absorption_r": 304, "pretti": 304, "qaresult": 304, "nmtranparseerror": 304, "error_model": 304, "pharmpyconfigpath": [304, 308], "environ": [304, 307, 344, 345], "linearizeresult": 304, "reset_indic": 304, "multiindic": 304, "functionsadd_lag_tim": 304, "yaml": 304, "view": [304, 323, 339], "assumpt": [304, 323], "0th": [304, 306], "parser": 304, "individul": 304, "extend": [304, 323, 336, 339], "postprocess": [304, 335], "librari": [304, 319, 321, 323, 333, 345], "stella": [305, 310, 333], "belin": [305, 310, 333], "gunnar": [305, 310], "yngman": [305, 310, 318], "simon": [305, 310], "carter": [305, 310], "buatoi": [305, 310], "jo\u00e3o": [305, 310], "abrant": [305, 310], "andrew": [305, 310], "hooker": [305, 310], "assemblerr": 305, "novel": 305, "process": [305, 309, 338], "2021": [305, 318], "9656": 305, "subcommand": 306, "top": [306, 313, 343], "help": [306, 307, 311, 327, 333, 343, 345], "verb": 306, "particular": [306, 307, 309, 313, 323, 324], "welcom": [306, 307, 309, 323], "exit": 306, "program": [306, 307, 319, 323], "pheno_r": [306, 313, 325, 326, 327], "prettyprint": 306, "output_fil": 306, "idcol": 306, "datecol": 306, "match": 306, "pager": 306, "stdout": [306, 343], "colnam": 306, "datasetsmultipl": 306, "1th": 306, "quot": 306, "comb": 306, "elimini": 306, "propot": 306, "error_typ": 306, "givenbi": 306, "cov_sampl": 306, "posdef": 306, "non_fix": 306, "input_path": 306, "particip": 307, "project": [307, 309, 321, 323, 345], "made": [307, 311, 323, 325, 337], "member": 307, "globe": 307, "divers": 307, "skill": [307, 333], "person": [307, 323], "experi": 307, "growth": 307, "everyon": [307, 309, 323], "guidelin": 307, "insid": [307, 323, 342], "goal": 307, "inclus": [307, 323, 336], "grow": 307, "pledg": 307, "treat": [307, 309, 323], "peopl": 307, "harass": 307, "bulli": 307, "sexual": 307, "orient": 307, "gender": 307, "ident": 307, "appear": [307, 345], "nation": [307, 310], "ethnic": 307, "religion": 307, "imageri": 307, "sexist": 307, "racist": 307, "exclusionari": 307, "joke": 307, "acknowledg": [307, 323], "citat": 307, "request": [307, 309], "author": [307, 323], "own": [307, 308, 314, 323], "cite": 307, "realiz": 307, "varieti": 307, "opinion": 307, "background": 307, "serv": [307, 323, 330, 333], "enrich": 307, "discuss": 307, "pro": 307, "con": 307, "technologi": 307, "proactiv": 307, "ensur": [307, 323, 337, 341], "heard": 307, "feel": [307, 333], "confid": 307, "freeli": 307, "question": 307, "answer": 307, "respectfulli": 307, "pai": 307, "attent": 307, "feedback": 307, "forum": 307, "especi": 307, "contribut": [307, 310, 321, 323], "conscienti": 307, "percept": 307, "wider": 307, "respond": 307, "strive": 307, "behavior": 307, "encourag": [307, 309, 314, 321], "debat": 307, "disagr": 307, "silent": 307, "violat": [307, 323], "contact": [307, 323], "talk": 307, "privat": [307, 323], "situat": 307, "onlin": 307, "offlin": 307, "mail": [307, 323], "social": 307, "media": 307, "confer": 307, "adapt": [307, 323], "astropi": 307, "global": [308, 345], "nonmen": 308, "conf": 308, "ini": [308, 327], "default_nonmem_path": 308, "nmfe751": 308, "licfil": 308, "rpath": 308, "temporarili": 308, "pharmpyconfigfil": 308, "your": [309, 319, 321, 323, 329, 343, 345], "bug": 309, "appreci": 309, "suggest": [309, 321], "suitabl": [309, 333], "student": [309, 333], "commun": [309, 323], "aspir": 309, "conduct": [309, 328], "foster": 309, "linux": [309, 319], "maco": [309, 319], "ll": [309, 327], "badg": 309, "pip": [309, 319], "python3": 309, "pip3": 309, "guid": [309, 313, 325, 327], "former": 309, "ubuntu": 309, "apt": 309, "url": [309, 319], "render": [309, 323, 333], "On": [309, 333], "sudo": 309, "brew": 309, "unnecessari": [309, 323], "thing": [309, 323], "instruct": [309, 319, 326, 343], "black": 309, "formatt": 309, "flake8": 309, "linter": 309, "isort": 309, "lint": 309, "reformat": 309, "py39": 309, "test_paramet": 309, "py": [309, 319], "test_get_theta": 309, "apart": 309, "suit": 309, "purpos": [309, 323], "test_modelsearch": 309, "test_summary_individu": 309, "pull": 309, "manag": 309, "contributor": [309, 323], "emploi": 309, "commit": [309, 323], "push": 309, "name_of_branch": 309, "deploy": 309, "setup": 309, "pypi": [309, 319], "trigger": [309, 325], "tag": 309, "disturb": 309, "checkout": 309, "rebas": 309, "changelog": 309, "bump": 309, "good": [309, 323], "semant": 309, "bumpvers": 309, "cfg": 309, "sh": 309, "patch": 309, "minor": 309, "major": [309, 323], "copyright": 309, "necessari": [309, 323], "coi": 309, "stream": [309, 325], "verbatim": [309, 323], "farmaci": 310, "uu": 310, "johan": 310, "borg": 310, "antonia": 310, "hufnagl": 310, "kajsa": 310, "harl": 310, "zhe": [310, 333], "huang": [310, 333], "aurelien": 310, "oom": 310, "viktor": 310, "rogn\u00e5": 310, "piyanan": 310, "assawasuwannakit": 310, "xiaomei": 310, "chen": 310, "alzahra": 310, "hamdan": 310, "osama": 310, "qutishat": 310, "shijun": 310, "wang": 310, "tianwu": 310, "yang": 310, "keqi": 310, "shi": 310, "xuanlin": 310, "liu": 310, "samia": 310, "moham": 310, "yersultan": 310, "mirasbekov": 310, "warm": 310, "thank": 310, "sponsor": 310, "hoffman": 310, "la": 310, "roch": 310, "ltd": 310, "pharmetheu": 310, "uppsala": [310, 321], "univers": [310, 321], "enabl": [310, 323], "resourc": 310, "swedish": 310, "infrastructur": 310, "snic": 310, "uppmax": 310, "research": [310, 333], "council": 310, "inter": [311, 320, 327], "five": 311, "sai": [311, 323, 329], "forcefulli": 311, "manual": [311, 313, 343], "rewritten": 311, "notic": [311, 323], "semicolon": 311, "sentenc": 311, "filtrat": [311, 328], "filtered_input_model": 311, "reflect": 311, "mox2": [311, 317, 320, 322, 328, 343], "covsearch_run1": 311, "covsearch_run2": 311, "covsearch_run3": 311, "covsearch_run4": 311, "covsearch_run5": 311, "covsearch_run6": 311, "covsearch_run7": 311, "covsearch_run8": 311, "covsearch_run9": 311, "covsearch_run10": 311, "covsearch_run11": 311, "covsearch_run12": 311, "covsearch_run13": 311, "covsearch_run14": 311, "covsearch_run15": 311, "covsearch_run16": 311, "covsearch_run17": 311, "covsearch_run18": 311, "covsearch_run19": 311, "covsearch_run20": 311, "covsearch_run21": 311, "covsearch_run22": 311, "covsearch_run23": 311, "covsearch_run24": 311, "covsearch_run25": 311, "covsearch_run26": 311, "covsearch_run27": 311, "covsearch_run28": 311, "covsearch_run29": 311, "covsearch_run30": 311, "covsearch_run31": 311, "covsearch_run32": 311, "covsearch_run33": 311, "covsearch_run34": 311, "covsearch_run35": 311, "covsearch_run36": 311, "covsearch_run37": 311, "covsearch_run38": 311, "covsearch_run39": 311, "covsearch_run40": 311, "covsearch_run41": 311, "covsearch_run42": 311, "covsearch_run43": 311, "covsearch_run44": 311, "covsearch_run45": 311, "covsearch_run46": 311, "covsearch_run47": 311, "covsearch_run48": 311, "covsearch_run49": 311, "covsearch_run50": 311, "covsearch_run51": 311, "covsearch_run52": 311, "covsearch_run53": 311, "covsearch_run54": 311, "pvalu": [311, 339], "goal_pvalu": [311, 339], "is_backward": [311, 339], "047127e": 311, "03": [311, 334, 336, 339, 342], "710000e": 311, "568110e": 311, "494490e": 311, "498453e": 311, "459287e": 311, "280678e": 311, "923500e": 311, "003390e": 311, "984500e": 311, "372293e": 311, "176965e": 311, "207550e": 311, "626878e": 311, "564495e": 311, "539960e": 311, "762000e": 311, "823200e": 311, "417058e": 311, "759040e": 311, "469024e": 311, "02": [311, 330, 336, 339, 342, 343], "811054e": 311, "642452e": 311, "840779e": 311, "261720e": 311, "651215e": 311, "954671e": 311, "163414e": 311, "926594e": 311, "491049e": 311, "423998e": 311, "706676e": 311, "374390e": 311, "054865e": 311, "105347e": 311, "300000e": 311, "029682e": 311, "641559e": 311, "748923e": 311, "363918e": 311, "203548e": 311, "052323e": 311, "567877e": 311, "507358e": 311, "510000e": 311, "1292": [311, 317, 320, 322, 328], "186761": [311, 317, 320, 322, 328], "742325": 311, "929085": 311, "315057": 311, "1346": 311, "501817": 311, "978215": 311, "1332": 311, "164976": 311, "062682": 311, "1312": 311, "249442": 311, "061671": 311, "248431": 311, "056538": 311, "1313": [311, 328], "243298": 311, "732689": 311, "919450": 311, "651626": 311, "1335": 311, "838386": 311, "814832": 311, "1334": 311, "001593": 311, "363759": 311, "550520": 311, "989077": 311, "175838": 311, "136326": 311, "323087": 311, "387950": 311, "1316": 311, "574711": 311, "961688": 311, "148448": 311, "743393": 311, "930153": 311, "617998": 311, "1340": 311, "804759": 311, "641996": 311, "1345": 311, "828756": 311, "288366": 311, "1357": 311, "475127": 311, "263168": 311, "1343": [311, 320], "449928": 311, "814686": 311, "1319": 311, "001446": 311, "181808": 311, "368568": 311, "957602": 311, "144362": 311, "567343": 311, "1347": 311, "754104": 311, "426389": 311, "613149": 311, "324567": 311, "1358": 311, "511327": 311, "446030": 311, "632790": 311, "549224": 311, "1326": 311, "735985": 311, "997342": 311, "184102": 311, "617389": 311, "1351": 311, "804150": 311, "900404": 311, "1350": 311, "087164": 311, "566615": 311, "1391": 311, "753375": 311, "929659": 311, "1352": 311, "116420": 311, "990522": 311, "177283": 311, "217267": 311, "404028": 311, "62": [311, 334], "729333": 311, "1354": 311, "916093": 311, "101": [311, 327], "379219": 311, "1393": 311, "565980": 311, "67": [311, 336, 339, 342], "670588": 311, "1359": 311, "857348": 311, "016040": 311, "202801": 311, "926496": 311, "113256": 311, "139": 311, "462177": 311, "1431": 311, "648937": 311, "83": [311, 334, 336], "706655": 311, "1375": 311, "893415": 311, "798603": 311, "1367": 311, "985364": 311, "801019": 311, "1438": 311, "987780": 311, "92": [311, 342], "443408": 311, "1384": 311, "630169": 311, "997461": 311, "1439": 311, "184221": 311, "322869": 311, "509630": 311, "925020": 311, "111781": 311, "142": 311, "814402": 311, "1435": 311, "001163": [311, 324], "862830": 311, "049591": 311, "449696": 311, "636456": 311, "801017": 311, "987778": 311, "89": [311, 328, 337], "86": 311, "1414": 311, "872375": 311, "93": [311, 317], "810457": 311, "630168": 311, "68": 311, "pop_vc_estim": [311, 317, 322, 338], "pop_mat_estim": [311, 317, 322, 338], "5328": [311, 317, 320, 322, 328], "104": [311, 317, 320, 322, 328], "2300": [311, 317, 320, 328], "433676": [311, 317, 320, 322, 328], "2632": 311, "103": [311, 320, 342], "2400": 311, "447194": 311, "8757": 311, "106": [311, 320, 334, 336, 338], "2690": 311, "429235": 311, "4824": 311, "0490": 311, "435646": 311, "1536": 311, "7690": 311, "430342": 311, "9763": 311, "102": 311, "8640": 311, "428158": 311, "9807": 311, "1030": 311, "505090": 311, "3823": 311, "4790": 311, "453248": 311, "3323": 311, "5279": 311, "434088": 311, "7087": 311, "109": [311, 328], "1750": 311, "459561": 311, "8501": 311, "4740": 311, "428178": 311, "4821": 311, "0270": 311, "435683": 311, "1635": 311, "5920": 311, "433194": 311, "0931": 311, "1120": 311, "435607": 311, "1216": 311, "2180": 311, "519385": 311, "3873": 311, "4580": 311, "453399": 311, "4279": 311, "6231": 311, "442192": 311, "9115": 311, "9240": 311, "466270": 311, "7337": 311, "9590": 311, "409478": 311, "3781": 311, "2760": 311, "415011": 311, "1007": 311, "5110": 311, "446059": 311, "1211": 311, "8490": 311, "522201": 311, "2833": 311, "7400": 311, "430777": 311, "3688": 311, "9010": 311, "444906": 311, "9130": 311, "7450": 311, "468161": 311, "8124": 311, "7120": 311, "407766": 311, "3789": 311, "2080": 311, "416694": 311, "1985": 311, "6770": 311, "441794": 311, "2994": 311, "94": 311, "1796": 311, "587939": 311, "4692": 311, "3027": 311, "440385": 311, "0941": 311, "6170": 311, "463834": 311, "6693": 311, "2570": 311, "413923": 311, "3618": 311, "427491": 311, "2658": 311, "5620": 311, "521096": 311, "4546": 311, "9522": 311, "446657": 311, "0732": 311, "0130": 311, "454492": 311, "7145": 311, "9771": 311, "451302": 311, "3318": 311, "9710": 311, "477444": 311, "4944": 311, "3068": 311, "502124": 311, "0790": 311, "7890": 311, "462595": 311, "7389": 311, "8006": 311, "491811": 311, "6677": 311, "7770": 311, "477864": 311, "6488": 311, "0460": 311, "472418": 311, "9834": 311, "9929": 311, "474434": 311, "0359": 311, "2120": 311, "478021": 311, "0706": 311, "1991": 311, "474688": 311, "0336": 311, "8083": 311, "475373": 311, "0636": 311, "2525": 311, "473063": 311, "0292": 311, "8033": 311, "473542": 311, "0651": 311, "9375": 311, "483644": 311, "0661": 311, "5310": 311, "462817": 311, "0432": 311, "1300": [311, 322], "446808": 311, "7913": 311, "90": [311, 330], "1894": 311, "489466": 311, "9838": 311, "9945": 311, "474441": 311, "0361": 311, "478038": 311, "ruv_prop_estim": [311, 317, 322, 338], "pop_clage_estim": 311, "209972": [311, 317, 320, 322, 328], "197452": 311, "005338": 311, "192852": 311, "199549": 311, "193411": 311, "195608": 311, "192557": 311, "198783": 311, "191425": 311, "192934": 311, "192682": 311, "000659": 311, "199545": 311, "000303": 311, "193747": 311, "000956": 311, "197305": 311, "006150": 311, "194664": 311, "005918": 311, "198812": 311, "000334": 311, "192753": 311, "006503": 311, "194238": 311, "009567": 311, "189160": 311, "005291": 311, "195766": 311, "003125": 311, "195730": 311, "004767": 311, "195098": 311, "006600": 311, "195843": 311, "001364": 311, "189330": 311, "003100": 311, "193116": 311, "008094": 311, "189540": 311, "006380": 311, "196038": 311, "002606": 311, "197429": 311, "000340": 311, "204599": 311, "002549": 311, "190442": 311, "000522": 311, "195705": 311, "005726": 311, "192398": 311, "002984": 311, "196915": 311, "000299": 311, "198387": 311, "001229": 311, "190453": 311, "000216": 311, "197082": 311, "005988": 311, "191512": 311, "002433": 311, "194217": 311, "000649": 311, "191075": 311, "001918": 311, "197129": 311, "005915": 311, "183751": 311, "001489": 311, "187999": 311, "001004": 311, "194026": 311, "005955": 311, "187663": 311, "002481": 311, "193344": 311, "009365": 311, "187822": 311, "002901": 311, "187730": 311, "187425": 311, "002946": 311, "184713": 311, "006622": 311, "187724": 311, "002919": 311, "187525": 311, "003050": 311, "192812": 311, "005142": 311, "183104": 311, "001493": 311, "187672": 311, "002483": 311, "193349": 311, "009366": 311, "pop_clwt_estim": 311, "382904": 311, "010536": 311, "387669": 311, "010497": 311, "396947": 311, "010523": 311, "385807": 311, "010703": 311, "554417": 311, "011851": 311, "519989": 311, "012179": 311, "808497": 311, "011109": 311, "737404": [311, 340], "007109": 311, "709206": 311, "000803": 311, "736659": 311, "000429": 311, "706752": 311, "000822": 311, "662625": 311, "002097": 311, "709124": 311, "000793": 311, "704774": 311, "427285": 311, "003711": 311, "779125": 311, "001087": 311, "007108": 311, "pop_matage_estim": 311, "pop_matsex_estim": 311, "059279": 311, "517590": 311, "056724": 311, "520520": 311, "063392": 311, "057943": 311, "019268": 311, "348000": 311, "008419": 311, "040813": 311, "045624": 311, "023159": 311, "057041": 311, "059912": 311, "003577": 311, "495110": 311, "070972": 311, "033397": 311, "013863": 311, "012482": 311, "367050": 311, "020109": 311, "442940": 311, "030354": 311, "491875": 311, "038044": 311, "224276": 311, "001885": 311, "848782": 311, "017435": 311, "646840": 311, "585757": 311, "000169": 311, "367142": 311, "002221": 311, "737357": 311, "009685": 311, "033267": 311, "009238": 311, "267484": 311, "012667": 311, "165471": 311, "005033": 311, "094740": 311, "010833": 311, "065816": 311, "004749": 311, "096523": 311, "005557": 311, "098655": 311, "107862": 311, "012020": 311, "118838": 311, "005781": 311, "002862": 311, "222520": 311, "005160": 311, "361570": 311, "008017": 311, "030930": 311, "005034": 311, "094706": 311, "010829": 311, "065876": 311, "pop_matwt_estim": 311, "pop_vcage_estim": 311, "019706": 311, "014651": 311, "020136": 311, "014954": 311, "022336": 311, "011936": 311, "005508": 311, "002344": 311, "013967": 311, "034213": 311, "034044": 311, "009672": 311, "008593": 311, "017124": 311, "000315": 311, "022223": 311, "019316": 311, "009542": 311, "010323": 311, "008652": 311, "018053": 311, "019211": 311, "001906": 311, "014021": 311, "011399": 311, "003565": 311, "010903": 311, "014331": 311, "013699": 311, "015830": 311, "000202": [311, 340], "002078": 311, "009019": 311, "005773": 311, "012366": 311, "002607": 311, "002247": 311, "005768": 311, "011567": 311, "006160": 311, "014272": 311, "004566": 311, "010938": 311, "002378": 311, "007473": 311, "011606": 311, "010672": 311, "000456": 311, "009445": 311, "014649": 311, "012169": 311, "005771": 311, "002248": 311, "pop_vcwt_estim": 311, "953372": 311, "013320": 311, "984897": 311, "012092": 311, "972469": 311, "011946": 311, "954734": 311, "010781": 311, "009540": 311, "009922": 311, "989687": 311, "009576": 311, "986758": 311, "869150": 311, "632058": 311, "008418": 311, "751771": 311, "007571": 311, "416489": 311, "013879": 311, "724866": 311, "008196": 311, "746265": 311, "007399": 311, "727224": 311, "008331": 311, "666572": 311, "010074": 311, "751144": 311, "008031": 311, "711725": 311, "008833": 311, "012851": 311, "967468": 311, "751794": 311, "007573": 311, "416464": 311, "013880": 311, "110": [311, 320, 322, 328, 338], "113": [311, 320, 322, 328, 338], "121": [311, 320, 322, 328, 338], "1403": [311, 320, 322, 328, 338], "1404": [311, 320, 322, 328, 338], "1405": [311, 320, 322, 328, 338], "1406": [311, 320, 322, 328, 338], "1407": [311, 320, 322, 328, 338], "757118": [311, 320, 322, 328], "659694": [311, 320, 322, 328], "302503": [311, 320, 322, 328], "464327": [311, 320, 322, 328], "034898": [311, 320, 322, 328], "482240": 311, "223632": 311, "357442": 311, "119299": 311, "565277": 311, "696443": 311, "062486": 311, "234841": 311, "088594": 311, "953572": 311, "857979": 311, "193305": 311, "003283": 311, "861988": 311, "188718": 311, "005806": 311, "962325": 311, "455479": 311, "289527": 311, "216857": 311, "4015": 311, "2022": [311, 317, 320, 322, 328, 343], "462": 311, "nhowev": [311, 317, 322, 342], "reduced_ofv": [311, 339], "extended_ofv": [311, 339], "ofv_drop": [311, 339], "extended_st": [311, 339], "621435": 311, "246753": 311, "394001": 311, "645626": 311, "219363": 311, "001068": 311, "875674": 311, "899671": 311, "152040": 311, "126842": 311, "678359": 311, "045482": 311, "821275": 311, "431017": 311, "290062": 311, "366965": 311, "488428": 311, "591623": 311, "039740": 311, "659788": 311, "942802": 311, "017391": 311, "380435": 311, "441298": 311, "668043": 311, "180108": 311, "388697": 311, "680065": 311, "025518": 311, "935973": 311, "77": 311, "446136": 311, "690615": 311, "782563": 311, "71": [311, 338], "002416": 311, "644805": 311, "554053": 311, "674591": 311, "072441": 311, "183059": 311, "134631": 311, "547765": 311, "311846": 311, "373764": 311, "196444": 311, "delta_df": [311, 339], "extended_signific": [311, 339], "covariate_effect": [311, 318, 336, 339], "ofv_summari": [311, 339], "candidate_summari": [311, 339], "n_test": [311, 339], "n_ok": [311, 339], "n_localmin": [311, 339], "n_fail": [311, 339], "stepinclud": [311, 339], "estimation_ofv": 312, "prediction_ofv": 312, "545": 312, "863847": 312, "186": 312, "192727": 312, "953185": 312, "694832": 312, "547": 312, "843632": 312, "184": [312, 334, 339], "022535": 312, "579": [312, 342], "109635": 312, "596550": 312, "prediction_ofv_sum": 312, "747": 312, "506644594254": 312, "read_raw_dataset": 313, "sever": [313, 319, 327, 336], "examin": [313, 317, 319, 328, 344], "di": 313, "role": 313, "identif": [313, 338], "mostli": [313, 314, 333], "steven": 313, "typologi": 313, "en": [313, 314, 318], "wikipedia": 313, "wiki": [313, 323], "level_of_measur": 313, "annot": 313, "kg": 313, "mg": 313, "l": 313, "low": [313, 327, 344], "understand": [313, 332], "accompani": [313, 323], "arrai": [313, 325, 327, 343], "And": [313, 323, 327, 343], "under": [314, 321, 323, 339, 345], "construct": [314, 332], "complet": 314, "four": 314, "distinct": 314, "layer": [314, 328, 331], "worklow": 314, "higher": [314, 321, 325, 327, 340], "coupl": 314, "mathemat": [314, 325, 333], "concid": 314, "live": 314, "namespac": 314, "mutablesequ": 314, "scalar": [314, 325], "element": [314, 326, 345], "concern": [314, 323], "expos": 314, "numpydoc": 314, "readthedoc": 314, "ecosystem": 314, "thu": [314, 320, 323, 325, 343], "wrap": 314, "share": [314, 323, 331, 337], "leak": 314, "third": [314, 323], "parti": [314, 323], "break": 314, "psc": 316, "reason": [316, 323, 333, 341], "fewewst": 316, "But": [316, 323], "run_estmethod": 317, "chapter": [317, 328], "few": 317, "cartesian": 317, "addition": [317, 328, 343], "9999": 317, "supported_solv": 317, "runtime_estim": 317, "estmethod_run2": 317, "2422": 317, "465718": 317, "81": [317, 320, 326], "estmethod_run1": 317, "2271": 317, "769243": 317, "run_typ": 317, "1299": [317, 322], "696027": 317, "2420": 317, "117263": 317, "145": 317, "2702": 317, "1840": 317, "3241": 317, "6578": 317, "iiv_cl_estim": [317, 322, 338], "iiv_vc_estim": [317, 322, 338], "481858": [317, 320, 322, 328], "593654": [317, 320, 322, 328], "439589": 317, "483291": 317, "598179": 317, "901289": 317, "419533": 317, "408292": 317, "iiv_mat_estim": [317, 322, 338], "000130": [317, 322, 328], "322572": 317, "197647": 317, "865979": 317, "105366": 317, "10000": 317, "WITH": [317, 320, 322, 323, 330, 342], "THE": [317, 320, 322, 323, 330, 342], "model_3b": 318, "u": [318, 327], "eta_i": 318, "n_": 318, "par": [318, 325], "eta_k": 318, "bmatrix": 318, "vdot": 318, "eta_": [318, 325, 327], "sim": [318, 325, 327, 340], "mathcal": [318, 325, 327], "mu_2": 318, "omega_": [318, 325], "n1": 318, "n2": 318, "ddot": 318, "latter": 318, "partit": 318, "5th": 318, "630859": 318, "868770": 318, "176754": 318, "95th": 318, "925602": 318, "082310": 318, "244607": 318, "569077": 318, "600360": 318, "632538": 318, "532478": 318, "824355": 318, "138312": 318, "577861": 318, "761430": 318, "991915": 318, "003863": 318, "148763": 318, "297579": 318, "600771": 318, "631260": 318, "661025": 318, "315965": 318, "549669": 318, "811532": 318, "margin": 318, "ij": 318, "ijk": 318, "omega_k": 318, "sigma_1": 318, "sigma_2": 318, "sigma_i": 318, "turn": [318, 325], "percent": 318, "red": 318, "figur": [318, 330], "vconcatchart": 318, "sigma_": [318, 325], "020503": 318, "628814": 318, "009309": 318, "544459": 318, "026950": 318, "613127": 318, "050396": 318, "551581": 318, "individual_effect": 318, "913307": 318, "899565": 318, "923297": 318, "939015": 318, "926632": 318, "948404": 318, "933506": 318, "894967": 318, "970755": 318, "010192": 318, "973823": 318, "047109": 318, "992728": 318, "986142": 318, "999404": 318, "361911": 318, "322628": 318, "418737": 318, "894772": 318, "868658": 318, "917333": 318, "947797": 318, "923656": 318, "969732": 318, "771958": 318, "748072": 318, "790423": 318, "790120": 318, "768277": 318, "806911": 318, "percentu": 318, "unexplained_vari": 318, "sd_observ": 318, "sd_5th": 318, "sd_95th": 318, "469535": 318, "359934": 318, "547612": 318, "465490": 318, "352335": 318, "538174": 318, "165502": 318, "141580": 318, "190726": 318, "159149": 318, "134989": 318, "183613": 318, "420471": 318, "327104": 318, "490419": 318, "404440": 318, "306148": 318, "467046": 318, "143317": 318, "122348": 318, "166012": 318, "141826": 318, "120282": 318, "163610": 318, "percetil": 318, "025328": 318, "022571": 318, "020115": 318, "216681": 318, "188254": 318, "163572": 318, "027391": 318, "021634": 318, "020540": 318, "intermedi": 318, "model_4": [318, 325], "parameter_inits_and_estim": 318, "model_3": 318, "115195": 318, "007066": 318, "209016": 318, "125999": 318, "020191": 318, "224959": 318, "126000": 318, "007084": 318, "38635": 318, "220463": 318, "195326": 318, "176796": 318, "bsv_apgr": [318, 325], "010583": 318, "107027": 318, "000008": 318, "171529": 318, "404278": 318, "000010": 318, "012042": 318, "115427": 318, "000032": 318, "208475": 318, "415588": 318, "000030": 318, "062712": 318, "117271": 318, "039930": 318, "446939": 318, "402075": 318, "bsv_wgt": [318, 325], "244579": 318, "244448": 318, "002173": 318, "002170": 318, "244080": 318, "007763": 318, "007760": 318, "249237": 318, "034610": 318, "015250": 318, "relative_chang": 318, "773218": 318, "095327": 318, "520526": 318, "271369": 318, "110618": 318, "896": 318, "974324": 318, "868": [318, 320], "657803": 318, "852": 318, "803483": 318, "753": 318, "302743": 318, "themselv": 318, "ideal": 318, "estimated_covari": 318, "stdev": 318, "423728": 318, "237640": 318, "525424": 318, "704565": [318, 327], "nyberg": 318, "hb": 318, "jonsson": 318, "mo": 318, "introduct": 318, "cpt": 318, "pharmacometr": [318, 321, 323, 343], "syst": 318, "pharmacol": 318, "1002": 318, "psp4": 318, "12741": 318, "plan": 319, "stabl": 319, "googl": [319, 333], "coral": 319, "repo": 319, "tflite_runtim": 319, "nonlinear": 319, "read_model_result": 320, "aspect": [320, 327, 336, 343], "explor": [320, 333], "naiv": 320, "minima": 320, "\u03b4ofv": [320, 322, 328], "\u03b4aic": [320, 322, 328], "\u03b4bic": [320, 322, 328], "iivsearch_no_of_etas_candidate3": 320, "282024": 320, "iivsearch_no_of_etas_candidate2": 320, "217": 320, "691571": 320, "iivsearch_no_of_etas_candidate6": 320, "385": 320, "641987": 320, "iivsearch_no_of_etas_candidate1": 320, "631": 320, "871991": 320, "iivsearch_no_of_etas_candidate5": 320, "633": [320, 326], "419500": 320, "iivsearch_no_of_etas_candidate4": 320, "815": 320, "076729": 320, "iivsearch_no_of_etas_candidate7": 320, "834": 320, "249063": 320, "iivsearch_block_structure_candidate1": 320, "971960": 320, "1283": 320, "597406": 320, "1279": 320, "315382": 320, "1061": 320, "623812": 320, "893": 320, "673395": 320, "443392": 320, "645": 320, "895882": 320, "464": 320, "238653": 320, "066319": 320, "1365": 320, "569365": 320, "178325": 320, "1280": 320, "1278": [320, 328], "1070": 320, "204731": 320, "1058": 320, "897": 320, "963854": 320, "024311": 320, "644": 320, "650": 320, "186341": 320, "640": 320, "468": 320, "529112": 320, "458": 320, "437": 320, "440744": 320, "1364": 320, "1261": [320, 322], "189012": 320, "1259": [320, 328], "530267": [320, 328], "1039": 320, "215418": [320, 339], "641723": 320, "034998": 320, "620": 320, "864210": 320, "439": [320, 342], "206982": 320, "417": 320, "411370": 320, "160972": 320, "5333": 320, "0366": 320, "1164": 320, "2929": 320, "8058": 320, "9055": 320, "2270": 320, "9424": 320, "1360": 320, "239": 320, "1090": 320, "234": 320, "6680": 320, "9380": 320, "6690": 320, "9880": 320, "433544": 320, "114210": 320, "347648": 320, "316164": 320, "310155": 320, "922906": 320, "434563": 320, "436279": 320, "481830": 320, "594777": 320, "396159": 320, "516927": 320, "593578": 320, "414690": 320, "247930": 320, "656304": 320, "00013": 320, "31998": 320, "08352": 320, "43473": 320, "209975": 320, "401593": 320, "574966": 320, "736398": 320, "750954": 320, "744891": 320, "810669": 320, "215885": 320, "iiv_cl_iiv_vc_estim": 320, "498114": 320, "965311": 320, "348227": 320, "596114": 320, "524856": 320, "831038": 320, "973037": 320, "826292": 320, "168816": 320, "275494": 320, "612863": 320, "081253": 320, "444919": 320, "093815": 320, "067016": 320, "554482": 320, "103963": 320, "060027": 320, "670815": 320, "108198": 320, "049148": 320, "371": 320, "rxode2": [321, 327], "post": [321, 338], "sens": 322, "brute": 322, "approach": 322, "nonzero": 322, "iovsearch_run7": 322, "iovsearch_run5": 322, "iovsearch_run3": 322, "iovsearch_run4": 322, "iovsearch_run2": 322, "iovsearch_run1": 322, "iovsearch_run8": 322, "540508": 322, "1265": 322, "694052": 322, "230772": 322, "384316": 322, "230394": 322, "383938": 322, "1262": 322, "153544": 322, "750000": 322, "403544": 322, "750400": 322, "403145": 322, "060114": 322, "093431": 322, "043077": 322, "1257": 322, "110467": 322, "782429": 322, "1115": 322, "911624": 322, "015062": 322, "707566": 322, "017679": 322, "017280": 322, "707992": 322, "707614": 322, "017728": 322, "1145": 322, "944840": 322, "230": 322, "1954": 322, "242": [322, 334, 336], "440613": 322, "665": 322, "439784": 322, "1951": 322, "241": 322, "1950": 322, "440611": 322, "1402": 322, "439785": 322, "439783": 322, "2313": 322, "438628": 322, "474140": 322, "586866": 322, "311861": 322, "472835": 322, "590422": 322, "320387": 322, "474125": 322, "586859": 322, "311859": 322, "474111": 322, "586860": 322, "311903": 322, "590425": 322, "320393": 322, "472840": 322, "590424": 322, "320395": 322, "572627": 322, "290631": 322, "omega_iov_1_estim": 322, "194680": 322, "002735": 322, "195532": 322, "194676": 322, "194675": 322, "195531": 322, "197005": 322, "483460": 322, "omega_iov_2_estim": 322, "omega_iov_3_estim": 322, "000006": [322, 337], "000000e": [322, 337, 339], "241921": 322, "119820": 322, "001912": 322, "068405": 322, "121866": 322, "620420": 322, "271367": 322, "291396": 322, "230854": 322, "051358": 322, "936871": 322, "267222": 322, "042977": 322, "050766": 322, "059323": 322, "250083": 322, "291876": 322, "187631": 322, "020838": 322, "612880": 322, "660334": 322, "657": 322, "279": [322, 334], "NEAR": [322, 328, 330], "adopt": 323, "wikimedia": 323, "bowl_of_hygieia_by_david": 323, "svg": 323, "cc": 323, "BY": 323, "sa": 323, "font": 323, "pt": 323, "san": 323, "relicens": 323, "lgpl": 323, "know": 323, "maintaint": 323, "2023": [323, 330, 342], "softwar": [323, 325, 326, 327, 333, 343], "redistribut": 323, "publish": 323, "foundat": 323, "hope": 323, "warranti": 323, "impli": 323, "merchant": 323, "FOR": 323, "modif": [323, 336], "permit": 323, "retain": 323, "disclaim": 323, "reproduc": 323, "materi": 323, "holder": 323, "AND": 323, "AS": 323, "OR": 323, "BUT": 323, "NOT": 323, "TO": [323, 330, 342], "OF": [323, 330, 342], "IN": 323, "shall": 323, "BE": [323, 330, 342], "liabl": 323, "incident": 323, "exemplari": 323, "consequenti": 323, "damag": 323, "procur": 323, "servic": 323, "loss": 323, "profit": 323, "busi": 323, "interrupt": 323, "theori": [323, 325], "liabil": 323, "contract": 323, "tort": 323, "neglig": 323, "aris": 323, "advis": 323, "SUCH": 323, "june": 323, "2007": 323, "inc": 323, "fsf": 323, "preambl": 323, "copyleft": 323, "practic": 323, "awai": 323, "contrast": 323, "guarante": 323, "speak": 323, "price": 323, "charg": 323, "wish": 323, "piec": 323, "prevent": 323, "deni": 323, "ask": [323, 345], "surrend": 323, "therefor": [323, 343], "grati": 323, "fee": 323, "recipi": 323, "gpl": 323, "assert": 323, "offer": [323, 327], "permiss": 323, "clearli": 323, "sake": 323, "erron": 323, "devic": 323, "although": 323, "manufactur": 323, "fundament": 323, "incompat": 323, "aim": [323, 336], "systemat": 323, "abus": 323, "area": [323, 333], "unaccept": 323, "prohibit": 323, "substanti": 323, "domain": [323, 331, 343], "stand": 323, "readi": 323, "provis": 323, "futur": 323, "threaten": 323, "constantli": 323, "patent": 323, "danger": 323, "proprietari": 323, "assur": 323, "law": 323, "semiconductor": 323, "mask": 323, "license": 323, "address": 323, "organ": [323, 325], "fashion": 323, "exact": 323, "earlier": 323, "cover": [323, 328, 329, 332, 341, 344], "unmodifi": 323, "propag": 323, "secondarili": 323, "infring": 323, "countri": 323, "convei": 323, "mere": 323, "network": 323, "transfer": 323, "extent": 323, "conveni": [323, 325], "promin": 323, "visibl": 323, "menu": 323, "criterion": [323, 343], "offici": 323, "wide": 323, "among": 323, "essenti": 323, "kernel": 323, "script": [323, 343], "link": [323, 338], "subprogram": 323, "intim": 323, "regener": 323, "grant": 323, "irrevoc": 323, "affirm": 323, "unlimit": 323, "constitut": 323, "fair": 323, "equival": [323, 343], "sole": [323, 337], "facil": 323, "compli": 323, "behalf": 323, "relationship": [323, 339], "circumst": 323, "sublicens": 323, "anti": 323, "circumvent": 323, "deem": 323, "technolog": 323, "oblig": 323, "articl": 323, "wipo": 323, "treati": 323, "decemb": 323, "1996": 323, "waiv": 323, "forbid": 323, "exercis": 323, "intent": 323, "enforc": 323, "medium": [323, 333], "conspicu": 323, "intact": 323, "absenc": 323, "relev": [323, 329, 343], "anyon": 323, "who": [323, 329], "possess": 323, "invalid": 323, "natur": 323, "storag": 323, "aggreg": 323, "beyond": 323, "embodi": 323, "durabl": 323, "customarili": 323, "interchang": 323, "spare": 323, "cost": 323, "server": 323, "occasion": 323, "noncommerci": 323, "subsect": 323, "6b": 323, "further": [323, 325], "clear": [323, 345], "host": 323, "satisfi": 323, "peer": 323, "transmiss": 323, "6d": 323, "portion": 323, "consum": 323, "tangibl": 323, "household": 323, "sold": 323, "incorpor": 323, "dwell": 323, "doubt": 323, "resolv": [323, 331], "favor": 323, "coverag": 323, "typic": [323, 343], "commerci": 323, "industri": 323, "procedur": [323, 342, 343], "suffic": 323, "interf": 323, "perpetu": 323, "character": 323, "nor": 323, "abil": 323, "rom": 323, "advers": 323, "protocol": 323, "publicli": 323, "password": 323, "unpack": 323, "supplement": 323, "govern": 323, "notwithstand": 323, "misrepresent": 323, "licensor": 323, "declin": 323, "trademark": 323, "trade": 323, "indemnif": 323, "contractu": 323, "impos": 323, "surviv": 323, "expressli": 323, "void": 323, "paragraph": 323, "ceas": 323, "reinstat": 323, "provision": 323, "perman": 323, "notifi": 323, "prior": 323, "dai": 323, "cessat": 323, "moreov": 323, "cure": 323, "receipt": 323, "qualifi": 323, "ancillari": 323, "consequ": 323, "likewis": 323, "downstream": 323, "complianc": 323, "entiti": 323, "asset": 323, "subdivid": 323, "plu": 323, "effort": 323, "royalti": 323, "litig": 323, "claim": 323, "counterclaim": 323, "lawsuit": 323, "alleg": 323, "sell": 323, "sale": 323, "acquir": 323, "hereaft": 323, "manner": [323, 328], "worldwid": 323, "agreement": 323, "denomin": 323, "coven": 323, "sue": 323, "knowingli": 323, "readili": 323, "arrang": [323, 343], "depriv": 323, "yourself": 323, "benefit": [323, 333], "knowledg": 323, "believ": 323, "pursuant": 323, "convey": 323, "discriminatori": 323, "scope": [323, 341], "payment": 323, "primarili": 323, "march": 323, "constru": 323, "defens": 323, "court": 323, "contradict": 323, "excus": 323, "simultan": [323, 328], "pertin": 323, "agre": 323, "whom": 323, "refrain": 323, "affero": 323, "revis": 323, "Such": 323, "spirit": 323, "ever": 323, "THERE": 323, "qualiti": 323, "prove": 323, "defect": 323, "repair": 323, "WILL": 323, "inabl": 323, "BEING": 323, "inaccur": 323, "sustain": 323, "failur": [323, 333], "review": 323, "waiver": 323, "civil": 323, "greatest": 323, "achiev": 323, "safest": 323, "pointer": 323, "brief": 323, "idea": [323, 333], "electron": 323, "paper": 323, "hypothet": 323, "Of": 323, "cours": 323, "gui": 323, "box": [323, 336], "employ": 323, "programm": 323, "school": 323, "philosophi": 323, "why": 323, "7b2feb6f20b626a559d3150f6638c111f20b5213": 323, "lin_evalu": 324, "lin_estim": 324, "847272": 324, "problemat": 324, "742853": 324, "722681": 324, "020172": 324, "049270": 324, "072922": 324, "023652": 324, "042005": 324, "025071": 324, "016933": 324, "812731": 324, "767326": 324, "045405": 324, "092668": 324, "052741": 324, "039927": 324, "345523": 324, "466217": 324, "120694": 324, "092993": 324, "062696": 324, "030297": 324, "515740": 324, "483016": 324, "032724": 324, "320532": 324, "253131": 324, "067401": 324, "998789": 324, "959488": 324, "039301": 324, "216717": 324, "214554": 324, "002163": 324, "099921": 324, "125228": 324, "025306": 324, "321679": 324, "306275": 324, "015405": 324, "261241": 324, "333707": 324, "072466": 324, "671243": 324, "651480": 324, "019763": 324, "330720": 324, "297562": 324, "033158": 324, "936161": 324, "906483": 324, "029678": 324, "714069": 324, "871090": 324, "157021": 324, "019825": 324, "011817": 324, "008008": 324, "056142": 324, "013498": 324, "042644": 324, "248747": 324, "213924": 324, "034823": 324, "605213": 324, "571494": 324, "033719": 324, "815937": 324, "898911": 324, "082974": 324, "454128": 324, "483765": 324, "029637": 324, "964631": 324, "119373": 324, "154742": 324, "186715": 324, "170103": 324, "016612": 324, "077661": 324, "064019": 324, "013642": 324, "940635": 324, "941894": 324, "001260": 324, "074883": 324, "073446": 324, "001437": 324, "256369": 324, "245489": 324, "010881": 324, "103887": 324, "101956": 324, "001932": 324, "907728": 324, "900485": 324, "007243": 324, "743720": 324, "709980": 324, "033740": 324, "047324": 324, "021009": 324, "026315": 324, "430306": 324, "400894": 324, "029412": 324, "781609": 324, "798011": 324, "016402": 324, "378940": 324, "371430": 324, "007511": 324, "194729": 324, "237151": 324, "042422": 324, "599213": 324, "525654": 324, "073559": 324, "709166": 324, "667521": 324, "041645": 324, "219054": 324, "180075": 324, "038978": 324, "122738": 324, "296506": 324, "173768": 324, "229686": 324, "228531": 324, "001156": 324, "756406": 324, "734272": 324, "022134": 324, "979740": 324, "927830": 324, "051910": 324, "813988": 324, "812185": 324, "001803": 324, "234962": 324, "233799": 324, "389988": 324, "431669": 324, "041681": 324, "057167": 324, "047647": 324, "009521": 324, "429917": 324, "365265": 324, "064652": 324, "011212": 324, "105276": 324, "094064": 324, "302735": 324, "342891": 324, "040156": 324, "292516": 324, "307608": 324, "015092": 324, "067193": 324, "977095": 324, "090098": 324, "359971": 324, "357379": 324, "002592": 324, "340768": 324, "341140": 324, "000372": 324, "515376": 324, "511708": 324, "003668": 324, "970486": 324, "940640": 324, "029846": 324, "638461": 324, "592266": 324, "046195": 324, "iofv_plot": 324, "At": 325, "heart": 325, "li": [325, 343], "subclass": 325, "principl": 325, "mymodel": [325, 327], "parset": 325, "displaystyl": [325, 327], "eps_": 325, "similarli": [325, 345], "theta_": 325, "s_": 325, "a_": [325, 327, 342], "quit": 325, "flexibl": 325, "cumbersom": 325, "unimport": 325, "frem_path": 325, "frem_model": 325, "frem_model_result": 325, "omega\u2082": 325, "omega\u2083": 325, "omega\u2084": 325, "\u2082": 325, "eta\u2083": 325, "\u2083": 325, "eta\u2084": 325, "eps\u2082": 325, "epscov": 325, "bsv_": 325, "omega_2_1": 325, "omega_3_1": 325, "omega_4_1": 325, "omega_3_2": 325, "omega_4_2": 325, "omega_4_3": 325, "000286193": 325, "0676481": 325, "0256033": 325, "0235094": 325, "00161838": 325, "24458": 325, "omega_est": 325, "0393482": 325, "0168369": 325, "0442286": 325, "0426757": 325, "0259374": 325, "0654878": 325, "00168063": 325, "983027": 325, "240423": 325, "98305": 325, "choleski": 325, "198363807182661": 325, "0848788911603008": 325, "136868454493349": 325, "222967085720797": 325, "616745467855979": 325, "743597812371906": 325, "215138540674925": 325, "145697201390566": 325, "508675383095755": 325, "810424017694199": 325, "pure": 325, "astyp": 325, "numeric64": 325, "linalg": 325, "19836381": 325, "08487889": 325, "13686845": 325, "22296709": 325, "61674547": 325, "74359781": 325, "21513854": 325, "1456972": 325, "50867538": 325, "81042402": 325, "esim": 326, "testdata": 326, "2760562818805": 326, "171321": 326, "167051": 326, "115069": 326, "Or": 326, "039153": 326, "022378": 326, "009904": 326, "044731": [326, 337], "027325": 326, "527072": [326, 337], "457068": [326, 337], "267918": [326, 337], "172147": [326, 337], "proper": 326, "388058": 326, "356900": 326, "238442": 326, "096516": 326, "invers": [326, 337], "29955600": 326, "800": 326, "910": 326, "039": 326, "207": 326, "809": 326, "520": 326, "980": 326, "200": 326, "450": 326, "810": 326, "947352": [326, 337], "970591": [326, 337], "982342": [326, 337], "457091": [326, 337], "839437": [326, 337], "257230": 326, "098338": 326, "538621": 326, "647969": 326, "394643": 326, "480164": 326, "650233": 326, "991406": 326, "378880": 326, "739902": 326, "328800": 326, "113284": 326, "212096": 326, "334047": 326, "327778": 326, "821533": 326, "631281": 326, "861669": 326, "915261": 326, "988977": 326, "279273": 326, "733181": 326, "830053": 326, "851724": 326, "212095": 326, "774791": 326, "352283": 326, "172643": 326, "427376": 326, "381444": 326, "624014": 326, "970627": 326, "177028": 326, "206540": 326, "955029": 326, "982447": 326, "051499": 326, "424503": 326, "734342": 326, "018477": 326, "810285": 326, "279258": 326, "168486": 326, "190508": 326, "749134": 326, "598565": 326, "237467": 326, "568934": 326, "800062": 326, "098025": 326, "586253": 326, "663948": 326, "850993": 326, "605845": 326, "143": 326, "045": [326, 334], "971": 326, "881": 326, "575": 326, "080": 326, "063": 326, "427": 326, "668": 326, "543": 326, "662": 326, "478": 326, "667": 326, "253": 326, "495": 326, "918": 326, "67071": 326, "401100": 326, "35080": 326, "587770": 326, "36360": 326, "278800": 326, "19730": 326, "670700": 326, "21710": 326, "352600": 326, "86050": 326, "067200": 326, "35060": 326, "059269": 326, "72100": 326, "036754": 326, "10860": 326, "814140": 326, "28180": 326, "699410": 326, "eb": 326, "043861": 326, "005430": 326, "166321": 326, "131833": 326, "095934": 326, "130868": 326, "009154": 326, "017388": 326, "102019": 326, "283500": 326, "019417": 326, "099839": 326, "045946": 326, "059072": 326, "024270": 326, "189351": 326, "248536": 326, "091872": 326, "009545": 326, "012052": 326, "066151": 326, "293685": 326, "030236": 326, "074789": 326, "094502": 326, "147433": 326, "076820": 326, "105604": 326, "020051": 326, "066265": 326, "086035": 326, "023260": 326, "067138": 326, "030859": 326, "337255": 326, "035532": 326, "032579": 326, "028410": 326, "003589": 326, "080613": 326, "060233": 326, "052854": 326, "004469": 326, "057344": 326, "051992": 326, "212941": 326, "137510": 326, "004111": 326, "023282": 326, "302636": 326, "039069": 326, "119442": 326, "044956": 326, "263320": 326, "000776": 326, "083231": 326, "003150": 326, "012752": 326, "049654": 326, "080932": 326, "000555": 326, "099614": 326, "061864": 326, "332738": 326, "038156": 326, "067641": 326, "038017": 326, "184137": 326, "156617": 326, "208753": 326, "114558": 326, "053036": 326, "008405": 326, "026004": 326, "144920": 326, "081646": 326, "083320": 326, "015380": 326, "000392": 326, "078062": 326, "018966": 326, "112030": 326, "112715": 326, "383786": 326, "001730": 326, "167583": 326, "042068": 326, "066598": 326, "037600": 326, "000093": 326, "010662": 326, "009775": 326, "058306": 326, "229005": 326, "033958": 326, "008959": 326, "092312": 326, "050987": 326, "192569": 326, "002727": 326, "225657": 326, "115824": 326, "204269": 326, "054792": 326, "066334": 326, "123689": 326, "239678": 326, "047215": 326, "186615": 326, "000949": 326, "010812": 326, "015929": 326, "017213": 326, "005234": 326, "122552": 326, "076677": 326, "095696": 326, "024883": 326, "002999": 326, "007157": 326, "inspect": [327, 344], "model_nlmixr": 327, "diff": [327, 333], "add_error": 327, "prop_error": 327, "focei": 327, "model_start": 327, "eta_vc": 327, "pop_": 327, "225": 327, "epsilon_": 327, "iiv_cl_iiv_vc": 327, "\u03c3": 327, "iiv_mat": 327, "iiv_": 327, "advan2": 327, "THEN": 327, "22500000000000e": 327, "cond": 327, "maxev": 327, "99999": 327, "cipredi": 327, "mytab": 327, "tlag": 327, "alag1": 327, "advan3": 327, "trans4": 327, "run4": 327, "tol": 327, "pop_clmm": 327, "85000000000001": 327, "pop_km": 327, "iiv_clmm": 327, "iiv_clmm_iiv_vc": 327, "iiv_cl_iiv_mat": 327, "iiv_vc_iiv_mat": 327, "0094868": 327, "onto": 327, "wgt_median": 327, "30000": 327, "clwgt": 327, "pop_clwgt": 327, "user_effect": 327, "wgt_std": 327, "add_population_paramet": 327, "unfix_parameters_to": 327, "\u03b5\u209a\u2081": 327, "p1": 327, "set_time_varying_error_model": [327, 338], "100000000000000": 327, "f_flag": 327, "f_": 327, "geq": 327, "get_id": 327, "get_mdv": 327, "largest": 327, "ser": 327, "delai": [328, 341, 343], "grammar": [328, 341], "inst": [328, 343], "leav": 328, "exhaustive_stepwis": 328, "obtain": 328, "basi": 328, "subsequ": [328, 329, 343], "modelsearch_candidate2": [328, 343], "594608": 328, "1272": 328, "124874": 328, "modelsearch_candidate3": [328, 343], "558028": 328, "088295": 328, "modelsearch_candidate4": [328, 343], "956313": 328, "1270": 328, "486580": 328, "287000": 328, "1260": 328, "817266": 328, "362287": 328, "1327": 328, "153182": 328, "1325": 328, "551467": 328, "1307": 328, "301235": 328, "1295": 328, "1305": 328, "1289": 328, "2927": 328, "4334": 328, "7778": 328, "0058": 328, "1640": 328, "260324": 328, "7646": 328, "824443": 328, "5477": 328, "607839": 328, "1147": 328, "842498": 328, "470974": 328, "595276": 328, "526185": 328, "930160": 328, "495109": 328, "322680": 328, "470531": 328, "515250": 328, "312692": 328, "194221": 328, "202201": 328, "207885": 328, "232322": 328, "199750": 328, "205369": 328, "193439": 328, "pop_qp1_estim": 328, "pop_vp1_estim": 328, "pop_mdt_estim": 328, "155413": 328, "4192": 328, "6100": 328, "172730": 328, "3977": 328, "4562": 328, "158070": 328, "8042": 328, "8517": 328, "iiv_mdt_estim": 328, "156289": 328, "192020": 328, "092419": 328, "262429": 328, "720369": 328, "464263": 328, "127061": 328, "906722": 328, "053781": 328, "923055": 328, "795863": 328, "030658": 328, "661330": 328, "168680": 328, "833073": 328, "041529": 328, "205858": 328, "064930": 328, "609673": 328, "396329": 328, "928556": 328, "365": 328, "330": 328, "topic": 329, "scheme": 329, "theta_cl": 329, "mention": 329, "ve": 329, "despit": 329, "write_etas_in_abbr": 329, "run_structsearch": [330, 337, 341, 342], "directeffect": [330, 341, 343], "ec": [330, 341], "additionali": 330, "effectcomp": [330, 343], "comprtment": [330, 343], "indirecteffect": [330, 343], "structsearch_run2": [330, 342], "effectcomp_linear": 330, "215004": 330, "745013": 330, "structsearch_run1": [330, 342], "direct_emax": 330, "212603": 330, "747413": 330, "baseline_model": 330, "960017": 330, "structsearch_run3": [330, 342], "effectcomp_emax": 330, "984380": 330, "944396": 330, "pheno_pd_filt": 330, "213077": 330, "872420": 330, "572221": 330, "569820": 330, "571979": 330, "tvcl_estim": 330, "tvv_estim": 330, "ivcl_estim": [330, 337], "002739": 330, "44718": 330, "000003": 330, "sigma_1_1_estim": [330, 337], "pop_b_estim": 330, "iiv_b_estim": 330, "006308": 330, "750050": 330, "000009": 330, "057501": 330, "094082": 330, "sigma_estim": 330, "pop_e_max_estim": 330, "338363": 330, "093417": 330, "144566": 330, "093266": 330, "093323": 330, "177469": 330, "pop_ec_50_estim": 330, "iiv_e_max_estim": 330, "35393": 330, "43433": 330, "pop_met_estim": 330, "pop_slope_estim": 330, "099993": 330, "47537": 330, "101217": 330, "iiv_slope_estim": 330, "337360": 330, "535060": 330, "328655": 330, "008705": 330, "243566": 330, "291495": 330, "355828": 330, "981532": 330, "213992": 330, "321069": 330, "330943": 330, "006418": 330, "241037": 330, "294024": 330, "779": 330, "nexce": [330, 342], "altair": [331, 333], "vega": 331, "lite": 331, "ggplot": 331, "editor": 331, "clamp": 331, "vconcat": 331, "spec": 331, "inten": 332, "export": 332, "strictli": 332, "necessesari": 332, "detect_model": 332, "summer": 333, "master": 333, "thesi": 333, "internship": 333, "email": 333, "team": 333, "tox": 333, "pytest": 333, "sphinx": 333, "wise": 333, "known": 333, "trial": 333, "involv": 333, "outcom": 333, "350h": 333, "difficulti": 333, "mentor": 333, "scipi": 333, "focu": 333, "proof": 333, "concept": 333, "algebra": 333, "scratch": 333, "almost": 333, "compat": 333, "benefici": 333, "175h": 333, "easi": 333, "potenti": 333, "eas": 333, "jupyt": 333, "holoview": 333, "bokeh": 333, "monitor": 333, "ongo": 333, "veri": 333, "happen": [333, 345], "converg": 333, "sort": [333, 343], "dashboard": 333, "complement": 333, "realtim": 333, "restart": [333, 345], "middl": 333, "worflow": 333, "cv": [334, 336], "772": [334, 336], "700": 334, "042": [334, 336], "sdeps_0": [334, 336], "t1": 334, "298": 334, "sdeps_t1": 334, "t2": 334, "886": 334, "sdeps_t2": 334, "t3": 334, "272": [334, 342], "sdeps_t3": 334, "t4": 334, "716": 334, "sdeps_t4": 334, "t5": 334, "218": 334, "sdeps_t5": 334, "t6": 334, "928": 334, "sdeps_t6": 334, "t7": 334, "092": 334, "sdeps_t7": 334, "t8": 334, "914": 334, "sdeps_t8": 334, "t9": 334, "840": 334, "sdeps_t9": 334, "390": [334, 336], "159": [334, 336], "t0": [334, 336], "271": [334, 336], "sdeps_t0": [334, 336], "956": [334, 336], "717": 334, "014": 334, "983": 334, "884": 334, "017": 334, "955": 334, "958": 334, "969": 334, "933": 334, "022": 334, "819": 334, "007": 334, "755": 334, "982": 334, "642": 334, "387": 334, "th_0": 334, "257": 334, "867": 334, "th_t1": 334, "211": 334, "th_t2": 334, "277": 334, "761": 334, "th_t3": 334, "033": 334, "th_t4": 334, "367": 334, "th_t5": 334, "204": 334, "170": 334, "th_t6": 334, "078": 334, "th_t7": 334, "841": 334, "th_t8": 334, "th_t9": 334, "030": 334, "124": 334, "289": 334, "386": 334, "287": 334, "019": 334, "delta_pow": [334, 336], "037": [334, 336], "autocorrel": [334, 336], "dtb": [334, 336], "idv_varying_ruv": 334, "idv_varying_ruv_cutoff0": 334, "idv_varying_ruv_cutoff1": 334, "idv_varying_ruv_cutoff2": 334, "idv_varying_ruv_cutoff3": 334, "idv_varying_ruv_cutoff4": 334, "idv_varying_ruv_cutoff5": 334, "idv_varying_ruv_cutoff6": 334, "idv_varying_ruv_cutoff7": 334, "idv_varying_ruv_cutoff8": 334, "idv_varying_combin": 334, "idv_varying_theta": 334, "sdep": 334, "delet": 335, "diagnost": 335, "improement": 336, "592698": 336, "197887": 336, "007493": 336, "521171": 336, "et1apgr": 336, "487930": 336, "residual_error_model": 336, "910000": 336, "030000": 336, "diagnos": 336, "structural_bia": 336, "cpred": 336, "binmin": 336, "binmax": 336, "binid": 336, "258": 336, "strutur": 336, "mdel": 336, "fullblock_paramet": 336, "183463": 336, "171306": 336, "554610": 336, "154408": 336, "167053": 336, "cox": 336, "boxcox_paramet": 336, "shape": 336, "new_sd": 336, "old_sd": 336, "922083": 336, "182037": 336, "332800": 336, "166021": 336, "tdist_paramet": 336, "79": 336, "9997": 336, "168477": 336, "9986": 336, "166469": 336, "residual_error": 336, "additional_paramet": 336, "coeff": 336, "48793": 336, "033334": 336, "48218": 336, "052342": 336, "59034": 336, "008371": 336, "00887": 336, "003273": 336, "tweak": [337, 343], "slightli": [337, 339], "instabl": 337, "_retries_run2": 337, "behaviour": 337, "semi": [337, 343], "invert": 337, "maxiumum": 337, "took": 337, "number_of_retri": 337, "922734e": 337, "383697e": 337, "302390e": 337, "061417e": 337, "387580e": 337, "276057": 337, "ptvcl_estim": 337, "ptvcl_se": 337, "ptvcl_rse": 337, "00021": 337, "87": 337, "044758": 337, "044716": 337, "044732": 337, "044728": 337, "044669": 337, "theta_3_rs": 337, "ivcl_s": 337, "ivcl_rs": 337, "527096": 337, "029349": 337, "013418": 337, "457176": 337, "527011": 337, "029350": 337, "013416": 337, "457114": 337, "527151": 337, "457044": 337, "527073": 337, "457083": 337, "526863": 337, "457001": 337, "ivv_estim": 337, "ivv_s": 337, "ivv_rs": 337, "007471": 337, "267734": 337, "007475": 337, "267856": 337, "027907": 337, "007476": 337, "267878": 337, "007468": 337, "267603": 337, "267944": 337, "sigma_1_1_s": 337, "sigma_1_1_rs": 337, "002276": 337, "171888": 337, "002280": 337, "172226": 337, "172227": 337, "002281": 337, "172295": 337, "002275": 337, "171784": 337, "023818": 337, "188189": 337, "063299": 337, "060098": 337, "261864": 337, "600541": 337, "098091": 337, "000067": 337, "019810": 337, "036927": 337, "586258": 337, "025164": 337, "639902": 337, "663952": 337, "000004": 337, "013330": 337, "765295": 337, "850966": 337, "000027": 337, "096399": 337, "209719": 337, "605851": 337, "088068": 337, "225702": 337, "354": 337, "ibrahim": 338, "quickli": [338, 343], "inde": 338, "cwres_model": 338, "479721": 338, "385268": 338, "002792": 338, "time_varying1": 338, "117041": 338, "555154": 338, "time_varying3": 338, "336641": 338, "091207": 338, "065738": 338, "654562": 338, "046578": 338, "519115": 338, "612710": 338, "643741": 338, "027766": 338, "sigma_add": 338, "000367": 338, "sigma_prop": 338, "967365": 338, "00123": 338, "0976": 338, "12252": 338, "14299": 338, "000337": 338, "05242": 338, "006105": 338, "10545": 338, "12659": 338, "15573": 338, "00054": 338, "04769": 338, "030825": 338, "mox3": 338, "best_ruvsearch_1": 338, "2460": 338, "704469": 338, "957378": 338, "2473": 338, "661847": 338, "269102": 338, "2495": 338, "973571": 338, "2444": 338, "2455": 338, "2475": 338, "2423": 338, "757516": 338, "2435": 338, "047712": 338, "2453": 338, "068976": 338, "707": 338, "5434": 338, "531596": 338, "794": 338, "3091": 338, "528620": 338, "733": 338, "3094": 338, "532547": 338, "iiv_vc_iiv_cl_estim": 338, "077743": 338, "038888": 338, "076793": 338, "039924": 338, "071628": 338, "038470": 338, "072309": 338, "704770": 338, "093311": 338, "074889": 338, "707665": 338, "081095": 338, "075048": 338, "705429": 338, "044311": 338, "iiv_ruv1_estim": 338, "time_varying_estim": 338, "039675": 338, "040734": 338, "42509": 338, "215727": 338, "655144": 338, "708324": 338, "762729": 338, "236530": 338, "229762": 338, "715966": 338, "423148": 338, "419741": 338, "774540": 338, "164274": 338, "450202": 338, "195425": 338, "960585": 338, "090461": 338, "848498": 338, "052021": 338, "239462": 338, "065148": 338, "571348": 338, "244582": 338, "161981": 338, "509910": 338, "373696": 338, "084489": 338, "647643": 338, "344772": 338, "083776": 338, "259395": 338, "101415": 338, "024651": 338, "443542": 338, "124023": 338, "183089": 338, "977222": 338, "219": 338, "moustafa": 338, "m": 338, "maria": 338, "kjellsson": 338, "aap": 338, "1208": 338, "s12248": 338, "018": 338, "0240": 338, "pha": 339, "219210": 339, "90878": 339, "219167": 339, "36222": 339, "bmi": 339, "219171": 339, "47564": 339, "cycll": 339, "219203": 339, "94536": 339, "diag": 339, "219206": 339, "01527": 339, "disdur": 339, "219032": 339, "86056": 339, "215321": 339, "70954": 339, "215306": 339, "67698": 339, "phia": 339, "men": 339, "215407": 339, "40295": 339, "phib": 339, "georeg": 339, "215373": 339, "77800": 339, "216968": 339, "25989": 339, "slp": 339, "215359": 339, "18150": 339, "54656": 339, "140000e": 339, "43314": 339, "390000e": 339, "96342": 339, "319000e": 339, "89351": 339, "695800e": 339, "178": 339, "04822": 339, "290000e": 339, "03256": 339, "060000e": 339, "72597": 339, "10102": 339, "580000e": 339, "1661": 339, "58291": 339, "50452": 339, "phaag": 339, "phabmi": 339, "phacycl": 339, "phadiag": 339, "phadisdur": 339, "backward_scm_dir1": 339, "phawt": 339, "phiamen": 339, "phibgeoreg": 339, "phibmen": 339, "slpgeoreg": 339, "304": 339, "beween": 339, "215961": 339, "46277": 339, "3249": 339, "44601": 339, "215748": 339, "07194": 339, "213": 339, "39083": 339, "215570": 339, "57352": 339, "49842": 339, "215486": 339, "23440": 339, "33912": 339, "87007": 339, "36433": 339, "215357": 339, "74693": 339, "61": [339, 342], "12314": 339, "215337": 339, "95044": 339, "79649": 339, "24090": 339, "215332": 339, "91461": 339, "23763": 339, "67861": 339, "00163": 339, "215450": 339, "74783": 339, "07085": 339, "215491": 339, "11568": 339, "43870": 339, "500000e": 339, "700000e": 339, "170000e": 339, "260000e": 339, "360000e": 339, "600000e": 339, "020000e": 339, "620000e": 339, "430000e": 339, "200000e": 339, "lbest": 339, "cpl": 339, "995045": 340, "575351": 340, "165042": 340, "230120": 340, "921633": 340, "488686": 340, "482883": 340, "300884": 340, "083424": 340, "027733": 340, "946876": 340, "824880": 340, "005653": 340, "928279": 340, "180960": 340, "654589": 340, "604188": 340, "916884": 340, "098483": 340, "795252": 340, "364078": 340, "370783": 340, "467337": 340, "638247": 340, "706108": 340, "078494": 340, "351839": 340, "957716": 340, "472019": 340, "136159": 340, "916754": 340, "823449": 340, "221459": 340, "664634": 340, "318875": 340, "151210": 340, "136767": 340, "405150": 340, "135159": 340, "527835": 340, "526828": 340, "551158": 340, "488282": 340, "406903": 340, "562788": 340, "615899": 340, "293600": 340, "796073": 340, "736463": 340, "892761": 340, "328937": 340, "818812": 340, "376893": 340, "486179": 340, "061750": 340, "849137": 340, "929665": 340, "446579": 340, "114640": 340, "121901": 340, "925921": 340, "423537": 340, "247238": 340, "615092": 340, "408347": 340, "512627": 340, "962122": 340, "705806": 340, "484284": 340, "018308": 340, "867625": 340, "842566": 340, "086333": 340, "056381": 340, "114753": 340, "664954": 340, "078385": 340, "638560": 340, "603301": 340, "449888": 340, "178961": 340, "282087": 340, "882876": 340, "622712": 340, "748996": 340, "138213": 340, "238692": 340, "678095": 340, "037941": 340, "361556": 340, "272954": 340, "929655": 340, "713778": 340, "166879": 340, "708577": 340, "422555": 340, "421235": 340, "563473": 340, "335429": 340, "567697": 340, "989005": 340, "266944": 340, "480043": 340, "959843": 340, "461262": 340, "388393": 340, "621329": 340, "212573": 340, "300601": 340, "811596": 340, "501489": 340, "277388": 340, "110075": 340, "003027": 340, "570879": 340, "786560": 340, "219194": 340, "366018": 340, "905147": 340, "380865": 340, "351180": 340, "612812": 340, "630512": 340, "961895": 340, "534496": 340, "546036": 340, "806204": 340, "584818": 340, "816485": 340, "231970": 340, "900845": 340, "682987": 340, "998400": 340, "892200": 340, "776532": 340, "988276": 340, "749003": 340, "802797": 340, "225727": 340, "018880": 340, "015416": 340, "725509": 340, "196823": 340, "662582": 340, "348921": 340, "250063": 340, "838099": 340, "212538": 340, "851698": 340, "488859": 340, "382526": 340, "944073": 340, "297823": 340, "140249": 340, "429352": 340, "743671": 340, "857266": 340, "485191": 340, "409142": 340, "659430": 340, "191840": 340, "880881": 340, "002572": 340, "733704": 340, "755737": 340, "775355": 340, "956378": 340, "630846": 340, "151243": 340, "707700": 340, "851982": 340, "794788": 340, "668763": 340, "483346": 340, "931900": 340, "538437": 340, "401748": 340, "382384": 340, "455902": 340, "793645": 340, "376121": 340, "196475": 340, "926835": 340, "498709": 340, "425364": 340, "928532": 340, "372391": 340, "848184": 340, "985533": 340, "497867": 340, "030662": 340, "366585": 340, "826862": 340, "572217": 340, "551558": 340, "565811": 340, "662370": 340, "551208": 340, "119652": 340, "298009": 340, "042324": 340, "630121": 340, "580405": 340, "552114": 340, "134650": 340, "361844": 340, "406685": 340, "035731": 340, "275622": 340, "040276": 340, "266702": 340, "169391": 340, "496993": 340, "957232": 340, "155311": 340, "515088": 340, "868679": 340, "106708": 340, "454421": 340, "361498": 340, "363698": 340, "751915": 340, "982047": 340, "904024": 340, "889492": 340, "024682": 340, "434510": 340, "952586": 340, "169297": 340, "840067": 340, "835458": 340, "575363": 340, "073635": 340, "073683": 340, "856403": 340, "884553": 340, "819836": 340, "253049": 340, "169888": 340, "879430": 340, "118999": 340, "893425": 340, "285544": 340, "497236": 340, "564632": 340, "178975": 340, "509070": 340, "046265": 340, "277992": 340, "765897": 340, "695028": 340, "264764": 340, "324755": 340, "684344": 340, "688954": 340, "586789": 340, "516160": 340, "572606": 340, "394438": 340, "493584": 340, "841335": 340, "249772": 340, "916145": 340, "244786": 340, "119216": 340, "933397": 340, "253768": 340, "659481": 340, "744242": 340, "416676": 340, "448507": 340, "178177": 340, "731451": 340, "936980": 340, "269584": 340, "069317": 340, "518105": 340, "477206": 340, "746436": 340, "605768": 340, "716822": 340, "320820": 340, "408266": 340, "763155": 340, "980420": 340, "132983": 340, "125029": 340, "180204": 340, "337790": 340, "686115": 340, "811144": 340, "105503": 340, "583418": 340, "457112": 340, "195385": 340, "043157": 340, "031564": 340, "850645": 340, "363551": 340, "814145": 340, "016286": 340, "225458": 340, "525306": 340, "052073": 340, "892175": 340, "602344": 340, "846592": 340, "699366": 340, "404922": 340, "435102": 340, "242420": 340, "451814": 340, "243399": 340, "509957": 340, "815026": 340, "589215": 340, "512603": 340, "866250": 340, "933824": 340, "481351": 340, "926077": 340, "923185": 340, "175264": 340, "495039": 340, "087071": 340, "944302": 340, "824234": 340, "194473": 340, "573838": 340, "611250": 340, "344235": 340, "735586": 340, "903583": 340, "550825": 340, "749030": 340, "860290": 340, "308617": 340, "556035": 340, "501681": 340, "875052": 340, "941132": 340, "153441": 340, "631308": 340, "874004": 340, "372005": 340, "432371": 340, "193338": 340, "054769": 340, "758791": 340, "133006": 340, "357159": 340, "323449": 340, "853273": 340, "215148": 340, "885525": 340, "860736": 340, "533799": 340, "993262": 340, "080061": 340, "568383": 340, "322738": 340, "905658": 340, "276361": 340, "376218": 340, "546277": 340, "313336": 340, "489785": 340, "898802": 340, "058260": 340, "542369": 340, "968860": 340, "773450": 340, "775938": 340, "873918": 340, "210594": 340, "600450": 340, "793703": 340, "899285": 340, "639544": 340, "104682": 340, "330868": 340, "230477": 340, "185132": 340, "354616": 340, "438225": 340, "479966": 340, "720261": 340, "884839": 340, "924846": 340, "432346": 340, "436720": 340, "367480": 340, "024193": 340, "694969": 340, "341680": 340, "054791": 340, "548598": 340, "387386": 340, "759167": 340, "864669": 340, "424024": 340, "853355": 340, "317393": 340, "280139": 340, "413680": 340, "695800": 340, "331177": 340, "631655": 340, "704503": 340, "541680": 340, "371773": 340, "758919": 340, "026935": 340, "316351": 340, "966413": 340, "814952": 340, "009725": 340, "937635": 340, "878300": 340, "715708": 340, "459161": 340, "462408": 340, "868224": 340, "383043": 340, "260472": 340, "179394": 340, "933191": 340, "676905": 340, "398492": 340, "218010": 340, "585174": 340, "956306": 340, "191401": 340, "051986": 340, "726349": 340, "445912": 340, "553003": 340, "767349": 340, "099846": 340, "876780": 340, "846457": 340, "822404": 340, "991350": 340, "924166": 340, "207434": 340, "565671": 340, "326447": 340, "115117": 340, "434087": 340, "341361": 340, "782192": 340, "806515": 340, "599116": 340, "086788": 340, "574493": 340, "296737": 340, "831345": 340, "516464": 340, "994987": 340, "574667": 340, "901408": 340, "793265": 340, "072216": 340, "874349": 340, "693935": 340, "912201": 340, "711150": 340, "676572": 340, "905528": 340, "069326": 340, "800871": 340, "954047": 340, "186642": 340, "077897": 340, "748099": 340, "731336": 340, "773375": 340, "819544": 340, "247095": 340, "504667": 340, "762211": 340, "843029": 340, "765259": 340, "455400": 340, "056323": 340, "187278": 340, "257409": 340, "502366": 340, "370226": 340, "802175": 340, "360000": 340, "305631": 340, "597045": 340, "639042": 340, "716192": 340, "544260": 340, "400720": 340, "977219": 340, "676934": 340, "022410": 340, "974785": 340, "641421": 340, "597599": 340, "424237": 340, "886356": 340, "853009": 340, "087082": 340, "098997": 340, "712658": 340, "374133": 340, "151935": 340, "963905": 340, "044583": 340, "415675": 340, "567520": 340, "351619": 340, "360173": 340, "396594": 340, "999275": 340, "255630": 340, "414926": 340, "358567": 340, "899880": 340, "408061": 340, "907778": 340, "496109": 340, "473731": 340, "297200": 340, "362886": 340, "222423": 340, "864820": 340, "606428": 340, "988252": 340, "206488": 340, "862927": 340, "693535": 340, "517867": 340, "911020": 340, "965455": 340, "764024": 340, "346212": 340, "453899": 340, "500103": 340, "133073": 340, "462547": 340, "783555": 340, "585654": 340, "027851": 340, "036534": 340, "972480": 340, "960296": 340, "402983": 340, "378125": 340, "723710": 340, "587323": 340, "032512": 340, "269137": 340, "408322": 340, "950516": 340, "788249": 340, "448461": 340, "159667": 340, "884049": 340, "777419": 340, "541949": 340, "625663": 340, "601504": 340, "416254": 340, "371639": 340, "907322": 340, "487277": 340, "418469": 340, "663661": 340, "606033": 340, "547459": 340, "675347": 340, "500411": 340, "584165": 340, "247584": 340, "271405": 340, "881148": 340, "824837": 340, "804622": 340, "876965": 340, "366355": 340, "348849": 340, "319025": 340, "885439": 340, "iofv_summari": 340, "orgin": 340, "ob": 340, "sampled_mean": 340, "sampled_stdev": 340, "residual_q1": 340, "743042": 340, "219056": 340, "682820": 340, "550173": 340, "035912": 340, "049484": 340, "184218": 340, "853744": 340, "006216": 340, "975298": 340, "041599": 340, "817153": 340, "833045": 340, "781196": 340, "154061": 340, "813525": 340, "398238": 340, "645044": 340, "535071": 340, "205425": 340, "092618": 340, "104527": 340, "106160": 340, "955250": 340, "058617": 340, "344659": 340, "355728": 340, "480441": 340, "205000": 340, "804075": 340, "093249": 340, "372011": 340, "653334": 340, "076303": 340, "579270": 340, "515891": 340, "726464": 340, "480796": 340, "226795": 340, "894556": 340, "321253": 340, "216333": 340, "282456": 340, "045968": 340, "751381": 340, "998817": 340, "568506": 340, "544129": 340, "725055": 340, "084491": 340, "216676": 340, "724839": 340, "269729": 340, "664468": 340, "086120": 340, "099508": 340, "844053": 340, "234199": 340, "780837": 340, "277342": 340, "322169": 340, "051428": 340, "923117": 340, "660772": 340, "466385": 340, "260479": 340, "909214": 340, "004430": 340, "115441": 340, "597439": 340, "671231": 340, "358037": 340, "499079": 340, "674971": 340, "086542": 340, "331370": 340, "633905": 340, "558617": 340, "085015": 340, "554653": 340, "936751": 340, "068515": 340, "800265": 340, "310055": 340, "124015": 340, "712276": 340, "729628": 340, "167439": 340, "715703": 340, "274087": 340, "019852": 340, "305414": 340, "613668": 340, "109257": 340, "443973": 340, "056317": 340, "238664": 340, "161298": 340, "229080": 340, "385458": 340, "248420": 340, "105258": 340, "155784": 340, "539027": 340, "615940": 340, "605320": 340, "132029": 340, "756164": 340, "869343": 340, "544161": 340, "814910": 340, "779158": 340, "268737": 340, "897306": 340, "707535": 340, "453306": 340, "105961": 340, "531367": 340, "507478": 340, "179203": 340, "964192": 340, "235433": 340, "534690": 340, "029698": 340, "870557": 340, "187065": 340, "049483": 340, "611648": 340, "535116": 340, "053927": 340, "077425": 340, "840121": 340, "621227": 340, "470444": 340, "449597": 340, "941064": 340, "849583": 340, "418397": 340, "769517": 340, "495183": 340, "074840": 340, "265168": 340, "489546": 340, "543569": 340, "924754": 340, "255799": 340, "423379": 340, "792450": 340, "651388": 340, "107140": 340, "103779": 340, "709601": 340, "655290": 340, "365991": 340, "222470": 340, "908651": 340, "744590": 340, "726324": 340, "426971": 340, "126409": 340, "743926": 340, "055593": 340, "673502": 340, "381335": 340, "618133": 340, "047349": 340, "322600": 340, "222872": 340, "042834": 340, "180077": 340, "430602": 340, "209284": 340, "495631": 340, "189252": 340, "623118": 340, "780755": 340, "405726": 340, "643222": 340, "836788": 340, "746180": 340, "378962": 340, "498420": 340, "745719": 340, "565835": 340, "016391": 340, "193803": 340, "882538": 340, "054206": 340, "416539": 340, "288743": 340, "598975": 340, "649295": 340, "743847": 340, "028856": 340, "860963": 340, "709391": 340, "906579": 340, "841825": 340, "571912": 340, "121771": 340, "219260": 340, "791821": 340, "756310": 340, "933335": 340, "360735": 340, "121911": 340, "657069": 340, "952413": 340, "311206": 340, "124618": 340, "229621": 340, "945504": 340, "493299": 340, "630288": 340, "415407": 340, "756085": 340, "131488": 340, "213636": 340, "050337": 340, "463633": 340, "980475": 340, "118333": 340, "749123": 340, "229958": 340, "025404": 340, "813878": 340, "738522": 340, "668408": 340, "112740": 340, "972107": 340, "235064": 340, "396011": 340, "934618": 340, "518106": 340, "392308": 340, "216396": 340, "339562": 340, "024801": 340, "793238": 340, "057118": 340, "556378": 340, "796045": 340, "776264": 340, "019010": 340, "430617": 340, "431370": 340, "731493": 340, "527208": 340, "010968": 340, "724711": 340, "959211": 340, "448445": 340, "131466": 340, "302385": 340, "264697": 340, "597597": 340, "779232": 340, "494133": 340, "292477": 340, "639161": 340, "067293": 340, "167700": 340, "637834": 340, "067793": 340, "249132": 340, "314731": 340, "969084": 340, "239401": 340, "359860": 340, "215238": 340, "477740": 340, "578842": 340, "053376": 340, "340902": 340, "021182": 340, "172446": 340, "684367": 340, "059050": 340, "515114": 340, "245427": 340, "197044": 340, "787564": 340, "106919": 340, "970391": 340, "379183": 340, "982728": 340, "807580": 340, "296212": 340, "639192": 340, "874018": 340, "032032": 340, "252364": 340, "047063": 340, "residual_q3": 340, "residual_outli": 340, "832458": 340, "136329": 340, "090316": 340, "021748": 340, "766581": 340, "001176": 340, "238974": 340, "071653": 340, "388881": 340, "584759": 340, "780298": 340, "680349": 340, "043355": 340, "691710": 340, "827298": 340, "317850": 340, "008777": 340, "291308": 340, "498512": 340, "312807": 340, "178997": 340, "306182": 340, "116610": 340, "468439": 340, "007865": 340, "384037": 340, "344744": 340, "151930": 340, "790639": 340, "416342": 340, "637759": 340, "153920": 340, "135334": 340, "038095": 340, "705065": 340, "359915": 340, "588440": 340, "151899": 340, "730945": 340, "514178": 340, "784304": 340, "977290": 340, "707253": 340, "982678": 340, "384237": 340, "576792": 340, "302778": 340, "342653": 340, "313826": 340, "775998": 340, "274818": 340, "191111": 340, "817604": 340, "421290": 340, "461701": 340, "940801": 340, "437023": 340, "207477": 340, "755739": 340, "individual_predictions_plot": 340, "rectangel": 341, "establish": 341, "speciefi": 341, "da_": 342, "deg": 342, "syn": 342, "lafre": 342, "mc": 342, "entral": 342, "kint": 342, "minu": 342, "full1": 342, "679076": 342, "4243": 342, "302405": 342, "full2": 342, "679069": 342, "302412": 342, "structsearch_run5": 342, "cr1": 342, "987197": 342, "4246": 342, "994284": 342, "qss2": 342, "4257": 342, "981481": 342, "structsearch_run11": 342, "897162": 342, "4289": 342, "878642": 342, "structsearch_run9": 342, "ib1": 342, "201724": 342, "4355": 342, "183204": 342, "structsearch_run7": 342, "201728": 342, "183209": 342, "structsearch_run12": 342, "284581": 342, "4361": 342, "266061": 342, "full3": 342, "structsearch_run4": 342, "full4": 342, "structsearch_run6": 342, "cr2": 342, "structsearch_run8": 342, "ib2": 342, "structsearch_run10": 342, "modelsearch_run5_2": 342, "qss1": 342, "qss3": 342, "qss4": 342, "qss5": 342, "qss6": 342, "qss7": 342, "qss8": 342, "4372": 342, "232452": 342, "4207": 342, "700120": 342, "269": 342, "700117": 342, "261": 342, "700285": 342, "409": 342, "701373": 342, "555": 342, "700121": 342, "274": 342, "700161": 342, "570": 342, "700208": 342, "690": 342, "4186": 342, "943398": 342, "603": 342, "943406": 342, "4196": 342, "712920": 342, "415": 342, "4310": 342, "979487": 342, "979483": 342, "266": 342, "4245": 342, "674920": 342, "984697": 342, "232868": 342, "251": 342, "247809": 342, "254": 342, "247775": 342, "393": 342, "247754": 342, "536": 342, "247736": 342, "255": 342, "247812": 342, "463": 342, "247782": 342, "559": 342, "247708": 342, "672": 342, "247769": 342, "582": 342, "253748": 342, "253715": 342, "397": 342, "230237": 342, "275386": 342, "252": 342, "275384": 342, "256285": 342, "275401": 342, "pop_kdeg_rs": 342, "iiv_r_0_estim": 342, "160475": 342, "160485": 342, "160478": 342, "160470": 342, "160474": 342, "160487": 342, "160468": 342, "147857": 342, "147867": 342, "148761": 342, "088523": 342, "088529": 342, "154017": 342, "088510": 342, "iiv_r_0_s": 342, "iiv_r_0_rs": 342, "pop_kon_estim": 342, "023358": 342, "013454": 342, "002049": 342, "pop_kon_s": 342, "pop_kon_rs": 342, "pop_koff_estim": 342, "428624": 342, "428631": 342, "440274": 342, "pop_koff_s": 342, "pop_koff_rs": 342, "411": 342, "138480": 342, "239809": 342, "443": 342, "930514": 342, "391": 342, "533165": 342, "430": 342, "875209": 342, "426": 342, "215340": 342, "419": 342, "202349": 342, "429": 342, "131805": 342, "274685": 342, "967105": 342, "612252": 342, "906335": 342, "182401": 342, "923040": 342, "184317": 342, "655": 342, "506": 342, "550": 342, "048": 342, "750": 342, "699": 342, "915": 342, "899": 342, "876": 342, "566": 342, "ndue": 342, "134": 342, "tmp": [342, 343], "tmpoz7ay7_9": 342, "nonmem_run_structsearch_run10": 342, "9d2574b8": 342, "8ad6": 342, "11ee": 342, "aa82": 342, "47e03b483033": 342, "nonmem_run_structsearch_run3": 342, "8879dbda": 342, "nonmem_run_structsearch_run4": 342, "8879e81": 342, "nonmem_run_structsearch_run6": 342, "8879bfce": 342, "nonmem_run_structsearch_run8": 342, "943405b8": 342, "trim": 343, "rerun": 343, "modelsearch_dir1": 343, "hash": 343, "mytab_mox1": 343, "subfold": 343, "temporari": 343, "finish": 343, "recreat": 343, "frame": 343, "programmat": 343, "pharmpy_vers": 343, "tool_nam": 343, "start_tim": 343, "22t14": 343, "312240": 343, "end_tim": 343, "592109": 343, "common_opt": 343, "tool_result": 343, "concis": 343, "newlin": 343, "colon": 343, "endpoint": 343, "wildcard": 343, "nodepot": 343, "autom": 343, "pk_iiv": 343, "pd_iiv": 343, "exceed": 343, "rse_theta": 343, "rse_omega": 343, "rse_sigma": 343, "condition_numb": 343, "final_zero_gradi": 343, "final_zero_gradient_theta": 343, "final_zero_gradient_omega": 343, "final_zero_gradient_sigma": 343, "estimate_near_boundari": 343, "estimate_near_boundary_theta": 343, "estimate_near_boundary_omega": 343, "estimate_near_boundary_sigma": 343, "smaller": 343, "gotcha": 344, "cran": 345, "rapid": 345, "remot": 345, "install_github": 345, "install_pharmpi": 345, "session": 345, "packagevers": 345, "print_pharmpy_vers": 345, "reticul": 345, "miniconda": 345, "py_discover_config": 345, "conda_cr": 345, "python_vers": 345, "virtual": 345, "libpython": 345, "lib": 345, "libpython3": 345, "mirror": 345, "pipe": 345, "magrittr": 345}, "objects": {"pharmpy": [[298, 0, 0, "-", "model"], [299, 0, 0, "-", "modeling"], [300, 0, 0, "-", "tools"], [301, 0, 0, "-", "workflows"], [306, 6, 1, "cmdoption-pharmpy-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-version", "--version"], [306, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "Parameter"], [24, 1, 1, "", "Parameters"], [25, 1, 1, "", "RandomVariables"], [26, 1, 1, "", "SimulationStep"], [27, 1, 1, "", "Statement"], [28, 1, 1, "", "Statements"], [29, 1, 1, "", "VariabilityHierarchy"], [30, 1, 1, "", "VariabilityLevel"], [31, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_peripheral_compartments"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 2, 1, "", "to_dict"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "parameter_uncertainty_method"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_parameter_uncertainty_methods"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[23, 2, 1, "", "create"], [23, 3, 1, "", "fix"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "init"], [23, 3, 1, "", "lower"], [23, 3, 1, "", "name"], [23, 2, 1, "", "replace"], [23, 3, 1, "", "symbol"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 3, 1, "", "fixed"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "inits"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "names"], [24, 3, 1, "", "nonfixed"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "set_fix"], [24, 2, 1, "", "set_initial_estimates"], [24, 3, 1, "", "symbols"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[25, 3, 1, "", "covariance_matrix"], [25, 2, 1, "", "create"], [25, 3, 1, "", "epsilon_levels"], [25, 3, 1, "", "epsilons"], [25, 3, 1, "", "eta_levels"], [25, 3, 1, "", "etas"], [25, 3, 1, "", "free_symbols"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_covariance"], [25, 2, 1, "", "get_rvs_with_same_dist"], [25, 3, 1, "", "iiv"], [25, 3, 1, "", "iov"], [25, 2, 1, "", "join"], [25, 3, 1, "", "names"], [25, 2, 1, "", "nearest_valid_parameters"], [25, 3, 1, "", "nrvs"], [25, 3, 1, "", "parameter_names"], [25, 2, 1, "", "parameters_sdcorr"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "replace_with_sympy_rvs"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "subs"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "unjoin"], [25, 2, 1, "", "validate_parameters"], [25, 3, 1, "", "variance_parameters"]], "pharmpy.model.SimulationStep": [[26, 2, 1, "", "create"], [26, 2, 1, "", "from_dict"], [26, 3, 1, "", "n"], [26, 2, 1, "", "replace"], [26, 3, 1, "", "seed"], [26, 2, 1, "", "to_dict"]], "pharmpy.model.Statement": [[27, 3, 1, "", "free_symbols"], [27, 3, 1, "", "rhs_symbols"], [27, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[28, 3, 1, "", "after_odes"], [28, 3, 1, "", "before_odes"], [28, 2, 1, "", "dependencies"], [28, 2, 1, "", "direct_dependencies"], [28, 3, 1, "", "error"], [28, 2, 1, "", "find_assignment"], [28, 2, 1, "", "find_assignment_index"], [28, 3, 1, "", "free_symbols"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "full_expression"], [28, 3, 1, "", "ode_system"], [28, 2, 1, "", "reassign"], [28, 2, 1, "", "remove_symbol_definitions"], [28, 2, 1, "", "subs"], [28, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[29, 2, 1, "", "create"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "levels"], [29, 3, 1, "", "names"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "group"], [30, 3, 1, "", "name"], [30, 3, 1, "", "reference"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[32, 5, 1, "", "add_admid"], [33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_bioavailability"], [35, 5, 1, "", "add_cmt"], [36, 5, 1, "", "add_covariate_effect"], [37, 5, 1, "", "add_effect_compartment"], [38, 5, 1, "", "add_estimation_step"], [39, 5, 1, "", "add_iiv"], [40, 5, 1, "", "add_indirect_effect"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_parameter_uncertainty_step"], [46, 5, 1, "", "add_pd_iiv"], [47, 5, 1, "", "add_peripheral_compartment"], [48, 5, 1, "", "add_pk_iiv"], [49, 5, 1, "", "add_population_parameter"], [50, 5, 1, "", "add_time_after_dose"], [51, 5, 1, "", "append_estimation_step_options"], [52, 5, 1, "", "bin_observations"], [53, 5, 1, "", "bump_model_number"], [54, 5, 1, "", "calculate_aic"], [55, 5, 1, "", "calculate_bic"], [56, 5, 1, "", "calculate_corr_from_cov"], [57, 5, 1, "", "calculate_corr_from_prec"], [58, 5, 1, "", "calculate_cov_from_corrse"], [59, 5, 1, "", "calculate_cov_from_prec"], [60, 5, 1, "", "calculate_epsilon_gradient_expression"], [61, 5, 1, "", "calculate_eta_gradient_expression"], [62, 5, 1, "", "calculate_eta_shrinkage"], [63, 5, 1, "", "calculate_individual_parameter_statistics"], [64, 5, 1, "", "calculate_individual_shrinkage"], [65, 5, 1, "", "calculate_parameters_from_ucp"], [66, 5, 1, "", "calculate_pk_parameters_statistics"], [67, 5, 1, "", "calculate_prec_from_corrse"], [68, 5, 1, "", "calculate_prec_from_cov"], [69, 5, 1, "", "calculate_se_from_cov"], [70, 5, 1, "", "calculate_se_from_prec"], [71, 5, 1, "", "calculate_ucp_scale"], [72, 5, 1, "", "check_dataset"], [73, 5, 1, "", "check_high_correlations"], [74, 5, 1, "", "check_parameters_near_bounds"], [75, 5, 1, "", "cleanup_model"], [76, 5, 1, "", "convert_model"], [77, 5, 1, "", "create_basic_pk_model"], [78, 5, 1, "", "create_config_template"], [79, 5, 1, "", "create_joint_distribution"], [80, 5, 1, "", "create_rng"], [81, 5, 1, "", "create_symbol"], [82, 5, 1, "", "deidentify_data"], [83, 5, 1, "", "display_odes"], [84, 5, 1, "", "drop_columns"], [85, 5, 1, "", "drop_dropped_columns"], [86, 5, 1, "", "evaluate_epsilon_gradient"], [87, 5, 1, "", "evaluate_eta_gradient"], [88, 5, 1, "", "evaluate_expression"], [89, 5, 1, "", "evaluate_individual_prediction"], [90, 5, 1, "", "evaluate_population_prediction"], [91, 5, 1, "", "evaluate_weighted_residuals"], [92, 5, 1, "", "expand_additional_doses"], [93, 5, 1, "", "filter_dataset"], [94, 5, 1, "", "find_clearance_parameters"], [95, 5, 1, "", "find_volume_parameters"], [96, 5, 1, "", "fix_or_unfix_parameters"], [97, 5, 1, "", "fix_parameters"], [98, 5, 1, "", "fix_parameters_to"], [99, 5, 1, "", "get_admid"], [100, 5, 1, "", "get_baselines"], [101, 5, 1, "", "get_bioavailability"], [102, 5, 1, "", "get_cmt"], [103, 5, 1, "", "get_concentration_parameters_from_data"], [104, 5, 1, "", "get_config_path"], [105, 5, 1, "", "get_covariate_baselines"], [106, 5, 1, "", "get_covariates"], [107, 5, 1, "", "get_doseid"], [108, 5, 1, "", "get_doses"], [109, 5, 1, "", "get_dv_symbol"], [110, 5, 1, "", "get_evid"], [111, 5, 1, "", "get_ids"], [112, 5, 1, "", "get_individual_parameters"], [113, 5, 1, "", "get_individual_prediction_expression"], [114, 5, 1, "", "get_initial_conditions"], [115, 5, 1, "", "get_lag_times"], [116, 5, 1, "", "get_mdv"], [117, 5, 1, "", "get_model_code"], [118, 5, 1, "", "get_model_covariates"], [119, 5, 1, "", "get_number_of_individuals"], [120, 5, 1, "", "get_number_of_observations"], [121, 5, 1, "", "get_number_of_observations_per_individual"], [122, 5, 1, "", "get_number_of_peripheral_compartments"], [123, 5, 1, "", "get_number_of_transit_compartments"], [124, 5, 1, "", "get_observation_expression"], [125, 5, 1, "", "get_observations"], [126, 5, 1, "", "get_omegas"], [127, 5, 1, "", "get_parameter_rv"], [128, 5, 1, "", "get_pd_parameters"], [129, 5, 1, "", "get_pk_parameters"], [130, 5, 1, "", "get_population_prediction_expression"], [131, 5, 1, "", "get_rv_parameters"], [132, 5, 1, "", "get_sigmas"], [133, 5, 1, "", "get_thetas"], [134, 5, 1, "", "get_unit_of"], [135, 5, 1, "", "get_zero_order_inputs"], [136, 5, 1, "", "greekify_model"], [137, 5, 1, "", "has_additive_error_model"], [138, 5, 1, "", "has_combined_error_model"], [139, 5, 1, "", "has_covariate_effect"], [140, 5, 1, "", "has_first_order_absorption"], [141, 5, 1, "", "has_first_order_elimination"], [142, 5, 1, "", "has_instantaneous_absorption"], [143, 5, 1, "", "has_linear_odes"], [144, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [145, 5, 1, "", "has_michaelis_menten_elimination"], [146, 5, 1, "", "has_mixed_mm_fo_elimination"], [147, 5, 1, "", "has_odes"], [148, 5, 1, "", "has_presystemic_metabolite"], [149, 5, 1, "", "has_proportional_error_model"], [150, 5, 1, "", "has_random_effect"], [151, 5, 1, "", "has_seq_zo_fo_absorption"], [152, 5, 1, "", "has_weighted_error_model"], [153, 5, 1, "", "has_zero_order_absorption"], [154, 5, 1, "", "has_zero_order_elimination"], [155, 5, 1, "", "is_linearized"], [156, 5, 1, "", "is_real"], [157, 5, 1, "", "list_time_varying_covariates"], [158, 5, 1, "", "load_dataset"], [159, 5, 1, "", "load_example_model"], [160, 5, 1, "", "make_declarative"], [161, 5, 1, "", "mu_reference_model"], [162, 5, 1, "", "omit_data"], [163, 5, 1, "", "plot_abs_cwres_vs_ipred"], [164, 5, 1, "", "plot_cwres_vs_idv"], [165, 5, 1, "", "plot_dv_vs_ipred"], [166, 5, 1, "", "plot_dv_vs_pred"], [167, 5, 1, "", "plot_individual_predictions"], [168, 5, 1, "", "plot_iofv_vs_iofv"], [169, 5, 1, "", "plot_transformed_eta_distributions"], [170, 5, 1, "", "print_model_code"], [171, 5, 1, "", "print_model_symbols"], [172, 5, 1, "", "read_dataset_from_datainfo"], [173, 5, 1, "", "read_model"], [174, 5, 1, "", "read_model_from_string"], [175, 5, 1, "", "remove_bioavailability"], [176, 5, 1, "", "remove_covariate_effect"], [177, 5, 1, "", "remove_error_model"], [178, 5, 1, "", "remove_estimation_step"], [179, 5, 1, "", "remove_iiv"], [180, 5, 1, "", "remove_iov"], [181, 5, 1, "", "remove_lag_time"], [182, 5, 1, "", "remove_loq_data"], [183, 5, 1, "", "remove_parameter_uncertainty_step"], [184, 5, 1, "", "remove_peripheral_compartment"], [185, 5, 1, "", "remove_unused_parameters_and_rvs"], [186, 5, 1, "", "rename_symbols"], [187, 5, 1, "", "replace_non_random_rvs"], [188, 5, 1, "", "resample_data"], [189, 5, 1, "", "sample_individual_estimates"], [190, 5, 1, "", "sample_parameters_from_covariance_matrix"], [191, 5, 1, "", "sample_parameters_uniformly"], [192, 5, 1, "", "set_additive_error_model"], [193, 5, 1, "", "set_baseline_effect"], [194, 5, 1, "", "set_combined_error_model"], [195, 5, 1, "", "set_covariates"], [196, 5, 1, "", "set_direct_effect"], [197, 5, 1, "", "set_dtbs_error_model"], [198, 5, 1, "", "set_dvid"], [199, 5, 1, "", "set_estimation_step"], [200, 5, 1, "", "set_evaluation_step"], [201, 5, 1, "", "set_first_order_absorption"], [202, 5, 1, "", "set_first_order_elimination"], [203, 5, 1, "", "set_iiv_on_ruv"], [204, 5, 1, "", "set_initial_condition"], [205, 5, 1, "", "set_initial_estimates"], [206, 5, 1, "", "set_instantaneous_absorption"], [207, 5, 1, "", "set_lloq_data"], [208, 5, 1, "", "set_lower_bounds"], [209, 5, 1, "", "set_michaelis_menten_elimination"], [210, 5, 1, "", "set_mixed_mm_fo_elimination"], [211, 5, 1, "", "set_name"], [212, 5, 1, "", "set_ode_solver"], [213, 5, 1, "", "set_peripheral_compartments"], [214, 5, 1, "", "set_power_on_ruv"], [215, 5, 1, "", "set_proportional_error_model"], [216, 5, 1, "", "set_reference_values"], [217, 5, 1, "", "set_seq_zo_fo_absorption"], [218, 5, 1, "", "set_simulation"], [219, 5, 1, "", "set_time_varying_error_model"], [220, 5, 1, "", "set_tmdd"], [221, 5, 1, "", "set_transit_compartments"], [222, 5, 1, "", "set_upper_bounds"], [223, 5, 1, "", "set_weighted_error_model"], [224, 5, 1, "", "set_zero_order_absorption"], [225, 5, 1, "", "set_zero_order_elimination"], [226, 5, 1, "", "set_zero_order_input"], [227, 5, 1, "", "simplify_expression"], [228, 5, 1, "", "solve_ode_system"], [229, 5, 1, "", "split_joint_distribution"], [230, 5, 1, "", "transform_blq"], [231, 5, 1, "", "transform_etas_boxcox"], [232, 5, 1, "", "transform_etas_john_draper"], [233, 5, 1, "", "transform_etas_tdist"], [234, 5, 1, "", "translate_nmtran_time"], [235, 5, 1, "", "unconstrain_parameters"], [236, 5, 1, "", "undrop_columns"], [237, 5, 1, "", "unfix_parameters"], [238, 5, 1, "", "unfix_parameters_to"], [239, 5, 1, "", "unload_dataset"], [240, 5, 1, "", "update_initial_individual_estimates"], [241, 5, 1, "", "update_inits"], [242, 5, 1, "", "use_thetas_for_error_stdev"], [243, 5, 1, "", "write_csv"], [244, 5, 1, "", "write_model"]], "pharmpy.tools": [[245, 5, 1, "", "create_report"], [246, 5, 1, "", "create_results"], [247, 5, 1, "", "fit"], [248, 5, 1, "", "get_model_features"], [249, 5, 1, "", "is_strictness_fulfilled"], [250, 5, 1, "", "load_example_modelfit_results"], [251, 5, 1, "", "predict_influential_individuals"], [252, 5, 1, "", "predict_influential_outliers"], [253, 5, 1, "", "predict_outliers"], [254, 5, 1, "", "print_fit_summary"], [255, 5, 1, "", "rank_models"], [256, 5, 1, "", "read_modelfit_results"], [257, 5, 1, "", "read_results"], [258, 5, 1, "", "resume_tool"], [259, 5, 1, "", "retrieve_final_model"], [260, 5, 1, "", "retrieve_models"], [261, 5, 1, "", "run_allometry"], [262, 5, 1, "", "run_amd"], [263, 5, 1, "", "run_bootstrap"], [264, 5, 1, "", "run_covsearch"], [265, 5, 1, "", "run_estmethod"], [266, 5, 1, "", "run_iivsearch"], [267, 5, 1, "", "run_iovsearch"], [268, 5, 1, "", "run_modelfit"], [269, 5, 1, "", "run_modelsearch"], [270, 5, 1, "", "run_retries"], [271, 5, 1, "", "run_ruvsearch"], [272, 5, 1, "", "run_structsearch"], [273, 5, 1, "", "run_tool"], [274, 5, 1, "", "summarize_errors"], [275, 5, 1, "", "summarize_individuals"], [276, 5, 1, "", "summarize_individuals_count_table"], [277, 5, 1, "", "summarize_modelfit_results"], [278, 5, 1, "", "write_results"]], "pharmpy.workflows": [[279, 1, 1, "", "LocalDirectoryDatabase"], [280, 1, 1, "", "LocalDirectoryToolDatabase"], [281, 1, 1, "", "LocalModelDirectoryDatabase"], [282, 1, 1, "", "Log"], [283, 1, 1, "", "ModelDatabase"], [284, 1, 1, "", "ModelEntry"], [285, 1, 1, "", "ModelfitResults"], [286, 1, 1, "", "NullModelDatabase"], [287, 1, 1, "", "NullToolDatabase"], [288, 1, 1, "", "Results"], [289, 1, 1, "", "Task"], [290, 1, 1, "", "ToolDatabase"], [291, 1, 1, "", "Workflow"], [292, 1, 1, "", "WorkflowBuilder"], [293, 5, 1, "", "call_workflow"], [294, 3, 1, "", "default_model_database"], [295, 3, 1, "", "default_tool_database"], [296, 5, 1, "", "execute_workflow"], [297, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[279, 2, 1, "", "retrieve_file"], [279, 2, 1, "", "retrieve_local_files"], [279, 2, 1, "", "retrieve_model"], [279, 2, 1, "", "retrieve_model_entry"], [279, 2, 1, "", "retrieve_modelfit_results"], [279, 2, 1, "", "store_local_file"], [279, 2, 1, "", "store_metadata"], [279, 2, 1, "", "store_model"], [279, 2, 1, "", "store_model_entry"], [279, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[280, 2, 1, "", "from_dict"], [280, 2, 1, "", "read_metadata"], [280, 2, 1, "", "store_local_file"], [280, 2, 1, "", "store_metadata"], [280, 2, 1, "", "store_results"], [280, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[281, 2, 1, "", "list_models"], [281, 2, 1, "", "snapshot"], [281, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[282, 3, 1, "", "errors"], [282, 2, 1, "", "from_dict"], [282, 2, 1, "", "log_error"], [282, 2, 1, "", "log_warning"], [282, 2, 1, "", "to_dataframe"], [282, 2, 1, "", "to_dict"], [282, 3, 1, "", "warnings"]], "pharmpy.workflows.ModelDatabase": [[283, 2, 1, "", "retrieve_file"], [283, 2, 1, "", "retrieve_local_files"], [283, 2, 1, "", "retrieve_model"], [283, 2, 1, "", "retrieve_model_entry"], [283, 2, 1, "", "retrieve_modelfit_results"], [283, 2, 1, "", "snapshot"], [283, 2, 1, "", "store_local_file"], [283, 2, 1, "", "store_metadata"], [283, 2, 1, "", "store_model"], [283, 2, 1, "", "store_model_entry"], [283, 2, 1, "", "store_modelfit_results"], [283, 2, 1, "", "transaction"]], "pharmpy.workflows.ModelEntry": [[284, 2, 1, "", "attach_results"], [284, 2, 1, "", "create"], [284, 3, 1, "", "log"], [284, 3, 1, "", "model"], [284, 3, 1, "", "modelfit_results"], [284, 3, 1, "", "parent"]], "pharmpy.workflows.ModelfitResults": [[285, 3, 1, "", "correlation_matrix"], [285, 3, 1, "", "covariance_matrix"], [285, 3, 1, "", "covstep_successful"], [285, 3, 1, "", "description"], [285, 3, 1, "", "estimation_runtime"], [285, 3, 1, "", "estimation_runtime_iterations"], [285, 3, 1, "", "evaluation"], [285, 3, 1, "", "function_evaluations"], [285, 3, 1, "", "function_evaluations_iterations"], [285, 3, 1, "", "gradients"], [285, 3, 1, "", "gradients_iterations"], [285, 3, 1, "", "individual_estimates"], [285, 3, 1, "", "individual_estimates_covariance"], [285, 3, 1, "", "individual_ofv"], [285, 3, 1, "", "log"], [285, 3, 1, "", "log_likelihood"], [285, 3, 1, "", "minimization_successful"], [285, 3, 1, "", "minimization_successful_iterations"], [285, 3, 1, "", "name"], [285, 3, 1, "", "ofv"], [285, 3, 1, "", "ofv_iterations"], [285, 3, 1, "", "parameter_estimates"], [285, 3, 1, "", "parameter_estimates_iterations"], [285, 3, 1, "", "parameter_estimates_sdcorr"], [285, 3, 1, "", "precision_matrix"], [285, 3, 1, "", "predictions"], [285, 3, 1, "", "relative_standard_errors"], [285, 3, 1, "", "residuals"], [285, 3, 1, "", "runtime_total"], [285, 3, 1, "", "significant_digits"], [285, 3, 1, "", "significant_digits_iterations"], [285, 3, 1, "", "standard_errors"], [285, 3, 1, "", "standard_errors_sdcorr"], [285, 3, 1, "", "termination_cause"], [285, 3, 1, "", "termination_cause_iterations"], [285, 3, 1, "", "warnings"]], "pharmpy.workflows.NullModelDatabase": [[286, 2, 1, "", "retrieve_file"], [286, 2, 1, "", "retrieve_local_files"], [286, 2, 1, "", "retrieve_model"], [286, 2, 1, "", "retrieve_model_entry"], [286, 2, 1, "", "retrieve_modelfit_results"], [286, 2, 1, "", "store_local_file"], [286, 2, 1, "", "store_metadata"], [286, 2, 1, "", "store_model"], [286, 2, 1, "", "store_model_entry"], [286, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[287, 2, 1, "", "read_metadata"], [287, 2, 1, "", "store_local_file"], [287, 2, 1, "", "store_metadata"], [287, 2, 1, "", "store_results"]], "pharmpy.workflows.Results": [[288, 2, 1, "", "from_dict"], [288, 2, 1, "", "get_and_reset_index"], [288, 2, 1, "", "to_csv"], [288, 2, 1, "", "to_dict"], [288, 2, 1, "", "to_json"]], "pharmpy.workflows.Task": [[289, 2, 1, "", "create"], [289, 3, 1, "", "function"], [289, 3, 1, "", "name"], [289, 2, 1, "", "replace"], [289, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[290, 3, 1, "", "model_database"], [290, 3, 1, "", "path"], [290, 2, 1, "", "read_metadata"], [290, 2, 1, "", "store_local_file"], [290, 2, 1, "", "store_metadata"], [290, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[291, 2, 1, "", "as_dask_dict"], [291, 2, 1, "", "create"], [291, 3, 1, "", "name"], [291, 2, 1, "", "plot_dask"], [291, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[292, 2, 1, "", "add_task"], [292, 2, 1, "", "insert_workflow"], [292, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[306, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [306, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[306, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[306, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [306, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[306, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [306, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[306, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [306, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[306, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [306, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [306, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [306, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [306, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [306, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [306, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[306, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[306, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[306, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[306, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[306, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[306, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[306, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [306, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[306, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[306, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [306, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[306, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[306, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [306, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [306, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[306, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[306, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [306, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [306, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [306, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [306, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[306, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[306, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[306, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[306, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [306, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [306, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [306, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[306, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[306, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[306, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[306, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[306, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[306, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[306, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[306, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[306, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[306, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[306, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[306, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [306, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [306, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [306, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [306, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [306, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [306, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [306, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [306, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [306, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [306, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [306, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [306, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[306, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [306, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[306, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[306, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [306, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [306, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [306, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[306, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[306, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [306, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[306, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[306, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [306, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [306, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[306, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [306, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 308, 329], "dataset": [0, 313, 325, 327, 343], "overview": [0, 332, 336], "pars": 0, "translat": 0, "step": [0, 325, 327, 339], "nm": 0, "tran": 0, "comment": 0, "line": [0, 306], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 327], "date": 0, "id": 0, "check": [0, 309], "tabl": 0, "file": [0, 308, 313], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 309], "all": [0, 310], "zero": 0, "individu": [0, 302, 303, 318, 324, 326, 340], "control": 0, "stream": 0, "gener": [0, 323], "option": [0, 301, 343], "problem": 0, "data": [0, 301, 306], "eta": [0, 327], "code": [0, 307, 309], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 288, 302, 303, 306, 311, 312, 316, 317, 318, 320, 322, 324, 326, 328, 330, 334, 336, 337, 338, 339, 340, 341, 342, 343], "spars": 0, "matrix": [0, 302, 326], "allometri": [1, 2, 306, 327], "run": [1, 2, 306, 309, 311, 316, 317, 320, 322, 328, 330, 337, 338, 341, 342, 343], "argument": [1, 2, 311, 317, 320, 322, 328, 330, 337, 338, 341, 342], "procedur": [1, 338], "The": [1, 302, 303, 306, 308, 312, 314, 316, 317, 318, 320, 324, 325, 328, 334, 336, 337, 338, 339, 340, 341], "automat": 2, "model": [2, 18, 298, 299, 306, 313, 314, 316, 320, 325, 326, 327, 328, 329, 330, 334, 338, 341, 342, 343], "develop": [2, 309, 310, 315], "amd": [2, 306], "input": [2, 310], "search": [2, 316, 320, 328, 330, 341], "space": [2, 316, 328, 330, 341], "order": 2, "subtool": 2, "structur": [2, 320, 327, 336], "modelsearch": [2, 306, 328], "structsearch": [2, 316, 330, 341, 342], "iivsearch": [2, 306, 320], "iovsearch": [2, 306, 322], "residu": [2, 326, 336], "covari": [2, 302, 303, 318, 320, 326, 327, 336], "retri": [2, 337], "final": [2, 326], "api": 3, "refer": [3, 303, 306, 318], "assign": 4, "bolu": 5, "columninfo": [6, 313], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 313, 325], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 322, 325, 327], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "paramet": [23, 24, 302, 314, 318, 325, 326, 327, 329], "randomvari": [25, 314], "simulationstep": 26, "statement": [27, 28, 314, 325], "variabilityhierarchi": 29, "variabilitylevel": 30, "to_compartmental_system": 31, "add_admid": 32, "add_allometri": 33, "add_bioavail": 34, "add_cmt": 35, "add_covariate_effect": 36, "add_effect_compart": 37, "add_estimation_step": 38, "add_iiv": [39, 306], "add_indirect_effect": 40, "add_individual_paramet": 41, "add_iov": [42, 306], "add_lag_tim": 43, "add_metabolit": 44, "add_parameter_uncertainty_step": 45, "add_pd_iiv": 46, "add_peripheral_compart": 47, "add_pk_iiv": 48, "add_population_paramet": 49, "add_time_after_dos": 50, "append_estimation_step_opt": 51, "bin_observ": 52, "bump_model_numb": 53, "calculate_a": 54, "calculate_b": 55, "calculate_corr_from_cov": 56, "calculate_corr_from_prec": 57, "calculate_cov_from_corrs": 58, "calculate_cov_from_prec": 59, "calculate_epsilon_gradient_express": 60, "calculate_eta_gradient_express": 61, "calculate_eta_shrinkag": 62, "calculate_individual_parameter_statist": 63, "calculate_individual_shrinkag": 64, "calculate_parameters_from_ucp": 65, "calculate_pk_parameters_statist": 66, "calculate_prec_from_corrs": 67, "calculate_prec_from_cov": 68, "calculate_se_from_cov": 69, "calculate_se_from_prec": 70, "calculate_ucp_scal": 71, "check_dataset": 72, "check_high_correl": 73, "check_parameters_near_bound": 74, "cleanup_model": 75, "convert_model": 76, "create_basic_pk_model": 77, "create_config_templ": 78, "create_joint_distribut": [79, 306], "create_rng": 80, "create_symbol": 81, "deidentify_data": 82, "display_od": 83, "drop_column": 84, "drop_dropped_column": 85, "evaluate_epsilon_gradi": 86, "evaluate_eta_gradi": 87, "evaluate_express": 88, "evaluate_individual_predict": 89, "evaluate_population_predict": 90, "evaluate_weighted_residu": 91, "expand_additional_dos": 92, "filter_dataset": 93, "find_clearance_paramet": 94, "find_volume_paramet": 95, "fix_or_unfix_paramet": 96, "fix_paramet": 97, "fix_parameters_to": 98, "get_admid": 99, "get_baselin": 100, "get_bioavail": 101, "get_cmt": 102, "get_concentration_parameters_from_data": 103, "get_config_path": 104, "get_covariate_baselin": 105, "get_covari": 106, "get_doseid": 107, "get_dos": 108, "get_dv_symbol": 109, "get_evid": 110, "get_id": 111, "get_individual_paramet": 112, "get_individual_prediction_express": 113, "get_initial_condit": 114, "get_lag_tim": 115, "get_mdv": 116, "get_model_cod": 117, "get_model_covari": 118, "get_number_of_individu": 119, "get_number_of_observ": 120, "get_number_of_observations_per_individu": 121, "get_number_of_peripheral_compart": 122, "get_number_of_transit_compart": 123, "get_observation_express": 124, "get_observ": 125, "get_omega": 126, "get_parameter_rv": 127, "get_pd_paramet": 128, "get_pk_paramet": 129, "get_population_prediction_express": 130, "get_rv_paramet": 131, "get_sigma": 132, "get_theta": 133, "get_unit_of": 134, "get_zero_order_input": 135, "greekify_model": 136, "has_additive_error_model": 137, "has_combined_error_model": 138, "has_covariate_effect": 139, "has_first_order_absorpt": 140, "has_first_order_elimin": 141, "has_instantaneous_absorpt": 142, "has_linear_od": 143, "has_linear_odes_with_real_eigenvalu": 144, "has_michaelis_menten_elimin": 145, "has_mixed_mm_fo_elimin": 146, "has_od": 147, "has_presystemic_metabolit": 148, "has_proportional_error_model": 149, "has_random_effect": 150, "has_seq_zo_fo_absorpt": 151, "has_weighted_error_model": 152, "has_zero_order_absorpt": 153, "has_zero_order_elimin": 154, "is_linear": 155, "is_real": 156, "list_time_varying_covari": 157, "load_dataset": 158, "load_example_model": 159, "make_declar": 160, "mu_reference_model": 161, "omit_data": 162, "plot_abs_cwres_vs_ipr": 163, "plot_cwres_vs_idv": 164, "plot_dv_vs_ipr": 165, "plot_dv_vs_pr": 166, "plot_individual_predict": 167, "plot_iofv_vs_iofv": 168, "plot_transformed_eta_distribut": 169, "print_model_cod": 170, "print_model_symbol": 171, "read_dataset_from_datainfo": 172, "read_model": 173, "read_model_from_str": 174, "remove_bioavail": 175, "remove_covariate_effect": 176, "remove_error_model": 177, "remove_estimation_step": 178, "remove_iiv": [179, 306], "remove_iov": [180, 306], "remove_lag_tim": 181, "remove_loq_data": 182, "remove_parameter_uncertainty_step": 183, "remove_peripheral_compart": 184, "remove_unused_parameters_and_rv": 185, "rename_symbol": 186, "replace_non_random_rv": 187, "resample_data": 188, "sample_individual_estim": 189, "sample_parameters_from_covariance_matrix": 190, "sample_parameters_uniformli": 191, "set_additive_error_model": 192, "set_baseline_effect": 193, "set_combined_error_model": 194, "set_covari": 195, "set_direct_effect": 196, "set_dtbs_error_model": 197, "set_dvid": 198, "set_estimation_step": 199, "set_evaluation_step": 200, "set_first_order_absorpt": 201, "set_first_order_elimin": 202, "set_iiv_on_ruv": 203, "set_initial_condit": 204, "set_initial_estim": 205, "set_instantaneous_absorpt": 206, "set_lloq_data": 207, "set_lower_bound": 208, "set_michaelis_menten_elimin": 209, "set_mixed_mm_fo_elimin": 210, "set_nam": 211, "set_ode_solv": 212, "set_peripheral_compart": 213, "set_power_on_ruv": 214, "set_proportional_error_model": 215, "set_reference_valu": 216, "set_seq_zo_fo_absorpt": 217, "set_simul": 218, "set_time_varying_error_model": 219, "set_tmdd": 220, "set_transit_compart": 221, "set_upper_bound": 222, "set_weighted_error_model": 223, "set_zero_order_absorpt": 224, "set_zero_order_elimin": 225, "set_zero_order_input": 226, "simplify_express": 227, "solve_ode_system": 228, "split_joint_distribut": 229, "transform_blq": 230, "transform_etas_boxcox": 231, "transform_etas_john_drap": 232, "transform_etas_tdist": 233, "translate_nmtran_tim": 234, "unconstrain_paramet": 235, "undrop_column": 236, "unfix_paramet": 237, "unfix_parameters_to": 238, "unload_dataset": 239, "update_initial_individual_estim": 240, "update_init": [241, 306], "use_thetas_for_error_stdev": 242, "write_csv": 243, "write_model": 244, "create_report": 245, "create_result": 246, "fit": [247, 326], "get_model_featur": 248, "is_strictness_fulfil": 249, "load_example_modelfit_result": 250, "predict_influential_individu": 251, "predict_influential_outli": 252, "predict_outli": 253, "print_fit_summari": 254, "rank_model": 255, "read_modelfit_result": 256, "read_result": 257, "resume_tool": 258, "retrieve_final_model": 259, "retrieve_model": 260, "run_allometri": 261, "run_amd": 262, "run_bootstrap": 263, "run_covsearch": 264, "run_estmethod": 265, "run_iivsearch": 266, "run_iovsearch": 267, "run_modelfit": 268, "run_modelsearch": 269, "run_retri": 270, "run_ruvsearch": 271, "run_structsearch": 272, "run_tool": 273, "summarize_error": 274, "summarize_individu": 275, "summarize_individuals_count_t": 276, "summarize_modelfit_result": 277, "write_result": 278, "localdirectorydatabas": 279, "localdirectorytooldatabas": 280, "localmodeldirectorydatabas": 281, "log": 282, "modeldatabas": 283, "modelentri": 284, "modelfitresult": 285, "nullmodeldatabas": 286, "nulltooldatabas": 287, "task": 289, "tooldatabas": 290, "workflow": [291, 301, 309, 316, 330, 342], "workflowbuild": 292, "call_workflow": 293, "default_model_databas": 294, "default_tool_databas": 295, "execute_workflow": 296, "split_common_opt": 297, "pharmpi": [298, 299, 300, 301, 305, 306, 307, 308, 309, 313, 314, 321, 325, 331, 335, 343, 345], "packag": [298, 299, 300, 301], "function": [298, 299, 300, 301, 327], "class": [298, 301, 314], "tool": [300, 335, 343], "modul": [301, 314], "bootstrap": [302, 306], "postprocess": [302, 318], "statist": 302, "ofv": [302, 303, 306, 312, 318, 324, 326, 339, 340], "includ": 302, "case": 303, "delet": 303, "diagnost": 303, "cdd": [303, 306], "cook": 303, "score": 303, "jackknif": 303, "cookscor": 303, "ratio": 303, "delta": 303, "skip": 303, "column": 303, "changelog": 304, "0": 304, "105": 304, "2023": 304, "12": 304, "07": 304, "new": [304, 322, 329], "featur": [304, 328, 343], "chang": [304, 331], "104": 304, "11": 304, "06": 304, "bugfix": 304, "103": 304, "10": 304, "102": 304, "09": 304, "28": 304, "101": 304, "01": 304, "100": 304, "08": 304, "25": 304, "99": 304, "23": 304, "98": 304, "21": 304, "97": 304, "96": 304, "05": 304, "26": 304, "95": 304, "22": 304, "94": 304, "04": 304, "93": 304, "19": 304, "92": 304, "91": 304, "03": 304, "90": 304, "02": 304, "24": 304, "89": 304, "88": 304, "2022": 304, "87": 304, "14": 304, "86": 304, "30": 304, "85": 304, "18": 304, "84": 304, "1": 304, "13": 304, "bug": 304, "fix": 304, "83": 304, "82": 304, "81": 304, "80": 304, "79": 304, "16": 304, "78": 304, "20": 304, "77": 304, "76": 304, "75": 304, "74": 304, "73": 304, "72": 304, "71": 304, "70": 304, "17": 304, "69": 304, "29": 304, "68": 304, "27": 304, "67": 304, "66": 304, "65": 304, "64": 304, "63": 304, "62": 304, "61": 304, "31": 304, "59": 304, "58": 304, "4": 304, "57": 304, "56": 304, "55": 304, "54": 304, "53": 304, "52": 304, "51": 304, "50": 304, "49": 304, "48": 304, "47": 304, "46": 304, "45": 304, "44": 304, "43": 304, "42": 304, "41": 304, "2021": 304, "40": 304, "39": 304, "15": 304, "38": 304, "37": 304, "36": 304, "35": 304, "34": 304, "3": 304, "2": [304, 323], "33": 304, "32": 304, "2020": 304, "9": 304, "8": 304, "7": 304, "6": 304, "5": 304, "2018": 304, "citat": 305, "how": 305, "cite": 305, "pharmr": [305, 345], "command": 306, "interfac": 306, "append": 306, "deidentifi": 306, "filter": 306, "print": 306, "resampl": 306, "write": [306, 325, 327, 329], "info": 306, "absorption_r": 306, "add_cov_effect": 306, "boxcox": [306, 336], "elimination_r": 306, "error": [306, 326, 327, 336, 345], "iiv_on_ruv": 306, "john_drap": 306, "peripheral_compart": 306, "power_on_ruv": 306, "sampl": [306, 340], "tdist": [306, 336], "transit_compart": 306, "frem": [306, 318], "linear": [306, 324], "qa": [306, 336], "report": 306, "ruvsearch": [306, 338], "scm": [306, 339], "simev": [306, 340], "summari": [306, 339, 340], "covsearch": [306, 311], "estmethod": [306, 317], "execut": 306, "commun": 307, "conduct": 307, "configur": 308, "avail": 308, "plugin": [308, 329, 332], "nlmixr": 308, "rxode": 308, "environ": [308, 309], "variabl": [308, 318, 325, 327, 329], "contribut": 309, "set": [309, 331], "up": 309, "support": 309, "platform": 309, "instal": [309, 319, 345], "python": [309, 345], "git": 309, "fork": 309, "clone": 309, "repositori": 309, "tox": 309, "graphviz": 309, "us": [309, 329, 345], "build": 309, "document": [309, 315], "unit": [309, 313], "test": 309, "integr": 309, "usabl": 309, "virtual": 309, "standard": [309, 326], "releas": 309, "version": [309, 345], "inform": [309, 327], "contributor": 310, "current": 310, "team": 310, "past": 310, "present": 310, "scientif": 310, "fund": 310, "effect": [311, 318, 336], "wildcard": 311, "algorithm": [311, 317, 320, 322, 328], "crossval": 312, "crossvalid": 312, "retriev": 313, "from": 313, "updat": [313, 317], "type": [313, 341, 343], "scale": [313, 337], "continu": 313, "categori": 313, "drop": 313, "datatyp": 313, "descriptor": 313, "design": 314, "principl": 314, "level": [314, 325], "architectur": 314, "heart": 314, "docstr": 314, "depend": [314, 325], "drug": 316, "metabolit": 316, "exhaust": [317, 328], "onli": 317, "evalu": 317, "estim": [317, 318, 325, 326, 327], "method": 317, "solver": 317, "coeffici": 318, "unexplain": 318, "valu": 318, "get": 319, "start": [319, 320], "A": 319, "first": 319, "exampl": [319, 327, 343], "brute": 320, "forc": 320, "number": 320, "iiv": [320, 328], "full": [320, 342], "ad": [320, 325, 327, 328], "compar": [320, 322, 328], "rank": [320, 322, 328], "candid": [320, 322, 328, 339], "welcom": 321, "iov": 322, "licens": 323, "logo": 323, "copyright": 323, "bsd": 323, "claus": 323, "gnu": 323, "lesser": 323, "public": 323, "read": [325, 327, 329], "inspect": 325, "attribut": 325, "name": [325, 329], "descript": [325, 343], "random": [325, 329], "low": 325, "manipul": 325, "object": 325, "creat": [325, 327], "substitut": 325, "symbol": [325, 343], "numer": 325, "modelfit": 326, "rel": 326, "correl": 326, "precis": 326, "indiviud": 326, "predict": [326, 340], "basic": 327, "load": 327, "convert": 327, "transform": 327, "absorpt": 327, "rate": 327, "delai": 327, "elimin": 327, "remov": 327, "popul": 327, "blq": 327, "examin": 327, "modifi": 327, "subject": 327, "observ": 327, "dose": 327, "extract": 327, "group": 327, "after": 327, "concentr": 327, "common": [328, 343], "behaviour": 328, "between": [328, 345], "combin": 328, "exclus": 328, "stepwis": 328, "reduc": 328, "dure": 328, "pkpd": 330, "plot": [331, 340], "theme": 331, "axi": 331, "project": 333, "suggest": 333, "resmod": 334, "psn": 335, "connect": 335, "bia": 336, "fullblock": 336, "normal": 337, "ucp": 337, "tmdd": 342, "ib": 342, "cr": 342, "qss": 342, "wagner": 342, "mmapp": 342, "databas": 343, "directori": 343, "metadata": 343, "languag": 343, "mfl": 343, "describ": 343, "interv": 343, "redund": 343, "strict": 343, "user": 344, "guid": 344, "r": 345, "troubl": 345, "shoot": 345, "wrong": 345, "when": 345, "conda": 345, "import": 345, "mismatch": 345, "gotcha": 345, "list": 345, "indic": 345}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"get_doses": [[108, "get-doses"]], "fix_or_unfix_parameters": [[96, "fix-or-unfix-parameters"]], "fix_parameters": [[97, "fix-parameters"]], "get_baselines": [[100, "get-baselines"]], "get_lag_times": [[115, "get-lag-times"]], "get_individual_parameters": [[112, "get-individual-parameters"]], "evaluate_eta_gradient": [[87, "evaluate-eta-gradient"]], "evaluate_individual_prediction": [[89, "evaluate-individual-prediction"]], "find_clearance_parameters": [[94, "find-clearance-parameters"]], "fix_parameters_to": [[98, "fix-parameters-to"]], "evaluate_weighted_residuals": [[91, "evaluate-weighted-residuals"]], "find_volume_parameters": [[95, "find-volume-parameters"]], "filter_dataset": [[93, "filter-dataset"]], "get_cmt": [[102, "get-cmt"]], "get_admid": [[99, "get-admid"]], "get_concentration_parameters_from_data": [[103, "get-concentration-parameters-from-data"]], "get_dv_symbol": [[109, "get-dv-symbol"]], "evaluate_expression": [[88, "evaluate-expression"]], "get_evid": [[110, "get-evid"]], "get_covariates": [[106, "get-covariates"]], "expand_additional_doses": [[92, "expand-additional-doses"]], "get_config_path": [[104, "get-config-path"]], "get_doseid": [[107, "get-doseid"]], "get_ids": [[111, "get-ids"]], "get_initial_conditions": [[114, "get-initial-conditions"]], "get_covariate_baselines": [[105, "get-covariate-baselines"]], "get_bioavailability": [[101, "get-bioavailability"]], "get_individual_prediction_expression": [[113, "get-individual-prediction-expression"]], "evaluate_population_prediction": [[90, "evaluate-population-prediction"]], "drop_dropped_columns": [[85, "drop-dropped-columns"]], "evaluate_epsilon_gradient": [[86, "evaluate-epsilon-gradient"]], "check_high_correlations": [[73, "check-high-correlations"]], "calculate_se_from_prec": [[70, "calculate-se-from-prec"]], "create_basic_pk_model": [[77, "create-basic-pk-model"]], "calculate_cov_from_prec": [[59, "calculate-cov-from-prec"]], "check_dataset": [[72, "check-dataset"]], "calculate_ucp_scale": [[71, "calculate-ucp-scale"]], "check_parameters_near_bounds": [[74, "check-parameters-near-bounds"]], "deidentify_data": [[82, "deidentify-data"]], "calculate_eta_gradient_expression": [[61, "calculate-eta-gradient-expression"]], "cleanup_model": [[75, "cleanup-model"]], "convert_model": [[76, "convert-model"]], "calculate_se_from_cov": [[69, "calculate-se-from-cov"]], "create_symbol": [[81, "create-symbol"]], "calculate_individual_shrinkage": [[64, "calculate-individual-shrinkage"]], "calculate_individual_parameter_statistics": [[63, "calculate-individual-parameter-statistics"]], "calculate_eta_shrinkage": [[62, "calculate-eta-shrinkage"]], "calculate_pk_parameters_statistics": [[66, "calculate-pk-parameters-statistics"]], "create_joint_distribution": [[79, "create-joint-distribution"]], "create_rng": [[80, "create-rng"]], "calculate_prec_from_cov": [[68, "calculate-prec-from-cov"]], "display_odes": [[83, "display-odes"]], "create_config_template": [[78, "create-config-template"]], "calculate_epsilon_gradient_expression": [[60, "calculate-epsilon-gradient-expression"]], "calculate_parameters_from_ucp": [[65, "calculate-parameters-from-ucp"]], "calculate_prec_from_corrse": [[67, "calculate-prec-from-corrse"]], "calculate_cov_from_corrse": [[58, "calculate-cov-from-corrse"]], "drop_columns": [[84, "drop-columns"]], "add_population_parameter": [[49, "add-population-parameter"]], "add_time_after_dose": [[50, "add-time-after-dose"]], "add_metabolite": [[44, "add-metabolite"]], "VariabilityLevel": [[30, "variabilitylevel"]], "add_effect_compartment": [[37, "add-effect-compartment"]], "add_pk_iiv": [[48, "add-pk-iiv"]], "add_covariate_effect": [[36, "add-covariate-effect"]], "calculate_corr_from_prec": [[57, "calculate-corr-from-prec"]], "add_iov": [[42, "add-iov"]], "calculate_corr_from_cov": [[56, "calculate-corr-from-cov"]], "append_estimation_step_options": [[51, "append-estimation-step-options"]], "to_compartmental_system": [[31, "to-compartmental-system"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "add_allometry": [[33, "add-allometry"]], "add_peripheral_compartment": [[47, "add-peripheral-compartment"]], "add_indirect_effect": [[40, "add-indirect-effect"]], "calculate_bic": [[55, "calculate-bic"]], "bin_observations": [[52, "bin-observations"]], "VariabilityHierarchy": [[29, "variabilityhierarchy"]], "add_bioavailability": [[34, "add-bioavailability"]], "add_lag_time": [[43, "add-lag-time"]], "add_cmt": [[35, "add-cmt"]], "add_admid": [[32, "add-admid"]], "add_estimation_step": [[38, "add-estimation-step"]], "add_pd_iiv": [[46, "add-pd-iiv"]], "bump_model_number": [[53, "bump-model-number"]], "calculate_aic": [[54, "calculate-aic"]], "add_parameter_uncertainty_step": [[45, "add-parameter-uncertainty-step"]], "add_iiv": [[39, "add-iiv"]], "run_modelsearch": [[269, "run-modelsearch"]], "summarize_modelfit_results": [[277, "summarize-modelfit-results"]], "run_bootstrap": [[263, "run-bootstrap"]], "run_allometry": [[261, "run-allometry"]], "run_iovsearch": [[267, "run-iovsearch"]], "run_tool": [[273, "run-tool"]], "summarize_errors": [[274, "summarize-errors"]], "summarize_individuals": [[275, "summarize-individuals"]], "run_structsearch": [[272, "run-structsearch"]], "run_retries": [[270, "run-retries"]], "ModelfitResults": [[285, "modelfitresults"]], "NullToolDatabase": [[287, "nulltooldatabase"]], "Log": [[282, "log"]], "ModelEntry": [[284, "modelentry"]], "run_amd": [[262, "run-amd"]], "Results": [[288, "results"], [2, "results"], [316, "results"], [311, "results"], [322, "results"], [343, "results"], [341, "results"], [342, "results"], [330, "results"]], "run_modelfit": [[268, "run-modelfit"]], "LocalDirectoryToolDatabase": [[280, "localdirectorytooldatabase"]], "Task": [[289, "task"]], "summarize_individuals_count_table": [[276, "summarize-individuals-count-table"]], "run_estmethod": [[265, "run-estmethod"]], "ModelDatabase": [[283, "modeldatabase"]], "run_covsearch": [[264, "run-covsearch"]], "run_iivsearch": [[266, "run-iivsearch"]], "LocalDirectoryDatabase": [[279, "localdirectorydatabase"]], "write_results": [[278, "write-results"]], "LocalModelDirectoryDatabase": [[281, "localmodeldirectorydatabase"]], "NullModelDatabase": [[286, "nullmodeldatabase"]], "run_ruvsearch": [[271, "run-ruvsearch"]], "retrieve_final_model": [[259, "retrieve-final-model"]], "unconstrain_parameters": [[235, "unconstrain-parameters"]], "print_fit_summary": [[254, "print-fit-summary"]], "predict_influential_individuals": [[251, "predict-influential-individuals"]], "predict_outliers": [[253, "predict-outliers"]], "resume_tool": [[258, "resume-tool"]], "unfix_parameters_to": [[238, "unfix-parameters-to"]], "update_inits": [[241, "update-inits"]], "fit": [[247, "fit"]], "transform_etas_tdist": [[233, "transform-etas-tdist"]], "transform_etas_john_draper": [[232, "transform-etas-john-draper"]], "unload_dataset": [[239, "unload-dataset"]], "retrieve_models": [[260, "retrieve-models"]], "create_results": [[246, "create-results"]], "load_example_modelfit_results": [[250, "load-example-modelfit-results"]], "undrop_columns": [[236, "undrop-columns"]], "get_model_features": [[248, "get-model-features"]], "create_report": [[245, "create-report"]], "use_thetas_for_error_stdev": [[242, "use-thetas-for-error-stdev"]], "update_initial_individual_estimates": [[240, "update-initial-individual-estimates"]], "is_strictness_fulfilled": [[249, "is-strictness-fulfilled"]], "read_results": [[257, "read-results"]], "read_modelfit_results": [[256, "read-modelfit-results"]], "write_csv": [[243, "write-csv"]], "rank_models": [[255, "rank-models"]], "predict_influential_outliers": [[252, "predict-influential-outliers"]], "unfix_parameters": [[237, "unfix-parameters"]], "write_model": [[244, "write-model"]], "translate_nmtran_time": [[234, "translate-nmtran-time"]], "set_zero_order_absorption": [[224, "set-zero-order-absorption"]], "set_iiv_on_ruv": [[203, "set-iiv-on-ruv"]], "set_zero_order_input": [[226, "set-zero-order-input"]], "set_time_varying_error_model": [[219, "set-time-varying-error-model"]], "set_transit_compartments": [[221, "set-transit-compartments"]], "set_upper_bounds": [[222, "set-upper-bounds"]], "set_mixed_mm_fo_elimination": [[210, "set-mixed-mm-fo-elimination"]], "solve_ode_system": [[228, "solve-ode-system"]], "set_lloq_data": [[207, "set-lloq-data"]], "simplify_expression": [[227, "simplify-expression"]], "set_seq_zo_fo_absorption": [[217, "set-seq-zo-fo-absorption"]], "set_initial_estimates": [[205, "set-initial-estimates"]], "set_name": [[211, "set-name"]], "set_simulation": [[218, "set-simulation"]], "set_instantaneous_absorption": [[206, "set-instantaneous-absorption"]], "set_initial_condition": [[204, "set-initial-condition"]], "set_lower_bounds": [[208, "set-lower-bounds"]], "set_power_on_ruv": [[214, "set-power-on-ruv"]], "transform_etas_boxcox": [[231, "transform-etas-boxcox"]], "set_weighted_error_model": [[223, "set-weighted-error-model"]], "set_peripheral_compartments": [[213, "set-peripheral-compartments"]], "set_zero_order_elimination": [[225, "set-zero-order-elimination"]], "set_proportional_error_model": [[215, "set-proportional-error-model"]], "set_reference_values": [[216, "set-reference-values"]], "set_tmdd": [[220, "set-tmdd"]], "transform_blq": [[230, "transform-blq"]], "set_michaelis_menten_elimination": [[209, "set-michaelis-menten-elimination"]], "split_joint_distribution": [[229, "split-joint-distribution"]], "set_ode_solver": [[212, "set-ode-solver"]], "set_additive_error_model": [[192, "set-additive-error-model"]], "remove_unused_parameters_and_rvs": [[185, "remove-unused-parameters-and-rvs"]], "remove_estimation_step": [[178, "remove-estimation-step"]], "remove_iov": [[180, "remove-iov"]], "set_evaluation_step": [[200, "set-evaluation-step"]], "remove_loq_data": [[182, "remove-loq-data"]], "set_combined_error_model": [[194, "set-combined-error-model"]], "set_dtbs_error_model": [[197, "set-dtbs-error-model"]], "remove_parameter_uncertainty_step": [[183, "remove-parameter-uncertainty-step"]], "remove_error_model": [[177, "remove-error-model"]], "sample_individual_estimates": [[189, "sample-individual-estimates"]], "remove_covariate_effect": [[176, "remove-covariate-effect"]], "set_covariates": [[195, "set-covariates"]], "remove_bioavailability": [[175, "remove-bioavailability"]], "rename_symbols": [[186, "rename-symbols"]], "set_dvid": [[198, "set-dvid"]], "remove_peripheral_compartment": [[184, "remove-peripheral-compartment"]], "set_baseline_effect": [[193, "set-baseline-effect"]], "set_direct_effect": [[196, "set-direct-effect"]], "sample_parameters_uniformly": [[191, "sample-parameters-uniformly"]], "replace_non_random_rvs": [[187, "replace-non-random-rvs"]], "set_first_order_elimination": [[202, "set-first-order-elimination"]], "remove_lag_time": [[181, "remove-lag-time"]], "set_estimation_step": [[199, "set-estimation-step"]], "remove_iiv": [[179, "remove-iiv"]], "read_model_from_string": [[174, "read-model-from-string"]], "set_first_order_absorption": [[201, "set-first-order-absorption"]], "resample_data": [[188, "resample-data"]], "sample_parameters_from_covariance_matrix": [[190, "sample-parameters-from-covariance-matrix"]], "has_zero_order_absorption": [[153, "has-zero-order-absorption"]], "load_dataset": [[158, "load-dataset"]], "plot_dv_vs_ipred": [[165, "plot-dv-vs-ipred"]], "has_zero_order_elimination": [[154, "has-zero-order-elimination"]], "make_declarative": [[160, "make-declarative"]], "read_dataset_from_datainfo": [[172, "read-dataset-from-datainfo"]], "read_model": [[173, "read-model"]], "is_real": [[156, "is-real"]], "mu_reference_model": [[161, "mu-reference-model"]], "print_model_code": [[170, "print-model-code"]], "omit_data": [[162, "omit-data"]], "has_odes": [[147, "has-odes"]], "has_proportional_error_model": [[149, "has-proportional-error-model"]], "has_seq_zo_fo_absorption": [[151, "has-seq-zo-fo-absorption"]], "has_weighted_error_model": [[152, "has-weighted-error-model"]], "plot_abs_cwres_vs_ipred": [[163, "plot-abs-cwres-vs-ipred"]], "plot_cwres_vs_idv": [[164, "plot-cwres-vs-idv"]], "has_michaelis_menten_elimination": [[145, "has-michaelis-menten-elimination"]], "load_example_model": [[159, "load-example-model"]], "has_mixed_mm_fo_elimination": [[146, "has-mixed-mm-fo-elimination"]], "plot_individual_predictions": [[167, "plot-individual-predictions"]], "has_presystemic_metabolite": [[148, "has-presystemic-metabolite"]], "plot_dv_vs_pred": [[166, "plot-dv-vs-pred"]], "has_random_effect": [[150, "has-random-effect"]], "plot_iofv_vs_iofv": [[168, "plot-iofv-vs-iofv"]], "is_linearized": [[155, "is-linearized"]], "plot_transformed_eta_distributions": [[169, "plot-transformed-eta-distributions"]], "print_model_symbols": [[171, "print-model-symbols"]], "list_time_varying_covariates": [[157, "list-time-varying-covariates"]], "get_pd_parameters": [[128, "get-pd-parameters"]], "get_number_of_peripheral_compartments": [[122, "get-number-of-peripheral-compartments"]], "get_model_code": [[117, "get-model-code"]], "greekify_model": [[136, "greekify-model"]], "get_mdv": [[116, "get-mdv"]], "get_number_of_observations_per_individual": [[121, "get-number-of-observations-per-individual"]], "get_population_prediction_expression": [[130, "get-population-prediction-expression"]], "has_first_order_absorption": [[140, "has-first-order-absorption"]], "get_omegas": [[126, "get-omegas"]], "has_additive_error_model": [[137, "has-additive-error-model"]], "get_number_of_individuals": [[119, "get-number-of-individuals"]], "get_observation_expression": [[124, "get-observation-expression"]], "has_linear_odes": [[143, "has-linear-odes"]], "get_sigmas": [[132, "get-sigmas"]], "has_linear_odes_with_real_eigenvalues": [[144, "has-linear-odes-with-real-eigenvalues"]], "get_observations": [[125, "get-observations"]], "get_zero_order_inputs": [[135, "get-zero-order-inputs"]], "has_covariate_effect": [[139, "has-covariate-effect"]], "get_parameter_rv": [[127, "get-parameter-rv"]], "get_number_of_observations": [[120, "get-number-of-observations"]], "get_unit_of": [[134, "get-unit-of"]], "get_model_covariates": [[118, "get-model-covariates"]], "has_instantaneous_absorption": [[142, "has-instantaneous-absorption"]], "has_combined_error_model": [[138, "has-combined-error-model"]], "has_first_order_elimination": [[141, "has-first-order-elimination"]], "get_rv_parameters": [[131, "get-rv-parameters"]], "get_thetas": [[133, "get-thetas"]], "get_number_of_transit_compartments": [[123, "get-number-of-transit-compartments"]], "get_pk_parameters": [[129, "get-pk-parameters"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "Infusion": [[16, "infusion"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "Compartment": [[7, "compartment"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Running": [[2, "running"], [1, "running"], [317, "running"], [316, "running"], [311, "running"], [328, "running"], [322, "running"], [320, "running"], [338, "running"], [341, "running"], [342, "running"], [337, "running"], [330, "running"]], "Arguments": [[2, "arguments"], [1, "arguments"], [317, "arguments"], [311, "arguments"], [328, "arguments"], [322, "arguments"], [320, "arguments"], [338, "arguments"], [341, "arguments"], [342, "arguments"], [337, "arguments"], [330, "arguments"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"], [330, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "Modelsearch": [[2, "modelsearch"], [328, "modelsearch"]], "Structsearch": [[2, "structsearch"], [341, "structsearch"]], "IIVsearch": [[2, "iivsearch"], [320, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [322, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Retries": [[2, "retries"], [337, "retries"]], "Final model": [[2, "final-model"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "Statement": [[27, "statement"]], "ModelError": [[19, "modelerror"]], "RandomVariables": [[25, "randomvariables"]], "Parameter": [[23, "parameter"]], "DatasetError": [[11, "dataseterror"]], "Distribution": [[13, "distribution"], [327, "distribution"]], "allometry": [[1, "allometry"]], "Procedure": [[1, "procedure"], [338, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "Bolus": [[5, "bolus"]], "DataInfo": [[10, "datainfo"], [313, "datainfo"]], "ColumnInfo": [[6, "columninfo"], [313, "columninfo"]], "Model": [[18, "model"]], "SimulationStep": [[26, "simulationstep"]], "NormalDistribution": [[22, "normaldistribution"]], "EstimationSteps": [[15, "estimationsteps"]], "Assignment": [[4, "assignment"]], "Statements": [[28, "statements"], [325, "statements"]], "Parameters": [[24, "parameters"], [325, "parameters"]], "EstimationStep": [[14, "estimationstep"]], "DatasetWarning": [[12, "datasetwarning"]], "API Reference": [[3, "api-reference"]], "ToolDatabase": [[290, "tooldatabase"]], "split_common_options": [[297, "split-common-options"]], "Estmethod": [[317, "estmethod"]], "Algorithms": [[317, "algorithms"], [328, "algorithms"], [320, "algorithms"]], "Exhaustive": [[317, "exhaustive"]], "Exhaustive (with update)": [[317, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[317, "exhaustive-only-evaluation"]], "Estimation methods": [[317, "estimation-methods"]], "Solvers": [[317, "solvers"]], "The Estmethod results": [[317, "the-estmethod-results"]], "WorkflowBuilder": [[292, "workflowbuilder"]], "pharmpy.workflows Package": [[301, "module-pharmpy.workflows"]], "Options for the data module": [[301, "id1"]], "Functions": [[301, "functions"], [300, "functions"], [299, "functions"], [298, "functions"]], "Classes": [[301, "classes"], [298, "classes"]], "Case deletion diagnostics": [[303, "case-deletion-diagnostics"]], "The cdd results": [[303, "the-cdd-results"]], "Case results": [[303, "case-results"]], "Cook score": [[303, "cook-score"]], "Jackknife cookscore": [[303, "jackknife-cookscore"]], "Covariance ratio": [[303, "covariance-ratio"]], "Delta OFV": [[303, "delta-ofv"]], "Skipped individuals": [[303, "skipped-individuals"]], "Case column": [[303, "case-column"]], "References": [[303, "references"], [318, "references"]], "pharmpy.tools Package": [[300, "module-pharmpy.tools"]], "pharmpy.modeling Package": [[299, "module-pharmpy.modeling"]], "pharmpy.model Package": [[298, "module-pharmpy.model"]], "Bootstrap": [[302, "bootstrap"]], "The Bootstrap postprocessing and results": [[302, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[302, "parameter-statistics"]], "OFV statistics": [[302, "ofv-statistics"]], "Covariance matrix": [[302, "covariance-matrix"], [326, "covariance-matrix"]], "Included individuals": [[302, "included-individuals"]], "Pharmpy Community Code of Conduct": [[307, "pharmpy-community-code-of-conduct"]], "Workflow": [[291, "workflow"]], "The Pharmpy command line interface": [[306, "the-pharmpy-command-line-interface"]], "pharmpy": [[306, "pharmpy"]], "pharmpy data": [[306, "pharmpy-data"]], "pharmpy data append": [[306, "pharmpy-data-append"]], "pharmpy data deidentify": [[306, "pharmpy-data-deidentify"]], "pharmpy data filter": [[306, "pharmpy-data-filter"]], "pharmpy data print": [[306, "pharmpy-data-print"]], "pharmpy data reference": [[306, "pharmpy-data-reference"]], "pharmpy data resample": [[306, "pharmpy-data-resample"]], "pharmpy data write": [[306, "pharmpy-data-write"]], "pharmpy info": [[306, "pharmpy-info"]], "pharmpy model": [[306, "pharmpy-model"]], "pharmpy model absorption_rate": [[306, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[306, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[306, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[306, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[306, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[306, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[306, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[306, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[306, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[306, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[306, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[306, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[306, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[306, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[306, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[306, "pharmpy-model-sample"]], "pharmpy model tdist": [[306, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[306, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[306, "pharmpy-model-update-inits"]], "pharmpy results": [[306, "pharmpy-results"]], "pharmpy results bootstrap": [[306, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[306, "pharmpy-results-cdd"]], "pharmpy results frem": [[306, "pharmpy-results-frem"]], "pharmpy results linearize": [[306, "pharmpy-results-linearize"]], "pharmpy results ofv": [[306, "pharmpy-results-ofv"]], "pharmpy results print": [[306, "pharmpy-results-print"]], "pharmpy results qa": [[306, "pharmpy-results-qa"]], "pharmpy results report": [[306, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[306, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[306, "pharmpy-results-scm"]], "pharmpy results simeval": [[306, "pharmpy-results-simeval"]], "pharmpy results summary": [[306, "pharmpy-results-summary"]], "pharmpy run": [[306, "pharmpy-run"]], "pharmpy run allometry": [[306, "pharmpy-run-allometry"]], "pharmpy run amd": [[306, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[306, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[306, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[306, "pharmpy-run-estmethod"]], "pharmpy run execute": [[306, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[306, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[306, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[306, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[306, "pharmpy-run-ruvsearch"]], "Design principles": [[314, "design-principles"]], "Levels of the architecture": [[314, "levels-of-the-architecture"]], "The Heart, The Model Class": [[314, "the-heart-the-model-class"]], "pharmpy.Parameters": [[314, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[314, "pharmpy-randomvariables"]], "pharmpy.Statements": [[314, "pharmpy-statements"]], "The pharmpy.modeling module": [[314, "the-pharmpy-modeling-module"]], "Docstrings": [[314, "docstrings"]], "Dependencies": [[314, "dependencies"]], "Datasets in Pharmpy": [[313, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[313, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[313, "update-the-dataset-of-a-model"]], "type": [[313, "type"]], "scale": [[313, "scale"]], "continuous": [[313, "continuous"]], "categories": [[313, "categories"]], "unit": [[313, "unit"]], "drop": [[313, "drop"]], "datatype": [[313, "datatype"]], "descriptor": [[313, "descriptor"]], "datainfo file": [[313, "datainfo-file"]], "Changelog": [[304, "changelog"]], "0.105.0 (2023-12-07)": [[304, "id1"]], "New features": [[304, "new-features"], [304, "id3"], [304, "id8"], [304, "id12"], [304, "id14"], [304, "id17"], [304, "id21"], [304, "id24"], [304, "id28"], [304, "id34"], [304, "id38"], [304, "id42"], [304, "id45"], [304, "id49"], [304, "id52"], [304, "id55"], [304, "id68"], [304, "id78"], [304, "id85"], [304, "id96"], [304, "id100"], [304, "id107"], [304, "id110"], [304, "id114"], [304, "id120"], [304, "id124"], [304, "id130"], [304, "id135"], [304, "id139"], [304, "id142"], [304, "id150"], [304, "id154"], [304, "id160"], [304, "id169"], [304, "id173"], [304, "id176"], [304, "id180"], [304, "id182"], [304, "id187"], [304, "id190"], [304, "id194"]], "Changes": [[304, "changes"], [304, "id5"], [304, "id9"], [304, "id15"], [304, "id18"], [304, "id22"], [304, "id25"], [304, "id27"], [304, "id31"], [304, "id35"], [304, "id39"], [304, "id46"], [304, "id50"], [304, "id53"], [304, "id56"], [304, "id58"], [304, "id60"], [304, "id63"], [304, "id66"], [304, "id69"], [304, "id71"], [304, "id74"], [304, "id79"], [304, "id82"], [304, "id86"], [304, "id89"], [304, "id92"], [304, "id97"], [304, "id101"], [304, "id104"], [304, "id108"], [304, "id111"], [304, "id115"], [304, "id121"], [304, "id125"], [304, "id136"], [304, "id140"], [304, "id145"], [304, "id151"], [304, "id161"], [304, "id166"], [304, "id170"], [304, "id177"], [304, "id183"], [304, "id188"], [304, "id191"], [304, "id195"]], "0.104.0 (2023-11-06)": [[304, "id2"]], "Bugfixes": [[304, "bugfixes"], [304, "id6"], [304, "id10"], [304, "id19"], [304, "id29"], [304, "id32"], [304, "id36"], [304, "id40"], [304, "id43"], [304, "id47"], [304, "id61"], [304, "id64"], [304, "id90"], [304, "id94"], [304, "id98"], [304, "id102"], [304, "id105"], [304, "id112"], [304, "id116"], [304, "id118"], [304, "id122"], [304, "id126"], [304, "id128"], [304, "id131"], [304, "id133"], [304, "id137"], [304, "id143"], [304, "id146"], [304, "id148"], [304, "id152"], [304, "id156"], [304, "id158"], [304, "id162"], [304, "id164"], [304, "id167"], [304, "id171"], [304, "id174"], [304, "id178"], [304, "id185"], [304, "id192"], [304, "id196"]], "0.103.0 (2023-10-12)": [[304, "id4"]], "0.102.0 (2023-09-28)": [[304, "id7"]], "0.101.0 (2023-09-01)": [[304, "id11"]], "0.100.0 (2023-08-25)": [[304, "id13"]], "0.99.0 (2023-08-23)": [[304, "id16"]], "0.98.0 (2023-07-21)": [[304, "id20"]], "0.97.0 (2023-06-28)": [[304, "id23"]], "0.96.0 (2023-05-26)": [[304, "id26"]], "0.95.0 (2023-05-22)": [[304, "id30"]], "0.94.0 (2023-04-26)": [[304, "id33"]], "0.93.0 (2023-04-19)": [[304, "id37"]], "0.92.0 (2023-04-05)": [[304, "id41"]], "0.91.0 (2023-03-03)": [[304, "id44"]], "0.90.0 (2023-02-24)": [[304, "id48"]], "0.89.0 (2023-01-26)": [[304, "id51"]], "0.88.0 (2022-12-21)": [[304, "id54"]], "0.87.0 (2022-12-14)": [[304, "id57"]], "0.86.0 (2022-11-30)": [[304, "id59"]], "0.85.0 (2022-11-18)": [[304, "id62"]], "0.84.1 (2022-11-13)": [[304, "id65"]], "Bug fixes": [[304, "bug-fixes"], [304, "id72"], [304, "id76"], [304, "id80"], [304, "id83"], [304, "id87"]], "0.84.0 (2022-11-09)": [[304, "id67"]], "0.83.0 (2022-11-01)": [[304, "id70"]], "0.82.0 (2022-10-24)": [[304, "id73"]], "0.81.1 (2022-10-24)": [[304, "id75"]], "0.81.0 (2022-10-21)": [[304, "id77"]], "0.80.0 (2022-10-19)": [[304, "id81"]], "0.79.0 (2022-10-16)": [[304, "id84"]], "0.78.0 (2022-09-20)": [[304, "id88"]], "0.77.0 (2022-09-08)": [[304, "id91"]], "0.76.1 (2022-09-06)": [[304, "id93"]], "0.76.0 (2022-09-05)": [[304, "id95"]], "0.75.0 (2022-08-10)": [[304, "id99"]], "0.74.0 (2022-07-18)": [[304, "id103"]], "0.73.0 (2022-06-21)": [[304, "id106"]], "0.72.0 (2022-06-08)": [[304, "id109"]], "0.71.0 (2022-05-24)": [[304, "id113"]], "0.70.1 (2022-05-17)": [[304, "id117"]], "0.70.0 (2022-05-13)": [[304, "id119"]], "0.69.0 (2022-04-29)": [[304, "id123"]], "0.68.0 (2022-04-27)": [[304, "id127"]], "0.67.0 (2022-04-25)": [[304, "id129"]], "0.66.0 (2022-04-20)": [[304, "id132"]], "0.65.0 (2022-04-14)": [[304, "id134"]], "0.64.0 (2022-04-12)": [[304, "id138"]], "0.63.0 (2022-04-07)": [[304, "id141"]], "0.62.0 (2022-04-04)": [[304, "id144"]], "New feature": [[304, "new-feature"]], "0.61.1 (2022-03-31)": [[304, "id147"]], "0.61.0 (2022-03-29)": [[304, "id149"]], "0.59.0 (2022-03-25)": [[304, "id153"]], "0.58.4 (2022-03-24)": [[304, "id155"]], "0.58.1 (2022-03-22)": [[304, "id157"]], "0.58.0 (2022-03-22)": [[304, "id159"]], "0.57.0 (2022-03-21)": [[304, "id163"]], "0.56.0 (2022-03-17)": [[304, "id165"]], "0.55.0 (2022-03-16)": [[304, "id168"]], "0.54.0 (2022-03-08)": [[304, "id172"]], "0.53.0 (2022-03-04)": [[304, "id175"]], "0.52.0 (2022-02-25)": [[304, "id179"]], "0.51.0 (2022-02-24)": [[304, "id181"]], "0.50.1 (2022-02-16)": [[304, "id184"]], "0.50.0 (2022-02-16)": [[304, "id186"]], "0.49.0 (2022-02-10)": [[304, "id189"]], "0.48.0 (2022-02-04)": [[304, "id193"]], "0.47.0 (2022-01-28)": [[304, "id197"]], "0.46.0 (2022-01-27)": [[304, "id198"]], "0.45.0 (2022-01-21)": [[304, "id199"]], "0.44.0 (2022-01-20)": [[304, "id200"]], "0.43.0 (2022-01-12)": [[304, "id201"]], "0.42.0 (2022-01-11)": [[304, "id202"]], "0.41.0 (2021-12-21)": [[304, "id203"]], "0.40.0 (2021-12-16)": [[304, "id204"]], "0.39.0 (2021-12-15)": [[304, "id205"]], "0.38.0 (2021-12-08)": [[304, "id206"]], "0.37.1 (2021-11-26)": [[304, "id207"]], "0.37.0 (2021-11-24)": [[304, "id208"]], "0.36.0 (2021-11-11)": [[304, "id209"]], "0.35.0 (2021-11-02)": [[304, "id210"]], "0.34.3 (2021-10-28)": [[304, "id211"]], "0.34.2 (2021-10-26)": [[304, "id212"]], "0.34.1 (2021-10-20)": [[304, "id213"]], "0.34.0 (2021-10-14)": [[304, "id214"]], "0.33.0 (2021-10-11)": [[304, "id215"]], "0.32.0 (2021-09-28)": [[304, "id216"]], "0.31.0 (2021-09-21)": [[304, "id217"]], "0.30.0 (2021-09-06)": [[304, "id218"]], "0.29.0 (2021-08-25)": [[304, "id219"]], "0.28.0 (2021-08-24)": [[304, "id220"]], "0.27.0 (2021-08-09)": [[304, "id221"]], "0.26.1 (2021-08-04)": [[304, "id222"]], "0.26.0 (2021-07-13)": [[304, "id223"]], "0.25.1 (2021-07-08)": [[304, "id224"]], "0.25.0 (2021-06-24)": [[304, "id225"]], "0.24.0 (2021-05-25)": [[304, "id226"]], "0.23.4 (2021-05-03)": [[304, "id227"]], "0.23.3 (2021-04-29)": [[304, "id228"]], "0.23.2 (2021-04-28)": [[304, "id229"]], "0.23.1 (2021-04-28)": [[304, "id230"]], "0.23.0 (2021-04-28)": [[304, "id231"]], "0.22.0 (2021-03-29)": [[304, "id232"]], "0.21.0 (2021-03-22)": [[304, "id233"]], "0.20.1 (2021-03-11)": [[304, "id234"]], "0.20.0 (2021-03-11)": [[304, "id235"]], "0.19.0 (2021-03-02)": [[304, "id236"]], "0.18.0 (2021-03-01)": [[304, "id237"]], "0.17.0 (2021-02-15)": [[304, "id238"]], "0.16.0 (2021-02-08)": [[304, "id239"]], "0.15.0 (2021-02-01)": [[304, "id240"]], "0.14.0 (2021-01-25)": [[304, "id241"]], "0.13.0 (2021-01-18)": [[304, "id242"]], "0.12.0 (2020-12-18)": [[304, "id243"]], "0.11.0 (2020-11-20)": [[304, "id244"]], "0.10.0 (2020-11-16)": [[304, "id245"]], "0.9.0 (2020-10-26)": [[304, "id246"]], "0.8.0 (2020-10-08)": [[304, "id247"]], "0.7.0 (2020-09-28)": [[304, "id248"]], "0.6.0 (2020-09-18)": [[304, "id249"]], "0.5.0 (2020-09-04)": [[304, "id250"]], "0.4.0 (2020-07-24)": [[304, "id251"]], "0.3.0 (2020-06-16)": [[304, "id252"]], "0.2.0 (2020-03-27)": [[304, "id253"]], "0.1.0 (2018-07-22)": [[304, "id254"]], "Crossval": [[312, "crossval"]], "The crossval results": [[312, "the-crossval-results"]], "Crossvalidation OFVs": [[312, "crossvalidation-ofvs"]], "call_workflow": [[293, "call-workflow"]], "default_tool_database": [[295, "default-tool-database"]], "Contribute": [[309, "contribute"]], "Set up the development environment": [[309, "set-up-the-development-environment"]], "Supported platforms": [[309, "supported-platforms"]], "Install Python": [[309, "install-python"]], "Install git": [[309, "install-git"]], "Fork and clone the code repository": [[309, "fork-and-clone-the-code-repository"]], "Install tox": [[309, "install-tox"]], "Install graphviz used for building the documentation": [[309, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[309, "using-the-development-environment"]], "Running tox": [[309, "running-tox"]], "Check code formatting": [[309, "check-code-formatting"]], "Run the unit tests": [[309, "run-the-unit-tests"]], "Build and test the documentation": [[309, "build-and-test-the-documentation"]], "Run the integration tests": [[309, "run-the-integration-tests"]], "Build a usable virtual environment": [[309, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[309, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[309, "releasing-pharmpy-and-documentation"]], "Version": [[309, "version"]], "Information for developers": [[309, "information-for-developers"]], "default_model_database": [[294, "default-model-database"]], "Citation": [[305, "citation"]], "How to cite Pharmpy and pharmr": [[305, "how-to-cite-pharmpy-and-pharmr"]], "Drug metabolite": [[316, "drug-metabolite"]], "Models": [[316, "models"], [338, "models"], [342, "models"], [330, "models"]], "Structsearch workflow": [[316, "structsearch-workflow"], [342, "structsearch-workflow"], [330, "structsearch-workflow"]], "The search space": [[316, "the-search-space"], [328, "the-search-space"], [341, "the-search-space"]], "Contributors": [[310, "authors"]], "Development": [[310, "development"]], "Current team": [[310, "current-team"]], "All developers past and present": [[310, "all-developers-past-and-present"]], "Scientific input": [[310, "scientific-input"]], "Funding": [[310, "funding"]], "FREM": [[318, "frem"]], "The FREM postprocessing and results": [[318, "the-frem-postprocessing-and-results"]], "Covariate effects": [[318, "covariate-effects"], [336, "covariate-effects"]], "Parameter covariate coefficients": [[318, "parameter-covariate-coefficients"]], "Individual covariate effects": [[318, "individual-covariate-effects"]], "Unexplained variability": [[318, "unexplained-variability"]], "Parameter estimates": [[318, "parameter-estimates"], [326, "parameter-estimates"]], "OFV": [[318, "ofv"]], "Estimated covariate values": [[318, "estimated-covariate-values"]], "execute_workflow": [[296, "execute-workflow"]], "COVsearch": [[311, "covsearch"]], "Effects": [[311, "effects"]], "Wildcards": [[311, "wildcards"]], "Algorithm": [[311, "algorithm"], [322, "algorithm"]], "Documentation for developers": [[315, "documentation-for-developers"]], "Configuration": [[308, "configuration"]], "The configuration file": [[308, "the-configuration-file"]], "Available configurations": [[308, "available-configurations"]], "pharmpy.plugins.nonmem": [[308, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[308, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[308, "pharmpy-plugins-rxode"]], "Environment variables": [[308, "environment-variables"]], "Pharmpy in R": [[345, "pharmpy-in-r"]], "Installing pharmr": [[345, "installing-pharmr"]], "Trouble shooting": [[345, "trouble-shooting"]], "Wrong Python version when using conda": [[345, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[345, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[345, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[345, "using-pharmr"]], "Gotchas": [[345, "gotchas"]], "List indices": [[345, "list-indices"]], "QA": [[336, "qa"]], "The qa results": [[336, "the-qa-results"]], "Overview": [[336, "overview"]], "Structural bias": [[336, "structural-bias"]], "Fullblock": [[336, "fullblock"]], "Boxcox": [[336, "boxcox"]], "Tdist": [[336, "tdist"]], "Residual error": [[336, "residual-error"]], "Common behaviours between algorithms": [[328, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[328, "feature-combination-exclusions"]], "Exhaustive search": [[328, "exhaustive-search"]], "Exhaustive stepwise search": [[328, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[328, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[328, "adding-iiv-to-the-candidate-models-during-search"]], "Comparing and ranking candidates": [[328, "comparing-and-ranking-candidates"], [322, "comparing-and-ranking-candidates"], [320, "comparing-and-ranking-candidates"]], "The Modelsearch results": [[328, "the-modelsearch-results"]], "Distribution of new IOVs": [[322, "distribution-of-new-iovs"]], "Project suggestions": [[333, "project-suggestions"]], "Brute force search for number of IIVs": [[320, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[320, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[320, "full-brute-force-search"]], "Adding IIV to the start model": [[320, "adding-iiv-to-the-start-model"]], "The IIVsearch results": [[320, "the-iivsearch-results"]], "scm": [[339, "scm"]], "The scm results": [[339, "the-scm-results"]], "Steps": [[339, "steps"]], "OFV Summary": [[339, "ofv-summary"]], "Candidate Summary": [[339, "candidate-summary"]], "Tools": [[343, "tools"]], "Tools in Pharmpy": [[343, "tools-in-pharmpy"]], "Common options": [[343, "common-options"]], "Common features": [[343, "common-features"]], "Tool database": [[343, "tool-database"]], "Running directory": [[343, "running-directory"]], "Metadata": [[343, "metadata"]], "Datasets": [[343, "datasets"]], "Model feature language (MFL)": [[343, "model-feature-language-mfl"]], "Option types": [[343, "option-types"]], "Model features": [[343, "model-features"]], "Symbols": [[343, "symbols"]], "Describe intervals": [[343, "describe-intervals"]], "Redundant descriptions": [[343, "redundant-descriptions"]], "Examples": [[343, "examples"], [343, "id3"]], "Strictness": [[343, "strictness"]], "User guide": [[344, "user-guide"]], "Welcome to Pharmpy": [[321, "welcome-to-pharmpy"]], "Getting started": [[319, "getting-started"]], "Installation": [[319, "installation"]], "A first example": [[319, "a-first-example"]], "License": [[323, "license"]], "Logo": [[323, "logo"]], "Copyright": [[323, "copyright"]], "BSD 2-clause License": [[323, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[323, "gnu-lesser-general-public-license"]], "The Pharmpy model": [[325, "the-pharmpy-model"]], "Reading in a model": [[325, "reading-in-a-model"], [329, "reading-in-a-model"]], "Writing a model": [[325, "writing-a-model"], [329, "writing-a-model"]], "Inspecting the model attributes": [[325, "inspecting-the-model-attributes"]], "Name and description": [[325, "name-and-description"]], "Random variables": [[325, "random-variables"]], "Dataset and datainfo": [[325, "dataset-and-datainfo"]], "Estimation steps": [[325, "estimation-steps"], [327, "estimation-steps"]], "Dependent variables": [[325, "dependent-variables"]], "Low level manipulations of the model object": [[325, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[325, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[325, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Linearize": [[324, "linearize"]], "The linearize results": [[324, "the-linearize-results"]], "OFVs": [[324, "ofvs"]], "Individual OFVs": [[324, "individual-ofvs"]], "ruvsearch": [[338, "ruvsearch"]], "The RUVsearch results": [[338, "the-ruvsearch-results"]], "Using the NONMEM plugin": [[329, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[329, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[329, "new-parameters-and-random-variables"]], "PsN with Pharmpy": [[335, "psn-with-pharmpy"]], "Tools connected to PsN": [[335, "tools-connected-to-psn"]], "The model types": [[341, "the-model-types"]], "TMDD": [[342, "tmdd"]], "Full model:": [[342, "full-model"]], "IB model:": [[342, "ib-model"]], "CR model:": [[342, "cr-model"]], "CR + IB model:": [[342, "cr-ib-model"]], "QSS model:": [[342, "qss-model"]], "Wagner model:": [[342, "wagner-model"]], "MMAPP model:": [[342, "mmapp-model"]], "Modeling": [[327, "modeling"]], "Basic functions": [[327, "basic-functions"]], "Reading and writing models": [[327, "reading-and-writing-models"]], "Loading example models": [[327, "loading-example-models"]], "Converting models": [[327, "converting-models"]], "Create basic models": [[327, "create-basic-models"]], "Modeling transformations": [[327, "modeling-transformations"]], "Structural model": [[327, "structural-model"]], "Absorption rate": [[327, "absorption-rate"]], "Absorption delay": [[327, "absorption-delay"]], "Elimination": [[327, "elimination"]], "Parameter variability model": [[327, "parameter-variability-model"]], "Adding and removing parameter variability": [[327, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[327, "adding-and-removing-covariance"]], "Eta transformations": [[327, "eta-transformations"]], "Covariates and allometry": [[327, "covariates-and-allometry"]], "Population parameters": [[327, "population-parameters"]], "Error model": [[327, "error-model"]], "BLQ transformations": [[327, "blq-transformations"]], "Examining and modifying dataset": [[327, "examining-and-modifying-dataset"]], "Subjects": [[327, "subjects"]], "Observations": [[327, "observations"]], "Dosing": [[327, "dosing"]], "Extract dosing information": [[327, "extract-dosing-information"]], "Dose grouping": [[327, "dose-grouping"]], "Time after dose": [[327, "time-after-dose"]], "Concentration parameters": [[327, "concentration-parameters"]], "Model estimation and results": [[326, "model-estimation-and-results"]], "Fitting a model": [[326, "fitting-a-model"]], "Modelfit results": [[326, "modelfit-results"]], "Final OFV": [[326, "final-ofv"]], "Standard errors of parameter estimates": [[326, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[326, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[326, "correlation-matrix"]], "Precision Matrix": [[326, "precision-matrix"]], "Indiviudal OFV": [[326, "indiviudal-ofv"]], "Predictions": [[326, "predictions"]], "Residuals": [[326, "residuals"]], "Individual estimates": [[326, "individual-estimates"]], "Scales": [[337, "scales"]], "Normal": [[337, "normal"]], "UCP": [[337, "ucp"]], "The Retries results": [[337, "the-retries-results"]], "Plots in Pharmpy": [[331, "plots-in-pharmpy"]], "Setting themes": [[331, "setting-themes"]], "Changing axis of plots": [[331, "changing-axis-of-plots"]], "Plugins": [[332, "plugins"]], "Overview of a plugin": [[332, "overview-of-a-plugin"]], "PKPD": [[330, "pkpd"]], "Resmod": [[334, "resmod"]], "The resmod results": [[334, "the-resmod-results"]], "Resmod models": [[334, "resmod-models"]], "Simeval": [[340, "simeval"]], "The simeval results": [[340, "the-simeval-results"]], "Sampled Individual OFVs": [[340, "sampled-individual-ofvs"]], "Individual OFV summary": [[340, "individual-ofv-summary"]], "Individual prediction plot": [[340, "individual-prediction-plot"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[23, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[24, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[25, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.subs"]], "symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.symbols"]], "to_dict() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.variance_parameters"]], "simulationstep (class in pharmpy.model)": [[26, "pharmpy.model.SimulationStep"]], "create() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.create"]], "from_dict() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.from_dict"]], "n (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.n"]], "replace() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.replace"]], "seed (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.seed"]], "to_dict() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.to_dict"]], "statement (class in pharmpy.model)": [[27, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[27, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[28, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[28, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[29, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[31, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[32, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_bioavailability"]], "add_cmt() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_cmt"]], "add_covariate_effect() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.append_estimation_step_options"]], "bin_observations() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.bin_observations"]], "bump_model_number() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_covariate_baselines"]], "get_covariates() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_covariates"]], "get_doseid() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.omit_data"]], "plot_abs_cwres_vs_ipred() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.plot_abs_cwres_vs_ipred"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_dv_vs_pred() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.plot_dv_vs_pred"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.rename_symbols"]], "replace_non_random_rvs() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.replace_non_random_rvs"]], "resample_data() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_additive_error_model"]], "set_baseline_effect() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_baseline_effect"]], "set_combined_error_model() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_simulation() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_simulation"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[237, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[238, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[239, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[240, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[241, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[242, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[243, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[244, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[245, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[246, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[247, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[248, "pharmpy.tools.get_model_features"]], "is_strictness_fulfilled() (in module pharmpy.tools)": [[249, "pharmpy.tools.is_strictness_fulfilled"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[250, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[251, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[252, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[253, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[254, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[255, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[256, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[257, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[258, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[259, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[260, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[261, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[262, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[263, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[264, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[265, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[266, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[267, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[268, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[269, "pharmpy.tools.run_modelsearch"]], "run_retries() (in module pharmpy.tools)": [[270, "pharmpy.tools.run_retries"]], "run_ruvsearch() (in module pharmpy.tools)": [[271, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[272, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[273, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[274, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[275, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[276, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[277, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[278, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[279, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[279, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[280, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[281, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[281, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[281, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[281, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[282, "pharmpy.workflows.Log"]], "errors (pharmpy.workflows.log attribute)": [[282, "pharmpy.workflows.Log.errors"]], "from_dict() (pharmpy.workflows.log class method)": [[282, "pharmpy.workflows.Log.from_dict"]], "log_error() (pharmpy.workflows.log method)": [[282, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[282, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[282, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[282, "pharmpy.workflows.Log.to_dict"]], "warnings (pharmpy.workflows.log attribute)": [[282, "pharmpy.workflows.Log.warnings"]], "modeldatabase (class in pharmpy.workflows)": [[283, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[283, "pharmpy.workflows.ModelDatabase.transaction"]], "modelentry (class in pharmpy.workflows)": [[284, "pharmpy.workflows.ModelEntry"]], "attach_results() (pharmpy.workflows.modelentry method)": [[284, "pharmpy.workflows.ModelEntry.attach_results"]], "create() (pharmpy.workflows.modelentry class method)": [[284, "pharmpy.workflows.ModelEntry.create"]], "log (pharmpy.workflows.modelentry attribute)": [[284, "pharmpy.workflows.ModelEntry.log"]], "model (pharmpy.workflows.modelentry attribute)": [[284, "pharmpy.workflows.ModelEntry.model"]], "modelfit_results (pharmpy.workflows.modelentry attribute)": [[284, "pharmpy.workflows.ModelEntry.modelfit_results"]], "parent (pharmpy.workflows.modelentry attribute)": [[284, "pharmpy.workflows.ModelEntry.parent"]], "modelfitresults (class in pharmpy.workflows)": [[285, "pharmpy.workflows.ModelfitResults"]], "correlation_matrix (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.correlation_matrix"]], "covariance_matrix (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.covariance_matrix"]], "covstep_successful (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.covstep_successful"]], "description (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.description"]], "estimation_runtime (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.estimation_runtime"]], "estimation_runtime_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.estimation_runtime_iterations"]], "evaluation (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.evaluation"]], "function_evaluations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.function_evaluations"]], "function_evaluations_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.function_evaluations_iterations"]], "gradients (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.gradients"]], "gradients_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.gradients_iterations"]], "individual_estimates (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.individual_estimates"]], "individual_estimates_covariance (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.individual_estimates_covariance"]], "individual_ofv (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.individual_ofv"]], "log (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.log"]], "log_likelihood (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.log_likelihood"]], "minimization_successful (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.minimization_successful"]], "minimization_successful_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.minimization_successful_iterations"]], "name (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.name"]], "ofv (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.ofv"]], "ofv_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.ofv_iterations"]], "parameter_estimates (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.parameter_estimates"]], "parameter_estimates_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.parameter_estimates_iterations"]], "parameter_estimates_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.parameter_estimates_sdcorr"]], "precision_matrix (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.precision_matrix"]], "predictions (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.predictions"]], "relative_standard_errors (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.relative_standard_errors"]], "residuals (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.residuals"]], "runtime_total (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.runtime_total"]], "significant_digits (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.significant_digits"]], "significant_digits_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.significant_digits_iterations"]], "standard_errors (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.standard_errors"]], "standard_errors_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.standard_errors_sdcorr"]], "termination_cause (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.termination_cause"]], "termination_cause_iterations (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.termination_cause_iterations"]], "warnings (pharmpy.workflows.modelfitresults attribute)": [[285, "pharmpy.workflows.ModelfitResults.warnings"]], "nullmodeldatabase (class in pharmpy.workflows)": [[286, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[286, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[287, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[287, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[287, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[287, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[287, "pharmpy.workflows.NullToolDatabase.store_results"]], "results (class in pharmpy.workflows)": [[288, "pharmpy.workflows.Results"]], "from_dict() (pharmpy.workflows.results class method)": [[288, "pharmpy.workflows.Results.from_dict"]], "get_and_reset_index() (pharmpy.workflows.results method)": [[288, "pharmpy.workflows.Results.get_and_reset_index"]], "to_csv() (pharmpy.workflows.results method)": [[288, "pharmpy.workflows.Results.to_csv"]], "to_dict() (pharmpy.workflows.results method)": [[288, "pharmpy.workflows.Results.to_dict"]], "to_json() (pharmpy.workflows.results method)": [[288, "pharmpy.workflows.Results.to_json"]], "task (class in pharmpy.workflows)": [[289, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[289, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[289, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[289, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[289, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[289, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[290, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[290, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[290, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[290, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[290, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[290, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[290, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[291, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[291, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[291, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[291, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[291, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[291, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[292, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[292, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[292, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[292, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[293, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[294, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[295, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[296, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[297, "pharmpy.workflows.split_common_options"]], "module": [[298, "module-pharmpy.model"], [299, "module-pharmpy.modeling"], [300, "module-pharmpy.tools"], [301, "module-pharmpy.workflows"]], "pharmpy.model": [[298, "module-pharmpy.model"]], "pharmpy.modeling": [[299, "module-pharmpy.modeling"]], "pharmpy.tools": [[300, "module-pharmpy.tools"]], "pharmpy.workflows": [[301, "module-pharmpy.workflows"]], "--administration": [[306, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[306, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[306, "cmdoption-pharmpy-run-allometry-allometric_variable"], [306, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[306, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[306, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[306, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[306, "cmdoption-pharmpy-run-iivsearch-cutoff"], [306, "cmdoption-pharmpy-run-iovsearch-cutoff"], [306, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[306, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[306, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[306, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[306, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [306, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[306, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[306, "cmdoption-pharmpy-model-add_iov-eta_names"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[306, "cmdoption-pharmpy-model-add_iov-etas"], [306, "cmdoption-pharmpy-model-boxcox-etas"], [306, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [306, "cmdoption-pharmpy-model-john_draper-etas"], [306, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[306, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[306, "cmdoption-pharmpy-data-append-f"], [306, "cmdoption-pharmpy-data-deidentify-f"], [306, "cmdoption-pharmpy-data-filter-f"], [306, "cmdoption-pharmpy-data-reference-f"], [306, "cmdoption-pharmpy-data-write-f"], [306, "cmdoption-pharmpy-model-absorption_rate-f"], [306, "cmdoption-pharmpy-model-add_cov_effect-f"], [306, "cmdoption-pharmpy-model-add_iiv-f"], [306, "cmdoption-pharmpy-model-add_iov-f"], [306, "cmdoption-pharmpy-model-boxcox-f"], [306, "cmdoption-pharmpy-model-create_joint_distribution-f"], [306, "cmdoption-pharmpy-model-elimination_rate-f"], [306, "cmdoption-pharmpy-model-error-f"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [306, "cmdoption-pharmpy-model-john_draper-f"], [306, "cmdoption-pharmpy-model-peripheral_compartments-f"], [306, "cmdoption-pharmpy-model-power_on_ruv-f"], [306, "cmdoption-pharmpy-model-remove_iiv-f"], [306, "cmdoption-pharmpy-model-remove_iov-f"], [306, "cmdoption-pharmpy-model-tdist-f"], [306, "cmdoption-pharmpy-model-transit_compartments-f"], [306, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[306, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[306, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[306, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[306, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[306, "cmdoption-pharmpy-data-append-h"], [306, "cmdoption-pharmpy-data-deidentify-h"], [306, "cmdoption-pharmpy-data-filter-h"], [306, "cmdoption-pharmpy-data-h"], [306, "cmdoption-pharmpy-data-print-h"], [306, "cmdoption-pharmpy-data-reference-h"], [306, "cmdoption-pharmpy-data-resample-h"], [306, "cmdoption-pharmpy-data-write-h"], [306, "cmdoption-pharmpy-h"], [306, "cmdoption-pharmpy-info-h"], [306, "cmdoption-pharmpy-model-absorption_rate-h"], [306, "cmdoption-pharmpy-model-add_cov_effect-h"], [306, "cmdoption-pharmpy-model-add_iiv-h"], [306, "cmdoption-pharmpy-model-add_iov-h"], [306, "cmdoption-pharmpy-model-boxcox-h"], [306, "cmdoption-pharmpy-model-create_joint_distribution-h"], [306, "cmdoption-pharmpy-model-elimination_rate-h"], [306, "cmdoption-pharmpy-model-error-h"], [306, "cmdoption-pharmpy-model-h"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [306, "cmdoption-pharmpy-model-john_draper-h"], [306, "cmdoption-pharmpy-model-peripheral_compartments-h"], [306, "cmdoption-pharmpy-model-power_on_ruv-h"], [306, "cmdoption-pharmpy-model-print-h"], [306, "cmdoption-pharmpy-model-remove_iiv-h"], [306, "cmdoption-pharmpy-model-remove_iov-h"], [306, "cmdoption-pharmpy-model-sample-h"], [306, "cmdoption-pharmpy-model-tdist-h"], [306, "cmdoption-pharmpy-model-transit_compartments-h"], [306, "cmdoption-pharmpy-model-update_inits-h"], [306, "cmdoption-pharmpy-results-bootstrap-h"], [306, "cmdoption-pharmpy-results-cdd-h"], [306, "cmdoption-pharmpy-results-frem-h"], [306, "cmdoption-pharmpy-results-h"], [306, "cmdoption-pharmpy-results-linearize-h"], [306, "cmdoption-pharmpy-results-ofv-h"], [306, "cmdoption-pharmpy-results-print-h"], [306, "cmdoption-pharmpy-results-qa-h"], [306, "cmdoption-pharmpy-results-report-h"], [306, "cmdoption-pharmpy-results-ruvsearch-h"], [306, "cmdoption-pharmpy-results-scm-h"], [306, "cmdoption-pharmpy-results-simeval-h"], [306, "cmdoption-pharmpy-results-summary-h"], [306, "cmdoption-pharmpy-run-allometry-h"], [306, "cmdoption-pharmpy-run-amd-h"], [306, "cmdoption-pharmpy-run-bootstrap-h"], [306, "cmdoption-pharmpy-run-covsearch-h"], [306, "cmdoption-pharmpy-run-estmethod-h"], [306, "cmdoption-pharmpy-run-execute-h"], [306, "cmdoption-pharmpy-run-h"], [306, "cmdoption-pharmpy-run-iivsearch-h"], [306, "cmdoption-pharmpy-run-iovsearch-h"], [306, "cmdoption-pharmpy-run-modelsearch-h"], [306, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[306, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[306, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [306, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[306, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[306, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[306, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[306, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[306, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[306, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[306, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[306, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[306, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[306, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[306, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[306, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[306, "cmdoption-pharmpy-model-add_cov_effect-operation"], [306, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[306, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[306, "cmdoption-pharmpy-data-append-o"], [306, "cmdoption-pharmpy-data-deidentify-o"], [306, "cmdoption-pharmpy-data-filter-o"], [306, "cmdoption-pharmpy-data-reference-o"], [306, "cmdoption-pharmpy-data-write-o"], [306, "cmdoption-pharmpy-model-absorption_rate-o"], [306, "cmdoption-pharmpy-model-add_cov_effect-o"], [306, "cmdoption-pharmpy-model-add_iiv-o"], [306, "cmdoption-pharmpy-model-add_iov-o"], [306, "cmdoption-pharmpy-model-boxcox-o"], [306, "cmdoption-pharmpy-model-create_joint_distribution-o"], [306, "cmdoption-pharmpy-model-elimination_rate-o"], [306, "cmdoption-pharmpy-model-error-o"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [306, "cmdoption-pharmpy-model-john_draper-o"], [306, "cmdoption-pharmpy-model-peripheral_compartments-o"], [306, "cmdoption-pharmpy-model-power_on_ruv-o"], [306, "cmdoption-pharmpy-model-remove_iiv-o"], [306, "cmdoption-pharmpy-model-remove_iov-o"], [306, "cmdoption-pharmpy-model-tdist-o"], [306, "cmdoption-pharmpy-model-transit_compartments-o"], [306, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[306, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[306, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[306, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[306, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[306, "cmdoption-pharmpy-run-allometry-path"], [306, "cmdoption-pharmpy-run-amd-path"], [306, "cmdoption-pharmpy-run-covsearch-path"], [306, "cmdoption-pharmpy-run-estmethod-path"], [306, "cmdoption-pharmpy-run-iivsearch-path"], [306, "cmdoption-pharmpy-run-iovsearch-path"], [306, "cmdoption-pharmpy-run-modelsearch-path"], [306, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[306, "cmdoption-pharmpy-run-iivsearch-rank_type"], [306, "cmdoption-pharmpy-run-iovsearch-rank_type"], [306, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[306, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[306, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[306, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[306, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[306, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[306, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[306, "cmdoption-pharmpy-model-sample-samples"], [306, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[306, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[306, "cmdoption-pharmpy-data-resample-seed"], [306, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[306, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[306, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[306, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[306, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[306, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[306, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[306, "cmdoption-pharmpy-version"]], "-f": [[306, "cmdoption-pharmpy-data-append-f"], [306, "cmdoption-pharmpy-data-deidentify-f"], [306, "cmdoption-pharmpy-data-filter-f"], [306, "cmdoption-pharmpy-data-reference-f"], [306, "cmdoption-pharmpy-data-write-f"], [306, "cmdoption-pharmpy-model-absorption_rate-f"], [306, "cmdoption-pharmpy-model-add_cov_effect-f"], [306, "cmdoption-pharmpy-model-add_iiv-f"], [306, "cmdoption-pharmpy-model-add_iov-f"], [306, "cmdoption-pharmpy-model-boxcox-f"], [306, "cmdoption-pharmpy-model-create_joint_distribution-f"], [306, "cmdoption-pharmpy-model-elimination_rate-f"], [306, "cmdoption-pharmpy-model-error-f"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [306, "cmdoption-pharmpy-model-john_draper-f"], [306, "cmdoption-pharmpy-model-peripheral_compartments-f"], [306, "cmdoption-pharmpy-model-power_on_ruv-f"], [306, "cmdoption-pharmpy-model-remove_iiv-f"], [306, "cmdoption-pharmpy-model-remove_iov-f"], [306, "cmdoption-pharmpy-model-tdist-f"], [306, "cmdoption-pharmpy-model-transit_compartments-f"], [306, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[306, "cmdoption-pharmpy-data-append-h"], [306, "cmdoption-pharmpy-data-deidentify-h"], [306, "cmdoption-pharmpy-data-filter-h"], [306, "cmdoption-pharmpy-data-h"], [306, "cmdoption-pharmpy-data-print-h"], [306, "cmdoption-pharmpy-data-reference-h"], [306, "cmdoption-pharmpy-data-resample-h"], [306, "cmdoption-pharmpy-data-write-h"], [306, "cmdoption-pharmpy-h"], [306, "cmdoption-pharmpy-info-h"], [306, "cmdoption-pharmpy-model-absorption_rate-h"], [306, "cmdoption-pharmpy-model-add_cov_effect-h"], [306, "cmdoption-pharmpy-model-add_iiv-h"], [306, "cmdoption-pharmpy-model-add_iov-h"], [306, "cmdoption-pharmpy-model-boxcox-h"], [306, "cmdoption-pharmpy-model-create_joint_distribution-h"], [306, "cmdoption-pharmpy-model-elimination_rate-h"], [306, "cmdoption-pharmpy-model-error-h"], [306, "cmdoption-pharmpy-model-h"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [306, "cmdoption-pharmpy-model-john_draper-h"], [306, "cmdoption-pharmpy-model-peripheral_compartments-h"], [306, "cmdoption-pharmpy-model-power_on_ruv-h"], [306, "cmdoption-pharmpy-model-print-h"], [306, "cmdoption-pharmpy-model-remove_iiv-h"], [306, "cmdoption-pharmpy-model-remove_iov-h"], [306, "cmdoption-pharmpy-model-sample-h"], [306, "cmdoption-pharmpy-model-tdist-h"], [306, "cmdoption-pharmpy-model-transit_compartments-h"], [306, "cmdoption-pharmpy-model-update_inits-h"], [306, "cmdoption-pharmpy-results-bootstrap-h"], [306, "cmdoption-pharmpy-results-cdd-h"], [306, "cmdoption-pharmpy-results-frem-h"], [306, "cmdoption-pharmpy-results-h"], [306, "cmdoption-pharmpy-results-linearize-h"], [306, "cmdoption-pharmpy-results-ofv-h"], [306, "cmdoption-pharmpy-results-print-h"], [306, "cmdoption-pharmpy-results-qa-h"], [306, "cmdoption-pharmpy-results-report-h"], [306, "cmdoption-pharmpy-results-ruvsearch-h"], [306, "cmdoption-pharmpy-results-scm-h"], [306, "cmdoption-pharmpy-results-simeval-h"], [306, "cmdoption-pharmpy-results-summary-h"], [306, "cmdoption-pharmpy-run-allometry-h"], [306, "cmdoption-pharmpy-run-amd-h"], [306, "cmdoption-pharmpy-run-bootstrap-h"], [306, "cmdoption-pharmpy-run-covsearch-h"], [306, "cmdoption-pharmpy-run-estmethod-h"], [306, "cmdoption-pharmpy-run-execute-h"], [306, "cmdoption-pharmpy-run-h"], [306, "cmdoption-pharmpy-run-iivsearch-h"], [306, "cmdoption-pharmpy-run-iovsearch-h"], [306, "cmdoption-pharmpy-run-modelsearch-h"], [306, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[306, "cmdoption-pharmpy-data-append-o"], [306, "cmdoption-pharmpy-data-deidentify-o"], [306, "cmdoption-pharmpy-data-filter-o"], [306, "cmdoption-pharmpy-data-reference-o"], [306, "cmdoption-pharmpy-data-write-o"], [306, "cmdoption-pharmpy-model-absorption_rate-o"], [306, "cmdoption-pharmpy-model-add_cov_effect-o"], [306, "cmdoption-pharmpy-model-add_iiv-o"], [306, "cmdoption-pharmpy-model-add_iov-o"], [306, "cmdoption-pharmpy-model-boxcox-o"], [306, "cmdoption-pharmpy-model-create_joint_distribution-o"], [306, "cmdoption-pharmpy-model-elimination_rate-o"], [306, "cmdoption-pharmpy-model-error-o"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [306, "cmdoption-pharmpy-model-john_draper-o"], [306, "cmdoption-pharmpy-model-peripheral_compartments-o"], [306, "cmdoption-pharmpy-model-power_on_ruv-o"], [306, "cmdoption-pharmpy-model-remove_iiv-o"], [306, "cmdoption-pharmpy-model-remove_iov-o"], [306, "cmdoption-pharmpy-model-tdist-o"], [306, "cmdoption-pharmpy-model-transit_compartments-o"], [306, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[306, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [306, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [306, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[306, "cmdoption-pharmpy-data-reference-arg-colname"]], "covariate": [[306, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[306, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[306, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[306, "cmdoption-pharmpy-data-append-arg-expression"], [306, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[306, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[306, "cmdoption-pharmpy-data-append-arg-file"], [306, "cmdoption-pharmpy-data-deidentify-arg-file"], [306, "cmdoption-pharmpy-data-filter-arg-file"], [306, "cmdoption-pharmpy-data-print-arg-file"], [306, "cmdoption-pharmpy-data-reference-arg-file"], [306, "cmdoption-pharmpy-data-resample-arg-file"], [306, "cmdoption-pharmpy-data-write-arg-file"], [306, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [306, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [306, "cmdoption-pharmpy-model-add_iiv-arg-file"], [306, "cmdoption-pharmpy-model-add_iov-arg-file"], [306, "cmdoption-pharmpy-model-boxcox-arg-file"], [306, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [306, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [306, "cmdoption-pharmpy-model-error-arg-file"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [306, "cmdoption-pharmpy-model-john_draper-arg-file"], [306, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [306, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [306, "cmdoption-pharmpy-model-print-arg-file"], [306, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [306, "cmdoption-pharmpy-model-remove_iov-arg-file"], [306, "cmdoption-pharmpy-model-sample-arg-file"], [306, "cmdoption-pharmpy-model-tdist-arg-file"], [306, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [306, "cmdoption-pharmpy-model-update_inits-arg-file"], [306, "cmdoption-pharmpy-results-ofv-arg-file"], [306, "cmdoption-pharmpy-results-print-arg-file"], [306, "cmdoption-pharmpy-results-summary-arg-file"], [306, "cmdoption-pharmpy-run-allometry-arg-file"], [306, "cmdoption-pharmpy-run-bootstrap-arg-file"], [306, "cmdoption-pharmpy-run-covsearch-arg-file"], [306, "cmdoption-pharmpy-run-estmethod-arg-file"], [306, "cmdoption-pharmpy-run-execute-arg-file"], [306, "cmdoption-pharmpy-run-iivsearch-arg-file"], [306, "cmdoption-pharmpy-run-iovsearch-arg-file"], [306, "cmdoption-pharmpy-run-modelsearch-arg-file"], [306, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[306, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[306, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[306, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [306, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[306, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[306, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [306, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[306, "cmdoption-pharmpy-h"], [306, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[306, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[306, "cmdoption-pharmpy-data-append-arg-expression"], [306, "cmdoption-pharmpy-data-append-arg-file"], [306, "cmdoption-pharmpy-data-append-f"], [306, "cmdoption-pharmpy-data-append-h"], [306, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[306, "cmdoption-pharmpy-data-deidentify-arg-file"], [306, "cmdoption-pharmpy-data-deidentify-datecols"], [306, "cmdoption-pharmpy-data-deidentify-f"], [306, "cmdoption-pharmpy-data-deidentify-h"], [306, "cmdoption-pharmpy-data-deidentify-idcol"], [306, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[306, "cmdoption-pharmpy-data-filter-arg-expressions"], [306, "cmdoption-pharmpy-data-filter-arg-file"], [306, "cmdoption-pharmpy-data-filter-f"], [306, "cmdoption-pharmpy-data-filter-h"], [306, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[306, "cmdoption-pharmpy-data-print-arg-file"], [306, "cmdoption-pharmpy-data-print-columns"], [306, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[306, "cmdoption-pharmpy-data-reference-arg-colname"], [306, "cmdoption-pharmpy-data-reference-arg-file"], [306, "cmdoption-pharmpy-data-reference-f"], [306, "cmdoption-pharmpy-data-reference-h"], [306, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[306, "cmdoption-pharmpy-data-resample-arg-file"], [306, "cmdoption-pharmpy-data-resample-group"], [306, "cmdoption-pharmpy-data-resample-h"], [306, "cmdoption-pharmpy-data-resample-replace"], [306, "cmdoption-pharmpy-data-resample-resamples"], [306, "cmdoption-pharmpy-data-resample-sample_size"], [306, "cmdoption-pharmpy-data-resample-seed"], [306, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[306, "cmdoption-pharmpy-data-write-arg-file"], [306, "cmdoption-pharmpy-data-write-f"], [306, "cmdoption-pharmpy-data-write-h"], [306, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[306, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[306, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[306, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [306, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [306, "cmdoption-pharmpy-model-absorption_rate-f"], [306, "cmdoption-pharmpy-model-absorption_rate-h"], [306, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[306, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [306, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [306, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [306, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [306, "cmdoption-pharmpy-model-add_cov_effect-f"], [306, "cmdoption-pharmpy-model-add_cov_effect-h"], [306, "cmdoption-pharmpy-model-add_cov_effect-o"], [306, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[306, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [306, "cmdoption-pharmpy-model-add_iiv-arg-file"], [306, "cmdoption-pharmpy-model-add_iiv-arg-param"], [306, "cmdoption-pharmpy-model-add_iiv-eta_name"], [306, "cmdoption-pharmpy-model-add_iiv-f"], [306, "cmdoption-pharmpy-model-add_iiv-h"], [306, "cmdoption-pharmpy-model-add_iiv-o"], [306, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[306, "cmdoption-pharmpy-model-add_iov-arg-file"], [306, "cmdoption-pharmpy-model-add_iov-arg-occ"], [306, "cmdoption-pharmpy-model-add_iov-eta_names"], [306, "cmdoption-pharmpy-model-add_iov-etas"], [306, "cmdoption-pharmpy-model-add_iov-f"], [306, "cmdoption-pharmpy-model-add_iov-h"], [306, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[306, "cmdoption-pharmpy-model-boxcox-arg-file"], [306, "cmdoption-pharmpy-model-boxcox-etas"], [306, "cmdoption-pharmpy-model-boxcox-f"], [306, "cmdoption-pharmpy-model-boxcox-h"], [306, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[306, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [306, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [306, "cmdoption-pharmpy-model-create_joint_distribution-f"], [306, "cmdoption-pharmpy-model-create_joint_distribution-h"], [306, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[306, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [306, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [306, "cmdoption-pharmpy-model-elimination_rate-f"], [306, "cmdoption-pharmpy-model-elimination_rate-h"], [306, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[306, "cmdoption-pharmpy-model-error-arg-error_type"], [306, "cmdoption-pharmpy-model-error-arg-file"], [306, "cmdoption-pharmpy-model-error-f"], [306, "cmdoption-pharmpy-model-error-h"], [306, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[306, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [306, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[306, "cmdoption-pharmpy-model-john_draper-arg-file"], [306, "cmdoption-pharmpy-model-john_draper-etas"], [306, "cmdoption-pharmpy-model-john_draper-f"], [306, "cmdoption-pharmpy-model-john_draper-h"], [306, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[306, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [306, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [306, "cmdoption-pharmpy-model-peripheral_compartments-f"], [306, "cmdoption-pharmpy-model-peripheral_compartments-h"], [306, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[306, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [306, "cmdoption-pharmpy-model-power_on_ruv-eps"], [306, "cmdoption-pharmpy-model-power_on_ruv-f"], [306, "cmdoption-pharmpy-model-power_on_ruv-h"], [306, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[306, "cmdoption-pharmpy-model-print-arg-file"], [306, "cmdoption-pharmpy-model-print-explicit-odes"], [306, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[306, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [306, "cmdoption-pharmpy-model-remove_iiv-f"], [306, "cmdoption-pharmpy-model-remove_iiv-h"], [306, "cmdoption-pharmpy-model-remove_iiv-o"], [306, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[306, "cmdoption-pharmpy-model-remove_iov-arg-file"], [306, "cmdoption-pharmpy-model-remove_iov-f"], [306, "cmdoption-pharmpy-model-remove_iov-h"], [306, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[306, "cmdoption-pharmpy-model-sample-arg-file"], [306, "cmdoption-pharmpy-model-sample-h"], [306, "cmdoption-pharmpy-model-sample-samples"], [306, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[306, "cmdoption-pharmpy-model-tdist-arg-file"], [306, "cmdoption-pharmpy-model-tdist-etas"], [306, "cmdoption-pharmpy-model-tdist-f"], [306, "cmdoption-pharmpy-model-tdist-h"], [306, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[306, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [306, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [306, "cmdoption-pharmpy-model-transit_compartments-f"], [306, "cmdoption-pharmpy-model-transit_compartments-h"], [306, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[306, "cmdoption-pharmpy-model-update_inits-arg-file"], [306, "cmdoption-pharmpy-model-update_inits-f"], [306, "cmdoption-pharmpy-model-update_inits-h"], [306, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[306, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[306, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [306, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[306, "cmdoption-pharmpy-results-cdd-arg-psn"], [306, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[306, "cmdoption-pharmpy-results-frem-arg-psn"], [306, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [306, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [306, "cmdoption-pharmpy-results-frem-h"], [306, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[306, "cmdoption-pharmpy-results-linearize-arg-psn"], [306, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[306, "cmdoption-pharmpy-results-ofv-arg-file"], [306, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[306, "cmdoption-pharmpy-results-print-arg-file"], [306, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[306, "cmdoption-pharmpy-results-qa-arg-psn"], [306, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[306, "cmdoption-pharmpy-results-report-arg-psn"], [306, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[306, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [306, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[306, "cmdoption-pharmpy-results-scm-arg-psn"], [306, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[306, "cmdoption-pharmpy-results-simeval-arg-psn"], [306, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[306, "cmdoption-pharmpy-results-summary-arg-file"], [306, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[306, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[306, "cmdoption-pharmpy-run-allometry-allometric_variable"], [306, "cmdoption-pharmpy-run-allometry-arg-file"], [306, "cmdoption-pharmpy-run-allometry-h"], [306, "cmdoption-pharmpy-run-allometry-initials"], [306, "cmdoption-pharmpy-run-allometry-lower_bounds"], [306, "cmdoption-pharmpy-run-allometry-non_fixed"], [306, "cmdoption-pharmpy-run-allometry-parameters"], [306, "cmdoption-pharmpy-run-allometry-path"], [306, "cmdoption-pharmpy-run-allometry-reference_value"], [306, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[306, "cmdoption-pharmpy-run-amd-administration"], [306, "cmdoption-pharmpy-run-amd-allometric_variable"], [306, "cmdoption-pharmpy-run-amd-arg-input_path"], [306, "cmdoption-pharmpy-run-amd-cl_init"], [306, "cmdoption-pharmpy-run-amd-h"], [306, "cmdoption-pharmpy-run-amd-lloq_limit"], [306, "cmdoption-pharmpy-run-amd-lloq_method"], [306, "cmdoption-pharmpy-run-amd-mat_init"], [306, "cmdoption-pharmpy-run-amd-modeltype"], [306, "cmdoption-pharmpy-run-amd-occasion"], [306, "cmdoption-pharmpy-run-amd-order"], [306, "cmdoption-pharmpy-run-amd-path"], [306, "cmdoption-pharmpy-run-amd-resume"], [306, "cmdoption-pharmpy-run-amd-search_space"], [306, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[306, "cmdoption-pharmpy-run-bootstrap-arg-file"], [306, "cmdoption-pharmpy-run-bootstrap-h"], [306, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[306, "cmdoption-pharmpy-run-covsearch-algorithm"], [306, "cmdoption-pharmpy-run-covsearch-arg-file"], [306, "cmdoption-pharmpy-run-covsearch-effects"], [306, "cmdoption-pharmpy-run-covsearch-h"], [306, "cmdoption-pharmpy-run-covsearch-max_steps"], [306, "cmdoption-pharmpy-run-covsearch-p_backward"], [306, "cmdoption-pharmpy-run-covsearch-p_forward"], [306, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[306, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [306, "cmdoption-pharmpy-run-estmethod-arg-file"], [306, "cmdoption-pharmpy-run-estmethod-h"], [306, "cmdoption-pharmpy-run-estmethod-methods"], [306, "cmdoption-pharmpy-run-estmethod-path"], [306, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[306, "cmdoption-pharmpy-run-execute-arg-file"], [306, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[306, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [306, "cmdoption-pharmpy-run-iivsearch-arg-file"], [306, "cmdoption-pharmpy-run-iivsearch-cutoff"], [306, "cmdoption-pharmpy-run-iivsearch-h"], [306, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [306, "cmdoption-pharmpy-run-iivsearch-path"], [306, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[306, "cmdoption-pharmpy-run-iovsearch-arg-file"], [306, "cmdoption-pharmpy-run-iovsearch-column"], [306, "cmdoption-pharmpy-run-iovsearch-cutoff"], [306, "cmdoption-pharmpy-run-iovsearch-distribution"], [306, "cmdoption-pharmpy-run-iovsearch-h"], [306, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [306, "cmdoption-pharmpy-run-iovsearch-path"], [306, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[306, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [306, "cmdoption-pharmpy-run-modelsearch-arg-file"], [306, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [306, "cmdoption-pharmpy-run-modelsearch-cutoff"], [306, "cmdoption-pharmpy-run-modelsearch-h"], [306, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [306, "cmdoption-pharmpy-run-modelsearch-path"], [306, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[306, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [306, "cmdoption-pharmpy-run-ruvsearch-groups"], [306, "cmdoption-pharmpy-run-ruvsearch-h"], [306, "cmdoption-pharmpy-run-ruvsearch-p_value"], [306, "cmdoption-pharmpy-run-ruvsearch-path"], [306, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[306, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [306, "cmdoption-pharmpy-results-cdd-arg-psn"], [306, "cmdoption-pharmpy-results-frem-arg-psn"], [306, "cmdoption-pharmpy-results-linearize-arg-psn"], [306, "cmdoption-pharmpy-results-qa-arg-psn"], [306, "cmdoption-pharmpy-results-report-arg-psn"], [306, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [306, "cmdoption-pharmpy-results-scm-arg-psn"], [306, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[306, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [306, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})