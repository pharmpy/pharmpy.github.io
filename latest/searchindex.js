Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_cmt", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.ModelEntry", "api/pharmpy.workflows.ModelfitResults", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Results", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "structsearch", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_cmt.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.ModelEntry.rst", "api/pharmpy.workflows.ModelfitResults.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Results.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "structsearch.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_cmt", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "ModelEntry", "ModelfitResults", "NullModelDatabase", "NullToolDatabase", "Results", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Structsearch", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 23, 24, 25, 27, 29, 34, 58, 59, 73, 78, 82, 83, 84, 85, 87, 88, 89, 90, 97, 100, 107, 110, 116, 117, 118, 121, 127, 131, 138, 142, 143, 151, 172, 186, 187, 208, 220, 222, 226, 233, 259, 265, 269, 273, 275, 276, 277, 293, 294, 296, 297, 298, 299, 301, 303, 304, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 324, 325, 326, 328, 329, 330, 331], "section": [0, 298, 301, 312, 314, 324, 329], "i": [0, 1, 2, 6, 8, 9, 14, 18, 23, 24, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 41, 42, 43, 45, 46, 47, 51, 53, 60, 61, 70, 72, 73, 74, 77, 78, 80, 82, 84, 85, 87, 88, 89, 97, 98, 100, 103, 106, 107, 109, 111, 115, 116, 117, 118, 133, 134, 135, 140, 141, 146, 152, 153, 155, 158, 159, 174, 175, 179, 182, 183, 184, 186, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 207, 208, 210, 211, 213, 216, 217, 218, 221, 222, 223, 224, 225, 231, 233, 235, 236, 240, 242, 244, 246, 252, 253, 257, 258, 259, 260, 261, 262, 267, 269, 273, 274, 276, 277, 278, 283, 292, 293, 294, 296, 297, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 331], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 244, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 309, 312, 316, 320, 321, 325, 329], "The": [0, 2, 3, 6, 8, 9, 10, 14, 18, 23, 24, 25, 27, 32, 35, 39, 41, 43, 46, 61, 69, 77, 80, 84, 85, 86, 87, 88, 89, 109, 126, 131, 134, 135, 146, 147, 149, 167, 182, 186, 187, 197, 200, 208, 218, 222, 237, 240, 249, 255, 256, 261, 262, 265, 275, 294, 297, 299, 300, 301, 303, 308, 311, 312, 315, 316, 318, 320, 321, 329, 330, 331], "inform": [0, 1, 2, 6, 8, 131, 222, 294, 296, 301, 303, 304, 306, 309, 310, 311, 312, 314, 317, 321, 325, 326, 328, 329, 330], "intend": [0, 312, 314, 329], "non": [0, 24, 72, 77, 86, 100, 221, 294, 303, 304, 307, 312, 314, 316, 321, 329], "hard": [0, 321], "find": [0, 8, 27, 51, 92, 93, 109, 131, 251, 267, 294, 310, 312, 328, 330, 331], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 27, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 278, 299, 301, 303, 306, 308, 309, 311, 312, 314, 315, 316, 317, 325, 328], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 300, 301, 302, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 321, 322, 324, 325, 326, 327, 328, 330], "develop": [0, 253, 294, 312, 320, 321, 329, 331], "remov": [0, 2, 9, 25, 27, 82, 116, 117, 118, 155, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 197, 201, 214, 227, 229, 231, 253, 293, 294, 296, 301, 304, 309, 311, 312, 318], "row": [0, 1, 2, 24, 84, 85, 91, 98, 101, 103, 155, 183, 184, 209, 222, 266, 292, 294, 296, 301, 303, 307, 309, 311, 315, 316, 317, 325, 326, 328], "split": [0, 77, 221, 287, 294, 296, 314, 329], "drop": [0, 2, 6, 18, 82, 83, 228, 294, 321, 326], "column": [0, 1, 2, 6, 8, 10, 18, 24, 29, 31, 34, 41, 49, 61, 80, 82, 83, 84, 85, 86, 90, 97, 100, 101, 103, 107, 155, 159, 162, 166, 177, 182, 183, 188, 191, 200, 209, 211, 222, 226, 228, 242, 243, 244, 253, 258, 265, 266, 292, 294, 296, 301, 303, 307, 309, 311, 314, 315, 316, 317, 325, 326, 328, 329], "error": [0, 2, 11, 19, 20, 23, 25, 27, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 129, 134, 135, 146, 149, 165, 172, 186, 187, 207, 208, 211, 215, 222, 234, 246, 261, 264, 267, 272, 275, 292, 294, 301, 306, 309, 311, 317, 318, 325, 326, 328, 329], "handl": [0, 2, 3, 90, 220, 222, 294, 303, 304, 307, 321], "valid": [0, 25, 36, 39, 106, 189, 253, 294, 312], "some": [0, 2, 8, 10, 64, 77, 172, 186, 222, 271, 292, 294, 296, 299, 301, 303, 312, 313, 316, 317, 320, 321, 325, 328, 329], "rule": [0, 70, 312], "These": [0, 299, 304, 307, 312, 313, 316, 320, 321, 329], "were": [0, 25, 27, 264, 292, 293, 294, 303, 306, 307, 312, 315, 317, 329, 331], "test": [0, 2, 53, 136, 153, 255, 256, 258, 260, 261, 262, 294, 296, 300, 301, 306, 308, 309, 311, 315, 317, 321, 325, 328], "7": [0, 1, 2, 35, 54, 56, 57, 62, 66, 67, 85, 98, 103, 118, 122, 155, 209, 244, 292, 293, 301, 303, 307, 309, 311, 312, 313, 315, 316, 317, 322, 324, 325, 326, 327, 328], "4": [0, 1, 2, 6, 54, 56, 57, 62, 66, 67, 84, 85, 86, 87, 88, 89, 98, 101, 103, 104, 118, 155, 209, 225, 244, 261, 267, 292, 293, 301, 302, 303, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 322, 324, 325, 326, 327, 328], "3": [0, 1, 2, 6, 27, 54, 55, 56, 57, 62, 65, 66, 67, 68, 71, 84, 85, 86, 87, 88, 89, 98, 101, 103, 104, 105, 108, 118, 122, 155, 165, 179, 183, 184, 185, 209, 213, 222, 223, 224, 225, 242, 243, 244, 261, 266, 292, 293, 301, 302, 303, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 322, 324, 325, 326, 327, 328, 329, 331], "delimet": 0, "between": [0, 8, 9, 25, 31, 77, 97, 222, 265, 275, 283, 292, 293, 294, 296, 306, 307, 311, 312, 318, 321, 324, 325], "comma": [0, 296, 329], "space": [0, 69, 253, 260, 262, 294, 296, 329], "tab": [0, 165, 294, 316, 319], "befor": [0, 2, 27, 184, 185, 232, 294, 296, 313], "after": [0, 6, 27, 116, 117, 118, 211, 251, 264, 267, 271, 293, 294, 296, 302, 303, 307, 312, 313, 314, 317, 321, 322, 324, 326, 327, 331], "ar": [0, 2, 3, 4, 6, 7, 8, 14, 24, 25, 27, 36, 37, 38, 39, 41, 47, 61, 75, 77, 80, 100, 101, 115, 134, 135, 146, 156, 174, 175, 177, 180, 187, 189, 192, 193, 207, 212, 221, 222, 226, 233, 241, 246, 253, 255, 257, 259, 260, 269, 271, 274, 292, 294, 296, 297, 299, 301, 303, 304, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 328, 329, 331], "give": [0, 24, 109, 115, 158, 185, 207, 269, 273, 276, 292, 294, 296, 307, 311, 312, 314, 326], "sic": 0, "begin": [0, 307, 314, 316], "end": [0, 37, 51, 307, 312, 314, 316, 329], "insert": [0, 282, 294], "each": [0, 2, 6, 8, 25, 32, 34, 35, 60, 61, 62, 84, 85, 86, 87, 88, 89, 98, 103, 104, 118, 157, 162, 163, 177, 182, 185, 194, 196, 207, 209, 271, 275, 292, 293, 296, 298, 301, 303, 304, 306, 307, 309, 311, 312, 314, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 331], "can": [0, 1, 2, 6, 10, 18, 24, 25, 27, 33, 34, 39, 53, 61, 69, 78, 86, 131, 182, 220, 222, 240, 251, 256, 259, 271, 274, 276, 277, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 324, 325, 328, 329, 330, 331], "onli": [0, 2, 3, 8, 10, 14, 25, 35, 58, 59, 70, 73, 82, 84, 85, 87, 88, 89, 91, 106, 109, 110, 121, 127, 134, 135, 146, 157, 182, 186, 187, 194, 196, 207, 208, 209, 211, 220, 222, 232, 259, 261, 262, 267, 274, 283, 294, 296, 297, 301, 311, 312, 314, 317, 320, 328, 329], "numer": [0, 6, 14, 28, 84, 85, 87, 88, 292, 294, 303, 321], "e": [0, 6, 14, 18, 25, 36, 38, 53, 73, 79, 116, 117, 118, 158, 175, 189, 190, 260, 292, 294, 299, 303, 306, 307, 309, 311, 312, 314, 316, 317, 318, 321, 325, 328, 329], "other": [0, 7, 9, 18, 25, 27, 43, 74, 163, 259, 282, 287, 292, 294, 297, 299, 304, 309, 312, 321, 328], "charact": [0, 10, 303], "than": [0, 23, 24, 294, 309, 312, 317], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 25, 35, 246, 253, 269, 270, 273, 276, 286, 294, 296, 301, 312, 314, 317, 321, 329], "except": [0, 11, 12, 19, 20, 21, 38, 61, 182, 222, 294, 312], "ii": [0, 6], "datx": [0, 294], "fortran": 0, "short": [0, 299, 312], "form": [0, 25, 182, 294, 312], "exponenti": [0, 35, 38, 47, 196, 296, 301, 307], "notat": 0, "2": [0, 1, 2, 6, 18, 27, 32, 35, 37, 42, 46, 48, 50, 52, 53, 54, 55, 56, 57, 62, 65, 66, 67, 68, 72, 84, 85, 86, 87, 88, 89, 98, 101, 103, 104, 108, 118, 122, 155, 165, 179, 183, 184, 185, 186, 187, 194, 198, 202, 203, 206, 208, 209, 210, 213, 216, 222, 224, 225, 244, 252, 261, 265, 292, 293, 296, 299, 301, 302, 303, 306, 307, 309, 311, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329], "1": [0, 1, 2, 5, 6, 7, 8, 14, 16, 17, 18, 22, 24, 25, 27, 32, 33, 35, 36, 37, 38, 39, 43, 46, 48, 53, 54, 55, 56, 57, 62, 63, 65, 66, 67, 68, 73, 75, 80, 84, 85, 86, 87, 88, 89, 91, 98, 101, 103, 104, 105, 106, 108, 118, 122, 130, 133, 155, 156, 157, 158, 159, 165, 169, 179, 182, 183, 184, 185, 189, 193, 194, 195, 196, 199, 202, 203, 206, 207, 209, 210, 211, 213, 216, 217, 220, 222, 223, 224, 225, 233, 244, 252, 253, 254, 255, 260, 261, 262, 265, 292, 293, 296, 298, 299, 301, 302, 303, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 331], "mean": [0, 2, 13, 17, 18, 22, 61, 64, 75, 158, 183, 184, 253, 269, 273, 292, 293, 294, 296, 307, 309, 312, 314, 315, 316, 317, 321, 324, 327, 328, 329], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 23, 24, 25, 27, 29, 61, 63, 64, 69, 80, 81, 86, 92, 93, 109, 115, 123, 124, 125, 126, 128, 129, 130, 131, 159, 162, 167, 182, 183, 184, 186, 187, 198, 201, 208, 211, 214, 240, 250, 259, 261, 264, 267, 269, 273, 274, 275, 276, 283, 292, 293, 295, 296, 299, 300, 301, 303, 304, 309, 311, 312, 313, 314, 316, 317, 320, 321, 325, 326, 328, 329], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 81, 270, 272, 278, 287, 312, 316], "instead": [0, 2, 9, 46, 70, 86, 115, 222, 269, 293, 294, 296, 303, 304, 306, 307, 312, 321], "lone": 0, "an": [0, 2, 4, 6, 8, 9, 10, 15, 16, 18, 24, 25, 27, 30, 31, 32, 34, 36, 39, 40, 41, 50, 53, 69, 97, 100, 104, 107, 134, 135, 136, 140, 141, 144, 146, 149, 153, 156, 158, 171, 182, 186, 189, 197, 222, 224, 237, 240, 241, 242, 243, 244, 264, 265, 267, 270, 272, 294, 296, 298, 299, 301, 303, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 321, 324, 326, 327, 328, 329, 331], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 23, 24, 25, 27, 32, 35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 77, 78, 84, 85, 86, 87, 88, 89, 94, 95, 96, 98, 101, 103, 104, 105, 111, 122, 123, 129, 130, 132, 133, 155, 156, 157, 158, 165, 169, 173, 177, 178, 179, 183, 184, 185, 187, 189, 190, 192, 193, 196, 197, 198, 200, 201, 207, 208, 209, 211, 214, 221, 222, 223, 224, 227, 230, 233, 241, 243, 244, 252, 253, 255, 261, 262, 266, 267, 275, 278, 292, 293, 296, 299, 301, 303, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 322, 324, 325, 326, 327, 328, 329, 331], "dot": 0, "most": [0, 6, 35, 220, 296, 304, 312, 324], "24": [0, 2, 62, 98, 103, 105, 118, 122, 155, 209, 244, 292, 293, 301, 303, 306, 309, 311, 313, 315, 316, 317, 324, 325, 327], "long": [0, 294, 312, 321], "count": [0, 104, 222, 266, 273, 294, 317], "delimit": 0, "wa": [0, 265, 275, 278, 292, 294, 300, 312, 313, 325, 326], "eaten": 0, "empti": [0, 2, 18, 25, 264, 298], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 25, 27, 31, 33, 34, 42, 46, 51, 53, 70, 77, 82, 94, 95, 96, 97, 111, 179, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 227, 229, 230, 232, 233, 278, 294, 296, 297, 298, 303, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 328, 329, 331], "As": [0, 25, 297, 316, 317, 318, 329], "contain": [0, 2, 3, 25, 80, 86, 160, 161, 242, 243, 244, 292, 293, 296, 301, 302, 303, 304, 306, 309, 311, 312, 314, 315, 317, 322, 324, 325, 326, 327, 328, 329], "drope": 0, "input": [0, 7, 8, 9, 10, 25, 27, 35, 36, 38, 41, 67, 68, 78, 83, 132, 136, 137, 147, 165, 169, 184, 196, 218, 240, 253, 265, 279, 282, 294, 296, 301, 303, 306, 309, 311, 316, 317, 318, 321, 325, 328], "ani": [0, 2, 6, 9, 18, 50, 61, 72, 109, 180, 251, 256, 266, 279, 283, 299, 303, 308, 309, 311, 312, 314, 315, 316, 318, 321, 329, 331], "limit": [0, 2, 6, 71, 177, 200, 207, 222, 253, 294, 296, 311, 312, 319], "length": [0, 86, 87, 88, 89, 104, 105, 122, 294, 316], "If": [0, 2, 8, 10, 18, 27, 33, 35, 43, 46, 51, 53, 61, 76, 77, 78, 86, 97, 100, 104, 106, 107, 145, 174, 175, 179, 182, 184, 194, 196, 197, 207, 218, 221, 222, 223, 224, 225, 226, 233, 246, 253, 257, 260, 267, 282, 292, 296, 299, 301, 303, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 321, 329, 331], "ha": [0, 2, 8, 18, 25, 39, 77, 86, 98, 103, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 292, 294, 296, 297, 299, 301, 303, 304, 306, 309, 311, 312, 314, 316, 317, 323, 325, 326, 328, 329, 331], "more": [0, 2, 8, 24, 222, 252, 255, 257, 258, 260, 261, 262, 294, 296, 301, 306, 308, 310, 312, 314, 316, 317, 321, 324, 328, 329, 330], "extra": [0, 18, 262, 294], "consid": [0, 2, 100, 257, 258, 260, 294, 301, 304, 306, 309, 311, 312, 317, 325], "start": [0, 2, 8, 37, 50, 104, 159, 173, 182, 257, 262, 294, 296, 299, 301, 306, 307, 311, 312, 314, 315, 316, 317, 325, 326, 328, 329, 331], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 27, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 275, 276, 278, 283, 292, 294, 296, 297, 299, 301, 304, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 321, 325, 327, 328, 329, 330, 331], "been": [0, 2, 6, 152, 297, 301, 303, 312, 316, 329, 331], "provid": [0, 25, 184, 207, 296, 297, 300, 301, 303, 309, 311, 312, 317, 331], "default": [0, 1, 2, 6, 7, 9, 14, 18, 23, 25, 29, 32, 35, 37, 38, 39, 45, 47, 51, 53, 60, 77, 78, 82, 106, 109, 111, 115, 124, 126, 133, 134, 135, 146, 147, 174, 175, 182, 183, 184, 186, 187, 192, 193, 196, 197, 207, 208, 211, 221, 223, 224, 225, 235, 236, 239, 240, 246, 252, 257, 258, 260, 262, 267, 269, 273, 276, 286, 291, 294, 296, 298, 301, 309, 311, 314, 316, 317, 318, 319, 325, 328, 331], "where": [0, 2, 7, 32, 46, 222, 251, 292, 293, 294, 297, 298, 301, 303, 306, 307, 311, 312, 316, 317, 318, 321, 329, 331], "rexex": 0, "": [0, 8, 10, 14, 69, 169, 294, 296, 301, 303, 307, 312, 318, 322], "za": 0, "z": [0, 32], "either": [0, 2, 38, 39, 80, 106, 253, 260, 296, 309, 312, 314, 316, 328, 329, 331], "surround": 0, "two": [0, 2, 8, 9, 25, 27, 80, 163, 292, 294, 295, 296, 312, 321, 325, 329], "By": [0, 18, 25, 109, 134, 135, 146, 311, 312, 314], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 25, 27, 51, 69, 159, 171, 183, 222, 237, 257, 258, 259, 260, 261, 273, 292, 293, 294, 296, 298, 301, 306, 309, 311, 312, 314, 315, 316, 317, 318, 319, 325, 326, 328, 329, 331], "interpret": [0, 294, 312, 331], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 24, 25, 27, 31, 32, 41, 44, 53, 61, 69, 77, 78, 80, 84, 85, 86, 87, 88, 89, 97, 109, 115, 133, 158, 159, 180, 182, 183, 184, 185, 186, 187, 194, 196, 205, 207, 208, 215, 222, 226, 232, 234, 235, 239, 242, 243, 244, 246, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 269, 270, 271, 273, 276, 277, 278, 280, 282, 286, 292, 293, 294, 296, 298, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 324, 325, 326, 329, 330], "chang": [0, 2, 9, 18, 24, 25, 37, 80, 192, 194, 198, 199, 201, 207, 210, 214, 216, 222, 230, 296, 299, 312, 314, 316, 317, 318, 325, 331], "howev": [0, 8, 309, 312, 317, 318, 329, 331], "one": [0, 2, 6, 8, 9, 10, 14, 22, 23, 24, 25, 35, 43, 73, 82, 86, 95, 134, 135, 146, 166, 182, 184, 191, 194, 196, 215, 222, 226, 228, 229, 234, 239, 259, 261, 264, 266, 269, 273, 275, 276, 280, 294, 296, 297, 299, 303, 304, 306, 307, 311, 312, 314, 316, 317, 318, 321, 329], "legal": [0, 312], "ones": [0, 9, 109, 301, 307], "9": [0, 2, 6, 46, 62, 71, 85, 88, 98, 101, 103, 118, 122, 233, 244, 292, 293, 301, 303, 308, 309, 311, 312, 313, 315, 316, 317, 324, 325, 326, 327, 328, 331], "sinc": [0, 6, 197, 294, 303, 304, 307, 309, 316, 317, 318, 321, 331], "number": [0, 2, 6, 8, 14, 22, 23, 34, 41, 51, 53, 61, 64, 72, 78, 79, 80, 116, 117, 118, 119, 120, 122, 159, 177, 182, 183, 184, 185, 186, 196, 206, 213, 254, 255, 259, 261, 265, 266, 275, 292, 294, 296, 301, 303, 312, 316, 324, 325, 326, 328, 329, 331], "valu": [0, 1, 2, 6, 10, 18, 23, 24, 25, 32, 38, 45, 47, 48, 53, 61, 63, 64, 71, 72, 84, 85, 86, 87, 88, 89, 94, 96, 98, 101, 103, 123, 129, 130, 153, 177, 182, 185, 200, 209, 211, 222, 230, 246, 252, 255, 257, 258, 260, 261, 262, 267, 275, 291, 292, 294, 296, 299, 301, 303, 306, 313, 314, 316, 317, 325, 326, 327], "met": [0, 262, 312], "doubl": 0, "big": 0, "warn": [0, 2, 12, 240, 264, 272, 294, 301, 306, 309, 311, 317, 328, 331], "larger": [0, 312], "pad": 0, "filter": [0, 91, 116, 117, 118, 294, 303, 317, 328], "so": [0, 23, 91, 182, 271, 297, 299, 304, 312, 317, 318, 324, 331], "characterscannot": 0, "neither": [0, 312], "perform": [0, 14, 73, 80, 296, 301, 312, 314, 316, 317, 318], "order": [0, 8, 9, 25, 27, 31, 132, 137, 138, 143, 148, 150, 151, 182, 194, 195, 203, 210, 216, 217, 218, 253, 294, 296, 303, 308, 312, 314, 315, 316, 317, 321, 329], "given": [0, 2, 9, 25, 37, 75, 79, 84, 85, 87, 88, 89, 95, 96, 124, 125, 126, 128, 136, 147, 153, 155, 167, 174, 175, 183, 184, 185, 211, 219, 222, 229, 230, 238, 240, 246, 269, 271, 273, 276, 282, 294, 296, 299, 301, 303, 306, 307, 309, 311, 312, 317, 318, 324, 325, 328], "critic": [0, 297], "case": [0, 2, 8, 34, 77, 90, 134, 135, 146, 182, 222, 267, 294, 301, 309, 311, 312, 314, 316, 317, 323, 328, 330], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 25, 27, 31, 34, 97, 99, 100, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 127, 129, 130, 132, 154, 266, 294, 303, 307, 311, 312, 314, 315, 321, 331], "need": [0, 2, 18, 38, 73, 90, 131, 294, 296, 298, 299, 300, 304, 307, 308, 312, 314, 315, 317, 320, 328, 329, 331], "becaus": [0, 8, 294, 312], "later": [0, 308, 312], "comparison": [0, 317, 321, 328], "It": [0, 18, 269, 297, 298, 299, 303, 304, 308, 309, 310, 312, 314, 315, 316, 319, 324, 329, 331], "possibl": [0, 2, 6, 8, 25, 109, 138, 142, 143, 151, 220, 257, 260, 274, 294, 298, 299, 303, 309, 312, 314, 315, 316, 317, 318, 319, 321, 324, 328, 329, 331], "done": [0, 1, 73, 74, 80, 84, 85, 87, 88, 89, 182, 297, 314, 317, 319, 325], "eq": [0, 8, 30, 316], "ne": 0, "text": [0, 18, 35, 36, 39, 189, 314, 316, 321], "otherwis": [0, 6, 27, 32, 33, 35, 38, 42, 73, 77, 97, 100, 107, 133, 134, 135, 146, 149, 152, 156, 157, 158, 182, 194, 207, 208, 210, 211, 213, 216, 222, 275, 297, 303, 312, 314, 316, 321], "appropri": [0, 297, 312], "letter": [0, 133], "alphanum": 0, "underscor": 0, "real": [0, 141, 153, 303, 304], "special": [0, 6, 226, 299, 303, 304, 312], "digit": [0, 72, 294], "enclos": 0, "ok": [0, 304], "w": [0, 27, 73, 133, 156, 165, 166, 172, 186, 196, 208, 211, 215, 222, 234, 301, 312, 314, 316], "o": [0, 293, 295, 296, 300, 325], "With": [0, 329], "eqn": 0, "ge": [0, 316], "etc": [0, 3, 294, 316, 318, 326, 329], "maximum": [0, 14, 35, 72, 222, 255, 296, 301], "have": [0, 2, 6, 8, 18, 25, 27, 35, 38, 80, 109, 137, 148, 150, 226, 258, 266, 271, 273, 294, 296, 298, 299, 300, 301, 303, 304, 306, 308, 309, 311, 312, 314, 315, 317, 318, 319, 321, 328, 329, 331], "12": [0, 1, 2, 62, 98, 101, 103, 104, 105, 118, 155, 209, 244, 292, 293, 301, 303, 306, 307, 309, 311, 312, 313, 315, 316, 317, 322, 324, 325, 326, 327, 328], "must": [0, 23, 41, 77, 182, 196, 269, 293, 296, 312, 314], "decreas": [0, 304], "within": [0, 182, 297, 312, 329], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 25, 27, 207, 292, 297, 299, 301, 304, 312, 317, 318, 331], "affect": [0, 109, 115, 194, 207, 222, 294, 312, 318], "even": [0, 23, 79, 83, 98, 103, 109, 298, 312, 318], "still": [0, 312, 318, 331], "cannot": [0, 8, 61, 77, 240, 268, 294, 303, 312, 329], "both": [0, 1, 2, 8, 18, 41, 148, 190, 222, 266, 294, 297, 301, 303, 306, 309, 311, 312, 315, 317, 325, 328, 329], "reenter": 0, "think": 0, "risk": [0, 312], "being": [0, 6, 25, 34, 43, 61, 139, 145, 185, 186, 187, 208, 293, 294, 298, 306, 307, 312, 318, 321, 326, 328], "truncat": 0, "encod": [0, 215, 234, 294, 303, 319], "here": [0, 2, 115, 303, 304, 305, 308, 309, 315, 316, 317, 321, 329, 330], "possibli": [0, 321], "partial": [0, 296, 300, 321], "list": [0, 2, 6, 8, 10, 13, 14, 17, 24, 25, 27, 30, 32, 38, 41, 77, 80, 82, 83, 92, 93, 95, 96, 108, 109, 115, 124, 125, 126, 128, 154, 162, 174, 175, 182, 183, 188, 196, 207, 221, 223, 224, 225, 227, 228, 229, 230, 239, 246, 251, 252, 253, 256, 257, 258, 259, 261, 264, 265, 266, 267, 281, 282, 292, 293, 294, 296, 297, 299, 301, 303, 306, 311, 312, 314, 316, 324, 325, 326, 328, 329], "decid": [0, 2, 43, 147, 309, 311, 312, 317, 325], "whether": [0, 23, 32, 35, 38, 53, 77, 136, 145, 147, 182, 196, 242, 244, 253, 267, 270, 286, 294, 296, 309, 312, 317, 329], "put": [0, 8, 159, 182, 294, 304, 307], "up": [0, 14, 297, 298, 301, 308, 315, 329, 331], "written": [0, 294, 312, 314, 316, 318, 329], "scientif": [0, 304], "14": [0, 2, 62, 85, 98, 103, 118, 244, 292, 293, 301, 309, 311, 312, 313, 315, 316, 324, 326, 327, 328], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 104, 197, 292, 316], "describ": [0, 2, 25, 27, 61, 137, 138, 139, 142, 143, 148, 150, 151, 292, 301, 303, 309, 311, 314, 328], "output": [0, 8, 18, 266, 282, 294, 296, 299, 312, 314, 316, 329], "alwai": [0, 184, 294, 303, 316, 317, 328], "synonym": [0, 294], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 24, 25, 28, 29, 30, 34, 35, 36, 38, 39, 40, 41, 46, 48, 51, 61, 72, 74, 77, 79, 80, 82, 87, 88, 89, 95, 99, 104, 105, 109, 112, 115, 118, 122, 124, 125, 126, 128, 133, 134, 135, 136, 146, 154, 156, 159, 163, 171, 174, 175, 177, 179, 181, 182, 186, 187, 188, 189, 191, 196, 197, 200, 204, 207, 208, 209, 211, 218, 221, 223, 224, 225, 228, 229, 241, 246, 251, 252, 253, 258, 263, 264, 267, 269, 270, 271, 273, 275, 276, 279, 280, 281, 282, 283, 291, 293, 294, 296, 298, 301, 303, 309, 311, 312, 315, 316, 317, 320, 325, 326, 328, 329], "avail": [0, 1, 2, 6, 32, 42, 61, 131, 156, 194, 210, 213, 216, 222, 241, 246, 253, 292, 296, 301, 306, 307, 309, 311, 312, 314, 315, 316, 317, 318, 321, 325, 327, 328, 329, 330, 331], "carri": [0, 312], "over": [0, 122, 159, 182, 211, 242, 243, 244, 292, 293, 294, 307, 311, 329], "onc": [0, 157, 301, 318], "covari": [0, 6, 10, 14, 17, 25, 35, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 77, 103, 115, 136, 154, 165, 171, 183, 184, 185, 188, 222, 255, 275, 294, 296, 301, 303, 304, 311, 321, 326, 329], "final": [0, 44, 178, 250, 294, 301, 306, 307, 309, 311, 312, 316, 317, 318, 325, 326, 328], "estim": [0, 1, 2, 3, 14, 15, 18, 23, 24, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 50, 60, 61, 62, 64, 71, 72, 75, 77, 86, 94, 95, 96, 163, 164, 165, 169, 173, 178, 179, 183, 184, 185, 186, 187, 192, 193, 194, 198, 202, 203, 207, 208, 210, 213, 215, 216, 217, 222, 223, 224, 225, 229, 230, 232, 233, 234, 239, 241, 252, 253, 256, 262, 267, 275, 292, 293, 294, 296, 301, 302, 304, 309, 310, 311, 313, 317, 320, 321, 324, 325, 328, 329, 330], "oppos": 0, "ext": [0, 294, 329], "per": [0, 6, 14, 24, 73, 116, 117, 118, 122, 183, 184, 207, 211, 266], "est": [0, 37, 44, 50, 173, 178, 314, 316], "first": [0, 2, 7, 25, 33, 35, 42, 79, 98, 103, 106, 134, 135, 137, 138, 143, 146, 148, 163, 170, 186, 187, 192, 194, 195, 196, 203, 208, 210, 211, 213, 216, 222, 275, 294, 296, 301, 307, 309, 311, 312, 316, 317, 318, 321, 329, 331], "call": [0, 266, 283, 294, 298, 299, 312, 318, 331], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 293, 294, 296, 301, 306, 309, 311, 317, 321, 322, 324, 325, 326, 328, 329], "theta": [0, 1, 27, 32, 35, 38, 123, 129, 130, 165, 166, 169, 207, 215, 234, 294, 309, 316, 317, 318, 321, 325], "sigma": [0, 1, 123, 129, 130, 165, 166, 169, 186, 187, 208, 307, 309, 316, 317, 318], "omega": [0, 1, 22, 25, 62, 123, 129, 130, 165, 166, 169, 294, 296, 307, 309, 314, 316, 317, 318, 324, 325], "fix": [0, 1, 2, 23, 24, 32, 43, 48, 53, 77, 94, 95, 96, 123, 129, 130, 190, 198, 201, 214, 221, 227, 229, 230, 252, 296, 309, 312, 314, 316, 321, 329], "offdiagon": 0, "could": [0, 18, 294, 303, 312, 316, 320, 321], "part": [0, 2, 18, 25, 79, 222, 292, 294, 296, 299, 300, 312, 314, 317, 318, 321, 329], "NO": [0, 312], "probabl": [0, 222], "same": [0, 2, 8, 10, 18, 25, 27, 41, 51, 72, 73, 94, 95, 96, 104, 150, 196, 198, 207, 229, 230, 235, 253, 258, 269, 271, 273, 293, 294, 296, 297, 301, 303, 306, 307, 311, 312, 314, 316, 317, 328, 329, 331], "type": [0, 2, 6, 8, 10, 18, 26, 27, 34, 35, 53, 75, 100, 124, 126, 162, 167, 212, 240, 246, 253, 257, 258, 260, 262, 291, 294, 296, 299, 301, 307, 308, 309, 311, 312, 314, 317, 321], "now": [0, 294, 299, 316, 318], "investig": 0, "follow": [0, 2, 14, 35, 38, 158, 221, 292, 294, 296, 297, 299, 300, 301, 303, 304, 306, 308, 309, 311, 312, 314, 316, 317, 318, 320, 328, 329, 331], "like": [0, 25, 303, 312, 318, 321, 329], "One": [0, 2, 25, 159, 162, 275, 279, 282, 296, 321, 331], "last": [0, 8, 27, 31, 97, 193, 267], "left": [0, 4, 61, 314, 316, 317, 320], "justifi": 0, "size": [0, 6, 13, 182, 222, 294, 297, 321], "13": [0, 1, 2, 62, 98, 101, 103, 104, 118, 244, 292, 293, 301, 306, 309, 311, 312, 313, 315, 316, 317, 322, 324, 326, 327], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 280, 291, 292, 293, 294, 295, 297, 298, 299, 301, 306, 307, 308, 310, 311, 312, 313, 320, 321, 324, 326, 327, 330, 331], "n": [0, 6, 17, 22, 25, 36, 39, 46, 77, 80, 179, 184, 185, 189, 206, 213, 221, 224, 259, 292, 293, 294, 296, 307, 309, 314, 316], "flatten": [0, 294], "triangular": 0, "correl": [0, 14, 54, 55, 56, 57, 65, 66, 67, 68, 71, 77, 233, 275, 294, 324], "abov": [0, 32, 35, 38, 71, 177, 222, 292, 293, 301, 307, 312, 316, 328, 331], "off": [0, 2, 317, 329], "diagon": [0, 165, 294, 309, 315, 316, 317], "obj": 0, "right": [0, 4, 8, 312, 314, 316, 331], "also": [0, 2, 25, 33, 83, 109, 182, 294, 298, 299, 301, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 325, 328, 329, 331], "22": [0, 2, 62, 84, 85, 87, 88, 98, 103, 118, 122, 244, 292, 293, 301, 307, 311, 313, 315, 316, 327], "integ": [0, 6, 133, 294, 296, 329], "5": [0, 1, 2, 27, 32, 35, 54, 56, 57, 61, 62, 66, 67, 73, 85, 86, 96, 98, 101, 103, 105, 118, 122, 133, 155, 156, 157, 158, 165, 209, 222, 225, 230, 244, 265, 266, 292, 293, 301, 303, 307, 309, 311, 312, 313, 314, 315, 316, 317, 322, 324, 326, 327, 328], "expon": [0, 1, 32, 252, 296], "regular": [0, 10, 310], "take": [0, 2, 23, 25, 78, 275, 294, 297, 303, 306, 309, 311, 312, 317, 321, 328], "19": [0, 62, 85, 98, 103, 118, 244, 292, 293, 309, 313, 315, 316, 324, 326, 327], "posit": [0, 25, 184, 185, 222, 294, 296, 297, 304], "neg": [0, 329], "For": [0, 2, 8, 35, 38, 116, 117, 118, 158, 209, 222, 226, 252, 255, 257, 258, 260, 261, 262, 292, 293, 296, 298, 299, 301, 306, 307, 308, 312, 314, 317, 318, 321, 328, 329, 331], "20": [0, 2, 62, 88, 98, 103, 118, 244, 292, 293, 301, 312, 313, 315, 316, 322, 324, 325, 326, 327], "In": [0, 2, 8, 34, 77, 90, 297, 299, 301, 308, 309, 311, 312, 314, 315, 316, 317, 321, 328, 329, 331], "observ": [0, 6, 14, 18, 42, 104, 116, 117, 118, 121, 122, 194, 210, 213, 216, 217, 222, 265, 266, 292, 294, 307, 321, 324, 327, 328], "byte": 0, "evid": [0, 107, 294], "toward": [0, 104, 294], "token": [0, 329], "whitespac": 0, "parenthes": [0, 329], "multipl": [0, 4, 8, 25, 27, 34, 53, 100, 134, 135, 146, 194, 264, 282, 294, 301, 304, 314, 316, 325, 326, 329], "open": [0, 297, 299, 310, 312, 319], "keyword": [0, 296], "kept": [0, 90, 294, 296, 309], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 23, 24, 25, 27, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 244, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 294, 296, 298, 299, 301, 303, 304, 306, 309, 311, 312, 314, 317, 318, 319, 320, 321, 325, 328, 331], "csv": [0, 2, 169, 235, 268, 278, 294, 296, 301, 303, 306, 309, 311, 316, 317, 325, 328, 329], "wgt": [0, 2, 4, 6, 10, 27, 32, 35, 73, 82, 83, 98, 103, 115, 131, 133, 155, 156, 157, 158, 165, 166, 171, 209, 223, 224, 225, 228, 252, 303, 307, 314, 316, 318, 321, 324, 329], "23": [0, 2, 61, 62, 64, 78, 85, 98, 103, 118, 183, 184, 185, 244, 292, 293, 301, 309, 311, 313, 315, 316, 317, 326, 327, 328], "titl": 0, "crash": [0, 294], "nmtran": [0, 6, 14], "There": [0, 271, 306, 316], "72": [0, 2], "includ": [0, 2, 3, 17, 22, 25, 47, 162, 222, 267, 293, 294, 297, 301, 309, 310, 311, 312, 315, 316, 317, 324, 326, 328, 329], "come": [0, 222, 299, 312], "filenam": [0, 18, 269, 273, 276, 281, 314], "repres": [0, 4, 6, 23, 24, 25, 33, 296, 301, 303, 304, 307, 312, 314, 328], "rel": [0, 14, 275, 294, 307], "path": [0, 1, 2, 10, 18, 51, 75, 102, 167, 168, 235, 236, 237, 238, 247, 248, 249, 251, 253, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 286, 294, 296, 298, 301, 303, 306, 308, 309, 311, 314, 315, 316, 317, 325, 326, 328, 329, 331], "work": [0, 275, 294, 297, 299, 306, 312, 314, 321], "directori": [0, 238, 251, 269, 270, 271, 294, 296, 298, 299, 314, 326], "when": [0, 2, 14, 31, 35, 73, 97, 294, 297, 299, 303, 311, 312, 314, 318, 324, 326, 328, 329], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 265, 266, 301, 303, 306, 309, 311, 312, 317, 325, 328], "simpli": [0, 23, 299, 306, 318], "seen": [0, 1, 2, 301, 303, 306, 309, 311, 317, 325, 328], "54": [0, 62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 317, 322, 324, 327], "doe": [0, 2, 51, 79, 102, 177, 222, 269, 270, 271, 276, 277, 294, 304, 306, 309, 311, 312, 317, 318, 324], "pk": [0, 2, 6, 40, 47, 75, 109, 126, 165, 212, 222, 294, 296, 301, 309, 316, 317, 318, 328, 329], "pred": [0, 88, 165, 169, 294, 315, 316, 324, 327], "simpl": [0, 1, 165, 220, 267, 316, 318, 328], "merg": [0, 294, 299, 312], "placement": [0, 298], "place": [0, 2, 298, 312], "seem": 0, "restrict": [0, 271, 312], "automat": [0, 14, 32, 253, 294, 299, 301, 308, 312, 325, 329], "creat": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 29, 31, 34, 43, 73, 75, 76, 78, 79, 97, 100, 101, 107, 174, 196, 207, 237, 238, 240, 251, 265, 266, 269, 270, 271, 272, 273, 274, 278, 279, 281, 283, 286, 292, 293, 294, 296, 298, 299, 302, 303, 306, 307, 309, 313, 317, 321, 322, 324, 325, 326, 327, 328, 329, 330], "continu": [0, 2, 6, 18, 35, 294, 297, 299, 301, 307, 312, 321, 329], "factor": [0, 321], "compil": [0, 312], "11138": 0, "445": [0, 309], "though": [0, 312], "outsid": [0, 294, 297, 312], "standard": [0, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 234, 237, 275, 292, 294, 304, 307, 312, 316, 318, 321, 324, 325, 327], "gfortran": 0, "8": [0, 2, 6, 54, 55, 56, 57, 62, 65, 66, 67, 68, 98, 103, 105, 118, 122, 155, 209, 244, 292, 293, 301, 303, 309, 311, 312, 313, 315, 316, 322, 324, 325, 326, 327, 328, 331], "hh": 0, "j": [0, 222, 224, 293, 307], "nep": 0, "h": [0, 296], "second": [0, 163, 296, 318], "f": [0, 27, 39, 73, 133, 156, 165, 166, 172, 186, 187, 196, 207, 208, 211, 222, 234, 292, 294, 296, 300, 312, 314, 316, 318], "respect": [0, 2, 294, 297, 301, 306, 307, 312, 316, 317, 318], "ep": [0, 27, 165, 294, 296, 316, 318], "implicit": [0, 294], "kind": [0, 6, 8, 126, 312], "dpsize": 0, "main": [0, 274, 296, 299, 321, 331], "function": [0, 3, 10, 14, 25, 32, 35, 36, 39, 58, 59, 78, 83, 84, 85, 87, 88, 89, 94, 95, 96, 110, 121, 127, 138, 142, 143, 151, 186, 187, 189, 198, 207, 208, 220, 226, 229, 230, 233, 238, 246, 257, 260, 275, 279, 292, 294, 296, 298, 299, 303, 304, 309, 311, 312, 314, 315, 317, 318, 320, 321, 324, 325, 326, 329, 330, 331], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 25, 28, 29, 41, 61, 79, 86, 109, 123, 124, 128, 129, 131, 134, 135, 146, 147, 166, 185, 186, 187, 196, 207, 208, 211, 252, 253, 275, 294, 296, 301, 303, 304, 309, 315, 321, 324, 330, 331], "doesn": [0, 27, 273, 294, 309], "t": [0, 6, 8, 27, 32, 36, 73, 81, 111, 133, 156, 189, 202, 203, 208, 217, 225, 267, 273, 279, 281, 293, 294, 296, 307, 309, 314, 316, 322, 324], "declar": [0, 2, 73, 157, 301, 329], "assign": [0, 6, 27, 73, 294, 296, 314], "stop": 0, "entri": [0, 222, 269, 272, 273, 276], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 23, 24, 25, 27, 58, 59, 73, 79, 106, 109, 110, 115, 121, 127, 131, 134, 135, 146, 157, 166, 181, 186, 187, 196, 207, 208, 211, 253, 294, 301, 304, 316, 321], "separ": [0, 10, 77, 90, 158, 182, 221, 271, 274, 294, 296, 299, 301, 303, 304, 307, 312, 321, 329], "thnn": 0, "nn": [0, 307], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 23, 25, 43, 177, 200, 222, 294, 312, 316, 328], "ad": [0, 2, 9, 18, 33, 35, 38, 46, 53, 90, 257, 258, 260, 282, 294, 296, 301, 311, 312, 318, 325, 326], "x": [0, 1, 2, 24, 32, 73, 84, 85, 101, 155, 183, 209, 292, 301, 303, 307, 309, 311, 315, 316, 317, 319, 325, 326, 328], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 25, 27, 109, 115, 167, 168, 169, 240, 253, 260, 278, 294, 303, 316, 317, 328], "tool": [1, 2, 3, 14, 18, 50, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 84, 85, 86, 87, 88, 89, 172, 183, 184, 185, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 277, 280, 286, 291, 292, 294, 295, 296, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 320, 321, 325, 328, 330, 331], "add": [1, 9, 14, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 73, 90, 111, 189, 207, 208, 282, 294, 296, 301, 309, 312, 316, 317, 318, 319, 329], "allometr": [1, 2, 32, 252, 294, 296, 329], "scale": [1, 2, 6, 18, 32, 60, 63, 69, 252, 275, 294, 296, 307, 319, 329], "pharmr": [1, 2, 3, 294, 299, 301, 304, 306, 308, 309, 310, 311, 317, 325, 328, 330], "command": [1, 294, 299, 301, 306, 308, 309, 310, 311, 312, 316, 317, 325, 330], "line": [1, 73, 294, 301, 306, 308, 309, 310, 311, 312, 316, 317, 325, 330], "To": [1, 2, 296, 298, 299, 301, 306, 308, 309, 311, 312, 315, 316, 317, 319, 325, 328, 329, 331], "initi": [1, 2, 15, 18, 23, 24, 32, 38, 41, 42, 45, 46, 47, 48, 75, 77, 78, 86, 94, 95, 96, 111, 179, 186, 187, 194, 196, 197, 198, 202, 203, 207, 208, 210, 213, 216, 217, 223, 224, 225, 229, 230, 232, 233, 252, 253, 262, 281, 294, 296, 301, 306, 307, 309, 311, 312, 314, 316, 317, 325, 328], "python": [1, 2, 293, 294, 296, 301, 303, 304, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 330], "r": [1, 2, 14, 39, 278, 293, 294, 298, 301, 303, 304, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 325, 328, 329, 330], "read_model": [1, 169, 294, 301, 303, 306, 309, 311, 314, 316, 317, 325, 328, 331], "read_modelfit_result": [1, 294, 301, 306, 309, 311, 314, 315, 317, 325, 328], "run_allometri": [1, 294], "start_model": [1, 265, 301, 306, 309, 311, 317, 325, 328, 329], "start_model_result": [1, 301, 306, 309, 311, 317, 325, 328, 329], "re": [1, 2, 238, 248, 249, 250, 254, 255, 263, 270, 277, 280, 293, 301, 306, 309, 311, 315, 317, 325, 327, 328, 329], "code": [1, 14, 18, 20, 73, 114, 115, 131, 138, 142, 143, 151, 165, 169, 207, 208, 236, 294, 300, 301, 306, 309, 310, 311, 312, 316, 317, 318, 320, 321, 325, 328, 331], "redefin": [1, 301, 306, 309, 311, 317, 325], "accordingli": [1, 301, 306, 309, 311, 317, 318, 325], "descript": [1, 2, 6, 18, 28, 265, 266, 267, 275, 291, 292, 294, 298, 301, 303, 306, 309, 311, 317, 325, 326, 328], "modelfitresult": [1, 2, 21, 239, 241, 242, 243, 244, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 274, 294, 301, 306, 309, 311, 317, 325, 328], "allometric_vari": [1, 2, 32, 252, 253, 296], "wt": [1, 27, 32, 252, 255, 301, 326], "reference_valu": [1, 2, 32, 252, 296], "refer": [1, 29, 32, 73, 80, 150, 209, 250, 252, 253, 267, 294, 301, 312, 316, 318, 330, 331], "70": [1, 2, 32, 98, 252, 316, 324], "appli": [1, 2, 18, 33, 186, 187, 196, 207, 208, 223, 224, 225, 252, 294, 296, 297, 303, 307, 312, 316, 317, 324, 328, 329], "all": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 24, 25, 26, 27, 28, 32, 38, 43, 45, 47, 70, 73, 77, 80, 82, 90, 95, 96, 99, 101, 103, 105, 108, 109, 112, 123, 126, 129, 130, 132, 133, 138, 142, 143, 147, 151, 154, 162, 164, 166, 174, 175, 183, 184, 196, 201, 207, 209, 214, 221, 222, 223, 224, 225, 227, 228, 229, 230, 251, 252, 256, 257, 258, 260, 267, 269, 273, 275, 276, 278, 282, 287, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 309, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 328, 329, 331], "cl": [1, 2, 4, 8, 24, 27, 32, 35, 38, 41, 46, 61, 73, 79, 81, 92, 109, 124, 126, 128, 133, 136, 147, 153, 156, 157, 158, 165, 166, 171, 174, 179, 194, 195, 199, 202, 203, 206, 210, 216, 220, 223, 224, 225, 252, 255, 301, 307, 309, 311, 314, 316, 318], "q": [1, 32, 46, 179, 252, 294, 316], "v": [1, 8, 24, 27, 32, 36, 61, 73, 81, 93, 109, 126, 131, 133, 156, 157, 158, 160, 161, 165, 166, 174, 189, 194, 195, 199, 202, 203, 210, 216, 217, 220, 252, 255, 299, 301, 307, 311, 314, 316, 318, 327, 329], "75": [1, 32, 252, 301, 306], "lower_bound": [1, 2, 32, 252, 296], "lower": [1, 2, 6, 23, 24, 32, 35, 48, 71, 94, 95, 96, 123, 129, 130, 177, 198, 200, 201, 207, 214, 227, 230, 252, 253, 296, 304, 309, 314, 316], "bound": [1, 23, 24, 32, 48, 72, 185, 201, 214, 223, 224, 225, 227, 233, 252, 269, 273, 276, 294, 296, 314], "upper_bound": [1, 2, 32, 252, 296], "upper": [1, 23, 24, 32, 35, 48, 94, 95, 96, 123, 129, 130, 177, 198, 201, 214, 227, 230, 252, 294, 296, 314, 316], "should": [1, 6, 23, 32, 35, 38, 41, 48, 182, 196, 252, 257, 258, 260, 294, 296, 297, 298, 299, 301, 304, 307, 309, 311, 312, 313, 317, 321, 325, 328], "true": [1, 2, 6, 9, 10, 15, 18, 24, 32, 33, 39, 44, 53, 60, 70, 79, 82, 90, 94, 95, 96, 111, 115, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 155, 171, 178, 184, 190, 192, 193, 196, 207, 208, 213, 228, 229, 230, 231, 232, 236, 244, 252, 267, 268, 275, 294, 301, 303, 306, 309, 311, 314, 316, 317, 318, 319, 325, 326, 327, 328, 331], "No": [1, 6, 222, 276, 277, 312, 317], "select": [1, 2, 182, 209, 223, 225, 266, 292, 294, 296, 301, 309, 311, 314, 317, 319, 325, 326, 328, 329], "see": [1, 2, 6, 8, 18, 35, 38, 222, 244, 252, 253, 255, 257, 258, 260, 261, 262, 296, 297, 298, 299, 301, 303, 304, 306, 309, 311, 312, 313, 314, 316, 317, 318, 321, 325, 328, 329], "about": [1, 2, 6, 297, 301, 303, 306, 308, 309, 311, 312, 316, 317, 325, 328, 329], "actual": [1, 2, 23, 158, 301, 306, 309, 311, 312, 317, 325, 328], "minim": [1, 2, 294, 301, 306, 309, 311, 317, 325, 328], "statu": [1, 2, 294, 301, 304, 306, 309, 311, 312, 317, 325, 328], "time": [1, 2, 6, 7, 9, 10, 24, 27, 32, 41, 42, 73, 75, 82, 83, 98, 104, 105, 112, 122, 133, 154, 155, 156, 157, 158, 159, 165, 166, 169, 176, 194, 197, 209, 210, 211, 213, 216, 226, 253, 261, 294, 296, 301, 303, 306, 307, 309, 311, 312, 314, 315, 317, 318, 321, 324, 325, 327, 328, 329], "you": [1, 2, 298, 299, 301, 306, 308, 309, 310, 311, 312, 315, 316, 317, 318, 321, 325, 328, 329, 330, 331], "look": [1, 2, 27, 51, 109, 147, 301, 306, 309, 311, 317, 318, 325, 328, 329], "summary_model": [1, 2, 294, 301, 306, 309, 311, 317, 325, 328, 329], "tabl": [1, 2, 60, 165, 186, 222, 266, 275, 292, 293, 294, 299, 301, 302, 306, 307, 309, 311, 313, 316, 317, 322, 324, 325, 326, 327, 328, 329], "gener": [1, 2, 6, 31, 61, 64, 74, 78, 97, 159, 182, 183, 184, 185, 279, 281, 294, 296, 301, 303, 306, 307, 309, 310, 311, 316, 317, 320, 321, 325, 328, 329], "summarize_modelfit_result": [1, 2, 294, 301, 306, 309, 311, 317, 325, 328], "minimization_success": [1, 2, 267, 275, 301, 306, 309, 311, 317, 325, 328], "errors_found": [1, 2, 301, 306, 309, 311, 317, 325, 328], "pheno": [1, 8, 10, 15, 27, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 77, 79, 81, 82, 83, 86, 92, 93, 94, 95, 96, 98, 101, 103, 104, 105, 106, 108, 109, 111, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 244, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 308, 314, 315, 316, 318], "phenobarb": [1, 165, 267, 316, 328], "scaled_model": [1, 2], "warnings_found": [1, 2, 301, 306, 309, 311, 317, 325, 328], "ofv": [1, 2, 53, 163, 242, 246, 257, 258, 260, 265, 266, 267, 275, 294, 301, 306, 309, 311, 317, 324, 325, 328], "aic": [1, 52, 246, 257, 258, 260, 294, 309, 311, 317, 325], "bic": [1, 2, 53, 246, 257, 258, 260, 294, 296, 301, 309, 311, 317, 325, 328, 329], "730": [1, 292, 307, 309, 313], "894727": [1, 307, 313], "740": [1, 86, 104, 155, 209, 303, 316], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 267, 275, 301, 306, 309, 311, 317, 325, 328], "estimation_runtim": [1, 2, 275, 301, 306, 309, 311, 317, 325, 328], "_estim": [1, 309, 317], "32": [1, 6, 62, 98, 103, 118, 244, 292, 293, 296, 301, 306, 313, 315, 316, 324, 327], "005818": [1, 307], "121955": 1, "44555": [1, 307], "111053": [1, 307], "201526": [1, 307], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 307], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 245, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 301, 306, 307, 309, 311, 317, 322, 325, 328, 329], "predict": [1, 2, 14, 18, 87, 88, 110, 115, 127, 161, 162, 242, 243, 244, 265, 275, 294, 301, 302, 309, 311, 317, 324, 325, 328], "influenti": [1, 2, 242, 243, 266, 294, 301, 309, 311, 317, 325, 328], "individu": [1, 2, 6, 18, 40, 60, 61, 62, 64, 77, 87, 88, 109, 110, 116, 117, 118, 122, 127, 162, 163, 164, 174, 183, 184, 185, 232, 242, 243, 244, 265, 266, 275, 294, 296, 301, 309, 311, 312, 316, 317, 321, 324, 325, 328], "outlier": [1, 2, 243, 244, 266, 294, 301, 309, 311, 317, 325, 327, 328], "summary_individuals_count": [1, 2, 301, 309, 311, 317, 325, 328], "summarize_individuals_count_t": [1, 2, 294, 301, 309, 311, 317, 325, 328], "parent_model": [1, 2, 18, 294, 301, 306, 309, 311, 317, 325, 328], "inf_select": [1, 2, 266, 301, 309, 311, 317, 325, 328], "inf_param": [1, 2, 266, 301, 309, 311, 317, 325, 328], "out_ob": [1, 2, 266, 301, 309, 311, 317, 325, 328], "out_ind": [1, 2, 266, 301, 309, 311, 317, 325, 328], "inf_outli": [1, 2, 266, 301, 309, 311, 317, 325, 328], "differ": [1, 2, 3, 18, 25, 53, 265, 267, 274, 292, 293, 294, 297, 298, 301, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 328, 329, 331], "statist": [1, 6, 61, 64, 224, 301, 303, 307, 309, 311, 314, 317, 325, 328], "summary_individu": [1, 294, 301, 309, 311, 317, 325, 328], "summarize_individu": [1, 266, 294, 301, 309, 311, 317, 325, 328], "outlier_count": [1, 265, 301, 309, 311, 317, 325, 328], "dofv_vs_par": [1, 265, 301, 309, 311, 317, 325, 328], "id": [1, 2, 5, 6, 10, 16, 62, 80, 82, 83, 98, 101, 103, 104, 105, 108, 118, 122, 155, 165, 166, 169, 183, 209, 244, 293, 294, 296, 301, 303, 307, 309, 311, 313, 315, 316, 317, 318, 325, 327, 328], "nan": [1, 2, 101, 233, 292, 294, 301, 306, 307, 309, 311, 316, 317, 324, 325, 326, 328], "742852": 1, "000000": [1, 2, 48, 54, 55, 56, 65, 301, 307, 309, 311, 315, 317, 325, 328], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 24, 41, 62, 77, 85, 98, 101, 103, 104, 118, 177, 197, 200, 201, 214, 218, 222, 224, 244, 292, 293, 301, 303, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 322, 324, 325, 326, 327, 328, 329], "092658": 1, "55": [1, 6, 62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 317, 322, 324, 327, 328], "6": [1, 6, 62, 86, 98, 103, 118, 122, 155, 209, 244, 292, 293, 301, 303, 307, 309, 311, 312, 313, 315, 316, 317, 324, 325, 326, 327, 328], "535711": 1, "175743": 1, "56": [1, 62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 327], "764710": 1, "576072": 1, "57": [1, 62, 98, 103, 108, 118, 183, 244, 292, 293, 301, 306, 307, 313, 315, 316, 327], "975589": 1, "539779": 1, "58": [1, 62, 98, 103, 108, 118, 122, 183, 244, 292, 293, 307, 313, 315, 316, 326, 327], "194798": 1, "775689": 1, "59": [1, 62, 98, 101, 103, 105, 108, 116, 118, 122, 155, 183, 209, 244, 292, 293, 301, 303, 306, 307, 313, 315, 316, 317, 327], "11": [1, 2, 62, 84, 85, 87, 98, 101, 103, 104, 118, 244, 292, 293, 301, 307, 308, 309, 311, 312, 313, 315, 316, 317, 322, 324, 326, 327, 328, 329, 331], "175577": 1, "462889": 1, "predicted_dofv": [1, 265, 266, 301, 309, 311, 317, 325, 328], "predicted_residu": [1, 265, 266, 301, 309, 311, 317, 325, 328], "118": [1, 183, 294, 307], "fulli": [2, 329], "best": [2, 294, 301, 309, 311, 312, 317, 325, 328, 329], "dataset": [2, 10, 11, 12, 18, 31, 34, 49, 61, 70, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 100, 101, 104, 107, 108, 113, 116, 117, 118, 122, 131, 150, 155, 159, 167, 177, 182, 188, 209, 222, 226, 231, 235, 253, 258, 293, 294, 296, 299, 307, 310, 311, 327, 328, 330], "combin": [2, 4, 77, 134, 135, 146, 149, 186, 187, 208, 221, 222, 259, 294, 296, 306, 307, 309, 312, 316, 325, 328, 329], "ruvsearch": [2, 253, 261, 263, 294, 329], "covsearch": [2, 255, 294, 329], "run_amd": [2, 294], "dataset_path": [2, 75, 316], "modeltyp": [2, 253, 296], "basic_pk": [2, 253, 296], "administr": [2, 5, 6, 16, 75, 97, 253, 262, 294, 296, 316, 328], "oral": [2, 7, 75, 194, 253, 262, 294, 296, 316, 328, 329], "search_spac": [2, 253, 260, 262, 294, 296, 317, 328, 329], "let": [2, 14, 18, 80, 294, 301, 307, 316, 318, 329], "categor": [2, 6, 35, 294, 301, 303, 307, 329], "sex": [2, 297, 301, 321, 329], "ag": [2, 6, 255, 301, 326, 329], "occas": [2, 41, 253, 258, 294, 296, 311, 316], "visi": [2, 311], "c": [2, 9, 36, 39, 189, 224, 295, 300, 306, 307, 311, 312, 316, 318, 325], "specifi": [2, 6, 9, 27, 38, 46, 83, 94, 96, 167, 177, 179, 186, 187, 206, 207, 208, 222, 230, 237, 256, 294, 296, 298, 301, 306, 311, 312, 314, 315, 328], "iiv": [2, 17, 22, 25, 29, 38, 41, 45, 47, 53, 77, 109, 124, 147, 174, 196, 221, 253, 257, 258, 260, 294, 296, 301, 311, 314, 316, 329], "we": [2, 297, 299, 301, 307, 308, 310, 312, 314, 316, 318, 321, 331], "our": [2, 297, 299, 300, 312, 321], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 24, 25, 27, 28, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 63, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 90, 91, 94, 95, 96, 101, 110, 121, 123, 127, 129, 130, 131, 133, 156, 157, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 241, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 286, 292, 294, 296, 298, 301, 303, 304, 306, 309, 311, 312, 316, 317, 318, 321, 325, 328, 329, 330, 331], "build": [2, 253, 295, 296, 304, 316, 329], "current": [2, 25, 37, 38, 58, 59, 73, 74, 84, 85, 87, 88, 89, 110, 121, 127, 137, 150, 156, 192, 193, 194, 199, 210, 220, 222, 226, 240, 241, 246, 255, 259, 262, 273, 275, 283, 293, 294, 296, 299, 301, 302, 307, 308, 310, 311, 312, 313, 314, 320, 321, 322, 324, 325, 326, 327, 328, 329], "pkpd": [2, 109, 253, 262, 294, 329], "drug_metabolit": [2, 253, 262, 328], "rout": [2, 253, 262, 328], "iv": [2, 75, 194, 253, 262, 294, 296, 328, 329], "ivor": [2, 75, 253, 262, 296, 328], "cl_init": [2, 75, 253, 296, 316], "popul": [2, 18, 27, 48, 86, 87, 88, 110, 127, 133, 233, 253, 275, 294, 296, 326], "clearanc": [2, 32, 75, 92, 253, 294, 296, 301, 311, 318], "01": [2, 17, 25, 35, 75, 207, 233, 253, 255, 296, 301, 316, 324, 326, 328], "vc_init": [2, 75, 253, 296, 316], "central": [2, 7, 8, 9, 27, 43, 46, 73, 75, 119, 133, 137, 139, 145, 156, 179, 194, 195, 197, 199, 202, 203, 206, 210, 213, 216, 217, 218, 220, 253, 296, 299, 304, 314, 316], "compart": [2, 6, 8, 9, 30, 33, 34, 36, 42, 43, 46, 99, 100, 112, 119, 120, 132, 137, 139, 170, 176, 179, 194, 197, 206, 213, 218, 253, 294, 296, 316, 317, 328, 329], "volum": [2, 32, 46, 75, 93, 253, 294, 296, 301, 311, 312], "mat_init": [2, 75, 253, 296, 316], "absorpt": [2, 75, 126, 137, 139, 148, 150, 194, 199, 210, 213, 216, 240, 253, 260, 265, 294, 296, 309, 311, 317, 328, 329], "b_init": [2, 253, 262, 328], "baselin": [2, 36, 39, 98, 103, 154, 189, 253, 262, 294, 307, 328], "effect": [2, 35, 36, 38, 39, 53, 109, 136, 147, 171, 174, 189, 207, 246, 255, 294, 296, 304, 308, 312, 314, 316, 321, 326, 328, 329], "emax_init": [2, 253, 262, 328], "emax": [2, 36, 39, 45, 189, 328, 329], "ec50_init": [2, 253, 262, 328], "ec50": 2, "met_init": [2, 253, 262, 328], "equilibr": [2, 253, 328], "mfl": [2, 240, 253, 255, 265, 294, 296, 301, 317, 328], "depend": [2, 6, 18, 27, 31, 34, 61, 77, 80, 97, 100, 109, 134, 135, 146, 186, 187, 196, 207, 208, 211, 294, 298, 303, 309, 318, 329, 331], "lloq_limit": [2, 253, 296], "quantif": [2, 6, 177, 200, 222, 253, 296], "lloq_method": [2, 253, 296], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 34, 37, 44, 165, 169, 192, 193, 222, 253, 256, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 293, 294, 296, 301, 304, 312, 314, 316, 321, 329, 331], "transform_blq": [2, 177, 200, 253, 294, 296, 316], "bodi": [2, 6, 10, 297, 303, 312, 321], "weight": [2, 6, 10, 89, 134, 135, 146, 149, 215, 234, 301, 303, 321, 325], "correspond": [2, 9, 14, 18, 205, 293, 312, 314, 327, 329], "datainfo": [2, 18, 31, 34, 83, 155, 167, 188, 235, 294, 329, 330], "file": [2, 10, 18, 51, 76, 102, 165, 167, 168, 169, 235, 236, 237, 247, 248, 268, 269, 270, 271, 273, 276, 277, 278, 280, 281, 294, 296, 299, 301, 306, 308, 309, 311, 312, 314, 315, 316, 317, 318, 320, 325, 328, 329, 330], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 272, 274, 275, 278, 279, 280, 281, 294, 298, 301, 303, 312, 315, 316, 317, 330], "elimin": [2, 126, 138, 142, 143, 151, 195, 202, 203, 217, 240, 294, 296, 317, 328, 329], "vc": [2, 46, 179, 301, 309, 311, 316], "mat": [2, 47, 293, 294, 295, 300, 301, 309, 311, 316, 318, 325], "proport": [2, 38, 134, 135, 146, 149, 182, 186, 187, 207, 208, 222, 294, 296, 316], "step": [2, 14, 15, 18, 36, 37, 39, 44, 50, 173, 178, 189, 192, 193, 255, 267, 274, 275, 294, 296, 299, 301, 306, 308, 309, 311, 312, 317, 321, 325, 328, 331], "foce": [2, 14, 15, 37, 44, 178, 192, 193, 294, 296, 306, 314, 316], "interact": [2, 14, 15, 37, 44, 165, 178, 192, 193, 294, 297, 306, 312, 314, 316, 321, 329, 331], "requir": [2, 73, 294, 296, 301, 308, 312, 324], "cmt": [2, 31, 34, 97, 100, 294], "dose": [2, 5, 6, 7, 8, 9, 16, 31, 33, 34, 42, 90, 97, 99, 100, 104, 105, 111, 115, 139, 150, 170, 176, 194, 209, 211, 294, 303], "creation": [2, 307, 317], "easili": [2, 314], "differenti": [2, 81, 314], "admid": [2, 5, 6, 7, 8, 9, 16, 27, 31, 34, 46, 73, 97, 100, 133, 156, 179, 194, 195, 199, 202, 203, 206, 210, 213, 216, 217, 220, 314, 316], "data": [2, 6, 18, 29, 84, 85, 86, 87, 88, 89, 103, 115, 165, 166, 169, 177, 186, 187, 190, 200, 208, 222, 253, 266, 292, 294, 303, 307, 311, 312, 314, 316, 318, 321, 328, 329], "well": [2, 61, 145, 222, 301, 306, 309, 311, 312, 316, 317, 324, 325, 328, 329, 330], "anoth": [2, 9, 18, 27, 137, 283, 316, 328], "assum": [2, 25, 38, 43, 269, 294, 307, 312, 318], "correct": [2, 10, 294, 312, 316, 328, 331], "connect": [2, 8, 18, 43, 119, 207, 269, 271, 274, 282, 294, 296, 303, 312, 321, 328, 329, 330], "along": [2, 312], "wai": [2, 24, 38, 138, 142, 143, 151, 222, 299, 303, 306, 312, 314, 329, 331], "specif": [2, 14, 18, 24, 50, 83, 182, 207, 238, 294, 296, 301, 303, 312, 314, 317, 321, 328, 329], "support": [2, 8, 14, 18, 27, 37, 38, 58, 59, 74, 75, 84, 85, 87, 88, 89, 110, 121, 127, 134, 135, 146, 192, 193, 194, 199, 210, 212, 222, 255, 261, 283, 294, 296, 301, 303, 304, 306, 310, 312, 314, 315, 316, 317, 318, 320, 323, 328, 329], "nonmem": [2, 14, 18, 73, 74, 83, 116, 117, 118, 205, 259, 294, 295, 299, 308, 310, 314, 315, 316, 321, 329], "rate": [2, 6, 8, 9, 16, 39, 46, 150, 194, 199, 210, 213, 216, 294, 296, 329], "via": [2, 294, 296, 298, 299, 308, 310, 314, 316, 318, 329, 331], "exclud": [2, 115, 265, 309, 311, 312, 317], "pleas": [2, 299, 308, 312, 314, 316, 329, 331], "featur": [2, 240, 299, 301, 306, 309, 310, 311, 312, 325, 328, 330], "languag": [2, 114, 165, 240, 297, 301, 304, 312, 317, 328], "how": [2, 3, 14, 184, 253, 257, 260, 294, 296, 297, 299, 301, 303, 308, 309, 311, 312, 314, 316, 317, 318, 326, 330], "defin": [2, 8, 64, 115, 131, 137, 139, 148, 150, 158, 166, 222, 294, 301, 304, 312, 314, 327, 328, 329], "fo": [2, 14, 37, 192, 193, 294, 296, 306, 317, 321, 329], "zo": [2, 260, 265, 294, 296, 317, 329], "seq": [2, 296, 317, 329], "lagtim": [2, 199, 210, 240, 294, 317, 329], "ON": [2, 312, 317, 329], "transit": [2, 8, 120, 137, 206, 213, 240, 294, 296, 317, 329], "peripher": [2, 8, 46, 119, 179, 206, 240, 260, 265, 294, 296, 316, 317, 328, 329], "cat": [2, 35, 301, 329], "note": [2, 4, 6, 23, 34, 73, 74, 101, 109, 116, 117, 118, 207, 222, 267, 268, 269, 273, 276, 292, 303, 309, 311, 315, 316, 318, 326, 328], "overriden": 2, "ignor": [2, 9, 116, 117, 118, 165, 294, 296, 316, 318], "soon": 2, "explicitli": [2, 296, 311, 312], "stai": [2, 25], "vice": 2, "versa": 2, "instanc": [2, 136, 171, 301, 329], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 23, 24, 25, 27, 28, 29, 32, 37, 38, 41, 44, 46, 48, 51, 61, 64, 75, 77, 78, 80, 84, 85, 86, 87, 88, 89, 102, 106, 109, 134, 135, 146, 153, 155, 162, 167, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 196, 200, 205, 207, 208, 211, 221, 222, 223, 224, 225, 231, 235, 239, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 269, 270, 273, 274, 275, 276, 278, 281, 282, 286, 294, 296, 298, 303, 307, 309, 311, 314, 316, 317, 329], "null": [2, 303, 309, 311, 317, 329, 331], "yield": [2, 159, 182], "workflow": [2, 3, 249, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 294, 308, 310, 312, 317, 321, 329], "want": [2, 297, 299, 301, 309, 310, 311, 312, 316, 317, 318, 320], "desir": [2, 276, 277], "subset": [2, 72, 183, 314, 328], "algorithm": [2, 255, 256, 257, 260, 265, 294, 296, 321, 329], "six": 2, "below": [2, 6, 177, 200, 222, 298, 299, 306, 309, 311, 312, 317, 325, 328], "detail": [2, 222, 252, 255, 257, 258, 260, 261, 262, 306, 312, 314, 317, 324, 325, 328, 329, 330], "regard": [2, 312, 317, 328], "subhead": 2, "distribut": [2, 17, 22, 25, 41, 46, 61, 64, 77, 126, 158, 164, 179, 183, 184, 185, 221, 225, 258, 283, 292, 294, 296, 307, 312, 317, 324, 328, 329], "drug": [2, 8, 43, 145, 212, 294, 321, 329], "metabolit": [2, 8, 43, 145, 294, 329], "term": [2, 186, 294, 309, 312], "keep": [2, 14, 23, 177, 182, 257, 269, 294, 297, 304, 309, 312], "iov": [2, 25, 41, 109, 124, 147, 175, 258, 294, 296, 316, 324, 329], "explain": [2, 222, 301, 312, 321, 329], "ruv": [2, 196, 296], "power": [2, 35, 207, 222, 296, 312, 316, 321, 322, 324, 325], "vari": [2, 154, 211, 261, 294, 296, 325], "identifi": [2, 6, 29, 301, 303, 309, 312, 324, 329], "option": [2, 6, 9, 14, 18, 25, 35, 38, 41, 50, 53, 75, 77, 84, 85, 87, 88, 89, 109, 182, 222, 240, 246, 262, 269, 273, 274, 276, 287, 292, 294, 296, 301, 309, 311, 312, 314, 316, 317, 328, 330, 331], "reduced_stepwis": [2, 265, 294, 317, 329], "iiv_strategi": [2, 257, 260, 294, 296, 309, 317, 329], "absorption_delai": [2, 260, 294, 317, 329], "rank_typ": [2, 246, 257, 258, 260, 296, 309, 311, 317, 329], "mix": [2, 41, 53, 143, 203, 246, 294, 304, 308, 311, 314, 317, 321, 329], "cutoff": [2, 211, 242, 243, 244, 246, 257, 258, 260, 294, 296, 309, 311, 317, 329], "implement": [2, 14, 36, 189, 269, 271, 273, 276, 312, 314, 321, 328, 329], "expect": [2, 14, 53, 61, 64, 297, 298, 312, 324], "pd": [2, 6, 15, 36, 39, 45, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 77, 80, 84, 85, 86, 87, 88, 89, 97, 98, 100, 101, 103, 104, 105, 107, 109, 113, 118, 122, 125, 159, 160, 161, 162, 163, 164, 167, 182, 183, 184, 185, 189, 232, 233, 242, 243, 244, 246, 264, 265, 266, 267, 272, 275, 294, 303, 328, 329], "brute_forc": [2, 257, 294, 309], "fullblock": [2, 257, 260, 294, 309, 317], "tri": [2, 296, 317], "list_of_paramet": [2, 38, 41, 258, 296, 311], "random": [2, 3, 13, 17, 18, 22, 25, 41, 53, 61, 64, 78, 80, 109, 124, 128, 131, 147, 183, 184, 185, 294, 296, 304, 307, 311, 316, 324, 331], "group": [2, 24, 29, 159, 162, 182, 261, 296, 310, 325], "p_valu": [2, 261, 296, 325], "05": [2, 46, 54, 55, 56, 57, 65, 66, 67, 68, 179, 292, 296, 301, 315, 316, 324, 326], "skip": [2, 261, 296, 301, 325], "p_forward": [2, 255, 296, 301], "p_backward": [2, 255, 296, 301], "max_step": [2, 255, 296, 301], "scm": [2, 255, 294, 301, 321, 323], "forward": [2, 255, 294, 296, 301, 326], "backward": [2, 255, 267, 294, 296, 301, 326], "variou": [2, 73, 222, 265, 266, 275, 294, 296, 297, 299, 301, 304, 306, 309, 310, 311, 317, 321, 325, 328], "access": [2, 301, 303, 306, 309, 311, 312, 314, 316, 317, 318, 325, 328, 329, 331], "json": [2, 10, 248, 250, 268, 278, 294, 296, 301, 303, 306, 309, 311, 317, 325, 328, 329], "format": [2, 18, 74, 294, 296, 298, 301, 304, 306, 308, 309, 310, 311, 312, 314, 316, 317, 320, 325, 328], "summary_tool": [2, 294, 301, 306, 309, 311, 317, 325, 328], "candid": [2, 260, 294, 296, 301, 306, 325, 328, 329], "compar": [2, 246, 292, 294, 301, 306, 321, 325, 328, 329], "rank": [2, 246, 257, 258, 260, 294, 296, 301, 325, 328], "selected_model": 2, "base": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 34, 41, 97, 246, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 300, 301, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319, 324, 325, 326, 328], "inst": [2, 317, 329], "1556": 2, "878871": 2, "best_ruvsearch_1": [2, 325], "1756": 2, "429308": 2, "iovsearch_run1": [2, 311], "1819": 2, "700791": 2, "1818": 2, "049718": 2, "covsearch_run3": [2, 301], "exp": [2, 27, 35, 38, 165, 223, 224, 225, 255, 301, 316, 318], "1820": 2, "703712": 2, "dofv": [2, 242, 243, 265, 292, 293, 294, 301, 322, 324, 325], "n_param": [2, 301, 311, 325, 328], "d_param": [2, 301, 311, 325, 328], "199": 2, "550437": 2, "63": [2, 98, 122, 315, 316, 322, 324], "271484": 2, "651073": 2, "653994": 2, "base_model": [2, 246], "qp1": [2, 46, 179, 294, 316], "vp1": [2, 46, 179, 316], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run9": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "iivsearch_run12": 2, "iivsearch_run13": 2, "iivsearch_run14": 2, "iivsearch_run15": 2, "iivsearch_run16": 2, "iivsearch_run17": 2, "iivsearch_run18": 2, "iivsearch_run19": 2, "prop_error": [2, 316], "iovsearch_run2": [2, 311], "iovsearch_run3": [2, 311], "iovsearch_run4": [2, 311], "iovsearch_run5": [2, 311], "iovsearch_run6": [2, 311], "covsearch_run1": [2, 301], "covsearch_run2": [2, 301], "covsearch_run4": [2, 301], "fals": [2, 6, 9, 13, 14, 17, 18, 22, 23, 24, 29, 33, 35, 37, 39, 43, 48, 53, 60, 70, 72, 79, 82, 90, 94, 95, 96, 111, 115, 123, 129, 130, 133, 134, 135, 136, 142, 143, 146, 147, 149, 150, 151, 152, 153, 171, 182, 184, 190, 198, 201, 207, 213, 214, 227, 229, 230, 232, 233, 235, 240, 244, 253, 267, 268, 270, 275, 278, 286, 293, 301, 303, 306, 314, 316, 318, 319, 326, 327], "879288": 2, "1211": [2, 301], "089361": 2, "18": [2, 6, 62, 85, 98, 103, 118, 244, 292, 293, 301, 309, 311, 313, 315, 316, 322, 324, 327], "1452": 2, "643221": 2, "879287": 2, "17": [2, 62, 84, 85, 87, 88, 98, 101, 103, 118, 122, 155, 209, 244, 292, 293, 301, 303, 309, 311, 312, 313, 315, 316, 317, 322, 324, 327, 328], "879291": 2, "1141": 2, "328590": 2, "089360": 2, "15": [2, 62, 85, 98, 103, 118, 244, 292, 293, 301, 309, 311, 312, 313, 315, 316, 326, 327], "643216": 2, "879398": 2, "089417": 2, "643215": 2, "1549": 2, "085054": 2, "879290": 2, "085159": 2, "1762": 2, "173623": 2, "1809": 2, "825696": 2, "1758": 2, "944210": 2, "1803": 2, "746869": 2, "1694": 2, "621631": 2, "16": [2, 6, 62, 85, 98, 103, 118, 208, 225, 244, 292, 293, 301, 309, 311, 312, 313, 315, 316, 322, 324, 325, 326, 327], "408446": 2, "189053": 2, "192655": 2, "pop_cl_estim": [2, 301, 306, 311, 325], "52": [2, 62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 317, 326, 327], "38": [2, 62, 84, 87, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 327], "26": [2, 62, 98, 103, 118, 244, 292, 293, 301, 311, 313, 315, 316, 324, 326, 327], "1745": 2, "79": [2, 324], "1957": 2, "27": [2, 62, 98, 103, 118, 122, 244, 292, 293, 301, 309, 311, 313, 315, 316, 317, 325, 327, 328], "2704": 2, "34": [2, 62, 88, 98, 103, 118, 122, 244, 292, 293, 301, 313, 315, 316, 322, 324, 327], "25": [2, 62, 84, 87, 88, 98, 103, 105, 118, 155, 244, 292, 293, 301, 303, 309, 313, 315, 316, 317, 322, 324, 325, 327], "9013": 2, "30": [2, 62, 98, 103, 118, 244, 292, 293, 301, 306, 309, 311, 312, 313, 315, 316, 317, 322, 324, 327], "1949": 2, "71": [2, 301, 325], "0804": 2, "02": [2, 301, 324, 326, 328, 329], "96": [2, 105, 225, 292, 301, 316, 317], "07": [2, 54, 55, 56, 57, 65, 66, 67, 68, 292, 301, 309, 311, 315, 324, 326], "9011": 2, "88": 2, "1948": 2, "39": [2, 62, 98, 103, 118, 244, 292, 293, 301, 311, 313, 315, 316, 324, 325, 326, 327], "65": [2, 6, 301], "81": [2, 306, 309, 315], "2696": 2, "61": [2, 326], "0104": 2, "87": 2, "31": [2, 62, 84, 87, 98, 103, 118, 122, 244, 292, 293, 301, 313, 315, 316, 322, 324, 327, 329], "97": [2, 292, 301], "49": [2, 62, 98, 103, 118, 244, 292, 293, 313, 315, 316, 327], "1966": 2, "77": [2, 301], "2524": 2, "9690": 2, "50": [2, 36, 39, 62, 98, 103, 118, 189, 244, 292, 293, 313, 315, 316, 317, 322, 324, 327, 328], "0467": 2, "1553": 2, "85": 2, "4521": 2, "95": [2, 61, 292, 307], "5759": 2, "4243": 2, "09": [2, 38, 45, 47, 187, 196, 208, 301, 309, 316, 317, 318, 322, 328], "3609": 2, "5790": 2, "74": 2, "4290": 2, "29": [2, 62, 84, 87, 88, 98, 103, 118, 222, 224, 244, 292, 293, 295, 301, 309, 312, 313, 315, 316, 324, 327, 328], "2453": [2, 325], "pop_cl_s": 2, "pop_cl_rs": 2, "pop_clage_rs": 2, "pop_clsex_estim": [2, 301], "pop_clsex_s": 2, "026461": 2, "pop_clsex_rs": 2, "pop_vcage_estim": [2, 301], "008529": 2, "pop_vcage_s": 2, "pop_vcage_rs": 2, "pop_vcsex_estim": [2, 301], "pop_vcsex_s": 2, "085225": 2, "pop_vcsex_rs": 2, "40": [2, 62, 98, 101, 103, 118, 122, 155, 177, 209, 244, 292, 293, 303, 306, 313, 315, 316, 326, 327], "dbic": [2, 294, 309, 311, 317, 328], "161841": 2, "161837": 2, "621938": 2, "202851": 2, "202856": 2, "074229": 2, "307": 2, "175736": 2, "315": 2, "756711": 2, "328": 2, "628089": 2, "372": [2, 6], "646103": 2, "376": 2, "936563": 2, "385": [2, 309], "517482": 2, "580918": 2, "077247": 2, "786787": 2, "786682": 2, "400105": 2, "105929": 2, "43": [2, 62, 98, 103, 118, 244, 292, 293, 301, 306, 313, 315, 316, 326, 327], "027102": 2, "453856": 2, "775557": 2, "807676": 2, "142937": 2, "358728": 2, "summary_error": [2, 301, 306, 309, 311, 317, 328], "summarize_error": [2, 294, 301, 306, 309, 311, 317, 328], "datafram": [2, 6, 15, 18, 24, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 77, 80, 84, 85, 87, 88, 89, 98, 101, 103, 159, 160, 161, 162, 164, 167, 182, 183, 184, 185, 232, 242, 243, 244, 246, 264, 265, 266, 267, 272, 275, 278, 294, 303, 321], "messag": [2, 272, 294, 296, 301, 306, 309, 311, 317, 328], "index": [2, 10, 18, 24, 25, 27, 37, 50, 61, 64, 71, 72, 105, 122, 173, 192, 193, 264, 267, 278, 293, 294, 307, 308, 314, 316, 326, 331], "categori": [2, 6, 18, 35, 41, 166, 264, 296, 301, 306, 309, 311, 317, 328, 329], "error_no": [2, 301, 306, 309, 311, 317, 328], "plot": [2, 160, 161, 162, 163, 164, 294, 307, 313, 321], "found": [2, 8, 24, 109, 264, 282, 292, 293, 294, 299, 302, 305, 307, 308, 309, 311, 312, 314, 315, 317, 324, 325, 329, 330, 331], "report": [2, 237, 294, 299, 310, 321], "panda": [2, 6, 10, 294, 303, 304, 321], "io": [2, 299, 304, 308], "style": 2, "styler": 2, "0x7f1edf274700": 2, "nbsp": 2, "rse": [2, 292, 315], "pop_cl": [2, 4, 292, 316], "pop_vc": [2, 316], "116": 2, "1930": 2, "pop_qp1": [2, 316], "0001": 2, "pop_vp1": [2, 316], "0000": 2, "power1": 2, "6255": 2, "pop_vcag": 2, "0085": 2, "iiv_cl": [2, 17, 22, 25, 316, 318], "2298": 2, "iiv_cl_iiv_vc": [2, 316], "1802": 2, "iiv_vc": [2, 316], "3218": 2, "omega_iov_1": 2, "1347": [2, 301], "omega_iov_1_2": 2, "9914": 2, "omega_iov_2": 2, "0789": 2, "sigma1": 2, "4527": 2, "alt": [2, 160, 161, 162, 163, 164, 292, 307, 313], "layerchart": [2, 292, 313], "page": [3, 293, 295, 299, 306, 317, 318], "public": [3, 304], "modul": [3, 8, 294, 298, 303, 314, 316, 320, 331], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 303, 308, 312, 314, 316, 329], "relat": [3, 269, 273, 274, 276, 294, 297, 326], "statement": [3, 4, 8, 18, 32, 33, 35, 36, 38, 40, 41, 45, 46, 47, 73, 133, 156, 157, 158, 172, 174, 179, 180, 186, 187, 189, 194, 195, 196, 199, 202, 203, 206, 207, 208, 210, 211, 213, 216, 217, 220, 222, 223, 224, 225, 234, 294, 296, 301, 312, 316, 321], "transform": [3, 18, 33, 164, 186, 187, 190, 208, 222, 223, 224, 225, 294, 296, 308, 317, 318, 324, 330], "manipul": [3, 24, 303, 310, 316, 318, 330], "built": [3, 156, 241, 296, 299, 310], "run": [3, 77, 162, 164, 177, 207, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 267, 273, 280, 292, 293, 294, 302, 308, 310, 312, 313, 315, 320, 321, 324, 326, 327, 331], "packag": [3, 296, 304, 308, 310, 312, 319, 331], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 25, 27, 38, 58, 59, 61, 86, 91, 99, 110, 112, 121, 127, 131, 153, 186, 187, 197, 200, 207, 208, 218, 219, 294, 296, 297, 312, 314, 321, 327], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 297, 299, 310, 312, 314], "represent": [4, 240, 281, 303, 308, 318], "togeth": [4, 25, 199, 210, 299, 304, 307, 313, 325, 331], "sympi": [4, 6, 8, 17, 22, 25, 27, 32, 61, 86, 106, 109, 121, 131, 132, 134, 135, 146, 153, 186, 187, 196, 197, 200, 207, 208, 211, 218, 304, 314, 321], "str": [4, 6, 7, 8, 10, 17, 18, 22, 23, 25, 27, 29, 32, 35, 36, 37, 38, 39, 40, 41, 44, 46, 48, 53, 61, 74, 75, 79, 80, 82, 86, 91, 95, 102, 106, 109, 114, 124, 125, 126, 128, 131, 134, 135, 136, 146, 147, 153, 156, 159, 163, 164, 167, 168, 169, 171, 174, 175, 177, 179, 182, 186, 187, 189, 191, 192, 196, 197, 200, 204, 205, 207, 208, 211, 212, 218, 221, 222, 223, 224, 225, 228, 229, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 291, 294], "expr": [4, 9, 25, 27, 32, 36, 39, 91, 121, 153, 189, 197, 218, 219], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 25, 26, 27], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 25, 27, 297, 312, 321], "hand": [4, 8, 61], "side": [4, 8, 61, 190], "eta_cl": [4, 38, 41, 316, 318], "rhs_symbol": [4, 8, 26], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 270, 272, 274, 278, 279, 281], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 270, 272, 278], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 29, 34, 51, 182, 191, 209, 220, 222, 279, 281, 282, 294, 296, 303, 304, 316, 318, 328], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 29, 37, 192, 238, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 281, 294], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 25, 26, 27, 314], "substitut": [4, 5, 7, 8, 16, 17, 22, 25, 26, 27, 312, 316], "dict": [4, 5, 6, 10, 16, 17, 22, 24, 25, 27, 50, 63, 84, 85, 87, 88, 89, 94, 96, 99, 111, 112, 164, 181, 198, 201, 209, 214, 230, 269, 270, 273, 276, 277, 280, 281, 287, 303, 314], "old": [4, 27, 181, 294, 324], "new": [4, 6, 9, 10, 14, 17, 22, 23, 24, 25, 27, 28, 33, 38, 41, 45, 47, 48, 74, 78, 79, 90, 94, 95, 96, 181, 182, 186, 187, 196, 198, 200, 204, 207, 208, 229, 230, 233, 282, 283, 296, 297, 299, 303, 312, 316, 317, 320, 324, 325, 329], "pair": [4, 5, 8, 16, 17, 22, 25, 27, 35, 71, 209, 265, 296], "return": [4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 276, 278, 281, 283, 286, 287, 294, 312, 316, 328], "updat": [4, 9, 10, 18, 24, 27, 197, 218, 232, 233, 235, 294, 296, 299, 310, 312, 316, 317, 318, 321, 325, 330, 331], "b": [4, 36, 39, 125, 189, 312, 317], "to_dict": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 270, 272, 278], "amount": [5, 6, 7, 8, 16, 36, 111, 294, 303, 314, 317], "int": [5, 8, 9, 16, 27, 32, 37, 43, 50, 53, 61, 64, 72, 78, 104, 106, 109, 116, 117, 119, 120, 134, 135, 146, 173, 177, 182, 183, 184, 185, 186, 187, 192, 193, 196, 206, 207, 208, 211, 213, 254, 255, 259, 261, 264, 275], "amt": [5, 7, 8, 10, 16, 27, 32, 46, 73, 82, 83, 98, 105, 111, 133, 155, 156, 157, 158, 165, 166, 179, 194, 195, 199, 202, 203, 206, 209, 210, 213, 216, 217, 220, 303, 314, 316, 318], "dictionari": [5, 10, 14, 16, 17, 22, 24, 25, 28, 84, 85, 87, 88, 89, 99, 112, 182, 198, 201, 214, 269, 270, 273, 276, 277, 278, 280, 281, 287, 314], "unknown": [6, 153, 303], "unit": [6, 18, 131], "ratio": [6, 255, 261, 294, 296, 303, 325], "datatyp": [6, 18, 167], "float64": [6, 10, 60, 67, 68, 71, 86, 87, 88, 89, 105, 122, 241, 303, 314, 315, 316], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 23, 24, 25, 26, 27, 28, 29, 274, 278, 279, 281, 294, 316], "colum": 6, "measur": [6, 297, 303, 312], "bool": [6, 9, 18, 23, 29, 32, 33, 35, 39, 43, 48, 53, 60, 70, 72, 79, 82, 90, 111, 115, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 182, 184, 196, 207, 208, 213, 232, 233, 235, 236, 252, 253, 267, 268, 270, 275, 278, 286], "discret": [6, 303, 311], "union": [6, 106, 109, 134, 135, 146, 164, 186, 187, 196, 197, 207, 208, 211, 218], "tupl": [6, 7, 8, 25, 159, 182, 279, 287], "label": [6, 294], "bar": [6, 307], "dtype": [6, 10, 60, 63, 67, 68, 71, 72, 86, 87, 88, 89, 104, 105, 118, 122, 241, 303, 315, 316], "nomin": [6, 303], "ordin": [6, 303], "rang": [6, 80, 278, 329], "na": [6, 222], "int8": 6, "sign": [6, 224, 312], "bit": 6, "128": 6, "127": [6, 309], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 303], "147": 6, "483": 6, "648": 6, "647": [6, 309], "int64": [6, 118, 316], "64": 6, "223": [6, 302], "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 322], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 86, 104, 155, 209, 303, 315, 316], "073": 6, "709": 6, "551": 6, "615": [6, 322], "float16": 6, "binari": [6, 312], "float": [6, 23, 32, 38, 45, 47, 48, 52, 53, 71, 72, 75, 164, 177, 185, 200, 207, 211, 222, 242, 243, 244, 246, 252, 253, 255, 257, 258, 260, 261, 262, 275, 294], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 83, 226, 294, 296, 314], "tran": [6, 83, 226, 294, 296, 314], "date": [6, 80, 83, 226, 294, 296, 312, 331], "common": [6, 35, 64, 287, 312, 330], "birth": 6, "human": [6, 278, 321], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 303, 321], "concentr": [6, 39, 101, 303, 321], "substanc": 6, "blood": 6, "subject": [6, 14, 98, 108, 266, 303, 312], "uniqu": [6, 29, 51, 79, 182, 269, 283, 294, 296, 316, 329], "interv": [6, 303, 304], "ration": 6, "max": [6, 35, 36, 39, 189, 202, 203, 292, 316, 328], "idv": [6, 10, 160, 211, 303, 324], "independ": [6, 8, 303, 312, 314, 316, 319, 324, 329], "dv": [6, 10, 27, 73, 82, 83, 98, 106, 109, 122, 133, 134, 135, 146, 155, 156, 161, 162, 165, 166, 169, 186, 187, 196, 200, 202, 203, 207, 208, 209, 211, 222, 261, 294, 303, 314, 316, 318, 327], "dvid": [6, 18, 43, 91, 106, 109, 134, 135, 146, 186, 187, 191, 196, 207, 208, 211, 314, 322, 324, 325, 328], "infus": [6, 150, 210, 216, 294, 316], "addit": [6, 35, 38, 50, 53, 79, 90, 134, 135, 146, 149, 186, 187, 208, 222, 294, 296, 301, 303, 306, 312, 324, 325, 329], "interdos": 6, "ss": 6, "steadi": [6, 294], "state": [6, 24, 35, 294, 312, 326, 328], "event": [6, 31, 97, 107, 209, 226, 294, 297, 312], "mdv": [6, 113, 294], "miss": [6, 98, 103, 294], "yet": [6, 329], "exactli": 6, "lloq": [6, 177, 200, 222, 253, 294, 296, 316], "blq": [6, 177, 200, 222, 261, 294], "unkown": 6, "hasn": 6, "custom": [6, 35, 38, 41, 196, 296, 312, 321], "physic": [6, 131, 297, 303, 312], "recogn": [6, 205, 297, 312, 318], "without": [6, 9, 58, 59, 84, 85, 87, 88, 89, 110, 121, 127, 182, 271, 292, 294, 296, 299, 304, 312, 314], "static": [6, 10, 18, 279], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 25, 27, 30, 74, 133, 158, 213, 278, 294, 296, 329], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 23, 25, 70, 71, 72, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 294, 314, 316, 318, 328, 329, 331], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 294, 296, 321], "properti": [6, 14, 17, 22, 23, 24, 28, 312, 314], "lag_tim": [7, 9, 294], "bioavail": [7, 9, 33, 99, 170, 294, 329], "compartment": [7, 8, 30, 294, 296, 314], "system": [7, 8, 9, 14, 27, 30, 58, 59, 61, 81, 84, 85, 87, 88, 89, 110, 111, 121, 127, 137, 139, 140, 141, 144, 145, 148, 150, 197, 218, 220, 273, 294, 296, 298, 299, 310, 312, 314, 318], "lag": [7, 9, 42, 112, 176, 294], "enter": [7, 312], "fraction": [7, 185, 292, 307], "bolu": [7, 8, 27, 46, 73, 133, 156, 179, 194, 195, 199, 202, 203, 206, 213, 217, 220, 294, 296, 314, 316], "comp": [7, 8, 294], "a_centr": [7, 8, 27, 36, 73, 81, 111, 133, 156, 189, 197, 202, 203, 208, 217, 314, 316], "depot": [7, 8, 9, 43, 137, 145, 194, 210, 213, 294, 316, 317, 329], "alag": [7, 294], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 329], "builder": [8, 9, 281, 282], "graph": [8, 281, 296, 299, 328], "od": [8, 14, 27, 30, 47, 58, 59, 61, 84, 85, 87, 88, 89, 110, 111, 121, 127, 137, 139, 140, 141, 144, 148, 150, 197, 205, 218, 220, 294, 296], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 213, 329], "k21": [8, 329], "vector": [8, 17, 132, 183, 184, 185, 293, 307, 314], "load_example_model": [8, 10, 15, 27, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 58, 59, 60, 61, 62, 63, 64, 69, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 101, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 244, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 294, 308, 315, 316], "pprint": [8, 121], "ode_system": [8, 27, 36, 46, 179, 194, 195, 199, 202, 203, 206, 210, 213, 216, 217, 220, 294, 314, 316], "central_compart": 8, "outward": 8, "flow": [8, 9, 43, 46, 137, 145, 281, 312, 317], "compartment_nam": 8, "compartmental_matrix": [8, 314], "matrix": [8, 14, 17, 25, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 71, 132, 183, 184, 185, 218, 275, 293, 294, 296, 307, 314, 316], "set_first_order_absorpt": [8, 47, 199, 210, 216, 294, 316], "dosing_compart": 8, "receiv": [8, 312], "equat": [8, 61, 81, 314, 316], "zero_order_input": 8, "zero": [8, 9, 72, 132, 148, 150, 151, 158, 197, 210, 216, 217, 218, 294, 311, 316, 317, 319, 329], "set_zero_order_absorpt": [8, 194, 199, 210, 294, 316, 331], "atom": 8, "http": [8, 293, 303, 304, 307, 308, 312, 325], "doc": [8, 299], "org": [8, 293, 295, 303, 307, 312, 325], "latest": [8, 294, 304, 308], "core": [8, 308, 314], "html": [8, 237, 304, 312], "basic": [8, 25, 75, 76, 278, 294, 303, 312, 318, 329, 330], "find_compart": [8, 9, 36], "its": [8, 23, 27, 72, 80, 158, 265, 294, 296, 303, 304, 308, 310, 312, 314, 316, 328, 331], "find_depot": 8, "out": [8, 25, 39, 70, 233, 294, 312, 314, 320, 331], "outflow": 8, "unidirect": [8, 43, 137], "find_peripheral_compart": 8, "perihper": 8, "associ": [8, 297, 311, 312], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 23, 25, 221, 226, 239, 259, 264, 267, 269, 294, 296, 304, 307, 312, 328, 329], "distinguish": [8, 312], "get_bidirect": 8, "bidirect": 8, "interest": [8, 61, 297, 301, 312, 321], "get_compartment_inflow": 8, "go": [8, 134, 135, 146, 259, 267, 294, 303, 312, 316], "inflow": 8, "get_compartment_outflow": 8, "get_flow": 8, "destin": [8, 9, 235, 236, 269, 273, 276, 296], "ka": [8, 9, 40, 194, 210, 294, 311, 316], "get_n_connect": 8, "compartmentalsystem": [9, 27, 294, 314], "newli": [9, 25, 311], "move_dos": 9, "move": [9, 233, 294], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 170], "set_dos": 9, "previou": [9, 23, 25, 27, 42, 77, 104, 133, 194, 210, 213, 216, 253, 266, 286, 294, 296, 312, 317], "exist": [9, 10, 27, 34, 35, 50, 51, 76, 79, 102, 104, 222, 269, 270, 271, 294, 296, 298, 303, 311, 329], "argument": [9, 37, 84, 85, 87, 88, 89, 109, 192, 238, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 274, 279, 294, 296, 329, 331], "set_input": 9, "set_lag_tim": [9, 294], "force_absolute_path": 10, "sequenc": [10, 15, 24, 25, 27, 77], "metadata": [10, 269, 270, 273, 276, 277, 280, 294], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 80], "idv_column": 10, "apgr": [10, 27, 32, 35, 73, 82, 83, 98, 103, 115, 133, 136, 155, 156, 157, 158, 165, 166, 209, 228, 303, 307, 314, 316, 318, 324], "fa1": [10, 82, 83, 98, 155, 165, 166, 209, 303, 316], "fa2": [10, 82, 83, 98, 155, 165, 166, 209, 303, 316], "example_model": 10, "dta": [10, 165, 316, 318], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "read_json": 10, "read": [10, 167, 168, 169, 247, 248, 253, 268, 269, 270, 273, 276, 277, 280, 294, 298, 303, 308, 312, 315, 320, 321, 323, 329, 330], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 278, 303], "recover": 12, "issu": [12, 21, 294, 299, 310, 331], "hashabl": 13, "level": [13, 17, 22, 25, 28, 29, 109, 147, 222, 294, 296, 303, 310, 316, 321, 326, 329, 330], "variabilitylevel": 13, "parameter_nam": [13, 25, 95, 227, 229, 294, 318], "definit": [13, 14, 18, 27, 62, 184, 185, 244, 294, 296, 301, 307, 312, 314, 329], "varianc": [13, 17, 22, 25, 60, 61, 64, 196, 233, 309, 314, 329], "abstract": [13, 26, 273, 280, 293, 295, 304, 310, 314], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 25], "name1": [13, 17, 22, 163], "name2": [13, 17, 22, 163], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 314, 316], "parameter_uncertainty_method": [14, 15, 37, 44, 178, 192, 193, 256, 314, 316], "evalu": [14, 37, 84, 85, 86, 87, 88, 89, 192, 193, 256, 267, 275, 292, 294, 310, 314, 316, 321, 324, 327], "maximum_evalu": [14, 306, 314, 316], "laplac": [14, 37, 192, 193, 294, 296, 306, 314, 316], "isampl": [14, 37, 50, 192, 294, 306, 314, 316], "niter": [14, 37, 50, 192, 294, 306, 314, 316], "auto": [14, 15, 294, 306, 314, 316], "keep_every_nth_it": [14, 15, 294, 306, 314, 316], "residu": [14, 25, 89, 129, 160, 243, 244, 265, 275, 294, 325, 327, 329], "solver": [14, 205, 256, 294, 296, 329], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 37, 50, 192, 314, 316, 329], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 38, 74, 80, 275, 276, 277, 296, 298, 299, 301, 304, 312, 314, 316, 320], "epsilon": [14, 25, 58, 59, 84, 85, 166, 196, 207, 215, 222, 234, 294, 296, 304, 316], "calcul": [14, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 86, 101, 246, 292, 293, 294, 307, 309, 310, 311, 317], "deriv": [14, 131, 294, 299, 301, 316, 328], "eta": [14, 25, 27, 38, 41, 58, 59, 60, 62, 77, 84, 85, 87, 158, 164, 165, 166, 169, 174, 175, 196, 221, 223, 224, 225, 275, 294, 296, 304, 307, 309, 311, 314, 318, 324, 329], "preserv": [14, 25, 312], "comput": [14, 299, 300, 301, 312, 328], "sampl": [14, 25, 78, 182, 183, 184, 185, 307], "similar": [14, 292, 306, 312, 317, 325], "em": 14, "result": [14, 18, 25, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 77, 84, 85, 86, 87, 88, 89, 183, 184, 185, 232, 233, 237, 238, 239, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 280, 283, 286, 294, 297, 299, 310, 312, 318, 320, 321, 323, 330], "everi": [14, 222, 303, 312], "nth": 14, "iter": [14, 15, 27, 61, 159, 182, 184, 261, 275, 294, 316, 322, 325], "laplacian": 14, "uncertainti": [14, 44, 61, 62, 64, 178, 183, 184, 185, 256, 294, 296, 307, 315], "sandwich": [14, 15, 44, 192, 193, 314], "cross": [14, 312], "product": [14, 39, 297, 306, 312, 328, 329], "gradient": [14, 58, 59, 84, 85, 294], "fim": 14, "design": [14, 300, 312, 314, 321, 329], "append": [14, 50, 294], "uncondit": [14, 165, 316], "regardless": [14, 207, 297, 312, 314], "termin": [14, 275, 312], "print": [14, 70, 165, 166, 245, 278, 294, 316], "eigenvalu": [14, 141], "precond": 14, "precondit": 14, "cycl": 14, "solv": [14, 294], "advan": [14, 205, 294, 316], "cvode": [14, 205, 296], "advan14": [14, 205, 296], "dgear": [14, 205, 296], "advan8": [14, 205, 296], "dverk": [14, 205, 296], "advan6": [14, 205, 296], "ida": [14, 205, 296], "advan15": [14, 205, 296], "lsoda": [14, 205, 296, 306], "advan13": [14, 205, 296, 316], "lsodi": [14, 205, 296, 306], "advan9": [14, 205, 296], "absolut": [14, 71, 294, 312], "toler": 14, "supported_method": [14, 306], "frozenset": 14, "bay": [14, 192, 193, 296], "imp": [14, 37, 192, 193, 256, 294, 296, 306, 316], "impmap": [14, 37, 192, 193, 294, 296], "ITS": [14, 37, 192, 193, 294, 296, 311, 317, 328], "saem": [14, 37, 192, 193, 256, 294, 296], "supported_parameter_uncertainty_method": 14, "cpg": 14, "efim": 14, "ofim": 14, "supported_solv": [14, 306], "to_datafram": [15, 24, 272], "overview": [15, 272, 292, 296, 305, 314, 326], "estimation_step": [15, 18, 37, 44, 50, 173, 178, 192, 193, 294, 314, 316], "doctest": 15, "ellipsi": 15, "durat": [16, 210, 216, 316], "mutual": [16, 311, 329], "exclus": [16, 312, 329], "d1": [16, 210, 216, 294, 316], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 25, 41, 77, 221, 307, 311, 316], "omega_cl": [17, 22, 25], "omega_v": [17, 25], "corr_cl_v": [17, 25], "omega_cl_v": [17, 25], "dist": [17, 22, 25, 294, 299, 314], "iiv_v": [17, 25], "itself": [17, 22, 312], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 25], "random_vari": [18, 77, 221, 314, 316, 331], "dependent_vari": [18, 294, 314], "y": [18, 24, 27, 73, 106, 131, 133, 156, 165, 166, 169, 172, 186, 187, 196, 207, 208, 211, 222, 234, 314, 316, 318], "observation_transform": [18, 294], "estimationstep": [18, 37, 44, 178, 192, 193, 294, 306, 314], "modelfit_result": [18, 244, 267, 274, 294], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 294, 299, 314, 318, 321], "map": [18, 30, 303], "extens": [18, 269, 271, 303, 312, 314], "model_cod": [18, 294], "modelfit": [18, 241, 259, 267, 269, 273, 274, 275, 276, 292, 294, 296, 330], "parent": [18, 265, 266, 274, 283, 306, 328], "randomvari": [18, 294, 314], "likelihood": [18, 52, 53, 222, 255, 261, 296, 325], "2ll": [18, 52, 53, 294], "log": [18, 35, 36, 38, 53, 158, 186, 187, 189, 190, 208, 274, 275, 294, 303, 307], "record": [18, 84, 85, 86, 87, 88, 89, 90, 159, 177, 200, 275, 294, 299, 318], "would": [18, 29, 158, 292, 301, 307, 312, 316, 318, 321], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 294, 310, 318, 320, 329], "parse_model_from_str": 18, "update_sourc": [18, 294, 318], "g": [18, 25, 73, 79, 175, 260, 294, 299, 303, 306, 307, 309, 311, 317, 321, 325, 329], "dummypath": [18, 316], "write_fil": 18, "forc": [18, 25, 79, 184, 185, 232, 235, 236, 294, 296, 311, 312], "write": [18, 235, 236, 268, 294, 299, 300, 301, 312, 320, 330], "extern": [18, 247, 299, 303, 304, 308, 320, 321], "msg": 20, "syntax": [20, 294, 329], "normal": [22, 25, 29, 41, 63, 69, 158, 307, 311, 312], "init": [23, 24, 35, 48, 96, 198, 230, 233, 296, 307, 314], "inf": [23, 316], "param": [23, 296], "tvcl": [23, 27, 32, 38, 41, 73, 86, 133, 156, 157, 158, 165, 166, 174, 307, 314, 316, 318], "005": 23, "boolean": [23, 24, 90, 95, 96, 182, 190, 196, 229, 230, 242, 243, 244, 303], "constrain": [23, 304, 314], "unfix": [23, 94, 95, 96, 198, 227, 229, 230, 294], "back": [23, 69, 294], "less": 23, "greater": 23, "altern": [23, 224, 299, 312], "constructor": [23, 294], "collect": [24, 25, 307, 312, 329], "usual": [24, 299], "displai": [24, 81, 186, 294, 307, 312], "summar": [24, 264, 266, 267, 307, 313], "par1": 24, "par2": 24, "pset": 24, "fixed": [24, 94], "nonfix": 24, "set_fix": 24, "set_initial_estim": [24, 294, 316], "100": [24, 35, 37, 50, 183, 192, 225, 292, 296, 301, 315, 316, 319, 326, 328], "eta_level": 25, "epsilon_level": 25, "act": [25, 191], "while": [25, 299, 316, 328, 329, 331], "variabilityhierarchi": 25, "contin": 25, "hierarchi": [25, 28], "rv": [25, 77, 128, 180, 221, 314, 331], "normaldistribut": [25, 314], "covariance_matrix": [25, 54, 61, 64, 66, 67, 184, 275, 292, 294, 315], "nrv": 25, "variance_paramet": 25, "rv1": 25, "rv2": 25, "get_rvs_with_same_dist": 25, "join": [25, 221, 294, 297], "ind": 25, "fill": 25, "name_templ": 25, "param_nam": 25, "cov": [25, 35, 54, 61, 62, 64, 66, 67, 184, 293, 294, 299, 306, 307, 316], "taken": [25, 90, 98, 103, 226, 269, 303, 307], "remain": [25, 91, 222, 297, 312], "templat": [25, 35, 38, 76, 298], "overrid": [25, 294, 298, 329], "dist1": 25, "dist2": 25, "_": [25, 266, 293, 307], "unjoin": 25, "nearest_valid_paramet": 25, "parameter_valu": 25, "small": 25, "parameters_sdcorr": 25, "sd": [25, 60, 316, 324, 327], "corr": [25, 56, 65, 324], "var": [25, 62, 307], "replace_with_sympy_rv": 25, "stat": [25, 27, 329], "std": [25, 316], "rng": [25, 61, 64, 78, 183, 184, 185], "jointnormaldistribut": [25, 314], "validate_paramet": 25, "seri": [25, 56, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 86, 87, 88, 89, 97, 100, 104, 105, 107, 113, 118, 122, 163, 164, 184, 185, 186, 222, 224, 233, 275, 294, 315], "matric": [25, 62, 185, 294, 304, 315], "semidefinit": [25, 294, 304], "use_cach": 25, "symengin": [25, 304, 321], "cach": 25, "signific": [27, 72, 257, 258, 260, 294, 312, 326], "after_od": [27, 208], "s\u2081": [27, 32, 73, 133, 156, 157, 158, 166, 208, 314], "eps\u2081": [27, 73, 121, 133, 156, 166, 172, 186, 196, 207, 211, 222, 234, 314], "ipr": [27, 73, 87, 133, 156, 161, 165, 166, 207, 208, 294, 314, 315, 316, 327], "ir": [27, 73, 133, 156, 165, 166, 208, 314, 316], "iwr": [27, 73, 133, 156, 165, 166, 208, 314, 316], "before_od": [27, 32, 35, 157, 158, 223, 224, 225], "btime": [27, 32, 73, 133, 156, 157, 158, 165, 166, 314, 316], "tad": [27, 32, 49, 73, 133, 156, 157, 158, 165, 166, 294, 314, 316, 324], "ptvcl": [27, 32, 35, 48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 73, 94, 95, 96, 130, 133, 156, 157, 158, 165, 166, 184, 185, 198, 201, 214, 219, 223, 224, 225, 227, 229, 230, 233, 241, 314, 315, 316], "tvv": [27, 32, 73, 133, 156, 157, 158, 165, 166, 174, 307, 314, 316, 318], "ptvv": [27, 32, 48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 73, 130, 133, 156, 157, 158, 165, 166, 184, 185, 229, 230, 233, 241, 314, 315, 316], "theta\u2083": [27, 32, 73, 133, 156, 157, 158, 166, 314], "eta\u2081": [27, 32, 73, 77, 121, 133, 156, 157, 158, 166, 221, 314], "\u212f": [27, 32, 45, 47, 73, 133, 156, 157, 158, 196, 314, 316], "eta\u2082": [27, 32, 73, 77, 121, 133, 156, 157, 158, 166, 221, 314], "whole": [27, 296, 303, 312, 329], "s1": [27, 147, 165, 316, 318], "symbol_or_stat": 27, "direct_depend": 27, "direct": [27, 281, 301, 312, 326, 328, 329], "find_assign": [27, 38, 40, 41, 45, 47, 172, 174, 186, 187, 189, 196, 207, 211, 222, 234], "find_assignment_index": 27, "full_express": [27, 35, 223, 224, 225], "expand": [27, 90], "full": [27, 77, 110, 121, 127, 212, 293, 294, 296, 298, 307, 311, 312, 317, 324], "eta_1": [27, 35, 58, 60, 62, 77, 110, 124, 128, 158, 183, 221, 223, 224, 225, 307, 314, 315, 316], "reassign": 27, "sypmpi": 27, "remove_symbol_definit": 27, "elsewher": 27, "longer": [27, 294], "make": [27, 73, 109, 157, 172, 181, 182, 255, 294, 299, 304, 311, 312, 314, 317, 329, 331], "sure": [27, 181, 294, 312, 331], "unless": [27, 278, 312], "func": [30, 279], "presenc": [31, 34, 97, 100], "correctli": [31, 34, 97, 294], "get_admid": [31, 34], "get_cmt": [31, 34, 294, 316], "p": [32, 246, 255, 261, 292, 293, 294, 296, 301, 307, 316, 325, 326], "allometri": [32, 252, 253, 294, 329], "allo_cl": 32, "allo_v": 32, "add_paramet": [33, 294], "logit_transform": 33, "logit": [33, 38, 294], "remove_bioavail": [33, 294], "allow_nest": [35, 294], "linear": [35, 36, 39, 125, 140, 141, 152, 189, 292, 293, 294, 304, 314, 316, 321, 323, 328, 329], "lin": 35, "coveff": [35, 79], "median": [35, 61, 64, 292, 294, 316, 321], "001": [35, 72, 233, 255, 261, 294, 301, 316, 325, 326], "equal": [35, 41, 182, 196, 296, 299], "minimum": [35, 304], "000": [35, 315], "frac": [35, 36, 39, 186, 187, 189, 293, 314, 316, 327], "min": [35, 186, 187, 292, 316], "piecewis": [35, 294], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 316], "theta2": [35, 316], "pow": [35, 316], "mai": [35, 222, 309, 311, 312, 316, 317, 329], "abbrevi": [35, 38, 294, 296, 299, 318], "multipli": [35, 38, 196, 292, 296, 316], "alreadi": [35, 76, 191, 197, 218, 294, 296, 299, 311, 312, 317], "pop_clapgr": 35, "cdot": [36, 38, 39, 46, 179, 189, 307, 314, 316], "slope": [36, 39, 125, 189], "bigg": [36, 189], "e_": [36, 39, 189], "ec_": [36, 39, 189], "biggl": [36, 189], "lbrace": [36, 189], "quad": [36, 189], "leq": [36, 189, 307], "atop": [36, 189], "els": [36, 70, 189, 222, 294, 316], "sigmoid": [36, 39, 189], "bigl": [36, 189], "c_0": [36, 189], "loglin": [36, 189], "a_effect": 36, "ke0": 36, "idx": [37, 50, 173, 192, 193, 331], "pass": [37, 78, 192, 238, 246, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 283, 312], "opt": [37, 50, 192, 298], "1000": [37, 50, 86, 192, 307], "len": [37, 50, 173, 177], "set_estimation_step": [37, 44, 50, 173, 178, 193, 294, 316, 331], "remove_estimation_step": [37, 44, 50, 178, 192, 193, 316], "append_estimation_step_opt": [37, 44, 173, 178, 192, 193, 294, 316], "add_parameter_uncertainty_step": [37, 50, 173, 178, 192, 193, 316], "remove_parameter_uncertainty_step": [37, 44, 50, 173, 192, 193, 316], "set_evaluation_step": [37, 44, 50, 173, 178, 192, 316], "initial_estim": [38, 45, 47], "eta_nam": [38, 41, 196, 296], "prop": [38, 316], "rescal": 38, "re_log": 38, "user": [38, 102, 294, 303, 304, 309, 311, 312, 314, 315, 316, 317, 318], "phi": [38, 294, 299, 316, 329], "remove_iiv": [38, 41, 45, 47, 175, 294, 316, 318], "add_pk_iiv": [38, 41, 174, 175, 294, 316, 317], "add_iov": [38, 45, 47, 174, 175, 294, 316], "remove_iov": [38, 41, 45, 47, 174, 294, 316], "prod": 39, "indirect": [39, 312, 328, 329], "turnov": 39, "c_c": 39, "impact": [39, 324], "degrad": [39, 328, 329], "respons": [39, 312], "dr": 39, "dt": [39, 81, 316], "k_": 39, "inhibit": 39, "stimul": 39, "r_0": 39, "pop_ka": [40, 48], "occ": [41, 258, 296, 301, 311], "disjoint": [41, 311], "accept": [41, 116, 117, 118, 296, 312], "explicit": [41, 294, 296, 297, 311, 329], "copi": [41, 123, 129, 130, 294, 309, 311, 312, 316, 329], "add_iiv": [41, 45, 47, 174, 175, 294, 316, 318], "set_transit_compart": [42, 176, 294, 316], "remove_lag_tim": [42, 294, 316], "drug_dvid": 43, "presystem": [43, 145, 294, 328], "directli": [43, 101, 139, 269, 273, 276, 294, 296, 304, 312, 314, 316, 321, 329], "present": [43, 97, 100, 107, 296, 303, 307, 312, 317, 329], "wether": 43, "presystemet": 43, "add_estimation_step": [44, 50, 173, 178, 192, 193, 294, 316], "set_direct_effect": [45, 125, 294], "ec_50": [45, 253, 262], "ec\u2085\u2080": 45, "pop_ec_50": 45, "eta_ec_50": 45, "parameter": 46, "qpn": 46, "vpn": 46, "volumn": 46, "mathsf": [46, 179], "qp2": [46, 179, 294], "vp2": [46, 179], "peripheral1": [46, 179, 206, 316], "v1": [46, 179, 206, 316], "v2": [46, 179, 206, 316], "set_peripheral_compart": [46, 179, 294, 316], "remove_peripheral_compart": [46, 206, 294, 316], "Will": [47, 269, 270, 271], "pop_mat": [47, 316, 318], "eta_mat": [47, 316], "004693": [48, 63, 130, 307, 314], "1000000": [48, 94, 95, 96, 130, 198, 201, 227, 230, 314], "009160": [48, 130, 314], "theta_3": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 130, 184, 185, 229, 230, 233, 241, 314, 315, 316], "100000": [48, 130, 306, 314, 316], "99": [48, 130, 165, 233, 292, 301, 314, 316], "ivcl": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 77, 123, 165, 166, 184, 185, 221, 230, 233, 241, 292, 307, 314, 315, 316, 318], "030963": [48, 123, 307, 314], "ivv": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 71, 72, 77, 123, 165, 166, 184, 185, 221, 230, 233, 241, 292, 307, 314, 315, 316], "031128": [48, 123, 165, 233, 307, 314, 316, 318], "sigma_1_1": [48, 54, 55, 56, 57, 63, 65, 66, 67, 68, 72, 129, 184, 185, 230, 233, 241, 292, 314, 315, 316], "013241": [48, 129, 165, 233, 241, 307, 314, 315, 316], "increas": [51, 299], "until": [51, 267, 312, 331], "do": [51, 184, 292, 294, 296, 299, 307, 312, 318, 325, 331], "noth": [51, 177, 222, 312], "next": [51, 294, 312, 316, 317, 318, 325], "run2": [51, 204, 316], "run3": [51, 316], "n_estimated_paramet": [52, 53], "fit": [52, 53, 164, 222, 245, 259, 265, 267, 273, 294, 312, 314, 316, 325, 330, 331], "multiple_test": 53, "mult_test_p": [53, 246], "mult_test_": 53, "variat": 53, "n_random_paramet": 53, "n_individu": 53, "n_fixed_paramet": 53, "n_observ": 53, "n_individ": 53, "n_estimated_iiv_omega_paramet": 53, "penalti": 53, "mbic": [53, 257, 260], "n_predictor": 53, "n_expected_model": 53, "mult_test": 53, "load_example_modelfit_result": [53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 84, 85, 86, 87, 88, 89, 183, 184, 185, 232, 233, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 294], "611": 53, "7071686183284": 53, "616": [53, 294, 315], "536606983396": 53, "610": 53, "7412809453149": 53, "594": 53, "431131169692": 53, "411510e": [54, 57, 66, 67, 315], "08": [54, 56, 57, 66, 67, 301, 315], "010000e": [54, 57, 66, 67, 315], "000002": [54, 56, 57, 66, 67, 292, 315], "000001": [54, 56, 57, 61, 64, 66, 67, 292, 311, 315, 317], "538630e": [54, 56, 57, 66, 67, 315], "178090e": [54, 57, 66, 67, 315], "233530e": [54, 57, 66, 67, 315], "04": [54, 55, 56, 57, 65, 66, 67, 68, 292, 301, 311, 315, 324, 326, 328], "000804": [54, 56, 57, 66, 67, 301, 315], "000050": [54, 56, 57, 66, 67, 315], "171840e": [54, 57, 66, 67, 315], "461760e": [54, 57, 66, 67, 315], "665010e": [54, 57, 66, 67, 315], "06": [54, 56, 57, 66, 67, 292, 301, 309, 311, 315, 324, 326, 329], "040250e": [54, 57, 66, 67, 315], "007016": [54, 56, 57, 66, 67, 315], "000108": [54, 56, 57, 66, 67, 315], "944800e": [54, 57, 66, 67, 315], "932950e": [54, 57, 66, 67, 315], "093430e": [54, 57, 66, 67, 315], "981380e": [54, 56, 57, 66, 67, 315], "000180": [54, 56, 57, 66, 67, 315], "856650e": [54, 57, 66, 67, 315], "867230e": [54, 57, 66, 67, 315], "000039": [54, 56, 57, 66, 67, 315], "000019": [54, 56, 57, 66, 67, 315], "589820e": [54, 56, 57, 66, 67, 315], "685650e": [54, 57, 66, 67, 315], "000029": [54, 56, 57, 66, 67, 315], "000005": [54, 56, 57, 66, 67, 315], "195640e": [54, 57, 66, 67, 315], "007099": [54, 55, 56, 65, 315], "094640": [54, 55, 56, 65, 315], "388059": [54, 55, 56, 65, 71], "097981": [54, 55, 56, 65, 315], "170820": [54, 55, 56, 65, 315], "356899": [54, 55, 56, 65, 71], "138062": [54, 55, 56, 65, 315], "356662": [54, 55, 56, 65, 71, 315], "238441": [54, 55, 56, 65], "096515": [54, 55, 56, 65], "062991": [54, 55, 56, 65, 315], "153616": [54, 55, 56, 65, 315], "185111": [54, 55, 56, 65, 315], "159170": [54, 55, 56, 65, 315], "027495": [54, 55, 56, 65, 315], "calculate_se_from_cov": [54, 55, 56, 57, 65, 66, 68, 294], "calculate_se_from_prec": [54, 55, 56, 57, 65, 66, 67], "precis": [54, 55, 56, 57, 65, 66, 67, 68, 275, 294, 312], "calculate_cov_from_prec": [54, 55, 56, 65, 66, 67, 68], "calculate_cov_from_corrs": [54, 55, 57, 65, 66, 67, 68, 294], "calculate_prec_from_cov": [54, 55, 56, 57, 65, 67, 68], "calculate_prec_from_corrs": [54, 55, 56, 57, 66, 67, 68], "calculate_corr_from_prec": [54, 56, 57, 65, 66, 67, 68], "precision_matrix": [55, 57, 68, 275, 315], "prec": [55, 57, 68], "995567e": [55, 57, 66, 68], "22660": [55, 57, 65, 66, 68, 315], "028196": [55, 57, 66, 68], "16057": [55, 57, 65, 66, 68, 315], "855248": [55, 57, 66, 68], "203511": [55, 57, 65, 66, 68, 315], "614428": [55, 57, 66, 68], "39474": [55, 57, 65, 66, 68, 315], "250514": [55, 57, 66, 68], "820118": [55, 57, 66, 68], "299536": [55, 57, 66, 68], "266003e": [55, 57, 66, 68], "2129": [55, 57, 65, 66, 68, 315], "904642": [55, 57, 66, 68], "260": [55, 57, 65, 66, 68, 315], "176234": [55, 57, 66, 68], "375": [55, 57, 65, 66, 68, 315], "266233": [55, 57, 66, 68], "2800": [55, 57, 65, 66, 68, 315], "816246": [55, 57, 66, 68], "7718": [55, 57, 65, 66, 68, 315], "769557": [55, 57, 66, 68], "605786e": [55, 57, 66, 68], "187": [55, 57, 65, 66, 68, 315], "038903": [55, 57, 66, 68], "177": [55, 57, 65, 66, 68, 294, 315, 326], "207683": [55, 57, 66, 68], "205": [55, 57, 65, 66, 68, 315], "808480": [55, 57, 66, 68], "2225": [55, 57, 65, 66, 68, 315], "150449": [55, 57, 66, 68], "035116e": [55, 57, 66, 68], "7527": [55, 57, 65, 66, 68, 315], "530027": [55, 57, 66, 68], "2462": [55, 57, 65, 66, 68, 315], "974821": [55, 57, 66, 68], "9977": [55, 57, 65, 66, 68, 315], "488860": [55, 57, 66, 68], "947425e": [55, 57, 66, 68], "22343": [55, 57, 65, 66, 68, 315], "198618": [55, 57, 66, 68], "9370": [55, 57, 65, 66, 68, 315], "758371": [55, 57, 66, 68], "201183e": [55, 57, 66, 68], "249847": [55, 57, 66, 68, 315], "177845": [55, 57, 66, 68], "calculate_corr_from_cov": [55, 56, 57, 65, 66, 67, 68, 294], "se": [56, 65, 300, 301, 315], "correlation_matrix": [56, 65, 71, 275, 315], "standard_error": [56, 65, 275, 315], "411512e": 56, "009998e": 56, "178111e": 56, "233518e": 56, "171834e": 56, "461762e": 56, "665011e": 56, "040245e": 56, "944801e": 56, "932957e": 56, "093431e": 56, "856651e": 56, "867245e": 56, "685661e": 56, "195664e": 56, "pheno_linear": [58, 59, 84, 85, 87, 88, 89, 110, 121, 127, 152, 156, 241, 246], "d_eps1": [58, 121], "d_epseta1_1": [58, 121], "oeta1": [58, 110, 127], "d_epseta1_2": [58, 121], "eta_2": [58, 60, 62, 77, 110, 183, 221, 315, 316], "oeta2": [58, 110, 127], "calculate_eta_gradient_express": [58, 294], "d_eta1": [59, 110, 121, 127], "d_eta2": [59, 110, 121, 127], "calculate_epsilon_gradient_express": [59, 294], "parameter_estim": [60, 61, 62, 64, 72, 86, 88, 89, 164, 184, 185, 233, 241, 275, 292, 294, 314, 315], "individual_estim": [60, 77, 84, 85, 87, 164, 183, 232, 275, 294, 315], "shrinkag": [60, 62], "deviat": [60, 234, 275, 292, 307, 313, 315, 316, 324, 327], "pe": [60, 61, 62, 64, 86, 88, 184, 185], "ie": [60, 183, 232], "720481": 60, "240295": 60, "471305": 60, "128389": 60, "calculate_individual_shrinkag": [60, 294], "expr_or_expr": 61, "arbitrari": [61, 64], "solut": [61, 220], "th": [61, 293, 307], "percentil": [61, 292, 307], "previous": [61, 64, 162, 164, 294, 318], "seed": [61, 64, 78, 183, 185, 296], "create_rng": [61, 64, 183, 184, 185], "k": [61, 293, 294, 299, 301, 307], "stderr": [61, 64, 292, 329], "p5": [61, 64, 307], "004234": [61, 64], "001138": [61, 64], "004907": [61, 64], "001247": [61, 64], "p95": [61, 64, 307], "individual_estimates_covari": [62, 183, 275, 294, 315], "ieta_shr": 62, "847789": 62, "256473": 62, "796643": 62, "210669": 62, "755025": 62, "226957": 62, "764541": 62, "216405": 62, "816192": 62, "203974": 62, "778108": 62, "210992": 62, "659420": 62, "236875": 62, "668551": 62, "240097": 62, "260056": 62, "200374": 62, "725190": 62, "226563": 62, "972110": 62, "421852": 62, "249640": 62, "254119": 62, "730294": 62, "364932": 62, "165785": 62, "194464": 62, "813399": 62, "313554": 62, "797328": 62, "213211": 62, "769059": 62, "278079": 62, "098506": 62, "176778": 62, "749022": 62, "235386": 62, "742181": 62, "222932": 62, "21": [62, 84, 87, 98, 103, 118, 244, 292, 293, 301, 306, 307, 313, 315, 316, 322, 324, 327, 328], "317956": 62, "264473": 62, "943950": 62, "232732": 62, "707183": 62, "259077": 62, "553787": 62, "247717": 62, "826349": 62, "114302": 62, "854777": 62, "341384": 62, "820829": 62, "263235": 62, "28": [62, 84, 87, 88, 98, 103, 118, 222, 244, 292, 293, 301, 309, 312, 313, 315, 316, 324, 327, 328], "999942": 62, "319986": 62, "967084": 62, "432760": 62, "404773": 62, "325215": 62, "999980": 62, "318421": 62, "925283": 62, "167667": 62, "33": [62, 98, 103, 118, 122, 244, 293, 301, 313, 315, 316, 317, 326, 327], "913706": 62, "242106": 62, "875554": 62, "249197": 62, "35": [62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 325, 327], "849135": 62, "294294": 62, "36": [62, 64, 98, 103, 118, 244, 292, 293, 301, 309, 311, 313, 315, 316, 317, 324, 327], "172206": [62, 327], "246422": 62, "37": [62, 98, 103, 105, 118, 155, 209, 244, 293, 301, 303, 313, 315, 316, 327], "747380": 62, "278340": 62, "187440": 62, "231249": 62, "237805": 62, "254485": 62, "999925": 62, "189793": 62, "41": [62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 324, 327], "941906": 62, "170998": 62, "42": [62, 64, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 317, 326, 327], "923801": 62, "244046": 62, "999928": 62, "320403": 62, "44": [62, 98, 103, 118, 244, 292, 293, 313, 315, 316, 327], "237637": 62, "260453": 62, "45": [62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 327], "869540": 62, "194503": 62, "46": [62, 98, 103, 118, 244, 292, 293, 306, 313, 315, 316, 327], "999949": 62, "319750": 62, "47": [62, 98, 103, 118, 122, 244, 292, 293, 313, 315, 316, 317, 322, 324, 327], "983782": 62, "393234": 62, "48": [62, 98, 103, 105, 118, 244, 292, 293, 301, 313, 315, 316, 325, 326, 327], "698267": 62, "169337": 62, "776674": 62, "214962": 62, "688847": 62, "192608": 62, "51": [62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 327, 329], "822213": 62, "202534": 62, "511489": 62, "273601": 62, "53": [62, 98, 103, 118, 244, 292, 293, 301, 313, 315, 316, 322, 324, 327], "964757": 62, "223448": 62, "762153": 62, "181648": 62, "965657": 62, "435741": 62, "995278": 62, "354798": 62, "813382": 62, "263372": 62, "727295": 62, "232867": 62, "738777": 62, "224742": 62, "calculate_eta_shrinkag": [62, 294], "ucp": [63, 69], "ucpscal": [63, 69], "calculate_ucp_scal": [63, 294], "00916": [63, 165, 233, 307, 314, 316, 318], "0309626": [63, 165, 233, 314, 316, 318], "031127999999999996": 63, "013241000000000001": 63, "convers": [63, 294, 310, 328], "pharmacokinet": [64, 222, 316], "pre": [64, 145], "t_half_elim": 64, "173": 64, "337164": 64, "1769": 64, "493756": 64, "843398": 64, "149": [64, 311], "567842": 64, "1317": [64, 301], "474199": 64, "233070": 64, "k_e": 64, "calculate_individual_parameter_statist": [64, 294], "995565e": 65, "041788": 65, "848052": 65, "410335": 65, "240358": 65, "820116": [65, 315], "179011": 65, "266004e": 65, "908225": 65, "176399": 65, "266263": 65, "818557": 65, "757955": 65, "605785e": 65, "038825": 65, "207512": 65, "808434": 65, "144772": 65, "035114e": 65, "518562": 65, "972906": 65, "457873": 65, "947424e": 65, "197906": 65, "736254": 65, "201162e": 65, "249846": 65, "006431": 65, "000210": [67, 68, 315], "026895": [67, 68, 315], "083762": [67, 68, 315], "013415": [67, 68, 315], "007477": [67, 68, 315], "002279": [67, 68, 315], "unconstrain": 69, "calculate_parameters_from_ucp": [69, 294], "verbos": 70, "consist": [70, 301, 312, 329], "across": [70, 294, 312], "consol": 70, "fail": [70, 294, 312, 321], "cor": [71, 299], "highli": 71, "high": [71, 303, 304, 321], "zero_limit": 72, "significant_digit": [72, 275, 294], "close": [72, 233, 294, 307, 312, 313], "distanc": [72, 80, 327], "logic": [72, 317], "cleanup": 73, "what": [73, 312, 318, 321], "inlin": 73, "clean": 73, "might": [73, 312, 321, 329, 331], "certain": [73, 106, 109, 159, 294, 298, 311, 312, 320, 329], "to_format": 74, "inplac": 74, "nlmixr": [74, 259, 294, 299, 315, 316], "rxode": [74, 294, 315], "underli": [74, 114, 165, 314], "converted_model": 74, "applic": [75, 268, 286, 312, 321, 329], "config": [76, 102, 294, 298, 299, 319], "configur": [76, 294, 308, 315, 318, 329, 330], "overwritten": [76, 269], "block": [77, 174, 207, 294, 296, 307, 309, 316, 317, 324, 329], "iiv_cl_iiv_v": [77, 221], "split_joint_distribut": [77, 294, 316], "through": [78, 296, 297, 298, 301, 312, 314, 316, 329], "numpi": [78, 303, 304, 314], "standard_norm": 78, "5532605888887387": 78, "stem": 79, "force_numb": 79, "coveff1": 79, "temp": 79, "temp1": 79, "cl1": 79, "df": [80, 85, 266, 294, 303, 322, 324], "date_column": 80, "deidentifi": [80, 294], "year": [80, 294, 299, 312], "earliest": 80, "maintain": [80, 297, 299, 300, 310, 312, 320, 321], "leap": 80, "1901": 80, "1902": 80, "1903": 80, "1904": 80, "closest": 80, "preceed": 80, "ordinari": [81, 314], "odedisplay": 81, "display": 81, "column_nam": [82, 228], "mark": [82, 83, 90, 228, 296, 312], "drop_dropped_column": [82, 228, 294, 316], "undrop_column": [82, 294, 316], "undrop": [82, 228], "drop_column": [83, 228, 294, 316], "them": [83, 182, 297, 309, 311, 312, 317, 318, 325, 328, 329], "dy": 84, "deps_1": 84, "771084": [84, 87], "881859": [84, 87], "441728": [84, 87], "113050": [84, 87], "783055": [84, 87], "150": [84, 85, 87, 88, 89, 315], "375041": [84, 87], "151": [84, 85, 87, 88, 89, 322], "833395": [84, 87], "152": [84, 85, 87, 88, 89], "876707": [84, 87], "153": [84, 85, 87, 88, 89, 302], "905095": [84, 87], "154": [84, 85, 87, 88, 89], "099690": [84, 87], "155": [84, 85, 87, 88, 89, 117, 122, 315, 316], "evaluate_eta_gradi": [84, 294], "deta_1": 85, "deta_2": 85, "159537": 85, "609116": 85, "325893": 85, "562289": 85, "104417": 85, "346161": 85, "452951": 85, "682310": 85, "838840": 85, "981836": 85, "424423": 85, "973013": 85, "497185": 85, "344797": 85, "198714": 85, "697161": 85, "987731": 85, "941806": 85, "817067": 85, "309945": 85, "evaluate_epsilon_gradi": [85, 294], "573770": 86, "739": [86, 104, 155, 209, 303, 316], "165105": 86, "741": [86, 104, 155, 209, 303, 316], "742": [86, 104, 155, 209, 303, 316], "743": [86, 104, 155, 209, 303, 316], "evaluate_population_predict": [87, 294], "529739": 88, "179910": 88, "688648": 88, "798916": 88, "023225": 88, "459036": 88, "223295": 88, "217288": 88, "472888": 88, "226455": 88, "evaluate_individual_predict": [88, 294], "wre": [89, 294], "313859": 89, "675721": 89, "544240": 89, "921720": 89, "517677": 89, "223935": 89, "053334": 89, "007023": 89, "931252": 89, "778389": 89, "flag": [90, 294, 316, 327, 329], "origin": [90, 235, 269, 273, 276, 292, 293, 297, 299, 307, 312, 327], "care": [90, 269], "accord": [91, 121, 294, 312, 317, 328, 329], "queri": 91, "00469307": [94, 95, 96, 165, 201, 214, 227, 233, 314, 316, 318], "fix_paramet": [94, 96, 229, 230, 316], "unfix_paramat": [94, 95, 96, 230], "fix_paramaters_to": [94, 230], "unfix_paramaters_to": [94, 95, 96, 198, 229], "fix_or_unfix_paramet": [95, 96, 229, 230, 316], "fix_parameters_to": [95, 198, 229, 316], "extract": [97, 100, 107, 240, 294, 296, 310, 314], "60": [98, 301, 312, 316, 322], "cmax": [101, 294, 316], "tmax": [101, 294, 316], "cmin": [101, 294, 316], "tmin": [101, 294, 316], "doseid": [101, 104, 316], "589": [101, 105, 316], "get_baselin": [103, 294, 316], "set_covari": [103, 316], "period": [104, 316], "108": [105, 155, 209, 303, 315, 316], "120": [105, 155, 209, 303, 315, 316], "132": [105, 155, 209, 303, 315, 316, 322], "144": [105, 155, 209, 303, 315, 316, 326], "retriev": [108, 109, 116, 117, 124, 125, 126, 128, 250, 251, 269, 273, 276, 294, 314, 315, 316, 330], "those": [109, 297, 312, 316, 329], "often": [109, 296, 299, 314, 326], "get_pd_paramet": 109, "get_pk_paramet": [109, 124, 125, 128, 294], "get_rv_paramet": [109, 124, 126, 147, 294], "has_random_effect": [109, 124, 128, 294], "opr": [110, 121, 127], "get_population_prediction_express": [110, 294], "epress": [110, 127], "condit": [111, 197, 294, 307, 312, 325], "item": [115, 298, 312], "activ": [116, 117, 118, 299, 312], "get_number_of_observ": [116, 122, 294, 316], "get_number_of_observations_per_individu": [116, 117, 122, 294, 316], "total": [117, 275, 294, 316], "get_number_of_individu": [117, 118, 294, 316], "observation_count": 118, "oeta\u2082": 121, "oeta\u2081": 121, "112": [122, 301, 309, 311, 315, 316, 317, 322, 324, 325], "135": [122, 315, 316, 322, 324], "131": [122, 315, 316], "73": [122, 315, 316, 325, 329], "146": [122, 155, 209, 301, 303, 311, 315, 316], "get_theta": [123, 129, 294], "get_sigma": [123, 130, 294], "var_typ": 124, "get_individual_paramet": [124, 126, 128, 147, 294], "get_individual_prediction_express": [127, 294], "get_omega": [129, 130, 294], "structur": [130, 253, 271, 294, 296, 303, 311, 314, 317, 328, 329], "00": [130, 307, 314, 315, 316, 322, 324, 326, 328, 329], "olumn": 131, "milligram": [131, 303], "liter": [131, 303], "kilogram": [131, 303], "named_subscript": 133, "greek": 133, "subscript": 133, "cleanup_model": [133, 294], "\u03b8\u2081": 133, "\u03b8\u2082": 133, "\u03b8\u2083": 133, "\u03b7\u2081": 133, "\u03b7\u2082": 133, "\u03b5\u2081": 133, "mani": [134, 135, 146, 184, 294, 316], "has_proportional_error_model": [134, 135, 149, 294], "has_combined_error_model": [134, 146, 149, 294], "has_weighted_error_model": [134, 135, 146, 294], "has_additive_error_model": [135, 146, 149, 294], "reli": [138, 142, 143, 151, 312], "heurist": [138, 142, 143, 151], "abl": [138, 142, 143, 151, 294, 306, 308, 320, 321], "detect": [138, 142, 143, 151, 294, 308, 314, 320, 331], "instantan": [139, 199, 329], "has_od": [140, 141, 294], "has_linear_odes_with_real_eigenvalu": [140, 144, 294], "has_linear_od": [141, 144, 294], "micha": [142, 143, 202, 203, 296, 329], "menten": [142, 143, 202, 203, 296, 329], "set_michaelis_menten_elimin": [142, 195, 203, 217, 294, 316], "michali": 143, "set_mixed_mm_fo_elimin": [143, 316], "add_metabolit": [145, 294], "sequenti": [148, 210, 294, 296, 317, 329], "dpharmpi": 148, "has_zero_order_absorpt": [148, 294], "has_first_order_absorpt": 148, "set_zero_order_elimin": [151, 195, 202, 203, 294, 316], "determin": [152, 153, 182, 240, 309, 311, 312, 317], "model1": [152, 294], "model2": 152, "constraint": [153, 201, 214, 219, 227, 229, 294, 304], "get_covariate_baselin": [154, 294, 316], "load": [155, 156, 241, 308], "unload_dataset": [155, 294], "statment": 157, "mu": [158, 307], "referenc": 158, "theta_1": [158, 314], "mu_1": [158, 307], "\u03bc\u2081": 158, "\u03bc\u2082": 158, "dataset_or_model": [159, 182], "name_pattern": [159, 182], "omitted_": 159, "omiss": 159, "omit": [159, 296, 301], "placehold": [159, 182], "cwre": [160, 165, 265, 266, 315, 316, 324, 325], "chart": [160, 161, 162, 163, 164, 292], "iofv1": 163, "iofv2": 163, "against": [163, 312], "iofv": [163, 266, 292, 294, 313, 315, 327], "scatterplot": 163, "problem": [165, 169, 294, 301, 306, 309, 311, 312, 313, 316, 318], "subroutin": [165, 294, 312, 316, 318], "advan1": [165, 316, 318], "trans2": [165, 316, 318], "IF": [165, 294, 312, 316], "gt": [165, 316], "lt": [165, 316], "npde": [165, 316], "noappend": [165, 316], "noprint": [165, 316], "onehead": [165, 316], "sigma\u2081": [166, 314], "\u2081": [166, 314], "home": [168, 294, 314], "run1": [168, 251, 316], "mod": [168, 269, 271, 294, 296, 303, 314, 315, 316, 329], "read_model_from_databas": [168, 169, 294], "databas": [168, 169, 249, 269, 270, 271, 273, 276, 277, 280, 286, 291, 294], "read_model_from_str": [168, 294, 316], "err": [169, 316], "has_covariate_effect": [171, 294], "unrun": 172, "to_remov": [174, 175, 296], "eta_iov_1_1": 175, "add_lag_tim": [176, 213, 294, 316], "uloq": 177, "alq": 177, "loq": [177, 253, 296], "consecut": [177, 222], "736": 177, "set_lloq_data": [177, 222, 294], "add_peripheral_compart": [179, 206, 294, 316], "new_nam": [181, 204], "renam": [181, 294], "clash": [181, 269, 271], "occur": [181, 207, 306, 309, 311, 312], "resampl": [182, 254], "stratifi": [182, 296], "sample_s": [182, 296], "resample_": 182, "randomli": [182, 185], "renumb": [182, 296], "upward": 182, "stratif": [182, 296], "valueerror": 182, "rais": [182, 233, 294], "strata": 182, "stratum": 182, "suppli": [182, 309, 311, 317, 324], "control": [182, 299, 311, 312, 314], "pattern": [182, 312], "samples_per_id": 183, "pool": [183, 309], "iec": 183, "127941": 183, "037273": 183, "065492": 183, "182851": 183, "263323": 183, "265849": 183, "295883": 183, "060346": 183, "012108": 183, "219967": 183, "034279": 183, "040988": 183, "187879": 183, "143184": 183, "088845": 183, "034655": 183, "187779": 183, "014214": 183, "019953": 183, "151151": 183, "sample_parameters_from_covariance_matrix": [183, 185, 294], "sample_parameters_uniformli": [183, 184, 294], "uniform": [183, 184, 185], "force_posdef_sampl": [184, 185, 296], "force_posdef_covmatrix": [184, 296], "never": [184, 317], "005069": 184, "974989": 184, "204629": 184, "024756": 184, "012088": 184, "012943": 184, "004690": 184, "958431": 184, "233231": 184, "038866": 184, "029000": 184, "012516": 184, "004902": [184, 292], "950778": 184, "128388": 184, "019020": 184, "023866": 184, "013413": 184, "sample_individual_estim": [184, 185, 294], "estiat": [184, 185], "reject": 185, "004878": 185, "908216": 185, "149441": 185, "029179": 185, "025472": 185, "012947": 185, "004828": 185, "014444": 185, "149958": 185, "028853": 185, "027653": 185, "013348": 185, "004347": 185, "053837": 185, "165804": 185, "028465": 185, "026798": 185, "013727": 185, "data_tran": [186, 187, 208, 294], "series_term": 186, "\u00b2": [186, 187], "epsilon_1": [186, 187, 208], "expans": 186, "approxim": [186, 312], "\u03b5\u2090": [186, 187, 316], "set_proportional_error_model": [186, 187, 294, 316], "set_combined_error_model": [186, 208, 294, 316, 325], "epsilon_2": 187, "remove_error_model": [187, 208, 294, 316], "\u03b5\u209a": [187, 208, 316], "set_additive_error_model": [187, 208, 294, 316], "fix_to_log": 190, "dynam": [190, 283, 312], "lambda": [190, 223, 224, 322, 324], "zeta": [190, 322, 324], "emul": 190, "set_instantaneous_absorpt": [194, 210, 216], "list_of_ep": [196, 207], "same_eta": [196, 296], "chosen": [196, 294, 309, 316, 328, 329], "eta_rv1": 196, "set_power_on_ruv": [196, 294, 316, 325], "get_initial_condit": [197, 294], "remove_loq_data": [200, 222, 294, 316], "set_upper_bound": [201, 227, 316], "unconstrain_paramet": [201, 214, 229, 316], "clmm": [202, 203, 217, 316], "km": [202, 203, 217, 294, 316], "set_first_order_elimin": [202, 203, 217, 294, 316], "prefer": [205, 312], "q2": 206, "q3": 206, "v3": 206, "peripheral2": 206, "lower_limit": 207, "zero_protect": [207, 208, 294], "said": 207, "autodetect": 207, "protect": [207, 208, 294, 312], "power\u2081": 207, "set_iiv_on_ruv": [207, 294, 316, 325], "225e": [208, 316], "ipredadj": [208, 316], "ref": [209, 331], "quantil": [211, 292, 294], "time_vari": [211, 324, 325], "target": [212, 326], "mediat": 212, "disposit": 212, "ib": 212, "cr": 212, "crib": 212, "qss": 212, "wagner": 212, "mmapp": 212, "tmdd": [212, 253, 262, 294], "keep_depot": [213, 294], "transit1": 213, "transit2": 213, "k23": 213, "transit3": 213, "k34": 213, "k40": 213, "set_lower_bound": [214, 227, 316], "use_thetas_for_error_stdev": [215, 294, 316], "smallest": [217, 316], "get_zero_order_input": [218, 294], "simplifi": [219, 294, 295, 304, 316, 321], "ab": [219, 224, 296, 316], "analyt": 220, "becom": [221, 294, 296, 321], "create_joint_distribut": [221, 294, 316], "m4": [222, 316], "m1": [222, 294, 326], "m3": [222, 316], "m5": [222, 294], "m6": [222, 294], "m7": [222, 294], "overridden": 222, "shown": 222, "discard": 222, "modifi": [222, 294, 303, 312, 319, 330], "beal": 222, "sl": 222, "pharmacodyn": 222, "2001": 222, "oct": 222, "481": 222, "504": 222, "doi": [222, 224, 307, 325], "1023": 222, "1012299115260": 222, "erratum": 222, "2002": 222, "jun": 222, "309": 222, "pmid": 222, "11768292": 222, "cumd": [222, 316], "cumdz": [222, 316], "list_of_eta": [223, 224, 225], "boxcox": [223, 294], "lambda1": [223, 224], "transform_etas_tdist": [223, 224, 294, 316], "transform_etas_john_drap": [223, 225, 294, 316], "john": [224, 294, 296], "draper": [224, 294, 296], "spelect": 224, "1980": 224, "famili": [224, 312], "journal": [224, 325], "royal": 224, "societi": 224, "190": [224, 322], "197": 224, "2307": 224, "2986305": 224, "transform_etas_boxcox": [224, 225, 294, 316], "degre": [225, 324], "freedom": [225, 312, 324], "80": [225, 301, 315, 322, 324, 325], "df1": 225, "translat": [226, 294], "hour": [226, 303], "caution": 226, "reset": [226, 278, 294], "account": 226, "unfix_paramet": [227, 294, 316], "unload": 231, "had": [232, 312, 316], "move_est_close_to_bound": 233, "00469555": 233, "984258": [233, 241, 315], "15892": 233, "0293508": [233, 314], "027906": [233, 241, 314, 315], "sd_eps_1": 234, "set_weighted_error_model": [234, 294, 316], "whose": [235, 312], "suffix": 235, "overwrit": [235, 236], "newdataset": 235, "recalcul": 238, "frem_dir1": 238, "read_result": [238, 250, 294, 329], "model_or_model": [239, 259], "run_tool": [239, 253, 265, 294], "supress_warn": 240, "choos": [240, 294, 309, 312, 317, 318, 319], "supress": 240, "004696": [241, 315], "158920": [241, 315], "029351": [241, 315], "84": [242, 243, 266, 309, 311, 317, 326], "machin": [242, 243, 244, 269, 273, 276, 303, 308, 312], "learn": [242, 243, 244, 308], "threshold": [242, 243, 244, 296, 301], "signal": [242, 243, 313], "raw": [242, 243, 244, 266, 292, 294, 303], "delta": [242, 292, 294, 313], "tell": [242, 244, 312], "predict_influential_outli": [242, 244, 294], "predict_outli": [242, 243, 294], "outlier_cutoff": 243, "influential_cutoff": 243, "influential_outli": 243, "predict_influential_individu": [243, 244, 294], "simev": [244, 294, 323], "singal": 244, "281443": 244, "057392": 244, "119105": 244, "846849": 244, "600540": 244, "014008": 244, "750734": 244, "247175": 244, "117002": 244, "835389": 244, "529582": 244, "035670": 244, "292333": 244, "303278": 244, "565949": 244, "078192": 244, "291295": 244, "466421": 244, "402343": 244, "699996": 244, "567987": 244, "526776": 244, "303918": 244, "177588": 244, "272142": 244, "390000": 244, "775876": 244, "501528": 244, "700951": 244, "352599": 244, "294196": 244, "744014": 244, "215364": [244, 326], "208691": 244, "713130": 244, "300293": 244, "810736": 244, "459877": 244, "675125": 244, "563835": 244, "526945": 244, "449199": 244, "720714": 244, "792248": 244, "860923": 244, "731858": 244, "247131": 244, "894190": 244, "282737": 244, "153398": 244, "200546": 244, "902774": 244, "586427": 244, "183329": 244, "036930": 244, "639868": 244, "765279": 244, "209665": 244, "225693": 244, "errors_allow": [246, 294], "bic_typ": 246, "rounding_error": [246, 275], "maxevals_exceed": [246, 275], "lrt": 246, "denot": [246, 307, 316], "model_1": [246, 307], "model_2": [246, 307], "create_result": [248, 294], "resum": [249, 253, 286, 296, 329], "resmod_dir1": 249, "retrieve_model": [250, 269, 273, 276, 294, 329], "tooldatabas": [251, 270, 277, 283, 286], "modeldatabas": [251, 269, 271, 280], "tooldir_path": 251, "retrieve_final_model": [251, 294], "allometryresult": 252, "amd": [253, 294, 329], "modelsearch": [253, 260, 265, 294, 329], "reult": 253, "e_max": [253, 262], "search": [253, 255, 260, 262, 294, 296, 301, 311, 321, 329], "runord": [253, 296], "compon": [253, 296, 304, 308, 312, 314, 324], "run_iiv": [253, 294], "bootstrap": [254, 294, 323], "bootstrapresult": [254, 294], "500": 254, "try": [255, 296, 306, 321, 331], "mode": [255, 256, 258, 260, 294, 307, 312], "covsearchresult": 255, "estmethod": [256, 294, 329], "exhaust": [256, 260, 294], "exhaustive_with_upd": [256, 306], "exhaustive_only_ev": [256, 294, 306], "estmethodresult": 256, "reduc": [256, 294, 306, 326], "no_add": [257, 260, 294, 309, 317], "iivsearch": [257, 294, 329], "brute_force_no_of_eta": [257, 309], "brute_force_block_structur": [257, 309], "strategi": [257, 260, 294, 309, 317], "add_diagon": [257, 260, 294, 309, 317], "kee": 257, "iivsearchresult": 257, "iovsearch": [258, 294, 329], "iovsearchresult": 258, "modelfeatur": 260, "modelsearchresult": 260, "max_it": [261, 294], "bin": [261, 324, 331], "attempt": [261, 301, 312], "assess": [261, 325], "ruvsearchresult": 261, "extra_model": 262, "structsearch": [262, 294, 329], "structsearc": 262, "structsearchresult": 262, "model_typ": 262, "arg": 263, "kei": [265, 273, 312, 325], "fit_result": 265, "mathrm": [266, 327], "veebar": 266, "least": [266, 312, 317, 328, 329], "outli": [266, 327], "criteria": [266, 294, 296, 301, 309, 311, 317, 325, 328], "include_all_estimation_step": 267, "runtim": [267, 275, 294, 306], "wasn": [267, 294], "estmat": 267, "586": [267, 315], "276056": 267, "lzma": [268, 278], "again": [268, 331], "compress": [268, 278], "Not": [268, 303, 312, 317], "save": [268, 278, 281, 294], "file_extens": [269, 271], "nontransactionalmodeldatabas": [269, 276], "local": [269, 270, 271, 273, 276, 277, 280, 299, 309, 312], "store": [269, 270, 271, 273, 276, 277, 280, 294, 318, 329], "modelnam": 269, "recommend": [269, 331], "localmodeldirectorydatabas": 269, "retrieve_fil": [269, 273, 276], "filesystem": [269, 273, 276], "model_nam": [269, 271, 273, 276, 307], "retrieve_local_fil": [269, 273, 276], "destination_path": [269, 273, 276], "retrieve_model_entri": [269, 273, 276], "modelentri": [269, 271, 273, 276], "retrieve_modelfit_result": [269, 273, 276], "store_local_fil": [269, 270, 273, 276, 277, 280], "new_filenam": [269, 273, 276], "store_metadata": [269, 270, 273, 276, 277, 280], "store_model": [269, 273, 276], "store_model_entri": [269, 273, 276], "model_entri": [269, 273, 276], "transact": [269, 271, 273, 276, 312], "store_modelfit_result": [269, 273, 276], "toolnam": [270, 277, 280, 329], "exist_ok": 270, "read_metadata": [270, 277, 280], "source_path": [270, 277, 280], "store_result": [270, 277, 280], "transactionalmodeldatabas": 271, "subdirectori": [271, 329], "list_model": 271, "snapshot": [271, 273], "readabl": [271, 273, 278, 303, 312, 321], "context": [271, 273, 312, 321], "model_or_model_entri": [271, 273], "writabl": [271, 273], "timestamp": 272, "log_error": 272, "log_warn": 272, "abc": [273, 280], "baseclass": 273, "primari": 273, "center": 273, "around": [273, 297], "belong": 273, "attach": [274, 312], "lof": 274, "attach_result": 274, "__version__": [275, 278], "103": [275, 278, 301, 309], "ofv_iter": [275, 294], "parameter_estimates_sdcorr": [275, 315], "parameter_estimates_iter": [275, 294], "standard_errors_sdcorr": [275, 315], "relative_standard_error": [275, 315], "minimization_successful_iter": 275, "estimation_runtime_iter": 275, "individual_ofv": [275, 294, 315], "termination_caus": 275, "termination_cause_iter": 275, "function_evalu": 275, "function_evaluations_iter": 275, "significant_digits_iter": 275, "log_likelihood": 275, "evaluation_ofv": 275, "classic": 275, "caus": [275, 294, 312, 321], "prematur": 275, "dummi": [276, 277], "anyth": [276, 277, 299, 309, 312], "get_and_reset_index": 278, "attr": 278, "wrapper": [278, 294, 299, 304, 308, 331], "facilit": 278, "multiindex": [278, 294], "to_csv": 278, "serial": [278, 294, 303, 321], "task_input": 279, "model_databas": 280, "workflowbas": [281, 282], "acycl": 281, "task": [281, 282, 294, 320, 321], "node": [281, 283], "edg": 281, "as_dask_dict": 281, "dask": [281, 283, 294, 321], "plot_dask": 281, "visual": 281, "add_task": 282, "predecessor": [282, 312], "insert_workflow": 282, "replace_task": 282, "new_task": 282, "wf": 283, "unique_nam": 283, "db": 283, "whatev": [283, 312], "alia": [284, 285], "localdirectorydatabas": [284, 291], "localdirectorytooldatabas": [285, 291, 329], "dispatch": [286, 291, 294, 329], "execut": [286, 294, 312], "executiondispatch": 286, "default_dispatch": 291, "local_dask": [291, 329], "default_model_databas": 291, "default_tool_databas": 291, "psn": [292, 293, 294, 296, 302, 307, 313, 322, 324, 326, 327, 329, 330], "parameter_statist": 292, "bia": [292, 294], "divid": [292, 296, 318], "005890": 292, "005891": 292, "000460": 292, "078170": 292, "pop_v": 292, "431004": 292, "422850": 292, "073015": 292, "051024": 292, "149260": 292, "124740": 292, "112645": 292, "754686": 292, "189801": 292, "185916": 292, "045563": 292, "240056": 292, "015470": 292, "015184": 292, "003553": 292, "229641": 292, "parameter_distribut": 292, "lowest": [292, 307], "highest": [292, 294, 307, 318], "interpol": 292, "fall": [292, 294], "x_0": 292, "x_1": 292, "np": [292, 303, 314], "004851": 292, "004857": 292, "005031": 292, "005149": 292, "277810": 292, "278405": 292, "283765": 292, "309488": 292, "326434": 292, "000011": 292, "000097": 292, "000869": 292, "006275": 292, "013558": 292, "079940": 292, "080472": 292, "085258": 292, "101225": 292, "119080": 292, "007645": 292, "007719": 292, "008382": 292, "009481": 292, "009956": 292, "006659": 292, "006846": 292, "007353": 292, "007460": 292, "007472": 292, "547333": 292, "582182": 292, "631219": 292, "644090": 292, "645520": 292, "353679": 292, "367954": 292, "416361": 292, "433175": 292, "435043": 292, "265224": 292, "282926": 292, "290666": 292, "291792": 292, "291917": 292, "021341": 292, "022691": 292, "025584": 292, "027052": 292, "027215": 292, "parameter_estimates_histogram": 292, "histogram": [292, 294], "repeatchart": 292, "006755": 292, "52531": 292, "108662": 292, "258316": 292, "011408": 292, "005424": 292, "43599": 292, "270899": 292, "156400": 292, "014023": 292, "006585": 292, "38641": 292, "226891": 292, "162075": 292, "010971": 292, "005757": 292, "47090": 292, "193243": 292, "019133": 292, "006875": 292, "50111": 292, "345382": 292, "176756": 292, "009135": 292, "005683": 292, "34027": 292, "163931": 292, "159868": 292, "010816": 292, "005795": 292, "34379": 292, "075865": 292, "194188": 292, "018041": 292, "006078": 292, "35172": 292, "040387": 292, "214176": 292, "015683": 292, "98": [292, 301, 307, 309], "005353": 292, "44898": 292, "155477": 292, "258743": 292, "020128": 292, "006247": 292, "49069": 292, "125491": 292, "219146": 292, "018971": 292, "ofv_statist": 292, "bootstrap_bootdata_ofv": 292, "original_bootdata_ofv": 292, "sum": [292, 302], "bootstrap_origdata_ofv": 292, "boostrap": 292, "original_origdata_ofv": 292, "delta_bootdata": 292, "delta_origdata": 292, "08165": 292, "729": 292, "644638": 292, "737749": 292, "ofv_distribut": 292, "parameter_distriut": 292, "593": 292, "389406": 292, "972104": 292, "599": 292, "216391": 292, "654": [292, 294], "548507": 292, "660": 292, "573965": 292, "795": 292, "776225": 292, "803": 292, "946508": 292, "816": 292, "836314": 292, "820": [292, 294, 315], "873796": 292, "821": 292, "322405": 292, "ofv_plot": 292, "dofv_quantiles_plot": 292, "show": [292, 296, 307, 312, 324, 327, 328], "metric": [292, 293, 315], "chi": 292, "squar": 292, "664": 292, "272157": 292, "749": 292, "459450": 292, "061103": 292, "725470": 292, "679": 292, "585721": 292, "702": 292, "481949": 292, "748": 292, "074871": 292, "710": [292, 294], "203812": 292, "787": [292, 306], "180418": 292, "771": 292, "202034": 292, "119974e": 292, "491440e": 292, "096413e": 292, "005331": 292, "000922": 292, "001519": 292, "460998e": 292, "365879e": 292, "012689": 292, "000981": 292, "760432e": 292, "331894e": 292, "002076": 292, "755294e": 292, "000035": 292, "000176": 292, "000078": 292, "262063e": 292, "included_individu": 292, "case_result": [293, 294], "cook_scor": 293, "jackknife_cook_scor": 293, "delta_ofv": 293, "dofv_influenti": 293, "130159": 293, "121389": 293, "015207": 293, "348263": 293, "336159": 293, "144045": 293, "192433": 293, "181125": 293, "031030": 293, "163095": 293, "155901": 293, "026142": 293, "422651": 293, "404915": 293, "190732": 293, "374312": 293, "343311": 293, "097063": 293, "169869": 293, "163883": 293, "026223": 293, "263865": 293, "254943": 293, "058123": 293, "757098": 293, "673587": 293, "477910": 293, "150161": 293, "144191": 293, "023623": 293, "361646": 293, "352901": 293, "217902": 293, "255533": 293, "215005": 293, "035375": 293, "191848": 293, "187019": 293, "038199": 293, "376365": 293, "337975": 293, "096680": 293, "142806": 293, "137340": 293, "014709": 293, "193393": 293, "179744": 293, "031711": 293, "131746": 293, "122842": 293, "020637": 293, "176644": 293, "932149": 293, "036787": 293, "128197": 293, "120498": 293, "019030": 293, "141093": 293, "138101": 293, "029021": 293, "176582": 293, "153583": 293, "035291": 293, "104396": 293, "100064": 293, "015499": 293, "552071": 293, "501458": 293, "278595": 293, "242334": 293, "217068": 293, "047627": 293, "792099": 293, "715951": 293, "798775": 293, "135247": 293, "133493": 293, "021356": 293, "442779": 293, "424958": 293, "125763": 293, "132903": 293, "127188": 293, "010157": 293, "081122": 293, "076790": 293, "005443": 293, "183624": 293, "168501": 293, "027707": 293, "113959": 293, "111168": 293, "012363": 293, "532749": 293, "515747": 293, "325048": 293, "094133": 293, "091212": 293, "014747": 293, "447798": 293, "406737": 293, "194457": 293, "364978": 293, "352973": 293, "124295": 293, "270838": 293, "252922": 293, "063675": 293, "129553": 293, "121963": 293, "014043": 293, "254914": 293, "243250": 293, "064025": 293, "207529": 293, "194633": 293, "046887": 293, "239182": 293, "218112": 293, "044252": 293, "181986": 293, "173826": 293, "020285": 293, "604112": 293, "584208": 293, "604211": 293, "407717": 293, "369648": 293, "154161": 293, "215722": 293, "196744": 293, "043742": 293, "214167": 293, "200091": 293, "036238": 293, "094284": 293, "089002": 293, "007506": 293, "074174": 293, "072365": 293, "007535": 293, "743323": 293, "717468": 293, "654313": 293, "153971": 293, "147360": 293, "014502": 293, "284706": 293, "278460": 293, "072960": 293, "331587": 293, "309374": 293, "116933": 293, "447965": 293, "421612": 293, "129593": 293, "184872": 293, "175196": 293, "029896": 293, "430382": 293, "415446": 293, "141657": 293, "409307": 293, "369197": 293, "189729": 293, "084764": 293, "079718": 293, "007416": 293, "107600": 293, "103145": 293, "013947": 293, "154672": 293, "150761": 293, "028236": 293, "155632": 293, "150461": 293, "034848": 293, "covariance_ratio": 293, "skipped_individu": 293, "050505": 293, "963884": 293, "058896": 293, "087449": 293, "985403": 293, "029066": 293, "101636": 293, "086424": 293, "017369": 293, "094799": 293, "849310": 293, "121111": 293, "049151": 293, "096456": 293, "070088": 293, "040691": 293, "065881": 293, "606158": 293, "205007": 293, "099191": 293, "143483": 293, "050691": 293, "086007": 293, "156273": 293, "919336": 293, "056714": 293, "999221": 293, "029600": 293, "034017": 293, "108785": 293, "038495": 293, "954054": 293, "053618": 293, "096334": 293, "943556": 293, "125423": 293, "086167": 293, "145822": 293, "113939": 293, "114399": 293, "057664": 293, "788608": 293, "063991": 293, "115559": 293, "160549": 293, "034685": 293, "035618": 293, "714976": 293, "092664": 293, "089158": 293, "054565": 293, "002555": 293, "032356": 293, "003056": 293, "936719": 293, "122771": 293, "078285": 293, "096841": 293, "068821": 293, "sqrt": [293, 316], "p_i": 293, "p_": 293, "orig": 293, "operatornam": [293, 307, 327], "sum_": 293, "overlin": [293, 307], "_j": 293, "_k": [293, 307], "det": 293, "Then": [293, 307, 316], "ofv_": 293, "iofv_": 293, "iofv_k": 293, "ofv_k": 293, "case_column": 293, "rikard": [293, 295, 300, 321, 325], "nordgren": [293, 295, 300, 321, 325], "sebastian": [293, 295, 300], "ueckert": [293, 295, 300], "svetlana": 293, "freiberga": 293, "karlsson": [293, 295, 300, 307, 325], "faster": [293, 294, 321], "2018": [293, 312, 325], "abstr": [293, 295], "8683": 293, "www": [293, 295, 312], "meet": [293, 295, 297, 312, 321], "calculate_b": [294, 309, 311, 317], "incorrectli": 294, "final_model": 294, "plot_dv_vs_ipr": 294, "plot_cwres_vs_idv": 294, "add_indirect_effect": 294, "circul": 294, "version": [294, 296, 308, 312, 329], "filter_dataset": 294, "load_dataset": 294, "blqdv": 294, "better": [294, 317, 325], "usag": [294, 296], "set_reference_valu": 294, "create_basic_pk_model": [294, 316], "add_bioavail": 294, "autogener": 294, "typ": 294, "add_effect_compart": 294, "reorgan": 294, "saddl": 294, "llq": 294, "preced": 294, "reorder": 294, "model4": 294, "frem": [294, 314, 323, 324], "create_report": 294, "write_model": [294, 314, 316, 318], "did": [294, 326], "dadt": [294, 316], "de": [294, 316], "complex": [294, 299, 308, 328], "set_zero_order_input": 294, "set_tmdd": 294, "plugin": [294, 299, 304, 305, 310], "generate_model_cod": 294, "get_model_cod": 294, "advan7": 294, "didn": 294, "header": 294, "is_linear": 294, "plot_transformed_eta_distribut": 294, "create_config_templ": [294, 298], "get_dv_symbol": 294, "set_initial_condit": 294, "abbr": [294, 316, 318], "set_dvid": [294, 316], "regress": 294, "defdos": [294, 316], "sometim": 294, "wrong": 294, "bad": 294, "1551": 294, "is_real": 294, "advan5": 294, "copy_model": 294, "nlmixr2": [294, 310, 316], "display_od": 294, "rework": 294, "run_covsearch": [294, 301], "explicitodesystem": 294, "eval": 294, "successfulli": [294, 331], "round": [294, 303], "subtool": [294, 329], "proxi": [294, 312], "1314": 294, "1355": [294, 301], "1378": [294, 309], "typo": 294, "1377": 294, "1381": 294, "mm": [294, 296, 317, 329], "1064": [294, 309], "afd7707": 294, "1139": 294, "1394": 294, "too": [294, 312], "1117": 294, "timeout": 294, "loop": 294, "wait": 294, "lst": [294, 329], "much": 294, "ncomp": 294, "deidentify_data": [294, 316], "cli": 294, "anonym": 294, "setter": 294, "multivari": 294, "1293": 294, "1302": [294, 301], "1303": [294, 317], "last20": 294, "run_modelsearch": [294, 317, 329], "run_iovsearch": [294, 311], "run_ruvsearch": [294, 325], "run_iivsearch": [294, 309], "nomem": 294, "rh": 294, "1180": 294, "887": [294, 309, 311], "1162": 294, "1032": 294, "add_covariate_effect": [294, 316], "1004": 294, "remove_covariate_effect": [294, 316], "1181": 294, "9fd701521": 294, "best_model": 294, "final_model_nam": 294, "a7fbcbfe2": 294, "update_initial_individual_estim": 294, "modelsearch_candidate1": [294, 317, 329], "modelsearch_run1": 294, "wors": 294, "calculate_a": 294, "check_parameters_near_bound": 294, "check_high_correl": 294, "plot_iofv_vs_iofv": 294, "plot_individual_predict": 294, "evaluate_express": 294, "evaluate_weighted_residu": 294, "parameter_esimt": 294, "calculate_pk_parameters_statist": 294, "update_init": [294, 316], "predict_": 294, "print_fit_summari": 294, "write_result": 294, "rank_model": 294, "speedup": 294, "297a64041": 294, "1101": 294, "57fc4fee8": 294, "fd417aaf": 294, "convert_model": [294, 316], "d5458e36": 294, "keyerror": 294, "localmodeldirectori": 294, "filenotfounderror": 294, "1193bd39": 294, "unus": 294, "submodul": 294, "bb96a13c": 294, "update_paramet": 294, "0ca786c5": 294, "dd056da3": 294, "915bc9c7": 294, "get_config_path": [294, 298], "disabl": [294, 297, 298], "82b32278": 294, "unwant": 294, "debug": 294, "1131a610": 294, "ebfafb45": 294, "1173": 294, "fb070ee1": 294, "1049": [294, 309], "pyreadr": 294, "easier": [294, 304, 314], "instal": [294, 296, 298, 312, 330], "mac": [294, 299], "get_evid": [294, 316], "resmod": [294, 323], "916": 294, "strict": [294, 312], "1055": 294, "attibut": 294, "1092": 294, "exlud": 294, "unreport": 294, "1076": 294, "988": 294, "1c65359": 294, "42fe72f": 294, "1001": 294, "lead": 294, "uneven": 294, "branch": [294, 299], "stepwis": [294, 301, 326, 329], "694": 294, "properli": 294, "708": 294, "comment": [294, 318], "790": 294, "974": [294, 322], "produc": [294, 312], "1017": 294, "989": 294, "71f4cf23": 294, "dsl": 294, "932": 294, "973": 294, "cfc09bad": 294, "975": 294, "917": 294, "977": 294, "908": 294, "fd564168": 294, "088a046a": 294, "c76fa476": 294, "430f1d2e": 294, "make_declar": 294, "greekify_model": 294, "find_clearance_paramet": 294, "find_volume_paramet": 294, "vp": 294, "newer": 294, "seprat": 294, "sporad": 294, "race": [294, 297], "lazi": 294, "duplic": 294, "745": 294, "1st": 294, "3rd": 294, "licens": [294, 298], "advanx": 294, "add_time_after_dos": [294, 316], "intercompartment": 294, "695": 294, "defob": 294, "gl": 294, "solve_ode_system": 294, "meta": 294, "switch": [294, 321], "read_dataset_from_datainfo": [294, 316], "addl": 294, "linalgerror": 294, "656": [294, 309], "tflite": [294, 308], "649": 294, "mdt": [294, 316], "expand_additional_dos": [294, 316], "modelsyntaxerror": 294, "588": 294, "625": [294, 309], "578": 294, "vc1": 294, "577": 294, "success": [294, 297, 301, 306, 309, 311], "632": [294, 322], "636": 294, "boundari": [294, 311, 317, 328], "590": 294, "gl_real": 294, "sampled_iofv": [294, 327], "subblock": 294, "check_dataset": [294, 316], "tensorflow": 294, "modelbuild": 294, "add_mdt_iiv": 294, "three": [294, 304, 312, 318], "add_eta": [294, 324], "etas_as_fullblock": 294, "iiv_as_fullblock": 294, "add_mdt_eta": 294, "wip": 294, "don": 294, "130": 294, "calculate_se_from_inf": 294, "calculate_cov_from_inf": 294, "calculate_inf_from_cov": 294, "calculate_inf_from_corrs": 294, "calculate_corr_from_inf": 294, "528": 294, "457": 294, "translate_nmtran_tim": [294, 316], "print_model_cod": [294, 308, 316], "has_michaelis_menten_elimin": 294, "has_zero_order_elimin": 294, "has_first_order_elimin": 294, "has_mixed_mm_fo_elimin": 294, "2c": 294, "1c": 294, "timevari": 294, "create_symbol": 294, "remove_unused_parameters_and_rv": 294, "mu_reference_model": 294, "simplify_express": 294, "bump_model_numb": 294, "get_doseid": [294, 316], "get_unit_of": 294, "get_concentration_parameters_from_data": [294, 316], "write_csv": 294, "resample_data": 294, "omit_data": 294, "get_observation_express": 294, "get_individu": 294, "get_dos": [294, 316], "list_time_varying_covari": [294, 316], "estmeth": 294, "optim": [294, 304, 314, 321], "incorrect": 294, "add_allometri": [294, 316], "add_covariance_step": 294, "remove_covariance_step": 294, "insert_aft": 294, "modelstat": 294, "power_on_ruv": 294, "estimationmethod": 294, "guard": 294, "avoid": [294, 304, 312, 331], "cdd": 294, "bipp": [294, 296], "5000": 294, "shift": 294, "nest": 294, "due": [294, 325, 328], "set_dtbs_error_model": [294, 316], "dure": [294, 299, 331], "logger": 294, "parametr": 294, "broken": 294, "parallel": [294, 329], "print_model_symbol": 294, "get_observ": [294, 316], "parameter_sampl": 294, "api": [294, 304, 316, 320, 321, 330], "improv": [294, 324], "eta_shrinkag": 294, "summarize_model": 294, "window": [294, 299, 308, 312], "rstudio": [294, 321, 331], "zero_order_absorpt": 294, "first_order_absorpt": 294, "bolus_absorpt": 294, "set_bolus_absorpt": [294, 316], "seq_zo_fo_absorpt": 294, "set_seq_zo_fo_absorpt": [294, 316], "have_zero_order_absorpt": 294, "individual_shrinkag": 294, "individual_parameter_statist": 294, "pk_paramet": 294, "create_rv_block": 294, "split_rv_block": 294, "nind": 294, "nob": 294, "nobsi": 294, "remove_error": 294, "additive_error": 294, "proportional_error": 294, "combined_error": 294, "has_additive_error": 294, "has_proportional_error": 294, "has_combined_error": 294, "theta_as_stdev": 294, "set_dtbs_error": 294, "tdist": [294, 322], "john_drap": 294, "iiv_on_ruv": [294, 322, 324, 325], "add_individual_paramet": 294, "first_order_elimin": 294, "zero_order_elimin": 294, "michaelis_menten_elimin": 294, "mixed_mm_fo_elimin": 294, "revert": 294, "thread": [294, 297], "site": 294, "crossval": [294, 323], "qa": [294, 323], "plain": [294, 298, 299], "sdcorr": 294, "data_transform": 294, "evalut": 294, "dependent_variable_symbol": 294, "releas": [294, 312, 331], "claus": 294, "interfac": [294, 304, 308, 310, 312, 314, 316, 321, 330, 331], "com": 294, "stdin": 294, "123": [294, 301, 309, 311, 315, 317, 325], "clearer": 294, "prioriti": [294, 318], "aggregatedmodelfitresult": 294, "priorit": [294, 318], "half": [294, 322, 324], "life": [294, 322, 324], "set_nam": 294, "parameter_init": 294, "base_parameter_chang": [294, 307], "parameter_vari": [294, 307, 324], "coeffici": 294, "frem_result": 294, "simevalresult": 294, "odesystem": 294, "nonfixed_init": 294, "parameterset": 294, "migrat": 294, "github": [294, 299, 308, 310, 321, 331], "action": [294, 296, 297, 299, 312, 321], "columntyp": 294, "to_base_model": 294, "comined_mm_fo_elimin": 294, "absorption_r": 294, "pretti": 294, "qaresult": 294, "nmtranparseerror": 294, "error_model": 294, "pharmpyconfigpath": [294, 298], "environ": [294, 297, 330, 331], "linearizeresult": 294, "reset_indic": 294, "multiindic": 294, "functionsadd_lag_tim": 294, "yaml": 294, "view": [294, 312, 326], "assumpt": [294, 312], "0th": [294, 296], "parser": 294, "individul": 294, "extend": [294, 312, 324, 326], "postprocess": [294, 323], "librari": [294, 308, 310, 312, 321, 331], "stella": [295, 300, 321], "belin": [295, 300, 321], "gunnar": [295, 300], "yngman": [295, 300, 307], "simon": [295, 300], "carter": [295, 300], "buatoi": [295, 300], "jo\u00e3o": [295, 300], "abrant": [295, 300], "andrew": [295, 300], "hooker": [295, 300], "assemblerr": 295, "novel": 295, "process": [295, 299, 325], "2021": [295, 307], "9656": 295, "subcommand": 296, "top": [296, 303, 329], "help": [296, 297, 301, 316, 321, 329, 331], "verb": 296, "particular": [296, 297, 299, 303, 312, 313], "welcom": [296, 297, 299, 312], "exit": 296, "program": [296, 297, 308, 312], "pheno_r": [296, 303, 314, 315, 316], "prettyprint": 296, "output_fil": 296, "idcol": 296, "datecol": 296, "match": 296, "pager": 296, "stdout": [296, 329], "colnam": 296, "datasetsmultipl": 296, "1th": 296, "quot": 296, "comb": 296, "elimini": 296, "propot": 296, "error_typ": 296, "givenbi": 296, "cov_sampl": 296, "posdef": 296, "non_fix": 296, "input_path": 296, "particip": 297, "project": [297, 299, 310, 312, 331], "made": [297, 312, 314], "member": 297, "globe": 297, "divers": 297, "skill": [297, 321], "person": [297, 312], "experi": 297, "growth": 297, "everyon": [297, 299, 312], "guidelin": 297, "insid": [297, 312], "goal": 297, "inclus": [297, 312, 324], "grow": 297, "pledg": 297, "treat": [297, 299, 312], "peopl": 297, "harass": 297, "bulli": 297, "sexual": 297, "orient": 297, "gender": 297, "ident": 297, "appear": [297, 331], "nation": [297, 300], "ethnic": 297, "religion": 297, "imageri": 297, "sexist": 297, "racist": 297, "exclusionari": 297, "joke": 297, "acknowledg": [297, 312], "citat": 297, "request": [297, 299], "author": [297, 312], "own": [297, 298, 304, 312], "cite": 297, "realiz": 297, "varieti": 297, "opinion": 297, "background": 297, "serv": [297, 312, 321], "enrich": 297, "discuss": 297, "pro": 297, "con": 297, "technologi": 297, "proactiv": 297, "ensur": [297, 312, 328], "heard": 297, "feel": [297, 321], "confid": 297, "freeli": 297, "question": 297, "answer": 297, "respectfulli": 297, "pai": 297, "attent": 297, "feedback": 297, "forum": 297, "especi": 297, "contribut": [297, 300, 310, 312], "conscienti": 297, "percept": 297, "wider": 297, "respond": 297, "strive": 297, "behavior": 297, "encourag": [297, 299, 304, 310], "debat": 297, "disagr": 297, "entir": [297, 299, 312, 329], "silent": 297, "violat": [297, 312], "contact": [297, 312], "talk": 297, "privat": [297, 312], "situat": 297, "onlin": 297, "offlin": 297, "mail": [297, 312], "social": 297, "media": 297, "confer": 297, "adapt": [297, 312], "astropi": 297, "global": [298, 331], "nonmen": 298, "conf": 298, "ini": [298, 316], "default_nonmem_path": 298, "nmfe751": 298, "licfil": 298, "rpath": 298, "temporarili": 298, "pharmpyconfigfil": 298, "your": [299, 308, 310, 312, 318, 329, 331], "bug": 299, "appreci": 299, "suggest": [299, 310], "suitabl": [299, 321], "student": [299, 321], "commun": [299, 312], "aspir": 299, "conduct": [299, 317], "foster": 299, "linux": [299, 308], "maco": [299, 308], "ll": [299, 316], "badg": 299, "pip": [299, 308], "python3": 299, "pip3": 299, "guid": [299, 303, 314, 316], "former": 299, "ubuntu": 299, "apt": 299, "url": [299, 308], "render": [299, 312, 321], "On": [299, 321], "sudo": 299, "brew": 299, "unnecessari": [299, 312], "thing": [299, 312], "instruct": [299, 308, 315, 329], "black": 299, "formatt": 299, "flake8": 299, "linter": 299, "isort": 299, "lint": 299, "reformat": 299, "py39": 299, "test_paramet": 299, "py": [299, 308], "test_get_theta": 299, "apart": 299, "suit": 299, "purpos": [299, 312], "test_modelsearch": 299, "test_summary_individu": 299, "pull": 299, "manag": 299, "contributor": [299, 312], "emploi": 299, "commit": [299, 312], "push": 299, "name_of_branch": 299, "deploy": 299, "setup": 299, "pypi": [299, 308], "trigger": [299, 314], "tag": 299, "disturb": 299, "checkout": 299, "rebas": 299, "changelog": 299, "bump": 299, "good": [299, 312], "semant": 299, "bumpvers": 299, "cfg": 299, "sh": 299, "patch": 299, "minor": 299, "major": [299, 312], "copyright": 299, "necessari": [299, 312], "coi": 299, "stream": [299, 314], "verbatim": [299, 312], "farmaci": 300, "uu": 300, "kajsa": 300, "harl": 300, "zhe": [300, 321], "huang": [300, 321], "aurelien": 300, "oom": 300, "johan": 300, "borg": 300, "antonia": 300, "hufnagl": 300, "viktor": 300, "rogn\u00e5": 300, "piyanan": 300, "assawasuwannakit": 300, "xiaomei": 300, "chen": 300, "alzahra": 300, "hamdan": 300, "osama": 300, "qutishat": 300, "shijun": 300, "wang": 300, "tianwu": 300, "yang": 300, "keqi": 300, "shi": 300, "xuanlin": 300, "liu": 300, "samia": 300, "moham": 300, "yersultan": 300, "mirasbekov": 300, "warm": 300, "thank": 300, "sponsor": 300, "hoffman": 300, "la": 300, "roch": 300, "ltd": 300, "pharmetheu": 300, "uppsala": [300, 310], "univers": [300, 310], "enabl": [300, 312], "resourc": 300, "swedish": 300, "infrastructur": 300, "snic": 300, "uppmax": 300, "research": [300, 321], "council": 300, "inter": [301, 309, 316], "five": 301, "sentenc": 301, "manual": [301, 303, 329], "rewritten": 301, "notic": [301, 312], "semicolon": 301, "mox2": [301, 306, 309, 311, 317, 329], "covsearch_run5": 301, "covsearch_run6": 301, "covsearch_run7": 301, "covsearch_run8": 301, "covsearch_run9": 301, "covsearch_run10": 301, "covsearch_run11": 301, "covsearch_run12": 301, "covsearch_run13": 301, "covsearch_run14": 301, "covsearch_run15": 301, "covsearch_run16": 301, "covsearch_run17": 301, "covsearch_run18": 301, "covsearch_run19": 301, "covsearch_run20": 301, "covsearch_run21": 301, "covsearch_run22": 301, "covsearch_run23": 301, "covsearch_run24": 301, "covsearch_run25": 301, "covsearch_run26": 301, "covsearch_run27": 301, "covsearch_run28": 301, "covsearch_run29": 301, "covsearch_run30": 301, "covsearch_run31": 301, "covsearch_run32": 301, "covsearch_run33": 301, "covsearch_run34": 301, "covsearch_run35": 301, "covsearch_run36": 301, "covsearch_run37": 301, "covsearch_run38": 301, "covsearch_run39": 301, "covsearch_run40": 301, "covsearch_run41": 301, "covsearch_run42": 301, "covsearch_run43": 301, "covsearch_run44": 301, "covsearch_run45": 301, "covsearch_run46": 301, "covsearch_run47": 301, "covsearch_run48": 301, "covsearch_run49": 301, "covsearch_run50": 301, "covsearch_run51": 301, "covsearch_run52": 301, "covsearch_run53": 301, "covsearch_run54": 301, "pvalu": [301, 326], "goal_pvalu": [301, 326], "is_backward": [301, 326], "047127e": 301, "03": [301, 322, 324, 326], "710000e": 301, "568110e": 301, "494490e": 301, "498453e": 301, "459287e": 301, "280678e": 301, "923500e": 301, "003390e": 301, "984500e": 301, "372293e": 301, "176965e": 301, "207550e": 301, "626878e": 301, "564495e": 301, "539960e": 301, "762000e": 301, "823200e": 301, "417058e": 301, "759040e": 301, "469024e": 301, "811054e": 301, "642452e": 301, "840779e": 301, "261720e": 301, "651215e": 301, "954671e": 301, "163414e": 301, "926594e": 301, "491049e": 301, "423998e": 301, "706676e": 301, "374390e": 301, "054865e": 301, "105347e": 301, "300000e": 301, "029682e": 301, "641559e": 301, "748923e": 301, "363918e": 301, "203548e": 301, "052323e": 301, "567877e": 301, "507358e": 301, "510000e": 301, "1292": [301, 306, 309, 311, 317], "186761": [301, 306, 309, 311, 317], "742325": 301, "929085": 301, "315057": 301, "1346": 301, "501817": 301, "978215": 301, "1332": 301, "164976": 301, "062682": 301, "1312": 301, "249442": 301, "061671": 301, "248431": 301, "056538": 301, "1313": [301, 317], "243298": 301, "732689": 301, "919450": 301, "651626": 301, "1335": 301, "838386": 301, "814832": 301, "1334": 301, "001593": 301, "363759": 301, "550520": 301, "989077": 301, "175838": 301, "136326": 301, "323087": 301, "387950": 301, "1316": 301, "574711": 301, "961688": 301, "148448": 301, "743393": 301, "930153": 301, "617998": 301, "1340": 301, "804759": 301, "641996": 301, "1345": 301, "828756": 301, "288366": 301, "1357": 301, "475127": 301, "263168": 301, "1343": [301, 309], "449928": 301, "814686": 301, "1319": 301, "001446": 301, "181808": 301, "368568": 301, "957602": 301, "144362": 301, "567343": 301, "754104": 301, "426389": 301, "613149": 301, "66": [301, 322], "324567": 301, "1358": [301, 316], "511327": 301, "446030": 301, "632790": 301, "549224": 301, "1326": 301, "735985": 301, "997342": 301, "184102": 301, "617389": 301, "1351": 301, "804150": 301, "900404": 301, "1350": 301, "087164": 301, "566615": 301, "1391": 301, "753375": 301, "929659": 301, "1352": 301, "116420": 301, "990522": 301, "177283": 301, "217267": 301, "404028": 301, "62": [301, 322], "729333": 301, "1354": 301, "916093": 301, "101": 301, "379219": 301, "1393": 301, "565980": 301, "67": [301, 324, 326], "670588": 301, "1359": 301, "857348": 301, "016040": 301, "202801": 301, "926496": 301, "113256": 301, "139": 301, "462177": 301, "1431": 301, "648937": 301, "83": [301, 322, 324], "706655": 301, "1375": 301, "893415": 301, "798603": 301, "1367": 301, "985364": 301, "801019": 301, "1438": 301, "987780": 301, "92": 301, "443408": 301, "1384": 301, "630169": 301, "997461": 301, "1439": 301, "184221": 301, "322869": 301, "509630": 301, "925020": 301, "111781": 301, "142": 301, "814402": 301, "1435": 301, "001163": [301, 313], "862830": 301, "049591": 301, "449696": 301, "636456": 301, "801017": 301, "987778": 301, "89": [301, 317], "86": 301, "1414": 301, "872375": 301, "93": [301, 306], "810457": 301, "76": 301, "630168": 301, "68": 301, "pop_vc_estim": [301, 306, 311, 325], "pop_mat_estim": [301, 306, 311, 325], "5328": [301, 306, 309, 311, 317], "104": [301, 306, 309, 311, 317], "2300": [301, 306, 309, 317], "433676": [301, 306, 309, 311, 317], "2632": 301, "2400": 301, "447194": 301, "8757": 301, "106": [301, 309, 322, 324, 325], "2690": 301, "429235": 301, "4824": 301, "0490": 301, "435646": 301, "1536": 301, "7690": 301, "430342": 301, "9763": 301, "102": 301, "8640": 301, "428158": 301, "9807": 301, "1030": 301, "505090": 301, "3823": 301, "4790": 301, "453248": 301, "3323": 301, "5279": 301, "434088": 301, "7087": 301, "109": [301, 317], "1750": 301, "459561": 301, "8501": 301, "4740": 301, "428178": 301, "4821": 301, "0270": 301, "435683": 301, "1635": 301, "5920": 301, "433194": 301, "0931": 301, "1120": 301, "435607": 301, "1216": 301, "2180": 301, "519385": 301, "3873": 301, "4580": 301, "453399": 301, "4279": 301, "6231": 301, "442192": 301, "9115": 301, "9240": 301, "466270": 301, "7337": 301, "9590": 301, "409478": 301, "3781": 301, "2760": 301, "415011": 301, "1007": 301, "5110": 301, "446059": 301, "8490": 301, "522201": 301, "2833": 301, "7400": 301, "430777": 301, "3688": 301, "9010": 301, "444906": 301, "9130": 301, "7450": 301, "468161": 301, "8124": 301, "7120": 301, "407766": 301, "3789": 301, "2080": 301, "416694": 301, "1985": 301, "6770": 301, "441794": 301, "2994": 301, "94": 301, "1796": 301, "587939": 301, "4692": 301, "3027": 301, "440385": 301, "0941": 301, "6170": 301, "463834": 301, "6693": 301, "2570": 301, "413923": 301, "3618": 301, "427491": 301, "2658": 301, "5620": 301, "521096": 301, "4546": 301, "9522": 301, "446657": 301, "0732": 301, "105": [301, 306, 325], "0130": 301, "454492": 301, "7145": 301, "9771": 301, "451302": 301, "3318": 301, "9710": 301, "477444": 301, "4944": 301, "3068": 301, "502124": 301, "0790": 301, "7890": 301, "462595": 301, "7389": 301, "8006": 301, "491811": 301, "6677": 301, "7770": 301, "477864": 301, "6488": 301, "0460": 301, "472418": 301, "9834": 301, "9929": 301, "474434": 301, "0359": 301, "2120": 301, "478021": 301, "0706": 301, "1991": 301, "474688": 301, "0336": 301, "8083": 301, "475373": 301, "0636": 301, "2525": 301, "473063": 301, "0292": 301, "8033": 301, "473542": 301, "0651": 301, "9375": 301, "483644": 301, "0661": 301, "5310": 301, "462817": 301, "0432": 301, "1300": [301, 311], "446808": 301, "7913": 301, "90": [301, 328], "1894": 301, "489466": 301, "9838": 301, "9945": 301, "474441": 301, "0361": 301, "478038": 301, "ruv_prop_estim": [301, 306, 311, 325], "pop_clage_estim": 301, "209972": [301, 306, 309, 311, 317], "197452": 301, "005338": 301, "192852": 301, "199549": 301, "193411": 301, "195608": 301, "192557": 301, "198783": 301, "191425": 301, "192934": 301, "192682": 301, "000659": 301, "199545": 301, "000303": 301, "193747": 301, "000956": 301, "197305": 301, "006150": 301, "194664": 301, "005918": 301, "198812": 301, "000334": 301, "192753": 301, "006503": 301, "194238": 301, "009567": 301, "189160": 301, "005291": 301, "195766": 301, "003125": 301, "195730": 301, "004767": 301, "195098": 301, "006600": 301, "195843": 301, "001364": 301, "189330": 301, "003100": 301, "193116": 301, "008094": 301, "189540": 301, "006380": 301, "196038": 301, "002606": 301, "197429": 301, "000340": 301, "204599": 301, "002549": 301, "190442": 301, "000522": 301, "195705": 301, "005726": 301, "192398": 301, "002984": 301, "196915": 301, "000299": 301, "198387": 301, "001229": 301, "190453": 301, "000216": 301, "197082": 301, "005988": 301, "191512": 301, "002433": 301, "194217": 301, "000649": 301, "191075": 301, "001918": 301, "197129": 301, "005915": 301, "183751": 301, "001489": 301, "187999": 301, "001004": 301, "194026": 301, "005955": 301, "187663": 301, "002481": 301, "193344": 301, "009365": 301, "187822": 301, "002901": 301, "187730": 301, "187425": 301, "002946": 301, "184713": 301, "006622": 301, "187724": 301, "002919": 301, "187525": 301, "003050": 301, "192812": 301, "005142": 301, "183104": 301, "001493": 301, "187672": 301, "002483": 301, "193349": 301, "009366": 301, "pop_clwt_estim": 301, "382904": 301, "010536": 301, "387669": 301, "010497": 301, "396947": 301, "010523": 301, "385807": 301, "010703": 301, "554417": 301, "011851": 301, "519989": 301, "012179": 301, "808497": 301, "011109": 301, "737404": [301, 327], "007109": 301, "709206": 301, "000803": 301, "736659": 301, "000429": 301, "706752": 301, "000822": 301, "662625": 301, "002097": 301, "709124": 301, "000793": 301, "704774": 301, "427285": 301, "003711": 301, "779125": 301, "001087": 301, "007108": 301, "pop_matage_estim": 301, "pop_matsex_estim": 301, "059279": 301, "517590": 301, "056724": 301, "520520": 301, "063392": 301, "057943": 301, "019268": 301, "348000": 301, "008419": 301, "040813": 301, "045624": 301, "023159": 301, "057041": 301, "059912": 301, "003577": 301, "495110": 301, "070972": 301, "033397": 301, "013863": 301, "012482": 301, "367050": 301, "020109": 301, "442940": 301, "030354": 301, "491875": 301, "038044": 301, "224276": 301, "001885": 301, "848782": 301, "017435": 301, "646840": 301, "585757": 301, "000169": 301, "367142": 301, "002221": 301, "737357": 301, "009685": 301, "033267": 301, "009238": 301, "267484": 301, "012667": 301, "165471": 301, "005033": 301, "094740": 301, "010833": 301, "065816": 301, "004749": 301, "096523": 301, "005557": 301, "098655": 301, "107862": 301, "012020": 301, "118838": 301, "005781": 301, "002862": 301, "222520": 301, "005160": 301, "361570": 301, "008017": 301, "030930": 301, "005034": 301, "094706": 301, "010829": 301, "065876": 301, "pop_matwt_estim": 301, "019706": 301, "014651": 301, "020136": 301, "014954": 301, "022336": 301, "011936": 301, "005508": 301, "002344": 301, "013967": 301, "034213": 301, "034044": 301, "009672": 301, "008593": 301, "017124": 301, "000315": 301, "022223": 301, "019316": 301, "009542": 301, "010323": 301, "008652": 301, "018053": 301, "019211": 301, "001906": 301, "014021": 301, "011399": 301, "003565": 301, "010903": 301, "014331": 301, "013699": 301, "015830": 301, "000202": [301, 327], "002078": 301, "009019": 301, "005773": 301, "012366": 301, "002607": 301, "002247": 301, "005768": 301, "011567": 301, "006160": 301, "014272": 301, "004566": 301, "010938": 301, "002378": 301, "007473": 301, "011606": 301, "010672": 301, "000456": 301, "009445": 301, "014649": 301, "012169": 301, "005771": 301, "002248": 301, "pop_vcwt_estim": 301, "953372": 301, "013320": 301, "984897": 301, "012092": 301, "972469": 301, "011946": 301, "954734": 301, "010781": 301, "009540": 301, "009922": 301, "989687": 301, "009576": 301, "986758": 301, "869150": 301, "632058": 301, "008418": 301, "751771": 301, "007571": 301, "416489": 301, "013879": 301, "724866": 301, "008196": 301, "746265": 301, "007399": 301, "727224": 301, "008331": 301, "666572": 301, "010074": 301, "751144": 301, "008031": 301, "711725": 301, "008833": 301, "012851": 301, "967468": 301, "751794": 301, "007573": 301, "416464": 301, "013880": 301, "110": [301, 309, 311, 317, 325], "113": [301, 309, 311, 317, 325], "121": [301, 309, 311, 317, 325], "1403": [301, 309, 311, 317, 325], "1404": [301, 309, 311, 317, 325], "1405": [301, 309, 311, 317, 325], "1406": [301, 309, 311, 317, 325], "1407": [301, 309, 311, 317, 325], "757118": [301, 309, 311, 317], "659694": [301, 309, 311, 317], "302503": [301, 309, 311, 317], "464327": [301, 309, 311, 317], "034898": [301, 309, 311, 317], "482240": 301, "223632": 301, "357442": 301, "119299": 301, "565277": 301, "696443": 301, "062486": 301, "234841": 301, "088594": 301, "953572": 301, "857979": 301, "193305": 301, "003283": 301, "861988": 301, "188718": 301, "005806": 301, "962325": 301, "455479": 301, "289527": 301, "216857": 301, "4015": 301, "2022": [301, 306, 309, 311, 317, 329], "462": 301, "nhowev": [301, 306, 311], "reduced_ofv": [301, 326], "extended_ofv": [301, 326], "ofv_drop": [301, 326], "extended_st": [301, 326], "621435": 301, "246753": 301, "394001": 301, "645626": 301, "219363": 301, "001068": 301, "875674": 301, "899671": 301, "152040": 301, "126842": 301, "678359": 301, "045482": 301, "821275": 301, "431017": 301, "290062": 301, "366965": 301, "488428": 301, "591623": 301, "039740": 301, "659788": 301, "942802": 301, "017391": 301, "380435": 301, "441298": 301, "668043": 301, "180108": 301, "388697": 301, "680065": 301, "025518": 301, "935973": 301, "446136": 301, "690615": 301, "782563": 301, "002416": 301, "644805": 301, "554053": 301, "674591": 301, "072441": 301, "183059": 301, "134631": 301, "547765": 301, "311846": 301, "373764": 301, "196444": 301, "delta_df": [301, 326], "extended_signific": [301, 326], "covariate_effect": [301, 307, 324, 326], "ofv_summari": [301, 326], "candidate_summari": [301, 326], "n_test": [301, 326], "n_ok": [301, 326], "n_localmin": [301, 326], "n_fail": [301, 326], "stepinclud": [301, 326], "estimation_ofv": 302, "prediction_ofv": 302, "545": 302, "863847": 302, "186": 302, "192727": 302, "512": 302, "953185": 302, "694832": 302, "547": 302, "843632": 302, "184": [302, 322, 326], "022535": 302, "579": 302, "109635": 302, "596550": 302, "prediction_ofv_sum": 302, "747": 302, "506644594254": 302, "read_raw_dataset": 303, "sever": [303, 308, 316, 324], "examin": [303, 306, 308, 317, 330], "di": 303, "role": 303, "identif": [303, 325], "mostli": [303, 304, 321], "steven": 303, "typologi": 303, "en": [303, 304, 307], "wikipedia": 303, "wiki": [303, 312], "level_of_measur": 303, "annot": 303, "kg": 303, "mg": 303, "l": 303, "low": [303, 316, 330], "understand": [303, 320], "accompani": [303, 312], "arrai": [303, 314, 316, 329], "And": [303, 312, 316, 329], "under": [304, 310, 312, 326, 331], "construct": [304, 320], "complet": 304, "four": 304, "distinct": 304, "layer": [304, 317, 319], "worklow": 304, "higher": [304, 310, 314, 316, 327], "coupl": 304, "mathemat": [304, 314, 321], "concid": 304, "live": 304, "namespac": 304, "mutablesequ": 304, "scalar": [304, 314], "element": [304, 315, 331], "concern": [304, 312], "expos": 304, "numpydoc": 304, "readthedoc": 304, "ecosystem": 304, "thu": [304, 309, 312, 314, 329], "wrap": 304, "share": [304, 312, 319], "leak": 304, "third": [304, 312], "parti": [304, 312], "break": 304, "run_estmethod": 306, "chapter": [306, 317], "few": 306, "cartesian": 306, "addition": [306, 317, 329], "9999": 306, "runtime_estim": 306, "estmethod_run2": 306, "2422": 306, "465718": 306, "estmethod_run1": 306, "2271": 306, "769243": 306, "run_typ": 306, "1299": [306, 311], "696027": 306, "2420": 306, "117263": 306, "145": 306, "2702": 306, "1840": 306, "3241": 306, "6578": 306, "iiv_cl_estim": [306, 311, 325], "iiv_vc_estim": [306, 311, 325], "481858": [306, 309, 311, 317], "593654": [306, 309, 311, 317], "439589": 306, "483291": 306, "598179": 306, "901289": 306, "419533": 306, "408292": 306, "iiv_mat_estim": [306, 311, 325], "000130": [306, 311, 317], "322572": 306, "197647": 306, "865979": 306, "105366": 306, "10000": 306, "WITH": [306, 309, 311, 312, 328], "THE": [306, 309, 311, 312, 328], "model_3b": 307, "u": [307, 316], "eta_i": 307, "n_": 307, "par": [307, 314], "eta_k": 307, "bmatrix": 307, "vdot": 307, "eta_": [307, 314, 316], "sim": [307, 314, 316, 327], "mathcal": [307, 314, 316], "mu_2": 307, "omega_": [307, 314], "n1": 307, "n2": 307, "ddot": 307, "latter": 307, "partit": 307, "5th": 307, "630859": 307, "868770": 307, "176754": 307, "95th": 307, "925602": 307, "082310": 307, "244607": 307, "569077": 307, "600360": 307, "632538": 307, "532478": 307, "824355": 307, "138312": 307, "577861": 307, "761430": 307, "991915": 307, "003863": 307, "148763": 307, "297579": 307, "600771": 307, "631260": 307, "661025": 307, "315965": 307, "549669": 307, "811532": 307, "margin": 307, "ij": 307, "ijk": 307, "omega_k": 307, "sigma_1": 307, "sigma_2": 307, "sigma_i": 307, "turn": [307, 314], "percent": 307, "red": 307, "figur": [307, 328], "vconcatchart": 307, "sigma_": [307, 314], "020503": 307, "628814": 307, "009309": 307, "544459": 307, "026950": 307, "613127": 307, "050396": 307, "551581": 307, "individual_effect": 307, "913307": 307, "899565": 307, "923297": 307, "939015": 307, "926632": 307, "948404": 307, "933506": 307, "894967": 307, "970755": 307, "010192": 307, "973823": 307, "047109": 307, "992728": 307, "986142": 307, "999404": 307, "361911": 307, "322628": 307, "418737": 307, "894772": 307, "868658": 307, "917333": 307, "947797": 307, "923656": 307, "969732": 307, "771958": 307, "748072": 307, "790423": 307, "790120": 307, "768277": 307, "806911": 307, "percentu": 307, "unexplained_vari": 307, "sd_observ": 307, "sd_5th": 307, "sd_95th": 307, "469535": 307, "359934": 307, "547612": 307, "465490": 307, "352335": 307, "538174": 307, "165502": 307, "141580": 307, "190726": 307, "159149": 307, "134989": 307, "183613": 307, "420471": 307, "327104": 307, "490419": 307, "404440": 307, "306148": 307, "467046": 307, "143317": 307, "122348": 307, "166012": 307, "141826": 307, "120282": 307, "163610": 307, "percetil": 307, "025328": 307, "022571": 307, "020115": 307, "216681": 307, "188254": 307, "163572": 307, "027391": 307, "021634": 307, "020540": 307, "intermedi": 307, "model_4": [307, 314], "parameter_inits_and_estim": 307, "model_3": 307, "115195": 307, "007066": 307, "209016": 307, "125999": 307, "020191": 307, "224959": 307, "126000": 307, "007084": 307, "38635": 307, "220463": 307, "195326": 307, "176796": 307, "bsv_apgr": [307, 314], "010583": 307, "107027": 307, "000008": 307, "171529": 307, "404278": 307, "000010": 307, "012042": 307, "115427": 307, "000032": 307, "208475": 307, "415588": 307, "000030": 307, "062712": 307, "117271": 307, "039930": 307, "446939": 307, "402075": 307, "bsv_wgt": [307, 314], "244579": 307, "244448": 307, "002173": 307, "002170": 307, "244080": 307, "007763": 307, "007760": 307, "249237": 307, "034610": 307, "015250": 307, "relative_chang": 307, "773218": 307, "095327": 307, "520526": 307, "271369": 307, "110618": 307, "896": 307, "974324": 307, "868": [307, 309], "657803": 307, "852": 307, "803483": 307, "753": 307, "302743": 307, "themselv": 307, "ideal": 307, "estimated_covari": 307, "stdev": 307, "423728": 307, "237640": 307, "525424": 307, "704565": [307, 316], "nyberg": 307, "hb": 307, "jonsson": 307, "mo": 307, "introduct": 307, "cpt": 307, "pharmacometr": [307, 310, 312, 329], "syst": 307, "pharmacol": 307, "1002": 307, "psp4": 307, "12741": 307, "plan": 308, "stabl": 308, "googl": [308, 321], "coral": 308, "repo": 308, "tflite_runtim": 308, "nonlinear": 308, "read_model_result": 309, "aspect": [309, 316, 324, 329], "explor": [309, 321], "naiv": 309, "minima": 309, "\u03b4ofv": [309, 311, 317], "\u03b4aic": [309, 311, 317], "\u03b4bic": [309, 311, 317], "iivsearch_no_of_etas_candidate3": 309, "282024": 309, "iivsearch_no_of_etas_candidate2": 309, "217": 309, "691571": 309, "iivsearch_no_of_etas_candidate6": 309, "641987": 309, "iivsearch_no_of_etas_candidate1": 309, "631": 309, "871991": 309, "iivsearch_no_of_etas_candidate5": 309, "633": [309, 315], "419500": 309, "iivsearch_no_of_etas_candidate4": 309, "815": 309, "076729": 309, "iivsearch_no_of_etas_candidate7": 309, "834": 309, "249063": 309, "iivsearch_block_structure_candidate1": 309, "971960": 309, "1283": 309, "597406": 309, "1279": 309, "315382": 309, "1061": 309, "623812": 309, "893": 309, "673395": 309, "443392": 309, "645": 309, "895882": 309, "464": 309, "238653": 309, "066319": 309, "1365": 309, "569365": 309, "178325": 309, "1280": 309, "1278": [309, 317], "1070": 309, "204731": 309, "1058": 309, "897": 309, "963854": 309, "024311": 309, "644": 309, "650": 309, "186341": 309, "640": 309, "468": 309, "529112": 309, "458": 309, "437": 309, "440744": 309, "1364": 309, "1261": [309, 311], "189012": 309, "1259": [309, 317], "530267": [309, 317], "1039": 309, "215418": [309, 326], "641723": 309, "034998": 309, "620": 309, "864210": 309, "439": 309, "206982": 309, "417": 309, "411370": 309, "160972": 309, "5333": 309, "0366": 309, "1164": 309, "2929": 309, "8058": 309, "9055": 309, "2270": 309, "9424": 309, "1360": 309, "239": 309, "1090": 309, "234": 309, "6680": 309, "9380": 309, "6690": 309, "9880": 309, "433544": 309, "114210": 309, "347648": 309, "316164": 309, "310155": 309, "922906": 309, "434563": 309, "436279": 309, "481830": 309, "594777": 309, "396159": 309, "516927": 309, "593578": 309, "414690": 309, "247930": 309, "656304": 309, "00013": 309, "31998": 309, "08352": 309, "43473": 309, "209975": 309, "401593": 309, "574966": 309, "736398": 309, "750954": 309, "744891": 309, "810669": 309, "215885": 309, "iiv_cl_iiv_vc_estim": 309, "498114": 309, "965311": 309, "348227": 309, "596114": 309, "524856": 309, "831038": 309, "973037": 309, "826292": 309, "168816": 309, "275494": 309, "612863": 309, "081253": 309, "444919": 309, "093815": 309, "067016": 309, "554482": 309, "103963": 309, "060027": 309, "670815": 309, "108198": 309, "049148": 309, "371": 309, "rxode2": [310, 316], "post": [310, 325], "sens": 311, "brute": 311, "approach": 311, "nonzero": 311, "constant": 311, "iovsearch_run7": 311, "iovsearch_run8": 311, "540508": 311, "1265": 311, "694052": 311, "230772": 311, "384316": 311, "230394": 311, "383938": 311, "1262": 311, "153544": 311, "750000": 311, "403544": 311, "750400": 311, "403145": 311, "060114": 311, "093431": 311, "043077": 311, "1257": 311, "110467": 311, "782429": 311, "1115": 311, "911624": 311, "015062": 311, "707566": 311, "017679": 311, "017280": 311, "707992": 311, "707614": 311, "017728": 311, "1145": 311, "944840": 311, "230": 311, "1954": 311, "242": [311, 322, 324], "440613": 311, "665": 311, "439784": 311, "1951": 311, "241": 311, "1950": 311, "440611": 311, "1402": 311, "439785": 311, "439783": 311, "2313": 311, "438628": 311, "474140": 311, "586866": 311, "311861": 311, "472835": 311, "590422": 311, "320387": 311, "474125": 311, "586859": 311, "311859": 311, "474111": 311, "586860": 311, "311903": 311, "590425": 311, "320393": 311, "472840": 311, "590424": 311, "320395": 311, "572627": 311, "290631": 311, "omega_iov_1_estim": 311, "194680": 311, "002735": 311, "195532": 311, "194676": 311, "194675": 311, "195531": 311, "197005": 311, "483460": 311, "omega_iov_2_estim": 311, "omega_iov_3_estim": 311, "000006": 311, "000000e": [311, 326], "241921": 311, "119820": 311, "001912": 311, "068405": 311, "121866": 311, "620420": 311, "271367": 311, "291396": 311, "230854": 311, "051358": 311, "936871": 311, "267222": 311, "042977": 311, "050766": 311, "059323": 311, "250083": 311, "291876": 311, "187631": 311, "020838": 311, "612880": 311, "660334": 311, "657": 311, "279": [311, 322], "NEAR": [311, 317, 328], "adopt": 312, "wikimedia": 312, "bowl_of_hygieia_by_david": 312, "svg": 312, "cc": 312, "BY": 312, "sa": 312, "font": 312, "pt": 312, "san": 312, "relicens": 312, "lgpl": 312, "know": 312, "maintaint": 312, "2023": [312, 328], "softwar": [312, 314, 315, 316, 321, 329], "redistribut": 312, "publish": 312, "foundat": 312, "hope": 312, "warranti": 312, "impli": 312, "merchant": 312, "FOR": 312, "modif": [312, 324], "permit": 312, "retain": 312, "disclaim": 312, "reproduc": 312, "materi": 312, "holder": 312, "AND": 312, "AS": 312, "OR": 312, "BUT": 312, "NOT": 312, "TO": [312, 328], "OF": [312, 328], "IN": 312, "shall": 312, "BE": [312, 328], "liabl": 312, "incident": 312, "exemplari": 312, "consequenti": 312, "damag": 312, "procur": 312, "servic": 312, "loss": 312, "profit": 312, "busi": 312, "interrupt": 312, "theori": [312, 314], "liabil": 312, "contract": 312, "tort": 312, "neglig": 312, "aris": 312, "advis": 312, "SUCH": 312, "june": 312, "2007": 312, "inc": 312, "fsf": 312, "preambl": 312, "copyleft": 312, "practic": 312, "awai": 312, "contrast": 312, "guarante": 312, "speak": 312, "price": 312, "charg": 312, "wish": 312, "piec": 312, "prevent": 312, "deni": 312, "ask": [312, 331], "surrend": 312, "therefor": 312, "grati": 312, "fee": 312, "recipi": 312, "gpl": 312, "assert": 312, "offer": [312, 316], "permiss": 312, "clearli": 312, "sake": 312, "erron": 312, "devic": 312, "although": 312, "manufactur": 312, "fundament": 312, "incompat": 312, "aim": [312, 324], "systemat": 312, "abus": 312, "area": [312, 321], "unaccept": 312, "prohibit": 312, "substanti": 312, "domain": [312, 319, 329], "stand": 312, "readi": 312, "provis": 312, "futur": 312, "threaten": 312, "constantli": 312, "patent": 312, "danger": 312, "proprietari": 312, "assur": 312, "law": 312, "semiconductor": 312, "mask": 312, "license": 312, "address": 312, "organ": [312, 314], "fashion": 312, "exact": 312, "earlier": 312, "cover": [312, 317, 318, 320, 328, 330], "unmodifi": 312, "propag": 312, "secondarili": 312, "infring": 312, "countri": 312, "convei": 312, "mere": 312, "network": 312, "transfer": 312, "extent": 312, "conveni": [312, 314], "promin": 312, "visibl": 312, "menu": 312, "criterion": 312, "offici": 312, "wide": 312, "among": 312, "essenti": 312, "kernel": 312, "script": [312, 329], "link": [312, 325], "subprogram": 312, "intim": 312, "regener": 312, "grant": 312, "irrevoc": 312, "affirm": 312, "unlimit": 312, "constitut": 312, "fair": 312, "equival": [312, 329], "sole": 312, "facil": 312, "compli": 312, "behalf": 312, "relationship": [312, 326], "circumst": 312, "sublicens": 312, "anti": 312, "circumvent": 312, "deem": 312, "technolog": 312, "fulfil": 312, "oblig": 312, "articl": 312, "wipo": 312, "treati": 312, "decemb": 312, "1996": 312, "waiv": 312, "forbid": 312, "exercis": 312, "intent": 312, "enforc": 312, "medium": [312, 321], "conspicu": 312, "intact": 312, "absenc": 312, "relev": [312, 318, 329], "anyon": 312, "who": [312, 318], "possess": 312, "invalid": 312, "natur": 312, "storag": 312, "aggreg": 312, "beyond": 312, "embodi": 312, "durabl": 312, "customarili": 312, "interchang": 312, "spare": 312, "reason": [312, 321, 328], "cost": 312, "server": 312, "occasion": 312, "noncommerci": 312, "subsect": 312, "6b": 312, "further": [312, 314], "clear": [312, 331], "sai": [312, 318], "host": 312, "satisfi": 312, "peer": 312, "transmiss": 312, "6d": 312, "portion": 312, "consum": 312, "tangibl": 312, "household": 312, "sold": 312, "incorpor": 312, "dwell": 312, "doubt": 312, "resolv": [312, 319], "favor": 312, "coverag": 312, "typic": [312, 329], "commerci": 312, "industri": 312, "procedur": 312, "suffic": 312, "interf": 312, "perpetu": 312, "character": 312, "But": 312, "nor": 312, "abil": 312, "rom": 312, "advers": 312, "protocol": 312, "publicli": 312, "password": 312, "unpack": 312, "supplement": 312, "govern": 312, "notwithstand": 312, "misrepresent": 312, "licensor": 312, "declin": 312, "trademark": 312, "trade": 312, "indemnif": 312, "contractu": 312, "impos": 312, "surviv": 312, "expressli": 312, "void": 312, "paragraph": 312, "ceas": 312, "reinstat": 312, "provision": 312, "perman": 312, "notifi": 312, "prior": 312, "dai": 312, "cessat": 312, "moreov": 312, "cure": 312, "receipt": 312, "qualifi": 312, "ancillari": 312, "consequ": 312, "likewis": 312, "downstream": 312, "complianc": 312, "entiti": 312, "asset": 312, "subdivid": 312, "plu": 312, "effort": 312, "royalti": 312, "litig": 312, "claim": 312, "counterclaim": 312, "lawsuit": 312, "alleg": 312, "sell": 312, "sale": 312, "acquir": 312, "hereaft": 312, "manner": [312, 317], "worldwid": 312, "agreement": 312, "denomin": 312, "coven": 312, "sue": 312, "knowingli": 312, "readili": 312, "arrang": 312, "depriv": 312, "yourself": 312, "benefit": [312, 321], "knowledg": 312, "believ": 312, "pursuant": 312, "convey": 312, "discriminatori": 312, "scope": [312, 328], "payment": 312, "primarili": 312, "march": 312, "constru": 312, "defens": 312, "court": 312, "contradict": 312, "excus": 312, "simultan": [312, 317], "pertin": 312, "agre": 312, "whom": 312, "refrain": 312, "affero": 312, "revis": 312, "Such": 312, "spirit": 312, "ever": 312, "THERE": 312, "qualiti": 312, "prove": 312, "defect": 312, "repair": 312, "WILL": 312, "inabl": 312, "BEING": 312, "inaccur": 312, "sustain": 312, "failur": [312, 321], "review": 312, "waiver": 312, "civil": 312, "greatest": 312, "achiev": 312, "safest": 312, "pointer": 312, "brief": 312, "idea": [312, 321], "electron": 312, "paper": 312, "hypothet": 312, "Of": 312, "cours": 312, "gui": 312, "box": [312, 324], "employ": 312, "programm": 312, "school": 312, "philosophi": 312, "why": 312, "7b2feb6f20b626a559d3150f6638c111f20b5213": 312, "lin_evalu": 313, "lin_estim": 313, "847272": 313, "problemat": 313, "742853": 313, "722681": 313, "020172": 313, "049270": 313, "072922": 313, "023652": 313, "042005": 313, "025071": 313, "016933": 313, "812731": 313, "767326": 313, "045405": 313, "092668": 313, "052741": 313, "039927": 313, "345523": 313, "466217": 313, "120694": 313, "092993": 313, "062696": 313, "030297": 313, "515740": 313, "483016": 313, "032724": 313, "320532": 313, "253131": 313, "067401": 313, "998789": 313, "959488": 313, "039301": 313, "216717": 313, "214554": 313, "002163": 313, "099921": 313, "125228": 313, "025306": 313, "321679": 313, "306275": 313, "015405": 313, "261241": 313, "333707": 313, "072466": 313, "671243": 313, "651480": 313, "019763": 313, "330720": 313, "297562": 313, "033158": 313, "936161": 313, "906483": 313, "029678": 313, "714069": 313, "871090": 313, "157021": 313, "019825": 313, "011817": 313, "008008": 313, "056142": 313, "013498": 313, "042644": 313, "248747": 313, "213924": 313, "034823": 313, "605213": 313, "571494": 313, "033719": 313, "815937": 313, "898911": 313, "082974": 313, "454128": 313, "483765": 313, "029637": 313, "964631": 313, "119373": 313, "154742": 313, "186715": 313, "170103": 313, "016612": 313, "077661": 313, "064019": 313, "013642": 313, "940635": 313, "941894": 313, "001260": 313, "074883": 313, "073446": 313, "001437": 313, "256369": 313, "245489": 313, "010881": 313, "103887": 313, "101956": 313, "001932": 313, "907728": 313, "900485": 313, "007243": 313, "743720": 313, "709980": 313, "033740": 313, "047324": 313, "021009": 313, "026315": 313, "430306": 313, "400894": 313, "029412": 313, "781609": 313, "798011": 313, "016402": 313, "378940": 313, "371430": 313, "007511": 313, "194729": 313, "237151": 313, "042422": 313, "599213": 313, "525654": 313, "073559": 313, "709166": 313, "667521": 313, "041645": 313, "219054": 313, "180075": 313, "038978": 313, "122738": 313, "296506": 313, "173768": 313, "229686": 313, "228531": 313, "001156": 313, "756406": 313, "734272": 313, "022134": 313, "979740": 313, "927830": 313, "051910": 313, "813988": 313, "812185": 313, "001803": 313, "234962": 313, "233799": 313, "389988": 313, "431669": 313, "041681": 313, "057167": 313, "047647": 313, "009521": 313, "429917": 313, "365265": 313, "064652": 313, "011212": 313, "105276": 313, "094064": 313, "302735": 313, "342891": 313, "040156": 313, "292516": 313, "307608": 313, "015092": 313, "067193": 313, "977095": 313, "090098": 313, "359971": 313, "357379": 313, "002592": 313, "340768": 313, "341140": 313, "000372": 313, "515376": 313, "511708": 313, "003668": 313, "970486": 313, "940640": 313, "029846": 313, "638461": 313, "592266": 313, "046195": 313, "iofv_plot": 313, "At": [314, 328], "heart": 314, "li": [314, 329], "subclass": 314, "principl": 314, "mymodel": [314, 316], "parset": 314, "displaystyl": [314, 316], "eps_": 314, "similarli": [314, 331], "theta_": 314, "s_": 314, "a_": [314, 316], "quit": 314, "flexibl": 314, "cumbersom": 314, "unimport": 314, "frem_path": 314, "frem_model": 314, "frem_model_result": 314, "omega\u2082": 314, "omega\u2083": 314, "omega\u2084": 314, "\u2082": 314, "eta\u2083": 314, "\u2083": 314, "eta\u2084": 314, "eps\u2082": 314, "epscov": 314, "bsv_": 314, "omega_2_1": 314, "omega_3_1": 314, "omega_4_1": 314, "omega_3_2": 314, "omega_4_2": 314, "omega_4_3": 314, "000286193": 314, "0676481": 314, "0256033": 314, "0235094": 314, "00161838": 314, "24458": 314, "omega_est": 314, "0393482": 314, "0168369": 314, "0442286": 314, "0426757": 314, "0259374": 314, "0654878": 314, "00168063": 314, "983027": 314, "240423": 314, "98305": 314, "choleski": 314, "198363807182661": 314, "0848788911603008": 314, "136868454493349": 314, "222967085720797": 314, "616745467855979": 314, "743597812371906": 314, "215138540674925": 314, "145697201390566": 314, "508675383095755": 314, "810424017694199": 314, "pure": 314, "astyp": 314, "numeric64": 314, "linalg": 314, "19836381": 314, "08487889": 314, "13686845": 314, "22296709": 314, "61674547": 314, "74359781": 314, "21513854": 314, "1456972": 314, "50867538": 314, "81042402": 314, "esim": 315, "testdata": 315, "2760562818805": 315, "171321": 315, "167051": 315, "115069": 315, "Or": 315, "039153": 315, "022378": 315, "009904": 315, "044731": 315, "027325": 315, "527072": 315, "457068": 315, "267918": 315, "172147": 315, "proper": 315, "388058": 315, "356900": 315, "238442": 315, "096516": 315, "invers": 315, "29955600": 315, "800": 315, "400": 315, "910": 315, "267": 315, "039": 315, "207": 315, "809": 315, "520": 315, "980": 315, "200": 315, "450": 315, "810": 315, "947352": 315, "970591": 315, "982342": 315, "457091": 315, "839437": 315, "257230": 315, "098338": 315, "538621": 315, "647969": 315, "394643": 315, "480164": 315, "650233": 315, "991406": 315, "378880": 315, "739902": 315, "328800": 315, "113284": 315, "212096": 315, "334047": 315, "327778": 315, "821533": 315, "631281": 315, "861669": 315, "915261": 315, "988977": 315, "279273": 315, "733181": 315, "830053": 315, "851724": 315, "212095": 315, "774791": 315, "352283": 315, "172643": 315, "427376": 315, "381444": 315, "624014": 315, "970627": 315, "177028": 315, "206540": 315, "955029": 315, "982447": 315, "051499": 315, "424503": 315, "734342": 315, "018477": 315, "810285": 315, "279258": 315, "168486": 315, "190508": 315, "749134": 315, "598565": 315, "237467": 315, "568934": 315, "800062": 315, "098025": 315, "586253": 315, "663948": 315, "850993": 315, "605845": 315, "143": 315, "045": [315, 322], "971": 315, "881": 315, "575": 315, "080": 315, "063": 315, "427": 315, "668": 315, "543": 315, "662": 315, "478": 315, "667": 315, "253": 315, "495": 315, "918": 315, "67071": 315, "401100": 315, "35080": 315, "587770": 315, "36360": 315, "278800": 315, "19730": 315, "670700": 315, "21710": 315, "352600": 315, "86050": 315, "067200": 315, "35060": 315, "059269": 315, "72100": 315, "036754": 315, "10860": 315, "814140": 315, "28180": 315, "699410": 315, "eb": 315, "043861": 315, "005430": 315, "166321": 315, "131833": 315, "095934": 315, "130868": 315, "009154": 315, "017388": 315, "102019": 315, "283500": 315, "019417": 315, "099839": 315, "045946": 315, "059072": 315, "024270": 315, "189351": 315, "248536": 315, "091872": 315, "009545": 315, "012052": 315, "066151": 315, "293685": 315, "030236": 315, "074789": 315, "094502": 315, "147433": 315, "076820": 315, "105604": 315, "020051": 315, "066265": 315, "086035": 315, "023260": 315, "067138": 315, "030859": 315, "337255": 315, "035532": 315, "032579": 315, "028410": 315, "003589": 315, "080613": 315, "060233": 315, "052854": 315, "004469": 315, "057344": 315, "051992": 315, "212941": 315, "137510": 315, "004111": 315, "023282": 315, "302636": 315, "039069": 315, "119442": 315, "044956": 315, "263320": 315, "000776": 315, "083231": 315, "003150": 315, "012752": 315, "049654": 315, "080932": 315, "000555": 315, "099614": 315, "061864": 315, "332738": 315, "038156": 315, "067641": 315, "038017": 315, "184137": 315, "156617": 315, "208753": 315, "114558": 315, "053036": 315, "008405": 315, "026004": 315, "144920": 315, "081646": 315, "083320": 315, "015380": 315, "000392": 315, "078062": 315, "018966": 315, "112030": 315, "112715": 315, "383786": 315, "001730": 315, "167583": 315, "042068": 315, "066598": 315, "037600": 315, "000093": 315, "010662": 315, "009775": 315, "058306": 315, "229005": 315, "033958": 315, "008959": 315, "092312": 315, "050987": 315, "192569": 315, "002727": 315, "225657": 315, "115824": 315, "204269": 315, "054792": 315, "066334": 315, "123689": 315, "239678": 315, "047215": 315, "186615": 315, "000949": 315, "010812": 315, "015929": 315, "017213": 315, "005234": 315, "122552": 315, "076677": 315, "095696": 315, "024883": 315, "002999": 315, "007157": 315, "inspect": [316, 330], "model_nlmixr": 316, "diff": [316, 321], "add_error": 316, "focei": 316, "model_start": 316, "eta_vc": 316, "pop_": 316, "225": 316, "epsilon_": 316, "\u03c3": 316, "iiv_mat": 316, "iiv_": 316, "advan2": 316, "THEN": 316, "22500000000000e": 316, "cond": 316, "maxev": 316, "99999": 316, "cipredi": 316, "mytab": 316, "tlag": 316, "alag1": 316, "pop_mdt": 316, "advan3": 316, "trans4": 316, "run4": 316, "tol": 316, "pop_clmm": 316, "pop_km": 316, "iiv_clmm": 316, "iiv_clmm_iiv_vc": 316, "iiv_cl_iiv_mat": 316, "iiv_vc_iiv_mat": 316, "0094868": 316, "onto": 316, "wgt_median": 316, "30000": 316, "clwgt": 316, "pop_clwgt": 316, "user_effect": 316, "wgt_std": 316, "add_population_paramet": 316, "unfix_parameters_to": 316, "\u03b5\u209a\u2081": 316, "p1": 316, "set_time_varying_error_model": [316, 325], "100000000000000": 316, "f_flag": 316, "f_": 316, "geq": 316, "get_id": 316, "get_mdv": 316, "largest": 316, "ser": 316, "delai": [317, 328, 329], "grammar": [317, 328], "filtrat": 317, "leav": 317, "exhaustive_stepwis": 317, "obtain": 317, "basi": 317, "subsequ": [317, 318, 329], "modelsearch_candidate2": [317, 329], "594608": 317, "1272": 317, "124874": 317, "modelsearch_candidate3": [317, 329], "558028": 317, "088295": 317, "modelsearch_candidate4": [317, 329], "956313": 317, "1270": 317, "486580": 317, "287000": 317, "1260": 317, "817266": 317, "362287": 317, "1327": 317, "153182": 317, "1325": 317, "551467": 317, "1307": 317, "301235": 317, "1295": 317, "1305": 317, "1289": 317, "2927": 317, "4334": 317, "7778": 317, "0058": 317, "1640": 317, "260324": 317, "7646": 317, "824443": 317, "5477": 317, "607839": 317, "1147": 317, "842498": 317, "470974": 317, "595276": 317, "526185": 317, "930160": 317, "495109": 317, "322680": 317, "470531": 317, "515250": 317, "312692": 317, "194221": 317, "202201": 317, "207885": 317, "232322": 317, "199750": 317, "205369": 317, "193439": 317, "pop_qp1_estim": 317, "pop_vp1_estim": 317, "pop_mdt_estim": 317, "155413": 317, "4192": 317, "6100": 317, "172730": 317, "3977": 317, "4562": 317, "158070": 317, "8042": 317, "8517": 317, "iiv_mdt_estim": 317, "156289": 317, "192020": 317, "092419": 317, "262429": 317, "720369": 317, "464263": 317, "127061": 317, "906722": 317, "053781": 317, "923055": 317, "795863": 317, "030658": 317, "661330": 317, "168680": 317, "833073": 317, "041529": 317, "205858": 317, "064930": 317, "609673": 317, "396329": 317, "928556": 317, "365": 317, "330": 317, "topic": 318, "scheme": 318, "theta_cl": 318, "mention": 318, "ve": 318, "despit": 318, "write_etas_in_abbr": 318, "altair": [319, 321], "vega": 319, "lite": 319, "ggplot": 319, "editor": 319, "clamp": 319, "vconcat": 319, "spec": 319, "inten": 320, "export": 320, "strictli": 320, "necessesari": 320, "detect_model": 320, "summer": 321, "master": 321, "thesi": 321, "internship": 321, "email": 321, "team": 321, "tox": 321, "pytest": 321, "sphinx": 321, "wise": 321, "known": 321, "trial": 321, "involv": 321, "outcom": 321, "350h": 321, "difficulti": 321, "mentor": 321, "scipi": 321, "focu": 321, "proof": 321, "concept": 321, "algebra": 321, "simul": [321, 327], "scratch": 321, "almost": 321, "compat": 321, "benefici": 321, "175h": 321, "easi": 321, "potenti": 321, "eas": 321, "jupyt": 321, "holoview": 321, "bokeh": 321, "monitor": 321, "ongo": 321, "veri": 321, "happen": [321, 331], "converg": 321, "sort": [321, 329], "dashboard": 321, "complement": 321, "realtim": 321, "restart": [321, 331], "middl": 321, "worflow": 321, "cv": [322, 324], "772": [322, 324], "700": 322, "042": [322, 324], "sdeps_0": [322, 324], "t1": 322, "298": 322, "sdeps_t1": 322, "t2": 322, "886": 322, "sdeps_t2": 322, "t3": 322, "272": 322, "sdeps_t3": 322, "t4": 322, "716": 322, "sdeps_t4": 322, "t5": 322, "218": 322, "sdeps_t5": 322, "t6": 322, "928": 322, "sdeps_t6": 322, "t7": 322, "092": 322, "sdeps_t7": 322, "t8": 322, "914": 322, "sdeps_t8": 322, "t9": 322, "840": 322, "sdeps_t9": 322, "390": [322, 324], "159": [322, 324], "t0": [322, 324], "271": [322, 324], "sdeps_t0": [322, 324], "956": [322, 324], "717": 322, "014": 322, "983": 322, "884": 322, "017": 322, "955": 322, "958": 322, "969": 322, "933": 322, "022": 322, "819": 322, "007": 322, "755": 322, "982": 322, "642": 322, "387": 322, "th_0": 322, "257": 322, "867": 322, "th_t1": 322, "211": 322, "th_t2": 322, "277": 322, "761": 322, "th_t3": 322, "033": 322, "th_t4": 322, "367": 322, "th_t5": 322, "204": 322, "170": 322, "th_t6": 322, "078": 322, "th_t7": 322, "841": 322, "th_t8": 322, "th_t9": 322, "030": 322, "124": 322, "289": 322, "386": 322, "203": 322, "287": 322, "019": 322, "delta_pow": [322, 324], "037": [322, 324], "autocorrel": [322, 324], "dtb": [322, 324], "91": [322, 324], "idv_varying_ruv": 322, "idv_varying_ruv_cutoff0": 322, "idv_varying_ruv_cutoff1": 322, "idv_varying_ruv_cutoff2": 322, "idv_varying_ruv_cutoff3": 322, "idv_varying_ruv_cutoff4": 322, "idv_varying_ruv_cutoff5": 322, "idv_varying_ruv_cutoff6": 322, "idv_varying_ruv_cutoff7": 322, "idv_varying_ruv_cutoff8": 322, "idv_varying_combin": 322, "idv_varying_theta": 322, "sdep": 322, "delet": 323, "diagnost": 323, "improement": 324, "592698": 324, "197887": 324, "007493": 324, "521171": 324, "et1apgr": 324, "487930": 324, "residual_error_model": 324, "910000": 324, "030000": 324, "diagnos": 324, "structural_bia": 324, "cpred": 324, "binmin": 324, "binmax": 324, "binid": 324, "258": 324, "strutur": 324, "mdel": 324, "fullblock_paramet": 324, "183463": 324, "171306": 324, "554610": 324, "154408": 324, "167053": 324, "cox": 324, "boxcox_paramet": 324, "shape": 324, "new_sd": 324, "old_sd": 324, "922083": 324, "182037": 324, "332800": 324, "166021": 324, "tdist_paramet": 324, "9997": 324, "168477": 324, "9986": 324, "166469": 324, "residual_error": 324, "additional_paramet": 324, "coeff": 324, "48793": 324, "033334": 324, "48218": 324, "052342": 324, "59034": 324, "008371": 324, "00887": 324, "003273": 324, "ibrahim": 325, "quickli": [325, 329], "inde": 325, "cwres_model": 325, "479721": 325, "385268": 325, "002792": 325, "time_varying1": 325, "117041": 325, "time_varying2": 325, "555154": 325, "time_varying3": 325, "336641": 325, "091207": 325, "065738": 325, "654562": 325, "046578": 325, "519115": 325, "612710": 325, "643741": 325, "027766": 325, "sigma_add": 325, "000367": 325, "sigma_prop": 325, "967365": 325, "00123": 325, "0976": 325, "12252": 325, "14299": 325, "000337": 325, "05242": 325, "006105": 325, "10545": 325, "12659": 325, "15573": 325, "00054": 325, "04769": 325, "030825": 325, "mox3": 325, "best_ruvsearch_2": 325, "2460": 325, "704469": 325, "957378": 325, "2473": 325, "661847": 325, "269102": 325, "2495": 325, "973571": 325, "2444": 325, "2455": 325, "2475": 325, "2423": 325, "757516": 325, "2435": 325, "047712": 325, "068976": 325, "707": 325, "5434": 325, "531596": 325, "794": 325, "3091": 325, "528620": 325, "733": 325, "3094": 325, "532547": 325, "iiv_vc_iiv_cl_estim": 325, "077743": 325, "038888": 325, "076793": 325, "039924": 325, "071628": 325, "038470": 325, "072309": 325, "704770": 325, "093311": 325, "074889": 325, "707665": 325, "081095": 325, "075048": 325, "705429": 325, "044311": 325, "iiv_ruv1_estim": 325, "time_varying_estim": 325, "039675": 325, "040734": 325, "42509": 325, "215727": 325, "655144": 325, "708324": 325, "762729": 325, "236530": 325, "229762": 325, "715966": 325, "423148": 325, "419741": 325, "774540": 325, "164274": 325, "450202": 325, "195425": 325, "960585": 325, "090461": 325, "848498": 325, "052021": 325, "239462": 325, "065148": 325, "571348": 325, "244582": 325, "161981": 325, "509910": 325, "373696": 325, "084489": 325, "647643": 325, "344772": 325, "083776": 325, "259395": 325, "101415": 325, "024651": 325, "443542": 325, "124023": 325, "183089": 325, "977222": 325, "219": 325, "moustafa": 325, "m": 325, "maria": 325, "kjellsson": 325, "aap": 325, "1208": 325, "s12248": 325, "018": 325, "0240": 325, "pha": 326, "219210": 326, "90878": 326, "219167": 326, "36222": 326, "bmi": 326, "219171": 326, "47564": 326, "cycll": 326, "219203": 326, "94536": 326, "diag": 326, "219206": 326, "01527": 326, "disdur": 326, "219032": 326, "86056": 326, "215321": 326, "70954": 326, "215306": 326, "67698": 326, "phia": 326, "men": 326, "215407": 326, "40295": 326, "phib": 326, "georeg": 326, "215373": 326, "77800": 326, "216968": 326, "25989": 326, "slp": 326, "215359": 326, "18150": 326, "54656": 326, "140000e": 326, "43314": 326, "390000e": 326, "96342": 326, "319000e": 326, "89351": 326, "695800e": 326, "178": 326, "04822": 326, "290000e": 326, "03256": 326, "060000e": 326, "72597": 326, "10102": 326, "580000e": 326, "1661": 326, "58291": 326, "50452": 326, "phaag": 326, "phabmi": 326, "phacycl": 326, "phadiag": 326, "phadisdur": 326, "backward_scm_dir1": 326, "phawt": 326, "phiamen": 326, "phibgeoreg": 326, "phibmen": 326, "slpgeoreg": 326, "304": 326, "beween": 326, "slightli": 326, "215961": 326, "46277": 326, "3249": 326, "44601": 326, "215748": 326, "07194": 326, "213": 326, "39083": 326, "215570": 326, "57352": 326, "49842": 326, "215486": 326, "23440": 326, "33912": 326, "87007": 326, "36433": 326, "215357": 326, "74693": 326, "12314": 326, "215337": 326, "95044": 326, "79649": 326, "24090": 326, "215332": 326, "91461": 326, "23763": 326, "67861": 326, "00163": 326, "215450": 326, "74783": 326, "07085": 326, "215491": 326, "11568": 326, "43870": 326, "500000e": 326, "700000e": 326, "170000e": 326, "260000e": 326, "360000e": 326, "600000e": 326, "020000e": 326, "620000e": 326, "430000e": 326, "200000e": 326, "lbest": 326, "cpl": 326, "853273": 327, "215148": 327, "885525": 327, "860736": 327, "995045": 327, "575351": 327, "533799": 327, "993262": 327, "080061": 327, "568383": 327, "482883": 327, "300884": 327, "322738": 327, "905658": 327, "276361": 327, "376218": 327, "005653": 327, "928279": 327, "546277": 327, "313336": 327, "489785": 327, "898802": 327, "098483": 327, "795252": 327, "058260": 327, "542369": 327, "968860": 327, "773450": 327, "706108": 327, "078494": 327, "775938": 327, "873918": 327, "210594": 327, "600450": 327, "916754": 327, "823449": 327, "793703": 327, "899285": 327, "639544": 327, "104682": 327, "136767": 327, "405150": 327, "330868": 327, "230477": 327, "185132": 327, "354616": 327, "488282": 327, "406903": 327, "438225": 327, "479966": 327, "720261": 327, "884839": 327, "736463": 327, "892761": 327, "924846": 327, "432346": 327, "436720": 327, "367480": 327, "061750": 327, "849137": 327, "024193": 327, "694969": 327, "341680": 327, "054791": 327, "925921": 327, "423537": 327, "548598": 327, "387386": 327, "759167": 327, "864669": 327, "962122": 327, "705806": 327, "424024": 327, "853355": 327, "317393": 327, "280139": 327, "086333": 327, "056381": 327, "413680": 327, "695800": 327, "331177": 327, "631655": 327, "603301": 327, "449888": 327, "704503": 327, "541680": 327, "371773": 327, "758919": 327, "748996": 327, "138213": 327, "026935": 327, "316351": 327, "966413": 327, "814952": 327, "272954": 327, "929655": 327, "009725": 327, "937635": 327, "878300": 327, "715708": 327, "421235": 327, "563473": 327, "459161": 327, "462408": 327, "868224": 327, "383043": 327, "480043": 327, "959843": 327, "260472": 327, "179394": 327, "933191": 327, "676905": 327, "300601": 327, "811596": 327, "398492": 327, "218010": 327, "585174": 327, "956306": 327, "570879": 327, "786560": 327, "191401": 327, "051986": 327, "726349": 327, "445912": 327, "351180": 327, "612812": 327, "553003": 327, "767349": 327, "099846": 327, "876780": 327, "806204": 327, "584818": 327, "846457": 327, "822404": 327, "991350": 327, "924166": 327, "998400": 327, "892200": 327, "207434": 327, "565671": 327, "326447": 327, "115117": 327, "225727": 327, "018880": 327, "434087": 327, "341361": 327, "782192": 327, "806515": 327, "348921": 327, "250063": 327, "599116": 327, "086788": 327, "574493": 327, "296737": 327, "382526": 327, "944073": 327, "831345": 327, "516464": 327, "994987": 327, "574667": 327, "857266": 327, "485191": 327, "901408": 327, "793265": 327, "072216": 327, "874349": 327, "002572": 327, "733704": 327, "693935": 327, "912201": 327, "711150": 327, "676572": 327, "151243": 327, "707700": 327, "905528": 327, "069326": 327, "800871": 327, "954047": 327, "931900": 327, "538437": 327, "186642": 327, "077897": 327, "748099": 327, "731336": 327, "376121": 327, "196475": 327, "773375": 327, "819544": 327, "247095": 327, "504667": 327, "372391": 327, "848184": 327, "762211": 327, "843029": 327, "765259": 327, "455400": 327, "826862": 327, "572217": 327, "056323": 327, "187278": 327, "257409": 327, "502366": 327, "119652": 327, "298009": 327, "370226": 327, "802175": 327, "360000": 327, "305631": 327, "134650": 327, "361844": 327, "597045": 327, "639042": 327, "716192": 327, "544260": 327, "266702": 327, "169391": 327, "400720": 327, "977219": 327, "676934": 327, "022410": 327, "868679": 327, "106708": 327, "974785": 327, "641421": 327, "597599": 327, "424237": 327, "982047": 327, "904024": 327, "886356": 327, "853009": 327, "087082": 327, "098997": 327, "169297": 327, "840067": 327, "712658": 327, "374133": 327, "151935": 327, "963905": 327, "856403": 327, "884553": 327, "044583": 327, "415675": 327, "567520": 327, "351619": 327, "118999": 327, "893425": 327, "360173": 327, "396594": 327, "999275": 327, "255630": 327, "509070": 327, "046265": 327, "414926": 327, "358567": 327, "899880": 327, "408061": 327, "324755": 327, "684344": 327, "907778": 327, "496109": 327, "473731": 327, "297200": 327, "394438": 327, "493584": 327, "362886": 327, "222423": 327, "864820": 327, "606428": 327, "119216": 327, "933397": 327, "988252": 327, "206488": 327, "862927": 327, "693535": 327, "448507": 327, "178177": 327, "517867": 327, "911020": 327, "965455": 327, "764024": 327, "518105": 327, "477206": 327, "346212": 327, "453899": 327, "500103": 327, "133073": 327, "320820": 327, "408266": 327, "462547": 327, "783555": 327, "585654": 327, "027851": 327, "180204": 327, "337790": 327, "036534": 327, "972480": 327, "960296": 327, "402983": 327, "457112": 327, "195385": 327, "378125": 327, "723710": 327, "587323": 327, "032512": 327, "814145": 327, "016286": 327, "269137": 327, "408322": 327, "950516": 327, "788249": 327, "602344": 327, "846592": 327, "448461": 327, "159667": 327, "884049": 327, "777419": 327, "451814": 327, "243399": 327, "541949": 327, "625663": 327, "601504": 327, "416254": 327, "866250": 327, "933824": 327, "371639": 327, "907322": 327, "487277": 327, "418469": 327, "495039": 327, "087071": 327, "663661": 327, "606033": 327, "547459": 327, "675347": 327, "573838": 327, "611250": 327, "500411": 327, "584165": 327, "247584": 327, "271405": 327, "749030": 327, "860290": 327, "881148": 327, "824837": 327, "804622": 327, "876965": 327, "941132": 327, "153441": 327, "366355": 327, "348849": 327, "319025": 327, "885439": 327, "193338": 327, "054769": 327, "165042": 327, "230120": 327, "488686": 327, "921633": 327, "083424": 327, "027733": 327, "824880": 327, "946876": 327, "180960": 327, "654589": 327, "916884": 327, "604188": 327, "364078": 327, "370783": 327, "638247": 327, "467337": 327, "351839": 327, "957716": 327, "136159": 327, "472019": 327, "221459": 327, "664634": 327, "151210": 327, "318875": 327, "135159": 327, "527835": 327, "551158": 327, "526828": 327, "562788": 327, "615899": 327, "796073": 327, "293600": 327, "328937": 327, "818812": 327, "486179": 327, "376893": 327, "929665": 327, "446579": 327, "121901": 327, "114640": 327, "247238": 327, "615092": 327, "512627": 327, "408347": 327, "484284": 327, "018308": 327, "842566": 327, "867625": 327, "114753": 327, "664954": 327, "638560": 327, "078385": 327, "178961": 327, "282087": 327, "622712": 327, "882876": 327, "238692": 327, "678095": 327, "361556": 327, "037941": 327, "713778": 327, "166879": 327, "422555": 327, "708577": 327, "335429": 327, "567697": 327, "266944": 327, "989005": 327, "461262": 327, "388393": 327, "212573": 327, "621329": 327, "501489": 327, "277388": 327, "003027": 327, "110075": 327, "219194": 327, "366018": 327, "380865": 327, "905147": 327, "630512": 327, "961895": 327, "546036": 327, "534496": 327, "816485": 327, "231970": 327, "682987": 327, "900845": 327, "776532": 327, "988276": 327, "802797": 327, "749003": 327, "015416": 327, "725509": 327, "662582": 327, "196823": 327, "838099": 327, "212538": 327, "488859": 327, "851698": 327, "297823": 327, "140249": 327, "743671": 327, "429352": 327, "409142": 327, "659430": 327, "880881": 327, "191840": 327, "755737": 327, "775355": 327, "630846": 327, "956378": 327, "851982": 327, "794788": 327, "483346": 327, "668763": 327, "401748": 327, "382384": 327, "793645": 327, "455902": 327, "926835": 327, "498709": 327, "928532": 327, "425364": 327, "985533": 327, "497867": 327, "366585": 327, "030662": 327, "551558": 327, "565811": 327, "551208": 327, "662370": 327, "042324": 327, "630121": 327, "552114": 327, "580405": 327, "406685": 327, "035731": 327, "040276": 327, "275622": 327, "496993": 327, "957232": 327, "515088": 327, "155311": 327, "454421": 327, "361498": 327, "751915": 327, "363698": 327, "889492": 327, "024682": 327, "952586": 327, "434510": 327, "835458": 327, "575363": 327, "073683": 327, "073635": 327, "819836": 327, "253049": 327, "879430": 327, "169888": 327, "285544": 327, "497236": 327, "178975": 327, "564632": 327, "277992": 327, "765897": 327, "264764": 327, "695028": 327, "688954": 327, "586789": 327, "572606": 327, "516160": 327, "841335": 327, "249772": 327, "244786": 327, "916145": 327, "253768": 327, "659481": 327, "416676": 327, "744242": 327, "731451": 327, "936980": 327, "069317": 327, "269584": 327, "746436": 327, "605768": 327, "716822": 327, "763155": 327, "980420": 327, "125029": 327, "132983": 327, "686115": 327, "811144": 327, "583418": 327, "105503": 327, "043157": 327, "031564": 327, "363551": 327, "850645": 327, "225458": 327, "525306": 327, "892175": 327, "052073": 327, "699366": 327, "404922": 327, "242420": 327, "435102": 327, "509957": 327, "815026": 327, "512603": 327, "589215": 327, "481351": 327, "926077": 327, "175264": 327, "923185": 327, "944302": 327, "194473": 327, "824234": 327, "344235": 327, "735586": 327, "550825": 327, "903583": 327, "308617": 327, "556035": 327, "875052": 327, "501681": 327, "631308": 327, "874004": 327, "432371": 327, "372005": 327, "758791": 327, "133006": 327, "323449": 327, "357159": 327, "iofv_summari": 327, "orgin": 327, "ob": 327, "sampled_mean": 327, "sampled_stdev": 327, "residual_q1": 327, "743042": 327, "219056": 327, "682820": 327, "550173": 327, "035912": 327, "049484": 327, "184218": 327, "853744": 327, "006216": 327, "975298": 327, "041599": 327, "817153": 327, "833045": 327, "781196": 327, "154061": 327, "813525": 327, "398238": 327, "645044": 327, "535071": 327, "205425": 327, "092618": 327, "104527": 327, "106160": 327, "955250": 327, "058617": 327, "344659": 327, "355728": 327, "480441": 327, "205000": 327, "804075": 327, "093249": 327, "372011": 327, "653334": 327, "076303": 327, "579270": 327, "515891": 327, "726464": 327, "480796": 327, "226795": 327, "894556": 327, "321253": 327, "216333": 327, "282456": 327, "045968": 327, "751381": 327, "998817": 327, "568506": 327, "544129": 327, "725055": 327, "084491": 327, "216676": 327, "724839": 327, "269729": 327, "664468": 327, "086120": 327, "099508": 327, "844053": 327, "234199": 327, "780837": 327, "277342": 327, "322169": 327, "051428": 327, "923117": 327, "660772": 327, "466385": 327, "260479": 327, "909214": 327, "004430": 327, "115441": 327, "597439": 327, "671231": 327, "358037": 327, "499079": 327, "674971": 327, "086542": 327, "331370": 327, "633905": 327, "558617": 327, "085015": 327, "554653": 327, "936751": 327, "068515": 327, "800265": 327, "310055": 327, "124015": 327, "712276": 327, "729628": 327, "167439": 327, "715703": 327, "274087": 327, "019852": 327, "305414": 327, "613668": 327, "109257": 327, "443973": 327, "056317": 327, "238664": 327, "161298": 327, "229080": 327, "385458": 327, "248420": 327, "105258": 327, "155784": 327, "539027": 327, "615940": 327, "605320": 327, "132029": 327, "756164": 327, "869343": 327, "544161": 327, "814910": 327, "779158": 327, "268737": 327, "897306": 327, "707535": 327, "453306": 327, "105961": 327, "531367": 327, "507478": 327, "179203": 327, "964192": 327, "235433": 327, "534690": 327, "029698": 327, "870557": 327, "187065": 327, "049483": 327, "611648": 327, "535116": 327, "053927": 327, "077425": 327, "840121": 327, "621227": 327, "470444": 327, "449597": 327, "941064": 327, "849583": 327, "418397": 327, "769517": 327, "495183": 327, "074840": 327, "265168": 327, "489546": 327, "543569": 327, "924754": 327, "255799": 327, "423379": 327, "792450": 327, "651388": 327, "107140": 327, "103779": 327, "709601": 327, "655290": 327, "365991": 327, "222470": 327, "908651": 327, "744590": 327, "726324": 327, "426971": 327, "126409": 327, "743926": 327, "055593": 327, "673502": 327, "381335": 327, "618133": 327, "047349": 327, "322600": 327, "222872": 327, "042834": 327, "180077": 327, "430602": 327, "209284": 327, "495631": 327, "189252": 327, "623118": 327, "780755": 327, "405726": 327, "643222": 327, "836788": 327, "746180": 327, "378962": 327, "498420": 327, "745719": 327, "565835": 327, "016391": 327, "193803": 327, "882538": 327, "054206": 327, "416539": 327, "288743": 327, "598975": 327, "649295": 327, "743847": 327, "028856": 327, "860963": 327, "709391": 327, "906579": 327, "841825": 327, "571912": 327, "121771": 327, "219260": 327, "791821": 327, "756310": 327, "933335": 327, "360735": 327, "121911": 327, "657069": 327, "952413": 327, "311206": 327, "124618": 327, "229621": 327, "945504": 327, "493299": 327, "630288": 327, "415407": 327, "756085": 327, "131488": 327, "213636": 327, "050337": 327, "463633": 327, "980475": 327, "118333": 327, "749123": 327, "229958": 327, "025404": 327, "813878": 327, "738522": 327, "668408": 327, "112740": 327, "972107": 327, "235064": 327, "396011": 327, "934618": 327, "518106": 327, "392308": 327, "216396": 327, "339562": 327, "024801": 327, "793238": 327, "057118": 327, "556378": 327, "796045": 327, "776264": 327, "019010": 327, "430617": 327, "431370": 327, "731493": 327, "527208": 327, "010968": 327, "724711": 327, "959211": 327, "448445": 327, "131466": 327, "302385": 327, "264697": 327, "597597": 327, "779232": 327, "494133": 327, "292477": 327, "639161": 327, "067293": 327, "167700": 327, "637834": 327, "067793": 327, "249132": 327, "314731": 327, "969084": 327, "239401": 327, "359860": 327, "215238": 327, "477740": 327, "578842": 327, "053376": 327, "340902": 327, "021182": 327, "172446": 327, "684367": 327, "059050": 327, "515114": 327, "245427": 327, "197044": 327, "787564": 327, "106919": 327, "970391": 327, "379183": 327, "982728": 327, "807580": 327, "296212": 327, "639192": 327, "874018": 327, "032032": 327, "252364": 327, "047063": 327, "residual_q3": 327, "residual_outli": 327, "832458": 327, "136329": 327, "090316": 327, "021748": 327, "766581": 327, "001176": 327, "238974": 327, "071653": 327, "388881": 327, "584759": 327, "780298": 327, "680349": 327, "043355": 327, "691710": 327, "827298": 327, "317850": 327, "008777": 327, "291308": 327, "498512": 327, "312807": 327, "178997": 327, "306182": 327, "116610": 327, "468439": 327, "007865": 327, "384037": 327, "344744": 327, "151930": 327, "790639": 327, "416342": 327, "637759": 327, "153920": 327, "135334": 327, "038095": 327, "705065": 327, "359915": 327, "588440": 327, "151899": 327, "730945": 327, "514178": 327, "784304": 327, "977290": 327, "707253": 327, "982678": 327, "384237": 327, "576792": 327, "302778": 327, "342653": 327, "313826": 327, "775998": 327, "274818": 327, "191111": 327, "817604": 327, "421290": 327, "461701": 327, "940801": 327, "437023": 327, "207477": 327, "755739": 327, "individual_predictions_plot": 327, "run_structsearch": 328, "directeffect": [328, 329], "ec": 328, "rectangel": 328, "establish": 328, "speciefi": 328, "moment": 328, "effectcomp": [328, 329], "comprtment": [328, 329], "indirecteffect": [328, 329], "structsearch_run2": 328, "effectcomp_linear": 328, "215004": 328, "745013": 328, "structsearch_run1": 328, "direct_emax": 328, "212603": 328, "747413": 328, "baseline_model": 328, "960017": 328, "structsearch_run3": 328, "effectcomp_emax": 328, "984380": 328, "944396": 328, "pheno_pd_filt": 328, "213077": 328, "872420": 328, "572221": 328, "569820": 328, "571979": 328, "tvcl_estim": 328, "tvv_estim": 328, "ivcl_estim": 328, "002739": 328, "44718": 328, "000003": 328, "sigma_1_1_estim": 328, "pop_b_estim": 328, "iiv_b_estim": 328, "006308": 328, "750050": 328, "000009": 328, "057501": 328, "094082": 328, "sigma_estim": 328, "pop_e_max_estim": 328, "338363": 328, "093417": 328, "144566": 328, "093266": 328, "093323": 328, "177469": 328, "pop_ec_50_estim": 328, "iiv_e_max_estim": 328, "35393": 328, "43433": 328, "pop_met_estim": 328, "pop_slope_estim": 328, "099993": 328, "47537": 328, "101217": 328, "iiv_slope_estim": 328, "337360": 328, "535060": 328, "328655": 328, "008705": 328, "243566": 328, "291495": 328, "355828": 328, "981532": 328, "213992": 328, "321069": 328, "330943": 328, "006418": 328, "241037": 328, "294024": 328, "779": 328, "nexce": 328, "trim": 329, "modelsearch_dir1": 329, "hash": 329, "mytab_mox1": 329, "subfold": 329, "temporari": 329, "finish": 329, "recreat": 329, "frame": 329, "programmat": 329, "pharmpy_vers": 329, "tool_nam": 329, "start_tim": 329, "22t14": 329, "312240": 329, "end_tim": 329, "592109": 329, "common_opt": 329, "tmp": 329, "tool_result": 329, "concis": 329, "newlin": 329, "semi": 329, "colon": 329, "endpoint": 329, "wildcard": 329, "nodepot": 329, "autom": 329, "pk_iiv": 329, "pd_iiv": 329, "gotcha": 330, "cran": 331, "rapid": 331, "remot": 331, "install_github": 331, "install_pharmpi": 331, "session": 331, "packagevers": 331, "print_pharmpy_vers": 331, "reticul": 331, "miniconda": 331, "py_discover_config": 331, "conda_cr": 331, "python_vers": 331, "virtual": 331, "libpython": 331, "lib": 331, "libpython3": 331, "mirror": 331, "pipe": 331, "magrittr": 331}, "objects": {"pharmpy": [[288, 0, 0, "-", "model"], [289, 0, 0, "-", "modeling"], [290, 0, 0, "-", "tools"], [291, 0, 0, "-", "workflows"], [296, 6, 1, "cmdoption-pharmpy-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-version", "--version"], [296, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "Parameter"], [24, 1, 1, "", "Parameters"], [25, 1, 1, "", "RandomVariables"], [26, 1, 1, "", "Statement"], [27, 1, 1, "", "Statements"], [28, 1, 1, "", "VariabilityHierarchy"], [29, 1, 1, "", "VariabilityLevel"], [30, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_peripheral_compartments"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 2, 1, "", "to_dict"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "parameter_uncertainty_method"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_parameter_uncertainty_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[23, 2, 1, "", "create"], [23, 3, 1, "", "fix"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "init"], [23, 3, 1, "", "lower"], [23, 3, 1, "", "name"], [23, 2, 1, "", "replace"], [23, 3, 1, "", "symbol"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 3, 1, "", "fixed"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "inits"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "names"], [24, 3, 1, "", "nonfixed"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "set_fix"], [24, 2, 1, "", "set_initial_estimates"], [24, 3, 1, "", "symbols"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[25, 3, 1, "", "covariance_matrix"], [25, 2, 1, "", "create"], [25, 3, 1, "", "epsilon_levels"], [25, 3, 1, "", "epsilons"], [25, 3, 1, "", "eta_levels"], [25, 3, 1, "", "etas"], [25, 3, 1, "", "free_symbols"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_covariance"], [25, 2, 1, "", "get_rvs_with_same_dist"], [25, 3, 1, "", "iiv"], [25, 3, 1, "", "iov"], [25, 2, 1, "", "join"], [25, 3, 1, "", "names"], [25, 2, 1, "", "nearest_valid_parameters"], [25, 3, 1, "", "nrvs"], [25, 3, 1, "", "parameter_names"], [25, 2, 1, "", "parameters_sdcorr"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "replace_with_sympy_rvs"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "subs"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "unjoin"], [25, 2, 1, "", "validate_parameters"], [25, 3, 1, "", "variance_parameters"]], "pharmpy.model.Statement": [[26, 3, 1, "", "free_symbols"], [26, 3, 1, "", "rhs_symbols"], [26, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[27, 3, 1, "", "after_odes"], [27, 3, 1, "", "before_odes"], [27, 2, 1, "", "dependencies"], [27, 2, 1, "", "direct_dependencies"], [27, 3, 1, "", "error"], [27, 2, 1, "", "find_assignment"], [27, 2, 1, "", "find_assignment_index"], [27, 3, 1, "", "free_symbols"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "full_expression"], [27, 3, 1, "", "ode_system"], [27, 2, 1, "", "reassign"], [27, 2, 1, "", "remove_symbol_definitions"], [27, 2, 1, "", "subs"], [27, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[28, 2, 1, "", "create"], [28, 2, 1, "", "from_dict"], [28, 3, 1, "", "levels"], [28, 3, 1, "", "names"], [28, 2, 1, "", "replace"], [28, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[29, 2, 1, "", "create"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "group"], [29, 3, 1, "", "name"], [29, 3, 1, "", "reference"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[31, 5, 1, "", "add_admid"], [32, 5, 1, "", "add_allometry"], [33, 5, 1, "", "add_bioavailability"], [34, 5, 1, "", "add_cmt"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_effect_compartment"], [37, 5, 1, "", "add_estimation_step"], [38, 5, 1, "", "add_iiv"], [39, 5, 1, "", "add_indirect_effect"], [40, 5, 1, "", "add_individual_parameter"], [41, 5, 1, "", "add_iov"], [42, 5, 1, "", "add_lag_time"], [43, 5, 1, "", "add_metabolite"], [44, 5, 1, "", "add_parameter_uncertainty_step"], [45, 5, 1, "", "add_pd_iiv"], [46, 5, 1, "", "add_peripheral_compartment"], [47, 5, 1, "", "add_pk_iiv"], [48, 5, 1, "", "add_population_parameter"], [49, 5, 1, "", "add_time_after_dose"], [50, 5, 1, "", "append_estimation_step_options"], [51, 5, 1, "", "bump_model_number"], [52, 5, 1, "", "calculate_aic"], [53, 5, 1, "", "calculate_bic"], [54, 5, 1, "", "calculate_corr_from_cov"], [55, 5, 1, "", "calculate_corr_from_prec"], [56, 5, 1, "", "calculate_cov_from_corrse"], [57, 5, 1, "", "calculate_cov_from_prec"], [58, 5, 1, "", "calculate_epsilon_gradient_expression"], [59, 5, 1, "", "calculate_eta_gradient_expression"], [60, 5, 1, "", "calculate_eta_shrinkage"], [61, 5, 1, "", "calculate_individual_parameter_statistics"], [62, 5, 1, "", "calculate_individual_shrinkage"], [63, 5, 1, "", "calculate_parameters_from_ucp"], [64, 5, 1, "", "calculate_pk_parameters_statistics"], [65, 5, 1, "", "calculate_prec_from_corrse"], [66, 5, 1, "", "calculate_prec_from_cov"], [67, 5, 1, "", "calculate_se_from_cov"], [68, 5, 1, "", "calculate_se_from_prec"], [69, 5, 1, "", "calculate_ucp_scale"], [70, 5, 1, "", "check_dataset"], [71, 5, 1, "", "check_high_correlations"], [72, 5, 1, "", "check_parameters_near_bounds"], [73, 5, 1, "", "cleanup_model"], [74, 5, 1, "", "convert_model"], [75, 5, 1, "", "create_basic_pk_model"], [76, 5, 1, "", "create_config_template"], [77, 5, 1, "", "create_joint_distribution"], [78, 5, 1, "", "create_rng"], [79, 5, 1, "", "create_symbol"], [80, 5, 1, "", "deidentify_data"], [81, 5, 1, "", "display_odes"], [82, 5, 1, "", "drop_columns"], [83, 5, 1, "", "drop_dropped_columns"], [84, 5, 1, "", "evaluate_epsilon_gradient"], [85, 5, 1, "", "evaluate_eta_gradient"], [86, 5, 1, "", "evaluate_expression"], [87, 5, 1, "", "evaluate_individual_prediction"], [88, 5, 1, "", "evaluate_population_prediction"], [89, 5, 1, "", "evaluate_weighted_residuals"], [90, 5, 1, "", "expand_additional_doses"], [91, 5, 1, "", "filter_dataset"], [92, 5, 1, "", "find_clearance_parameters"], [93, 5, 1, "", "find_volume_parameters"], [94, 5, 1, "", "fix_or_unfix_parameters"], [95, 5, 1, "", "fix_parameters"], [96, 5, 1, "", "fix_parameters_to"], [97, 5, 1, "", "get_admid"], [98, 5, 1, "", "get_baselines"], [99, 5, 1, "", "get_bioavailability"], [100, 5, 1, "", "get_cmt"], [101, 5, 1, "", "get_concentration_parameters_from_data"], [102, 5, 1, "", "get_config_path"], [103, 5, 1, "", "get_covariate_baselines"], [104, 5, 1, "", "get_doseid"], [105, 5, 1, "", "get_doses"], [106, 5, 1, "", "get_dv_symbol"], [107, 5, 1, "", "get_evid"], [108, 5, 1, "", "get_ids"], [109, 5, 1, "", "get_individual_parameters"], [110, 5, 1, "", "get_individual_prediction_expression"], [111, 5, 1, "", "get_initial_conditions"], [112, 5, 1, "", "get_lag_times"], [113, 5, 1, "", "get_mdv"], [114, 5, 1, "", "get_model_code"], [115, 5, 1, "", "get_model_covariates"], [116, 5, 1, "", "get_number_of_individuals"], [117, 5, 1, "", "get_number_of_observations"], [118, 5, 1, "", "get_number_of_observations_per_individual"], [119, 5, 1, "", "get_number_of_peripheral_compartments"], [120, 5, 1, "", "get_number_of_transit_compartments"], [121, 5, 1, "", "get_observation_expression"], [122, 5, 1, "", "get_observations"], [123, 5, 1, "", "get_omegas"], [124, 5, 1, "", "get_parameter_rv"], [125, 5, 1, "", "get_pd_parameters"], [126, 5, 1, "", "get_pk_parameters"], [127, 5, 1, "", "get_population_prediction_expression"], [128, 5, 1, "", "get_rv_parameters"], [129, 5, 1, "", "get_sigmas"], [130, 5, 1, "", "get_thetas"], [131, 5, 1, "", "get_unit_of"], [132, 5, 1, "", "get_zero_order_inputs"], [133, 5, 1, "", "greekify_model"], [134, 5, 1, "", "has_additive_error_model"], [135, 5, 1, "", "has_combined_error_model"], [136, 5, 1, "", "has_covariate_effect"], [137, 5, 1, "", "has_first_order_absorption"], [138, 5, 1, "", "has_first_order_elimination"], [139, 5, 1, "", "has_instantaneous_absorption"], [140, 5, 1, "", "has_linear_odes"], [141, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [142, 5, 1, "", "has_michaelis_menten_elimination"], [143, 5, 1, "", "has_mixed_mm_fo_elimination"], [144, 5, 1, "", "has_odes"], [145, 5, 1, "", "has_presystemic_metabolite"], [146, 5, 1, "", "has_proportional_error_model"], [147, 5, 1, "", "has_random_effect"], [148, 5, 1, "", "has_seq_zo_fo_absorption"], [149, 5, 1, "", "has_weighted_error_model"], [150, 5, 1, "", "has_zero_order_absorption"], [151, 5, 1, "", "has_zero_order_elimination"], [152, 5, 1, "", "is_linearized"], [153, 5, 1, "", "is_real"], [154, 5, 1, "", "list_time_varying_covariates"], [155, 5, 1, "", "load_dataset"], [156, 5, 1, "", "load_example_model"], [157, 5, 1, "", "make_declarative"], [158, 5, 1, "", "mu_reference_model"], [159, 5, 1, "", "omit_data"], [160, 5, 1, "", "plot_cwres_vs_idv"], [161, 5, 1, "", "plot_dv_vs_ipred"], [162, 5, 1, "", "plot_individual_predictions"], [163, 5, 1, "", "plot_iofv_vs_iofv"], [164, 5, 1, "", "plot_transformed_eta_distributions"], [165, 5, 1, "", "print_model_code"], [166, 5, 1, "", "print_model_symbols"], [167, 5, 1, "", "read_dataset_from_datainfo"], [168, 5, 1, "", "read_model"], [169, 5, 1, "", "read_model_from_string"], [170, 5, 1, "", "remove_bioavailability"], [171, 5, 1, "", "remove_covariate_effect"], [172, 5, 1, "", "remove_error_model"], [173, 5, 1, "", "remove_estimation_step"], [174, 5, 1, "", "remove_iiv"], [175, 5, 1, "", "remove_iov"], [176, 5, 1, "", "remove_lag_time"], [177, 5, 1, "", "remove_loq_data"], [178, 5, 1, "", "remove_parameter_uncertainty_step"], [179, 5, 1, "", "remove_peripheral_compartment"], [180, 5, 1, "", "remove_unused_parameters_and_rvs"], [181, 5, 1, "", "rename_symbols"], [182, 5, 1, "", "resample_data"], [183, 5, 1, "", "sample_individual_estimates"], [184, 5, 1, "", "sample_parameters_from_covariance_matrix"], [185, 5, 1, "", "sample_parameters_uniformly"], [186, 5, 1, "", "set_additive_error_model"], [187, 5, 1, "", "set_combined_error_model"], [188, 5, 1, "", "set_covariates"], [189, 5, 1, "", "set_direct_effect"], [190, 5, 1, "", "set_dtbs_error_model"], [191, 5, 1, "", "set_dvid"], [192, 5, 1, "", "set_estimation_step"], [193, 5, 1, "", "set_evaluation_step"], [194, 5, 1, "", "set_first_order_absorption"], [195, 5, 1, "", "set_first_order_elimination"], [196, 5, 1, "", "set_iiv_on_ruv"], [197, 5, 1, "", "set_initial_condition"], [198, 5, 1, "", "set_initial_estimates"], [199, 5, 1, "", "set_instantaneous_absorption"], [200, 5, 1, "", "set_lloq_data"], [201, 5, 1, "", "set_lower_bounds"], [202, 5, 1, "", "set_michaelis_menten_elimination"], [203, 5, 1, "", "set_mixed_mm_fo_elimination"], [204, 5, 1, "", "set_name"], [205, 5, 1, "", "set_ode_solver"], [206, 5, 1, "", "set_peripheral_compartments"], [207, 5, 1, "", "set_power_on_ruv"], [208, 5, 1, "", "set_proportional_error_model"], [209, 5, 1, "", "set_reference_values"], [210, 5, 1, "", "set_seq_zo_fo_absorption"], [211, 5, 1, "", "set_time_varying_error_model"], [212, 5, 1, "", "set_tmdd"], [213, 5, 1, "", "set_transit_compartments"], [214, 5, 1, "", "set_upper_bounds"], [215, 5, 1, "", "set_weighted_error_model"], [216, 5, 1, "", "set_zero_order_absorption"], [217, 5, 1, "", "set_zero_order_elimination"], [218, 5, 1, "", "set_zero_order_input"], [219, 5, 1, "", "simplify_expression"], [220, 5, 1, "", "solve_ode_system"], [221, 5, 1, "", "split_joint_distribution"], [222, 5, 1, "", "transform_blq"], [223, 5, 1, "", "transform_etas_boxcox"], [224, 5, 1, "", "transform_etas_john_draper"], [225, 5, 1, "", "transform_etas_tdist"], [226, 5, 1, "", "translate_nmtran_time"], [227, 5, 1, "", "unconstrain_parameters"], [228, 5, 1, "", "undrop_columns"], [229, 5, 1, "", "unfix_parameters"], [230, 5, 1, "", "unfix_parameters_to"], [231, 5, 1, "", "unload_dataset"], [232, 5, 1, "", "update_initial_individual_estimates"], [233, 5, 1, "", "update_inits"], [234, 5, 1, "", "use_thetas_for_error_stdev"], [235, 5, 1, "", "write_csv"], [236, 5, 1, "", "write_model"]], "pharmpy.tools": [[237, 5, 1, "", "create_report"], [238, 5, 1, "", "create_results"], [239, 5, 1, "", "fit"], [240, 5, 1, "", "get_model_features"], [241, 5, 1, "", "load_example_modelfit_results"], [242, 5, 1, "", "predict_influential_individuals"], [243, 5, 1, "", "predict_influential_outliers"], [244, 5, 1, "", "predict_outliers"], [245, 5, 1, "", "print_fit_summary"], [246, 5, 1, "", "rank_models"], [247, 5, 1, "", "read_modelfit_results"], [248, 5, 1, "", "read_results"], [249, 5, 1, "", "resume_tool"], [250, 5, 1, "", "retrieve_final_model"], [251, 5, 1, "", "retrieve_models"], [252, 5, 1, "", "run_allometry"], [253, 5, 1, "", "run_amd"], [254, 5, 1, "", "run_bootstrap"], [255, 5, 1, "", "run_covsearch"], [256, 5, 1, "", "run_estmethod"], [257, 5, 1, "", "run_iivsearch"], [258, 5, 1, "", "run_iovsearch"], [259, 5, 1, "", "run_modelfit"], [260, 5, 1, "", "run_modelsearch"], [261, 5, 1, "", "run_ruvsearch"], [262, 5, 1, "", "run_structsearch"], [263, 5, 1, "", "run_tool"], [264, 5, 1, "", "summarize_errors"], [265, 5, 1, "", "summarize_individuals"], [266, 5, 1, "", "summarize_individuals_count_table"], [267, 5, 1, "", "summarize_modelfit_results"], [268, 5, 1, "", "write_results"]], "pharmpy.workflows": [[269, 1, 1, "", "LocalDirectoryDatabase"], [270, 1, 1, "", "LocalDirectoryToolDatabase"], [271, 1, 1, "", "LocalModelDirectoryDatabase"], [272, 1, 1, "", "Log"], [273, 1, 1, "", "ModelDatabase"], [274, 1, 1, "", "ModelEntry"], [275, 1, 1, "", "ModelfitResults"], [276, 1, 1, "", "NullModelDatabase"], [277, 1, 1, "", "NullToolDatabase"], [278, 1, 1, "", "Results"], [279, 1, 1, "", "Task"], [280, 1, 1, "", "ToolDatabase"], [281, 1, 1, "", "Workflow"], [282, 1, 1, "", "WorkflowBuilder"], [283, 5, 1, "", "call_workflow"], [284, 3, 1, "", "default_model_database"], [285, 3, 1, "", "default_tool_database"], [286, 5, 1, "", "execute_workflow"], [287, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[269, 2, 1, "", "retrieve_file"], [269, 2, 1, "", "retrieve_local_files"], [269, 2, 1, "", "retrieve_model"], [269, 2, 1, "", "retrieve_model_entry"], [269, 2, 1, "", "retrieve_modelfit_results"], [269, 2, 1, "", "store_local_file"], [269, 2, 1, "", "store_metadata"], [269, 2, 1, "", "store_model"], [269, 2, 1, "", "store_model_entry"], [269, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[270, 2, 1, "", "from_dict"], [270, 2, 1, "", "read_metadata"], [270, 2, 1, "", "store_local_file"], [270, 2, 1, "", "store_metadata"], [270, 2, 1, "", "store_results"], [270, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[271, 2, 1, "", "list_models"], [271, 2, 1, "", "snapshot"], [271, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[272, 3, 1, "", "errors"], [272, 2, 1, "", "from_dict"], [272, 2, 1, "", "log_error"], [272, 2, 1, "", "log_warning"], [272, 2, 1, "", "to_dataframe"], [272, 2, 1, "", "to_dict"], [272, 3, 1, "", "warnings"]], "pharmpy.workflows.ModelDatabase": [[273, 2, 1, "", "retrieve_file"], [273, 2, 1, "", "retrieve_local_files"], [273, 2, 1, "", "retrieve_model"], [273, 2, 1, "", "retrieve_model_entry"], [273, 2, 1, "", "retrieve_modelfit_results"], [273, 2, 1, "", "snapshot"], [273, 2, 1, "", "store_local_file"], [273, 2, 1, "", "store_metadata"], [273, 2, 1, "", "store_model"], [273, 2, 1, "", "store_model_entry"], [273, 2, 1, "", "store_modelfit_results"], [273, 2, 1, "", "transaction"]], "pharmpy.workflows.ModelEntry": [[274, 2, 1, "", "attach_results"], [274, 2, 1, "", "create"], [274, 3, 1, "", "log"], [274, 3, 1, "", "model"], [274, 3, 1, "", "modelfit_results"], [274, 3, 1, "", "parent"]], "pharmpy.workflows.ModelfitResults": [[275, 3, 1, "", "correlation_matrix"], [275, 3, 1, "", "covariance_matrix"], [275, 3, 1, "", "description"], [275, 3, 1, "", "estimation_runtime"], [275, 3, 1, "", "estimation_runtime_iterations"], [275, 3, 1, "", "evaluation"], [275, 3, 1, "", "function_evaluations"], [275, 3, 1, "", "function_evaluations_iterations"], [275, 3, 1, "", "individual_estimates"], [275, 3, 1, "", "individual_estimates_covariance"], [275, 3, 1, "", "individual_ofv"], [275, 3, 1, "", "log"], [275, 3, 1, "", "log_likelihood"], [275, 3, 1, "", "minimization_successful"], [275, 3, 1, "", "minimization_successful_iterations"], [275, 3, 1, "", "name"], [275, 3, 1, "", "ofv"], [275, 3, 1, "", "ofv_iterations"], [275, 3, 1, "", "parameter_estimates"], [275, 3, 1, "", "parameter_estimates_iterations"], [275, 3, 1, "", "parameter_estimates_sdcorr"], [275, 3, 1, "", "precision_matrix"], [275, 3, 1, "", "predictions"], [275, 3, 1, "", "relative_standard_errors"], [275, 3, 1, "", "residuals"], [275, 3, 1, "", "runtime_total"], [275, 3, 1, "", "significant_digits"], [275, 3, 1, "", "significant_digits_iterations"], [275, 3, 1, "", "standard_errors"], [275, 3, 1, "", "standard_errors_sdcorr"], [275, 3, 1, "", "termination_cause"], [275, 3, 1, "", "termination_cause_iterations"]], "pharmpy.workflows.NullModelDatabase": [[276, 2, 1, "", "retrieve_file"], [276, 2, 1, "", "retrieve_local_files"], [276, 2, 1, "", "retrieve_model"], [276, 2, 1, "", "retrieve_model_entry"], [276, 2, 1, "", "retrieve_modelfit_results"], [276, 2, 1, "", "store_local_file"], [276, 2, 1, "", "store_metadata"], [276, 2, 1, "", "store_model"], [276, 2, 1, "", "store_model_entry"], [276, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[277, 2, 1, "", "read_metadata"], [277, 2, 1, "", "store_local_file"], [277, 2, 1, "", "store_metadata"], [277, 2, 1, "", "store_results"]], "pharmpy.workflows.Results": [[278, 2, 1, "", "from_dict"], [278, 2, 1, "", "get_and_reset_index"], [278, 2, 1, "", "to_csv"], [278, 2, 1, "", "to_dict"], [278, 2, 1, "", "to_json"]], "pharmpy.workflows.Task": [[279, 2, 1, "", "create"], [279, 3, 1, "", "function"], [279, 3, 1, "", "name"], [279, 2, 1, "", "replace"], [279, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[280, 3, 1, "", "model_database"], [280, 3, 1, "", "path"], [280, 2, 1, "", "read_metadata"], [280, 2, 1, "", "store_local_file"], [280, 2, 1, "", "store_metadata"], [280, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[281, 2, 1, "", "as_dask_dict"], [281, 2, 1, "", "create"], [281, 3, 1, "", "name"], [281, 2, 1, "", "plot_dask"], [281, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[282, 2, 1, "", "add_task"], [282, 2, 1, "", "insert_workflow"], [282, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[296, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [296, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[296, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[296, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [296, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[296, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [296, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[296, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [296, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[296, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [296, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [296, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [296, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [296, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [296, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [296, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[296, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[296, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[296, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[296, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[296, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[296, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[296, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [296, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[296, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[296, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [296, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[296, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[296, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [296, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [296, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[296, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[296, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [296, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [296, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [296, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [296, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[296, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[296, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[296, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[296, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [296, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [296, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [296, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[296, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[296, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[296, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[296, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[296, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[296, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[296, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[296, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[296, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[296, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[296, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[296, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [296, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [296, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [296, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [296, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [296, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [296, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [296, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [296, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [296, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [296, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [296, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [296, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[296, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [296, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[296, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[296, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [296, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [296, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [296, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[296, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[296, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [296, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[296, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[296, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [296, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [296, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[296, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [296, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 298, 318], "dataset": [0, 303, 314, 316, 329], "overview": [0, 320, 324], "pars": 0, "translat": 0, "step": [0, 314, 316, 326], "nm": 0, "tran": 0, "comment": 0, "line": [0, 296], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 316], "date": 0, "id": 0, "check": [0, 299], "tabl": 0, "file": [0, 298, 303], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 299], "all": 0, "zero": 0, "individu": [0, 292, 293, 307, 313, 315, 327], "control": 0, "stream": 0, "gener": [0, 312], "option": [0, 291, 329], "problem": 0, "data": [0, 291, 296], "eta": [0, 316], "code": [0, 297, 299], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 278, 292, 293, 296, 301, 302, 306, 307, 309, 311, 313, 315, 317, 322, 324, 325, 326, 327, 328, 329], "spars": 0, "matrix": [0, 292, 315], "allometri": [1, 2, 296, 316], "run": [1, 2, 296, 299, 301, 306, 309, 311, 317, 325, 328, 329], "argument": [1, 2, 301, 306, 309, 311, 317, 325, 328], "procedur": [1, 325], "The": [1, 292, 293, 296, 298, 302, 304, 306, 307, 309, 313, 314, 317, 322, 324, 325, 326, 327, 328], "automat": 2, "model": [2, 18, 288, 289, 296, 303, 304, 309, 314, 315, 316, 317, 318, 322, 325, 328, 329], "develop": [2, 299, 300, 305], "amd": [2, 296], "input": [2, 300], "search": [2, 309, 317, 328], "space": [2, 317, 328], "order": 2, "subtool": 2, "structur": [2, 309, 316, 324], "modelsearch": [2, 296, 317], "structsearch": [2, 328], "iivsearch": [2, 296, 309], "iovsearch": [2, 296, 311], "residu": [2, 315, 324], "covari": [2, 292, 293, 307, 309, 315, 316, 324], "final": [2, 315], "api": 3, "refer": [3, 293, 296, 307], "assign": 4, "bolu": 5, "columninfo": [6, 303], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 303, 314], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 311, 314, 316], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "paramet": [23, 24, 292, 304, 307, 314, 315, 316, 318], "randomvari": [25, 304], "statement": [26, 27, 304, 314], "variabilityhierarchi": 28, "variabilitylevel": 29, "to_compartmental_system": 30, "add_admid": 31, "add_allometri": 32, "add_bioavail": 33, "add_cmt": 34, "add_covariate_effect": 35, "add_effect_compart": 36, "add_estimation_step": 37, "add_iiv": [38, 296], "add_indirect_effect": 39, "add_individual_paramet": 40, "add_iov": [41, 296], "add_lag_tim": 42, "add_metabolit": 43, "add_parameter_uncertainty_step": 44, "add_pd_iiv": 45, "add_peripheral_compart": 46, "add_pk_iiv": 47, "add_population_paramet": 48, "add_time_after_dos": 49, "append_estimation_step_opt": 50, "bump_model_numb": 51, "calculate_a": 52, "calculate_b": 53, "calculate_corr_from_cov": 54, "calculate_corr_from_prec": 55, "calculate_cov_from_corrs": 56, "calculate_cov_from_prec": 57, "calculate_epsilon_gradient_express": 58, "calculate_eta_gradient_express": 59, "calculate_eta_shrinkag": 60, "calculate_individual_parameter_statist": 61, "calculate_individual_shrinkag": 62, "calculate_parameters_from_ucp": 63, "calculate_pk_parameters_statist": 64, "calculate_prec_from_corrs": 65, "calculate_prec_from_cov": 66, "calculate_se_from_cov": 67, "calculate_se_from_prec": 68, "calculate_ucp_scal": 69, "check_dataset": 70, "check_high_correl": 71, "check_parameters_near_bound": 72, "cleanup_model": 73, "convert_model": 74, "create_basic_pk_model": 75, "create_config_templ": 76, "create_joint_distribut": [77, 296], "create_rng": 78, "create_symbol": 79, "deidentify_data": 80, "display_od": 81, "drop_column": 82, "drop_dropped_column": 83, "evaluate_epsilon_gradi": 84, "evaluate_eta_gradi": 85, "evaluate_express": 86, "evaluate_individual_predict": 87, "evaluate_population_predict": 88, "evaluate_weighted_residu": 89, "expand_additional_dos": 90, "filter_dataset": 91, "find_clearance_paramet": 92, "find_volume_paramet": 93, "fix_or_unfix_paramet": 94, "fix_paramet": 95, "fix_parameters_to": 96, "get_admid": 97, "get_baselin": 98, "get_bioavail": 99, "get_cmt": 100, "get_concentration_parameters_from_data": 101, "get_config_path": 102, "get_covariate_baselin": 103, "get_doseid": 104, "get_dos": 105, "get_dv_symbol": 106, "get_evid": 107, "get_id": 108, "get_individual_paramet": 109, "get_individual_prediction_express": 110, "get_initial_condit": 111, "get_lag_tim": 112, "get_mdv": 113, "get_model_cod": 114, "get_model_covari": 115, "get_number_of_individu": 116, "get_number_of_observ": 117, "get_number_of_observations_per_individu": 118, "get_number_of_peripheral_compart": 119, "get_number_of_transit_compart": 120, "get_observation_express": 121, "get_observ": 122, "get_omega": 123, "get_parameter_rv": 124, "get_pd_paramet": 125, "get_pk_paramet": 126, "get_population_prediction_express": 127, "get_rv_paramet": 128, "get_sigma": 129, "get_theta": 130, "get_unit_of": 131, "get_zero_order_input": 132, "greekify_model": 133, "has_additive_error_model": 134, "has_combined_error_model": 135, "has_covariate_effect": 136, "has_first_order_absorpt": 137, "has_first_order_elimin": 138, "has_instantaneous_absorpt": 139, "has_linear_od": 140, "has_linear_odes_with_real_eigenvalu": 141, "has_michaelis_menten_elimin": 142, "has_mixed_mm_fo_elimin": 143, "has_od": 144, "has_presystemic_metabolit": 145, "has_proportional_error_model": 146, "has_random_effect": 147, "has_seq_zo_fo_absorpt": 148, "has_weighted_error_model": 149, "has_zero_order_absorpt": 150, "has_zero_order_elimin": 151, "is_linear": 152, "is_real": 153, "list_time_varying_covari": 154, "load_dataset": 155, "load_example_model": 156, "make_declar": 157, "mu_reference_model": 158, "omit_data": 159, "plot_cwres_vs_idv": 160, "plot_dv_vs_ipr": 161, "plot_individual_predict": 162, "plot_iofv_vs_iofv": 163, "plot_transformed_eta_distribut": 164, "print_model_cod": 165, "print_model_symbol": 166, "read_dataset_from_datainfo": 167, "read_model": 168, "read_model_from_str": 169, "remove_bioavail": 170, "remove_covariate_effect": 171, "remove_error_model": 172, "remove_estimation_step": 173, "remove_iiv": [174, 296], "remove_iov": [175, 296], "remove_lag_tim": 176, "remove_loq_data": 177, "remove_parameter_uncertainty_step": 178, "remove_peripheral_compart": 179, "remove_unused_parameters_and_rv": 180, "rename_symbol": 181, "resample_data": 182, "sample_individual_estim": 183, "sample_parameters_from_covariance_matrix": 184, "sample_parameters_uniformli": 185, "set_additive_error_model": 186, "set_combined_error_model": 187, "set_covari": 188, "set_direct_effect": 189, "set_dtbs_error_model": 190, "set_dvid": 191, "set_estimation_step": 192, "set_evaluation_step": 193, "set_first_order_absorpt": 194, "set_first_order_elimin": 195, "set_iiv_on_ruv": 196, "set_initial_condit": 197, "set_initial_estim": 198, "set_instantaneous_absorpt": 199, "set_lloq_data": 200, "set_lower_bound": 201, "set_michaelis_menten_elimin": 202, "set_mixed_mm_fo_elimin": 203, "set_nam": 204, "set_ode_solv": 205, "set_peripheral_compart": 206, "set_power_on_ruv": 207, "set_proportional_error_model": 208, "set_reference_valu": 209, "set_seq_zo_fo_absorpt": 210, "set_time_varying_error_model": 211, "set_tmdd": 212, "set_transit_compart": 213, "set_upper_bound": 214, "set_weighted_error_model": 215, "set_zero_order_absorpt": 216, "set_zero_order_elimin": 217, "set_zero_order_input": 218, "simplify_express": 219, "solve_ode_system": 220, "split_joint_distribut": 221, "transform_blq": 222, "transform_etas_boxcox": 223, "transform_etas_john_drap": 224, "transform_etas_tdist": 225, "translate_nmtran_tim": 226, "unconstrain_paramet": 227, "undrop_column": 228, "unfix_paramet": 229, "unfix_parameters_to": 230, "unload_dataset": 231, "update_initial_individual_estim": 232, "update_init": [233, 296], "use_thetas_for_error_stdev": 234, "write_csv": 235, "write_model": 236, "create_report": 237, "create_result": 238, "fit": [239, 315], "get_model_featur": 240, "load_example_modelfit_result": 241, "predict_influential_individu": 242, "predict_influential_outli": 243, "predict_outli": 244, "print_fit_summari": 245, "rank_model": 246, "read_modelfit_result": 247, "read_result": 248, "resume_tool": 249, "retrieve_final_model": 250, "retrieve_model": 251, "run_allometri": 252, "run_amd": 253, "run_bootstrap": 254, "run_covsearch": 255, "run_estmethod": 256, "run_iivsearch": 257, "run_iovsearch": 258, "run_modelfit": 259, "run_modelsearch": 260, "run_ruvsearch": 261, "run_structsearch": 262, "run_tool": 263, "summarize_error": 264, "summarize_individu": 265, "summarize_individuals_count_t": 266, "summarize_modelfit_result": 267, "write_result": 268, "localdirectorydatabas": 269, "localdirectorytooldatabas": 270, "localmodeldirectorydatabas": 271, "log": 272, "modeldatabas": 273, "modelentri": 274, "modelfitresult": 275, "nullmodeldatabas": 276, "nulltooldatabas": 277, "task": 279, "tooldatabas": 280, "workflow": [281, 291, 299], "workflowbuild": 282, "call_workflow": 283, "default_model_databas": 284, "default_tool_databas": 285, "execute_workflow": 286, "split_common_opt": 287, "pharmpi": [288, 289, 290, 291, 295, 296, 297, 298, 299, 303, 304, 310, 314, 319, 323, 329, 331], "packag": [288, 289, 290, 291], "function": [288, 289, 290, 291, 316], "class": [288, 291, 304], "tool": [290, 323, 329], "modul": [291, 304], "bootstrap": [292, 296], "postprocess": [292, 307], "statist": 292, "ofv": [292, 293, 296, 302, 307, 313, 315, 326, 327], "includ": 292, "case": 293, "delet": 293, "diagnost": 293, "cdd": [293, 296], "cook": 293, "score": 293, "jackknif": 293, "cookscor": 293, "ratio": 293, "delta": 293, "skip": 293, "column": 293, "changelog": 294, "0": 294, "103": 294, "2023": 294, "10": 294, "12": 294, "chang": [294, 319], "bugfix": 294, "102": 294, "09": 294, "28": 294, "new": [294, 311, 318], "featur": [294, 317, 329], "101": 294, "01": 294, "100": 294, "08": 294, "25": 294, "99": 294, "23": 294, "98": 294, "07": 294, "21": 294, "97": 294, "06": 294, "96": 294, "05": 294, "26": 294, "95": 294, "22": 294, "94": 294, "04": 294, "93": 294, "19": 294, "92": 294, "91": 294, "03": 294, "90": 294, "02": 294, "24": 294, "89": 294, "88": 294, "2022": 294, "87": 294, "14": 294, "86": 294, "11": 294, "30": 294, "85": 294, "18": 294, "84": 294, "1": 294, "13": 294, "bug": 294, "fix": 294, "83": 294, "82": 294, "81": 294, "80": 294, "79": 294, "16": 294, "78": 294, "20": 294, "77": 294, "76": 294, "75": 294, "74": 294, "73": 294, "72": 294, "71": 294, "70": 294, "17": 294, "69": 294, "29": 294, "68": 294, "27": 294, "67": 294, "66": 294, "65": 294, "64": 294, "63": 294, "62": 294, "61": 294, "31": 294, "59": 294, "58": 294, "4": 294, "57": 294, "56": 294, "55": 294, "54": 294, "53": 294, "52": 294, "51": 294, "50": 294, "49": 294, "48": 294, "47": 294, "46": 294, "45": 294, "44": 294, "43": 294, "42": 294, "41": 294, "2021": 294, "40": 294, "39": 294, "15": 294, "38": 294, "37": 294, "36": 294, "35": 294, "34": 294, "3": 294, "2": [294, 312], "33": 294, "32": 294, "2020": 294, "9": 294, "8": 294, "7": 294, "6": 294, "5": 294, "2018": 294, "citat": 295, "how": 295, "cite": 295, "pharmr": [295, 331], "command": 296, "interfac": 296, "append": 296, "deidentifi": 296, "filter": 296, "print": 296, "resampl": 296, "write": [296, 314, 316, 318], "info": 296, "absorption_r": 296, "add_cov_effect": 296, "boxcox": [296, 324], "elimination_r": 296, "error": [296, 315, 316, 324, 331], "iiv_on_ruv": 296, "john_drap": 296, "peripheral_compart": 296, "power_on_ruv": 296, "sampl": [296, 327], "tdist": [296, 324], "transit_compart": 296, "frem": [296, 307], "linear": [296, 313], "qa": [296, 324], "report": 296, "ruvsearch": [296, 325], "scm": [296, 326], "simev": [296, 327], "summari": [296, 326, 327], "covsearch": [296, 301], "estmethod": [296, 306], "execut": 296, "commun": 297, "conduct": 297, "configur": 298, "avail": 298, "plugin": [298, 318, 320], "nlmixr": 298, "rxode": 298, "environ": [298, 299], "variabl": [298, 307, 314, 316, 318], "contribut": 299, "set": [299, 319], "up": 299, "support": 299, "platform": 299, "instal": [299, 308, 331], "python": [299, 331], "git": 299, "fork": 299, "clone": 299, "repositori": 299, "tox": 299, "graphviz": 299, "us": [299, 318, 331], "build": 299, "document": [299, 305], "unit": [299, 303], "test": 299, "integr": 299, "usabl": 299, "virtual": 299, "standard": [299, 315], "releas": 299, "version": [299, 331], "inform": [299, 316], "contributor": 300, "scientif": 300, "fund": 300, "effect": [301, 307, 324], "wildcard": 301, "algorithm": [301, 306, 309, 311, 317], "crossval": 302, "crossvalid": 302, "retriev": 303, "from": 303, "updat": [303, 306], "type": [303, 328, 329], "scale": 303, "continu": 303, "categori": 303, "drop": 303, "datatyp": 303, "descriptor": 303, "design": 304, "principl": 304, "level": [304, 314], "architectur": 304, "heart": 304, "docstr": 304, "depend": [304, 314], "exhaust": [306, 317], "onli": 306, "evalu": 306, "estim": [306, 307, 314, 315, 316], "method": 306, "solver": 306, "coeffici": 307, "unexplain": 307, "valu": 307, "get": 308, "start": [308, 309], "A": 308, "first": 308, "exampl": [308, 316, 329], "brute": 309, "forc": 309, "number": 309, "iiv": [309, 317], "full": 309, "ad": [309, 314, 316, 317], "compar": [309, 311, 317], "rank": [309, 311, 317], "candid": [309, 311, 317, 326], "welcom": 310, "iov": 311, "licens": 312, "logo": 312, "copyright": 312, "bsd": 312, "claus": 312, "gnu": 312, "lesser": 312, "public": 312, "read": [314, 316, 318], "inspect": 314, "attribut": 314, "name": [314, 318], "descript": [314, 329], "random": [314, 318], "low": 314, "manipul": 314, "object": 314, "creat": [314, 316], "substitut": 314, "symbol": [314, 329], "numer": 314, "modelfit": 315, "rel": 315, "correl": 315, "precis": 315, "indiviud": 315, "predict": [315, 327], "basic": 316, "load": 316, "convert": 316, "transform": 316, "absorpt": 316, "rate": 316, "delai": 316, "elimin": 316, "remov": 316, "popul": 316, "blq": 316, "examin": 316, "modifi": 316, "subject": 316, "observ": 316, "dose": 316, "extract": 316, "group": 316, "after": 316, "concentr": 316, "common": [317, 329], "behaviour": 317, "between": [317, 331], "combin": 317, "exclus": 317, "stepwis": 317, "reduc": 317, "dure": 317, "plot": [319, 327], "theme": 319, "axi": 319, "project": 321, "suggest": 321, "resmod": 322, "psn": 323, "connect": 323, "bia": 324, "fullblock": 324, "pkpd": 328, "drug": 328, "metabolit": 328, "databas": 329, "directori": 329, "metadata": 329, "languag": 329, "mfl": 329, "describ": 329, "interv": 329, "redund": 329, "user": 330, "guid": 330, "r": 331, "troubl": 331, "shoot": 331, "wrong": 331, "when": 331, "conda": 331, "import": 331, "mismatch": 331, "gotcha": 331, "list": 331, "indic": 331}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"check_high_correlations": [[71, "check-high-correlations"]], "calculate_cov_from_corrse": [[56, "calculate-cov-from-corrse"]], "calculate_eta_shrinkage": [[60, "calculate-eta-shrinkage"]], "cleanup_model": [[73, "cleanup-model"]], "check_dataset": [[70, "check-dataset"]], "add_metabolite": [[43, "add-metabolite"]], "calculate_pk_parameters_statistics": [[64, "calculate-pk-parameters-statistics"]], "calculate_prec_from_cov": [[66, "calculate-prec-from-cov"]], "calculate_ucp_scale": [[69, "calculate-ucp-scale"]], "add_lag_time": [[42, "add-lag-time"]], "check_parameters_near_bounds": [[72, "check-parameters-near-bounds"]], "add_pk_iiv": [[47, "add-pk-iiv"]], "add_individual_parameter": [[40, "add-individual-parameter"]], "calculate_individual_parameter_statistics": [[61, "calculate-individual-parameter-statistics"]], "add_pd_iiv": [[45, "add-pd-iiv"]], "calculate_parameters_from_ucp": [[63, "calculate-parameters-from-ucp"]], "calculate_se_from_prec": [[68, "calculate-se-from-prec"]], "convert_model": [[74, "convert-model"]], "calculate_bic": [[53, "calculate-bic"]], "calculate_prec_from_corrse": [[65, "calculate-prec-from-corrse"]], "calculate_aic": [[52, "calculate-aic"]], "calculate_cov_from_prec": [[57, "calculate-cov-from-prec"]], "calculate_se_from_cov": [[67, "calculate-se-from-cov"]], "append_estimation_step_options": [[50, "append-estimation-step-options"]], "calculate_eta_gradient_expression": [[59, "calculate-eta-gradient-expression"]], "create_config_template": [[76, "create-config-template"]], "add_iov": [[41, "add-iov"]], "bump_model_number": [[51, "bump-model-number"]], "add_time_after_dose": [[49, "add-time-after-dose"]], "add_parameter_uncertainty_step": [[44, "add-parameter-uncertainty-step"]], "create_joint_distribution": [[77, "create-joint-distribution"]], "create_symbol": [[79, "create-symbol"]], "add_peripheral_compartment": [[46, "add-peripheral-compartment"]], "create_basic_pk_model": [[75, "create-basic-pk-model"]], "add_population_parameter": [[48, "add-population-parameter"]], "create_rng": [[78, "create-rng"]], "calculate_corr_from_prec": [[55, "calculate-corr-from-prec"]], "calculate_individual_shrinkage": [[62, "calculate-individual-shrinkage"]], "calculate_epsilon_gradient_expression": [[58, "calculate-epsilon-gradient-expression"]], "calculate_corr_from_cov": [[54, "calculate-corr-from-cov"]], "DatasetWarning": [[12, "datasetwarning"]], "Statements": [[27, "statements"], [314, "statements"]], "Statement": [[26, "statement"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [325, "running"], [328, "running"], [309, "running"], [306, "running"], [317, "running"], [301, "running"], [311, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [325, "arguments"], [328, "arguments"], [309, "arguments"], [306, "arguments"], [317, "arguments"], [301, "arguments"], [311, "arguments"]], "Procedure": [[1, "procedure"], [325, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "NormalDistribution": [[22, "normaldistribution"]], "VariabilityHierarchy": [[28, "variabilityhierarchy"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "add_iiv": [[38, "add-iiv"]], "Distribution": [[13, "distribution"], [316, "distribution"]], "Model": [[18, "model"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "add_indirect_effect": [[39, "add-indirect-effect"]], "add_bioavailability": [[33, "add-bioavailability"]], "Parameters": [[24, "parameters"], [314, "parameters"]], "to_compartmental_system": [[30, "to-compartmental-system"]], "DatasetError": [[11, "dataseterror"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "EstimationStep": [[14, "estimationstep"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "Modelsearch": [[2, "modelsearch"], [317, "modelsearch"]], "Structsearch": [[2, "structsearch"], [328, "structsearch"]], "IIVsearch": [[2, "iivsearch"], [309, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [311, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [329, "results"], [278, "results"], [301, "results"], [311, "results"]], "Final model": [[2, "final-model"]], "add_admid": [[31, "add-admid"]], "ColumnInfo": [[6, "columninfo"], [303, "columninfo"]], "RandomVariables": [[25, "randomvariables"]], "Parameter": [[23, "parameter"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "DataInfo": [[10, "datainfo"], [303, "datainfo"]], "add_cmt": [[34, "add-cmt"]], "add_estimation_step": [[37, "add-estimation-step"]], "Compartment": [[7, "compartment"]], "add_allometry": [[32, "add-allometry"]], "Infusion": [[16, "infusion"]], "Assignment": [[4, "assignment"]], "VariabilityLevel": [[29, "variabilitylevel"]], "add_effect_compartment": [[36, "add-effect-compartment"]], "ModelError": [[19, "modelerror"]], "EstimationSteps": [[15, "estimationsteps"]], "API Reference": [[3, "api-reference"]], "Bolus": [[5, "bolus"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "User guide": [[330, "user-guide"]], "ruvsearch": [[325, "ruvsearch"]], "Models": [[325, "models"]], "The RUVsearch results": [[325, "the-ruvsearch-results"]], "Project suggestions": [[321, "project-suggestions"]], "Tools": [[329, "tools"]], "Tools in Pharmpy": [[329, "tools-in-pharmpy"]], "Common options": [[329, "common-options"]], "Common features": [[329, "common-features"]], "Tool database": [[329, "tool-database"]], "Running directory": [[329, "running-directory"]], "Metadata": [[329, "metadata"]], "Datasets": [[329, "datasets"]], "Model feature language (MFL)": [[329, "model-feature-language-mfl"]], "Option types": [[329, "option-types"]], "Model features": [[329, "model-features"]], "Symbols": [[329, "symbols"]], "Describe intervals": [[329, "describe-intervals"]], "Redundant descriptions": [[329, "redundant-descriptions"]], "Examples": [[329, "examples"]], "PsN with Pharmpy": [[323, "psn-with-pharmpy"]], "Tools connected to PsN": [[323, "tools-connected-to-psn"]], "Simeval": [[327, "simeval"]], "The simeval results": [[327, "the-simeval-results"]], "Sampled Individual OFVs": [[327, "sampled-individual-ofvs"]], "Individual OFV summary": [[327, "individual-ofv-summary"]], "Individual prediction plot": [[327, "individual-prediction-plot"]], "QA": [[324, "qa"]], "The qa results": [[324, "the-qa-results"]], "Overview": [[324, "overview"]], "Structural bias": [[324, "structural-bias"]], "Fullblock": [[324, "fullblock"]], "Boxcox": [[324, "boxcox"]], "Tdist": [[324, "tdist"]], "Residual error": [[324, "residual-error"]], "Covariate effects": [[324, "covariate-effects"], [307, "covariate-effects"]], "Plugins": [[320, "plugins"]], "Overview of a plugin": [[320, "overview-of-a-plugin"]], "scm": [[326, "scm"]], "The scm results": [[326, "the-scm-results"]], "Steps": [[326, "steps"]], "OFV Summary": [[326, "ofv-summary"]], "Candidate Summary": [[326, "candidate-summary"]], "Resmod": [[322, "resmod"]], "The resmod results": [[322, "the-resmod-results"]], "Resmod models": [[322, "resmod-models"]], "The model types": [[328, "the-model-types"]], "PKPD models": [[328, "pkpd-models"]], "Drug metabolite": [[328, "drug-metabolite"]], "The search space": [[328, "the-search-space"], [317, "the-search-space"]], "PKPD": [[328, "pkpd"]], "The Structsearch results": [[328, "the-structsearch-results"]], "Pharmpy in R": [[331, "pharmpy-in-r"]], "Installing pharmr": [[331, "installing-pharmr"]], "Trouble shooting": [[331, "trouble-shooting"]], "Wrong Python version when using conda": [[331, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[331, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[331, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[331, "using-pharmr"]], "Gotchas": [[331, "gotchas"]], "List indices": [[331, "list-indices"]], "write_results": [[268, "write-results"]], "get_model_features": [[240, "get-model-features"]], "NullToolDatabase": [[277, "nulltooldatabase"]], "read_modelfit_results": [[247, "read-modelfit-results"]], "read_results": [[248, "read-results"]], "run_modelfit": [[259, "run-modelfit"]], "load_example_modelfit_results": [[241, "load-example-modelfit-results"]], "rank_models": [[246, "rank-models"]], "ModelDatabase": [[273, "modeldatabase"]], "LocalDirectoryToolDatabase": [[270, "localdirectorytooldatabase"]], "Log": [[272, "log"]], "NullModelDatabase": [[276, "nullmodeldatabase"]], "run_structsearch": [[262, "run-structsearch"]], "retrieve_models": [[251, "retrieve-models"]], "run_modelsearch": [[260, "run-modelsearch"]], "print_fit_summary": [[245, "print-fit-summary"]], "predict_influential_outliers": [[243, "predict-influential-outliers"]], "summarize_modelfit_results": [[267, "summarize-modelfit-results"]], "LocalDirectoryDatabase": [[269, "localdirectorydatabase"]], "predict_outliers": [[244, "predict-outliers"]], "Task": [[279, "task"]], "run_allometry": [[252, "run-allometry"]], "run_amd": [[253, "run-amd"]], "run_iovsearch": [[258, "run-iovsearch"]], "run_tool": [[263, "run-tool"]], "ModelEntry": [[274, "modelentry"]], "run_ruvsearch": [[261, "run-ruvsearch"]], "retrieve_final_model": [[250, "retrieve-final-model"]], "ModelfitResults": [[275, "modelfitresults"]], "predict_influential_individuals": [[242, "predict-influential-individuals"]], "run_iivsearch": [[257, "run-iivsearch"]], "run_estmethod": [[256, "run-estmethod"]], "run_bootstrap": [[254, "run-bootstrap"]], "summarize_individuals": [[265, "summarize-individuals"]], "summarize_individuals_count_table": [[266, "summarize-individuals-count-table"]], "resume_tool": [[249, "resume-tool"]], "LocalModelDirectoryDatabase": [[271, "localmodeldirectorydatabase"]], "summarize_errors": [[264, "summarize-errors"]], "run_covsearch": [[255, "run-covsearch"]], "set_weighted_error_model": [[215, "set-weighted-error-model"]], "unload_dataset": [[231, "unload-dataset"]], "undrop_columns": [[228, "undrop-columns"]], "solve_ode_system": [[220, "solve-ode-system"]], "set_ode_solver": [[205, "set-ode-solver"]], "unconstrain_parameters": [[227, "unconstrain-parameters"]], "unfix_parameters_to": [[230, "unfix-parameters-to"]], "split_joint_distribution": [[221, "split-joint-distribution"]], "set_lloq_data": [[200, "set-lloq-data"]], "transform_etas_john_draper": [[224, "transform-etas-john-draper"]], "unfix_parameters": [[229, "unfix-parameters"]], "write_csv": [[235, "write-csv"]], "create_results": [[238, "create-results"]], "set_mixed_mm_fo_elimination": [[203, "set-mixed-mm-fo-elimination"]], "set_michaelis_menten_elimination": [[202, "set-michaelis-menten-elimination"]], "set_reference_values": [[209, "set-reference-values"]], "use_thetas_for_error_stdev": [[234, "use-thetas-for-error-stdev"]], "transform_etas_boxcox": [[223, "transform-etas-boxcox"]], "transform_blq": [[222, "transform-blq"]], "set_proportional_error_model": [[208, "set-proportional-error-model"]], "update_inits": [[233, "update-inits"]], "set_zero_order_elimination": [[217, "set-zero-order-elimination"]], "simplify_expression": [[219, "simplify-expression"]], "write_model": [[236, "write-model"]], "set_time_varying_error_model": [[211, "set-time-varying-error-model"]], "fit": [[239, "fit"]], "update_initial_individual_estimates": [[232, "update-initial-individual-estimates"]], "set_transit_compartments": [[213, "set-transit-compartments"]], "set_zero_order_absorption": [[216, "set-zero-order-absorption"]], "transform_etas_tdist": [[225, "transform-etas-tdist"]], "set_zero_order_input": [[218, "set-zero-order-input"]], "set_power_on_ruv": [[207, "set-power-on-ruv"]], "set_lower_bounds": [[201, "set-lower-bounds"]], "set_upper_bounds": [[214, "set-upper-bounds"]], "create_report": [[237, "create-report"]], "set_tmdd": [[212, "set-tmdd"]], "set_seq_zo_fo_absorption": [[210, "set-seq-zo-fo-absorption"]], "translate_nmtran_time": [[226, "translate-nmtran-time"]], "set_peripheral_compartments": [[206, "set-peripheral-compartments"]], "set_name": [[204, "set-name"]], "remove_parameter_uncertainty_step": [[178, "remove-parameter-uncertainty-step"]], "set_first_order_absorption": [[194, "set-first-order-absorption"]], "read_dataset_from_datainfo": [[167, "read-dataset-from-datainfo"]], "remove_estimation_step": [[173, "remove-estimation-step"]], "set_additive_error_model": [[186, "set-additive-error-model"]], "remove_peripheral_compartment": [[179, "remove-peripheral-compartment"]], "sample_parameters_from_covariance_matrix": [[184, "sample-parameters-from-covariance-matrix"]], "sample_individual_estimates": [[183, "sample-individual-estimates"]], "remove_loq_data": [[177, "remove-loq-data"]], "plot_iofv_vs_iofv": [[163, "plot-iofv-vs-iofv"]], "set_estimation_step": [[192, "set-estimation-step"]], "set_initial_estimates": [[198, "set-initial-estimates"]], "remove_covariate_effect": [[171, "remove-covariate-effect"]], "remove_error_model": [[172, "remove-error-model"]], "remove_bioavailability": [[170, "remove-bioavailability"]], "set_first_order_elimination": [[195, "set-first-order-elimination"]], "set_instantaneous_absorption": [[199, "set-instantaneous-absorption"]], "set_direct_effect": [[189, "set-direct-effect"]], "plot_cwres_vs_idv": [[160, "plot-cwres-vs-idv"]], "read_model": [[168, "read-model"]], "print_model_symbols": [[166, "print-model-symbols"]], "set_initial_condition": [[197, "set-initial-condition"]], "plot_transformed_eta_distributions": [[164, "plot-transformed-eta-distributions"]], "set_covariates": [[188, "set-covariates"]], "set_evaluation_step": [[193, "set-evaluation-step"]], "resample_data": [[182, "resample-data"]], "remove_iov": [[175, "remove-iov"]], "set_combined_error_model": [[187, "set-combined-error-model"]], "remove_unused_parameters_and_rvs": [[180, "remove-unused-parameters-and-rvs"]], "rename_symbols": [[181, "rename-symbols"]], "set_dtbs_error_model": [[190, "set-dtbs-error-model"]], "plot_individual_predictions": [[162, "plot-individual-predictions"]], "set_dvid": [[191, "set-dvid"]], "read_model_from_string": [[169, "read-model-from-string"]], "plot_dv_vs_ipred": [[161, "plot-dv-vs-ipred"]], "print_model_code": [[165, "print-model-code"]], "set_iiv_on_ruv": [[196, "set-iiv-on-ruv"]], "sample_parameters_uniformly": [[185, "sample-parameters-uniformly"]], "remove_iiv": [[174, "remove-iiv"]], "remove_lag_time": [[176, "remove-lag-time"]], "get_omegas": [[123, "get-omegas"]], "get_thetas": [[130, "get-thetas"]], "get_population_prediction_expression": [[127, "get-population-prediction-expression"]], "has_covariate_effect": [[136, "has-covariate-effect"]], "get_number_of_transit_compartments": [[120, "get-number-of-transit-compartments"]], "get_rv_parameters": [[128, "get-rv-parameters"]], "has_mixed_mm_fo_elimination": [[143, "has-mixed-mm-fo-elimination"]], "has_zero_order_absorption": [[150, "has-zero-order-absorption"]], "has_random_effect": [[147, "has-random-effect"]], "get_unit_of": [[131, "get-unit-of"]], "load_example_model": [[156, "load-example-model"]], "has_first_order_elimination": [[138, "has-first-order-elimination"]], "has_linear_odes_with_real_eigenvalues": [[141, "has-linear-odes-with-real-eigenvalues"]], "has_linear_odes": [[140, "has-linear-odes"]], "list_time_varying_covariates": [[154, "list-time-varying-covariates"]], "greekify_model": [[133, "greekify-model"]], "has_proportional_error_model": [[146, "has-proportional-error-model"]], "is_real": [[153, "is-real"]], "has_combined_error_model": [[135, "has-combined-error-model"]], "has_weighted_error_model": [[149, "has-weighted-error-model"]], "has_michaelis_menten_elimination": [[142, "has-michaelis-menten-elimination"]], "has_presystemic_metabolite": [[145, "has-presystemic-metabolite"]], "has_instantaneous_absorption": [[139, "has-instantaneous-absorption"]], "make_declarative": [[157, "make-declarative"]], "load_dataset": [[155, "load-dataset"]], "has_odes": [[144, "has-odes"]], "has_additive_error_model": [[134, "has-additive-error-model"]], "get_parameter_rv": [[124, "get-parameter-rv"]], "has_first_order_absorption": [[137, "has-first-order-absorption"]], "omit_data": [[159, "omit-data"]], "get_observation_expression": [[121, "get-observation-expression"]], "get_zero_order_inputs": [[132, "get-zero-order-inputs"]], "get_sigmas": [[129, "get-sigmas"]], "get_observations": [[122, "get-observations"]], "get_pd_parameters": [[125, "get-pd-parameters"]], "has_seq_zo_fo_absorption": [[148, "has-seq-zo-fo-absorption"]], "mu_reference_model": [[158, "mu-reference-model"]], "is_linearized": [[152, "is-linearized"]], "get_pk_parameters": [[126, "get-pk-parameters"]], "has_zero_order_elimination": [[151, "has-zero-order-elimination"]], "get_evid": [[107, "get-evid"]], "get_dv_symbol": [[106, "get-dv-symbol"]], "fix_parameters_to": [[96, "fix-parameters-to"]], "get_cmt": [[100, "get-cmt"]], "get_doseid": [[104, "get-doseid"]], "get_ids": [[108, "get-ids"]], "evaluate_population_prediction": [[88, "evaluate-population-prediction"]], "evaluate_expression": [[86, "evaluate-expression"]], "evaluate_epsilon_gradient": [[84, "evaluate-epsilon-gradient"]], "get_model_code": [[114, "get-model-code"]], "get_number_of_observations_per_individual": [[118, "get-number-of-observations-per-individual"]], "get_doses": [[105, "get-doses"]], "get_mdv": [[113, "get-mdv"]], "evaluate_weighted_residuals": [[89, "evaluate-weighted-residuals"]], "fix_parameters": [[95, "fix-parameters"]], "evaluate_eta_gradient": [[85, "evaluate-eta-gradient"]], "get_number_of_peripheral_compartments": [[119, "get-number-of-peripheral-compartments"]], "get_covariate_baselines": [[103, "get-covariate-baselines"]], "get_individual_parameters": [[109, "get-individual-parameters"]], "get_individual_prediction_expression": [[110, "get-individual-prediction-expression"]], "get_admid": [[97, "get-admid"]], "get_number_of_individuals": [[116, "get-number-of-individuals"]], "get_bioavailability": [[99, "get-bioavailability"]], "get_initial_conditions": [[111, "get-initial-conditions"]], "get_concentration_parameters_from_data": [[101, "get-concentration-parameters-from-data"]], "display_odes": [[81, "display-odes"]], "expand_additional_doses": [[90, "expand-additional-doses"]], "filter_dataset": [[91, "filter-dataset"]], "get_number_of_observations": [[117, "get-number-of-observations"]], "deidentify_data": [[80, "deidentify-data"]], "drop_dropped_columns": [[83, "drop-dropped-columns"]], "find_clearance_parameters": [[92, "find-clearance-parameters"]], "get_lag_times": [[112, "get-lag-times"]], "find_volume_parameters": [[93, "find-volume-parameters"]], "fix_or_unfix_parameters": [[94, "fix-or-unfix-parameters"]], "get_model_covariates": [[115, "get-model-covariates"]], "get_baselines": [[98, "get-baselines"]], "get_config_path": [[102, "get-config-path"]], "drop_columns": [[82, "drop-columns"]], "evaluate_individual_prediction": [[87, "evaluate-individual-prediction"]], "Algorithms": [[309, "algorithms"], [306, "algorithms"], [317, "algorithms"]], "Brute force search for number of IIVs": [[309, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[309, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[309, "full-brute-force-search"]], "Adding IIV to the start model": [[309, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[309, "comparing-and-ranking-candidates"], [317, "comparing-and-ranking-candidates"], [311, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[309, "the-iivsearch-results"]], "pharmpy.workflows Package": [[291, "module-pharmpy.workflows"]], "Options for the data module": [[291, "id1"]], "Functions": [[291, "functions"], [290, "functions"], [289, "functions"], [288, "functions"]], "Classes": [[291, "classes"], [288, "classes"]], "Configuration": [[298, "configuration"]], "The configuration file": [[298, "the-configuration-file"]], "Available configurations": [[298, "available-configurations"]], "pharmpy.plugins.nonmem": [[298, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[298, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[298, "pharmpy-plugins-rxode"]], "Environment variables": [[298, "environment-variables"]], "split_common_options": [[287, "split-common-options"]], "Datasets in Pharmpy": [[303, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[303, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[303, "update-the-dataset-of-a-model"]], "type": [[303, "type"]], "scale": [[303, "scale"]], "continuous": [[303, "continuous"]], "categories": [[303, "categories"]], "unit": [[303, "unit"]], "drop": [[303, "drop"]], "datatype": [[303, "datatype"]], "descriptor": [[303, "descriptor"]], "datainfo file": [[303, "datainfo-file"]], "Case deletion diagnostics": [[293, "case-deletion-diagnostics"]], "The cdd results": [[293, "the-cdd-results"]], "Case results": [[293, "case-results"]], "Cook score": [[293, "cook-score"]], "Jackknife cookscore": [[293, "jackknife-cookscore"]], "Covariance ratio": [[293, "covariance-ratio"]], "Delta OFV": [[293, "delta-ofv"]], "Skipped individuals": [[293, "skipped-individuals"]], "Case column": [[293, "case-column"]], "References": [[293, "references"], [307, "references"]], "FREM": [[307, "frem"]], "The FREM postprocessing and results": [[307, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[307, "parameter-covariate-coefficients"]], "Individual covariate effects": [[307, "individual-covariate-effects"]], "Unexplained variability": [[307, "unexplained-variability"]], "Parameter estimates": [[307, "parameter-estimates"], [315, "parameter-estimates"]], "OFV": [[307, "ofv"]], "Estimated covariate values": [[307, "estimated-covariate-values"]], "default_model_database": [[284, "default-model-database"]], "Estmethod": [[306, "estmethod"]], "Exhaustive": [[306, "exhaustive"]], "Exhaustive (with update)": [[306, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[306, "exhaustive-only-evaluation"]], "Estimation methods": [[306, "estimation-methods"]], "Solvers": [[306, "solvers"]], "The Estmethod results": [[306, "the-estmethod-results"]], "License": [[312, "license"]], "Logo": [[312, "logo"]], "Copyright": [[312, "copyright"]], "BSD 2-clause License": [[312, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[312, "gnu-lesser-general-public-license"]], "Bootstrap": [[292, "bootstrap"]], "The Bootstrap postprocessing and results": [[292, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[292, "parameter-statistics"]], "OFV statistics": [[292, "ofv-statistics"]], "Covariance matrix": [[292, "covariance-matrix"], [315, "covariance-matrix"]], "Included individuals": [[292, "included-individuals"]], "Common behaviours between algorithms": [[317, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[317, "feature-combination-exclusions"]], "Exhaustive search": [[317, "exhaustive-search"]], "Exhaustive stepwise search": [[317, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[317, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[317, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[317, "the-modelsearch-results"]], "Getting started": [[308, "getting-started"]], "Installation": [[308, "installation"]], "A first example": [[308, "a-first-example"]], "The Pharmpy command line interface": [[296, "the-pharmpy-command-line-interface"]], "pharmpy": [[296, "pharmpy"]], "pharmpy data": [[296, "pharmpy-data"]], "pharmpy data append": [[296, "pharmpy-data-append"]], "pharmpy data deidentify": [[296, "pharmpy-data-deidentify"]], "pharmpy data filter": [[296, "pharmpy-data-filter"]], "pharmpy data print": [[296, "pharmpy-data-print"]], "pharmpy data reference": [[296, "pharmpy-data-reference"]], "pharmpy data resample": [[296, "pharmpy-data-resample"]], "pharmpy data write": [[296, "pharmpy-data-write"]], "pharmpy info": [[296, "pharmpy-info"]], "pharmpy model": [[296, "pharmpy-model"]], "pharmpy model absorption_rate": [[296, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[296, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[296, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[296, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[296, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[296, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[296, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[296, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[296, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[296, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[296, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[296, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[296, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[296, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[296, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[296, "pharmpy-model-sample"]], "pharmpy model tdist": [[296, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[296, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[296, "pharmpy-model-update-inits"]], "pharmpy results": [[296, "pharmpy-results"]], "pharmpy results bootstrap": [[296, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[296, "pharmpy-results-cdd"]], "pharmpy results frem": [[296, "pharmpy-results-frem"]], "pharmpy results linearize": [[296, "pharmpy-results-linearize"]], "pharmpy results ofv": [[296, "pharmpy-results-ofv"]], "pharmpy results print": [[296, "pharmpy-results-print"]], "pharmpy results qa": [[296, "pharmpy-results-qa"]], "pharmpy results report": [[296, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[296, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[296, "pharmpy-results-scm"]], "pharmpy results simeval": [[296, "pharmpy-results-simeval"]], "pharmpy results summary": [[296, "pharmpy-results-summary"]], "pharmpy run": [[296, "pharmpy-run"]], "pharmpy run allometry": [[296, "pharmpy-run-allometry"]], "pharmpy run amd": [[296, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[296, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[296, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[296, "pharmpy-run-estmethod"]], "pharmpy run execute": [[296, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[296, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[296, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[296, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[296, "pharmpy-run-ruvsearch"]], "Workflow": [[281, "workflow"]], "ToolDatabase": [[280, "tooldatabase"]], "Using the NONMEM plugin": [[318, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[318, "names-of-parameters-and-random-variables"]], "Reading in a model": [[318, "reading-in-a-model"], [314, "reading-in-a-model"]], "New parameters and random variables": [[318, "new-parameters-and-random-variables"]], "Writing a model": [[318, "writing-a-model"], [314, "writing-a-model"]], "default_tool_database": [[285, "default-tool-database"]], "Plots in Pharmpy": [[319, "plots-in-pharmpy"]], "Setting themes": [[319, "setting-themes"]], "Changing axis of plots": [[319, "changing-axis-of-plots"]], "Pharmpy Community Code of Conduct": [[297, "pharmpy-community-code-of-conduct"]], "Model estimation and results": [[315, "model-estimation-and-results"]], "Fitting a model": [[315, "fitting-a-model"]], "Modelfit results": [[315, "modelfit-results"]], "Final OFV": [[315, "final-ofv"]], "Standard errors of parameter estimates": [[315, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[315, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[315, "correlation-matrix"]], "Precision Matrix": [[315, "precision-matrix"]], "Indiviudal OFV": [[315, "indiviudal-ofv"]], "Predictions": [[315, "predictions"]], "Residuals": [[315, "residuals"]], "Individual estimates": [[315, "individual-estimates"]], "pharmpy.tools Package": [[290, "module-pharmpy.tools"]], "Crossval": [[302, "crossval"]], "The crossval results": [[302, "the-crossval-results"]], "Crossvalidation OFVs": [[302, "crossvalidation-ofvs"]], "execute_workflow": [[286, "execute-workflow"]], "call_workflow": [[283, "call-workflow"]], "Changelog": [[294, "changelog"]], "0.103.0 (2023-10-12)": [[294, "id1"]], "Changes": [[294, "changes"], [294, "id3"], [294, "id9"], [294, "id12"], [294, "id16"], [294, "id19"], [294, "id21"], [294, "id25"], [294, "id29"], [294, "id33"], [294, "id40"], [294, "id44"], [294, "id47"], [294, "id50"], [294, "id52"], [294, "id54"], [294, "id57"], [294, "id60"], [294, "id63"], [294, "id65"], [294, "id68"], [294, "id73"], [294, "id76"], [294, "id80"], [294, "id83"], [294, "id86"], [294, "id91"], [294, "id95"], [294, "id98"], [294, "id102"], [294, "id105"], [294, "id109"], [294, "id115"], [294, "id119"], [294, "id130"], [294, "id134"], [294, "id139"], [294, "id145"], [294, "id155"], [294, "id160"], [294, "id164"], [294, "id171"], [294, "id177"], [294, "id182"], [294, "id185"], [294, "id189"]], "Bugfixes": [[294, "bugfixes"], [294, "id4"], [294, "id13"], [294, "id23"], [294, "id26"], [294, "id30"], [294, "id34"], [294, "id37"], [294, "id41"], [294, "id55"], [294, "id58"], [294, "id84"], [294, "id88"], [294, "id92"], [294, "id96"], [294, "id99"], [294, "id106"], [294, "id110"], [294, "id112"], [294, "id116"], [294, "id120"], [294, "id122"], [294, "id125"], [294, "id127"], [294, "id131"], [294, "id137"], [294, "id140"], [294, "id142"], [294, "id146"], [294, "id150"], [294, "id152"], [294, "id156"], [294, "id158"], [294, "id161"], [294, "id165"], [294, "id168"], [294, "id172"], [294, "id179"], [294, "id186"], [294, "id190"]], "0.102.0 (2023-09-28)": [[294, "id2"]], "New features": [[294, "new-features"], [294, "id6"], [294, "id8"], [294, "id11"], [294, "id15"], [294, "id18"], [294, "id22"], [294, "id28"], [294, "id32"], [294, "id36"], [294, "id39"], [294, "id43"], [294, "id46"], [294, "id49"], [294, "id62"], [294, "id72"], [294, "id79"], [294, "id90"], [294, "id94"], [294, "id101"], [294, "id104"], [294, "id108"], [294, "id114"], [294, "id118"], [294, "id124"], [294, "id129"], [294, "id133"], [294, "id136"], [294, "id144"], [294, "id148"], [294, "id154"], [294, "id163"], [294, "id167"], [294, "id170"], [294, "id174"], [294, "id176"], [294, "id181"], [294, "id184"], [294, "id188"]], "0.101.0 (2023-09-01)": [[294, "id5"]], "0.100.0 (2023-08-25)": [[294, "id7"]], "0.99.0 (2023-08-23)": [[294, "id10"]], "0.98.0 (2023-07-21)": [[294, "id14"]], "0.97.0 (2023-06-28)": [[294, "id17"]], "0.96.0 (2023-05-26)": [[294, "id20"]], "0.95.0 (2023-05-22)": [[294, "id24"]], "0.94.0 (2023-04-26)": [[294, "id27"]], "0.93.0 (2023-04-19)": [[294, "id31"]], "0.92.0 (2023-04-05)": [[294, "id35"]], "0.91.0 (2023-03-03)": [[294, "id38"]], "0.90.0 (2023-02-24)": [[294, "id42"]], "0.89.0 (2023-01-26)": [[294, "id45"]], "0.88.0 (2022-12-21)": [[294, "id48"]], "0.87.0 (2022-12-14)": [[294, "id51"]], "0.86.0 (2022-11-30)": [[294, "id53"]], "0.85.0 (2022-11-18)": [[294, "id56"]], "0.84.1 (2022-11-13)": [[294, "id59"]], "Bug fixes": [[294, "bug-fixes"], [294, "id66"], [294, "id70"], [294, "id74"], [294, "id77"], [294, "id81"]], "0.84.0 (2022-11-09)": [[294, "id61"]], "0.83.0 (2022-11-01)": [[294, "id64"]], "0.82.0 (2022-10-24)": [[294, "id67"]], "0.81.1 (2022-10-24)": [[294, "id69"]], "0.81.0 (2022-10-21)": [[294, "id71"]], "0.80.0 (2022-10-19)": [[294, "id75"]], "0.79.0 (2022-10-16)": [[294, "id78"]], "0.78.0 (2022-09-20)": [[294, "id82"]], "0.77.0 (2022-09-08)": [[294, "id85"]], "0.76.1 (2022-09-06)": [[294, "id87"]], "0.76.0 (2022-09-05)": [[294, "id89"]], "0.75.0 (2022-08-10)": [[294, "id93"]], "0.74.0 (2022-07-18)": [[294, "id97"]], "0.73.0 (2022-06-21)": [[294, "id100"]], "0.72.0 (2022-06-08)": [[294, "id103"]], "0.71.0 (2022-05-24)": [[294, "id107"]], "0.70.1 (2022-05-17)": [[294, "id111"]], "0.70.0 (2022-05-13)": [[294, "id113"]], "0.69.0 (2022-04-29)": [[294, "id117"]], "0.68.0 (2022-04-27)": [[294, "id121"]], "0.67.0 (2022-04-25)": [[294, "id123"]], "0.66.0 (2022-04-20)": [[294, "id126"]], "0.65.0 (2022-04-14)": [[294, "id128"]], "0.64.0 (2022-04-12)": [[294, "id132"]], "0.63.0 (2022-04-07)": [[294, "id135"]], "0.62.0 (2022-04-04)": [[294, "id138"]], "New feature": [[294, "new-feature"]], "0.61.1 (2022-03-31)": [[294, "id141"]], "0.61.0 (2022-03-29)": [[294, "id143"]], "0.59.0 (2022-03-25)": [[294, "id147"]], "0.58.4 (2022-03-24)": [[294, "id149"]], "0.58.1 (2022-03-22)": [[294, "id151"]], "0.58.0 (2022-03-22)": [[294, "id153"]], "0.57.0 (2022-03-21)": [[294, "id157"]], "0.56.0 (2022-03-17)": [[294, "id159"]], "0.55.0 (2022-03-16)": [[294, "id162"]], "0.54.0 (2022-03-08)": [[294, "id166"]], "0.53.0 (2022-03-04)": [[294, "id169"]], "0.52.0 (2022-02-25)": [[294, "id173"]], "0.51.0 (2022-02-24)": [[294, "id175"]], "0.50.1 (2022-02-16)": [[294, "id178"]], "0.50.0 (2022-02-16)": [[294, "id180"]], "0.49.0 (2022-02-10)": [[294, "id183"]], "0.48.0 (2022-02-04)": [[294, "id187"]], "0.47.0 (2022-01-28)": [[294, "id191"]], "0.46.0 (2022-01-27)": [[294, "id192"]], "0.45.0 (2022-01-21)": [[294, "id193"]], "0.44.0 (2022-01-20)": [[294, "id194"]], "0.43.0 (2022-01-12)": [[294, "id195"]], "0.42.0 (2022-01-11)": [[294, "id196"]], "0.41.0 (2021-12-21)": [[294, "id197"]], "0.40.0 (2021-12-16)": [[294, "id198"]], "0.39.0 (2021-12-15)": [[294, "id199"]], "0.38.0 (2021-12-08)": [[294, "id200"]], "0.37.1 (2021-11-26)": [[294, "id201"]], "0.37.0 (2021-11-24)": [[294, "id202"]], "0.36.0 (2021-11-11)": [[294, "id203"]], "0.35.0 (2021-11-02)": [[294, "id204"]], "0.34.3 (2021-10-28)": [[294, "id205"]], "0.34.2 (2021-10-26)": [[294, "id206"]], "0.34.1 (2021-10-20)": [[294, "id207"]], "0.34.0 (2021-10-14)": [[294, "id208"]], "0.33.0 (2021-10-11)": [[294, "id209"]], "0.32.0 (2021-09-28)": [[294, "id210"]], "0.31.0 (2021-09-21)": [[294, "id211"]], "0.30.0 (2021-09-06)": [[294, "id212"]], "0.29.0 (2021-08-25)": [[294, "id213"]], "0.28.0 (2021-08-24)": [[294, "id214"]], "0.27.0 (2021-08-09)": [[294, "id215"]], "0.26.1 (2021-08-04)": [[294, "id216"]], "0.26.0 (2021-07-13)": [[294, "id217"]], "0.25.1 (2021-07-08)": [[294, "id218"]], "0.25.0 (2021-06-24)": [[294, "id219"]], "0.24.0 (2021-05-25)": [[294, "id220"]], "0.23.4 (2021-05-03)": [[294, "id221"]], "0.23.3 (2021-04-29)": [[294, "id222"]], "0.23.2 (2021-04-28)": [[294, "id223"]], "0.23.1 (2021-04-28)": [[294, "id224"]], "0.23.0 (2021-04-28)": [[294, "id225"]], "0.22.0 (2021-03-29)": [[294, "id226"]], "0.21.0 (2021-03-22)": [[294, "id227"]], "0.20.1 (2021-03-11)": [[294, "id228"]], "0.20.0 (2021-03-11)": [[294, "id229"]], "0.19.0 (2021-03-02)": [[294, "id230"]], "0.18.0 (2021-03-01)": [[294, "id231"]], "0.17.0 (2021-02-15)": [[294, "id232"]], "0.16.0 (2021-02-08)": [[294, "id233"]], "0.15.0 (2021-02-01)": [[294, "id234"]], "0.14.0 (2021-01-25)": [[294, "id235"]], "0.13.0 (2021-01-18)": [[294, "id236"]], "0.12.0 (2020-12-18)": [[294, "id237"]], "0.11.0 (2020-11-20)": [[294, "id238"]], "0.10.0 (2020-11-16)": [[294, "id239"]], "0.9.0 (2020-10-26)": [[294, "id240"]], "0.8.0 (2020-10-08)": [[294, "id241"]], "0.7.0 (2020-09-28)": [[294, "id242"]], "0.6.0 (2020-09-18)": [[294, "id243"]], "0.5.0 (2020-09-04)": [[294, "id244"]], "0.4.0 (2020-07-24)": [[294, "id245"]], "0.3.0 (2020-06-16)": [[294, "id246"]], "0.2.0 (2020-03-27)": [[294, "id247"]], "0.1.0 (2018-07-22)": [[294, "id248"]], "Linearize": [[313, "linearize"]], "The linearize results": [[313, "the-linearize-results"]], "OFVs": [[313, "ofvs"]], "Individual OFVs": [[313, "individual-ofvs"]], "Modeling": [[316, "modeling"]], "Basic functions": [[316, "basic-functions"]], "Reading and writing models": [[316, "reading-and-writing-models"]], "Loading example models": [[316, "loading-example-models"]], "Converting models": [[316, "converting-models"]], "Create basic models": [[316, "create-basic-models"]], "Modeling transformations": [[316, "modeling-transformations"]], "Structural model": [[316, "structural-model"]], "Absorption rate": [[316, "absorption-rate"]], "Absorption delay": [[316, "absorption-delay"]], "Elimination": [[316, "elimination"]], "Parameter variability model": [[316, "parameter-variability-model"]], "Adding and removing parameter variability": [[316, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[316, "adding-and-removing-covariance"]], "Eta transformations": [[316, "eta-transformations"]], "Covariates and allometry": [[316, "covariates-and-allometry"]], "Population parameters": [[316, "population-parameters"]], "Error model": [[316, "error-model"]], "BLQ transformations": [[316, "blq-transformations"]], "Estimation steps": [[316, "estimation-steps"], [314, "estimation-steps"]], "Examining and modifying dataset": [[316, "examining-and-modifying-dataset"]], "Subjects": [[316, "subjects"]], "Observations": [[316, "observations"]], "Dosing": [[316, "dosing"]], "Extract dosing information": [[316, "extract-dosing-information"]], "Dose grouping": [[316, "dose-grouping"]], "Time after dose": [[316, "time-after-dose"]], "Concentration parameters": [[316, "concentration-parameters"]], "Contributors": [[300, "authors"]], "Development": [[300, "development"]], "Scientific input": [[300, "scientific-input"]], "Funding": [[300, "funding"]], "pharmpy.modeling Package": [[289, "module-pharmpy.modeling"]], "The Pharmpy model": [[314, "the-pharmpy-model"]], "Inspecting the model attributes": [[314, "inspecting-the-model-attributes"]], "Name and description": [[314, "name-and-description"]], "Random variables": [[314, "random-variables"]], "Dataset and datainfo": [[314, "dataset-and-datainfo"]], "Dependent variables": [[314, "dependent-variables"]], "Low level manipulations of the model object": [[314, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[314, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[314, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Documentation for developers": [[305, "documentation-for-developers"]], "Welcome to Pharmpy": [[310, "welcome-to-pharmpy"]], "pharmpy.model Package": [[288, "module-pharmpy.model"]], "Citation": [[295, "citation"]], "How to cite Pharmpy and pharmr": [[295, "how-to-cite-pharmpy-and-pharmr"]], "Contribute": [[299, "contribute"]], "Set up the development environment": [[299, "set-up-the-development-environment"]], "Supported platforms": [[299, "supported-platforms"]], "Install Python": [[299, "install-python"]], "Install git": [[299, "install-git"]], "Fork and clone the code repository": [[299, "fork-and-clone-the-code-repository"]], "Install tox": [[299, "install-tox"]], "Install graphviz used for building the documentation": [[299, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[299, "using-the-development-environment"]], "Running tox": [[299, "running-tox"]], "Check code formatting": [[299, "check-code-formatting"]], "Run the unit tests": [[299, "run-the-unit-tests"]], "Build and test the documentation": [[299, "build-and-test-the-documentation"]], "Run the integration tests": [[299, "run-the-integration-tests"]], "Build a usable virtual environment": [[299, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[299, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[299, "releasing-pharmpy-and-documentation"]], "Version": [[299, "version"]], "Information for developers": [[299, "information-for-developers"]], "Design principles": [[304, "design-principles"]], "Levels of the architecture": [[304, "levels-of-the-architecture"]], "The Heart, The Model Class": [[304, "the-heart-the-model-class"]], "pharmpy.Parameters": [[304, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[304, "pharmpy-randomvariables"]], "pharmpy.Statements": [[304, "pharmpy-statements"]], "The pharmpy.modeling module": [[304, "the-pharmpy-modeling-module"]], "Docstrings": [[304, "docstrings"]], "Dependencies": [[304, "dependencies"]], "COVsearch": [[301, "covsearch"]], "Effects": [[301, "effects"]], "Wildcards": [[301, "wildcards"]], "Algorithm": [[301, "algorithm"], [311, "algorithm"]], "WorkflowBuilder": [[282, "workflowbuilder"]], "Distribution of new IOVs": [[311, "distribution-of-new-iovs"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[23, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[24, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[25, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.subs"]], "symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.symbols"]], "to_dict() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.variance_parameters"]], "statement (class in pharmpy.model)": [[26, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[26, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[26, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[26, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[27, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[27, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[27, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[27, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[27, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[27, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[27, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[27, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[28, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[28, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[28, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[28, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[28, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[28, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[28, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[29, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[29, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[29, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[29, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[29, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[29, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[29, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[29, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[30, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[31, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[32, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_bioavailability"]], "add_cmt() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_cmt"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.omit_data"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_additive_error_model"]], "set_combined_error_model() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[237, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[238, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[239, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[240, "pharmpy.tools.get_model_features"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[241, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[242, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[243, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[244, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[245, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[246, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[247, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[248, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[249, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[250, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[251, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[252, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[253, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[254, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[255, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[256, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[257, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[258, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[259, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[260, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[261, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[262, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[263, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[264, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[265, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[266, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[267, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[268, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[269, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[269, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[270, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[271, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[272, "pharmpy.workflows.Log"]], "errors (pharmpy.workflows.log attribute)": [[272, "pharmpy.workflows.Log.errors"]], "from_dict() (pharmpy.workflows.log class method)": [[272, "pharmpy.workflows.Log.from_dict"]], "log_error() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[272, "pharmpy.workflows.Log.to_dict"]], "warnings (pharmpy.workflows.log attribute)": [[272, "pharmpy.workflows.Log.warnings"]], "modeldatabase (class in pharmpy.workflows)": [[273, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[273, "pharmpy.workflows.ModelDatabase.transaction"]], "modelentry (class in pharmpy.workflows)": [[274, "pharmpy.workflows.ModelEntry"]], "attach_results() (pharmpy.workflows.modelentry method)": [[274, "pharmpy.workflows.ModelEntry.attach_results"]], "create() (pharmpy.workflows.modelentry class method)": [[274, "pharmpy.workflows.ModelEntry.create"]], "log (pharmpy.workflows.modelentry attribute)": [[274, "pharmpy.workflows.ModelEntry.log"]], "model (pharmpy.workflows.modelentry attribute)": [[274, "pharmpy.workflows.ModelEntry.model"]], "modelfit_results (pharmpy.workflows.modelentry attribute)": [[274, "pharmpy.workflows.ModelEntry.modelfit_results"]], "parent (pharmpy.workflows.modelentry attribute)": [[274, "pharmpy.workflows.ModelEntry.parent"]], "modelfitresults (class in pharmpy.workflows)": [[275, "pharmpy.workflows.ModelfitResults"]], "correlation_matrix (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.correlation_matrix"]], "covariance_matrix (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.covariance_matrix"]], "description (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.description"]], "estimation_runtime (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.estimation_runtime"]], "estimation_runtime_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.estimation_runtime_iterations"]], "evaluation (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.evaluation"]], "function_evaluations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.function_evaluations"]], "function_evaluations_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.function_evaluations_iterations"]], "individual_estimates (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.individual_estimates"]], "individual_estimates_covariance (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.individual_estimates_covariance"]], "individual_ofv (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.individual_ofv"]], "log (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.log"]], "log_likelihood (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.log_likelihood"]], "minimization_successful (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.minimization_successful"]], "minimization_successful_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.minimization_successful_iterations"]], "name (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.name"]], "ofv (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.ofv"]], "ofv_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.ofv_iterations"]], "parameter_estimates (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.parameter_estimates"]], "parameter_estimates_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.parameter_estimates_iterations"]], "parameter_estimates_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.parameter_estimates_sdcorr"]], "precision_matrix (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.precision_matrix"]], "predictions (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.predictions"]], "relative_standard_errors (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.relative_standard_errors"]], "residuals (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.residuals"]], "runtime_total (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.runtime_total"]], "significant_digits (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.significant_digits"]], "significant_digits_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.significant_digits_iterations"]], "standard_errors (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.standard_errors"]], "standard_errors_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.standard_errors_sdcorr"]], "termination_cause (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.termination_cause"]], "termination_cause_iterations (pharmpy.workflows.modelfitresults attribute)": [[275, "pharmpy.workflows.ModelfitResults.termination_cause_iterations"]], "nullmodeldatabase (class in pharmpy.workflows)": [[276, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[276, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[277, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[277, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[277, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[277, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[277, "pharmpy.workflows.NullToolDatabase.store_results"]], "results (class in pharmpy.workflows)": [[278, "pharmpy.workflows.Results"]], "from_dict() (pharmpy.workflows.results class method)": [[278, "pharmpy.workflows.Results.from_dict"]], "get_and_reset_index() (pharmpy.workflows.results method)": [[278, "pharmpy.workflows.Results.get_and_reset_index"]], "to_csv() (pharmpy.workflows.results method)": [[278, "pharmpy.workflows.Results.to_csv"]], "to_dict() (pharmpy.workflows.results method)": [[278, "pharmpy.workflows.Results.to_dict"]], "to_json() (pharmpy.workflows.results method)": [[278, "pharmpy.workflows.Results.to_json"]], "task (class in pharmpy.workflows)": [[279, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[279, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[279, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[279, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[279, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[279, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[280, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[280, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[280, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[280, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[280, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[280, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[280, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[281, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[281, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[281, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[281, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[281, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[281, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[282, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[282, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[282, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[282, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[283, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[284, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[285, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[286, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[287, "pharmpy.workflows.split_common_options"]], "module": [[288, "module-pharmpy.model"], [289, "module-pharmpy.modeling"], [290, "module-pharmpy.tools"], [291, "module-pharmpy.workflows"]], "pharmpy.model": [[288, "module-pharmpy.model"]], "pharmpy.modeling": [[289, "module-pharmpy.modeling"]], "pharmpy.tools": [[290, "module-pharmpy.tools"]], "pharmpy.workflows": [[291, "module-pharmpy.workflows"]], "--administration": [[296, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[296, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[296, "cmdoption-pharmpy-run-allometry-allometric_variable"], [296, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[296, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[296, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[296, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[296, "cmdoption-pharmpy-run-iivsearch-cutoff"], [296, "cmdoption-pharmpy-run-iovsearch-cutoff"], [296, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[296, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[296, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[296, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[296, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [296, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[296, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[296, "cmdoption-pharmpy-model-add_iov-eta_names"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[296, "cmdoption-pharmpy-model-add_iov-etas"], [296, "cmdoption-pharmpy-model-boxcox-etas"], [296, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [296, "cmdoption-pharmpy-model-john_draper-etas"], [296, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[296, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[296, "cmdoption-pharmpy-data-append-f"], [296, "cmdoption-pharmpy-data-deidentify-f"], [296, "cmdoption-pharmpy-data-filter-f"], [296, "cmdoption-pharmpy-data-reference-f"], [296, "cmdoption-pharmpy-data-write-f"], [296, "cmdoption-pharmpy-model-absorption_rate-f"], [296, "cmdoption-pharmpy-model-add_cov_effect-f"], [296, "cmdoption-pharmpy-model-add_iiv-f"], [296, "cmdoption-pharmpy-model-add_iov-f"], [296, "cmdoption-pharmpy-model-boxcox-f"], [296, "cmdoption-pharmpy-model-create_joint_distribution-f"], [296, "cmdoption-pharmpy-model-elimination_rate-f"], [296, "cmdoption-pharmpy-model-error-f"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [296, "cmdoption-pharmpy-model-john_draper-f"], [296, "cmdoption-pharmpy-model-peripheral_compartments-f"], [296, "cmdoption-pharmpy-model-power_on_ruv-f"], [296, "cmdoption-pharmpy-model-remove_iiv-f"], [296, "cmdoption-pharmpy-model-remove_iov-f"], [296, "cmdoption-pharmpy-model-tdist-f"], [296, "cmdoption-pharmpy-model-transit_compartments-f"], [296, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[296, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[296, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[296, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[296, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[296, "cmdoption-pharmpy-data-append-h"], [296, "cmdoption-pharmpy-data-deidentify-h"], [296, "cmdoption-pharmpy-data-filter-h"], [296, "cmdoption-pharmpy-data-h"], [296, "cmdoption-pharmpy-data-print-h"], [296, "cmdoption-pharmpy-data-reference-h"], [296, "cmdoption-pharmpy-data-resample-h"], [296, "cmdoption-pharmpy-data-write-h"], [296, "cmdoption-pharmpy-h"], [296, "cmdoption-pharmpy-info-h"], [296, "cmdoption-pharmpy-model-absorption_rate-h"], [296, "cmdoption-pharmpy-model-add_cov_effect-h"], [296, "cmdoption-pharmpy-model-add_iiv-h"], [296, "cmdoption-pharmpy-model-add_iov-h"], [296, "cmdoption-pharmpy-model-boxcox-h"], [296, "cmdoption-pharmpy-model-create_joint_distribution-h"], [296, "cmdoption-pharmpy-model-elimination_rate-h"], [296, "cmdoption-pharmpy-model-error-h"], [296, "cmdoption-pharmpy-model-h"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [296, "cmdoption-pharmpy-model-john_draper-h"], [296, "cmdoption-pharmpy-model-peripheral_compartments-h"], [296, "cmdoption-pharmpy-model-power_on_ruv-h"], [296, "cmdoption-pharmpy-model-print-h"], [296, "cmdoption-pharmpy-model-remove_iiv-h"], [296, "cmdoption-pharmpy-model-remove_iov-h"], [296, "cmdoption-pharmpy-model-sample-h"], [296, "cmdoption-pharmpy-model-tdist-h"], [296, "cmdoption-pharmpy-model-transit_compartments-h"], [296, "cmdoption-pharmpy-model-update_inits-h"], [296, "cmdoption-pharmpy-results-bootstrap-h"], [296, "cmdoption-pharmpy-results-cdd-h"], [296, "cmdoption-pharmpy-results-frem-h"], [296, "cmdoption-pharmpy-results-h"], [296, "cmdoption-pharmpy-results-linearize-h"], [296, "cmdoption-pharmpy-results-ofv-h"], [296, "cmdoption-pharmpy-results-print-h"], [296, "cmdoption-pharmpy-results-qa-h"], [296, "cmdoption-pharmpy-results-report-h"], [296, "cmdoption-pharmpy-results-ruvsearch-h"], [296, "cmdoption-pharmpy-results-scm-h"], [296, "cmdoption-pharmpy-results-simeval-h"], [296, "cmdoption-pharmpy-results-summary-h"], [296, "cmdoption-pharmpy-run-allometry-h"], [296, "cmdoption-pharmpy-run-amd-h"], [296, "cmdoption-pharmpy-run-bootstrap-h"], [296, "cmdoption-pharmpy-run-covsearch-h"], [296, "cmdoption-pharmpy-run-estmethod-h"], [296, "cmdoption-pharmpy-run-execute-h"], [296, "cmdoption-pharmpy-run-h"], [296, "cmdoption-pharmpy-run-iivsearch-h"], [296, "cmdoption-pharmpy-run-iovsearch-h"], [296, "cmdoption-pharmpy-run-modelsearch-h"], [296, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[296, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[296, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [296, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[296, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[296, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[296, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[296, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[296, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[296, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[296, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[296, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[296, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[296, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[296, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[296, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[296, "cmdoption-pharmpy-model-add_cov_effect-operation"], [296, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[296, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[296, "cmdoption-pharmpy-data-append-o"], [296, "cmdoption-pharmpy-data-deidentify-o"], [296, "cmdoption-pharmpy-data-filter-o"], [296, "cmdoption-pharmpy-data-reference-o"], [296, "cmdoption-pharmpy-data-write-o"], [296, "cmdoption-pharmpy-model-absorption_rate-o"], [296, "cmdoption-pharmpy-model-add_cov_effect-o"], [296, "cmdoption-pharmpy-model-add_iiv-o"], [296, "cmdoption-pharmpy-model-add_iov-o"], [296, "cmdoption-pharmpy-model-boxcox-o"], [296, "cmdoption-pharmpy-model-create_joint_distribution-o"], [296, "cmdoption-pharmpy-model-elimination_rate-o"], [296, "cmdoption-pharmpy-model-error-o"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [296, "cmdoption-pharmpy-model-john_draper-o"], [296, "cmdoption-pharmpy-model-peripheral_compartments-o"], [296, "cmdoption-pharmpy-model-power_on_ruv-o"], [296, "cmdoption-pharmpy-model-remove_iiv-o"], [296, "cmdoption-pharmpy-model-remove_iov-o"], [296, "cmdoption-pharmpy-model-tdist-o"], [296, "cmdoption-pharmpy-model-transit_compartments-o"], [296, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[296, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[296, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[296, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[296, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[296, "cmdoption-pharmpy-run-allometry-path"], [296, "cmdoption-pharmpy-run-amd-path"], [296, "cmdoption-pharmpy-run-covsearch-path"], [296, "cmdoption-pharmpy-run-estmethod-path"], [296, "cmdoption-pharmpy-run-iivsearch-path"], [296, "cmdoption-pharmpy-run-iovsearch-path"], [296, "cmdoption-pharmpy-run-modelsearch-path"], [296, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[296, "cmdoption-pharmpy-run-iivsearch-rank_type"], [296, "cmdoption-pharmpy-run-iovsearch-rank_type"], [296, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[296, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[296, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[296, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[296, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[296, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[296, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[296, "cmdoption-pharmpy-model-sample-samples"], [296, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[296, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[296, "cmdoption-pharmpy-data-resample-seed"], [296, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[296, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[296, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[296, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[296, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[296, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[296, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[296, "cmdoption-pharmpy-version"]], "-f": [[296, "cmdoption-pharmpy-data-append-f"], [296, "cmdoption-pharmpy-data-deidentify-f"], [296, "cmdoption-pharmpy-data-filter-f"], [296, "cmdoption-pharmpy-data-reference-f"], [296, "cmdoption-pharmpy-data-write-f"], [296, "cmdoption-pharmpy-model-absorption_rate-f"], [296, "cmdoption-pharmpy-model-add_cov_effect-f"], [296, "cmdoption-pharmpy-model-add_iiv-f"], [296, "cmdoption-pharmpy-model-add_iov-f"], [296, "cmdoption-pharmpy-model-boxcox-f"], [296, "cmdoption-pharmpy-model-create_joint_distribution-f"], [296, "cmdoption-pharmpy-model-elimination_rate-f"], [296, "cmdoption-pharmpy-model-error-f"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [296, "cmdoption-pharmpy-model-john_draper-f"], [296, "cmdoption-pharmpy-model-peripheral_compartments-f"], [296, "cmdoption-pharmpy-model-power_on_ruv-f"], [296, "cmdoption-pharmpy-model-remove_iiv-f"], [296, "cmdoption-pharmpy-model-remove_iov-f"], [296, "cmdoption-pharmpy-model-tdist-f"], [296, "cmdoption-pharmpy-model-transit_compartments-f"], [296, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[296, "cmdoption-pharmpy-data-append-h"], [296, "cmdoption-pharmpy-data-deidentify-h"], [296, "cmdoption-pharmpy-data-filter-h"], [296, "cmdoption-pharmpy-data-h"], [296, "cmdoption-pharmpy-data-print-h"], [296, "cmdoption-pharmpy-data-reference-h"], [296, "cmdoption-pharmpy-data-resample-h"], [296, "cmdoption-pharmpy-data-write-h"], [296, "cmdoption-pharmpy-h"], [296, "cmdoption-pharmpy-info-h"], [296, "cmdoption-pharmpy-model-absorption_rate-h"], [296, "cmdoption-pharmpy-model-add_cov_effect-h"], [296, "cmdoption-pharmpy-model-add_iiv-h"], [296, "cmdoption-pharmpy-model-add_iov-h"], [296, "cmdoption-pharmpy-model-boxcox-h"], [296, "cmdoption-pharmpy-model-create_joint_distribution-h"], [296, "cmdoption-pharmpy-model-elimination_rate-h"], [296, "cmdoption-pharmpy-model-error-h"], [296, "cmdoption-pharmpy-model-h"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [296, "cmdoption-pharmpy-model-john_draper-h"], [296, "cmdoption-pharmpy-model-peripheral_compartments-h"], [296, "cmdoption-pharmpy-model-power_on_ruv-h"], [296, "cmdoption-pharmpy-model-print-h"], [296, "cmdoption-pharmpy-model-remove_iiv-h"], [296, "cmdoption-pharmpy-model-remove_iov-h"], [296, "cmdoption-pharmpy-model-sample-h"], [296, "cmdoption-pharmpy-model-tdist-h"], [296, "cmdoption-pharmpy-model-transit_compartments-h"], [296, "cmdoption-pharmpy-model-update_inits-h"], [296, "cmdoption-pharmpy-results-bootstrap-h"], [296, "cmdoption-pharmpy-results-cdd-h"], [296, "cmdoption-pharmpy-results-frem-h"], [296, "cmdoption-pharmpy-results-h"], [296, "cmdoption-pharmpy-results-linearize-h"], [296, "cmdoption-pharmpy-results-ofv-h"], [296, "cmdoption-pharmpy-results-print-h"], [296, "cmdoption-pharmpy-results-qa-h"], [296, "cmdoption-pharmpy-results-report-h"], [296, "cmdoption-pharmpy-results-ruvsearch-h"], [296, "cmdoption-pharmpy-results-scm-h"], [296, "cmdoption-pharmpy-results-simeval-h"], [296, "cmdoption-pharmpy-results-summary-h"], [296, "cmdoption-pharmpy-run-allometry-h"], [296, "cmdoption-pharmpy-run-amd-h"], [296, "cmdoption-pharmpy-run-bootstrap-h"], [296, "cmdoption-pharmpy-run-covsearch-h"], [296, "cmdoption-pharmpy-run-estmethod-h"], [296, "cmdoption-pharmpy-run-execute-h"], [296, "cmdoption-pharmpy-run-h"], [296, "cmdoption-pharmpy-run-iivsearch-h"], [296, "cmdoption-pharmpy-run-iovsearch-h"], [296, "cmdoption-pharmpy-run-modelsearch-h"], [296, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[296, "cmdoption-pharmpy-data-append-o"], [296, "cmdoption-pharmpy-data-deidentify-o"], [296, "cmdoption-pharmpy-data-filter-o"], [296, "cmdoption-pharmpy-data-reference-o"], [296, "cmdoption-pharmpy-data-write-o"], [296, "cmdoption-pharmpy-model-absorption_rate-o"], [296, "cmdoption-pharmpy-model-add_cov_effect-o"], [296, "cmdoption-pharmpy-model-add_iiv-o"], [296, "cmdoption-pharmpy-model-add_iov-o"], [296, "cmdoption-pharmpy-model-boxcox-o"], [296, "cmdoption-pharmpy-model-create_joint_distribution-o"], [296, "cmdoption-pharmpy-model-elimination_rate-o"], [296, "cmdoption-pharmpy-model-error-o"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [296, "cmdoption-pharmpy-model-john_draper-o"], [296, "cmdoption-pharmpy-model-peripheral_compartments-o"], [296, "cmdoption-pharmpy-model-power_on_ruv-o"], [296, "cmdoption-pharmpy-model-remove_iiv-o"], [296, "cmdoption-pharmpy-model-remove_iov-o"], [296, "cmdoption-pharmpy-model-tdist-o"], [296, "cmdoption-pharmpy-model-transit_compartments-o"], [296, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[296, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [296, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [296, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[296, "cmdoption-pharmpy-data-reference-arg-colname"]], "covariate": [[296, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[296, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[296, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[296, "cmdoption-pharmpy-data-append-arg-expression"], [296, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[296, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[296, "cmdoption-pharmpy-data-append-arg-file"], [296, "cmdoption-pharmpy-data-deidentify-arg-file"], [296, "cmdoption-pharmpy-data-filter-arg-file"], [296, "cmdoption-pharmpy-data-print-arg-file"], [296, "cmdoption-pharmpy-data-reference-arg-file"], [296, "cmdoption-pharmpy-data-resample-arg-file"], [296, "cmdoption-pharmpy-data-write-arg-file"], [296, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [296, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [296, "cmdoption-pharmpy-model-add_iiv-arg-file"], [296, "cmdoption-pharmpy-model-add_iov-arg-file"], [296, "cmdoption-pharmpy-model-boxcox-arg-file"], [296, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [296, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [296, "cmdoption-pharmpy-model-error-arg-file"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [296, "cmdoption-pharmpy-model-john_draper-arg-file"], [296, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [296, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [296, "cmdoption-pharmpy-model-print-arg-file"], [296, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [296, "cmdoption-pharmpy-model-remove_iov-arg-file"], [296, "cmdoption-pharmpy-model-sample-arg-file"], [296, "cmdoption-pharmpy-model-tdist-arg-file"], [296, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [296, "cmdoption-pharmpy-model-update_inits-arg-file"], [296, "cmdoption-pharmpy-results-ofv-arg-file"], [296, "cmdoption-pharmpy-results-print-arg-file"], [296, "cmdoption-pharmpy-results-summary-arg-file"], [296, "cmdoption-pharmpy-run-allometry-arg-file"], [296, "cmdoption-pharmpy-run-bootstrap-arg-file"], [296, "cmdoption-pharmpy-run-covsearch-arg-file"], [296, "cmdoption-pharmpy-run-estmethod-arg-file"], [296, "cmdoption-pharmpy-run-execute-arg-file"], [296, "cmdoption-pharmpy-run-iivsearch-arg-file"], [296, "cmdoption-pharmpy-run-iovsearch-arg-file"], [296, "cmdoption-pharmpy-run-modelsearch-arg-file"], [296, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[296, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[296, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[296, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [296, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[296, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[296, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [296, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[296, "cmdoption-pharmpy-h"], [296, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[296, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[296, "cmdoption-pharmpy-data-append-arg-expression"], [296, "cmdoption-pharmpy-data-append-arg-file"], [296, "cmdoption-pharmpy-data-append-f"], [296, "cmdoption-pharmpy-data-append-h"], [296, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[296, "cmdoption-pharmpy-data-deidentify-arg-file"], [296, "cmdoption-pharmpy-data-deidentify-datecols"], [296, "cmdoption-pharmpy-data-deidentify-f"], [296, "cmdoption-pharmpy-data-deidentify-h"], [296, "cmdoption-pharmpy-data-deidentify-idcol"], [296, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[296, "cmdoption-pharmpy-data-filter-arg-expressions"], [296, "cmdoption-pharmpy-data-filter-arg-file"], [296, "cmdoption-pharmpy-data-filter-f"], [296, "cmdoption-pharmpy-data-filter-h"], [296, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[296, "cmdoption-pharmpy-data-print-arg-file"], [296, "cmdoption-pharmpy-data-print-columns"], [296, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[296, "cmdoption-pharmpy-data-reference-arg-colname"], [296, "cmdoption-pharmpy-data-reference-arg-file"], [296, "cmdoption-pharmpy-data-reference-f"], [296, "cmdoption-pharmpy-data-reference-h"], [296, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[296, "cmdoption-pharmpy-data-resample-arg-file"], [296, "cmdoption-pharmpy-data-resample-group"], [296, "cmdoption-pharmpy-data-resample-h"], [296, "cmdoption-pharmpy-data-resample-replace"], [296, "cmdoption-pharmpy-data-resample-resamples"], [296, "cmdoption-pharmpy-data-resample-sample_size"], [296, "cmdoption-pharmpy-data-resample-seed"], [296, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[296, "cmdoption-pharmpy-data-write-arg-file"], [296, "cmdoption-pharmpy-data-write-f"], [296, "cmdoption-pharmpy-data-write-h"], [296, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[296, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[296, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[296, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [296, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [296, "cmdoption-pharmpy-model-absorption_rate-f"], [296, "cmdoption-pharmpy-model-absorption_rate-h"], [296, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[296, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [296, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [296, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [296, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [296, "cmdoption-pharmpy-model-add_cov_effect-f"], [296, "cmdoption-pharmpy-model-add_cov_effect-h"], [296, "cmdoption-pharmpy-model-add_cov_effect-o"], [296, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[296, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [296, "cmdoption-pharmpy-model-add_iiv-arg-file"], [296, "cmdoption-pharmpy-model-add_iiv-arg-param"], [296, "cmdoption-pharmpy-model-add_iiv-eta_name"], [296, "cmdoption-pharmpy-model-add_iiv-f"], [296, "cmdoption-pharmpy-model-add_iiv-h"], [296, "cmdoption-pharmpy-model-add_iiv-o"], [296, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[296, "cmdoption-pharmpy-model-add_iov-arg-file"], [296, "cmdoption-pharmpy-model-add_iov-arg-occ"], [296, "cmdoption-pharmpy-model-add_iov-eta_names"], [296, "cmdoption-pharmpy-model-add_iov-etas"], [296, "cmdoption-pharmpy-model-add_iov-f"], [296, "cmdoption-pharmpy-model-add_iov-h"], [296, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[296, "cmdoption-pharmpy-model-boxcox-arg-file"], [296, "cmdoption-pharmpy-model-boxcox-etas"], [296, "cmdoption-pharmpy-model-boxcox-f"], [296, "cmdoption-pharmpy-model-boxcox-h"], [296, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[296, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [296, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [296, "cmdoption-pharmpy-model-create_joint_distribution-f"], [296, "cmdoption-pharmpy-model-create_joint_distribution-h"], [296, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[296, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [296, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [296, "cmdoption-pharmpy-model-elimination_rate-f"], [296, "cmdoption-pharmpy-model-elimination_rate-h"], [296, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[296, "cmdoption-pharmpy-model-error-arg-error_type"], [296, "cmdoption-pharmpy-model-error-arg-file"], [296, "cmdoption-pharmpy-model-error-f"], [296, "cmdoption-pharmpy-model-error-h"], [296, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[296, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [296, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[296, "cmdoption-pharmpy-model-john_draper-arg-file"], [296, "cmdoption-pharmpy-model-john_draper-etas"], [296, "cmdoption-pharmpy-model-john_draper-f"], [296, "cmdoption-pharmpy-model-john_draper-h"], [296, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[296, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [296, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [296, "cmdoption-pharmpy-model-peripheral_compartments-f"], [296, "cmdoption-pharmpy-model-peripheral_compartments-h"], [296, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[296, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [296, "cmdoption-pharmpy-model-power_on_ruv-eps"], [296, "cmdoption-pharmpy-model-power_on_ruv-f"], [296, "cmdoption-pharmpy-model-power_on_ruv-h"], [296, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[296, "cmdoption-pharmpy-model-print-arg-file"], [296, "cmdoption-pharmpy-model-print-explicit-odes"], [296, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[296, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [296, "cmdoption-pharmpy-model-remove_iiv-f"], [296, "cmdoption-pharmpy-model-remove_iiv-h"], [296, "cmdoption-pharmpy-model-remove_iiv-o"], [296, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[296, "cmdoption-pharmpy-model-remove_iov-arg-file"], [296, "cmdoption-pharmpy-model-remove_iov-f"], [296, "cmdoption-pharmpy-model-remove_iov-h"], [296, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[296, "cmdoption-pharmpy-model-sample-arg-file"], [296, "cmdoption-pharmpy-model-sample-h"], [296, "cmdoption-pharmpy-model-sample-samples"], [296, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[296, "cmdoption-pharmpy-model-tdist-arg-file"], [296, "cmdoption-pharmpy-model-tdist-etas"], [296, "cmdoption-pharmpy-model-tdist-f"], [296, "cmdoption-pharmpy-model-tdist-h"], [296, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[296, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [296, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [296, "cmdoption-pharmpy-model-transit_compartments-f"], [296, "cmdoption-pharmpy-model-transit_compartments-h"], [296, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[296, "cmdoption-pharmpy-model-update_inits-arg-file"], [296, "cmdoption-pharmpy-model-update_inits-f"], [296, "cmdoption-pharmpy-model-update_inits-h"], [296, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[296, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[296, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [296, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[296, "cmdoption-pharmpy-results-cdd-arg-psn"], [296, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[296, "cmdoption-pharmpy-results-frem-arg-psn"], [296, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [296, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [296, "cmdoption-pharmpy-results-frem-h"], [296, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[296, "cmdoption-pharmpy-results-linearize-arg-psn"], [296, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[296, "cmdoption-pharmpy-results-ofv-arg-file"], [296, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[296, "cmdoption-pharmpy-results-print-arg-file"], [296, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[296, "cmdoption-pharmpy-results-qa-arg-psn"], [296, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[296, "cmdoption-pharmpy-results-report-arg-psn"], [296, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[296, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [296, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[296, "cmdoption-pharmpy-results-scm-arg-psn"], [296, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[296, "cmdoption-pharmpy-results-simeval-arg-psn"], [296, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[296, "cmdoption-pharmpy-results-summary-arg-file"], [296, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[296, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[296, "cmdoption-pharmpy-run-allometry-allometric_variable"], [296, "cmdoption-pharmpy-run-allometry-arg-file"], [296, "cmdoption-pharmpy-run-allometry-h"], [296, "cmdoption-pharmpy-run-allometry-initials"], [296, "cmdoption-pharmpy-run-allometry-lower_bounds"], [296, "cmdoption-pharmpy-run-allometry-non_fixed"], [296, "cmdoption-pharmpy-run-allometry-parameters"], [296, "cmdoption-pharmpy-run-allometry-path"], [296, "cmdoption-pharmpy-run-allometry-reference_value"], [296, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[296, "cmdoption-pharmpy-run-amd-administration"], [296, "cmdoption-pharmpy-run-amd-allometric_variable"], [296, "cmdoption-pharmpy-run-amd-arg-input_path"], [296, "cmdoption-pharmpy-run-amd-cl_init"], [296, "cmdoption-pharmpy-run-amd-h"], [296, "cmdoption-pharmpy-run-amd-lloq_limit"], [296, "cmdoption-pharmpy-run-amd-lloq_method"], [296, "cmdoption-pharmpy-run-amd-mat_init"], [296, "cmdoption-pharmpy-run-amd-modeltype"], [296, "cmdoption-pharmpy-run-amd-occasion"], [296, "cmdoption-pharmpy-run-amd-order"], [296, "cmdoption-pharmpy-run-amd-path"], [296, "cmdoption-pharmpy-run-amd-resume"], [296, "cmdoption-pharmpy-run-amd-search_space"], [296, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[296, "cmdoption-pharmpy-run-bootstrap-arg-file"], [296, "cmdoption-pharmpy-run-bootstrap-h"], [296, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[296, "cmdoption-pharmpy-run-covsearch-algorithm"], [296, "cmdoption-pharmpy-run-covsearch-arg-file"], [296, "cmdoption-pharmpy-run-covsearch-effects"], [296, "cmdoption-pharmpy-run-covsearch-h"], [296, "cmdoption-pharmpy-run-covsearch-max_steps"], [296, "cmdoption-pharmpy-run-covsearch-p_backward"], [296, "cmdoption-pharmpy-run-covsearch-p_forward"], [296, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[296, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [296, "cmdoption-pharmpy-run-estmethod-arg-file"], [296, "cmdoption-pharmpy-run-estmethod-h"], [296, "cmdoption-pharmpy-run-estmethod-methods"], [296, "cmdoption-pharmpy-run-estmethod-path"], [296, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[296, "cmdoption-pharmpy-run-execute-arg-file"], [296, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[296, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [296, "cmdoption-pharmpy-run-iivsearch-arg-file"], [296, "cmdoption-pharmpy-run-iivsearch-cutoff"], [296, "cmdoption-pharmpy-run-iivsearch-h"], [296, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [296, "cmdoption-pharmpy-run-iivsearch-path"], [296, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[296, "cmdoption-pharmpy-run-iovsearch-arg-file"], [296, "cmdoption-pharmpy-run-iovsearch-column"], [296, "cmdoption-pharmpy-run-iovsearch-cutoff"], [296, "cmdoption-pharmpy-run-iovsearch-distribution"], [296, "cmdoption-pharmpy-run-iovsearch-h"], [296, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [296, "cmdoption-pharmpy-run-iovsearch-path"], [296, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[296, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [296, "cmdoption-pharmpy-run-modelsearch-arg-file"], [296, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [296, "cmdoption-pharmpy-run-modelsearch-cutoff"], [296, "cmdoption-pharmpy-run-modelsearch-h"], [296, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [296, "cmdoption-pharmpy-run-modelsearch-path"], [296, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[296, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [296, "cmdoption-pharmpy-run-ruvsearch-groups"], [296, "cmdoption-pharmpy-run-ruvsearch-h"], [296, "cmdoption-pharmpy-run-ruvsearch-p_value"], [296, "cmdoption-pharmpy-run-ruvsearch-path"], [296, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[296, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [296, "cmdoption-pharmpy-results-cdd-arg-psn"], [296, "cmdoption-pharmpy-results-frem-arg-psn"], [296, "cmdoption-pharmpy-results-linearize-arg-psn"], [296, "cmdoption-pharmpy-results-qa-arg-psn"], [296, "cmdoption-pharmpy-results-report-arg-psn"], [296, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [296, "cmdoption-pharmpy-results-scm-arg-psn"], [296, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[296, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [296, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})