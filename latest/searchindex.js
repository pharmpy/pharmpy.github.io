Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_covariance_step", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_proportional_error_model", "has_random_effect", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 18, 24, 25, 26, 29, 31, 57, 58, 72, 77, 81, 82, 83, 84, 86, 87, 88, 89, 95, 98, 105, 108, 114, 115, 116, 117, 122, 126, 132, 135, 136, 142, 161, 174, 176, 195, 206, 212, 218, 243, 249, 253, 257, 258, 259, 273, 274, 276, 277, 278, 279, 281, 283, 284, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 304, 305, 306, 308, 309, 310], "section": [0, 278, 281, 292, 294, 304, 308], "i": [0, 1, 2, 6, 8, 18, 24, 25, 26, 27, 29, 31, 34, 37, 39, 40, 42, 43, 45, 46, 50, 52, 59, 60, 69, 71, 72, 73, 76, 77, 79, 81, 83, 84, 86, 87, 88, 95, 96, 98, 101, 104, 105, 109, 113, 114, 115, 116, 128, 129, 130, 133, 134, 138, 143, 144, 148, 149, 163, 164, 166, 170, 171, 172, 174, 175, 179, 180, 181, 182, 183, 185, 186, 189, 190, 194, 195, 196, 197, 199, 202, 203, 204, 207, 209, 210, 211, 218, 220, 221, 226, 228, 230, 236, 237, 241, 242, 243, 244, 245, 251, 253, 257, 258, 259, 263, 272, 273, 274, 276, 277, 278, 279, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 308, 310], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 228, 253, 254, 255, 256, 257, 258, 259, 261, 274, 289, 292, 296, 300, 301, 305, 308], "The": [0, 2, 3, 6, 8, 9, 10, 18, 24, 25, 26, 29, 34, 37, 42, 44, 45, 60, 68, 76, 79, 83, 84, 85, 86, 87, 88, 107, 121, 126, 129, 130, 138, 139, 140, 155, 170, 174, 176, 186, 195, 204, 222, 233, 239, 240, 245, 249, 274, 277, 279, 281, 283, 288, 291, 292, 295, 296, 298, 300, 301, 308, 309, 310], "inform": [0, 1, 2, 6, 8, 126, 274, 276, 281, 283, 284, 286, 289, 290, 291, 292, 294, 297, 301, 305, 306, 308, 309], "intend": [0, 292, 294, 308], "non": [0, 25, 71, 76, 85, 207, 274, 283, 284, 287, 292, 294, 296, 301, 308], "hard": [0, 301], "find": [0, 8, 29, 50, 90, 91, 126, 235, 251, 274, 290, 292, 309, 310], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 279, 281, 283, 286, 288, 289, 291, 292, 294, 295, 296, 297, 305], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 273, 274, 280, 281, 282, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 309], "develop": [0, 237, 274, 292, 300, 301, 308, 310], "remov": [0, 2, 9, 26, 29, 81, 114, 115, 116, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 186, 188, 200, 213, 215, 237, 273, 274, 276, 281, 284, 289, 291, 292, 298], "row": [0, 1, 2, 25, 83, 84, 96, 99, 101, 171, 172, 250, 272, 274, 276, 281, 283, 287, 289, 291, 295, 296, 297, 305, 306], "split": [0, 76, 207, 267, 274, 276, 294, 308], "drop": [0, 2, 6, 18, 81, 82, 214, 274, 297, 301, 306], "column": [0, 1, 2, 6, 8, 10, 18, 25, 31, 33, 42, 48, 60, 79, 81, 82, 83, 84, 85, 89, 95, 98, 99, 101, 105, 149, 150, 154, 170, 171, 177, 180, 197, 208, 212, 214, 226, 227, 228, 237, 242, 249, 250, 272, 274, 276, 281, 283, 287, 289, 291, 294, 295, 296, 297, 305, 306, 308], "error": [0, 2, 11, 19, 20, 24, 26, 29, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 124, 129, 130, 138, 140, 153, 161, 174, 176, 194, 195, 197, 201, 208, 219, 230, 248, 251, 256, 272, 274, 281, 286, 289, 291, 297, 298, 305, 306, 308], "handl": [0, 3, 89, 206, 274, 283, 284, 287, 301], "valid": [0, 26, 38, 104, 178, 274, 292], "some": [0, 8, 10, 63, 76, 161, 174, 208, 255, 272, 274, 276, 279, 281, 283, 292, 293, 296, 297, 300, 301, 305, 308], "rule": [0, 69, 292], "These": [0, 279, 284, 287, 292, 293, 296, 300, 301, 308], "were": [0, 26, 29, 248, 272, 273, 274, 283, 286, 287, 292, 295, 297, 308, 310], "test": [0, 2, 131, 144, 239, 240, 242, 244, 245, 274, 276, 280, 281, 283, 286, 288, 289, 291, 295, 297, 301, 305], "7": [0, 1, 2, 37, 53, 55, 56, 61, 65, 66, 84, 96, 101, 116, 118, 228, 272, 273, 281, 283, 287, 289, 291, 292, 293, 295, 296, 297, 302, 304, 305, 306, 307], "4": [0, 1, 2, 6, 53, 55, 56, 61, 65, 66, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 116, 211, 228, 245, 251, 272, 273, 281, 282, 283, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 302, 304, 305, 306, 307], "3": [0, 1, 2, 6, 29, 53, 54, 55, 56, 61, 64, 65, 66, 67, 70, 83, 84, 85, 86, 87, 88, 96, 99, 101, 102, 103, 106, 116, 118, 153, 167, 171, 172, 173, 199, 208, 209, 210, 211, 226, 227, 228, 245, 250, 272, 273, 281, 282, 283, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 302, 304, 305, 306, 307, 308, 310], "delimet": 0, "between": [0, 8, 9, 26, 76, 208, 249, 263, 272, 273, 274, 276, 286, 287, 291, 292, 298, 301, 304, 305], "comma": [0, 276, 308], "space": [0, 68, 237, 244, 274, 276, 308], "tab": [0, 153, 274, 296, 299], "befor": [0, 2, 29, 172, 173, 217, 274, 276, 293, 297], "after": [0, 6, 29, 114, 115, 116, 197, 235, 248, 251, 255, 273, 274, 276, 282, 283, 287, 292, 293, 294, 297, 301, 302, 304, 306, 307, 310], "ar": [0, 2, 3, 4, 6, 8, 25, 26, 29, 38, 39, 40, 42, 46, 60, 74, 76, 79, 98, 99, 113, 129, 130, 138, 146, 163, 164, 168, 176, 178, 181, 182, 194, 198, 207, 208, 212, 218, 225, 230, 239, 241, 243, 244, 253, 255, 272, 274, 276, 277, 279, 281, 283, 284, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 306, 308, 310], "give": [0, 25, 113, 148, 173, 253, 257, 258, 272, 274, 276, 287, 291, 292, 294, 306], "sic": 0, "begin": [0, 287, 294, 296], "end": [0, 39, 50, 287, 292, 294, 296, 308], "insert": [0, 274], "each": [0, 2, 6, 8, 26, 34, 37, 59, 60, 61, 83, 84, 85, 86, 87, 88, 96, 101, 102, 116, 147, 150, 151, 170, 173, 185, 255, 272, 273, 276, 278, 281, 283, 284, 286, 287, 289, 291, 292, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 310], "can": [0, 1, 2, 6, 10, 18, 25, 26, 29, 35, 52, 60, 68, 77, 85, 126, 170, 206, 235, 240, 243, 255, 258, 259, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 305, 308, 309, 310], "onli": [0, 2, 3, 8, 10, 14, 26, 37, 57, 58, 69, 72, 81, 83, 84, 86, 87, 88, 104, 108, 117, 122, 129, 130, 138, 147, 170, 174, 176, 185, 195, 197, 206, 217, 243, 245, 246, 251, 263, 274, 276, 277, 281, 291, 292, 294, 297, 300, 308], "numer": [0, 6, 14, 30, 83, 84, 86, 87, 272, 274, 283, 301], "e": [0, 6, 18, 26, 38, 72, 78, 114, 115, 116, 148, 164, 178, 179, 244, 272, 274, 279, 283, 286, 287, 289, 291, 292, 294, 296, 297, 298, 301, 305, 308], "other": [0, 7, 9, 18, 26, 29, 44, 73, 151, 243, 267, 272, 274, 277, 279, 284, 289, 292, 301], "charact": [0, 10, 283], "than": [0, 24, 25, 274, 289, 292, 297], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 26, 37, 230, 237, 253, 254, 257, 258, 266, 274, 276, 281, 292, 294, 297, 301, 308], "except": [0, 11, 12, 19, 20, 21, 40, 60, 170, 274, 292], "ii": [0, 6], "datx": [0, 274], "fortran": 0, "short": [0, 279, 292], "form": [0, 23, 26, 170, 274, 292], "exponenti": [0, 37, 40, 46, 185, 276, 281, 287], "notat": 0, "2": [0, 1, 2, 6, 18, 27, 29, 33, 34, 37, 39, 43, 45, 47, 49, 51, 53, 54, 55, 56, 61, 64, 65, 66, 67, 71, 83, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 106, 116, 118, 153, 167, 171, 172, 173, 174, 176, 183, 187, 189, 190, 193, 195, 196, 199, 202, 210, 211, 228, 236, 245, 249, 272, 273, 276, 279, 281, 282, 283, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 302, 304, 305, 306, 307, 308], "1": [0, 1, 2, 5, 6, 7, 8, 16, 17, 18, 22, 25, 26, 29, 33, 34, 35, 37, 39, 44, 45, 47, 53, 54, 55, 56, 61, 62, 64, 65, 66, 67, 72, 74, 79, 83, 84, 85, 86, 87, 88, 95, 96, 99, 101, 102, 103, 104, 106, 116, 118, 125, 128, 146, 147, 148, 149, 153, 157, 167, 170, 171, 172, 173, 175, 182, 183, 184, 185, 189, 190, 193, 194, 196, 197, 199, 202, 203, 206, 208, 209, 210, 211, 218, 228, 236, 237, 238, 239, 244, 245, 249, 272, 273, 276, 278, 279, 281, 282, 283, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 308, 310], "mean": [0, 2, 13, 17, 18, 22, 60, 63, 74, 148, 171, 172, 237, 253, 257, 272, 273, 274, 276, 287, 289, 292, 294, 295, 296, 297, 301, 304, 307, 308], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 24, 25, 26, 29, 31, 60, 62, 63, 68, 79, 80, 85, 90, 91, 107, 113, 119, 120, 121, 123, 124, 125, 126, 149, 150, 155, 170, 171, 172, 174, 176, 187, 188, 195, 197, 200, 234, 243, 245, 248, 251, 253, 257, 258, 263, 272, 273, 275, 276, 279, 280, 281, 283, 284, 289, 291, 292, 293, 294, 296, 297, 300, 301, 305, 306, 308], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 80, 254, 256, 267, 292, 296], "instead": [0, 69, 85, 113, 253, 273, 274, 276, 283, 284, 286, 287, 292, 301], "lone": 0, "an": [0, 4, 6, 8, 10, 15, 16, 18, 25, 26, 29, 32, 33, 34, 38, 41, 42, 49, 68, 95, 102, 105, 129, 130, 131, 133, 134, 137, 138, 140, 144, 146, 148, 160, 170, 174, 178, 186, 210, 222, 225, 226, 227, 228, 248, 249, 251, 254, 256, 274, 276, 278, 279, 281, 283, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 301, 304, 306, 307, 308, 310], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 24, 25, 26, 27, 29, 34, 36, 37, 38, 39, 40, 45, 46, 47, 49, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96, 99, 101, 102, 103, 109, 118, 119, 124, 125, 127, 128, 146, 147, 148, 153, 157, 159, 162, 167, 171, 172, 173, 176, 178, 179, 181, 182, 185, 186, 187, 188, 194, 195, 197, 200, 207, 208, 209, 210, 213, 216, 218, 225, 227, 228, 236, 237, 239, 245, 250, 251, 272, 273, 276, 279, 281, 283, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 302, 304, 305, 306, 307, 308, 310], "dot": 0, "most": [0, 6, 37, 206, 276, 284, 292, 304], "24": [0, 2, 61, 96, 101, 103, 116, 118, 228, 272, 273, 281, 283, 286, 289, 291, 293, 295, 296, 297, 304, 305, 307], "long": [0, 274, 292, 301], "count": [0, 102, 250, 257, 274, 297], "delimit": 0, "wa": [0, 27, 249, 272, 274, 280, 292, 293, 305, 306], "eaten": 0, "empti": [0, 18, 26, 248, 278], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 26, 27, 29, 35, 43, 50, 69, 76, 81, 92, 93, 94, 109, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 213, 215, 216, 217, 218, 274, 276, 277, 278, 283, 286, 288, 289, 290, 291, 294, 295, 296, 297, 298, 308, 310], "As": [0, 26, 277, 296, 298, 308], "contain": [0, 2, 3, 26, 79, 85, 226, 227, 228, 272, 273, 276, 281, 282, 283, 284, 286, 289, 291, 292, 294, 295, 297, 302, 304, 305, 306, 307, 308], "drope": 0, "input": [0, 7, 8, 9, 10, 26, 29, 37, 38, 40, 42, 66, 67, 77, 82, 127, 131, 139, 153, 157, 172, 185, 204, 237, 249, 260, 274, 276, 281, 283, 286, 289, 291, 296, 297, 298, 301, 305], "ani": [0, 2, 6, 9, 18, 49, 60, 71, 168, 235, 240, 250, 260, 263, 279, 283, 288, 289, 291, 292, 294, 295, 296, 298, 301, 308, 310], "limit": [0, 2, 6, 70, 166, 194, 208, 237, 274, 276, 291, 292, 299], "length": [0, 85, 86, 87, 88, 102, 103, 118, 274, 296], "If": [0, 2, 10, 18, 29, 37, 50, 60, 75, 76, 77, 85, 95, 98, 102, 104, 105, 163, 164, 170, 172, 185, 186, 194, 204, 207, 209, 210, 211, 212, 218, 230, 237, 241, 244, 251, 272, 276, 281, 283, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 301, 308, 310], "ha": [0, 2, 8, 18, 26, 76, 85, 96, 101, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 272, 274, 276, 277, 279, 281, 283, 284, 286, 289, 291, 292, 294, 296, 297, 303, 305, 306, 308, 310], "more": [0, 2, 8, 25, 236, 239, 241, 242, 244, 245, 246, 274, 276, 281, 286, 288, 290, 292, 294, 296, 297, 301, 304, 308, 309], "extra": [0, 18, 274], "consid": [0, 2, 241, 242, 244, 274, 281, 284, 286, 289, 291, 292, 297, 305], "start": [0, 2, 8, 39, 49, 102, 149, 162, 170, 241, 246, 274, 276, 279, 281, 286, 287, 291, 292, 294, 295, 296, 297, 305, 306, 308, 310], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 263, 272, 274, 276, 277, 279, 281, 284, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 301, 305, 307, 308, 309, 310], "been": [0, 2, 6, 143, 277, 281, 283, 292, 296, 308, 310], "provid": [0, 26, 172, 194, 276, 277, 280, 281, 283, 289, 291, 292, 297, 310], "default": [0, 1, 2, 6, 7, 18, 24, 26, 31, 34, 37, 39, 40, 46, 50, 52, 59, 76, 77, 81, 104, 107, 109, 113, 121, 128, 129, 130, 138, 139, 163, 164, 166, 170, 171, 172, 174, 176, 181, 182, 185, 186, 194, 195, 197, 207, 209, 210, 211, 220, 221, 224, 230, 236, 241, 242, 244, 251, 253, 257, 258, 266, 271, 274, 276, 278, 281, 289, 291, 294, 296, 297, 298, 299, 305, 310], "where": [0, 2, 34, 45, 235, 272, 273, 274, 277, 278, 281, 283, 286, 287, 291, 292, 296, 297, 298, 301, 308, 310], "rexex": 0, "": [0, 10, 14, 38, 68, 120, 157, 178, 274, 276, 281, 283, 287, 292, 298, 302], "za": 0, "z": [0, 34], "either": [0, 2, 40, 79, 104, 237, 246, 276, 289, 292, 294, 296, 308, 310], "surround": 0, "two": [0, 8, 9, 26, 29, 79, 151, 272, 274, 275, 276, 292, 301, 305, 308], "By": [0, 18, 26, 129, 130, 138, 291, 292, 294], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 26, 29, 50, 68, 149, 160, 171, 208, 222, 241, 242, 243, 244, 257, 272, 273, 274, 276, 278, 281, 286, 289, 291, 292, 294, 295, 296, 297, 298, 299, 301, 305, 306, 308, 310], "interpret": [0, 274, 292, 310], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 25, 26, 27, 29, 34, 36, 42, 52, 60, 68, 76, 77, 79, 83, 84, 85, 86, 87, 88, 113, 128, 148, 149, 168, 170, 171, 172, 173, 174, 176, 183, 185, 192, 194, 195, 201, 208, 212, 217, 219, 220, 224, 226, 227, 228, 230, 236, 237, 239, 240, 241, 242, 243, 244, 245, 253, 254, 255, 257, 258, 259, 261, 266, 272, 273, 274, 276, 278, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 304, 305, 306, 308, 309], "chang": [0, 2, 9, 18, 25, 26, 39, 79, 175, 181, 183, 187, 188, 196, 200, 202, 216, 276, 279, 292, 294, 296, 297, 298, 305, 310], "howev": [0, 289, 292, 298, 308, 310], "one": [0, 2, 6, 8, 9, 10, 14, 22, 24, 25, 26, 37, 72, 81, 85, 93, 129, 130, 138, 154, 170, 172, 180, 185, 201, 212, 214, 215, 219, 224, 243, 245, 248, 250, 253, 257, 258, 261, 274, 276, 277, 279, 283, 284, 286, 287, 291, 292, 294, 296, 297, 298, 301, 308], "legal": [0, 292], "ones": [0, 281, 287], "9": [0, 2, 6, 45, 61, 70, 84, 87, 96, 99, 101, 116, 118, 218, 228, 272, 273, 281, 283, 288, 289, 291, 292, 293, 295, 296, 297, 304, 305, 306, 307, 310], "sinc": [0, 6, 186, 274, 283, 284, 287, 289, 296, 297, 298, 301, 310], "number": [0, 2, 6, 8, 14, 22, 24, 42, 50, 60, 63, 71, 77, 78, 79, 114, 115, 116, 118, 149, 170, 171, 172, 173, 174, 185, 193, 199, 238, 239, 243, 245, 249, 250, 272, 274, 276, 281, 283, 292, 296, 304, 305, 306, 308, 310], "valu": [0, 1, 6, 10, 18, 24, 25, 26, 34, 40, 46, 47, 60, 62, 63, 70, 71, 83, 84, 85, 86, 87, 88, 92, 94, 96, 99, 101, 119, 124, 125, 144, 170, 173, 197, 216, 230, 236, 239, 241, 242, 244, 245, 251, 271, 272, 274, 276, 279, 281, 283, 286, 293, 294, 296, 305, 306, 307], "met": [0, 292], "doubl": 0, "big": 0, "warn": [0, 2, 12, 248, 256, 274, 281, 286, 289, 291, 297, 310], "larger": [0, 292], "pad": 0, "filter": [0, 114, 115, 116, 274, 283], "so": [0, 24, 170, 255, 277, 279, 284, 292, 298, 304, 310], "characterscannot": 0, "neither": [0, 292], "perform": [0, 14, 72, 79, 276, 281, 292, 294, 296, 297, 298], "order": [0, 8, 9, 26, 29, 33, 127, 132, 136, 141, 142, 170, 183, 184, 190, 196, 202, 203, 204, 237, 274, 276, 283, 288, 292, 294, 295, 296, 297, 301, 308], "given": [0, 2, 26, 39, 74, 78, 83, 84, 86, 87, 88, 93, 94, 120, 121, 123, 131, 139, 144, 155, 163, 164, 171, 172, 173, 197, 205, 208, 215, 216, 223, 230, 253, 255, 257, 258, 274, 276, 279, 281, 283, 286, 287, 289, 291, 292, 297, 298, 304, 305], "critic": [0, 277], "case": [0, 2, 76, 89, 129, 130, 138, 170, 251, 274, 281, 289, 291, 292, 294, 296, 297, 303, 309], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 26, 29, 33, 95, 97, 98, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 122, 124, 125, 127, 145, 250, 274, 283, 287, 291, 292, 294, 295, 301, 310], "need": [0, 2, 18, 40, 72, 89, 126, 274, 276, 278, 279, 280, 284, 287, 288, 292, 294, 295, 300, 301, 308, 310], "becaus": [0, 8, 274, 292], "later": [0, 288, 292], "comparison": [0, 297, 301], "It": [0, 18, 253, 277, 278, 279, 283, 284, 288, 289, 290, 292, 294, 295, 296, 299, 304, 308, 310], "possibl": [0, 2, 6, 26, 132, 135, 136, 142, 206, 241, 244, 274, 278, 279, 283, 289, 292, 294, 295, 296, 297, 298, 299, 301, 304, 308, 310], "done": [0, 1, 72, 73, 79, 83, 84, 86, 87, 88, 170, 277, 294, 297, 299, 305], "eq": [0, 8, 32, 296], "ne": 0, "text": [0, 18, 37, 38, 178, 294, 296, 301], "otherwis": [0, 6, 29, 34, 35, 37, 40, 43, 72, 76, 95, 98, 105, 128, 129, 130, 138, 140, 143, 146, 147, 148, 170, 183, 194, 195, 196, 197, 199, 202, 208, 277, 283, 292, 294, 296, 301], "appropri": [0, 277, 292], "letter": [0, 128], "alphanum": 0, "underscor": 0, "real": [0, 134, 144, 283, 284], "special": [0, 6, 212, 283, 284, 292], "digit": [0, 71, 274], "enclos": 0, "ok": [0, 284], "w": [0, 29, 72, 128, 146, 153, 154, 161, 174, 185, 195, 197, 201, 208, 219, 281, 292, 294, 296], "o": [0, 273, 275, 276, 280, 305], "With": [0, 308], "eqn": 0, "ge": [0, 296], "etc": [0, 3, 274, 296, 298, 306, 308], "maximum": [0, 14, 37, 71, 239, 276, 281], "have": [0, 6, 8, 18, 26, 29, 37, 40, 79, 141, 212, 242, 250, 255, 257, 274, 276, 278, 279, 281, 283, 284, 286, 288, 289, 291, 292, 294, 295, 297, 298, 299, 301, 308, 310], "12": [0, 1, 2, 61, 96, 99, 101, 102, 103, 116, 228, 272, 273, 281, 283, 286, 287, 289, 291, 292, 293, 295, 296, 297, 302, 304, 305, 306, 307], "must": [0, 24, 42, 76, 170, 185, 253, 273, 276, 292, 294], "decreas": [0, 284], "within": [0, 170, 277, 292, 308], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 26, 29, 194, 272, 277, 279, 281, 284, 292, 298, 310], "affect": [0, 113, 274, 292, 298], "even": [0, 24, 78, 82, 96, 101, 278, 292, 298], "still": [0, 292, 298, 310], "cannot": [0, 8, 60, 76, 252, 274, 283, 292, 308], "both": [0, 1, 2, 18, 42, 179, 250, 274, 277, 281, 283, 286, 289, 291, 292, 295, 297, 305, 308], "reenter": 0, "think": 0, "risk": [0, 292], "being": [0, 6, 26, 44, 60, 173, 174, 176, 195, 273, 274, 278, 286, 287, 292, 298, 301, 306], "truncat": 0, "encod": [0, 201, 219, 274, 283, 299], "here": [0, 2, 113, 283, 284, 285, 288, 289, 295, 296, 297, 301, 308, 309], "possibli": [0, 301], "partial": [0, 276, 280, 301], "list": [0, 2, 6, 8, 10, 13, 14, 17, 25, 26, 29, 32, 34, 40, 42, 76, 79, 81, 82, 90, 91, 93, 94, 106, 107, 113, 120, 121, 123, 145, 150, 163, 164, 170, 171, 177, 185, 194, 207, 209, 210, 211, 213, 214, 215, 216, 224, 230, 235, 236, 237, 240, 241, 242, 243, 245, 248, 249, 250, 251, 262, 272, 273, 274, 276, 277, 279, 281, 283, 286, 291, 292, 294, 296, 304, 305, 306, 308], "decid": [0, 2, 139, 289, 291, 292, 297, 305], "whether": [0, 24, 34, 37, 40, 76, 131, 139, 170, 185, 226, 228, 237, 251, 254, 266, 274, 276, 289, 292, 297, 308], "put": [0, 8, 149, 170, 274, 284, 287], "up": [0, 277, 278, 281, 288, 295, 308, 310], "written": [0, 274, 292, 294, 296, 298, 308], "scientif": [0, 284], "14": [0, 2, 61, 84, 96, 101, 116, 228, 272, 273, 281, 289, 291, 292, 293, 295, 296, 304, 306, 307], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 102, 186, 272, 296], "describ": [0, 2, 26, 29, 60, 132, 135, 136, 141, 142, 272, 281, 283, 289, 291, 294], "output": [0, 8, 18, 250, 274, 276, 279, 292, 294, 296, 308], "alwai": [0, 172, 274, 283, 296, 297], "synonym": [0, 274], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 24, 25, 26, 30, 31, 32, 37, 38, 40, 41, 42, 47, 50, 60, 71, 73, 76, 78, 79, 81, 86, 87, 88, 93, 97, 102, 103, 107, 110, 113, 116, 118, 120, 121, 123, 128, 129, 130, 131, 138, 145, 146, 149, 151, 160, 163, 164, 169, 170, 174, 176, 177, 178, 180, 185, 186, 191, 194, 195, 197, 204, 207, 209, 210, 211, 214, 215, 225, 230, 235, 236, 237, 242, 247, 248, 251, 253, 254, 255, 257, 258, 260, 261, 262, 263, 271, 273, 274, 276, 278, 281, 283, 289, 291, 292, 295, 296, 297, 300, 305, 306, 308], "avail": [0, 1, 2, 6, 34, 43, 60, 126, 146, 183, 196, 199, 202, 208, 225, 230, 237, 272, 276, 281, 286, 287, 289, 291, 292, 294, 295, 296, 297, 298, 301, 305, 307, 308, 309, 310], "carri": [0, 292], "over": [0, 118, 149, 170, 197, 226, 227, 228, 272, 273, 274, 287, 291, 308], "onc": [0, 147, 281, 298], "covari": [0, 6, 10, 17, 26, 36, 37, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 76, 101, 113, 131, 145, 153, 159, 160, 171, 172, 173, 177, 208, 239, 240, 274, 276, 281, 283, 284, 291, 301, 306, 308], "final": [0, 2, 36, 159, 234, 274, 281, 286, 287, 289, 291, 292, 296, 297, 298, 305, 306], "estim": [0, 1, 2, 3, 14, 15, 18, 24, 25, 34, 36, 37, 39, 40, 42, 43, 45, 46, 47, 49, 59, 60, 61, 63, 70, 71, 74, 76, 85, 92, 93, 94, 151, 152, 153, 157, 159, 162, 167, 171, 172, 173, 174, 176, 181, 182, 183, 187, 189, 190, 194, 195, 196, 199, 201, 202, 203, 209, 210, 211, 215, 216, 217, 218, 219, 224, 225, 236, 237, 240, 251, 272, 273, 274, 276, 281, 282, 284, 286, 289, 290, 291, 293, 297, 300, 301, 304, 305, 308, 309], "oppos": 0, "ext": [0, 274, 308], "per": [0, 6, 14, 25, 72, 114, 115, 116, 118, 171, 172, 197, 250], "est": [0, 36, 39, 49, 159, 162, 294, 296], "first": [0, 2, 26, 35, 37, 43, 78, 96, 101, 104, 129, 130, 132, 136, 138, 151, 158, 174, 176, 181, 183, 184, 185, 190, 195, 196, 197, 199, 202, 274, 276, 281, 287, 289, 291, 292, 296, 298, 301, 308, 310], "call": [0, 250, 263, 274, 278, 279, 292, 298, 310], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 273, 274, 276, 281, 286, 289, 291, 297, 301, 302, 304, 305, 306, 308], "theta": [0, 1, 29, 34, 37, 119, 124, 125, 153, 154, 157, 194, 201, 219, 274, 289, 296, 297, 298, 301, 305], "sigma": [0, 1, 119, 124, 125, 153, 154, 157, 174, 176, 195, 272, 287, 289, 296, 297, 298], "omega": [0, 1, 22, 26, 61, 119, 124, 125, 153, 154, 157, 274, 276, 287, 289, 294, 296, 297, 298, 304, 305], "fix": [0, 1, 2, 24, 25, 34, 47, 52, 76, 92, 93, 94, 119, 124, 125, 179, 187, 188, 200, 207, 213, 215, 216, 236, 276, 289, 292, 294, 296, 301, 308], "offdiagon": 0, "could": [0, 18, 274, 283, 292, 296, 300, 301], "part": [0, 18, 26, 78, 272, 274, 276, 279, 280, 292, 294, 298, 301, 308], "NO": [0, 292], "probabl": 0, "same": [0, 2, 8, 10, 18, 26, 29, 42, 50, 71, 72, 92, 93, 94, 102, 141, 185, 187, 215, 216, 220, 237, 242, 253, 255, 257, 273, 274, 276, 277, 281, 283, 286, 287, 291, 292, 294, 296, 297, 308, 310], "type": [0, 2, 6, 8, 10, 18, 28, 29, 37, 52, 74, 121, 150, 155, 198, 230, 237, 241, 242, 244, 246, 271, 274, 276, 279, 281, 287, 288, 289, 291, 292, 294, 297, 301], "now": [0, 274, 279, 296, 298], "investig": 0, "follow": [0, 2, 37, 148, 207, 272, 274, 276, 277, 279, 281, 283, 284, 286, 288, 289, 291, 292, 294, 296, 297, 298, 300, 308, 310], "like": [0, 26, 283, 292, 298, 301, 308], "One": [0, 26, 149, 150, 260, 301, 310], "last": [0, 8, 29, 182, 251], "left": [0, 4, 60, 294, 296, 300], "justifi": 0, "size": [0, 6, 13, 170, 274, 277, 301], "13": [0, 1, 2, 61, 96, 99, 101, 102, 116, 228, 272, 273, 281, 286, 289, 291, 292, 293, 295, 296, 297, 302, 304, 306, 307], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 261, 271, 272, 273, 274, 275, 277, 278, 279, 281, 286, 287, 288, 290, 291, 292, 293, 300, 301, 304, 306, 307, 309, 310], "n": [0, 6, 17, 22, 26, 38, 45, 76, 79, 167, 172, 173, 178, 193, 199, 207, 210, 243, 272, 273, 274, 276, 287, 289, 294, 296], "flatten": [0, 274], "triangular": 0, "correl": [0, 53, 54, 55, 56, 64, 65, 66, 67, 70, 76, 218, 274, 304], "abov": [0, 34, 37, 40, 70, 272, 273, 281, 287, 292, 296, 310], "off": 0, "diagon": [0, 153, 274, 289, 295, 296, 297], "obj": 0, "right": [0, 4, 8, 292, 294, 296, 310], "also": [0, 2, 26, 82, 170, 274, 278, 279, 281, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 305, 308, 310], "22": [0, 2, 61, 83, 84, 86, 87, 96, 101, 116, 118, 228, 272, 273, 281, 287, 291, 293, 295, 296, 307], "integ": [0, 6, 128, 274, 276, 308], "5": [0, 1, 2, 29, 34, 37, 53, 55, 56, 60, 61, 65, 66, 72, 84, 85, 94, 96, 99, 101, 103, 116, 118, 128, 146, 147, 148, 153, 208, 211, 216, 228, 249, 250, 272, 273, 281, 283, 287, 289, 291, 292, 293, 294, 295, 296, 297, 302, 304, 306, 307], "expon": [0, 1, 34, 236, 276], "regular": [0, 10, 290], "take": [0, 2, 24, 26, 77, 274, 277, 283, 286, 289, 291, 292, 297, 301], "19": [0, 2, 61, 84, 96, 101, 116, 228, 272, 273, 289, 293, 295, 296, 304, 306, 307], "posit": [0, 26, 172, 173, 274, 276, 277, 284], "neg": [0, 308], "For": [0, 2, 8, 37, 40, 114, 115, 116, 148, 212, 236, 239, 241, 242, 244, 245, 246, 272, 273, 276, 278, 279, 281, 286, 287, 288, 292, 294, 297, 298, 301, 308, 310], "20": [0, 2, 61, 87, 96, 101, 116, 228, 272, 273, 281, 292, 293, 295, 296, 302, 304, 305, 306, 307], "In": [0, 76, 89, 277, 279, 281, 288, 289, 291, 292, 294, 295, 296, 301, 308, 310], "observ": [0, 6, 14, 18, 43, 102, 114, 115, 116, 117, 118, 183, 196, 199, 202, 203, 249, 250, 272, 274, 287, 301, 304, 307], "byte": 0, "evid": [0, 105, 274], "toward": [0, 102, 274], "token": [0, 308], "whitespac": 0, "parenthes": [0, 308], "multipl": [0, 4, 8, 26, 29, 98, 129, 130, 138, 248, 274, 281, 284, 294, 296, 305, 306, 308], "open": [0, 277, 279, 290, 292, 299], "keyword": [0, 276], "kept": [0, 89, 274, 276, 289], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 24, 25, 26, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 274, 276, 278, 279, 281, 283, 284, 286, 289, 291, 292, 294, 297, 298, 299, 300, 301, 305, 310], "csv": [0, 2, 27, 157, 220, 252, 274, 276, 281, 283, 286, 289, 291, 296, 297, 305, 308], "wgt": [0, 2, 4, 6, 10, 29, 34, 37, 72, 81, 82, 96, 101, 113, 126, 128, 146, 147, 148, 153, 154, 160, 209, 210, 211, 214, 236, 283, 287, 294, 296, 298, 301, 304, 308], "23": [0, 2, 60, 61, 63, 77, 84, 96, 101, 116, 171, 172, 173, 228, 272, 273, 281, 289, 291, 293, 295, 296, 297, 306, 307], "titl": 0, "crash": [0, 274], "nmtran": [0, 6, 14], "There": [0, 255, 286, 296], "72": 0, "includ": [0, 2, 3, 17, 22, 26, 46, 150, 251, 273, 274, 277, 281, 289, 290, 291, 292, 295, 296, 297, 304, 306, 308], "come": [0, 279, 292], "filenam": [0, 18, 253, 257, 258, 294], "repres": [0, 4, 6, 24, 25, 26, 35, 276, 281, 283, 284, 287, 292, 294], "rel": [0, 14, 274, 287], "path": [0, 1, 2, 10, 18, 27, 50, 74, 100, 155, 156, 220, 221, 222, 223, 231, 232, 233, 235, 237, 252, 253, 254, 255, 257, 258, 259, 261, 266, 274, 276, 278, 281, 283, 286, 288, 289, 291, 294, 295, 296, 297, 305, 306, 308, 310], "work": [0, 274, 277, 279, 283, 286, 292, 294, 301], "directori": [0, 223, 235, 253, 254, 255, 274, 276, 278, 279, 294, 306], "when": [0, 14, 37, 72, 274, 277, 279, 283, 291, 292, 294, 298, 304, 306, 308], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 249, 250, 281, 283, 286, 289, 291, 292, 297, 305], "simpli": [0, 24, 279, 286, 298], "seen": [0, 1, 2, 281, 283, 286, 289, 291, 297, 305], "54": [0, 61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 297, 302, 304, 307], "doe": [0, 2, 50, 78, 100, 166, 208, 253, 254, 255, 258, 259, 274, 284, 286, 289, 291, 292, 297, 298, 304], "pk": [0, 2, 6, 41, 46, 74, 121, 153, 198, 208, 246, 274, 276, 281, 289, 296, 297, 298, 308], "pred": [0, 87, 153, 157, 274, 295, 296, 304, 307], "simpl": [0, 1, 153, 206, 251, 296, 298], "merg": [0, 274, 292], "placement": [0, 278], "place": [0, 2, 278, 292], "seem": 0, "restrict": [0, 255, 292], "automat": [0, 14, 34, 237, 274, 279, 281, 288, 292, 305, 308], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 33, 72, 74, 75, 77, 78, 95, 98, 99, 105, 163, 185, 194, 222, 223, 235, 249, 250, 253, 254, 255, 256, 257, 263, 266, 272, 273, 274, 276, 278, 279, 282, 283, 286, 287, 289, 293, 297, 301, 302, 304, 305, 306, 307, 308, 309], "continu": [0, 2, 6, 18, 37, 274, 277, 279, 281, 287, 292, 301, 308], "factor": [0, 301], "compil": [0, 292], "11138": 0, "445": [0, 289], "though": [0, 292], "outsid": [0, 274, 277, 292], "standard": [0, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 67, 219, 222, 272, 274, 284, 287, 292, 296, 298, 301, 304, 305, 307], "gfortran": 0, "8": [0, 2, 6, 53, 54, 55, 56, 61, 64, 65, 66, 67, 96, 101, 103, 116, 118, 228, 272, 273, 281, 283, 289, 291, 292, 293, 295, 296, 302, 304, 305, 306, 307, 310], "hh": 0, "j": [0, 208, 210, 273, 287], "nep": 0, "h": [0, 276], "second": [0, 151, 276, 298], "f": [0, 29, 72, 128, 146, 153, 154, 161, 174, 176, 185, 194, 195, 197, 208, 219, 272, 274, 276, 280, 292, 294, 296, 298], "respect": [0, 2, 274, 277, 281, 286, 287, 292, 296, 297, 298], "ep": [0, 29, 153, 274, 276, 296, 298], "implicit": [0, 274], "kind": [0, 6, 8, 121, 292], "dpsize": 0, "main": [0, 276, 301, 310], "function": [0, 3, 10, 14, 26, 34, 37, 38, 57, 58, 77, 82, 83, 84, 86, 87, 88, 92, 93, 94, 108, 117, 122, 132, 135, 136, 142, 174, 176, 178, 187, 195, 206, 212, 215, 216, 218, 223, 230, 241, 244, 260, 272, 274, 276, 278, 279, 283, 284, 289, 291, 292, 294, 295, 297, 298, 300, 301, 304, 305, 306, 308, 309, 310], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 26, 30, 31, 42, 60, 78, 85, 107, 119, 123, 124, 126, 129, 130, 138, 139, 154, 173, 174, 176, 185, 195, 197, 236, 237, 274, 276, 281, 283, 284, 289, 295, 301, 304, 309, 310], "doesn": [0, 29, 257, 274, 289], "t": [0, 6, 8, 29, 34, 38, 80, 109, 189, 190, 203, 211, 251, 257, 260, 262, 273, 274, 276, 287, 289, 296, 302, 304], "declar": [0, 2, 72, 147, 281, 308], "assign": [0, 6, 29, 72, 274, 276, 294], "stop": 0, "entri": [0, 256], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 24, 25, 26, 29, 57, 58, 72, 78, 104, 108, 113, 117, 122, 126, 129, 130, 138, 147, 154, 169, 174, 176, 185, 194, 195, 197, 237, 274, 281, 284, 296, 301], "separ": [0, 10, 76, 89, 148, 170, 207, 255, 274, 276, 279, 281, 283, 284, 287, 292, 301, 308], "thnn": 0, "nn": [0, 287], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 24, 26, 274, 292, 296], "ad": [0, 9, 18, 35, 37, 40, 45, 89, 241, 242, 244, 274, 276, 281, 291, 292, 298, 305, 306], "x": [0, 1, 2, 25, 34, 72, 83, 84, 99, 171, 272, 281, 283, 287, 289, 291, 295, 296, 297, 299, 305, 306], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 26, 27, 29, 107, 113, 155, 156, 157, 274, 283, 296, 297], "tool": [1, 2, 3, 14, 18, 49, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 83, 84, 85, 86, 87, 88, 161, 171, 172, 173, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 259, 261, 266, 271, 272, 274, 275, 276, 279, 281, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 297, 300, 301, 305, 309, 310], "add": [1, 9, 14, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 72, 89, 109, 178, 194, 195, 274, 276, 281, 289, 292, 296, 297, 298, 299, 308], "allometr": [1, 2, 34, 236, 274, 276, 308], "scale": [1, 2, 6, 18, 34, 59, 62, 68, 236, 274, 276, 287, 299, 308], "pharmr": [1, 2, 3, 274, 279, 281, 284, 286, 288, 289, 290, 291, 297, 305, 309], "command": [1, 274, 279, 281, 286, 288, 289, 290, 291, 292, 296, 297, 305, 309], "line": [1, 72, 274, 281, 286, 288, 289, 290, 291, 292, 296, 297, 305, 309], "To": [1, 2, 276, 278, 279, 281, 286, 288, 289, 291, 292, 295, 296, 297, 299, 305, 308, 310], "initi": [1, 2, 15, 18, 24, 25, 34, 40, 42, 43, 45, 46, 47, 74, 76, 77, 85, 92, 93, 94, 109, 167, 174, 176, 183, 185, 186, 187, 189, 190, 194, 195, 196, 199, 202, 203, 209, 210, 211, 215, 216, 217, 218, 236, 237, 262, 274, 276, 281, 286, 287, 289, 291, 292, 294, 296, 297, 305], "python": [1, 2, 273, 274, 276, 281, 283, 284, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 305, 308, 309], "r": [1, 2, 14, 27, 273, 274, 278, 281, 283, 284, 286, 288, 289, 290, 291, 294, 295, 296, 297, 298, 305, 308, 309], "read_model": [1, 157, 274, 281, 283, 286, 289, 291, 294, 296, 297, 305, 310], "read_modelfit_result": [1, 274, 281, 286, 289, 291, 294, 295, 297, 305], "run_allometri": [1, 274], "start_model": [1, 249, 281, 286, 289, 291, 297, 305, 308], "start_model_result": [1, 281, 286, 289, 291, 297, 305, 308], "re": [1, 2, 223, 232, 233, 234, 238, 239, 247, 254, 259, 261, 273, 281, 286, 289, 291, 295, 297, 305, 307, 308], "code": [1, 14, 18, 20, 72, 112, 113, 126, 132, 135, 136, 142, 153, 157, 194, 195, 221, 274, 281, 286, 289, 290, 291, 292, 296, 297, 298, 300, 301, 305, 310], "redefin": [1, 281, 286, 289, 291, 297, 305], "accordingli": [1, 281, 286, 289, 291, 297, 298, 305], "descript": [1, 2, 6, 18, 30, 249, 250, 251, 271, 272, 274, 278, 281, 283, 286, 289, 291, 297, 301, 305, 306], "modelfitresult": [1, 2, 21, 224, 225, 226, 227, 228, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 274, 281, 286, 289, 291, 297, 305], "allometric_vari": [1, 2, 34, 236, 237, 276], "wt": [1, 29, 34, 236, 239, 281, 306], "reference_valu": [1, 2, 34, 236, 276], "refer": [1, 31, 34, 72, 79, 141, 234, 236, 237, 251, 274, 276, 281, 292, 296, 298, 309, 310], "70": [1, 2, 34, 96, 236, 296, 304], "appli": [1, 2, 18, 174, 176, 185, 194, 195, 209, 210, 211, 236, 274, 276, 277, 283, 287, 292, 296, 297, 304, 308], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 18, 25, 26, 27, 28, 29, 30, 34, 40, 44, 46, 69, 72, 76, 79, 81, 89, 93, 94, 97, 99, 101, 103, 106, 107, 110, 119, 121, 124, 125, 127, 128, 132, 135, 136, 139, 142, 145, 150, 152, 154, 163, 164, 171, 172, 185, 188, 194, 200, 207, 209, 210, 211, 213, 214, 215, 216, 235, 236, 240, 241, 242, 244, 251, 253, 257, 258, 267, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 302, 308, 310], "cl": [1, 2, 4, 8, 25, 29, 34, 37, 40, 42, 45, 60, 72, 78, 80, 90, 107, 121, 123, 128, 131, 139, 144, 146, 147, 148, 153, 154, 160, 163, 167, 175, 183, 184, 189, 190, 193, 196, 202, 206, 209, 210, 211, 236, 239, 281, 287, 289, 291, 294, 296, 298], "q": [1, 34, 45, 167, 236, 274, 296], "v": [1, 8, 25, 29, 34, 60, 72, 80, 91, 107, 121, 126, 128, 146, 147, 148, 153, 154, 163, 175, 178, 183, 184, 189, 190, 196, 202, 203, 206, 236, 239, 279, 281, 287, 291, 294, 296, 298, 307, 308], "75": [1, 2, 34, 236, 281, 286], "lower_bound": [1, 2, 34, 236, 276], "lower": [1, 2, 6, 24, 25, 34, 37, 47, 70, 92, 93, 94, 119, 124, 125, 166, 187, 188, 194, 200, 213, 216, 236, 237, 276, 284, 289, 294, 296], "bound": [1, 24, 25, 34, 47, 71, 173, 188, 200, 209, 210, 211, 213, 218, 236, 274, 276, 294], "upper_bound": [1, 2, 34, 236, 276], "upper": [1, 24, 25, 34, 37, 47, 92, 93, 94, 119, 124, 125, 166, 187, 188, 200, 213, 216, 236, 274, 276, 294, 296], "should": [1, 6, 24, 34, 37, 40, 42, 47, 170, 185, 236, 241, 242, 244, 274, 276, 277, 278, 279, 281, 284, 287, 289, 291, 292, 293, 297, 301, 305], "true": [1, 2, 6, 10, 15, 18, 25, 34, 35, 36, 59, 69, 78, 81, 89, 92, 93, 94, 109, 113, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 159, 160, 172, 179, 181, 182, 185, 194, 195, 199, 214, 215, 216, 217, 221, 228, 236, 251, 252, 274, 281, 283, 286, 289, 291, 294, 296, 297, 298, 299, 305, 306, 307, 310], "No": [1, 6, 258, 259, 292, 297], "select": [1, 2, 170, 209, 211, 250, 272, 274, 276, 281, 289, 291, 294, 297, 299, 305, 306, 308], "see": [1, 2, 6, 8, 18, 37, 40, 228, 236, 237, 239, 241, 242, 244, 245, 246, 276, 277, 278, 279, 281, 283, 284, 286, 289, 291, 292, 293, 294, 296, 297, 298, 301, 305, 308], "about": [1, 2, 6, 277, 281, 283, 286, 288, 289, 291, 292, 296, 297, 305, 308], "actual": [1, 2, 24, 148, 281, 286, 289, 291, 292, 297, 305], "minim": [1, 2, 274, 281, 286, 289, 291, 297, 305], "statu": [1, 2, 274, 281, 284, 286, 289, 291, 292, 297, 305], "time": [1, 2, 6, 7, 9, 10, 25, 29, 34, 42, 43, 72, 74, 81, 82, 96, 102, 103, 110, 118, 128, 145, 146, 147, 148, 149, 153, 154, 157, 165, 183, 186, 196, 197, 199, 202, 212, 237, 245, 274, 276, 281, 283, 286, 287, 289, 291, 292, 294, 295, 297, 298, 301, 304, 305, 307, 308], "you": [1, 2, 278, 279, 281, 286, 288, 289, 290, 291, 292, 295, 296, 297, 298, 301, 305, 308, 309, 310], "look": [1, 2, 29, 50, 107, 139, 281, 286, 289, 291, 297, 298, 305, 308], "summary_model": [1, 2, 274, 281, 286, 289, 291, 297, 305, 308], "tabl": [1, 2, 59, 153, 174, 250, 272, 273, 274, 279, 281, 282, 286, 287, 289, 291, 293, 296, 297, 302, 304, 305, 306, 307, 308], "gener": [1, 2, 6, 60, 63, 73, 77, 149, 170, 171, 172, 173, 260, 262, 274, 276, 281, 283, 286, 287, 289, 290, 291, 296, 297, 300, 301, 305, 308], "summarize_modelfit_result": [1, 2, 274, 281, 286, 289, 291, 297, 305], "minimization_success": [1, 2, 251, 281, 286, 289, 291, 297, 305], "errors_found": [1, 2, 281, 286, 289, 291, 297, 305], "pheno": [1, 8, 10, 15, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 85, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 283, 288, 294, 295, 296, 298], "phenobarb": [1, 153, 251, 296], "scaled_model": [1, 2], "warnings_found": [1, 2, 281, 286, 289, 291, 297, 305], "ofv": [1, 2, 52, 151, 226, 230, 241, 242, 244, 249, 250, 251, 274, 281, 286, 289, 291, 297, 304, 305], "aic": [1, 51, 230, 241, 242, 244, 274, 289, 291, 297, 305], "bic": [1, 2, 52, 230, 241, 242, 244, 274, 276, 281, 289, 291, 297, 305, 308], "730": [1, 272, 287, 289], "894727": [1, 272, 287], "740": [1, 85, 102, 272, 283, 296], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 251, 281, 286, 289, 291, 297, 305], "estimation_runtim": [1, 2, 281, 286, 289, 291, 297, 305], "_estim": [1, 289, 297], "32": [1, 6, 61, 96, 101, 116, 228, 272, 273, 276, 281, 286, 293, 295, 296, 304, 307], "005818": [1, 287], "121955": 1, "44555": [1, 287], "111053": [1, 287], "201526": [1, 287], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 287], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 229, 249, 253, 254, 255, 256, 257, 258, 259, 261, 272, 274, 281, 286, 287, 289, 291, 297, 302, 305, 308], "predict": [1, 2, 14, 18, 86, 87, 108, 113, 122, 150, 226, 227, 228, 249, 274, 281, 282, 289, 291, 297, 304, 305], "influenti": [1, 2, 226, 227, 250, 274, 281, 289, 291, 297, 305], "individu": [1, 2, 6, 18, 41, 59, 60, 61, 63, 76, 86, 87, 107, 108, 114, 115, 116, 118, 122, 150, 151, 152, 163, 171, 172, 173, 217, 226, 227, 228, 249, 250, 274, 276, 281, 289, 291, 292, 296, 297, 301, 304, 305], "outlier": [1, 2, 227, 228, 250, 274, 281, 289, 291, 297, 305, 307], "summary_individuals_count": [1, 2, 281, 289, 291, 297, 305], "summarize_individuals_count_t": [1, 2, 274, 281, 289, 291, 297, 305], "parent_model": [1, 2, 18, 274, 281, 286, 289, 291, 297, 305], "inf_select": [1, 2, 250, 281, 289, 291, 297, 305], "inf_param": [1, 2, 250, 281, 289, 291, 297, 305], "out_ob": [1, 2, 250, 281, 289, 291, 297, 305], "out_ind": [1, 2, 250, 281, 289, 291, 297, 305], "inf_outli": [1, 2, 250, 281, 289, 291, 297, 305], "differ": [1, 2, 3, 18, 23, 26, 52, 249, 251, 272, 273, 274, 277, 278, 281, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 305, 306, 308, 310], "statist": [1, 6, 60, 63, 210, 281, 283, 287, 289, 291, 294, 297, 305], "summary_individu": [1, 274, 281, 289, 291, 297, 305], "summarize_individu": [1, 250, 274, 281, 289, 291, 297, 305], "outlier_count": [1, 249, 281, 289, 291, 297, 305], "dofv_vs_par": [1, 249, 281, 289, 291, 297, 305], "id": [1, 5, 6, 10, 16, 61, 79, 81, 82, 96, 99, 101, 102, 103, 106, 116, 118, 153, 154, 157, 171, 228, 273, 274, 276, 281, 283, 287, 289, 291, 293, 295, 296, 297, 298, 305, 307], "nan": [1, 2, 99, 218, 274, 281, 286, 287, 289, 291, 296, 297, 304, 305, 306], "742852": 1, "000000": [1, 2, 47, 53, 54, 55, 64, 272, 281, 287, 289, 291, 295, 297, 305], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 25, 42, 61, 76, 84, 96, 99, 101, 102, 116, 166, 186, 188, 200, 204, 208, 210, 228, 272, 273, 281, 283, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 302, 304, 305, 306, 307, 308], "092658": 1, "55": [1, 2, 6, 61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 297, 302, 304, 307], "6": [1, 2, 6, 61, 85, 96, 101, 116, 118, 228, 272, 273, 281, 283, 287, 289, 291, 292, 293, 295, 296, 297, 304, 305, 306, 307], "535711": 1, "175743": 1, "56": [1, 61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 307], "764710": 1, "576072": 1, "57": [1, 2, 61, 96, 101, 106, 116, 171, 228, 272, 273, 281, 286, 287, 293, 295, 296, 307], "975589": 1, "539779": 1, "58": [1, 2, 61, 96, 101, 106, 116, 118, 171, 228, 272, 273, 287, 293, 295, 296, 306, 307], "194798": 1, "775689": 1, "59": [1, 61, 96, 99, 101, 103, 106, 114, 116, 118, 171, 228, 272, 273, 281, 283, 286, 287, 293, 295, 296, 297, 307], "11": [1, 2, 61, 83, 84, 86, 96, 99, 101, 102, 116, 228, 272, 273, 281, 287, 288, 289, 291, 292, 293, 295, 296, 297, 302, 304, 306, 307, 308, 310], "175577": 1, "462889": 1, "predicted_dofv": [1, 249, 250, 281, 289, 291, 297, 305], "predicted_residu": [1, 249, 250, 281, 289, 291, 297, 305], "118": [1, 2, 171, 274, 287], "fulli": [2, 308], "best": [2, 274, 281, 289, 291, 292, 297, 305, 308], "dataset": [2, 10, 11, 12, 18, 33, 48, 60, 69, 74, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 98, 99, 102, 105, 106, 111, 114, 115, 116, 118, 126, 141, 149, 155, 166, 170, 177, 208, 212, 220, 237, 242, 273, 274, 276, 279, 287, 290, 291, 307, 309], "combin": [2, 4, 76, 129, 130, 138, 140, 174, 176, 195, 207, 208, 243, 274, 276, 286, 287, 289, 292, 296, 305, 308], "modelsearch": [2, 237, 244, 249, 274, 308], "ruvsearch": [2, 237, 245, 247, 274, 308], "covsearch": [2, 239, 274, 308], "run_amd": [2, 274], "dataset_path": [2, 74, 296], "modeltyp": [2, 74, 237, 276, 296], "pk_oral": [2, 276], "search_spac": [2, 237, 244, 274, 276, 297, 308], "let": [2, 14, 18, 79, 274, 281, 287, 296, 298, 308], "categor": [2, 6, 37, 274, 281, 283, 287, 308], "sex": [2, 277, 281, 301, 308], "ag": [2, 6, 239, 281, 306, 308], "occas": [2, 42, 237, 242, 274, 276, 291, 296], "visi": [2, 291], "c": [2, 9, 38, 178, 210, 275, 280, 286, 287, 291, 292, 296, 298, 305], "specifi": [2, 6, 29, 40, 82, 92, 94, 155, 166, 174, 176, 193, 195, 216, 222, 240, 274, 276, 278, 281, 286, 291, 292, 294, 295], "oral": [2, 33, 74, 95, 237, 246, 296, 308], "drug": [2, 44, 198, 301], "iiv": [2, 17, 22, 26, 31, 40, 42, 46, 52, 76, 107, 139, 163, 185, 207, 237, 241, 242, 244, 274, 276, 281, 291, 294, 296, 308], "we": [2, 277, 279, 281, 287, 288, 290, 292, 294, 296, 298, 301, 310], "our": [2, 277, 279, 280, 292, 301], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 62, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 89, 92, 93, 94, 99, 108, 117, 119, 122, 124, 125, 126, 128, 146, 147, 148, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 266, 272, 274, 276, 278, 281, 283, 284, 286, 289, 291, 292, 296, 297, 298, 301, 305, 308, 309, 310], "build": [2, 237, 275, 276, 284, 296, 308], "pk_iv": [2, 276], "cl_init": [2, 74, 237, 276, 296], "popul": [2, 18, 29, 47, 85, 86, 87, 108, 122, 128, 218, 237, 274, 276, 306], "clearanc": [2, 34, 74, 90, 237, 274, 276, 281, 291, 298], "01": [2, 17, 26, 37, 74, 194, 218, 237, 239, 276, 281, 296, 304, 306], "vc_init": [2, 74, 237, 276, 296], "central": [2, 7, 8, 9, 29, 44, 45, 72, 74, 128, 146, 167, 175, 183, 184, 186, 189, 190, 193, 196, 199, 202, 203, 204, 206, 237, 276, 279, 284, 294, 296], "compart": [2, 6, 8, 9, 32, 35, 38, 43, 44, 45, 97, 98, 110, 127, 158, 165, 167, 186, 193, 199, 204, 237, 274, 276, 296, 297, 308], "volum": [2, 34, 45, 74, 91, 237, 274, 276, 281, 291, 292], "mat_init": [2, 74, 237, 276, 296], "absorpt": [2, 74, 121, 141, 175, 183, 196, 199, 202, 237, 244, 249, 274, 276, 289, 291, 297, 308], "mfl": [2, 237, 239, 249, 274, 276, 281, 297], "depend": [2, 6, 18, 29, 33, 60, 76, 79, 129, 130, 138, 174, 176, 185, 195, 197, 274, 278, 283, 289, 298, 308, 310], "lloq": [2, 6, 166, 208, 237, 274, 276, 296], "quantif": [2, 6, 166, 208, 237, 276], "loq": [2, 166, 237, 276], "data": [2, 6, 18, 31, 83, 84, 85, 86, 87, 88, 101, 113, 153, 154, 157, 166, 174, 176, 179, 195, 208, 237, 250, 272, 274, 283, 287, 291, 292, 294, 296, 298, 301, 308], "bodi": [2, 6, 10, 277, 283, 292, 301], "weight": [2, 6, 10, 88, 129, 130, 138, 140, 201, 219, 281, 283, 301, 305], "correspond": [2, 14, 18, 192, 273, 292, 294, 307, 308], "datainfo": [2, 18, 33, 82, 155, 177, 220, 274, 308, 309], "file": [2, 10, 18, 27, 50, 75, 100, 153, 155, 156, 157, 220, 221, 222, 231, 232, 252, 253, 254, 255, 257, 258, 259, 261, 274, 276, 279, 281, 286, 288, 289, 291, 292, 294, 295, 296, 297, 298, 300, 301, 305, 308, 309], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 256, 261, 274, 278, 281, 283, 292, 295, 296, 309], "model_typ": [2, 246], "elimin": [2, 121, 132, 135, 136, 142, 184, 189, 190, 203, 274, 276, 297, 308], "vc": [2, 45, 167, 281, 289, 291, 296], "mat": [2, 46, 273, 274, 275, 280, 281, 289, 291, 296, 298, 305], "proport": [2, 40, 129, 130, 138, 140, 170, 174, 176, 194, 195, 208, 274, 276, 296], "step": [2, 15, 18, 36, 38, 39, 49, 159, 162, 178, 181, 182, 239, 251, 274, 276, 279, 281, 286, 288, 289, 291, 292, 297, 301, 305, 310], "foce": [2, 14, 15, 36, 39, 159, 181, 182, 274, 276, 286, 294, 296], "interact": [2, 14, 15, 36, 39, 153, 159, 181, 182, 274, 277, 286, 292, 294, 296, 301, 308, 310], "specif": [2, 14, 18, 25, 49, 82, 170, 223, 274, 276, 281, 283, 292, 294, 297, 301, 308], "support": [2, 8, 14, 18, 29, 39, 40, 57, 58, 73, 74, 83, 84, 86, 87, 88, 98, 108, 117, 122, 129, 130, 138, 175, 181, 182, 196, 198, 208, 239, 245, 263, 274, 276, 281, 283, 284, 286, 290, 292, 294, 295, 296, 297, 298, 300, 301, 303, 308], "nonmem": [2, 14, 18, 72, 73, 82, 114, 115, 116, 192, 243, 274, 275, 279, 283, 288, 290, 294, 295, 296, 301, 308], "cmt": [2, 33, 98, 274, 297], "rate": [2, 6, 8, 9, 16, 45, 141, 175, 183, 196, 199, 202, 274, 276, 308], "via": [2, 274, 276, 278, 279, 288, 290, 294, 296, 298, 308, 310], "exclud": [2, 113, 249, 289, 291, 292, 297], "pleas": [2, 279, 288, 292, 294, 296, 308, 310], "featur": [2, 279, 281, 286, 289, 290, 291, 292, 305, 309], "languag": [2, 112, 153, 277, 281, 284, 292, 297], "how": [2, 3, 172, 237, 241, 244, 274, 276, 277, 279, 281, 283, 288, 289, 291, 292, 294, 296, 297, 298, 306, 309], "defin": [2, 8, 63, 113, 126, 141, 148, 154, 274, 281, 284, 292, 294, 307, 308], "zo": [2, 244, 249, 274, 276, 297, 308], "seq": [2, 276, 297, 308], "fo": [2, 14, 39, 181, 182, 274, 276, 286, 297, 301, 308], "mm": [2, 274, 276, 297, 308], "mix": [2, 42, 52, 136, 190, 230, 274, 284, 288, 291, 294, 297, 301, 308], "lagtim": [2, 175, 196, 297, 308], "transit": [2, 8, 193, 199, 274, 276, 297, 308], "peripher": [2, 8, 45, 167, 193, 244, 249, 274, 276, 296, 297, 308], "cat": [2, 37, 281, 308], "iv": [2, 33, 74, 95, 237, 276, 308], "note": [2, 4, 6, 24, 72, 73, 99, 114, 115, 116, 251, 252, 253, 257, 258, 272, 283, 289, 291, 295, 296, 298, 306], "overriden": 2, "ignor": [2, 114, 115, 116, 153, 274, 276, 296, 298], "soon": 2, "explicitli": [2, 276, 291, 292], "stai": [2, 26], "vice": 2, "versa": 2, "instanc": [2, 131, 160, 281, 308], "effect": [2, 37, 38, 40, 52, 131, 139, 160, 163, 178, 194, 230, 239, 274, 276, 284, 288, 292, 294, 296, 301, 306, 308], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 24, 25, 26, 27, 29, 30, 31, 34, 36, 39, 40, 42, 47, 50, 52, 60, 63, 74, 76, 77, 79, 83, 84, 85, 86, 87, 88, 100, 104, 129, 130, 138, 144, 150, 155, 159, 163, 164, 166, 170, 171, 172, 173, 174, 176, 185, 192, 194, 195, 197, 207, 208, 209, 210, 211, 220, 224, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 253, 254, 257, 258, 262, 266, 274, 276, 278, 283, 287, 289, 291, 294, 296, 297, 308], "null": [2, 283, 289, 291, 297, 308, 310], "yield": [2, 149, 170], "workflow": [2, 3, 233, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 274, 288, 290, 292, 301, 308], "want": [2, 277, 279, 281, 289, 290, 291, 292, 296, 297, 298, 300], "desir": [2, 258, 259], "subset": [2, 71, 171, 294], "algorithm": [2, 239, 240, 241, 244, 249, 274, 276, 301, 308], "six": 2, "below": [2, 6, 208, 278, 279, 286, 289, 291, 292, 297, 305], "detail": [2, 236, 239, 241, 242, 244, 245, 246, 286, 292, 294, 297, 304, 305, 308, 309], "regard": [2, 292, 297], "subhead": 2, "distribut": [2, 17, 22, 26, 42, 45, 60, 63, 76, 121, 148, 152, 167, 171, 172, 173, 207, 211, 242, 263, 272, 274, 276, 287, 292, 297, 304, 308], "term": [2, 174, 274, 289, 292], "keep": [2, 14, 24, 170, 241, 253, 274, 277, 284, 289, 292], "well": [2, 60, 281, 286, 289, 291, 292, 296, 297, 304, 305, 308, 309], "iov": [2, 26, 42, 107, 139, 164, 242, 274, 276, 296, 304, 308], "explain": [2, 281, 292, 301, 308], "ruv": [2, 185, 276], "power": [2, 37, 194, 208, 276, 292, 296, 301, 302, 304, 305], "vari": [2, 145, 197, 245, 274, 276, 305], "identifi": [2, 6, 31, 281, 283, 289, 292, 304, 308], "option": [2, 6, 14, 18, 26, 37, 40, 42, 49, 74, 76, 83, 84, 86, 87, 88, 170, 208, 230, 253, 257, 258, 267, 272, 274, 276, 281, 289, 291, 292, 294, 296, 297, 309, 310], "reduced_stepwis": [2, 249, 274, 297, 308], "iiv_strategi": [2, 241, 244, 274, 276, 289, 297, 308], "absorption_delai": [2, 244, 274, 297, 308], "rank_typ": [2, 230, 241, 242, 244, 276, 289, 291, 297, 308], "cutoff": [2, 197, 226, 227, 228, 230, 241, 242, 244, 274, 276, 289, 291, 297, 308], "brute_forc": [2, 241, 274, 289], "fullblock": [2, 241, 244, 274, 289, 297], "tri": [2, 276, 297], "list_of_paramet": [2, 40, 42, 242, 276, 291], "random": [2, 3, 13, 17, 18, 22, 26, 42, 52, 60, 63, 77, 79, 123, 126, 139, 171, 172, 173, 274, 276, 284, 287, 291, 296, 304, 310], "group": [2, 25, 31, 149, 150, 170, 245, 276, 290, 305], "p_valu": [2, 245, 276, 305], "05": [2, 45, 53, 54, 55, 56, 64, 65, 66, 67, 167, 239, 245, 272, 276, 281, 295, 296, 304, 305, 306], "skip": [2, 245, 276, 281, 305], "p_forward": [2, 239, 276, 281], "p_backward": [2, 239, 276, 281], "max_step": [2, 239, 276, 281], "scm": [2, 239, 274, 281, 301, 303], "forward": [2, 239, 274, 276, 281, 306], "backward": [2, 239, 251, 274, 276, 281, 306], "variou": [2, 72, 249, 250, 274, 276, 277, 279, 281, 284, 286, 289, 290, 291, 297, 301, 305], "access": [2, 281, 283, 286, 289, 291, 292, 294, 296, 297, 298, 305, 308, 310], "json": [2, 10, 27, 232, 234, 252, 274, 276, 281, 283, 286, 289, 291, 297, 305, 308], "format": [2, 18, 73, 274, 276, 278, 281, 284, 286, 288, 289, 290, 291, 292, 294, 296, 297, 300, 305], "summary_tool": [2, 274, 281, 286, 289, 291, 297, 305], "candid": [2, 244, 274, 276, 281, 286, 305, 308], "compar": [2, 230, 272, 274, 281, 286, 301, 305, 308], "rank": [2, 230, 241, 242, 244, 274, 276, 281, 305], "selected_model": 2, "901": 2, "722667": 2, "iivsearch_run9": 2, "2272": 2, "503332": 2, "best_ruvsearch_2": [2, 305], "time_varying2": [2, 305], "iiv_on_ruv": [2, 274, 302, 304, 305], "2431": 2, "413432": 2, "iovsearch_run2": [2, 291], "2579": 2, "021315": 2, "2590": 2, "360161": 2, "covsearch_run6": [2, 281], "2593": 2, "888704": 2, "dofv": [2, 226, 227, 249, 272, 273, 274, 281, 302, 304, 305], "n_param": [2, 281, 291, 305], "d_param": [2, 281, 291, 305], "1370": 2, "780665": 2, "158": 2, "910100": 2, "147": [2, 6], "607883": 2, "338847": 2, "528542": 2, "modelsearch_run1": [2, 274], "base_model": [2, 230], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "best_ruvsearch_1": [2, 305], "iovsearch_run1": [2, 291], "iovsearch_run3": [2, 291], "iovsearch_run4": [2, 291], "iovsearch_run5": [2, 291], "iovsearch_run6": [2, 291], "iovsearch_run7": [2, 291], "iovsearch_run8": [2, 291], "iovsearch_run9": 2, "iovsearch_run10": 2, "covsearch_run1": [2, 281], "exp": [2, 29, 37, 40, 153, 209, 210, 211, 239, 281, 296, 298], "covsearch_run2": [2, 281], "covsearch_run3": [2, 281], "covsearch_run4": [2, 281], "covsearch_run5": [2, 281], "fals": [2, 6, 13, 14, 17, 18, 22, 24, 25, 27, 31, 37, 39, 47, 59, 69, 71, 78, 81, 89, 92, 93, 94, 109, 113, 119, 124, 125, 128, 129, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 160, 170, 172, 179, 187, 188, 194, 199, 200, 213, 215, 216, 217, 218, 220, 228, 237, 251, 252, 254, 266, 273, 281, 283, 286, 294, 296, 298, 299, 306, 307], "19029": 2, "146679": 2, "2091": 2, "335789": 2, "2278": 2, "645238": 2, "1623": 2, "449423": 2, "2187": 2, "714827": 2, "2155": 2, "309747": 2, "1562": 2, "182445": 2, "1544": 2, "578087": 2, "1927": 2, "724795": 2, "1419": 2, "684985": 2, "2260": 2, "091630": 2, "2256": 2, "222388": 2, "2253": 2, "280037": 2, "2421": 2, "414958": 2, "018856": 2, "816993": 2, "2555": 2, "387421": 2, "817090": 2, "387607": 2, "413326": 2, "2524": 2, "580897": 2, "2556": 2, "106887": 2, "2502": 2, "502532": 2, "2591": 2, "473342": 2, "816184": 2, "112946": 2, "565747": 2, "739920": 2, "63": [2, 96, 118, 295, 296, 302, 304], "30": [2, 61, 96, 101, 116, 228, 272, 273, 281, 286, 289, 291, 292, 293, 295, 296, 297, 302, 304, 307], "15": [2, 61, 84, 96, 101, 116, 228, 272, 273, 281, 289, 291, 292, 293, 295, 296, 306, 307], "06": [2, 53, 55, 56, 65, 66, 272, 281, 289, 291, 295, 304, 306, 308], "21": [2, 61, 83, 86, 96, 101, 116, 228, 272, 273, 281, 286, 287, 293, 295, 296, 302, 304, 307], "82": 2, "77": [2, 281], "27": [2, 61, 96, 101, 116, 118, 228, 272, 273, 281, 289, 291, 293, 295, 296, 297, 305, 307], "80": [2, 211, 281, 295, 302, 304, 305], "02": [2, 281, 304, 306, 308], "37": [2, 61, 96, 101, 103, 116, 228, 272, 273, 281, 283, 293, 295, 296, 307], "45": [2, 61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 307], "18": [2, 6, 61, 84, 96, 101, 116, 228, 272, 273, 281, 289, 291, 293, 295, 296, 302, 304, 307], "85": 2, "73": [2, 118, 295, 296, 305, 308], "31": [2, 61, 83, 86, 96, 101, 116, 118, 228, 272, 273, 281, 293, 295, 296, 302, 304, 307, 308], "17": [2, 61, 83, 84, 86, 87, 96, 99, 101, 116, 118, 228, 272, 273, 281, 283, 289, 291, 292, 293, 295, 296, 297, 302, 304, 307], "60": [2, 96, 281, 292, 296, 302], "28": [2, 61, 83, 86, 87, 96, 101, 116, 208, 228, 272, 273, 281, 289, 292, 293, 295, 296, 304, 307], "84": [2, 226, 227, 250, 289, 291, 297, 306], "39": [2, 61, 96, 101, 116, 228, 272, 273, 281, 291, 293, 295, 296, 304, 305, 306, 307], "98": [2, 27, 272, 281, 287, 289], "38": [2, 61, 83, 86, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 307], "96": [2, 103, 211, 272, 281, 296, 297], "52": [2, 61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 297, 306, 307], "33": [2, 61, 96, 101, 116, 118, 228, 272, 273, 281, 293, 295, 296, 297, 306, 307], "40": [2, 61, 96, 99, 101, 116, 118, 166, 228, 272, 273, 283, 286, 293, 295, 296, 306, 307], "44": [2, 61, 96, 101, 116, 228, 272, 273, 293, 295, 296, 307], "26": [2, 61, 96, 101, 116, 228, 272, 273, 281, 291, 293, 295, 296, 304, 306, 307], "66": [2, 281, 302], "36": [2, 61, 63, 96, 101, 116, 228, 272, 273, 281, 289, 291, 293, 295, 296, 297, 304, 307], "25": [2, 61, 83, 86, 87, 96, 101, 103, 116, 228, 272, 273, 281, 283, 289, 293, 295, 296, 297, 302, 304, 305, 307], "65": [2, 6, 281], "29": [2, 61, 83, 86, 87, 96, 101, 116, 208, 210, 228, 272, 273, 275, 281, 289, 292, 293, 295, 296, 304, 307], "64": [2, 6], "78": 2, "88": 2, "51": [2, 61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 307, 308], "47": [2, 61, 96, 101, 116, 118, 228, 272, 273, 293, 295, 296, 297, 302, 304, 307], "34": [2, 61, 87, 96, 101, 116, 118, 228, 272, 273, 281, 293, 295, 296, 302, 304, 307], "pop_cl_estim": [2, 281, 286, 291, 305], "pop_vc_estim": [2, 281, 286, 291, 305], "0100": 2, "100": [2, 25, 37, 39, 49, 171, 181, 211, 272, 274, 276, 281, 295, 296, 299, 306], "3711": 2, "125": 2, "228": 2, "5771": 2, "115": 2, "287": [2, 302], "8759": 2, "119": 2, "581": 2, "2667": 2, "105": [2, 281, 286, 305], "292": 2, "5775": 2, "127": [2, 6, 289], "060": 2, "1654": 2, "121": [2, 281, 289, 291, 297, 305], "364": 2, "9392": 2, "138": 2, "630": 2, "9500": 2, "923": 2, "9735": 2, "137": 2, "648": [2, 6, 272], "5006": 2, "116": 2, "034": 2, "6326": 2, "112": [2, 118, 281, 289, 291, 295, 296, 297, 302, 304, 305], "423": 2, "5612": 2, "416": 2, "5406": 2, "706": 2, "0598": 2, "151": [2, 83, 84, 86, 87, 88, 302], "9031": 2, "117": 2, "208": 2, "0793": 2, "438": 2, "439": [2, 289], "9253": 2, "887": [2, 274, 289, 291], "1390": 2, "114": 2, "800": [2, 272, 295], "9254": 2, "888": 2, "1388": 2, "9033": 2, "207": [2, 295], "9409": 2, "401": 2, "0197": 2, "635": 2, "1751": 2, "113": [2, 281, 289, 291, 297, 305], "681": 2, "2749": 2, "103": [2, 281, 289], "868": [2, 287, 289], "2141": 2, "935": 2, "5390": 2, "943": 2, "2723": 2, "795": 2, "2760": [2, 281], "837": 2, "2727": 2, "104": [2, 281, 286, 289, 291, 297], "085": 2, "2814": 2, "101": [2, 281], "532": 2, "pop_mat_estim": [2, 281, 286, 291, 305], "010000": 2, "000100": 2, "459155": 2, "260127": 2, "563136": 2, "355314": 2, "386862": 2, "284833": 2, "224547": 2, "206026": 2, "463798": 2, "479941": 2, "486550": 2, "483385": 2, "495219": 2, "493621": 2, "463074": 2, "463102": 2, "495548": 2, "474613": 2, "495482": 2, "474620": 2, "493613": 2, "460720": 2, "468861": 2, "491231": 2, "461770": 2, "461787": 2, "462003": 2, "466555": 2, "427683": 2, "460977": 2, "460855": 2, "omega_iov_1_estim": [2, 291], "omega_iov_2_estim": [2, 291], "000010": [2, 287], "027698": 2, "000001": [2, 53, 55, 56, 60, 63, 65, 66, 291, 295, 297], "017913": 2, "109449": 2, "050657": 2, "110465": 2, "026922": 2, "026926": 2, "026951": 2, "026901": 2, "026857": 2, "026982": 2, "026914": 2, "omega_iov_2_3_estim": 2, "018497": 2, "018498": 2, "063509": 2, "046262": 2, "052580": 2, "017330": 2, "017318": 2, "017368": 2, "017319": 2, "017210": 2, "017372": 2, "017494": 2, "omega_iov_3_estim": [2, 291], "pop_clage_estim": [2, 281], "012352": 2, "012353": 2, "003156": 2, "003153": 2, "036852": 2, "043941": 2, "046134": 2, "011155": 2, "011139": 2, "004026": 2, "011192": 2, "011151": 2, "011028": 2, "011185": 2, "011372": 2, "pop_clsex_estim": [2, 281], "pop_matage_estim": [2, 281], "05079": 2, "016829": 2, "pop_matsex_estim": [2, 281], "pop_vcage_estim": [2, 281], "485722": 2, "002138": 2, "pop_vcsex_estim": [2, 281], "143849": 2, "dbic": [2, 274, 289, 291, 297], "059033": 2, "110": [2, 281, 289, 291, 297, 305], "464112": 2, "329": 2, "468146": 2, "642": [2, 302], "324437": 2, "695": [2, 274], "010496": 2, "712": 2, "614854": 2, "833": 2, "217496": 2, "439014": 2, "972689": 2, "493822": 2, "841931": 2, "134": 2, "736504": 2, "130": [2, 274], "443586": 2, "120": [2, 103, 283, 295, 296], "402996": 2, "683715": 2, "393070": 2, "71": [2, 281, 305], "089100": 2, "886801": 2, "290565": 2, "177358": 2, "205585": 2, "113181": 2, "752785": 2, "summary_error": [2, 281, 286, 289, 291, 297], "summarize_error": [2, 274, 281, 286, 289, 291, 297], "categori": [2, 6, 18, 37, 42, 154, 248, 276, 281, 286, 289, 291, 297, 308], "error_no": [2, 281, 286, 289, 291, 297], "2023": [2, 292], "03": [2, 281, 302, 304, 306], "402": 2, "messag": [2, 256, 274, 276, 281, 286, 289, 291, 297], "NEAR": [2, 291, 297], "ITS": [2, 14, 39, 181, 182, 274, 276, 291, 297], "boundari": [2, 274, 291, 297], "page": [3, 273, 275, 279, 286, 297, 298], "public": [3, 284], "modul": [3, 8, 274, 278, 283, 294, 296, 300, 310], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 274, 283, 288, 292, 294, 296, 308], "relat": [3, 253, 257, 258, 274, 277, 306], "statement": [3, 4, 8, 18, 23, 34, 35, 37, 38, 40, 41, 42, 45, 46, 72, 128, 146, 147, 148, 161, 163, 167, 168, 174, 175, 176, 178, 183, 184, 185, 189, 190, 193, 194, 195, 196, 197, 199, 202, 203, 206, 208, 209, 210, 211, 219, 274, 276, 281, 292, 296, 301], "transform": [3, 18, 152, 174, 176, 179, 195, 208, 209, 210, 211, 274, 276, 288, 298, 304, 309], "manipul": [3, 25, 283, 290, 296, 298, 309], "built": [3, 146, 225, 276, 279, 290], "run": [3, 76, 150, 152, 223, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 257, 261, 272, 273, 274, 282, 288, 290, 292, 293, 295, 300, 301, 304, 306, 307, 310], "packag": [3, 276, 284, 288, 290, 292, 299, 301, 310], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 26, 29, 40, 57, 58, 60, 85, 97, 108, 110, 117, 122, 126, 144, 174, 176, 186, 194, 195, 204, 205, 274, 276, 277, 292, 294, 301, 307], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 277, 279, 290, 292, 294], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 274, 281, 287, 289, 291, 292, 293, 294, 296, 297, 298, 299, 304, 305, 306], "represent": [4, 262, 283, 288, 298], "togeth": [4, 26, 175, 196, 279, 284, 287, 293, 305, 310], "sympi": [4, 6, 8, 17, 22, 26, 29, 34, 60, 85, 104, 117, 126, 127, 129, 130, 138, 144, 174, 176, 185, 186, 195, 197, 204, 284, 294, 301], "str": [4, 6, 7, 8, 10, 17, 18, 22, 24, 26, 27, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 47, 52, 60, 73, 74, 78, 79, 81, 85, 93, 100, 104, 107, 112, 120, 121, 123, 126, 129, 130, 131, 138, 139, 144, 146, 149, 151, 152, 155, 156, 157, 160, 163, 164, 170, 174, 176, 178, 180, 181, 185, 186, 191, 192, 194, 195, 197, 198, 204, 207, 208, 209, 210, 211, 214, 215, 220, 221, 223, 224, 225, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 271, 274], "expr": [4, 9, 26, 29, 34, 38, 117, 144, 178, 186, 204, 205], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 39, 153, 157, 181, 182, 208, 237, 240, 253, 254, 255, 256, 257, 258, 259, 261, 273, 274, 276, 281, 284, 292, 294, 296, 301, 308, 310], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 26, 29, 277, 292, 301], "hand": [4, 8, 60], "side": [4, 8, 60, 179], "pop_cl": [4, 296], "eta_cl": [4, 40, 42, 296, 298], "rhs_symbol": [4, 8, 28], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 254, 256], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 254, 256], "replac": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 30, 31, 50, 170, 180, 206, 274, 276, 283, 284, 296, 298], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 39, 181, 223, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 259, 274], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29, 294], "substitut": [4, 5, 7, 8, 16, 17, 22, 26, 28, 29, 292, 296], "dict": [4, 5, 6, 10, 16, 17, 22, 25, 26, 29, 49, 62, 83, 84, 86, 87, 88, 92, 94, 97, 109, 110, 152, 169, 187, 188, 200, 216, 253, 254, 257, 258, 259, 261, 267, 283, 294], "old": [4, 29, 169, 274, 304], "new": [4, 6, 9, 10, 14, 17, 22, 24, 25, 26, 29, 30, 35, 40, 42, 46, 47, 73, 77, 78, 89, 92, 93, 94, 169, 170, 174, 176, 185, 187, 191, 194, 195, 215, 216, 218, 263, 276, 277, 279, 283, 292, 296, 297, 300, 304, 305, 308], "pair": [4, 5, 8, 16, 17, 22, 26, 29, 37, 70, 249], "return": [4, 6, 8, 9, 10, 15, 18, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 263, 266, 267, 274, 292, 296], "updat": [4, 9, 10, 18, 25, 29, 186, 204, 217, 218, 220, 274, 276, 279, 290, 292, 296, 297, 298, 301, 305, 309, 310], "b": [4, 292, 297], "to_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 30, 31, 254, 256], "amount": [5, 6, 7, 8, 16, 38, 109, 274, 283, 294], "admid": [5, 6, 7, 8, 16, 29, 33, 45, 72, 95, 128, 146, 167, 175, 183, 184, 189, 190, 193, 196, 199, 202, 203, 206, 294, 296], "dose": [5, 6, 7, 8, 9, 16, 33, 35, 43, 89, 95, 97, 98, 102, 103, 109, 113, 141, 158, 165, 197, 274, 283], "int": [5, 8, 16, 29, 34, 39, 44, 49, 60, 63, 71, 77, 102, 104, 114, 115, 129, 130, 138, 162, 170, 171, 172, 173, 174, 176, 181, 182, 185, 193, 195, 197, 199, 238, 239, 243, 245, 248], "administr": [5, 6, 16, 95, 237, 246], "amt": [5, 7, 8, 10, 16, 29, 34, 45, 72, 81, 82, 96, 103, 109, 128, 146, 147, 148, 153, 154, 167, 175, 183, 184, 189, 190, 193, 196, 199, 202, 203, 206, 283, 294, 296, 298], "dictionari": [5, 10, 14, 16, 17, 22, 25, 26, 27, 30, 83, 84, 86, 87, 88, 97, 110, 170, 187, 188, 200, 253, 254, 257, 258, 259, 261, 267, 294], "unknown": [6, 144, 283], "unit": [6, 18, 126], "ratio": [6, 239, 245, 274, 276, 283, 305], "datatyp": [6, 18, 155], "float64": [6, 10, 59, 66, 67, 70, 85, 86, 87, 88, 103, 118, 225, 283, 294, 295, 296], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 274, 296], "colum": 6, "measur": [6, 277, 283, 292], "bool": [6, 18, 24, 27, 31, 34, 35, 37, 47, 59, 69, 71, 78, 81, 89, 109, 113, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 170, 172, 185, 194, 195, 199, 217, 218, 220, 221, 236, 237, 251, 252, 254, 266], "discret": [6, 283, 291], "union": [6, 104, 129, 130, 138, 152, 174, 176, 185, 186, 195, 197, 204], "tupl": [6, 8, 26, 149, 170, 267], "label": [6, 274], "bar": [6, 287], "panda": [6, 10, 274, 283, 284, 301], "dtype": [6, 10, 59, 62, 66, 67, 70, 71, 85, 86, 87, 88, 102, 103, 116, 118, 225, 283, 295, 296], "nomin": [6, 283], "ordin": [6, 283], "rang": [6, 27, 79, 308], "na": 6, "int8": 6, "sign": [6, 210, 292], "bit": 6, "128": 6, "int16": 6, "16": [6, 61, 84, 96, 101, 116, 195, 211, 228, 272, 273, 281, 289, 291, 292, 293, 295, 296, 302, 304, 305, 306, 307], "768": 6, "767": 6, "int32": [6, 10, 283], "483": 6, "647": [6, 272, 289], "int64": [6, 116, 296], "223": [6, 282], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 302], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 85, 102, 283, 295, 296], "073": 6, "709": 6, "551": 6, "615": [6, 302], "float16": 6, "binari": [6, 292], "float": [6, 24, 34, 40, 46, 47, 51, 52, 70, 71, 74, 152, 166, 173, 194, 197, 208, 226, 227, 228, 230, 236, 237, 239, 241, 242, 244, 245, 274], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 82, 212, 274, 276, 294], "tran": [6, 82, 212, 274, 276, 294], "date": [6, 79, 82, 212, 274, 276, 292, 310], "common": [6, 37, 63, 267, 292, 309], "birth": 6, "human": [6, 27, 301], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 283, 301], "concentr": [6, 99, 283, 301], "substanc": 6, "blood": 6, "subject": [6, 14, 96, 106, 250, 283, 292], "uniqu": [6, 31, 50, 78, 170, 253, 263, 274, 276, 296, 308], "pd": [6, 15, 38, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 76, 79, 83, 84, 85, 86, 87, 88, 95, 96, 98, 99, 101, 102, 103, 105, 111, 116, 118, 120, 149, 150, 151, 152, 155, 170, 171, 172, 173, 178, 217, 218, 226, 227, 228, 230, 248, 249, 250, 251, 256, 274, 283], "interv": [6, 283, 284], "ration": 6, "max": [6, 37, 38, 178, 189, 190, 272, 296], "datafram": [6, 15, 18, 25, 27, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 76, 79, 83, 84, 86, 87, 88, 96, 99, 101, 149, 150, 152, 155, 170, 171, 172, 173, 217, 226, 227, 228, 230, 248, 249, 250, 251, 256, 274, 283, 301], "idv": [6, 10, 197, 283, 304], "independ": [6, 8, 283, 292, 294, 296, 299, 304, 308], "dv": [6, 10, 29, 72, 81, 82, 96, 104, 118, 128, 129, 130, 138, 146, 150, 153, 154, 157, 174, 176, 185, 189, 190, 195, 197, 208, 274, 283, 294, 296, 298, 307], "dvid": [6, 18, 44, 104, 129, 130, 138, 174, 176, 180, 185, 195, 197, 294, 302, 304, 305], "infus": [6, 141, 196, 202, 274, 296], "addit": [6, 37, 40, 49, 78, 89, 129, 130, 138, 140, 174, 176, 195, 208, 274, 276, 281, 283, 286, 292, 304, 305, 308], "interdos": 6, "ss": 6, "steadi": [6, 274], "state": [6, 25, 37, 274, 292, 306], "event": [6, 105, 212, 274, 277, 292], "mdv": [6, 111, 274], "miss": [6, 96, 101, 274], "yet": [6, 308], "exactli": 6, "blqdv": [6, 274], "unkown": 6, "hasn": 6, "custom": [6, 37, 40, 42, 185, 276, 292, 301], "physic": [6, 126, 277, 283, 292], "recogn": [6, 192, 277, 292, 298], "without": [6, 9, 57, 58, 83, 84, 86, 87, 88, 108, 117, 122, 170, 255, 272, 274, 276, 279, 284, 292, 294], "static": [6, 10, 18], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 26, 27, 29, 32, 73, 128, 148, 199, 274, 276, 308], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 24, 26, 69, 70, 71, 104, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 274, 294, 296, 298, 308, 310], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 274, 276, 301], "properti": [6, 14, 17, 22, 24, 25, 30, 292, 294], "lag_tim": [7, 9, 274], "bioavail": [7, 9, 35, 97, 158, 274], "compartment": [7, 8, 32, 274, 276, 294], "system": [7, 8, 9, 14, 23, 29, 32, 57, 58, 60, 80, 83, 84, 86, 87, 88, 108, 109, 117, 122, 133, 134, 137, 141, 186, 204, 206, 257, 274, 276, 278, 279, 290, 292, 294, 298], "lag": [7, 9, 43, 110, 165, 274], "enter": [7, 292], "fraction": [7, 173, 272, 287], "bolu": [7, 8, 29, 45, 72, 128, 146, 167, 175, 183, 184, 189, 190, 193, 199, 203, 206, 274, 276, 294, 296], "comp": [7, 8, 274], "a_centr": [7, 8, 29, 38, 72, 80, 109, 128, 146, 178, 186, 189, 190, 195, 203, 294, 296], "depot": [7, 8, 9, 183, 196, 199, 274, 296, 308], "alag": [7, 274], "a_depot": [7, 8], "builder": [8, 9], "graph": [8, 262, 276, 279], "odesystem": [8, 29, 274, 294], "od": [8, 14, 23, 29, 32, 46, 57, 58, 60, 83, 84, 86, 87, 88, 108, 109, 117, 122, 133, 134, 137, 141, 186, 192, 204, 206, 274, 276], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 199, 308], "k21": [8, 308], "vector": [8, 17, 127, 171, 172, 173, 273, 287, 294], "load_example_model": [8, 10, 15, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 72, 73, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 228, 230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 274, 288, 295, 296], "pprint": [8, 117], "ode_system": [8, 29, 38, 45, 167, 175, 183, 184, 189, 190, 193, 196, 199, 202, 203, 206, 274, 294, 296], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 45, 262, 292], "compartment_nam": 8, "compartmental_matrix": [8, 294], "matrix": [8, 14, 17, 26, 53, 54, 55, 56, 60, 63, 64, 65, 66, 67, 70, 127, 171, 172, 173, 204, 273, 274, 276, 287, 294, 296], "set_first_order_absorpt": [8, 46, 175, 196, 202, 274, 296], "dosing_compart": 8, "receiv": [8, 292], "equat": [8, 60, 80, 294, 296], "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 9, 71, 127, 141, 142, 148, 186, 196, 202, 203, 204, 274, 291, 296, 297, 299, 308], "set_zero_order_absorpt": [8, 175, 183, 196, 274, 296, 310], "atom": 8, "http": [8, 273, 283, 284, 287, 288, 292, 305], "doc": [8, 279], "org": [8, 273, 275, 283, 287, 292, 305], "latest": [8, 274, 284, 288], "core": [8, 288, 294], "html": [8, 222, 284, 292], "basic": [8, 27, 74, 75, 274, 283, 292, 298, 308, 309], "find_compart": [8, 9, 38], "its": [8, 24, 29, 71, 79, 148, 249, 274, 276, 283, 284, 288, 290, 292, 294, 296, 310], "found": [8, 25, 248, 272, 273, 274, 279, 282, 285, 287, 288, 289, 291, 292, 294, 295, 297, 304, 305, 308, 309, 310], "find_depot": 8, "out": [8, 26, 69, 218, 274, 292, 294, 300, 310], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 24, 26, 207, 212, 224, 243, 248, 251, 253, 274, 276, 284, 287, 292, 308], "distinguish": [8, 292], "get_bidirect": 8, "bidirect": 8, "interest": [8, 60, 277, 281, 292, 301], "get_compartment_inflow": 8, "go": [8, 129, 130, 138, 243, 251, 274, 283, 292, 296], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 220, 221, 253, 257, 258, 276], "ka": [8, 9, 41, 183, 196, 274, 291, 296], "get_n_connect": 8, "connect": [8, 18, 253, 255, 274, 276, 283, 292, 301, 308, 309], "compartmentalsystem": [9, 274], "newli": [9, 26, 291], "move_dos": 9, "move": [9, 218, 274], "anoth": [9, 18, 29, 263, 296], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 158], "set_dos": 9, "set_input": 9, "set_lag_tim": [9, 274], "force_absolute_path": 10, "sequenc": [10, 15, 25, 26, 29, 76], "metadata": [10, 253, 254, 257, 258, 259, 261, 274], "index": [10, 18, 25, 26, 27, 29, 39, 49, 60, 63, 70, 71, 103, 118, 162, 181, 182, 248, 251, 273, 274, 287, 288, 294, 296, 306, 310], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 79], "idv_column": 10, "apgr": [10, 29, 34, 37, 72, 81, 82, 96, 101, 113, 128, 131, 146, 147, 148, 153, 154, 214, 283, 287, 294, 296, 298, 304], "fa1": [10, 81, 82, 96, 153, 154, 283, 296], "fa2": [10, 81, 82, 96, 153, 154, 283, 296], "example_model": 10, "dta": [10, 153, 283, 296, 298], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 274, 292, 296, 310], "read_json": 10, "read": [10, 155, 156, 157, 231, 232, 237, 252, 253, 254, 257, 258, 259, 261, 274, 278, 283, 288, 292, 295, 300, 301, 303, 308, 309], "set_column": 10, "col": 10, "exist": [10, 29, 37, 49, 50, 75, 78, 100, 102, 253, 254, 255, 274, 276, 278, 283, 291, 308], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 27, 283], "recover": 12, "issu": [12, 21, 274, 279, 290, 310], "hashabl": 13, "level": [13, 17, 22, 26, 30, 31, 107, 139, 274, 276, 283, 290, 296, 301, 306, 308, 309], "variabilitylevel": 13, "parameter_nam": [13, 26, 93, 213, 215, 274, 298], "definit": [13, 14, 18, 29, 61, 172, 173, 228, 274, 276, 281, 287, 292, 294, 308], "varianc": [13, 17, 22, 26, 59, 60, 63, 185, 218, 289, 294, 308], "abstract": [13, 23, 28, 257, 261, 273, 275, 284, 290, 294], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 26], "name1": [13, 17, 22, 151], "name2": [13, 17, 22, 151], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 294, 296], "cov": [14, 15, 26, 36, 37, 39, 53, 60, 61, 63, 65, 66, 159, 172, 181, 182, 240, 273, 274, 279, 286, 287, 294, 296], "evalu": [14, 39, 83, 84, 85, 86, 87, 88, 181, 182, 240, 251, 272, 274, 290, 294, 296, 301, 304, 307], "maximum_evalu": [14, 286, 294, 296], "laplac": [14, 39, 181, 182, 274, 276, 286, 294, 296], "isampl": [14, 39, 49, 181, 274, 286, 294, 296], "niter": [14, 39, 49, 181, 274, 286, 294, 296], "auto": [14, 15, 274, 286, 294, 296], "keep_every_nth_it": [14, 15, 274, 286, 294, 296], "residu": [14, 26, 88, 124, 227, 228, 249, 274, 305, 307, 308], "solver": [14, 192, 240, 274, 276, 308], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 39, 49, 181, 294, 296, 308], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 37, 40, 73, 79, 258, 259, 276, 278, 279, 281, 284, 292, 294, 296, 300], "uncertainti": [14, 60, 61, 63, 171, 172, 173, 274, 276, 287, 295], "sandwich": [14, 15, 36, 181, 182, 294], "cross": [14, 292], "product": [14, 277, 286, 292], "gradient": [14, 57, 58, 83, 84, 274], "fim": 14, "epsilon": [14, 26, 57, 58, 83, 84, 154, 185, 194, 201, 208, 219, 274, 276, 284, 296], "calcul": [14, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 85, 99, 230, 272, 273, 274, 287, 289, 290, 291, 297], "deriv": [14, 126, 274, 279, 281, 296], "eta": [14, 26, 29, 40, 42, 57, 58, 59, 61, 76, 83, 84, 86, 148, 152, 153, 154, 157, 163, 164, 185, 207, 209, 210, 211, 274, 276, 284, 287, 289, 291, 294, 298, 304, 308], "preserv": [14, 26, 292], "comput": [14, 279, 280, 281, 292], "sampl": [14, 26, 77, 170, 171, 172, 173, 287], "similar": [14, 272, 286, 292, 297, 305], "em": 14, "result": [14, 18, 26, 52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 76, 83, 84, 85, 86, 87, 88, 171, 172, 173, 217, 218, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 261, 263, 266, 274, 277, 279, 290, 292, 298, 300, 301, 303, 309], "everi": [14, 283, 292], "nth": 14, "iter": [14, 15, 29, 60, 149, 170, 172, 245, 274, 296, 302, 305], "laplacian": 14, "solv": [14, 274], "advan": [14, 192, 274, 296], "cvode": [14, 192, 276], "advan14": [14, 192, 276], "dgear": [14, 192, 276], "advan8": [14, 192, 276], "dverk": [14, 192, 276], "advan6": [14, 192, 276], "ida": [14, 192, 276], "advan15": [14, 192, 276], "lsoda": [14, 192, 276, 286], "advan13": [14, 192, 276, 296], "lsodi": [14, 192, 276, 286], "advan9": [14, 192, 276], "absolut": [14, 70, 274, 292], "toler": 14, "supported_cov": 14, "frozenset": 14, "cpg": 14, "ofim": 14, "supported_method": [14, 286], "bay": [14, 181, 182, 276], "imp": [14, 39, 181, 182, 240, 274, 276, 286, 296], "impmap": [14, 39, 181, 182, 274, 276], "saem": [14, 39, 181, 182, 240, 274, 276], "supported_solv": [14, 286], "to_datafram": [15, 25, 256], "overview": [15, 256, 272, 276, 285, 294, 306], "estimation_step": [15, 18, 36, 39, 49, 159, 162, 181, 182, 274, 294, 296], "doctest": 15, "ellipsi": 15, "durat": [16, 196, 202, 296], "mutual": [16, 291, 308], "exclus": [16, 292, 308], "d1": [16, 196, 202, 274, 296], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 26, 42, 76, 207, 287, 291, 296], "omega_cl": [17, 22, 26], "omega_v": [17, 26], "corr_cl_v": [17, 26], "omega_cl_v": [17, 26], "dist": [17, 22, 26, 274, 279, 294], "iiv_cl": [17, 22, 26, 296, 298], "iiv_v": [17, 26], "itself": [17, 22, 292], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 26], "random_vari": [18, 76, 207, 294, 296, 310], "dependent_vari": [18, 274, 294], "y": [18, 25, 29, 72, 104, 126, 128, 146, 153, 154, 157, 161, 174, 176, 185, 194, 195, 197, 208, 219, 294, 296, 298], "observation_transform": [18, 274], "estimationstep": [18, 36, 39, 159, 181, 182, 274, 286, 294], "modelfit_result": [18, 228, 251, 274], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 279, 294, 298, 301], "map": [18, 32, 283], "discript": 18, "extens": [18, 253, 255, 283, 292, 294], "model_cod": [18, 274], "modelfit": [18, 225, 243, 251, 253, 257, 258, 272, 274, 276, 309], "parent": [18, 249, 250, 263, 286], "randomvari": [18, 274, 294], "likelihood": [18, 51, 52, 239, 245, 276, 305], "2ll": [18, 51, 52, 274], "log": [18, 37, 38, 40, 52, 148, 174, 176, 178, 179, 195, 274, 283, 287], "record": [18, 83, 84, 85, 86, 87, 88, 89, 149, 166, 274, 279, 298], "would": [18, 31, 148, 272, 281, 287, 292, 296, 298, 301], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 274, 290, 298, 300, 301, 308], "parse_model_from_str": 18, "update_sourc": [18, 274, 298], "g": [18, 26, 72, 78, 164, 244, 274, 279, 283, 286, 287, 289, 291, 297, 301, 305, 308], "dummypath": [18, 296], "write_fil": 18, "forc": [18, 26, 78, 172, 173, 217, 220, 221, 274, 276, 291, 292], "write": [18, 220, 221, 252, 274, 279, 281, 292, 300, 309], "extern": [18, 231, 279, 283, 284, 288, 300, 301], "msg": 20, "syntax": [20, 308], "normal": [22, 26, 31, 42, 62, 68, 148, 287, 291, 292], "init": [24, 25, 37, 47, 94, 187, 216, 218, 276, 287, 294], "inf": [24, 296], "param": [24, 276], "tvcl": [24, 29, 34, 40, 42, 72, 85, 128, 146, 147, 148, 153, 154, 163, 272, 287, 294, 296, 298], "005": 24, "boolean": [24, 25, 89, 93, 94, 170, 179, 185, 215, 216, 226, 227, 228, 283], "constrain": [24, 284, 294], "unfix": [24, 92, 93, 94, 187, 213, 215, 216, 274], "back": [24, 68, 274], "previou": [24, 26, 29, 43, 76, 102, 128, 183, 196, 199, 202, 237, 250, 266, 274, 276, 292, 297], "less": 24, "greater": 24, "altern": [24, 210, 279, 292], "constructor": [24, 274], "collect": [25, 26, 287, 292, 308], "usual": [25, 279], "wai": [25, 132, 135, 136, 142, 208, 279, 283, 286, 292, 294, 308, 310], "displai": [25, 80, 174, 287, 292], "summar": [25, 248, 250, 251, 287, 293], "par1": 25, "par2": 25, "pset": 25, "fixed": [25, 92], "nonfix": 25, "set_fix": 25, "set_initial_estim": [25, 274, 296], "eta_level": 26, "epsilon_level": 26, "act": [26, 180], "while": [26, 279, 296, 308, 310], "variabilityhierarchi": 26, "contin": 26, "hierarchi": [26, 30], "rv": [26, 76, 123, 168, 207, 294, 310], "normaldistribut": [26, 294], "covariance_matrix": [26, 53, 60, 63, 65, 66, 172, 272, 274, 295], "nrv": 26, "variance_paramet": 26, "rv1": 26, "rv2": 26, "get_rvs_with_same_dist": 26, "join": [26, 207, 274, 277], "ind": 26, "fill": 26, "name_templ": 26, "param_nam": 26, "taken": [26, 89, 96, 101, 212, 253, 283, 287], "remain": [26, 277, 292], "templat": [26, 37, 40, 75, 278], "overrid": [26, 274, 278, 308], "dist1": 26, "dist2": 26, "_": [26, 250, 273, 287], "unjoin": 26, "nearest_valid_paramet": 26, "parameter_valu": 26, "small": 26, "parameters_sdcorr": 26, "sd": [26, 59, 296, 304, 307], "corr": [26, 55, 64, 304], "assum": [26, 44, 253, 274, 287, 292, 298], "var": [26, 61, 287], "replace_with_sympy_rv": 26, "stat": [26, 29, 308], "std": [26, 296], "rng": [26, 60, 63, 77, 171, 172, 173], "jointnormaldistribut": [26, 294], "validate_paramet": 26, "seri": [26, 55, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 85, 86, 87, 88, 95, 98, 102, 103, 105, 111, 116, 118, 151, 152, 172, 173, 174, 210, 218, 274, 295], "current": [26, 39, 40, 57, 58, 72, 73, 83, 84, 86, 87, 88, 108, 117, 122, 141, 146, 175, 181, 182, 196, 206, 208, 212, 225, 230, 239, 243, 246, 257, 263, 273, 274, 276, 279, 281, 282, 287, 288, 290, 291, 292, 293, 294, 297, 300, 301, 302, 304, 305, 306, 307, 308], "matric": [26, 61, 173, 274, 284, 295], "semidefinit": [26, 274, 284], "use_cach": 26, "symengin": [26, 284, 301], "cach": 26, "__version__": 27, "get_and_reset_index": 27, "attr": 27, "wrapper": [27, 274, 279, 284, 288, 310], "reset": [27, 212, 274], "facilit": 27, "multiindex": [27, 274], "to_csv": 27, "save": [27, 252, 274], "readabl": [27, 255, 257, 283, 292, 301], "print": [27, 69, 153, 154, 229, 274, 296], "lzma": [27, 252], "serial": [27, 274, 283, 301], "compress": [27, 252], "unless": [27, 29, 292], "signific": [29, 71, 241, 242, 244, 274, 292, 306], "after_od": [29, 195], "s\u2081": [29, 34, 72, 128, 146, 147, 148, 154, 195, 294], "eps\u2081": [29, 72, 117, 128, 146, 154, 161, 174, 185, 194, 197, 208, 219, 294], "ipr": [29, 72, 86, 128, 146, 153, 154, 194, 195, 274, 294, 295, 296, 307], "ir": [29, 72, 128, 146, 153, 154, 195, 294, 296], "iwr": [29, 72, 128, 146, 153, 154, 195, 294, 296], "before_od": [29, 34, 37, 147, 148, 209, 210, 211], "btime": [29, 34, 72, 128, 146, 147, 148, 153, 154, 294, 296], "tad": [29, 34, 48, 72, 128, 146, 147, 148, 153, 154, 274, 294, 296, 304], "ptvcl": [29, 34, 37, 47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 92, 93, 94, 125, 128, 146, 147, 148, 153, 154, 172, 173, 187, 188, 200, 205, 209, 210, 211, 213, 215, 216, 218, 225, 294, 295, 296], "tvv": [29, 34, 72, 128, 146, 147, 148, 153, 154, 163, 272, 287, 294, 296, 298], "ptvv": [29, 34, 47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 72, 125, 128, 146, 147, 148, 153, 154, 172, 173, 215, 216, 218, 225, 294, 295, 296], "theta\u2083": [29, 34, 72, 128, 146, 147, 148, 154, 294], "eta\u2081": [29, 34, 72, 76, 117, 128, 146, 147, 148, 154, 207, 294], "\u212f": [29, 34, 46, 72, 128, 146, 147, 148, 185, 294, 296], "eta\u2082": [29, 34, 72, 76, 117, 128, 146, 147, 148, 154, 207, 294], "whole": [29, 276, 283, 292, 308], "s1": [29, 139, 153, 296, 298], "symbol_or_stat": 29, "direct_depend": 29, "direct": [29, 262, 281, 292, 306], "find_assign": [29, 40, 41, 42, 46, 161, 163, 174, 176, 178, 185, 194, 197, 208, 219], "find_assignment_index": 29, "full_express": [29, 37, 209, 210, 211], "expand": [29, 89], "full": [29, 76, 108, 117, 122, 198, 273, 274, 276, 278, 287, 291, 292, 297, 304], "eta_1": [29, 37, 57, 59, 61, 76, 108, 123, 148, 171, 207, 209, 210, 211, 287, 294, 295, 296], "reassign": 29, "sypmpi": 29, "remove_symbol_definit": 29, "elsewher": 29, "longer": [29, 274], "make": [29, 72, 147, 161, 169, 170, 239, 274, 284, 291, 292, 294, 297, 308, 310], "sure": [29, 169, 274, 292, 297, 310], "func": [32, 260], "presenc": 33, "correctli": [33, 274], "get_admid": 33, "get_cmt": [33, 274, 296], "p": [34, 230, 239, 245, 272, 273, 274, 276, 281, 287, 296, 305, 306], "allometri": [34, 236, 237, 274, 308], "allo_cl": 34, "allo_v": 34, "add_paramet": [35, 274], "remove_bioavail": [35, 274], "set_estimation_step": [36, 39, 49, 159, 162, 182, 274, 296, 310], "add_estimation_step": [36, 49, 159, 162, 181, 182, 274, 296], "remove_estimation_step": [36, 39, 49, 159, 181, 182, 296], "append_estimation_step_opt": [36, 39, 159, 162, 181, 182, 274, 296], "remove_covariance_step": [36, 39, 49, 162, 181, 182, 274, 296], "set_evaluation_step": [36, 39, 49, 159, 162, 181, 296], "allow_nest": [37, 274], "linear": [37, 38, 120, 133, 134, 143, 178, 272, 273, 274, 284, 294, 296, 301, 303], "lin": 37, "coveff": [37, 78], "median": [37, 60, 63, 272, 274, 296, 301], "001": [37, 71, 218, 296, 306], "equal": [37, 42, 170, 185, 276, 279], "minimum": [37, 284], "000": [37, 295], "frac": [37, 38, 174, 176, 178, 273, 294, 296, 307], "min": [37, 174, 176, 272, 296], "piecewis": [37, 274], "hockei": 37, "stick": 37, "piece_lin": 37, "theta1": [37, 296], "theta2": [37, 296], "pow": [37, 296], "mai": [37, 289, 291, 292, 296, 297, 308], "abbrevi": [37, 40, 274, 276, 279, 298], "multipli": [37, 40, 185, 272, 276, 296], "alreadi": [37, 75, 180, 186, 204, 274, 276, 279, 291, 292], "pop_clapgr": 37, "implement": [38, 178, 253, 255, 257, 258, 292, 294, 301, 308], "baselin": [38, 96, 101, 145, 178, 274, 287], "e_0": [38, 178], "cdot": [38, 45, 167, 178, 287, 294, 296], "emax": [38, 178], "e_": [38, 178], "ec_": [38, 178], "50": [38, 61, 96, 101, 116, 178, 228, 272, 273, 293, 295, 296, 297, 302, 304, 307], "biggl": [38, 178], "lbrace": [38, 178], "quad": [38, 178], "atop": [38, 178], "els": [38, 69, 178, 274, 296], "sigmoid": [38, 178], "m": [38, 178, 305], "c_0": [38, 178], "loglin": [38, 178], "a_effect": 38, "ke0": 38, "idx": [39, 49, 162, 181, 182, 310], "argument": [39, 83, 84, 86, 87, 88, 181, 223, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 260, 274, 276, 308, 310], "pass": [39, 77, 181, 223, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 263, 292], "opt": [39, 49, 181, 278], "1000": [39, 49, 85, 181, 287], "len": [39, 49, 162, 166], "add_covariance_step": [39, 49, 159, 162, 181, 182, 274, 296], "initial_estim": [40, 46], "09": [40, 46, 176, 185, 195, 281, 289, 296, 297, 298, 302], "eta_nam": [40, 42, 185, 276], "prop": [40, 296], "logit": 40, "user": [40, 100, 274, 283, 284, 289, 291, 292, 294, 295, 296, 297, 298], "remove_iiv": [40, 42, 46, 164, 274, 296, 298], "add_pk_iiv": [40, 42, 163, 164, 274, 296, 297], "add_iov": [40, 46, 163, 164, 274, 296], "remove_iov": [40, 42, 46, 163, 274, 296], "pop_ka": [41, 47], "occ": [42, 242, 276, 281, 291], "disjoint": [42, 291], "accept": [42, 114, 115, 116, 276, 292], "explicit": [42, 274, 276, 277, 291, 308], "copi": [42, 119, 124, 125, 274, 289, 291, 292, 296, 308], "add_iiv": [42, 46, 163, 164, 274, 296, 298], "set_transit_compart": [43, 165, 274, 296], "remove_lag_tim": [43, 274, 296], "drug_dvid": 44, "metabolit": 44, "unidirect": 44, "parameter": 45, "qpn": 45, "vpn": 45, "volumn": 45, "mathsf": [45, 167], "qp1": [45, 167, 274, 296], "vp1": [45, 167, 296], "qp2": [45, 167, 274], "vp2": [45, 167], "peripheral1": [45, 167, 193, 296], "v1": [45, 167, 193, 296], "v2": [45, 167, 193, 296], "set_peripheral_compart": [45, 167, 274, 296], "remove_peripheral_compart": [45, 193, 274, 296], "Will": [46, 253, 254, 255], "pop_mat": [46, 296, 298], "eta_mat": [46, 296], "004693": [47, 62, 125, 287, 294], "1000000": [47, 92, 93, 94, 125, 187, 188, 213, 216, 294], "009160": [47, 125, 294], "theta_3": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 125, 172, 173, 215, 216, 218, 225, 294, 295, 296], "100000": [47, 125, 286, 294, 296], "99": [47, 125, 153, 218, 272, 274, 281, 294, 296], "ivcl": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 76, 119, 153, 154, 172, 173, 207, 216, 218, 225, 272, 287, 294, 295, 296, 298], "030963": [47, 119, 287, 294], "ivv": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 70, 71, 76, 119, 153, 154, 172, 173, 207, 216, 218, 225, 272, 287, 294, 295, 296], "031128": [47, 119, 153, 218, 287, 294, 296, 298], "sigma_1_1": [47, 53, 54, 55, 56, 62, 64, 65, 66, 67, 71, 124, 172, 173, 216, 218, 225, 294, 295, 296], "013241": [47, 124, 153, 218, 225, 287, 294, 295, 296], "append": [49, 274], "increas": [50, 279], "until": [50, 251, 292, 310], "do": [50, 172, 272, 274, 276, 287, 292, 298, 305, 310], "noth": [50, 166, 292], "next": [50, 274, 292, 296, 297, 298, 305], "run2": [50, 191, 296], "run3": [50, 296], "n_estimated_paramet": [51, 52], "fit": [51, 52, 152, 208, 229, 243, 249, 251, 257, 274, 292, 294, 296, 305, 309, 310], "variat": 52, "n_random_paramet": 52, "n_individu": 52, "n_fixed_paramet": 52, "n_observ": 52, "n_individ": 52, "n_estimated_iiv_omega_paramet": 52, "load_example_modelfit_result": [52, 53, 54, 55, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 83, 84, 85, 86, 87, 88, 171, 172, 173, 217, 218, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 274], "611": 52, "7071686183284": 52, "616": [52, 274, 295], "536606983396": 52, "610": 52, "7412809453149": 52, "594": 52, "431131169692": 52, "411510e": [53, 56, 65, 66, 295], "08": [53, 55, 56, 65, 66, 281, 295], "010000e": [53, 56, 65, 66, 295], "000002": [53, 55, 56, 65, 66, 295], "538630e": [53, 55, 56, 65, 66, 295], "07": [53, 54, 55, 56, 64, 65, 66, 67, 272, 281, 289, 291, 295, 304, 306], "178090e": [53, 56, 65, 66, 295], "233530e": [53, 56, 65, 66, 295], "04": [53, 54, 55, 56, 64, 65, 66, 67, 272, 281, 291, 295, 304, 306], "000804": [53, 55, 56, 65, 66, 281, 295], "000050": [53, 55, 56, 65, 66, 272, 295], "171840e": [53, 56, 65, 66, 295], "461760e": [53, 56, 65, 66, 295], "665010e": [53, 56, 65, 66, 295], "040250e": [53, 56, 65, 66, 295], "007016": [53, 55, 56, 65, 66, 295], "000108": [53, 55, 56, 65, 66, 295], "944800e": [53, 56, 65, 66, 295], "932950e": [53, 56, 65, 66, 295], "093430e": [53, 56, 65, 66, 295], "981380e": [53, 55, 56, 65, 66, 295], "000180": [53, 55, 56, 65, 66, 295], "856650e": [53, 56, 65, 66, 295], "867230e": [53, 56, 65, 66, 295], "000039": [53, 55, 56, 65, 66, 295], "000019": [53, 55, 56, 65, 66, 295], "589820e": [53, 55, 56, 65, 66, 295], "685650e": [53, 56, 65, 66, 295], "000029": [53, 55, 56, 65, 66, 295], "000005": [53, 55, 56, 65, 66, 295], "195640e": [53, 56, 65, 66, 295], "007099": [53, 54, 55, 64, 295], "094640": [53, 54, 55, 64, 295], "388059": [53, 54, 55, 64, 70], "097981": [53, 54, 55, 64, 295], "170820": [53, 54, 55, 64, 295], "356899": [53, 54, 55, 64, 70], "138062": [53, 54, 55, 64, 295], "356662": [53, 54, 55, 64, 70, 295], "238441": [53, 54, 55, 64], "096515": [53, 54, 55, 64], "062991": [53, 54, 55, 64, 295], "153616": [53, 54, 55, 64, 295], "185111": [53, 54, 55, 64, 295], "159170": [53, 54, 55, 64, 295], "027495": [53, 54, 55, 64, 295], "calculate_se_from_cov": [53, 54, 55, 56, 64, 65, 67, 274], "calculate_se_from_prec": [53, 54, 55, 56, 64, 65, 66], "precis": [53, 54, 55, 56, 64, 65, 66, 67, 274, 292], "calculate_cov_from_prec": [53, 54, 55, 64, 65, 66, 67], "calculate_cov_from_corrs": [53, 54, 56, 64, 65, 66, 67, 274], "calculate_prec_from_cov": [53, 54, 55, 56, 64, 66, 67], "calculate_prec_from_corrs": [53, 54, 55, 56, 65, 66, 67], "calculate_corr_from_prec": [53, 55, 56, 64, 65, 66, 67], "precision_matrix": [54, 56, 67, 295], "prec": [54, 56, 67], "995567e": [54, 56, 65, 67], "22660": [54, 56, 64, 65, 67, 295], "028196": [54, 56, 65, 67], "16057": [54, 56, 64, 65, 67, 295], "855248": [54, 56, 65, 67], "203511": [54, 56, 64, 65, 67, 295], "614428": [54, 56, 65, 67], "39474": [54, 56, 64, 65, 67, 295], "250514": [54, 56, 65, 67], "820118": [54, 56, 65, 67], "299536": [54, 56, 65, 67], "266003e": [54, 56, 65, 67], "2129": [54, 56, 64, 65, 67, 295], "904642": [54, 56, 65, 67], "260": [54, 56, 64, 65, 67, 295], "176234": [54, 56, 65, 67], "375": [54, 56, 64, 65, 67, 295], "266233": [54, 56, 65, 67], "2800": [54, 56, 64, 65, 67, 295], "816246": [54, 56, 65, 67], "7718": [54, 56, 64, 65, 67, 295], "769557": [54, 56, 65, 67], "605786e": [54, 56, 65, 67], "187": [54, 56, 64, 65, 67, 295], "038903": [54, 56, 65, 67], "177": [54, 56, 64, 65, 67, 274, 295, 306], "207683": [54, 56, 65, 67], "205": [54, 56, 64, 65, 67, 295], "808480": [54, 56, 65, 67], "2225": [54, 56, 64, 65, 67, 295], "150449": [54, 56, 65, 67], "035116e": [54, 56, 65, 67], "7527": [54, 56, 64, 65, 67, 295], "530027": [54, 56, 65, 67], "2462": [54, 56, 64, 65, 67, 295], "974821": [54, 56, 65, 67], "9977": [54, 56, 64, 65, 67, 295], "488860": [54, 56, 65, 67], "947425e": [54, 56, 65, 67], "22343": [54, 56, 64, 65, 67, 295], "198618": [54, 56, 65, 67], "9370": [54, 56, 64, 65, 67, 295], "758371": [54, 56, 65, 67], "201183e": [54, 56, 65, 67], "249847": [54, 56, 65, 67, 295], "177845": [54, 56, 65, 67], "calculate_corr_from_cov": [54, 55, 56, 64, 65, 66, 67, 274], "se": [55, 64, 280, 281, 295], "correlation_matrix": [55, 64, 70, 295], "standard_error": [55, 64, 295], "411512e": 55, "009998e": 55, "178111e": 55, "233518e": 55, "171834e": 55, "461762e": 55, "665011e": 55, "040245e": 55, "944801e": 55, "932957e": 55, "093431e": 55, "856651e": 55, "867245e": 55, "685661e": 55, "195664e": 55, "pheno_linear": [57, 58, 83, 84, 86, 87, 88, 108, 117, 122, 143, 146, 225, 230], "d_eps1": [57, 117], "d_epseta1_1": [57, 117], "oeta1": [57, 108, 122], "d_epseta1_2": [57, 117], "eta_2": [57, 59, 61, 76, 108, 171, 207, 295, 296], "oeta2": [57, 108, 122], "calculate_eta_gradient_express": [57, 274], "d_eta1": [58, 108, 117, 122], "d_eta2": [58, 108, 117, 122], "calculate_epsilon_gradient_express": [58, 274], "parameter_estim": [59, 60, 61, 63, 71, 85, 87, 88, 152, 172, 173, 218, 225, 272, 274, 294, 295], "individual_estim": [59, 76, 83, 84, 86, 152, 171, 217, 274, 295], "shrinkag": [59, 61], "deviat": [59, 219, 272, 287, 293, 295, 296, 304, 307], "pe": [59, 60, 61, 63, 85, 87, 172, 173], "ie": [59, 171, 217], "720481": 59, "240295": 59, "471305": 59, "128389": 59, "calculate_individual_shrinkag": [59, 274], "expr_or_expr": 60, "expect": [60, 63, 277, 278, 292, 304], "arbitrari": [60, 63], "solut": [60, 206], "th": [60, 273, 287], "95": [60, 272, 287], "percentil": [60, 272, 287], "previous": [60, 63, 150, 152, 274, 298], "seed": [60, 63, 77, 171, 173, 276], "create_rng": [60, 63, 171, 172, 173], "k": [60, 273, 274, 279, 281, 287], "stderr": [60, 63, 272, 308], "p5": [60, 63, 287], "004234": [60, 63], "001138": [60, 63], "004907": [60, 63], "001247": [60, 63], "p95": [60, 63, 287], "individual_estimates_covari": [61, 171, 274, 295], "ieta_shr": 61, "847789": 61, "256473": 61, "796643": 61, "210669": 61, "755025": 61, "226957": 61, "764541": 61, "216405": 61, "816192": 61, "203974": 61, "778108": 61, "210992": 61, "659420": 61, "236875": 61, "668551": 61, "240097": 61, "260056": 61, "200374": 61, "725190": 61, "226563": 61, "972110": 61, "421852": 61, "249640": 61, "254119": 61, "730294": 61, "364932": 61, "165785": 61, "194464": 61, "813399": 61, "313554": 61, "797328": 61, "213211": 61, "769059": 61, "278079": 61, "098506": 61, "176778": 61, "749022": 61, "235386": 61, "742181": 61, "222932": 61, "317956": 61, "264473": 61, "943950": 61, "232732": 61, "707183": 61, "259077": 61, "553787": 61, "247717": 61, "826349": 61, "114302": 61, "854777": 61, "341384": 61, "820829": 61, "263235": 61, "999942": 61, "319986": 61, "967084": 61, "432760": 61, "404773": 61, "325215": 61, "999980": 61, "318421": 61, "925283": 61, "167667": 61, "913706": 61, "242106": 61, "875554": 61, "249197": 61, "35": [61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 305, 307], "849135": 61, "294294": 61, "172206": [61, 307], "246422": 61, "747380": 61, "278340": 61, "187440": 61, "231249": 61, "237805": 61, "254485": 61, "999925": 61, "189793": 61, "41": [61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 304, 307], "941906": 61, "170998": 61, "42": [61, 63, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 297, 306, 307], "923801": 61, "244046": 61, "43": [61, 96, 101, 116, 228, 272, 273, 281, 286, 293, 295, 296, 306, 307], "999928": 61, "320403": 61, "237637": 61, "260453": 61, "869540": 61, "194503": 61, "46": [61, 96, 101, 116, 228, 272, 273, 286, 293, 295, 296, 307], "999949": 61, "319750": 61, "983782": 61, "393234": 61, "48": [61, 96, 101, 103, 116, 228, 272, 273, 281, 293, 295, 296, 305, 306, 307], "698267": 61, "169337": 61, "49": [61, 96, 101, 116, 228, 272, 273, 293, 295, 296, 307], "776674": 61, "214962": 61, "688847": 61, "192608": 61, "822213": 61, "202534": 61, "511489": 61, "273601": 61, "53": [61, 96, 101, 116, 228, 272, 273, 281, 293, 295, 296, 302, 304, 307], "964757": 61, "223448": 61, "762153": 61, "181648": 61, "965657": 61, "435741": 61, "995278": 61, "354798": 61, "813382": 61, "263372": 61, "727295": 61, "232867": 61, "738777": 61, "224742": 61, "calculate_eta_shrinkag": [61, 274], "ucp": [62, 68], "ucpscal": [62, 68], "calculate_ucp_scal": [62, 274], "00916": [62, 153, 218, 287, 294, 296, 298], "0309626": [62, 153, 218, 294, 296, 298], "031127999999999996": 62, "013241000000000001": 62, "convers": [62, 274, 290], "pharmacokinet": [63, 208, 296], "pre": 63, "t_half_elim": 63, "173": 63, "337164": 63, "1769": 63, "493756": 63, "843398": 63, "149": [63, 291], "567842": 63, "1317": [63, 281], "474199": 63, "233070": 63, "k_e": 63, "calculate_individual_parameter_statist": [63, 274], "995565e": 64, "041788": 64, "848052": 64, "410335": 64, "240358": 64, "820116": [64, 295], "179011": 64, "266004e": 64, "908225": 64, "176399": 64, "266263": 64, "818557": 64, "757955": 64, "605785e": 64, "038825": 64, "207512": 64, "808434": 64, "144772": 64, "035114e": 64, "518562": 64, "972906": 64, "457873": 64, "947424e": 64, "197906": 64, "736254": 64, "201162e": 64, "249846": 64, "006431": 64, "000210": [66, 67, 295], "026895": [66, 67, 295], "083762": [66, 67, 295], "013415": [66, 67, 295], "007477": [66, 67, 295], "002279": [66, 67, 295], "unconstrain": 68, "calculate_parameters_from_ucp": [68, 274], "verbos": 69, "consist": [69, 281, 292, 308], "across": [69, 274, 292], "consol": 69, "fail": [69, 274, 292, 301], "cor": [70, 279], "highli": 70, "high": [70, 283, 284, 301], "zero_limit": 71, "significant_digit": [71, 274], "close": [71, 218, 274, 287, 292, 293], "distanc": [71, 79, 307], "logic": 71, "cleanup": 72, "what": [72, 292, 298, 301], "inlin": 72, "clean": 72, "might": [72, 292, 301, 308, 310], "certain": [72, 104, 149, 274, 278, 291, 292, 300, 308], "requir": [72, 274, 276, 281, 288, 292, 304], "to_format": 73, "inplac": 73, "nlmixr": [73, 243, 274, 279, 295, 296], "rxode": [73, 274, 295], "underli": [73, 112, 153, 294], "converted_model": 73, "applic": [74, 252, 266, 292, 301, 308], "config": [75, 100, 274, 278, 279, 299], "configur": [75, 274, 288, 295, 298, 308, 309], "overwritten": [75, 253], "block": [76, 163, 194, 274, 276, 287, 289, 296, 297, 304, 308], "iiv_cl_iiv_v": [76, 207], "split_joint_distribut": [76, 274, 296], "through": [77, 276, 277, 278, 281, 292, 294, 296, 308], "numpi": [77, 283, 284, 294], "standard_norm": 77, "5532605888887387": 77, "stem": 78, "force_numb": 78, "coveff1": 78, "temp": 78, "temp1": 78, "cl1": 78, "df": [79, 84, 250, 274, 283, 302, 304], "date_column": 79, "deidentifi": [79, 274], "year": [79, 274, 279, 292], "earliest": 79, "maintain": [79, 277, 279, 280, 290, 292, 300, 301], "leap": 79, "1901": 79, "1902": 79, "1903": 79, "1904": 79, "closest": 79, "preceed": 79, "ordinari": [80, 294], "differenti": [80, 294], "odedisplay": 80, "display": 80, "dt": [80, 296], "column_nam": [81, 214], "mark": [81, 82, 89, 214, 276, 292], "drop_dropped_column": [81, 214, 274, 296], "undrop_column": [81, 274, 296], "undrop": [81, 214], "drop_column": [82, 214, 274, 296], "them": [82, 170, 277, 289, 291, 292, 297, 298, 305, 308], "dy": 83, "deps_1": 83, "771084": [83, 86], "881859": [83, 86], "441728": [83, 86], "113050": [83, 86], "783055": [83, 86], "150": [83, 84, 86, 87, 88, 295], "375041": [83, 86], "833395": [83, 86], "152": [83, 84, 86, 87, 88], "876707": [83, 86], "153": [83, 84, 86, 87, 88, 282], "905095": [83, 86], "154": [83, 84, 86, 87, 88], "099690": [83, 86], "155": [83, 84, 86, 87, 88, 115, 118, 295, 296], "evaluate_eta_gradi": [83, 274], "deta_1": 84, "deta_2": 84, "159537": 84, "609116": 84, "325893": 84, "562289": 84, "104417": 84, "346161": 84, "452951": 84, "682310": 84, "838840": 84, "981836": 84, "424423": 84, "973013": 84, "497185": 84, "344797": 84, "198714": 84, "697161": 84, "987731": 84, "941806": 84, "817067": 84, "309945": 84, "evaluate_epsilon_gradi": [84, 274], "573770": 85, "739": [85, 102, 283, 296], "165105": 85, "741": [85, 102, 272, 283, 296], "742": [85, 102, 272, 283, 296], "743": [85, 102, 283, 296], "evaluate_population_predict": [86, 274], "529739": 87, "179910": [87, 293], "688648": 87, "798916": 87, "023225": 87, "459036": 87, "223295": 87, "217288": 87, "472888": 87, "226455": 87, "evaluate_individual_predict": [87, 274], "wre": [88, 274], "313859": 88, "675721": 88, "544240": 88, "921720": 88, "517677": 88, "223935": 88, "053334": 88, "007023": 88, "931252": 88, "778389": 88, "flag": [89, 274, 296, 307, 308], "origin": [89, 220, 253, 257, 258, 272, 273, 277, 279, 287, 292, 307], "care": [89, 253], "00469307": [92, 93, 94, 153, 188, 200, 213, 218, 294, 296, 298], "fix_paramet": [92, 94, 215, 216, 296], "unfix_paramat": [92, 93, 94, 216], "fix_paramaters_to": [92, 216], "unfix_paramaters_to": [92, 93, 94, 187, 215], "fix_or_unfix_paramet": [93, 94, 215, 216, 296], "fix_parameters_to": [93, 187, 215, 296], "present": [95, 98, 105, 276, 283, 287, 292, 308], "extract": [95, 98, 105, 274, 276, 290, 294], "directli": [99, 253, 257, 258, 274, 276, 284, 292, 294, 296, 301, 308], "cmax": [99, 274, 296], "tmax": [99, 274, 296], "cmin": [99, 274, 296], "tmin": [99, 274, 296], "doseid": [99, 102, 296], "589": [99, 103, 296], "get_baselin": [101, 274, 296], "set_covari": [101, 296], "period": [102, 296], "108": [103, 283, 295, 296], "132": [103, 283, 295, 296, 302], "144": [103, 283, 295, 296, 306], "retriev": [106, 107, 114, 115, 120, 121, 123, 234, 235, 253, 257, 258, 274, 294, 295, 296, 309], "get_pk_paramet": [107, 120, 123, 274], "get_rv_paramet": [107, 121, 139, 274], "has_random_effect": [107, 123, 274], "opr": [108, 117, 122], "get_population_prediction_express": [108, 274], "epress": [108, 122], "condit": [109, 186, 274, 287, 292, 305], "item": [113, 278, 292], "activ": [114, 115, 116, 292], "get_number_of_observ": [114, 118, 274, 296], "get_number_of_observations_per_individu": [114, 115, 118, 274, 296], "total": [115, 274, 296], "get_number_of_individu": [115, 116, 274, 296], "observation_count": 116, "accord": [117, 274, 292, 297, 308], "oeta\u2082": 117, "oeta\u2081": 117, "135": [118, 295, 296, 302, 304], "131": [118, 295, 296], "146": [118, 281, 283, 291, 295, 296], "get_theta": [119, 124, 274], "get_sigma": [119, 125, 274], "set_direct_effect": [120, 274], "e0": 120, "get_individual_paramet": [121, 123, 139, 274], "get_individual_prediction_express": [122, 274], "get_omega": [124, 125, 274], "structur": [125, 237, 255, 274, 276, 283, 291, 294, 297, 308], "00": [125, 287, 294, 295, 296, 302, 304, 306, 308], "olumn": 126, "milligram": [126, 283], "liter": [126, 283], "kilogram": [126, 283], "named_subscript": 128, "greek": 128, "subscript": 128, "cleanup_model": [128, 274], "\u03b8\u2081": 128, "\u03b8\u2082": 128, "\u03b8\u2083": 128, "\u03b7\u2081": 128, "\u03b7\u2082": 128, "\u03b5\u2081": 128, "mani": [129, 130, 138, 172, 274, 296], "has_proportional_error_model": [129, 130, 140, 274], "has_combined_error_model": [129, 138, 140, 274], "has_weighted_error_model": [129, 130, 138, 274], "has_additive_error_model": [130, 138, 140, 274], "reli": [132, 135, 136, 142, 292], "heurist": [132, 135, 136, 142], "abl": [132, 135, 136, 142, 274, 286, 288, 300, 301], "detect": [132, 135, 136, 142, 274, 288, 294, 300, 310], "has_od": [133, 134, 274], "has_linear_odes_with_real_eigenvalu": [133, 137, 274], "eigenvalu": 134, "has_linear_od": [134, 137, 274], "micha": [135, 136, 189, 190, 276, 308], "menten": [135, 136, 189, 190, 276, 308], "set_michaelis_menten_elimin": [135, 184, 190, 203, 274, 296], "michali": 136, "set_mixed_mm_fo_elimin": [136, 296], "set_zero_order_elimin": [142, 184, 189, 190, 274, 296], "determin": [143, 144, 170, 289, 291, 292, 297], "model1": [143, 274], "model2": 143, "constraint": [144, 188, 200, 205, 213, 215, 274, 284, 301], "get_covariate_baselin": [145, 274, 296], "load": [146, 225, 288], "statment": 147, "mu": [148, 287], "referenc": 148, "theta_1": [148, 294], "mu_1": [148, 287], "\u03bc\u2081": 148, "\u03bc\u2082": 148, "dataset_or_model": [149, 170], "name_pattern": [149, 170], "omitted_": 149, "omiss": 149, "omit": [149, 276, 281], "placehold": [149, 170], "plot": [150, 151, 152, 274, 287, 293, 301], "alt": [150, 151, 152, 272, 287, 293], "chart": [150, 151, 152, 272], "iofv1": 151, "iofv2": 151, "against": [151, 292], "iofv": [151, 250, 272, 274, 293, 295, 307], "scatterplot": 151, "problem": [153, 157, 274, 281, 286, 289, 291, 292, 293, 296, 298], "subroutin": [153, 274, 292, 296, 298], "advan1": [153, 296, 298], "trans2": [153, 296, 298], "IF": [153, 274, 292, 296], "gt": [153, 296], "lt": [153, 296], "uncondit": [153, 296], "cwre": [153, 249, 250, 295, 296, 304, 305], "npde": [153, 296], "noappend": [153, 296], "noprint": [153, 296], "onehead": [153, 296], "sigma\u2081": [154, 294], "\u2081": [154, 294], "home": [156, 274, 283, 294], "run1": [156, 235, 296], "mod": [156, 253, 255, 274, 276, 283, 294, 295, 296, 308], "read_model_from_databas": [156, 157, 274], "databas": [156, 157, 233, 253, 254, 255, 257, 258, 259, 261, 266, 271, 274], "read_model_from_str": [156, 274, 296], "err": [157, 296], "has_covariate_effect": [160, 274], "unrun": 161, "to_remov": [163, 164, 276], "eta_iov_1_1": 164, "add_lag_tim": [165, 199, 274, 296], "uloq": 166, "736": 166, "add_peripheral_compart": [167, 193, 274, 296], "new_nam": [169, 191], "renam": [169, 274], "clash": [169, 253, 255], "occur": [169, 286, 289, 291, 292], "resampl": [170, 238], "stratifi": [170, 276], "sample_s": [170, 276], "resample_": 170, "randomli": [170, 173], "renumb": [170, 276], "upward": 170, "stratif": [170, 276], "valueerror": 170, "rais": [170, 218, 274], "strata": 170, "suppli": [170, 289, 291, 297, 304], "control": [170, 279, 291, 292, 294], "pattern": [170, 292], "samples_per_id": 171, "pool": [171, 289], "iec": 171, "127941": 171, "037273": 171, "065492": 171, "182851": 171, "263323": 171, "265849": 171, "295883": 171, "060346": 171, "012108": 171, "219967": 171, "034279": 171, "040988": 171, "187879": 171, "143184": 171, "088845": 171, "034655": 171, "187779": 171, "014214": 171, "019953": 171, "151151": 171, "sample_parameters_from_covariance_matrix": [171, 173, 274], "sample_parameters_uniformli": [171, 172, 274], "uniform": [171, 172, 173], "force_posdef_sampl": [172, 173, 276], "force_posdef_covmatrix": [172, 276], "never": [172, 297], "005069": 172, "974989": 172, "204629": 172, "024756": 172, "012088": 172, "012943": 172, "004690": 172, "958431": 172, "233231": 172, "038866": 172, "029000": 172, "012516": 172, "004902": 172, "950778": 172, "128388": 172, "019020": 172, "023866": 172, "013413": 172, "sample_individual_estim": [172, 173, 274], "estiat": [172, 173], "reject": 173, "004878": 173, "908216": 173, "149441": 173, "029179": 173, "025472": 173, "012947": 173, "004828": 173, "014444": 173, "149958": 173, "028853": 173, "027653": 173, "013348": 173, "004347": 173, "053837": 173, "165804": 173, "028465": 173, "026798": 173, "013727": 173, "data_tran": [174, 176, 195, 274], "series_term": 174, "\u00b2": [174, 176], "epsilon_1": [174, 176, 195], "expans": 174, "approxim": [174, 292], "\u03b5\u2090": [174, 176, 296], "set_proportional_error_model": [174, 176, 274, 296], "set_combined_error_model": [174, 195, 274, 296, 305], "epsilon_2": 176, "remove_error_model": [176, 195, 274, 296], "\u03b5\u209a": [176, 195, 296], "set_additive_error_model": [176, 195, 274, 296], "e\u2080": 178, "fix_to_log": 179, "dynam": [179, 263, 292], "lambda": [179, 209, 210, 302, 304], "zeta": [179, 302, 304], "emul": 179, "set_bolus_order_absorpt": [183, 196, 202], "list_of_ep": [185, 194], "same_eta": [185, 276], "chosen": [185, 274, 289, 296, 308], "eta_rv1": 185, "set_power_on_ruv": [185, 274, 296, 305], "get_initial_condit": [186, 274], "set_upper_bound": [188, 213, 296], "unconstrain_paramet": [188, 200, 215, 296], "clmm": [189, 190, 203, 296], "km": [189, 190, 203, 274, 296], "set_first_order_elimin": [189, 190, 203, 274, 296], "prefer": [192, 292], "q2": 193, "q3": 193, "v3": 193, "peripheral2": 193, "lower_limit": 194, "zero_protect": [194, 195, 274], "autodetect": 194, "protect": [194, 195, 274, 292], "power\u2081": 194, "set_iiv_on_ruv": [194, 274, 296, 305], "225e": [195, 296], "ipredadj": [195, 296], "sequenti": [196, 274, 276, 297, 308], "quantil": [197, 272, 274], "time_vari": [197, 304, 305], "target": [198, 306], "mediat": 198, "disposit": 198, "ib": 198, "cr": 198, "crib": 198, "qss": 198, "wagner": 198, "mmapp": 198, "tmdd": [198, 237, 246, 274], "keep_depot": [199, 274], "transit1": 199, "transit2": 199, "k23": 199, "transit3": 199, "k34": 199, "k40": 199, "set_lower_bound": [200, 213, 296], "use_thetas_for_error_stdev": [201, 274, 296], "smallest": [203, 296], "get_zero_order_input": [204, 274], "simplifi": [205, 274, 275, 284, 296, 301], "ab": [205, 210, 276, 296], "analyt": 206, "becom": [207, 274, 276, 301], "create_joint_distribut": [207, 274, 296], "m4": [208, 296], "blq": [208, 245, 274], "m1": [208, 274, 306], "m3": [208, 296], "beal": 208, "sl": 208, "pharmacodyn": 208, "2001": 208, "oct": 208, "481": 208, "504": 208, "doi": [208, 210, 287, 305], "1023": 208, "1012299115260": 208, "erratum": 208, "2002": 208, "jun": 208, "309": 208, "pmid": 208, "11768292": 208, "cumd": [208, 296], "cumdz": [208, 296], "remove_loq_data": [208, 274, 296], "list_of_eta": [209, 210, 211], "boxcox": [209, 274], "lambda1": [209, 210], "transform_etas_tdist": [209, 210, 274, 296], "transform_etas_john_drap": [209, 211, 274, 296], "john": [210, 274, 276], "draper": [210, 274, 276], "spelect": 210, "1980": 210, "famili": [210, 292], "journal": [210, 305], "royal": 210, "societi": 210, "190": [210, 302], "197": 210, "2307": 210, "2986305": 210, "transform_etas_boxcox": [210, 211, 274, 296], "degre": [211, 304], "freedom": [211, 292, 304], "df1": 211, "translat": [212, 274], "hour": [212, 283], "caution": 212, "account": 212, "unfix_paramet": [213, 274, 296], "had": [217, 292, 296], "move_est_close_to_bound": 218, "00469555": 218, "984258": [218, 225, 295], "15892": 218, "0293508": [218, 294], "027906": [218, 225, 294, 295], "sd_eps_1": 219, "set_weighted_error_model": [219, 274, 296], "whose": [220, 292], "suffix": 220, "overwrit": [220, 221], "newdataset": 220, "report": [222, 274, 279, 290, 301], "recalcul": 223, "frem_dir1": 223, "read_result": [223, 234, 274, 308], "model_or_model": [224, 243], "run_tool": [224, 237, 249, 274], "004696": [225, 295], "158920": [225, 295], "029351": [225, 295], "machin": [226, 227, 228, 253, 257, 258, 283, 288, 292], "learn": [226, 227, 228, 288], "threshold": [226, 227, 228, 276, 281], "signal": [226, 227, 293], "raw": [226, 227, 228, 250, 272, 274, 283], "delta": [226, 272, 274, 293], "tell": [226, 228, 292], "predict_influential_outli": [226, 228, 274], "predict_outli": [226, 227, 274], "outlier_cutoff": 227, "influential_cutoff": 227, "singal": [227, 228], "influential_outli": 227, "predict_influential_individu": [227, 228, 274], "simev": [228, 274, 303], "281443": 228, "057392": 228, "119105": 228, "846849": 228, "600540": 228, "014008": 228, "750734": 228, "247175": 228, "117002": 228, "835389": 228, "529582": 228, "035670": 228, "292333": 228, "303278": 228, "565949": 228, "078192": 228, "291295": 228, "466421": 228, "402343": 228, "699996": 228, "567987": 228, "526776": 228, "303918": 228, "177588": 228, "272142": 228, "390000": 228, "775876": 228, "501528": 228, "700951": 228, "352599": 228, "294196": 228, "744014": 228, "215364": [228, 306], "208691": 228, "713130": 228, "300293": 228, "810736": 228, "459877": 228, "675125": 228, "563835": 228, "526945": 228, "449199": 228, "720714": 228, "792248": 228, "860923": 228, "731858": 228, "247131": 228, "894190": 228, "282737": 228, "153398": 228, "200546": 228, "902774": 228, "586427": 228, "183329": 228, "036930": 228, "639868": 228, "765279": 228, "209665": 228, "225693": 228, "errors_allow": [230, 274], "bic_typ": 230, "rounding_error": 230, "maxevals_exceed": 230, "lrt": 230, "denot": [230, 287, 296], "model_1": [230, 287], "model_2": [230, 287], "create_result": [232, 274], "resum": [233, 237, 266, 276, 308], "resmod_dir1": 233, "retrieve_model": [234, 253, 257, 258, 274, 308], "tooldatabas": [235, 254, 259, 263, 266], "modeldatabas": [235, 253, 255, 261], "tooldir_path": 235, "retrieve_final_model": [235, 274], "allometryresult": 236, "basic_pk": 237, "lloq_method": [237, 276], "lloq_limit": [237, 276], "amd": [237, 274, 308], "reult": 237, "rout": [237, 246], "search": [237, 239, 244, 274, 276, 281, 291, 301, 308], "transform_blq": [237, 274, 276, 296], "runord": [237, 276], "compon": [237, 276, 284, 288, 292, 294, 304], "run_iiv": [237, 274], "bootstrap": [238, 274, 303], "bootstrapresult": [238, 274], "500": 238, "try": [239, 276, 286, 301, 310], "mode": [239, 240, 242, 244, 246, 274, 287, 292], "covsearchresult": 239, "estmethod": [240, 274, 308], "exhaust": [240, 244, 274], "exhaustive_with_upd": [240, 286], "exhaustive_only_ev": [240, 274, 286], "estmethodresult": 240, "reduc": [240, 274, 286, 306], "no_add": [241, 244, 274, 289, 297], "iivsearch": [241, 274, 308], "brute_force_no_of_eta": [241, 289], "brute_force_block_structur": [241, 289], "strategi": [241, 244, 274, 289, 297], "add_diagon": [241, 244, 274, 289, 297], "kee": 241, "iivsearchresult": 241, "iovsearch": [242, 274, 308], "iovsearchresult": 242, "modelsearchresult": 244, "max_it": [245, 274], "bin": [245, 304, 310], "attempt": [245, 281, 292], "ruvsearchresult": 245, "structsearch": [246, 274], "pkpd": [246, 274], "structsearchresult": 246, "arg": 247, "kei": [249, 257, 292, 305], "fit_result": 249, "mathrm": [250, 307], "veebar": 250, "least": [250, 292, 308], "outli": [250, 307], "criteria": [250, 274, 276, 281, 289, 291, 297, 305], "include_all_estimation_step": 251, "runtim": [251, 274, 286], "wasn": [251, 274], "estmat": 251, "586": [251, 293, 295], "276056": [251, 293], "again": [252, 310], "Not": [252, 283, 292], "file_extens": [253, 255], "nontransactionalmodeldatabas": [253, 258], "local": [253, 254, 255, 257, 258, 259, 261, 279, 289, 292], "store": [253, 254, 255, 257, 258, 259, 261, 274, 298, 308], "modelnam": 253, "recommend": [253, 310], "localmodeldirectorydatabas": 253, "retrieve_fil": [253, 257, 258], "filesystem": [253, 257, 258], "model_nam": [253, 255, 257, 258, 287], "retrieve_local_fil": [253, 257, 258], "destination_path": [253, 257, 258], "retrieve_modelfit_result": [253, 257, 258], "store_local_fil": [253, 254, 257, 258, 259, 261], "new_filenam": [253, 257, 258], "store_metadata": [253, 254, 257, 258, 259, 261], "store_model": [253, 257, 258], "store_modelfit_result": [253, 257, 258], "toolnam": [254, 259, 261, 308], "exist_ok": 254, "read_metadata": [254, 259, 261], "source_path": [254, 259, 261], "store_result": [254, 259, 261], "transactionalmodeldatabas": 255, "subdirectori": [255, 308], "list_model": 255, "snapshot": [255, 257], "context": [255, 257, 292, 301], "transact": [255, 257, 292], "writabl": [255, 257], "timestamp": 256, "log_error": 256, "log_warn": 256, "abc": [257, 261], "baseclass": 257, "primari": 257, "center": 257, "around": [257, 277], "belong": 257, "dummi": [258, 259], "anyth": [258, 259, 279, 289, 292], "task_input": 260, "model_databas": 261, "task": [262, 300, 301], "acycl": 262, "node": [262, 263], "edg": 262, "wf": 263, "unique_nam": 263, "db": 263, "dask": [263, 274, 301], "whatev": [263, 292], "alia": [264, 265], "localdirectorydatabas": [264, 271], "localdirectorytooldatabas": [265, 271, 308], "dispatch": [266, 271, 274, 308], "execut": [266, 274, 292], "executiondispatch": 266, "default_dispatch": 271, "local_dask": [271, 308], "default_model_databas": 271, "default_tool_databas": 271, "psn": [272, 273, 274, 276, 282, 287, 293, 302, 304, 306, 307, 308, 309], "parameter_statist": 272, "bia": [272, 274], "rse": [272, 295], "divid": [272, 276, 298], "005856": 272, "005820": 272, "000038": 272, "000487": 272, "083167": 272, "455435": 272, "443165": 272, "009885": 272, "099305": 272, "068231": 272, "141376": 272, "109797": 272, "030323": 272, "114986": 272, "813337": 272, "195880": 272, "195844": 272, "005646": 272, "046548": 272, "237634": 272, "015546": 272, "015112": 272, "000872": 272, "003434": 272, "220871": 272, "parameter_distribut": 272, "lowest": [272, 287], "highest": [272, 274, 287, 298], "interpol": 272, "fall": [272, 274], "x_0": 272, "x_1": 272, "np": [272, 283, 294], "004762": 272, "004767": [272, 281], "004805": 272, "004974": 272, "005120": 272, "211220": 272, "214364": 272, "242657": 272, "290449": 272, "307106": 272, "000011": 272, "012961": 272, "100104": 272, "100376": 272, "102825": 272, "116900": 272, "125456": 272, "007812": 272, "007857": 272, "008261": 272, "009741": 272, "011116": 272, "97": [272, 281], "006669": 272, "006685": 272, "007429": 272, "007593": 272, "007612": 272, "613679": 272, "646879": 272, "726604": 272, "730551": 272, "730990": 272, "338957": 272, "371005": 272, "536153": 272, "545316": 272, "546334": 272, "281203": 272, "300874": 272, "306057": 272, "306101": 272, "306106": 272, "021677": 272, "023708": 272, "025429": 272, "026581": 272, "026710": 272, "parameter_estimates_histogram": 272, "histogram": [272, 274], "repeatchart": 272, "005298": 272, "30730": 272, "074931": 272, "136423": 272, "011374": 272, "006048": 272, "38692": 272, "029844": 272, "189763": 272, "019143": 272, "005624": 272, "53224": 272, "118806": 272, "219550": 272, "019831": 272, "005771": [272, 281], "40115": 272, "034322": 272, "150905": 272, "012287": 272, "005933": 272, "42119": 272, "074050": 272, "171158": 272, "017394": 272, "005275": 272, "59087": 272, "289793": 272, "248009": 272, "016396": 272, "005847": 272, "44711": 272, "109860": 272, "206296": 272, "016346": 272, "005939": 272, "52688": 272, "040057": 272, "210552": 272, "013631": 272, "005998": 272, "41948": 272, "192046": 272, "175269": 272, "013485": 272, "005479": 272, "43956": 272, "109733": 272, "197253": 272, "011771": 272, "ofv_statist": 272, "bootstrap_bootdata_ofv": 272, "original_bootdata_ofv": 272, "sum": [272, 282], "bootstrap_origdata_ofv": 272, "boostrap": 272, "original_origdata_ofv": 272, "delta_bootdata": 272, "delta_origdata": 272, "722": 272, "220925": 272, "386171": 272, "134966": 272, "245796": 272, "929008": 272, "620085": 272, "523805": 272, "737": 272, "632473": 272, "951710": 272, "024871": 272, "110934": 272, "218525": 272, "629078": 272, "737746": 272, "ofv_distribut": 272, "parameter_distriut": 272, "601": 272, "007583": 272, "602": 272, "266529": 272, "613": 272, "597036": 272, "641": 272, "950291": 272, "621": 272, "273905": 272, "622": 272, "073513": 272, "629": 272, "269987": 272, "806391": 272, "915431": 272, "955989": 272, "731": 272, "321004": 272, "879050": 272, "021463": 272, "059207": 272, "398901": 272, "299364": 272, "020705": 272, "061262": 272, "426277": 272, "984323": 272, "879224": 272, "788": 272, "101562": 272, "803": 272, "869362": 272, "661": 272, "714778": 272, "121734": 272, "810": [272, 295], "417314": 272, "732": 272, "165644": 272, "757": 272, "877092": 272, "369737": 272, "671690": 272, "375800": 272, "162811": 272, "270917": 272, "982365": 272, "475010": 272, "828": 272, "178008": 272, "839": 272, "691272": 272, "840": [272, 302], "970524": 272, "836": 272, "395339": 272, "846": 272, "981350": 272, "848": 272, "157573": 272, "859": 272, "964343": 272, "893": [272, 289], "228440": 272, "896": [272, 287], "924451": 272, "443675": 272, "246668": 272, "558111": 272, "129": 272, "069616": 272, "162": 272, "333713": 272, "166": 272, "029724": 272, "ofv_plot": 272, "layerchart": [272, 293], "dofv_quantiles_plot": 272, "show": [272, 276, 287, 292, 304, 307], "metric": [272, 273, 295], "chi": 272, "squar": 272, "907310": 272, "911844": 272, "750": 272, "388987": 272, "670": 272, "684132": 272, "675": 272, "846450": 272, "738": 272, "099607": 272, "248779": 272, "734": 272, "876739": 272, "733": [272, 305], "182039": 272, "626": 272, "440820": 272, "637": 272, "427606": 272, "748": 272, "285576": 272, "239599": 272, "025253": 272, "519551": 272, "781": 272, "380852": 272, "793": 272, "303365": 272, "994494": 272, "754": 272, "666705": 272, "688168": 272, "664": 272, "288159": 272, "671": 272, "883942": 272, "255718": 272, "974215": 272, "332959": 272, "052283": 272, "689": 272, "940217": 272, "693": 272, "963948": 272, "735": 272, "763734": 272, "004534": 272, "494261": 272, "162318": 272, "204881": 272, "627961": 272, "287312": 272, "986786": 272, "390849": 272, "785654": 272, "624824": 272, "922512": 272, "099768": 272, "595783": 272, "360991": 272, "358744": 272, "157557": 272, "023731": 272, "869007": 272, "372000e": 272, "000015": 272, "000003": 272, "098000e": 272, "462220e": 272, "009862": 272, "002316": 272, "002320": 272, "320640e": 272, "531300e": 272, "013222": 272, "000146": 272, "961337e": 272, "572900e": 272, "002167": 272, "014550e": 272, "000033": 272, "000196": 272, "178980e": 272, "included_individu": 272, "case_result": [273, 274], "cook_scor": 273, "jackknife_cook_scor": 273, "delta_ofv": 273, "dofv_influenti": 273, "130159": 273, "121389": 273, "015207": 273, "348263": 273, "336159": 273, "144045": 273, "192433": 273, "181125": 273, "031030": 273, "163095": 273, "155901": 273, "026142": 273, "422651": 273, "404915": 273, "190732": 273, "374312": 273, "343311": 273, "097063": 273, "169869": 273, "163883": 273, "026223": 273, "263865": 273, "254943": 273, "058123": 273, "757098": 273, "673587": 273, "477910": 273, "150161": 273, "144191": 273, "023623": 273, "361646": 273, "352901": 273, "217902": 273, "255533": 273, "215005": 273, "035375": 273, "191848": 273, "187019": 273, "038199": 273, "376365": 273, "337975": 273, "096680": 273, "142806": 273, "137340": 273, "014709": 273, "193393": 273, "179744": 273, "031711": 273, "131746": 273, "122842": 273, "020637": 273, "176644": 273, "932149": 273, "036787": 273, "128197": 273, "120498": 273, "019030": 273, "141093": 273, "138101": 273, "029021": 273, "176582": 273, "153583": 273, "035291": 273, "104396": 273, "100064": 273, "015499": 273, "552071": 273, "501458": 273, "278595": 273, "242334": 273, "217068": 273, "047627": 273, "792099": 273, "715951": 273, "798775": 273, "135247": 273, "133493": 273, "021356": 273, "442779": 273, "424958": 273, "125763": 273, "132903": 273, "127188": 273, "010157": 273, "081122": 273, "076790": 273, "005443": 273, "183624": 273, "168501": 273, "027707": 273, "113959": 273, "111168": 273, "012363": 273, "532749": 273, "515747": 273, "325048": 273, "094133": 273, "091212": 273, "014747": 273, "447798": 273, "406737": 273, "194457": 273, "364978": 273, "352973": 273, "124295": 273, "270838": 273, "252922": 273, "063675": 273, "129553": 273, "121963": 273, "014043": 273, "254914": 273, "243250": 273, "064025": 273, "207529": 273, "194633": 273, "046887": 273, "239182": 273, "218112": 273, "044252": 273, "181986": 273, "173826": 273, "020285": 273, "604112": 273, "584208": 273, "604211": 273, "407717": 273, "369648": 273, "154161": 273, "215722": 273, "196744": 273, "043742": 273, "214167": 273, "200091": 273, "036238": 273, "094284": 273, "089002": 273, "007506": 273, "074174": 273, "072365": 273, "007535": 273, "743323": 273, "717468": 273, "654313": 273, "153971": 273, "147360": 273, "014502": 273, "284706": 273, "278460": 273, "072960": 273, "331587": 273, "309374": 273, "116933": 273, "447965": 273, "421612": 273, "129593": 273, "184872": 273, "175196": 273, "029896": 273, "430382": 273, "415446": 273, "141657": 273, "409307": 273, "369197": 273, "189729": 273, "084764": 273, "079718": 273, "007416": 273, "107600": 273, "103145": 273, "013947": 273, "154672": 273, "150761": 273, "028236": 273, "155632": 273, "150461": 273, "034848": 273, "covariance_ratio": 273, "skipped_individu": 273, "050505": 273, "963884": 273, "058896": 273, "087449": 273, "985403": 273, "029066": 273, "101636": 273, "086424": 273, "017369": 273, "094799": 273, "849310": 273, "121111": 273, "049151": 273, "096456": 273, "070088": 273, "040691": 273, "065881": 273, "606158": 273, "205007": 273, "099191": 273, "143483": 273, "050691": 273, "086007": 273, "156273": 273, "919336": 273, "056714": 273, "999221": 273, "029600": 273, "034017": 273, "108785": 273, "038495": 273, "954054": 273, "053618": 273, "096334": 273, "943556": 273, "125423": 273, "086167": 273, "145822": 273, "113939": 273, "114399": 273, "057664": 273, "788608": 273, "063991": 273, "115559": 273, "160549": 273, "034685": 273, "035618": 273, "714976": 273, "092664": 273, "089158": 273, "054565": 273, "002555": 273, "032356": 273, "003056": 273, "936719": 273, "122771": 273, "078285": 273, "096841": 273, "068821": 273, "sqrt": [273, 296], "p_i": 273, "p_": 273, "orig": 273, "operatornam": [273, 287, 307], "sum_": 273, "overlin": [273, 287], "_j": 273, "_k": [273, 287], "det": 273, "Then": [273, 287, 296], "ofv_": 273, "iofv_": 273, "iofv_k": 273, "ofv_k": 273, "case_column": 273, "rikard": [273, 275, 280, 301, 305], "nordgren": [273, 275, 280, 301, 305], "sebastian": [273, 275, 280], "ueckert": [273, 275, 280], "svetlana": 273, "freiberga": 273, "karlsson": [273, 275, 280, 287, 305], "faster": [273, 274, 301], "2018": [273, 292, 305], "abstr": [273, 275], "8683": 273, "www": [273, 275, 292], "meet": [273, 275, 277, 292, 301], "add_bioavail": 274, "autogener": 274, "typ": 274, "add_effect_compart": 274, "reorgan": 274, "saddl": 274, "llq": 274, "preced": 274, "reorder": 274, "incorrectli": 274, "ofv_iter": 274, "parameter_estimates_iter": 274, "caus": [274, 292, 301], "model4": 274, "frem": [274, 294, 303, 304], "create_report": 274, "write_model": [274, 294, 296, 298], "did": [274, 306], "dadt": [274, 296], "de": [274, 296], "complex": [274, 279, 288], "set_zero_order_input": 274, "set_tmdd": 274, "plugin": [274, 279, 284, 285, 290], "generate_model_cod": 274, "get_model_cod": 274, "advan7": 274, "didn": 274, "header": 274, "is_linear": 274, "plot_transformed_eta_distribut": 274, "create_config_templ": [274, 278], "get_dv_symbol": 274, "set_initial_condit": 274, "abbr": [274, 296, 298], "create_basic_pk_model": [274, 296], "add_metabolit": 274, "set_dvid": [274, 296], "regress": 274, "defdos": [274, 296], "sometim": 274, "wrong": 274, "bad": 274, "1551": 274, "is_real": 274, "advan5": 274, "copy_model": 274, "nlmixr2": [274, 290, 296], "display_od": 274, "rework": 274, "run_covsearch": [274, 281], "explicitodesystem": 274, "eval": 274, "successfulli": [274, 310], "round": [274, 283], "subtool": [274, 308], "proxi": [274, 292], "1314": 274, "1355": [274, 281], "1378": [274, 289], "typo": 274, "1377": 274, "1381": 274, "1064": [274, 289], "afd7707": 274, "1139": 274, "1394": 274, "too": [274, 292], "1117": 274, "timeout": 274, "loop": 274, "wait": 274, "lst": [274, 308], "much": [274, 301], "phi": [274, 279, 296, 308], "ncomp": 274, "deidentify_data": [274, 296], "cli": 274, "anonym": 274, "setter": 274, "multivari": 274, "1293": 274, "1302": [274, 281], "1303": [274, 297], "last20": 274, "run_modelsearch": [274, 297, 308], "run_iovsearch": [274, 291], "run_ruvsearch": [274, 305], "run_iivsearch": [274, 289], "nomem": 274, "rh": 274, "1180": 274, "1162": 274, "1032": 274, "add_covariate_effect": [274, 296], "1004": 274, "remove_covariate_effect": [274, 296], "1181": 274, "9fd701521": 274, "best_model": 274, "final_model_nam": 274, "a7fbcbfe2": 274, "update_initial_individual_estim": 274, "modelsearch_candidate1": [274, 297, 308], "modifi": [274, 283, 292, 299, 309], "wors": 274, "calculate_b": [274, 289, 291, 297], "calculate_a": 274, "check_parameters_near_bound": 274, "check_high_correl": 274, "plot_iofv_vs_iofv": 274, "plot_individual_predict": 274, "evaluate_express": 274, "evaluate_weighted_residu": 274, "parameter_esimt": 274, "calculate_pk_parameters_statist": 274, "update_init": [274, 296], "predict_": 274, "print_fit_summari": 274, "write_result": 274, "rank_model": 274, "speedup": 274, "297a64041": 274, "individual_ofv": [274, 295], "1101": 274, "57fc4fee8": 274, "fd417aaf": 274, "convert_model": [274, 296], "d5458e36": 274, "keyerror": 274, "localmodeldirectori": 274, "filenotfounderror": 274, "1193bd39": 274, "unus": 274, "submodul": 274, "bb96a13c": 274, "update_paramet": 274, "0ca786c5": 274, "dd056da3": 274, "915bc9c7": 274, "get_config_path": [274, 278], "disabl": [274, 277, 278], "82b32278": 274, "unwant": 274, "debug": 274, "1131a610": 274, "ebfafb45": 274, "1173": 274, "fb070ee1": 274, "1049": [274, 289], "pyreadr": 274, "easier": [274, 284, 294], "instal": [274, 276, 278, 292, 309], "mac": [274, 279], "get_evid": [274, 296], "resmod": [274, 303], "916": 274, "strict": [274, 292], "1055": 274, "attibut": 274, "1092": 274, "exlud": 274, "unreport": 274, "1076": 274, "988": 274, "1c65359": 274, "42fe72f": 274, "1001": 274, "lead": 274, "uneven": 274, "branch": [274, 279], "stepwis": [274, 281, 306, 308], "694": 274, "properli": 274, "708": 274, "comment": [274, 298], "790": 274, "974": [274, 302], "produc": [274, 292], "1017": 274, "989": 274, "71f4cf23": 274, "dsl": 274, "932": 274, "973": 274, "cfc09bad": 274, "975": 274, "917": 274, "977": 274, "908": 274, "fd564168": 274, "088a046a": 274, "c76fa476": 274, "430f1d2e": 274, "make_declar": 274, "greekify_model": 274, "find_clearance_paramet": 274, "find_volume_paramet": 274, "vp": 274, "newer": 274, "820": [274, 295], "seprat": 274, "sporad": 274, "race": [274, 277], "lazi": 274, "duplic": 274, "745": 274, "1st": 274, "3rd": 274, "710": 274, "licens": [274, 278], "advanx": 274, "add_time_after_dos": [274, 296], "intercompartment": 274, "defob": 274, "choos": [274, 289, 292, 297, 298, 299], "gl": 274, "solve_ode_system": 274, "meta": 274, "switch": [274, 301], "read_dataset_from_datainfo": [274, 296], "addl": 274, "linalgerror": 274, "656": [274, 289], "tflite": [274, 288], "649": 274, "mdt": [274, 296], "654": 274, "expand_additional_dos": [274, 296], "better": [274, 297, 305], "modelsyntaxerror": 274, "588": 274, "625": [274, 289], "578": 274, "vc1": 274, "577": 274, "success": [274, 277, 281, 286, 289, 291], "632": [274, 302], "636": 274, "590": 274, "gl_real": 274, "sampled_iofv": [274, 307], "version": [274, 276, 288, 292, 308], "subblock": 274, "check_dataset": [274, 296], "tensorflow": 274, "modelbuild": 274, "add_mdt_iiv": 274, "three": [274, 284, 292, 298], "add_eta": [274, 304], "etas_as_fullblock": 274, "iiv_as_fullblock": 274, "add_mdt_eta": 274, "wip": 274, "don": 274, "calculate_se_from_inf": 274, "calculate_cov_from_inf": 274, "calculate_inf_from_cov": 274, "calculate_inf_from_corrs": 274, "calculate_corr_from_inf": 274, "528": 274, "457": 274, "translate_nmtran_tim": [274, 296], "print_model_cod": [274, 288, 296], "has_michaelis_menten_elimin": 274, "has_zero_order_elimin": 274, "has_first_order_elimin": 274, "has_mixed_mm_fo_elimin": 274, "2c": 274, "1c": 274, "timevari": 274, "create_symbol": 274, "remove_unused_parameters_and_rv": 274, "mu_reference_model": 274, "simplify_express": 274, "bump_model_numb": 274, "get_doseid": [274, 296], "get_unit_of": 274, "get_concentration_parameters_from_data": [274, 296], "write_csv": 274, "resample_data": 274, "omit_data": 274, "get_observation_express": 274, "get_individu": 274, "get_dos": [274, 296], "list_time_varying_covari": [274, 296], "estmeth": 274, "optim": [274, 284, 294, 301], "incorrect": 274, "add_allometri": [274, 296], "insert_aft": 274, "modelstat": 274, "power_on_ruv": 274, "estimationmethod": 274, "guard": 274, "avoid": [274, 284, 292, 310], "cdd": 274, "bipp": [274, 276], "5000": 274, "shift": 274, "nest": 274, "due": [274, 305], "set_dtbs_error_model": [274, 296], "dure": [274, 310], "logger": 274, "parametr": 274, "broken": 274, "parallel": [274, 308], "print_model_symbol": 274, "get_observ": [274, 296], "parameter_sampl": 274, "api": [274, 284, 296, 300, 301, 309], "improv": [274, 304], "eta_shrinkag": 274, "summarize_model": 274, "window": [274, 279, 288, 292], "rstudio": [274, 301, 310], "zero_order_absorpt": 274, "first_order_absorpt": 274, "bolus_absorpt": 274, "set_bolus_absorpt": [274, 296], "seq_zo_fo_absorpt": 274, "set_seq_zo_fo_absorpt": [274, 296], "have_zero_order_absorpt": 274, "has_zero_order_absorpt": 274, "individual_shrinkag": 274, "individual_parameter_statist": 274, "pk_paramet": 274, "create_rv_block": 274, "split_rv_block": 274, "nind": 274, "nob": 274, "nobsi": 274, "remove_error": 274, "additive_error": 274, "proportional_error": 274, "combined_error": 274, "has_additive_error": 274, "has_proportional_error": 274, "has_combined_error": 274, "theta_as_stdev": 274, "set_dtbs_error": 274, "tdist": [274, 302], "john_drap": 274, "add_individual_paramet": 274, "first_order_elimin": 274, "zero_order_elimin": 274, "michaelis_menten_elimin": 274, "mixed_mm_fo_elimin": 274, "revert": 274, "thread": [274, 277], "site": 274, "crossval": [274, 303], "qa": [274, 303], "plain": [274, 278, 279], "sdcorr": 274, "data_transform": 274, "evalut": 274, "dependent_variable_symbol": 274, "releas": [274, 292, 310], "claus": 274, "interfac": [274, 284, 288, 290, 292, 294, 296, 301, 309, 310], "com": 274, "stdin": 274, "123": [274, 281, 289, 291, 295, 297, 305], "clearer": 274, "prioriti": [274, 298], "aggregatedmodelfitresult": 274, "priorit": [274, 298], "half": [274, 302, 304], "life": [274, 302, 304], "set_nam": 274, "parameter_init": 274, "base_parameter_chang": [274, 287], "parameter_vari": [274, 287, 304], "coeffici": 274, "frem_result": 274, "simevalresult": 274, "nonfixed_init": 274, "parameterset": 274, "migrat": 274, "github": [274, 279, 288, 290, 301, 310], "action": [274, 276, 277, 279, 292, 301], "columntyp": 274, "to_base_model": 274, "comined_mm_fo_elimin": 274, "absorption_r": 274, "pretti": 274, "qaresult": 274, "nmtranparseerror": 274, "error_model": 274, "pharmpyconfigpath": [274, 278], "environ": [274, 277, 309, 310], "linearizeresult": 274, "reset_indic": 274, "multiindic": 274, "functionsadd_lag_tim": 274, "yaml": 274, "view": [274, 292, 306], "assumpt": [274, 292], "0th": [274, 276], "parser": [274, 301], "individul": 274, "extend": [274, 292, 304, 306], "postprocess": [274, 303], "librari": [274, 288, 290, 292, 301, 310], "stella": [275, 280, 301], "belin": [275, 280, 301], "gunnar": [275, 280], "yngman": [275, 280, 287], "simon": [275, 280], "carter": [275, 280], "buatoi": [275, 280], "jo\u00e3o": [275, 280], "abrant": [275, 280], "andrew": [275, 280], "hooker": [275, 280], "assemblerr": 275, "novel": 275, "process": [275, 305], "2021": [275, 287], "9656": 275, "subcommand": 276, "top": [276, 283, 308], "often": [276, 279, 294, 306], "help": [276, 277, 281, 296, 301, 308, 310], "verb": 276, "particular": [276, 277, 279, 283, 292, 293], "welcom": [276, 277, 279, 292], "usag": 276, "exit": 276, "program": [276, 277, 288, 292], "pheno_r": [276, 283, 294, 295, 296], "prettyprint": 276, "output_fil": 276, "idcol": 276, "datecol": 276, "match": 276, "pager": 276, "stdout": [276, 308], "datasetsmultipl": 276, "1th": 276, "quot": 276, "comb": 276, "elimini": 276, "propot": 276, "error_typ": 276, "givenbi": 276, "cov_sampl": 276, "posdef": 276, "non_fix": 276, "input_path": 276, "particip": 277, "project": [277, 279, 290, 292, 310], "made": [277, 292, 294], "member": 277, "globe": 277, "divers": 277, "skill": [277, 301], "person": [277, 292], "experi": 277, "growth": 277, "everyon": [277, 279, 292], "guidelin": 277, "insid": [277, 292], "goal": 277, "inclus": [277, 292, 304], "grow": 277, "pledg": 277, "treat": [277, 279, 292], "peopl": 277, "harass": 277, "bulli": 277, "regardless": [277, 292, 294], "sexual": 277, "orient": 277, "gender": 277, "ident": 277, "appear": [277, 310], "nation": [277, 280], "ethnic": 277, "religion": 277, "imageri": 277, "sexist": 277, "racist": 277, "exclusionari": 277, "joke": 277, "acknowledg": [277, 292], "citat": 277, "request": [277, 279], "author": [277, 292], "own": [277, 278, 284, 292], "cite": 277, "those": [277, 292, 296, 308], "realiz": 277, "varieti": 277, "opinion": 277, "background": 277, "serv": [277, 292, 301], "enrich": 277, "discuss": 277, "pro": 277, "con": 277, "technologi": 277, "proactiv": 277, "ensur": [277, 292], "heard": 277, "feel": [277, 301], "confid": 277, "freeli": 277, "question": 277, "answer": 277, "respectfulli": 277, "pai": 277, "attent": 277, "feedback": 277, "forum": 277, "especi": 277, "contribut": [277, 290, 292], "conscienti": 277, "percept": 277, "wider": 277, "respond": 277, "strive": 277, "behavior": 277, "encourag": [277, 279, 284, 290], "debat": 277, "disagr": 277, "entir": [277, 279, 292, 308], "silent": 277, "violat": [277, 292], "contact": [277, 292], "talk": 277, "privat": [277, 292], "situat": 277, "onlin": 277, "offlin": 277, "mail": [277, 292], "social": 277, "media": 277, "confer": 277, "associ": [277, 291, 292], "adapt": [277, 292, 301], "astropi": 277, "global": [278, 310], "nonmen": 278, "conf": 278, "ini": [278, 296], "default_nonmem_path": 278, "nmfe751": 278, "licfil": 278, "rpath": 278, "temporarili": 278, "pharmpyconfigfil": 278, "your": [279, 288, 290, 292, 298, 308, 310], "bug": 279, "appreci": 279, "suggest": [279, 290], "suitabl": [279, 301], "student": [279, 301], "commun": [279, 292], "aspir": 279, "conduct": [279, 297], "foster": 279, "linux": [279, 288], "maco": [279, 288], "ll": [279, 296], "badg": 279, "pip": [279, 288], "python3": 279, "pip3": 279, "guid": [279, 283, 294, 296], "former": 279, "ubuntu": 279, "apt": 279, "url": [279, 288], "render": [279, 292, 301], "On": [279, 301], "sudo": 279, "brew": 279, "unnecessari": [279, 292], "thing": [279, 292], "instruct": [279, 288, 295, 308], "black": 279, "formatt": 279, "flake8": 279, "linter": 279, "isort": 279, "lint": 279, "reformat": 279, "py39": 279, "test_paramet": 279, "py": [279, 288], "test_get_theta": 279, "apart": 279, "suit": 279, "purpos": [279, 292], "test_modelsearch": 279, "test_summary_individu": 279, "pull": 279, "manag": 279, "contributor": [279, 292], "emploi": 279, "commit": [279, 292], "push": 279, "name_of_branch": 279, "deploy": 279, "setup": 279, "pypi": [279, 288], "io": [279, 284, 288], "trigger": [279, 294], "tag": 279, "changelog": 279, "bump": 279, "semant": 279, "bumpvers": 279, "cfg": 279, "sh": 279, "patch": 279, "minor": 279, "major": [279, 292], "copyright": 279, "necessari": [279, 292], "coi": 279, "stream": [279, 294], "verbatim": [279, 292], "farmaci": 280, "uu": 280, "kajsa": 280, "harl": 280, "zhe": [280, 301], "huang": [280, 301], "aurelien": 280, "oom": 280, "johan": 280, "borg": 280, "antonia": 280, "hufnagl": 280, "piyanan": 280, "assawasuwannakit": 280, "xiaomei": 280, "chen": 280, "alzahra": 280, "hamdan": 280, "osama": 280, "qutishat": 280, "shijun": 280, "wang": 280, "tianwu": 280, "yang": 280, "keqi": 280, "shi": 280, "xuanlin": 280, "liu": 280, "samia": 280, "moham": 280, "yersultan": 280, "mirasbekov": 280, "warm": 280, "thank": 280, "sponsor": 280, "hoffman": 280, "la": 280, "roch": 280, "ltd": 280, "pharmetheu": 280, "uppsala": [280, 290], "univers": [280, 290], "enabl": [280, 292], "resourc": 280, "swedish": 280, "infrastructur": 280, "snic": 280, "uppmax": 280, "research": [280, 301], "council": 280, "inter": [281, 289, 296], "five": 281, "sentenc": 281, "manual": [281, 283, 308], "rewritten": 281, "notic": [281, 292], "semicolon": 281, "mox2": [281, 286, 289, 291, 297, 308], "covsearch_run7": 281, "covsearch_run8": 281, "covsearch_run9": 281, "covsearch_run10": 281, "covsearch_run11": 281, "covsearch_run12": 281, "covsearch_run13": 281, "covsearch_run14": 281, "covsearch_run15": 281, "covsearch_run16": 281, "covsearch_run17": 281, "covsearch_run18": 281, "covsearch_run19": 281, "covsearch_run20": 281, "covsearch_run21": 281, "covsearch_run22": 281, "covsearch_run23": 281, "covsearch_run24": 281, "covsearch_run25": 281, "covsearch_run26": 281, "covsearch_run27": 281, "covsearch_run28": 281, "covsearch_run29": 281, "covsearch_run30": 281, "covsearch_run31": 281, "covsearch_run32": 281, "covsearch_run33": 281, "covsearch_run34": 281, "covsearch_run35": 281, "covsearch_run36": 281, "covsearch_run37": 281, "covsearch_run38": 281, "covsearch_run39": 281, "covsearch_run40": 281, "covsearch_run41": 281, "covsearch_run42": 281, "covsearch_run43": 281, "covsearch_run44": 281, "covsearch_run45": 281, "covsearch_run46": 281, "covsearch_run47": 281, "covsearch_run48": 281, "covsearch_run49": 281, "covsearch_run50": 281, "covsearch_run51": 281, "covsearch_run52": 281, "covsearch_run53": 281, "covsearch_run54": 281, "pvalu": [281, 306], "goal_pvalu": [281, 306], "is_backward": [281, 306], "047127e": 281, "710000e": 281, "568110e": 281, "494490e": 281, "498453e": 281, "459287e": 281, "280678e": 281, "923500e": 281, "003390e": 281, "984500e": 281, "372293e": 281, "176965e": 281, "207550e": 281, "626878e": 281, "564495e": 281, "539960e": 281, "762000e": 281, "823200e": 281, "417058e": 281, "759040e": 281, "469024e": 281, "811054e": 281, "642452e": 281, "840779e": 281, "261720e": 281, "651215e": 281, "954671e": 281, "163414e": 281, "926594e": 281, "491049e": 281, "423998e": 281, "706676e": 281, "374390e": 281, "054865e": 281, "105347e": 281, "300000e": 281, "029682e": 281, "641559e": 281, "748923e": 281, "363918e": 281, "203548e": 281, "052323e": 281, "567877e": 281, "507358e": 281, "510000e": 281, "1292": [281, 286, 289, 291, 297], "186761": [281, 286, 289, 291, 297], "742325": 281, "929085": 281, "315057": 281, "1346": 281, "501817": 281, "978215": 281, "1332": 281, "164976": 281, "062682": 281, "1312": 281, "249442": 281, "061671": 281, "248431": 281, "056538": 281, "1313": [281, 297], "243298": 281, "732689": 281, "919450": 281, "651626": 281, "1335": 281, "838386": 281, "814832": 281, "1334": 281, "001593": 281, "363759": 281, "550520": 281, "989077": 281, "175838": 281, "136326": 281, "323087": 281, "387950": 281, "1316": 281, "574711": 281, "961688": 281, "148448": 281, "743393": 281, "930153": 281, "617998": 281, "1340": 281, "804759": 281, "641996": 281, "1345": 281, "828756": 281, "288366": 281, "1357": 281, "475127": 281, "263168": 281, "1343": [281, 289], "449928": 281, "814686": 281, "1319": 281, "001446": 281, "181808": 281, "368568": 281, "957602": 281, "144362": 281, "567343": 281, "1347": 281, "754104": 281, "426389": 281, "613149": 281, "324567": 281, "1358": [281, 296], "511327": 281, "446030": 281, "632790": 281, "549224": 281, "1326": 281, "735985": 281, "997342": 281, "184102": 281, "617389": 281, "1351": 281, "804150": 281, "900404": 281, "1350": 281, "087164": 281, "566615": 281, "1391": 281, "753375": 281, "929659": 281, "1352": 281, "116420": 281, "990522": 281, "177283": 281, "217267": 281, "404028": 281, "62": [281, 302], "729333": 281, "1354": 281, "916093": 281, "379219": 281, "1393": 281, "565980": 281, "67": [281, 304, 306], "670588": 281, "1359": 281, "857348": 281, "016040": 281, "202801": 281, "926496": 281, "113256": 281, "139": 281, "462177": 281, "1431": 281, "648937": 281, "83": [281, 302, 304], "706655": 281, "1375": 281, "893415": 281, "798603": 281, "1367": 281, "985364": 281, "801019": 281, "1438": 281, "987780": 281, "92": 281, "443408": 281, "1384": 281, "630169": 281, "997461": 281, "1439": 281, "184221": 281, "322869": 281, "509630": 281, "925020": 281, "111781": 281, "142": 281, "814402": 281, "1435": 281, "001163": 281, "862830": 281, "049591": 281, "449696": 281, "636456": 281, "801017": 281, "987778": 281, "89": [281, 297], "86": 281, "1414": 281, "872375": 281, "93": [281, 286], "810457": 281, "76": 281, "630168": 281, "68": 281, "5328": [281, 286, 289, 291, 297], "2300": [281, 286, 289, 297], "433676": [281, 286, 289, 291, 297], "2632": 281, "2400": 281, "447194": 281, "8757": 281, "106": [281, 289, 302, 304, 305], "2690": 281, "429235": 281, "4824": 281, "0490": 281, "435646": 281, "1536": 281, "7690": 281, "430342": 281, "9763": 281, "102": 281, "8640": 281, "428158": 281, "9807": 281, "1030": 281, "505090": 281, "3823": 281, "4790": 281, "453248": 281, "3323": 281, "5279": 281, "434088": 281, "7087": 281, "109": [281, 297], "1750": 281, "459561": 281, "8501": 281, "4740": 281, "428178": 281, "4821": 281, "0270": 281, "435683": 281, "1635": 281, "5920": 281, "433194": 281, "0931": 281, "1120": 281, "435607": 281, "1216": 281, "2180": 281, "519385": 281, "3873": 281, "4580": 281, "453399": 281, "4279": 281, "6231": 281, "442192": 281, "9115": 281, "9240": 281, "466270": 281, "7337": 281, "9590": 281, "409478": 281, "3781": 281, "415011": 281, "1007": 281, "5110": 281, "446059": 281, "1211": 281, "8490": 281, "522201": 281, "2833": 281, "7400": 281, "430777": 281, "3688": 281, "9010": 281, "444906": 281, "9130": 281, "7450": 281, "468161": 281, "8124": 281, "7120": 281, "407766": 281, "3789": 281, "2080": 281, "416694": 281, "1985": 281, "6770": 281, "441794": 281, "2994": 281, "94": 281, "1796": 281, "587939": 281, "4692": 281, "3027": 281, "440385": 281, "0941": 281, "6170": 281, "463834": 281, "6693": 281, "2570": 281, "413923": 281, "3618": 281, "427491": 281, "2658": 281, "5620": 281, "521096": 281, "4546": 281, "9522": 281, "446657": 281, "0732": 281, "0130": 281, "454492": 281, "7145": 281, "9771": 281, "451302": 281, "3318": 281, "9710": 281, "477444": 281, "4944": 281, "3068": 281, "502124": 281, "0790": 281, "7890": 281, "462595": 281, "7389": 281, "8006": 281, "491811": 281, "6677": 281, "7770": 281, "477864": 281, "6488": 281, "0460": 281, "472418": 281, "9834": 281, "9929": 281, "474434": 281, "0359": 281, "2120": 281, "478021": 281, "0706": 281, "1991": 281, "474688": 281, "0336": 281, "8083": 281, "475373": 281, "0636": 281, "2525": 281, "473063": 281, "0292": 281, "8033": 281, "473542": 281, "0651": 281, "9375": 281, "483644": 281, "0661": 281, "5310": 281, "462817": 281, "0432": 281, "1300": [281, 291], "446808": 281, "7913": 281, "90": 281, "1894": 281, "489466": 281, "9838": 281, "9945": 281, "474441": 281, "0361": 281, "478038": 281, "ruv_prop_estim": [281, 286, 291, 305], "209972": [281, 286, 289, 291, 297], "197452": 281, "005338": 281, "192852": 281, "199549": 281, "193411": 281, "195608": 281, "192557": 281, "198783": 281, "191425": 281, "192934": 281, "192682": 281, "000659": 281, "199545": 281, "000303": 281, "193747": 281, "000956": 281, "197305": 281, "006150": 281, "194664": 281, "005918": 281, "198812": 281, "000334": 281, "192753": 281, "006503": 281, "194238": 281, "009567": 281, "189160": 281, "005291": 281, "195766": 281, "003125": 281, "195730": 281, "195098": 281, "006600": 281, "195843": 281, "001364": 281, "189330": 281, "003100": 281, "193116": 281, "008094": 281, "189540": 281, "006380": 281, "196038": 281, "002606": 281, "197429": 281, "000340": 281, "204599": 281, "002549": 281, "190442": 281, "000522": 281, "195705": 281, "005726": 281, "192398": 281, "002984": 281, "196915": 281, "000299": 281, "198387": 281, "001229": 281, "190453": 281, "000216": 281, "197082": 281, "005988": 281, "191512": 281, "002433": 281, "194217": 281, "000649": 281, "191075": 281, "001918": 281, "197129": 281, "005915": 281, "183751": 281, "001489": 281, "187999": 281, "001004": 281, "194026": 281, "005955": 281, "187663": 281, "002481": 281, "193344": 281, "009365": 281, "187822": 281, "002901": 281, "187730": 281, "187425": 281, "002946": 281, "184713": 281, "006622": 281, "187724": 281, "002919": 281, "187525": 281, "003050": 281, "192812": 281, "005142": 281, "183104": 281, "001493": 281, "187672": 281, "002483": 281, "193349": 281, "009366": 281, "pop_clwt_estim": 281, "382904": 281, "010536": 281, "387669": 281, "010497": 281, "396947": 281, "010523": 281, "385807": 281, "010703": 281, "554417": 281, "011851": 281, "519989": 281, "012179": 281, "808497": 281, "011109": 281, "737404": [281, 307], "007109": 281, "709206": 281, "000803": 281, "736659": 281, "000429": 281, "706752": 281, "000822": 281, "662625": 281, "002097": 281, "709124": 281, "000793": 281, "704774": 281, "427285": 281, "003711": 281, "779125": 281, "001087": 281, "007108": 281, "059279": 281, "517590": 281, "056724": 281, "520520": 281, "063392": 281, "057943": 281, "019268": 281, "348000": 281, "008419": 281, "040813": 281, "045624": 281, "023159": 281, "057041": 281, "059912": 281, "003577": 281, "495110": 281, "070972": 281, "033397": 281, "013863": 281, "012482": 281, "367050": 281, "020109": 281, "442940": 281, "030354": 281, "491875": 281, "038044": 281, "224276": 281, "001885": 281, "848782": 281, "017435": 281, "646840": 281, "585757": 281, "000169": 281, "367142": 281, "002221": 281, "737357": 281, "009685": 281, "033267": 281, "009238": 281, "267484": 281, "012667": 281, "165471": 281, "005033": 281, "094740": 281, "010833": 281, "065816": 281, "004749": 281, "096523": 281, "005557": 281, "098655": 281, "107862": 281, "012020": 281, "118838": 281, "005781": 281, "002862": 281, "222520": 281, "005160": 281, "361570": 281, "008017": 281, "030930": 281, "005034": 281, "094706": 281, "010829": 281, "065876": 281, "pop_matwt_estim": 281, "019706": 281, "014651": 281, "020136": 281, "014954": 281, "022336": 281, "011936": 281, "005508": 281, "002344": 281, "013967": 281, "034213": 281, "034044": 281, "009672": 281, "008593": 281, "017124": 281, "000315": 281, "022223": 281, "019316": 281, "009542": 281, "010323": 281, "008652": 281, "018053": 281, "019211": 281, "001906": 281, "014021": 281, "011399": 281, "003565": 281, "010903": 281, "014331": 281, "013699": 281, "015830": 281, "000202": [281, 307], "002078": 281, "009019": 281, "005773": 281, "012366": 281, "002607": 281, "002247": 281, "005768": 281, "011567": 281, "006160": 281, "014272": 281, "004566": 281, "010938": 281, "002378": 281, "007473": 281, "011606": 281, "010672": 281, "000456": 281, "009445": 281, "014649": 281, "012169": 281, "002248": 281, "pop_vcwt_estim": 281, "953372": 281, "013320": 281, "984897": 281, "012092": 281, "972469": 281, "011946": 281, "954734": 281, "010781": 281, "009540": 281, "009922": 281, "989687": 281, "009576": 281, "986758": 281, "869150": 281, "632058": 281, "008418": 281, "751771": 281, "007571": 281, "416489": 281, "013879": 281, "724866": 281, "008196": 281, "746265": 281, "007399": 281, "727224": 281, "008331": 281, "666572": 281, "010074": 281, "751144": 281, "008031": 281, "711725": 281, "008833": 281, "012851": 281, "967468": 281, "751794": 281, "007573": 281, "416464": 281, "013880": 281, "1403": [281, 289, 291, 297, 305], "1404": [281, 289, 291, 297, 305], "1405": [281, 289, 291, 297, 305], "1406": [281, 289, 291, 297, 305], "1407": [281, 289, 291, 297, 305], "757118": [281, 289, 291, 297], "659694": [281, 289, 291, 297], "302503": [281, 289, 291, 297], "464327": [281, 289, 291, 297], "034898": [281, 289, 291, 297], "482240": 281, "223632": 281, "357442": 281, "119299": 281, "565277": 281, "696443": 281, "062486": 281, "234841": 281, "088594": 281, "953572": 281, "857979": 281, "193305": 281, "003283": 281, "861988": 281, "188718": 281, "005806": 281, "962325": 281, "455479": 281, "289527": 281, "216857": 281, "4015": 281, "2022": [281, 286, 289, 291, 297, 308], "462": 281, "nhowev": [281, 286, 291], "reduced_ofv": [281, 306], "extended_ofv": [281, 306], "ofv_drop": [281, 306], "extended_st": [281, 306], "621435": 281, "246753": 281, "394001": 281, "645626": 281, "219363": 281, "001068": 281, "875674": 281, "899671": 281, "152040": 281, "126842": 281, "678359": 281, "045482": 281, "821275": 281, "431017": 281, "290062": 281, "366965": 281, "488428": 281, "591623": 281, "039740": 281, "659788": 281, "942802": 281, "017391": 281, "380435": 281, "441298": 281, "668043": 281, "180108": 281, "388697": 281, "680065": 281, "025518": 281, "935973": 281, "446136": 281, "690615": 281, "782563": 281, "002416": 281, "644805": 281, "554053": 281, "674591": 281, "072441": 281, "183059": 281, "134631": 281, "547765": 281, "311846": 281, "373764": 281, "196444": 281, "delta_df": [281, 306], "extended_signific": [281, 306], "covariate_effect": [281, 287, 304, 306], "ofv_summari": [281, 306], "candidate_summari": [281, 306], "n_test": [281, 306], "n_ok": [281, 306], "n_localmin": [281, 306], "n_fail": [281, 306], "stepinclud": [281, 306], "estimation_ofv": 282, "prediction_ofv": 282, "545": 282, "863847": 282, "186": 282, "192727": 282, "512": 282, "953185": 282, "694832": 282, "547": 282, "843632": 282, "184": [282, 302, 306], "022535": 282, "579": 282, "109635": 282, "596550": 282, "prediction_ofv_sum": 282, "747": 282, "506644594254": 282, "read_raw_dataset": 283, "sever": [283, 288, 296, 304], "examin": [283, 286, 288, 309], "di": 283, "role": 283, "identif": [283, 305], "mostli": [283, 284, 301], "steven": 283, "typologi": 283, "en": [283, 284, 287], "wikipedia": 283, "wiki": [283, 292], "level_of_measur": 283, "annot": 283, "kg": 283, "mg": 283, "l": 283, "low": [283, 296, 309], "understand": [283, 300], "accompani": [283, 292], "runner": 283, "testdata": [283, 295], "arrai": [283, 294, 296, 308], "And": [283, 292, 296, 308], "under": [284, 290, 292, 306, 310], "construct": [284, 300], "complet": 284, "four": 284, "distinct": 284, "layer": [284, 297, 299], "worklow": 284, "higher": [284, 290, 294, 296, 307], "coupl": 284, "mathemat": [284, 294, 301], "concid": 284, "live": 284, "namespac": 284, "mutablesequ": 284, "scalar": [284, 294], "element": [284, 295, 310], "concern": [284, 292], "expos": 284, "numpydoc": 284, "readthedoc": 284, "ecosystem": 284, "thu": [284, 289, 292, 294, 308], "wrap": 284, "share": [284, 292, 299], "leak": 284, "third": [284, 292], "parti": [284, 292], "break": 284, "run_estmethod": 286, "chapter": [286, 297], "few": 286, "cartesian": 286, "addition": [286, 297, 308], "9999": 286, "runtime_estim": 286, "estmethod_run2": 286, "2422": 286, "465718": 286, "81": [286, 289, 295], "estmethod_run1": 286, "2271": 286, "769243": 286, "run_typ": 286, "1299": [286, 291], "696027": 286, "2420": 286, "117263": 286, "145": 286, "2702": 286, "1840": 286, "3241": 286, "6578": 286, "iiv_cl_estim": [286, 291, 305], "iiv_vc_estim": [286, 291, 305], "481858": [286, 289, 291, 297], "593654": [286, 289, 291, 297], "439589": 286, "483291": 286, "598179": 286, "901289": 286, "419533": 286, "408292": 286, "iiv_mat_estim": [286, 291, 305], "000130": [286, 291, 297], "322572": 286, "197647": 286, "865979": 286, "105366": 286, "10000": 286, "787": 286, "WITH": [286, 289, 291, 292], "THE": [286, 289, 291, 292], "creation": 287, "model_3b": 287, "u": [287, 296], "eta_i": 287, "leq": 287, "n_": 287, "par": [287, 294], "eta_k": 287, "bmatrix": 287, "vdot": 287, "eta_": [287, 294, 296], "sim": [287, 294, 296, 307], "mathcal": [287, 294, 296], "mu_2": 287, "omega_": [287, 294], "n1": 287, "n2": 287, "ddot": 287, "latter": 287, "partit": 287, "5th": 287, "630859": 287, "868770": 287, "176754": 287, "95th": 287, "925602": 287, "082310": 287, "244607": 287, "569077": 287, "600360": 287, "632538": 287, "532478": 287, "824355": 287, "138312": 287, "577861": 287, "761430": 287, "991915": 287, "003863": 287, "148763": 287, "297579": 287, "600771": 287, "631260": 287, "661025": 287, "315965": 287, "549669": 287, "811532": 287, "margin": 287, "ij": 287, "ijk": 287, "omega_k": 287, "sigma_1": 287, "sigma_2": 287, "sigma_i": 287, "turn": [287, 294], "percent": 287, "red": 287, "figur": 287, "vconcatchart": 287, "sigma_": [287, 294], "020503": 287, "628814": 287, "009309": 287, "544459": 287, "026950": 287, "613127": 287, "050396": 287, "551581": 287, "individual_effect": 287, "913307": 287, "899565": 287, "923297": 287, "939015": 287, "926632": 287, "948404": 287, "933506": 287, "894967": 287, "970755": 287, "010192": 287, "973823": 287, "047109": 287, "992728": 287, "986142": 287, "999404": 287, "361911": 287, "322628": 287, "418737": 287, "894772": 287, "868658": 287, "917333": 287, "947797": 287, "923656": 287, "969732": 287, "771958": 287, "748072": 287, "790423": 287, "790120": 287, "768277": 287, "806911": 287, "percentu": 287, "unexplained_vari": 287, "sd_observ": 287, "sd_5th": 287, "sd_95th": 287, "469535": 287, "359934": 287, "547612": 287, "465490": 287, "352335": 287, "538174": 287, "165502": 287, "141580": 287, "190726": 287, "159149": 287, "134989": 287, "183613": 287, "420471": 287, "327104": 287, "490419": 287, "404440": 287, "306148": 287, "467046": 287, "143317": 287, "122348": 287, "166012": 287, "141826": 287, "120282": 287, "163610": 287, "percetil": 287, "025328": 287, "022571": 287, "020115": 287, "216681": 287, "188254": 287, "163572": 287, "027391": 287, "021634": 287, "020540": 287, "intermedi": 287, "model_4": [287, 294], "parameter_inits_and_estim": 287, "model_3": 287, "115195": 287, "007066": 287, "209016": 287, "125999": 287, "020191": 287, "224959": 287, "126000": 287, "007084": 287, "38635": 287, "220463": 287, "195326": 287, "176796": 287, "bsv_apgr": [287, 294], "010583": 287, "107027": 287, "000008": 287, "171529": 287, "404278": 287, "012042": 287, "115427": 287, "000032": 287, "208475": 287, "415588": 287, "000030": 287, "062712": 287, "117271": 287, "039930": 287, "446939": 287, "402075": 287, "bsv_wgt": [287, 294], "244579": 287, "244448": 287, "002173": 287, "002170": 287, "244080": 287, "007763": 287, "007760": 287, "249237": 287, "034610": 287, "015250": 287, "relative_chang": 287, "773218": 287, "095327": 287, "520526": 287, "271369": 287, "110618": 287, "974324": 287, "657803": 287, "852": 287, "803483": 287, "753": 287, "302743": 287, "themselv": 287, "ideal": 287, "estimated_covari": 287, "stdev": 287, "423728": 287, "237640": 287, "525424": 287, "704565": [287, 296], "nyberg": 287, "hb": 287, "jonsson": 287, "mo": 287, "introduct": 287, "cpt": 287, "pharmacometr": [287, 290, 292, 308], "syst": 287, "pharmacol": 287, "1002": 287, "psp4": 287, "12741": 287, "plan": 288, "stabl": 288, "googl": [288, 301], "coral": 288, "repo": 288, "tflite_runtim": 288, "nonlinear": 288, "read_model_result": 289, "aspect": [289, 296, 304, 308], "explor": [289, 301], "naiv": 289, "minima": 289, "\u03b4ofv": [289, 291, 297], "\u03b4aic": [289, 291, 297], "\u03b4bic": [289, 291, 297], "iivsearch_no_of_etas_candidate3": 289, "282024": 289, "iivsearch_no_of_etas_candidate2": 289, "217": 289, "691571": 289, "iivsearch_no_of_etas_candidate6": 289, "385": 289, "641987": 289, "iivsearch_no_of_etas_candidate1": 289, "631": 289, "871991": 289, "iivsearch_no_of_etas_candidate5": 289, "633": [289, 295], "419500": 289, "iivsearch_no_of_etas_candidate4": 289, "815": 289, "076729": 289, "iivsearch_no_of_etas_candidate7": 289, "834": 289, "249063": 289, "iivsearch_block_structure_candidate1": 289, "971960": 289, "1283": 289, "597406": 289, "1279": 289, "315382": 289, "1061": 289, "623812": 289, "673395": 289, "443392": 289, "645": 289, "895882": 289, "464": 289, "238653": 289, "066319": 289, "1365": 289, "569365": 289, "178325": 289, "1280": 289, "1278": [289, 297], "1070": 289, "204731": 289, "1058": 289, "897": 289, "963854": 289, "024311": 289, "644": 289, "650": 289, "186341": 289, "640": 289, "468": 289, "529112": 289, "458": 289, "437": 289, "440744": 289, "1364": 289, "1261": [289, 291], "189012": 289, "1259": [289, 297], "530267": [289, 297], "1039": 289, "215418": [289, 306], "641723": 289, "034998": 289, "620": 289, "864210": 289, "206982": 289, "417": 289, "411370": 289, "160972": 289, "5333": 289, "0366": 289, "1164": 289, "2929": 289, "8058": 289, "9055": 289, "2270": 289, "9424": 289, "1360": 289, "239": 289, "1090": 289, "234": 289, "6680": 289, "9380": 289, "6690": 289, "9880": 289, "433544": 289, "114210": 289, "347648": 289, "316164": 289, "310155": 289, "922906": 289, "434563": 289, "436279": 289, "481830": 289, "594777": 289, "396159": 289, "516927": 289, "593578": 289, "414690": 289, "247930": 289, "656304": 289, "00013": 289, "31998": 289, "08352": 289, "43473": 289, "209975": 289, "401593": 289, "574966": 289, "736398": 289, "750954": 289, "744891": 289, "810669": 289, "215885": 289, "iiv_cl_iiv_vc_estim": 289, "498114": 289, "965311": 289, "348227": 289, "596114": 289, "524856": 289, "831038": 289, "973037": 289, "826292": 289, "168816": 289, "275494": 289, "612863": 289, "081253": 289, "444919": 289, "093815": 289, "067016": 289, "554482": 289, "103963": 289, "060027": 289, "670815": 289, "108198": 289, "049148": 289, "371": 289, "rxode2": [290, 296], "post": [290, 305], "sens": 291, "brute": 291, "approach": 291, "nonzero": 291, "constant": 291, "540508": 291, "1265": 291, "694052": 291, "230772": 291, "384316": 291, "230394": 291, "383938": 291, "1262": 291, "153544": 291, "750000": 291, "403544": 291, "750400": 291, "403145": 291, "060114": 291, "093431": 291, "043077": 291, "1257": 291, "110467": 291, "782429": 291, "1115": 291, "911624": 291, "015062": 291, "707566": 291, "017679": 291, "017280": 291, "707992": 291, "707614": 291, "017728": 291, "1145": 291, "944840": 291, "230": 291, "1954": 291, "242": [291, 302, 304], "440613": 291, "665": 291, "439784": 291, "1951": 291, "241": 291, "1950": 291, "440611": 291, "1402": 291, "439785": 291, "439783": 291, "2313": 291, "438628": 291, "474140": 291, "586866": 291, "311861": 291, "472835": 291, "590422": 291, "320387": 291, "474125": 291, "586859": 291, "311859": 291, "474111": 291, "586860": 291, "311903": 291, "590425": 291, "320393": 291, "472840": 291, "590424": 291, "320395": 291, "572627": 291, "290631": 291, "194680": 291, "002735": 291, "195532": 291, "194676": 291, "194675": 291, "195531": 291, "197005": 291, "483460": 291, "000006": 291, "000000e": [291, 306], "241921": 291, "119820": 291, "001912": 291, "068405": 291, "121866": 291, "620420": 291, "271367": 291, "291396": 291, "230854": 291, "051358": 291, "936871": 291, "267222": 291, "042977": 291, "050766": 291, "059323": 291, "250083": 291, "291876": 291, "187631": 291, "020838": 291, "612880": 291, "660334": 291, "657": 291, "279": [291, 302], "adopt": 292, "wikimedia": 292, "bowl_of_hygieia_by_david": 292, "svg": 292, "cc": 292, "BY": 292, "sa": 292, "font": 292, "pt": 292, "san": 292, "relicens": 292, "lgpl": 292, "know": 292, "maintaint": 292, "softwar": [292, 294, 295, 296, 301, 308], "redistribut": 292, "publish": 292, "foundat": 292, "hope": 292, "warranti": 292, "impli": 292, "merchant": 292, "FOR": 292, "modif": [292, 304], "permit": 292, "retain": 292, "disclaim": 292, "reproduc": 292, "materi": 292, "holder": 292, "AND": 292, "AS": 292, "OR": 292, "BUT": 292, "NOT": 292, "TO": 292, "OF": 292, "IN": 292, "shall": 292, "BE": 292, "liabl": 292, "indirect": 292, "incident": 292, "exemplari": 292, "consequenti": 292, "damag": 292, "procur": 292, "good": 292, "servic": 292, "loss": 292, "profit": 292, "busi": 292, "interrupt": 292, "ON": 292, "theori": [292, 294], "liabil": 292, "contract": 292, "tort": 292, "neglig": 292, "aris": 292, "advis": 292, "SUCH": 292, "june": 292, "2007": 292, "inc": 292, "fsf": 292, "preambl": 292, "copyleft": 292, "practic": 292, "design": [292, 294, 301, 308], "awai": 292, "contrast": 292, "guarante": 292, "speak": 292, "price": 292, "charg": 292, "wish": 292, "piec": 292, "prevent": 292, "deni": 292, "ask": [292, 310], "surrend": 292, "therefor": 292, "respons": 292, "grati": 292, "fee": 292, "recipi": 292, "gpl": 292, "assert": 292, "offer": [292, 296], "permiss": 292, "clearli": 292, "sake": 292, "erron": 292, "devic": 292, "although": 292, "manufactur": 292, "fundament": 292, "incompat": 292, "aim": [292, 304], "systemat": 292, "abus": 292, "area": [292, 301], "unaccept": 292, "prohibit": 292, "substanti": 292, "domain": [292, 299, 308], "stand": 292, "readi": 292, "provis": 292, "futur": 292, "threaten": 292, "constantli": 292, "patent": 292, "danger": 292, "proprietari": 292, "assur": 292, "law": 292, "semiconductor": 292, "mask": 292, "license": 292, "address": 292, "organ": [292, 294], "fashion": 292, "exact": 292, "earlier": 292, "cover": [292, 297, 298, 300, 309], "unmodifi": 292, "propag": 292, "secondarili": 292, "infring": 292, "countri": 292, "convei": 292, "mere": 292, "network": 292, "transfer": 292, "extent": 292, "conveni": [292, 294], "promin": 292, "visibl": 292, "menu": 292, "criterion": 292, "offici": 292, "wide": 292, "among": 292, "essenti": 292, "kernel": 292, "script": [292, 308], "link": [292, 305], "subprogram": 292, "intim": 292, "regener": 292, "grant": 292, "irrevoc": 292, "affirm": 292, "unlimit": 292, "constitut": 292, "fair": 292, "equival": [292, 308], "sole": 292, "facil": 292, "compli": 292, "behalf": 292, "relationship": [292, 306], "circumst": 292, "sublicens": 292, "anti": 292, "circumvent": 292, "deem": 292, "technolog": 292, "fulfil": 292, "oblig": 292, "articl": 292, "wipo": 292, "treati": 292, "decemb": 292, "1996": 292, "waiv": 292, "forbid": 292, "exercis": 292, "intent": 292, "enforc": 292, "medium": [292, 301], "conspicu": 292, "intact": 292, "absenc": 292, "along": 292, "relev": [292, 298, 308], "anyon": 292, "who": [292, 298], "possess": 292, "invalid": 292, "natur": 292, "storag": 292, "aggreg": 292, "beyond": 292, "embodi": 292, "durabl": 292, "customarili": 292, "interchang": 292, "spare": 292, "reason": [292, 301], "cost": 292, "server": 292, "occasion": 292, "noncommerci": 292, "subsect": 292, "6b": 292, "further": [292, 294], "clear": [292, 310], "sai": [292, 298], "host": 292, "satisfi": 292, "peer": 292, "transmiss": 292, "6d": 292, "portion": 292, "consum": 292, "tangibl": 292, "household": 292, "sold": 292, "incorpor": 292, "dwell": 292, "doubt": 292, "resolv": [292, 299], "favor": 292, "coverag": 292, "typic": [292, 308], "commerci": 292, "industri": 292, "procedur": 292, "suffic": 292, "interf": 292, "perpetu": 292, "character": 292, "But": 292, "nor": 292, "abil": 292, "rom": 292, "advers": 292, "protocol": 292, "publicli": 292, "password": 292, "unpack": 292, "supplement": 292, "govern": 292, "notwithstand": 292, "misrepresent": 292, "licensor": 292, "declin": 292, "trademark": 292, "trade": 292, "indemnif": 292, "contractu": 292, "impos": 292, "surviv": 292, "termin": 292, "expressli": 292, "void": 292, "paragraph": 292, "ceas": 292, "reinstat": 292, "provision": 292, "perman": 292, "notifi": 292, "prior": 292, "dai": 292, "cessat": 292, "moreov": 292, "cure": 292, "receipt": 292, "qualifi": 292, "ancillari": 292, "consequ": 292, "likewis": 292, "downstream": 292, "complianc": 292, "entiti": 292, "asset": 292, "subdivid": 292, "predecessor": 292, "plu": 292, "effort": 292, "royalti": 292, "litig": 292, "claim": 292, "counterclaim": 292, "lawsuit": 292, "alleg": 292, "sell": 292, "sale": 292, "acquir": 292, "hereaft": 292, "manner": [292, 297], "worldwid": 292, "agreement": 292, "denomin": 292, "coven": 292, "sue": 292, "knowingli": 292, "readili": 292, "arrang": 292, "depriv": 292, "yourself": 292, "benefit": [292, 301], "knowledg": 292, "believ": 292, "pursuant": 292, "convey": 292, "discriminatori": 292, "scope": 292, "payment": 292, "primarili": 292, "march": 292, "constru": 292, "defens": 292, "court": 292, "contradict": 292, "excus": 292, "simultan": [292, 297], "pertin": 292, "agre": 292, "whom": 292, "refrain": 292, "affero": 292, "revis": 292, "Such": 292, "spirit": 292, "ever": 292, "THERE": 292, "qualiti": 292, "prove": 292, "defect": 292, "repair": 292, "WILL": 292, "inabl": 292, "BEING": 292, "inaccur": 292, "sustain": 292, "failur": [292, 301], "review": 292, "waiver": 292, "civil": 292, "greatest": 292, "achiev": 292, "attach": 292, "safest": 292, "pointer": 292, "brief": 292, "idea": [292, 301], "electron": 292, "paper": 292, "hypothet": 292, "Of": 292, "cours": 292, "gui": 292, "box": [292, 304], "employ": 292, "programm": 292, "school": 292, "philosophi": 292, "why": 292, "7b2feb6f20b626a559d3150f6638c111f20b5213": 292, "lin_evalu": 293, "lin_estim": 293, "268756": 293, "problemat": 293, "947354": 293, "939053": 293, "008301": 293, "970582": 293, "012053": 293, "041471": 293, "982345": 293, "979456": 293, "002889": 293, "457096": 293, "435700": 293, "021396": 293, "839445": 293, "838391": 293, "001054": 293, "257222": 293, "278016": 293, "020794": 293, "098344": 293, "077164": 293, "021179": 293, "538623": 293, "520111": 293, "018512": 293, "647972": 293, "673400": 293, "025427": 293, "394648": 293, "373180": 293, "021468": 293, "480163": 293, "505680": 293, "025517": 293, "650236": 293, "629298": 293, "020938": 293, "991406": [293, 295], "988587": 293, "002820": 293, "378873": 293, "372846": 293, "006028": 293, "739906": 293, "725640": 293, "014265": 293, "328801": 293, "326482": 293, "002319": 293, "113286": 293, "104515": 293, "008771": 293, "212076": 293, "325127": 293, "113051": 293, "334048": 293, "321306": 293, "012742": 293, "327782": 293, "306287": 293, "021495": 293, "821537": 293, "795371": 293, "026165": 293, "631283": 293, "620311": 293, "010972": 293, "861666": 293, "855927": 293, "005739": 293, "915260": 293, "913348": 293, "001913": 293, "988972": 293, "024483": 293, "035512": 293, "279274": 293, "269277": 293, "009997": 293, "733179": 293, "729199": 293, "003980": 293, "830055": 293, "827764": 293, "002290": 293, "851725": 293, "847176": 293, "004549": 293, "212098": 293, "192122": 293, "019976": 293, "774789": 293, "773559": 293, "001230": 293, "352292": 293, "351131": 293, "001162": 293, "172644": 293, "165200": 293, "007443": 293, "427375": 293, "420258": 293, "007117": 293, "381438": 293, "412378": 293, "030941": 293, "624011": 293, "614613": 293, "009397": 293, "970630": 293, "955216": 293, "015414": 293, "177025": 293, "002885": 293, "206543": 293, "180626": 293, "025916": 293, "955033": 293, "945036": 293, "982451": 293, "972114": 293, "010337": 293, "051495": 293, "098643": 293, "047147": 293, "424500": 293, "425925": 293, "001425": 293, "734347": 293, "702764": 293, "031583": 293, "018483": 293, "997957": 293, "020526": 293, "810285": [293, 295], "807205": 293, "003080": 293, "279257": 293, "276411": 293, "002846": 293, "168465": 293, "267932": 293, "099467": 293, "190512": 293, "178815": 293, "011697": 293, "749138": 293, "727859": 293, "021278": 293, "598562": 293, "616685": 293, "018123": 293, "237457": 293, "251607": 293, "014150": 293, "568928": 293, "581417": 293, "012489": 293, "800065": 293, "795239": 293, "004826": 293, "098027": 293, "103873": 293, "005846": 293, "586253": [293, 295], "582931": 293, "003323": 293, "663950": 293, "650298": 293, "013652": 293, "850995": 293, "833333": 293, "017662": 293, "605848": 293, "592551": 293, "013297": 293, "iofv_plot": 293, "At": 294, "heart": 294, "li": [294, 308], "subclass": 294, "principl": 294, "mymodel": [294, 296], "parset": 294, "displaystyl": [294, 296], "eps_": 294, "similarli": [294, 310], "theta_": 294, "s_": 294, "a_": [294, 296], "quit": 294, "flexibl": 294, "cumbersom": 294, "easili": 294, "unimport": 294, "frem_path": 294, "frem_model": 294, "frem_model_result": 294, "omega\u2082": 294, "omega\u2083": 294, "omega\u2084": 294, "\u2082": 294, "eta\u2083": 294, "\u2083": 294, "eta\u2084": 294, "eps\u2082": 294, "epscov": 294, "bsv_": 294, "omega_2_1": 294, "omega_3_1": 294, "omega_4_1": 294, "omega_3_2": 294, "omega_4_2": 294, "omega_4_3": 294, "000286193": 294, "0676481": 294, "0256033": 294, "0235094": 294, "00161838": 294, "24458": 294, "omega_est": 294, "0393482": 294, "0168369": 294, "0442286": 294, "0426757": 294, "0259374": 294, "0654878": 294, "00168063": 294, "983027": 294, "240423": 294, "98305": 294, "choleski": 294, "198363807182661": 294, "0848788911603008": 294, "136868454493349": 294, "222967085720797": 294, "616745467855979": 294, "743597812371906": 294, "215138540674925": 294, "145697201390566": 294, "508675383095755": 294, "810424017694199": 294, "pure": 294, "astyp": 294, "numeric64": 294, "linalg": 294, "19836381": 294, "08487889": 294, "13686845": 294, "22296709": 294, "61674547": 294, "74359781": 294, "21513854": 294, "1456972": 294, "50867538": 294, "81042402": 294, "esim": 295, "2760562818805": 295, "parameter_estimates_sdcorr": 295, "171321": 295, "167051": 295, "115069": 295, "Or": 295, "standard_errors_sdcorr": 295, "039153": 295, "022378": 295, "009904": 295, "relative_standard_error": 295, "044731": 295, "027325": 295, "527072": 295, "457068": 295, "267918": 295, "172147": 295, "proper": 295, "388058": 295, "356900": 295, "238442": 295, "096516": 295, "invers": 295, "29955600": 295, "400": 295, "910": 295, "267": 295, "039": 295, "809": 295, "520": 295, "980": 295, "200": 295, "450": 295, "947352": 295, "970591": 295, "982342": 295, "457091": 295, "839437": 295, "257230": 295, "098338": 295, "538621": 295, "647969": 295, "394643": 295, "480164": 295, "650233": 295, "378880": 295, "739902": 295, "328800": 295, "113284": 295, "212096": 295, "334047": 295, "327778": 295, "821533": 295, "631281": 295, "861669": 295, "915261": 295, "988977": 295, "279273": 295, "733181": 295, "830053": 295, "851724": 295, "212095": 295, "774791": 295, "352283": 295, "172643": 295, "427376": 295, "381444": 295, "624014": 295, "970627": 295, "177028": 295, "206540": 295, "955029": 295, "982447": 295, "051499": 295, "424503": 295, "734342": 295, "018477": 295, "279258": 295, "168486": 295, "190508": 295, "749134": 295, "598565": 295, "237467": 295, "568934": 295, "800062": 295, "098025": 295, "663948": 295, "850993": 295, "605845": 295, "143": 295, "045": [295, 302], "971": 295, "881": 295, "575": 295, "080": 295, "063": 295, "427": 295, "668": 295, "543": 295, "662": 295, "478": 295, "667": 295, "253": 295, "495": 295, "918": 295, "67071": 295, "401100": 295, "35080": 295, "587770": 295, "36360": 295, "278800": 295, "19730": 295, "670700": 295, "21710": 295, "352600": 295, "86050": 295, "067200": 295, "35060": 295, "059269": 295, "72100": 295, "036754": 295, "10860": 295, "814140": 295, "28180": 295, "699410": 295, "eb": 295, "043861": 295, "005430": 295, "166321": 295, "131833": 295, "095934": 295, "130868": 295, "009154": 295, "017388": 295, "102019": 295, "283500": 295, "019417": 295, "099839": 295, "045946": 295, "059072": 295, "024270": 295, "189351": 295, "248536": 295, "091872": 295, "009545": 295, "012052": 295, "066151": 295, "293685": 295, "030236": 295, "074789": 295, "094502": 295, "147433": 295, "076820": 295, "105604": 295, "020051": 295, "066265": 295, "086035": 295, "023260": 295, "067138": 295, "030859": 295, "337255": 295, "035532": 295, "032579": 295, "028410": 295, "003589": 295, "080613": 295, "060233": 295, "052854": 295, "004469": 295, "057344": 295, "051992": 295, "212941": 295, "137510": 295, "004111": 295, "023282": 295, "302636": 295, "039069": 295, "119442": 295, "044956": 295, "263320": 295, "000776": 295, "083231": 295, "003150": 295, "012752": 295, "049654": 295, "080932": 295, "000555": 295, "099614": 295, "061864": 295, "332738": 295, "038156": 295, "067641": 295, "038017": 295, "184137": 295, "156617": 295, "208753": 295, "114558": 295, "053036": 295, "008405": 295, "026004": 295, "144920": 295, "081646": 295, "083320": 295, "015380": 295, "000392": 295, "078062": 295, "018966": 295, "112030": 295, "112715": 295, "383786": 295, "001730": 295, "167583": 295, "042068": 295, "066598": 295, "037600": 295, "000093": 295, "010662": 295, "009775": 295, "058306": 295, "229005": 295, "033958": 295, "008959": 295, "092312": 295, "050987": 295, "192569": 295, "002727": 295, "225657": 295, "115824": 295, "204269": 295, "054792": 295, "066334": 295, "123689": 295, "239678": 295, "047215": 295, "186615": 295, "000949": 295, "010812": 295, "015929": 295, "017213": 295, "005234": 295, "122552": 295, "076677": 295, "095696": 295, "024883": 295, "002999": 295, "007157": 295, "inspect": [296, 309], "model_nlmixr": 296, "diff": [296, 301], "add_error": 296, "prop_error": 296, "focei": 296, "model_start": 296, "eta_vc": 296, "pop_vc": 296, "pop_": 296, "225": 296, "epsilon_": 296, "iiv_cl_iiv_vc": 296, "iiv_vc": 296, "\u03c3": 296, "iiv_mat": 296, "iiv_": 296, "advan2": 296, "THEN": 296, "22500000000000e": 296, "cond": 296, "maxev": 296, "99999": 296, "cipredi": 296, "mytab": 296, "tlag": 296, "alag1": 296, "pop_mdt": 296, "advan3": 296, "trans4": 296, "pop_qp1": 296, "pop_vp1": 296, "run4": 296, "tol": 296, "pop_clmm": 296, "pop_km": 296, "iiv_clmm": 296, "iiv_clmm_iiv_vc": 296, "iiv_cl_iiv_mat": 296, "iiv_vc_iiv_mat": 296, "0094868": 296, "onto": 296, "wgt_median": 296, "30000": 296, "clwgt": 296, "pop_clwgt": 296, "user_effect": 296, "wgt_std": 296, "add_population_paramet": 296, "unfix_parameters_to": 296, "\u03b5\u209a\u2081": 296, "p1": 296, "set_time_varying_error_model": [296, 305], "100000000000000": 296, "f_flag": 296, "f_": 296, "geq": 296, "get_id": 296, "get_mdv": 296, "largest": 296, "ser": 296, "delai": [297, 308], "grammar": [297, 301], "exhaustive_stepwis": 297, "obtain": 297, "basi": 297, "subsequ": [297, 298, 308], "modelsearch_candidate2": [297, 308], "594608": 297, "1272": 297, "124874": 297, "modelsearch_candidate3": [297, 308], "558028": 297, "088295": 297, "modelsearch_candidate4": [297, 308], "956313": 297, "1270": 297, "486580": 297, "287000": 297, "1260": 297, "817266": 297, "362287": 297, "1327": 297, "153182": 297, "1325": 297, "551467": 297, "1307": 297, "301235": 297, "1295": 297, "1305": 297, "1289": 297, "2927": 297, "4334": 297, "7778": 297, "0058": 297, "1640": 297, "260324": 297, "7646": 297, "824443": 297, "5477": 297, "607839": 297, "1147": 297, "842498": 297, "470974": 297, "595276": 297, "526185": 297, "930160": 297, "495109": 297, "322680": 297, "470531": 297, "515250": 297, "312692": 297, "194221": 297, "202201": 297, "207885": 297, "232322": 297, "199750": 297, "205369": 297, "193439": 297, "pop_qp1_estim": 297, "pop_vp1_estim": 297, "pop_mdt_estim": 297, "155413": 297, "4192": 297, "6100": 297, "172730": 297, "3977": 297, "4562": 297, "158070": 297, "8042": 297, "8517": 297, "iiv_mdt_estim": 297, "156289": 297, "192020": 297, "092419": 297, "262429": 297, "720369": 297, "464263": 297, "127061": 297, "906722": 297, "053781": 297, "923055": 297, "795863": 297, "030658": 297, "661330": 297, "168680": 297, "833073": 297, "041529": 297, "205858": 297, "064930": 297, "609673": 297, "396329": 297, "928556": 297, "365": 297, "330": 297, "topic": 298, "scheme": 298, "theta_cl": 298, "mention": 298, "ve": 298, "despit": 298, "write_etas_in_abbr": 298, "altair": [299, 301], "vega": 299, "lite": 299, "ggplot": 299, "editor": 299, "clamp": 299, "vconcat": 299, "spec": 299, "inten": 300, "export": 300, "strictli": 300, "necessesari": 300, "detect_model": 300, "summer": 301, "master": 301, "thesi": 301, "internship": 301, "email": 301, "team": 301, "tox": 301, "pytest": 301, "sphinx": 301, "wise": 301, "known": 301, "trial": 301, "involv": 301, "outcom": 301, "350h": 301, "difficulti": 301, "mentor": 301, "scipi": 301, "focu": 301, "proof": 301, "concept": 301, "algebra": 301, "simul": [301, 307], "scratch": 301, "lark": 301, "earlei": 301, "lalr": 301, "stricter": 301, "175h": 301, "almost": 301, "compat": 301, "benefici": 301, "easi": 301, "potenti": 301, "eas": 301, "jupyt": 301, "holoview": 301, "bokeh": 301, "monitor": 301, "ongo": 301, "veri": 301, "happen": [301, 310], "converg": 301, "sort": [301, 308], "dashboard": 301, "complement": 301, "realtim": 301, "restart": [301, 310], "middl": 301, "worflow": 301, "cv": [302, 304], "772": [302, 304], "700": 302, "042": [302, 304], "sdeps_0": [302, 304], "t1": 302, "298": 302, "sdeps_t1": 302, "t2": 302, "886": 302, "sdeps_t2": 302, "t3": 302, "272": 302, "sdeps_t3": 302, "t4": 302, "716": 302, "sdeps_t4": 302, "t5": 302, "218": 302, "sdeps_t5": 302, "t6": 302, "928": 302, "sdeps_t6": 302, "t7": 302, "092": 302, "sdeps_t7": 302, "t8": 302, "914": 302, "sdeps_t8": 302, "t9": 302, "sdeps_t9": 302, "390": [302, 304], "159": [302, 304], "t0": [302, 304], "271": [302, 304], "sdeps_t0": [302, 304], "956": [302, 304], "717": 302, "014": 302, "983": 302, "884": 302, "017": 302, "955": 302, "958": 302, "969": 302, "933": 302, "022": 302, "819": 302, "007": 302, "755": 302, "982": 302, "387": 302, "th_0": 302, "257": 302, "867": 302, "th_t1": 302, "211": 302, "th_t2": 302, "277": 302, "761": 302, "th_t3": 302, "033": 302, "th_t4": 302, "367": 302, "th_t5": 302, "204": 302, "170": 302, "th_t6": 302, "078": 302, "th_t7": 302, "841": 302, "th_t8": 302, "th_t9": 302, "030": 302, "124": 302, "289": 302, "386": 302, "203": 302, "019": 302, "delta_pow": [302, 304], "037": [302, 304], "autocorrel": [302, 304], "dtb": [302, 304], "91": [302, 304], "idv_varying_ruv": 302, "idv_varying_ruv_cutoff0": 302, "idv_varying_ruv_cutoff1": 302, "idv_varying_ruv_cutoff2": 302, "idv_varying_ruv_cutoff3": 302, "idv_varying_ruv_cutoff4": 302, "idv_varying_ruv_cutoff5": 302, "idv_varying_ruv_cutoff6": 302, "idv_varying_ruv_cutoff7": 302, "idv_varying_ruv_cutoff8": 302, "idv_varying_combin": 302, "idv_varying_theta": 302, "sdep": 302, "delet": 303, "diagnost": 303, "impact": 304, "improement": 304, "592698": 304, "197887": 304, "007493": 304, "521171": 304, "et1apgr": 304, "487930": 304, "residual_error_model": 304, "910000": 304, "030000": 304, "diagnos": 304, "structural_bia": 304, "cpred": 304, "binmin": 304, "binmax": 304, "binid": 304, "258": 304, "strutur": 304, "mdel": 304, "fullblock_paramet": 304, "183463": 304, "171306": 304, "554610": 304, "154408": 304, "167053": 304, "cox": 304, "boxcox_paramet": 304, "shape": 304, "new_sd": 304, "old_sd": 304, "922083": 304, "182037": 304, "332800": 304, "166021": 304, "tdist_paramet": 304, "79": 304, "9997": 304, "168477": 304, "9986": 304, "166469": 304, "residual_error": 304, "additional_paramet": 304, "coeff": 304, "48793": 304, "033334": 304, "48218": 304, "052342": 304, "59034": 304, "008371": 304, "00887": 304, "003273": 304, "ibrahim": 305, "quickli": [305, 308], "assess": 305, "inde": 305, "cwres_model": 305, "479721": 305, "385268": 305, "002792": 305, "time_varying1": 305, "117041": 305, "555154": 305, "time_varying3": 305, "336641": 305, "091207": 305, "065738": 305, "654562": 305, "046578": 305, "519115": 305, "612710": 305, "643741": 305, "027766": 305, "sigma_add": 305, "000367": 305, "sigma_prop": 305, "967365": 305, "00123": 305, "0976": 305, "12252": 305, "14299": 305, "000337": 305, "05242": 305, "006105": 305, "10545": 305, "12659": 305, "15573": 305, "00054": 305, "04769": 305, "030825": 305, "mox3": 305, "2460": 305, "704469": 305, "957378": 305, "2473": 305, "661847": 305, "269102": 305, "2495": 305, "973571": 305, "2444": 305, "2455": 305, "2475": 305, "2423": 305, "757516": 305, "2435": 305, "047712": 305, "2453": 305, "068976": 305, "707": 305, "5434": 305, "531596": 305, "794": 305, "3091": 305, "528620": 305, "3094": 305, "532547": 305, "iiv_vc_iiv_cl_estim": 305, "077743": 305, "038888": 305, "076793": 305, "039924": 305, "071628": 305, "038470": 305, "072309": 305, "704770": 305, "093311": 305, "074889": 305, "707665": 305, "081095": 305, "075048": 305, "705429": 305, "044311": 305, "iiv_ruv1_estim": 305, "time_varying_estim": 305, "039675": 305, "040734": 305, "42509": 305, "215727": 305, "655144": 305, "708324": 305, "762729": 305, "236530": 305, "229762": 305, "715966": 305, "423148": 305, "419741": 305, "774540": 305, "164274": 305, "450202": 305, "195425": 305, "960585": 305, "090461": 305, "848498": 305, "052021": 305, "239462": 305, "065148": 305, "571348": 305, "244582": 305, "161981": 305, "509910": 305, "373696": 305, "084489": 305, "647643": 305, "344772": 305, "083776": 305, "259395": 305, "101415": 305, "024651": 305, "443542": 305, "124023": 305, "183089": 305, "977222": 305, "219": 305, "moustafa": 305, "maria": 305, "kjellsson": 305, "aap": 305, "1208": 305, "s12248": 305, "018": 305, "0240": 305, "pha": 306, "219210": 306, "90878": 306, "219167": 306, "36222": 306, "bmi": 306, "219171": 306, "47564": 306, "cycll": 306, "219203": 306, "94536": 306, "diag": 306, "219206": 306, "01527": 306, "disdur": 306, "219032": 306, "86056": 306, "215321": 306, "70954": 306, "215306": 306, "67698": 306, "phia": 306, "men": 306, "215407": 306, "40295": 306, "phib": 306, "georeg": 306, "215373": 306, "77800": 306, "216968": 306, "25989": 306, "slp": 306, "215359": 306, "18150": 306, "54656": 306, "140000e": 306, "43314": 306, "390000e": 306, "96342": 306, "319000e": 306, "89351": 306, "695800e": 306, "178": 306, "04822": 306, "290000e": 306, "03256": 306, "060000e": 306, "72597": 306, "10102": 306, "580000e": 306, "1661": 306, "58291": 306, "50452": 306, "phaag": 306, "phabmi": 306, "phacycl": 306, "phadiag": 306, "phadisdur": 306, "backward_scm_dir1": 306, "phawt": 306, "phiamen": 306, "phibgeoreg": 306, "phibmen": 306, "slpgeoreg": 306, "304": 306, "beween": 306, "slightli": 306, "215961": 306, "46277": 306, "3249": 306, "44601": 306, "215748": 306, "07194": 306, "213": 306, "39083": 306, "215570": 306, "57352": 306, "49842": 306, "215486": 306, "23440": 306, "33912": 306, "87007": 306, "36433": 306, "215357": 306, "74693": 306, "61": 306, "12314": 306, "215337": 306, "95044": 306, "79649": 306, "24090": 306, "215332": 306, "91461": 306, "23763": 306, "67861": 306, "00163": 306, "215450": 306, "74783": 306, "07085": 306, "215491": 306, "11568": 306, "43870": 306, "500000e": 306, "700000e": 306, "170000e": 306, "260000e": 306, "360000e": 306, "600000e": 306, "020000e": 306, "620000e": 306, "430000e": 306, "200000e": 306, "lbest": 306, "cpl": 306, "488686": 307, "853273": 307, "230120": 307, "165042": 307, "921633": 307, "215148": 307, "824880": 307, "533799": 307, "027733": 307, "083424": 307, "946876": 307, "993262": 307, "916884": 307, "322738": 307, "654589": 307, "180960": 307, "604188": 307, "905658": 307, "638247": 307, "546277": 307, "370783": 307, "364078": 307, "467337": 307, "313336": 307, "136159": 307, "058260": 307, "957716": 307, "351839": 307, "472019": 307, "542369": 307, "151210": 307, "775938": 307, "664634": 307, "221459": 307, "318875": 307, "873918": 307, "551158": 307, "793703": 307, "527835": 307, "135159": 307, "526828": 307, "899285": 307, "796073": 307, "330868": 307, "615899": 307, "562788": 307, "293600": 307, "230477": 307, "486179": 307, "438225": 307, "818812": 307, "328937": 307, "376893": 307, "479966": 307, "121901": 307, "924846": 307, "446579": 307, "929665": 307, "114640": 307, "432346": 307, "512627": 307, "024193": 307, "615092": 307, "247238": 307, "408347": 307, "694969": 307, "842566": 307, "548598": 307, "018308": 307, "484284": 307, "867625": 307, "387386": 307, "638560": 307, "424024": 307, "664954": 307, "114753": 307, "078385": 307, "853355": 307, "622712": 307, "413680": 307, "282087": 307, "178961": 307, "882876": 307, "695800": 307, "361556": 307, "704503": 307, "678095": 307, "238692": 307, "037941": 307, "541680": 307, "422555": 307, "026935": 307, "166879": 307, "713778": 307, "708577": 307, "316351": 307, "266944": 307, "009725": 307, "567697": 307, "335429": 307, "989005": 307, "937635": 307, "212573": 307, "459161": 307, "388393": 307, "461262": 307, "621329": 307, "462408": 307, "003027": 307, "260472": 307, "277388": 307, "501489": 307, "110075": 307, "179394": 307, "380865": 307, "398492": 307, "366018": 307, "219194": 307, "905147": 307, "218010": 307, "546036": 307, "191401": 307, "961895": 307, "630512": 307, "534496": 307, "051986": 307, "682987": 307, "553003": 307, "231970": 307, "816485": 307, "900845": 307, "767349": 307, "802797": 307, "846457": 307, "988276": 307, "776532": 307, "749003": 307, "822404": 307, "662582": 307, "207434": 307, "725509": 307, "015416": 307, "196823": 307, "565671": 307, "488859": 307, "434087": 307, "212538": 307, "838099": 307, "851698": 307, "341361": 307, "743671": 307, "599116": 307, "140249": 307, "297823": 307, "429352": 307, "086788": 307, "880881": 307, "831345": 307, "659430": 307, "409142": 307, "191840": 307, "516464": 307, "630846": 307, "901408": 307, "775355": 307, "755737": 307, "956378": 307, "793265": 307, "483346": 307, "693935": 307, "794788": 307, "851982": 307, "668763": 307, "912201": 307, "793645": 307, "905528": 307, "382384": 307, "401748": 307, "455902": 307, "069326": 307, "928532": 307, "186642": 307, "498709": 307, "926835": 307, "425364": 307, "077897": 307, "366585": 307, "773375": 307, "497867": 307, "985533": 307, "030662": 307, "819544": 307, "551208": 307, "762211": 307, "565811": 307, "551558": 307, "662370": 307, "843029": 307, "552114": 307, "056323": 307, "630121": 307, "042324": 307, "580405": 307, "187278": 307, "040276": 307, "370226": 307, "035731": 307, "406685": 307, "275622": 307, "802175": 307, "515088": 307, "597045": 307, "957232": 307, "496993": 307, "155311": 307, "639042": 307, "751915": 307, "400720": 307, "361498": 307, "454421": 307, "363698": 307, "977219": 307, "952586": 307, "974785": 307, "024682": 307, "889492": 307, "434510": 307, "641421": 307, "073683": 307, "886356": 307, "575363": 307, "835458": 307, "073635": 307, "853009": 307, "879430": 307, "712658": 307, "253049": 307, "819836": 307, "169888": 307, "374133": 307, "178975": 307, "044583": 307, "497236": 307, "285544": 307, "564632": 307, "415675": 307, "264764": 307, "360173": 307, "765897": 307, "277992": 307, "695028": 307, "396594": 307, "572606": 307, "414926": 307, "586789": 307, "688954": 307, "516160": 307, "358567": 307, "244786": 307, "907778": 307, "249772": 307, "841335": 307, "916145": 307, "496109": 307, "416676": 307, "362886": 307, "659481": 307, "253768": 307, "744242": 307, "222423": 307, "069317": 307, "988252": 307, "936980": 307, "731451": 307, "269584": 307, "206488": 307, "716822": 307, "517867": 307, "605768": 307, "746436": 307, "911020": 307, "125029": 307, "346212": 307, "980420": 307, "763155": 307, "132983": 307, "453899": 307, "583418": 307, "462547": 307, "811144": 307, "686115": 307, "105503": 307, "783555": 307, "363551": 307, "036534": 307, "031564": 307, "043157": 307, "850645": 307, "972480": 307, "892175": 307, "378125": 307, "525306": 307, "225458": 307, "052073": 307, "723710": 307, "242420": 307, "269137": 307, "404922": 307, "699366": 307, "435102": 307, "408322": 307, "512603": 307, "448461": 307, "815026": 307, "509957": 307, "589215": 307, "159667": 307, "175264": 307, "541949": 307, "926077": 307, "481351": 307, "923185": 307, "625663": 307, "194473": 307, "371639": 307, "944302": 307, "824234": 307, "907322": 307, "550825": 307, "663661": 307, "735586": 307, "344235": 307, "903583": 307, "606033": 307, "875052": 307, "500411": 307, "556035": 307, "308617": 307, "501681": 307, "584165": 307, "432371": 307, "881148": 307, "874004": 307, "631308": 307, "372005": 307, "824837": 307, "323449": 307, "366355": 307, "133006": 307, "758791": 307, "357159": 307, "348849": 307, "885525": 307, "860736": 307, "995045": 307, "575351": 307, "080061": 307, "568383": 307, "482883": 307, "300884": 307, "276361": 307, "376218": 307, "005653": 307, "928279": 307, "489785": 307, "898802": 307, "098483": 307, "795252": 307, "968860": 307, "773450": 307, "706108": 307, "078494": 307, "210594": 307, "600450": 307, "916754": 307, "823449": 307, "639544": 307, "104682": 307, "136767": 307, "405150": 307, "185132": 307, "354616": 307, "488282": 307, "406903": 307, "720261": 307, "884839": 307, "736463": 307, "892761": 307, "436720": 307, "367480": 307, "061750": 307, "849137": 307, "341680": 307, "054791": 307, "925921": 307, "423537": 307, "759167": 307, "864669": 307, "962122": 307, "705806": 307, "317393": 307, "280139": 307, "086333": 307, "056381": 307, "331177": 307, "631655": 307, "603301": 307, "449888": 307, "371773": 307, "758919": 307, "748996": 307, "138213": 307, "966413": 307, "814952": 307, "272954": 307, "929655": 307, "878300": 307, "715708": 307, "421235": 307, "563473": 307, "868224": 307, "383043": 307, "480043": 307, "959843": 307, "933191": 307, "676905": 307, "300601": 307, "811596": 307, "585174": 307, "956306": 307, "570879": 307, "786560": 307, "726349": 307, "445912": 307, "351180": 307, "612812": 307, "099846": 307, "876780": 307, "806204": 307, "584818": 307, "991350": 307, "924166": 307, "998400": 307, "892200": 307, "326447": 307, "115117": 307, "225727": 307, "018880": 307, "782192": 307, "806515": 307, "348921": 307, "250063": 307, "574493": 307, "296737": 307, "382526": 307, "944073": 307, "994987": 307, "574667": 307, "857266": 307, "485191": 307, "072216": 307, "874349": 307, "002572": 307, "733704": 307, "711150": 307, "676572": 307, "151243": 307, "707700": 307, "800871": 307, "954047": 307, "931900": 307, "538437": 307, "748099": 307, "731336": 307, "376121": 307, "196475": 307, "247095": 307, "504667": 307, "372391": 307, "848184": 307, "765259": 307, "455400": 307, "826862": 307, "572217": 307, "257409": 307, "502366": 307, "119652": 307, "298009": 307, "360000": 307, "305631": 307, "134650": 307, "361844": 307, "716192": 307, "544260": 307, "266702": 307, "169391": 307, "676934": 307, "022410": 307, "868679": 307, "106708": 307, "597599": 307, "424237": 307, "982047": 307, "904024": 307, "087082": 307, "098997": 307, "169297": 307, "840067": 307, "151935": 307, "963905": 307, "856403": 307, "884553": 307, "567520": 307, "351619": 307, "118999": 307, "893425": 307, "999275": 307, "255630": 307, "509070": 307, "046265": 307, "899880": 307, "408061": 307, "324755": 307, "684344": 307, "473731": 307, "297200": 307, "394438": 307, "493584": 307, "864820": 307, "606428": 307, "119216": 307, "933397": 307, "862927": 307, "693535": 307, "448507": 307, "178177": 307, "965455": 307, "764024": 307, "518105": 307, "477206": 307, "500103": 307, "133073": 307, "320820": 307, "408266": 307, "585654": 307, "027851": 307, "180204": 307, "337790": 307, "960296": 307, "402983": 307, "457112": 307, "195385": 307, "587323": 307, "032512": 307, "814145": 307, "016286": 307, "950516": 307, "788249": 307, "602344": 307, "846592": 307, "884049": 307, "777419": 307, "451814": 307, "243399": 307, "601504": 307, "416254": 307, "866250": 307, "933824": 307, "487277": 307, "418469": 307, "495039": 307, "087071": 307, "547459": 307, "675347": 307, "573838": 307, "611250": 307, "247584": 307, "271405": 307, "749030": 307, "860290": 307, "804622": 307, "876965": 307, "941132": 307, "153441": 307, "319025": 307, "885439": 307, "193338": 307, "054769": 307, "iofv_summari": 307, "orgin": 307, "ob": 307, "sampled_mean": 307, "sampled_stdev": 307, "residual_q1": 307, "743042": 307, "219056": 307, "682820": 307, "550173": 307, "035912": 307, "049484": 307, "184218": 307, "853744": 307, "006216": 307, "975298": 307, "041599": 307, "817153": 307, "833045": 307, "781196": 307, "154061": 307, "813525": 307, "398238": 307, "645044": 307, "535071": 307, "205425": 307, "092618": 307, "104527": 307, "106160": 307, "955250": 307, "058617": 307, "344659": 307, "355728": 307, "480441": 307, "205000": 307, "804075": 307, "093249": 307, "372011": 307, "653334": 307, "076303": 307, "579270": 307, "515891": 307, "726464": 307, "480796": 307, "226795": 307, "894556": 307, "321253": 307, "216333": 307, "282456": 307, "045968": 307, "751381": 307, "998817": 307, "568506": 307, "544129": 307, "725055": 307, "084491": 307, "216676": 307, "724839": 307, "269729": 307, "664468": 307, "086120": 307, "099508": 307, "844053": 307, "234199": 307, "780837": 307, "277342": 307, "322169": 307, "051428": 307, "923117": 307, "660772": 307, "466385": 307, "260479": 307, "909214": 307, "004430": 307, "115441": 307, "597439": 307, "671231": 307, "358037": 307, "499079": 307, "674971": 307, "086542": 307, "331370": 307, "633905": 307, "558617": 307, "085015": 307, "554653": 307, "936751": 307, "068515": 307, "800265": 307, "310055": 307, "124015": 307, "712276": 307, "729628": 307, "167439": 307, "715703": 307, "274087": 307, "019852": 307, "305414": 307, "613668": 307, "109257": 307, "443973": 307, "056317": 307, "238664": 307, "161298": 307, "229080": 307, "385458": 307, "248420": 307, "105258": 307, "155784": 307, "539027": 307, "615940": 307, "605320": 307, "132029": 307, "756164": 307, "869343": 307, "544161": 307, "814910": 307, "779158": 307, "268737": 307, "897306": 307, "707535": 307, "453306": 307, "105961": 307, "531367": 307, "507478": 307, "179203": 307, "964192": 307, "235433": 307, "534690": 307, "029698": 307, "870557": 307, "187065": 307, "049483": 307, "611648": 307, "535116": 307, "053927": 307, "077425": 307, "840121": 307, "621227": 307, "470444": 307, "449597": 307, "941064": 307, "849583": 307, "418397": 307, "769517": 307, "495183": 307, "074840": 307, "265168": 307, "489546": 307, "543569": 307, "924754": 307, "255799": 307, "423379": 307, "792450": 307, "651388": 307, "107140": 307, "103779": 307, "709601": 307, "655290": 307, "365991": 307, "222470": 307, "908651": 307, "744590": 307, "726324": 307, "426971": 307, "126409": 307, "743926": 307, "055593": 307, "673502": 307, "381335": 307, "618133": 307, "047349": 307, "322600": 307, "222872": 307, "042834": 307, "180077": 307, "430602": 307, "209284": 307, "495631": 307, "189252": 307, "623118": 307, "780755": 307, "405726": 307, "643222": 307, "836788": 307, "746180": 307, "378962": 307, "498420": 307, "745719": 307, "565835": 307, "016391": 307, "193803": 307, "882538": 307, "054206": 307, "416539": 307, "288743": 307, "598975": 307, "649295": 307, "743847": 307, "028856": 307, "860963": 307, "709391": 307, "906579": 307, "841825": 307, "571912": 307, "121771": 307, "219260": 307, "791821": 307, "756310": 307, "933335": 307, "360735": 307, "121911": 307, "657069": 307, "952413": 307, "311206": 307, "124618": 307, "229621": 307, "945504": 307, "493299": 307, "630288": 307, "415407": 307, "756085": 307, "131488": 307, "213636": 307, "050337": 307, "463633": 307, "980475": 307, "118333": 307, "749123": 307, "229958": 307, "025404": 307, "813878": 307, "738522": 307, "668408": 307, "112740": 307, "972107": 307, "235064": 307, "396011": 307, "934618": 307, "518106": 307, "392308": 307, "216396": 307, "339562": 307, "024801": 307, "793238": 307, "057118": 307, "556378": 307, "796045": 307, "776264": 307, "019010": 307, "430617": 307, "431370": 307, "731493": 307, "527208": 307, "010968": 307, "724711": 307, "959211": 307, "448445": 307, "131466": 307, "302385": 307, "264697": 307, "597597": 307, "779232": 307, "494133": 307, "292477": 307, "639161": 307, "067293": 307, "167700": 307, "637834": 307, "067793": 307, "249132": 307, "314731": 307, "969084": 307, "239401": 307, "359860": 307, "215238": 307, "477740": 307, "578842": 307, "053376": 307, "340902": 307, "021182": 307, "172446": 307, "684367": 307, "059050": 307, "515114": 307, "245427": 307, "197044": 307, "787564": 307, "106919": 307, "970391": 307, "379183": 307, "982728": 307, "807580": 307, "296212": 307, "639192": 307, "874018": 307, "032032": 307, "252364": 307, "047063": 307, "residual_q3": 307, "residual_outli": 307, "832458": 307, "136329": 307, "090316": 307, "021748": 307, "766581": 307, "001176": 307, "238974": 307, "071653": 307, "388881": 307, "584759": 307, "780298": 307, "680349": 307, "043355": 307, "691710": 307, "827298": 307, "317850": 307, "008777": 307, "291308": 307, "498512": 307, "312807": 307, "178997": 307, "306182": 307, "116610": 307, "468439": 307, "007865": 307, "384037": 307, "344744": 307, "151930": 307, "790639": 307, "416342": 307, "637759": 307, "153920": 307, "135334": 307, "038095": 307, "705065": 307, "359915": 307, "588440": 307, "151899": 307, "730945": 307, "514178": 307, "784304": 307, "977290": 307, "707253": 307, "982678": 307, "384237": 307, "576792": 307, "302778": 307, "342653": 307, "313826": 307, "775998": 307, "274818": 307, "191111": 307, "817604": 307, "421290": 307, "461701": 307, "940801": 307, "437023": 307, "207477": 307, "755739": 307, "individual_predictions_plot": 307, "trim": 308, "modelsearch_dir1": 308, "hash": 308, "mytab_mox1": 308, "subfold": 308, "temporari": 308, "finish": 308, "recreat": 308, "frame": 308, "programmat": 308, "pharmpy_vers": 308, "tool_nam": 308, "start_tim": 308, "22t14": 308, "312240": 308, "end_tim": 308, "592109": 308, "common_opt": 308, "tmp": 308, "tool_result": 308, "locat": 308, "concis": 308, "newlin": 308, "semi": 308, "colon": 308, "endpoint": 308, "wildcard": 308, "nodepot": 308, "autom": 308, "gotcha": 309, "cran": 310, "rapid": 310, "remot": 310, "install_github": 310, "ref": 310, "install_pharmpi": 310, "session": 310, "packagevers": 310, "print_pharmpy_vers": 310, "reticul": 310, "miniconda": 310, "py_discover_config": 310, "conda_cr": 310, "python_vers": 310, "virtual": 310, "libpython": 310, "lib": 310, "libpython3": 310, "mirror": 310, "pipe": 310, "magrittr": 310}, "objects": {"pharmpy": [[268, 0, 0, "-", "model"], [269, 0, 0, "-", "modeling"], [270, 0, 0, "-", "tools"], [271, 0, 0, "-", "workflows"], [276, 6, 1, "cmdoption-pharmpy-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-version", "--version"], [276, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "ODESystem"], [24, 1, 1, "", "Parameter"], [25, 1, 1, "", "Parameters"], [26, 1, 1, "", "RandomVariables"], [27, 1, 1, "", "Results"], [28, 1, 1, "", "Statement"], [29, 1, 1, "", "Statements"], [30, 1, 1, "", "VariabilityHierarchy"], [31, 1, 1, "", "VariabilityLevel"], [32, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "admid"], [5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartment"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_covs"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "admid"], [16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "init"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "name"], [24, 2, 1, "", "replace"], [24, 3, 1, "", "symbol"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "fixed"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "inits"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "names"], [25, 3, 1, "", "nonfixed"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "set_fix"], [25, 2, 1, "", "set_initial_estimates"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[26, 3, 1, "", "covariance_matrix"], [26, 2, 1, "", "create"], [26, 3, 1, "", "epsilon_levels"], [26, 3, 1, "", "epsilons"], [26, 3, 1, "", "eta_levels"], [26, 3, 1, "", "etas"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_rvs_with_same_dist"], [26, 3, 1, "", "iiv"], [26, 3, 1, "", "iov"], [26, 2, 1, "", "join"], [26, 3, 1, "", "names"], [26, 2, 1, "", "nearest_valid_parameters"], [26, 3, 1, "", "nrvs"], [26, 3, 1, "", "parameter_names"], [26, 2, 1, "", "parameters_sdcorr"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "replace_with_sympy_rvs"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "unjoin"], [26, 2, 1, "", "validate_parameters"], [26, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_and_reset_index"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[28, 3, 1, "", "free_symbols"], [28, 3, 1, "", "rhs_symbols"], [28, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[29, 3, 1, "", "after_odes"], [29, 3, 1, "", "before_odes"], [29, 2, 1, "", "dependencies"], [29, 2, 1, "", "direct_dependencies"], [29, 3, 1, "", "error"], [29, 2, 1, "", "find_assignment"], [29, 2, 1, "", "find_assignment_index"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "full_expression"], [29, 3, 1, "", "ode_system"], [29, 2, 1, "", "reassign"], [29, 2, 1, "", "remove_symbol_definitions"], [29, 2, 1, "", "subs"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "levels"], [30, 3, 1, "", "names"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[31, 2, 1, "", "create"], [31, 2, 1, "", "from_dict"], [31, 3, 1, "", "group"], [31, 3, 1, "", "name"], [31, 3, 1, "", "reference"], [31, 2, 1, "", "replace"], [31, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[33, 5, 1, "", "add_admid"], [34, 5, 1, "", "add_allometry"], [35, 5, 1, "", "add_bioavailability"], [36, 5, 1, "", "add_covariance_step"], [37, 5, 1, "", "add_covariate_effect"], [38, 5, 1, "", "add_effect_compartment"], [39, 5, 1, "", "add_estimation_step"], [40, 5, 1, "", "add_iiv"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_peripheral_compartment"], [46, 5, 1, "", "add_pk_iiv"], [47, 5, 1, "", "add_population_parameter"], [48, 5, 1, "", "add_time_after_dose"], [49, 5, 1, "", "append_estimation_step_options"], [50, 5, 1, "", "bump_model_number"], [51, 5, 1, "", "calculate_aic"], [52, 5, 1, "", "calculate_bic"], [53, 5, 1, "", "calculate_corr_from_cov"], [54, 5, 1, "", "calculate_corr_from_prec"], [55, 5, 1, "", "calculate_cov_from_corrse"], [56, 5, 1, "", "calculate_cov_from_prec"], [57, 5, 1, "", "calculate_epsilon_gradient_expression"], [58, 5, 1, "", "calculate_eta_gradient_expression"], [59, 5, 1, "", "calculate_eta_shrinkage"], [60, 5, 1, "", "calculate_individual_parameter_statistics"], [61, 5, 1, "", "calculate_individual_shrinkage"], [62, 5, 1, "", "calculate_parameters_from_ucp"], [63, 5, 1, "", "calculate_pk_parameters_statistics"], [64, 5, 1, "", "calculate_prec_from_corrse"], [65, 5, 1, "", "calculate_prec_from_cov"], [66, 5, 1, "", "calculate_se_from_cov"], [67, 5, 1, "", "calculate_se_from_prec"], [68, 5, 1, "", "calculate_ucp_scale"], [69, 5, 1, "", "check_dataset"], [70, 5, 1, "", "check_high_correlations"], [71, 5, 1, "", "check_parameters_near_bounds"], [72, 5, 1, "", "cleanup_model"], [73, 5, 1, "", "convert_model"], [74, 5, 1, "", "create_basic_pk_model"], [75, 5, 1, "", "create_config_template"], [76, 5, 1, "", "create_joint_distribution"], [77, 5, 1, "", "create_rng"], [78, 5, 1, "", "create_symbol"], [79, 5, 1, "", "deidentify_data"], [80, 5, 1, "", "display_odes"], [81, 5, 1, "", "drop_columns"], [82, 5, 1, "", "drop_dropped_columns"], [83, 5, 1, "", "evaluate_epsilon_gradient"], [84, 5, 1, "", "evaluate_eta_gradient"], [85, 5, 1, "", "evaluate_expression"], [86, 5, 1, "", "evaluate_individual_prediction"], [87, 5, 1, "", "evaluate_population_prediction"], [88, 5, 1, "", "evaluate_weighted_residuals"], [89, 5, 1, "", "expand_additional_doses"], [90, 5, 1, "", "find_clearance_parameters"], [91, 5, 1, "", "find_volume_parameters"], [92, 5, 1, "", "fix_or_unfix_parameters"], [93, 5, 1, "", "fix_parameters"], [94, 5, 1, "", "fix_parameters_to"], [95, 5, 1, "", "get_admid"], [96, 5, 1, "", "get_baselines"], [97, 5, 1, "", "get_bioavailability"], [98, 5, 1, "", "get_cmt"], [99, 5, 1, "", "get_concentration_parameters_from_data"], [100, 5, 1, "", "get_config_path"], [101, 5, 1, "", "get_covariate_baselines"], [102, 5, 1, "", "get_doseid"], [103, 5, 1, "", "get_doses"], [104, 5, 1, "", "get_dv_symbol"], [105, 5, 1, "", "get_evid"], [106, 5, 1, "", "get_ids"], [107, 5, 1, "", "get_individual_parameters"], [108, 5, 1, "", "get_individual_prediction_expression"], [109, 5, 1, "", "get_initial_conditions"], [110, 5, 1, "", "get_lag_times"], [111, 5, 1, "", "get_mdv"], [112, 5, 1, "", "get_model_code"], [113, 5, 1, "", "get_model_covariates"], [114, 5, 1, "", "get_number_of_individuals"], [115, 5, 1, "", "get_number_of_observations"], [116, 5, 1, "", "get_number_of_observations_per_individual"], [117, 5, 1, "", "get_observation_expression"], [118, 5, 1, "", "get_observations"], [119, 5, 1, "", "get_omegas"], [120, 5, 1, "", "get_pd_parameters"], [121, 5, 1, "", "get_pk_parameters"], [122, 5, 1, "", "get_population_prediction_expression"], [123, 5, 1, "", "get_rv_parameters"], [124, 5, 1, "", "get_sigmas"], [125, 5, 1, "", "get_thetas"], [126, 5, 1, "", "get_unit_of"], [127, 5, 1, "", "get_zero_order_inputs"], [128, 5, 1, "", "greekify_model"], [129, 5, 1, "", "has_additive_error_model"], [130, 5, 1, "", "has_combined_error_model"], [131, 5, 1, "", "has_covariate_effect"], [132, 5, 1, "", "has_first_order_elimination"], [133, 5, 1, "", "has_linear_odes"], [134, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [135, 5, 1, "", "has_michaelis_menten_elimination"], [136, 5, 1, "", "has_mixed_mm_fo_elimination"], [137, 5, 1, "", "has_odes"], [138, 5, 1, "", "has_proportional_error_model"], [139, 5, 1, "", "has_random_effect"], [140, 5, 1, "", "has_weighted_error_model"], [141, 5, 1, "", "has_zero_order_absorption"], [142, 5, 1, "", "has_zero_order_elimination"], [143, 5, 1, "", "is_linearized"], [144, 5, 1, "", "is_real"], [145, 5, 1, "", "list_time_varying_covariates"], [146, 5, 1, "", "load_example_model"], [147, 5, 1, "", "make_declarative"], [148, 5, 1, "", "mu_reference_model"], [149, 5, 1, "", "omit_data"], [150, 5, 1, "", "plot_individual_predictions"], [151, 5, 1, "", "plot_iofv_vs_iofv"], [152, 5, 1, "", "plot_transformed_eta_distributions"], [153, 5, 1, "", "print_model_code"], [154, 5, 1, "", "print_model_symbols"], [155, 5, 1, "", "read_dataset_from_datainfo"], [156, 5, 1, "", "read_model"], [157, 5, 1, "", "read_model_from_string"], [158, 5, 1, "", "remove_bioavailability"], [159, 5, 1, "", "remove_covariance_step"], [160, 5, 1, "", "remove_covariate_effect"], [161, 5, 1, "", "remove_error_model"], [162, 5, 1, "", "remove_estimation_step"], [163, 5, 1, "", "remove_iiv"], [164, 5, 1, "", "remove_iov"], [165, 5, 1, "", "remove_lag_time"], [166, 5, 1, "", "remove_loq_data"], [167, 5, 1, "", "remove_peripheral_compartment"], [168, 5, 1, "", "remove_unused_parameters_and_rvs"], [169, 5, 1, "", "rename_symbols"], [170, 5, 1, "", "resample_data"], [171, 5, 1, "", "sample_individual_estimates"], [172, 5, 1, "", "sample_parameters_from_covariance_matrix"], [173, 5, 1, "", "sample_parameters_uniformly"], [174, 5, 1, "", "set_additive_error_model"], [175, 5, 1, "", "set_bolus_absorption"], [176, 5, 1, "", "set_combined_error_model"], [177, 5, 1, "", "set_covariates"], [178, 5, 1, "", "set_direct_effect"], [179, 5, 1, "", "set_dtbs_error_model"], [180, 5, 1, "", "set_dvid"], [181, 5, 1, "", "set_estimation_step"], [182, 5, 1, "", "set_evaluation_step"], [183, 5, 1, "", "set_first_order_absorption"], [184, 5, 1, "", "set_first_order_elimination"], [185, 5, 1, "", "set_iiv_on_ruv"], [186, 5, 1, "", "set_initial_condition"], [187, 5, 1, "", "set_initial_estimates"], [188, 5, 1, "", "set_lower_bounds"], [189, 5, 1, "", "set_michaelis_menten_elimination"], [190, 5, 1, "", "set_mixed_mm_fo_elimination"], [191, 5, 1, "", "set_name"], [192, 5, 1, "", "set_ode_solver"], [193, 5, 1, "", "set_peripheral_compartments"], [194, 5, 1, "", "set_power_on_ruv"], [195, 5, 1, "", "set_proportional_error_model"], [196, 5, 1, "", "set_seq_zo_fo_absorption"], [197, 5, 1, "", "set_time_varying_error_model"], [198, 5, 1, "", "set_tmdd"], [199, 5, 1, "", "set_transit_compartments"], [200, 5, 1, "", "set_upper_bounds"], [201, 5, 1, "", "set_weighted_error_model"], [202, 5, 1, "", "set_zero_order_absorption"], [203, 5, 1, "", "set_zero_order_elimination"], [204, 5, 1, "", "set_zero_order_input"], [205, 5, 1, "", "simplify_expression"], [206, 5, 1, "", "solve_ode_system"], [207, 5, 1, "", "split_joint_distribution"], [208, 5, 1, "", "transform_blq"], [209, 5, 1, "", "transform_etas_boxcox"], [210, 5, 1, "", "transform_etas_john_draper"], [211, 5, 1, "", "transform_etas_tdist"], [212, 5, 1, "", "translate_nmtran_time"], [213, 5, 1, "", "unconstrain_parameters"], [214, 5, 1, "", "undrop_columns"], [215, 5, 1, "", "unfix_parameters"], [216, 5, 1, "", "unfix_parameters_to"], [217, 5, 1, "", "update_initial_individual_estimates"], [218, 5, 1, "", "update_inits"], [219, 5, 1, "", "use_thetas_for_error_stdev"], [220, 5, 1, "", "write_csv"], [221, 5, 1, "", "write_model"]], "pharmpy.tools": [[222, 5, 1, "", "create_report"], [223, 5, 1, "", "create_results"], [224, 5, 1, "", "fit"], [225, 5, 1, "", "load_example_modelfit_results"], [226, 5, 1, "", "predict_influential_individuals"], [227, 5, 1, "", "predict_influential_outliers"], [228, 5, 1, "", "predict_outliers"], [229, 5, 1, "", "print_fit_summary"], [230, 5, 1, "", "rank_models"], [231, 5, 1, "", "read_modelfit_results"], [232, 5, 1, "", "read_results"], [233, 5, 1, "", "resume_tool"], [234, 5, 1, "", "retrieve_final_model"], [235, 5, 1, "", "retrieve_models"], [236, 5, 1, "", "run_allometry"], [237, 5, 1, "", "run_amd"], [238, 5, 1, "", "run_bootstrap"], [239, 5, 1, "", "run_covsearch"], [240, 5, 1, "", "run_estmethod"], [241, 5, 1, "", "run_iivsearch"], [242, 5, 1, "", "run_iovsearch"], [243, 5, 1, "", "run_modelfit"], [244, 5, 1, "", "run_modelsearch"], [245, 5, 1, "", "run_ruvsearch"], [246, 5, 1, "", "run_structsearch"], [247, 5, 1, "", "run_tool"], [248, 5, 1, "", "summarize_errors"], [249, 5, 1, "", "summarize_individuals"], [250, 5, 1, "", "summarize_individuals_count_table"], [251, 5, 1, "", "summarize_modelfit_results"], [252, 5, 1, "", "write_results"]], "pharmpy.workflows": [[253, 1, 1, "", "LocalDirectoryDatabase"], [254, 1, 1, "", "LocalDirectoryToolDatabase"], [255, 1, 1, "", "LocalModelDirectoryDatabase"], [256, 1, 1, "", "Log"], [257, 1, 1, "", "ModelDatabase"], [258, 1, 1, "", "NullModelDatabase"], [259, 1, 1, "", "NullToolDatabase"], [260, 1, 1, "", "Task"], [261, 1, 1, "", "ToolDatabase"], [262, 1, 1, "", "Workflow"], [263, 5, 1, "", "call_workflow"], [264, 3, 1, "", "default_model_database"], [265, 3, 1, "", "default_tool_database"], [266, 5, 1, "", "execute_workflow"], [267, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[253, 2, 1, "", "retrieve_file"], [253, 2, 1, "", "retrieve_local_files"], [253, 2, 1, "", "retrieve_model"], [253, 2, 1, "", "retrieve_modelfit_results"], [253, 2, 1, "", "store_local_file"], [253, 2, 1, "", "store_metadata"], [253, 2, 1, "", "store_model"], [253, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[254, 2, 1, "", "from_dict"], [254, 2, 1, "", "read_metadata"], [254, 2, 1, "", "store_local_file"], [254, 2, 1, "", "store_metadata"], [254, 2, 1, "", "store_results"], [254, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[255, 2, 1, "", "list_models"], [255, 2, 1, "", "snapshot"], [255, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[256, 2, 1, "", "from_dict"], [256, 3, 1, "", "log"], [256, 2, 1, "", "log_error"], [256, 2, 1, "", "log_warning"], [256, 2, 1, "", "to_dataframe"], [256, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[257, 2, 1, "", "retrieve_file"], [257, 2, 1, "", "retrieve_local_files"], [257, 2, 1, "", "retrieve_model"], [257, 2, 1, "", "retrieve_modelfit_results"], [257, 2, 1, "", "snapshot"], [257, 2, 1, "", "store_local_file"], [257, 2, 1, "", "store_metadata"], [257, 2, 1, "", "store_model"], [257, 2, 1, "", "store_modelfit_results"], [257, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[258, 2, 1, "", "retrieve_file"], [258, 2, 1, "", "retrieve_local_files"], [258, 2, 1, "", "retrieve_model"], [258, 2, 1, "", "retrieve_modelfit_results"], [258, 2, 1, "", "store_local_file"], [258, 2, 1, "", "store_metadata"], [258, 2, 1, "", "store_model"], [258, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[259, 2, 1, "", "read_metadata"], [259, 2, 1, "", "store_local_file"], [259, 2, 1, "", "store_metadata"], [259, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[261, 3, 1, "", "model_database"], [261, 3, 1, "", "path"], [261, 2, 1, "", "read_metadata"], [261, 2, 1, "", "store_local_file"], [261, 2, 1, "", "store_metadata"], [261, 2, 1, "", "store_results"]], "pharmpy-data-append": [[276, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [276, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[276, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[276, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [276, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[276, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [276, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[276, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [276, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [276, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [276, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [276, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [276, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [276, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[276, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[276, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[276, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[276, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[276, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[276, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[276, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [276, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[276, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[276, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [276, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[276, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[276, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [276, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [276, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[276, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[276, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [276, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [276, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [276, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [276, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[276, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[276, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[276, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[276, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [276, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [276, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [276, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[276, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[276, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[276, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[276, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[276, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[276, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[276, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[276, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[276, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[276, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[276, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[276, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [276, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [276, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [276, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [276, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [276, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [276, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [276, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [276, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [276, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [276, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [276, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[276, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [276, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[276, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[276, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [276, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [276, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [276, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[276, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[276, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [276, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[276, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[276, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [276, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [276, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[276, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [276, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 278, 298], "dataset": [0, 283, 294, 296, 308], "overview": [0, 300, 304], "pars": 0, "translat": 0, "step": [0, 294, 296, 306], "nm": 0, "tran": 0, "comment": 0, "line": [0, 276], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 296], "date": 0, "id": 0, "check": [0, 279], "tabl": 0, "file": [0, 278, 283], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 279], "all": 0, "zero": 0, "individu": [0, 272, 273, 287, 293, 295, 307], "control": 0, "stream": 0, "gener": [0, 292], "option": [0, 271, 308], "problem": 0, "data": [0, 271, 276], "eta": [0, 296], "code": [0, 277, 279], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 27, 272, 273, 276, 281, 282, 286, 287, 289, 291, 293, 295, 297, 302, 304, 305, 306, 307, 308], "spars": 0, "matrix": [0, 272, 295], "allometri": [1, 2, 276, 296], "run": [1, 2, 276, 279, 281, 286, 289, 291, 297, 305, 308], "argument": [1, 2, 281, 286, 289, 291, 297, 305], "procedur": [1, 305], "The": [1, 272, 273, 276, 278, 282, 284, 286, 287, 289, 293, 294, 297, 302, 304, 305, 306, 307], "automat": 2, "model": [2, 18, 268, 269, 276, 283, 284, 289, 294, 295, 296, 297, 298, 302, 305, 308], "develop": [2, 279, 280, 285], "amd": [2, 276], "input": [2, 280], "search": [2, 289, 297], "space": [2, 297], "order": 2, "subtool": 2, "structur": [2, 289, 296, 304], "iivsearch": [2, 276, 289], "iovsearch": [2, 276, 291], "residu": [2, 295, 304], "covari": [2, 272, 273, 287, 289, 295, 296, 304], "api": 3, "refer": [3, 273, 287], "assign": 4, "bolu": 5, "columninfo": [6, 283], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 283, 294], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 291, 294, 296], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "odesystem": 23, "paramet": [24, 25, 272, 284, 287, 294, 295, 296, 298], "randomvari": [26, 284], "statement": [28, 29, 284, 294], "variabilityhierarchi": 30, "variabilitylevel": 31, "to_compartmental_system": 32, "add_admid": 33, "add_allometri": 34, "add_bioavail": 35, "add_covariance_step": 36, "add_covariate_effect": 37, "add_effect_compart": 38, "add_estimation_step": 39, "add_iiv": [40, 276], "add_individual_paramet": 41, "add_iov": [42, 276], "add_lag_tim": 43, "add_metabolit": 44, "add_peripheral_compart": 45, "add_pk_iiv": 46, "add_population_paramet": 47, "add_time_after_dos": 48, "append_estimation_step_opt": 49, "bump_model_numb": 50, "calculate_a": 51, "calculate_b": 52, "calculate_corr_from_cov": 53, "calculate_corr_from_prec": 54, "calculate_cov_from_corrs": 55, "calculate_cov_from_prec": 56, "calculate_epsilon_gradient_express": 57, "calculate_eta_gradient_express": 58, "calculate_eta_shrinkag": 59, "calculate_individual_parameter_statist": 60, "calculate_individual_shrinkag": 61, "calculate_parameters_from_ucp": 62, "calculate_pk_parameters_statist": 63, "calculate_prec_from_corrs": 64, "calculate_prec_from_cov": 65, "calculate_se_from_cov": 66, "calculate_se_from_prec": 67, "calculate_ucp_scal": 68, "check_dataset": 69, "check_high_correl": 70, "check_parameters_near_bound": 71, "cleanup_model": 72, "convert_model": 73, "create_basic_pk_model": 74, "create_config_templ": 75, "create_joint_distribut": [76, 276], "create_rng": 77, "create_symbol": 78, "deidentify_data": 79, "display_od": 80, "drop_column": 81, "drop_dropped_column": 82, "evaluate_epsilon_gradi": 83, "evaluate_eta_gradi": 84, "evaluate_express": 85, "evaluate_individual_predict": 86, "evaluate_population_predict": 87, "evaluate_weighted_residu": 88, "expand_additional_dos": 89, "find_clearance_paramet": 90, "find_volume_paramet": 91, "fix_or_unfix_paramet": 92, "fix_paramet": 93, "fix_parameters_to": 94, "get_admid": 95, "get_baselin": 96, "get_bioavail": 97, "get_cmt": 98, "get_concentration_parameters_from_data": 99, "get_config_path": 100, "get_covariate_baselin": 101, "get_doseid": 102, "get_dos": 103, "get_dv_symbol": 104, "get_evid": 105, "get_id": 106, "get_individual_paramet": 107, "get_individual_prediction_express": 108, "get_initial_condit": 109, "get_lag_tim": 110, "get_mdv": 111, "get_model_cod": 112, "get_model_covari": 113, "get_number_of_individu": 114, "get_number_of_observ": 115, "get_number_of_observations_per_individu": 116, "get_observation_express": 117, "get_observ": 118, "get_omega": 119, "get_pd_paramet": 120, "get_pk_paramet": 121, "get_population_prediction_express": 122, "get_rv_paramet": 123, "get_sigma": 124, "get_theta": 125, "get_unit_of": 126, "get_zero_order_input": 127, "greekify_model": 128, "has_additive_error_model": 129, "has_combined_error_model": 130, "has_covariate_effect": 131, "has_first_order_elimin": 132, "has_linear_od": 133, "has_linear_odes_with_real_eigenvalu": 134, "has_michaelis_menten_elimin": 135, "has_mixed_mm_fo_elimin": 136, "has_od": 137, "has_proportional_error_model": 138, "has_random_effect": 139, "has_weighted_error_model": 140, "has_zero_order_absorpt": 141, "has_zero_order_elimin": 142, "is_linear": 143, "is_real": 144, "list_time_varying_covari": 145, "load_example_model": 146, "make_declar": 147, "mu_reference_model": 148, "omit_data": 149, "plot_individual_predict": 150, "plot_iofv_vs_iofv": 151, "plot_transformed_eta_distribut": 152, "print_model_cod": 153, "print_model_symbol": 154, "read_dataset_from_datainfo": 155, "read_model": 156, "read_model_from_str": 157, "remove_bioavail": 158, "remove_covariance_step": 159, "remove_covariate_effect": 160, "remove_error_model": 161, "remove_estimation_step": 162, "remove_iiv": [163, 276], "remove_iov": [164, 276], "remove_lag_tim": 165, "remove_loq_data": 166, "remove_peripheral_compart": 167, "remove_unused_parameters_and_rv": 168, "rename_symbol": 169, "resample_data": 170, "sample_individual_estim": 171, "sample_parameters_from_covariance_matrix": 172, "sample_parameters_uniformli": 173, "set_additive_error_model": 174, "set_bolus_absorpt": 175, "set_combined_error_model": 176, "set_covari": 177, "set_direct_effect": 178, "set_dtbs_error_model": 179, "set_dvid": 180, "set_estimation_step": 181, "set_evaluation_step": 182, "set_first_order_absorpt": 183, "set_first_order_elimin": 184, "set_iiv_on_ruv": 185, "set_initial_condit": 186, "set_initial_estim": 187, "set_lower_bound": 188, "set_michaelis_menten_elimin": 189, "set_mixed_mm_fo_elimin": 190, "set_nam": 191, "set_ode_solv": 192, "set_peripheral_compart": 193, "set_power_on_ruv": 194, "set_proportional_error_model": 195, "set_seq_zo_fo_absorpt": 196, "set_time_varying_error_model": 197, "set_tmdd": 198, "set_transit_compart": 199, "set_upper_bound": 200, "set_weighted_error_model": 201, "set_zero_order_absorpt": 202, "set_zero_order_elimin": 203, "set_zero_order_input": 204, "simplify_express": 205, "solve_ode_system": 206, "split_joint_distribut": 207, "transform_blq": 208, "transform_etas_boxcox": 209, "transform_etas_john_drap": 210, "transform_etas_tdist": 211, "translate_nmtran_tim": 212, "unconstrain_paramet": 213, "undrop_column": 214, "unfix_paramet": 215, "unfix_parameters_to": 216, "update_initial_individual_estim": 217, "update_init": [218, 276], "use_thetas_for_error_stdev": 219, "write_csv": 220, "write_model": 221, "create_report": 222, "create_result": 223, "fit": [224, 295], "load_example_modelfit_result": 225, "predict_influential_individu": 226, "predict_influential_outli": 227, "predict_outli": 228, "print_fit_summari": 229, "rank_model": 230, "read_modelfit_result": 231, "read_result": 232, "resume_tool": 233, "retrieve_final_model": 234, "retrieve_model": 235, "run_allometri": 236, "run_amd": 237, "run_bootstrap": 238, "run_covsearch": 239, "run_estmethod": 240, "run_iivsearch": 241, "run_iovsearch": 242, "run_modelfit": 243, "run_modelsearch": 244, "run_ruvsearch": 245, "run_structsearch": 246, "run_tool": 247, "summarize_error": 248, "summarize_individu": 249, "summarize_individuals_count_t": 250, "summarize_modelfit_result": 251, "write_result": 252, "localdirectorydatabas": 253, "localdirectorytooldatabas": 254, "localmodeldirectorydatabas": 255, "log": 256, "modeldatabas": 257, "nullmodeldatabas": 258, "nulltooldatabas": 259, "task": 260, "tooldatabas": 261, "workflow": [262, 271, 279], "call_workflow": 263, "default_model_databas": 264, "default_tool_databas": 265, "execute_workflow": 266, "split_common_opt": 267, "pharmpi": [268, 269, 270, 271, 275, 276, 277, 278, 279, 283, 284, 290, 294, 299, 303, 308, 310], "packag": [268, 269, 270, 271], "function": [268, 269, 270, 271, 296], "class": [268, 271, 284], "tool": [270, 303, 308], "modul": [271, 284], "bootstrap": [272, 276], "postprocess": [272, 287], "statist": 272, "ofv": [272, 273, 276, 282, 287, 293, 295, 306, 307], "includ": 272, "case": 273, "delet": 273, "diagnost": 273, "cdd": [273, 276], "cook": 273, "score": 273, "jackknif": 273, "cookscor": 273, "ratio": 273, "delta": 273, "skip": 273, "column": 273, "changelog": 274, "0": 274, "98": 274, "2023": 274, "07": 274, "21": 274, "new": [274, 291, 298], "featur": [274, 297, 308], "chang": [274, 299], "97": 274, "06": 274, "28": 274, "96": 274, "05": 274, "26": 274, "bugfix": 274, "95": 274, "22": 274, "94": 274, "04": 274, "93": 274, "19": 274, "92": 274, "91": 274, "03": 274, "90": 274, "02": 274, "24": 274, "89": 274, "01": 274, "88": 274, "2022": 274, "12": 274, "87": 274, "14": 274, "86": 274, "11": 274, "30": 274, "85": 274, "18": 274, "84": 274, "1": 274, "13": 274, "bug": 274, "fix": 274, "09": 274, "83": 274, "82": 274, "10": 274, "81": 274, "80": 274, "79": 274, "16": 274, "78": 274, "20": 274, "77": 274, "08": 274, "76": 274, "75": 274, "74": 274, "73": 274, "72": 274, "71": 274, "70": 274, "17": 274, "69": 274, "29": 274, "68": 274, "27": 274, "67": 274, "25": 274, "66": 274, "65": 274, "64": 274, "63": 274, "62": 274, "61": 274, "31": 274, "59": 274, "58": 274, "4": 274, "57": 274, "56": 274, "55": 274, "54": 274, "53": 274, "52": 274, "51": 274, "50": 274, "49": 274, "48": 274, "47": 274, "46": 274, "45": 274, "44": 274, "43": 274, "42": 274, "41": 274, "2021": 274, "40": 274, "39": 274, "15": 274, "38": 274, "37": 274, "36": 274, "35": 274, "34": 274, "3": 274, "2": [274, 292], "33": 274, "32": 274, "23": 274, "2020": 274, "9": 274, "8": 274, "7": 274, "6": 274, "5": 274, "2018": 274, "citat": 275, "how": 275, "cite": 275, "pharmr": [275, 310], "command": 276, "interfac": 276, "append": 276, "deidentifi": 276, "filter": 276, "print": 276, "resampl": 276, "write": [276, 294, 296, 298], "info": 276, "absorption_r": 276, "add_cov_effect": 276, "boxcox": [276, 304], "elimination_r": 276, "error": [276, 295, 296, 304, 310], "iiv_on_ruv": 276, "john_drap": 276, "peripheral_compart": 276, "power_on_ruv": 276, "sampl": [276, 307], "tdist": [276, 304], "transit_compart": 276, "frem": [276, 287], "linear": [276, 293], "qa": [276, 304], "report": 276, "ruvsearch": [276, 305], "scm": [276, 306], "simev": [276, 307], "summari": [276, 306, 307], "covsearch": [276, 281], "estmethod": [276, 286], "execut": 276, "modelsearch": [276, 297], "commun": 277, "conduct": 277, "configur": 278, "avail": 278, "plugin": [278, 298, 300], "nlmixr": 278, "rxode": 278, "environ": [278, 279], "variabl": [278, 287, 294, 296, 298], "contribut": 279, "set": [279, 299], "up": 279, "support": 279, "platform": 279, "instal": [279, 288, 310], "python": [279, 310], "git": 279, "fork": 279, "clone": 279, "repositori": 279, "tox": 279, "graphviz": 279, "us": [279, 298, 310], "build": 279, "document": [279, 285], "unit": [279, 283], "test": 279, "integr": 279, "usabl": 279, "virtual": 279, "standard": [279, 295], "releas": 279, "version": [279, 310], "inform": [279, 296], "contributor": 280, "scientif": 280, "fund": 280, "effect": [281, 287, 304], "wildcard": 281, "algorithm": [281, 286, 289, 291, 297], "crossval": 282, "crossvalid": 282, "retriev": 283, "from": 283, "updat": [283, 286], "type": [283, 308], "scale": 283, "continu": 283, "categori": 283, "drop": 283, "datatyp": 283, "descriptor": 283, "design": 284, "principl": 284, "level": [284, 294], "architectur": 284, "heart": 284, "docstr": 284, "depend": [284, 294], "exhaust": [286, 297], "onli": 286, "evalu": 286, "method": 286, "solver": 286, "coeffici": 287, "unexplain": 287, "estim": [287, 294, 295, 296], "valu": 287, "get": 288, "start": [288, 289], "A": 288, "first": 288, "exampl": [288, 296, 308], "brute": 289, "forc": 289, "number": 289, "iiv": [289, 297], "full": 289, "ad": [289, 294, 296, 297], "compar": [289, 291, 297], "rank": [289, 291, 297], "candid": [289, 291, 297, 306], "welcom": 290, "iov": 291, "licens": 292, "logo": 292, "copyright": 292, "bsd": 292, "claus": 292, "gnu": 292, "lesser": 292, "public": 292, "read": [294, 296, 298], "inspect": 294, "attribut": 294, "name": [294, 298], "descript": [294, 308], "random": [294, 298], "low": 294, "manipul": 294, "object": 294, "creat": [294, 296], "substitut": 294, "symbol": [294, 308], "numer": 294, "modelfit": 295, "final": 295, "rel": 295, "correl": 295, "precis": 295, "indiviud": 295, "predict": [295, 307], "basic": 296, "load": 296, "convert": 296, "transform": 296, "absorpt": 296, "rate": 296, "delai": 296, "elimin": 296, "remov": 296, "popul": 296, "blq": 296, "examin": 296, "modifi": 296, "subject": 296, "observ": 296, "dose": 296, "extract": 296, "group": 296, "after": 296, "concentr": 296, "common": [297, 308], "behaviour": 297, "between": [297, 310], "combin": 297, "exclus": 297, "stepwis": 297, "reduc": 297, "dure": 297, "plot": [299, 307], "theme": 299, "axi": 299, "project": 301, "suggest": 301, "resmod": 302, "psn": 303, "connect": 303, "bia": 304, "fullblock": 304, "databas": 308, "directori": 308, "metadata": 308, "languag": 308, "mfl": 308, "describ": 308, "interv": 308, "redund": 308, "user": 309, "guid": 309, "r": 310, "troubl": 310, "shoot": 310, "wrong": 310, "when": 310, "conda": 310, "import": 310, "mismatch": 310, "gotcha": 310, "list": 310, "indic": 310}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"check_dataset": [[69, "check-dataset"]], "calculate_epsilon_gradient_expression": [[57, "calculate-epsilon-gradient-expression"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "create_config_template": [[75, "create-config-template"]], "calculate_individual_shrinkage": [[61, "calculate-individual-shrinkage"]], "calculate_individual_parameter_statistics": [[60, "calculate-individual-parameter-statistics"]], "add_population_parameter": [[47, "add-population-parameter"]], "calculate_parameters_from_ucp": [[62, "calculate-parameters-from-ucp"]], "calculate_corr_from_cov": [[53, "calculate-corr-from-cov"]], "calculate_corr_from_prec": [[54, "calculate-corr-from-prec"]], "add_iiv": [[40, "add-iiv"]], "calculate_aic": [[51, "calculate-aic"]], "calculate_cov_from_corrse": [[55, "calculate-cov-from-corrse"]], "calculate_eta_shrinkage": [[59, "calculate-eta-shrinkage"]], "check_parameters_near_bounds": [[71, "check-parameters-near-bounds"]], "check_high_correlations": [[70, "check-high-correlations"]], "create_basic_pk_model": [[74, "create-basic-pk-model"]], "add_time_after_dose": [[48, "add-time-after-dose"]], "calculate_se_from_prec": [[67, "calculate-se-from-prec"]], "append_estimation_step_options": [[49, "append-estimation-step-options"]], "add_iov": [[42, "add-iov"]], "add_metabolite": [[44, "add-metabolite"]], "calculate_pk_parameters_statistics": [[63, "calculate-pk-parameters-statistics"]], "calculate_bic": [[52, "calculate-bic"]], "add_peripheral_compartment": [[45, "add-peripheral-compartment"]], "calculate_ucp_scale": [[68, "calculate-ucp-scale"]], "bump_model_number": [[50, "bump-model-number"]], "create_joint_distribution": [[76, "create-joint-distribution"]], "calculate_se_from_cov": [[66, "calculate-se-from-cov"]], "calculate_prec_from_corrse": [[64, "calculate-prec-from-corrse"]], "add_pk_iiv": [[46, "add-pk-iiv"]], "convert_model": [[73, "convert-model"]], "calculate_cov_from_prec": [[56, "calculate-cov-from-prec"]], "calculate_prec_from_cov": [[65, "calculate-prec-from-cov"]], "cleanup_model": [[72, "cleanup-model"]], "create_rng": [[77, "create-rng"]], "calculate_eta_gradient_expression": [[58, "calculate-eta-gradient-expression"]], "add_estimation_step": [[39, "add-estimation-step"]], "add_lag_time": [[43, "add-lag-time"]], "Compartment": [[7, "compartment"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [305, "running"], [297, "running"], [286, "running"], [281, "running"], [289, "running"], [291, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [305, "arguments"], [297, "arguments"], [286, "arguments"], [281, "arguments"], [289, "arguments"], [291, "arguments"]], "Procedure": [[1, "procedure"], [305, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "Assignment": [[4, "assignment"]], "Statement": [[28, "statement"]], "Parameters": [[25, "parameters"], [294, "parameters"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "ModelError": [[19, "modelerror"]], "add_allometry": [[34, "add-allometry"]], "add_effect_compartment": [[38, "add-effect-compartment"]], "add_admid": [[33, "add-admid"]], "DataInfo": [[10, "datainfo"], [283, "datainfo"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "EstimationSteps": [[15, "estimationsteps"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "DatasetWarning": [[12, "datasetwarning"]], "to_compartmental_system": [[32, "to-compartmental-system"]], "API Reference": [[3, "api-reference"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "ODESystem": [[23, "odesystem"]], "ColumnInfo": [[6, "columninfo"], [283, "columninfo"]], "Statements": [[29, "statements"], [294, "statements"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [289, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [291, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [27, "results"], [308, "results"], [281, "results"], [291, "results"]], "DatasetError": [[11, "dataseterror"]], "VariabilityHierarchy": [[30, "variabilityhierarchy"]], "VariabilityLevel": [[31, "variabilitylevel"]], "RandomVariables": [[26, "randomvariables"]], "add_covariance_step": [[36, "add-covariance-step"]], "Bolus": [[5, "bolus"]], "add_bioavailability": [[35, "add-bioavailability"]], "add_covariate_effect": [[37, "add-covariate-effect"]], "Infusion": [[16, "infusion"]], "Model": [[18, "model"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "EstimationStep": [[14, "estimationstep"]], "Distribution": [[13, "distribution"], [296, "distribution"]], "Parameter": [[24, "parameter"]], "NormalDistribution": [[22, "normaldistribution"]], "execute_workflow": [[266, "execute-workflow"]], "pharmpy.workflows Package": [[271, "module-pharmpy.workflows"]], "Options for the data module": [[271, "id1"]], "Functions": [[271, "functions"], [269, "functions"], [268, "functions"], [270, "functions"]], "Classes": [[271, "classes"], [268, "classes"]], "run_bootstrap": [[238, "run-bootstrap"]], "run_amd": [[237, "run-amd"]], "retrieve_final_model": [[234, "retrieve-final-model"]], "run_iivsearch": [[241, "run-iivsearch"]], "run_modelfit": [[243, "run-modelfit"]], "write_results": [[252, "write-results"]], "pharmpy.modeling Package": [[269, "module-pharmpy.modeling"]], "run_structsearch": [[246, "run-structsearch"]], "ModelDatabase": [[257, "modeldatabase"]], "summarize_modelfit_results": [[251, "summarize-modelfit-results"]], "Bootstrap": [[272, "bootstrap"]], "The Bootstrap postprocessing and results": [[272, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[272, "parameter-statistics"]], "OFV statistics": [[272, "ofv-statistics"]], "Covariance matrix": [[272, "covariance-matrix"], [295, "covariance-matrix"]], "Included individuals": [[272, "included-individuals"]], "run_modelsearch": [[244, "run-modelsearch"]], "LocalDirectoryDatabase": [[253, "localdirectorydatabase"]], "run_tool": [[247, "run-tool"]], "pharmpy.model Package": [[268, "module-pharmpy.model"]], "pharmpy.tools Package": [[270, "module-pharmpy.tools"]], "Workflow": [[262, "workflow"]], "default_tool_database": [[265, "default-tool-database"]], "Log": [[256, "log"]], "summarize_individuals_count_table": [[250, "summarize-individuals-count-table"]], "run_estmethod": [[240, "run-estmethod"]], "summarize_errors": [[248, "summarize-errors"]], "LocalModelDirectoryDatabase": [[255, "localmodeldirectorydatabase"]], "run_iovsearch": [[242, "run-iovsearch"]], "ToolDatabase": [[261, "tooldatabase"]], "call_workflow": [[263, "call-workflow"]], "run_covsearch": [[239, "run-covsearch"]], "run_ruvsearch": [[245, "run-ruvsearch"]], "LocalDirectoryToolDatabase": [[254, "localdirectorytooldatabase"]], "Task": [[260, "task"]], "summarize_individuals": [[249, "summarize-individuals"]], "split_common_options": [[267, "split-common-options"]], "default_model_database": [[264, "default-model-database"]], "NullToolDatabase": [[259, "nulltooldatabase"]], "retrieve_models": [[235, "retrieve-models"]], "NullModelDatabase": [[258, "nullmodeldatabase"]], "run_allometry": [[236, "run-allometry"]], "use_thetas_for_error_stdev": [[219, "use-thetas-for-error-stdev"]], "write_model": [[221, "write-model"]], "transform_etas_boxcox": [[209, "transform-etas-boxcox"]], "transform_etas_tdist": [[211, "transform-etas-tdist"]], "set_proportional_error_model": [[195, "set-proportional-error-model"]], "set_time_varying_error_model": [[197, "set-time-varying-error-model"]], "set_weighted_error_model": [[201, "set-weighted-error-model"]], "set_zero_order_absorption": [[202, "set-zero-order-absorption"]], "unconstrain_parameters": [[213, "unconstrain-parameters"]], "create_results": [[223, "create-results"]], "resume_tool": [[233, "resume-tool"]], "simplify_expression": [[205, "simplify-expression"]], "load_example_modelfit_results": [[225, "load-example-modelfit-results"]], "update_inits": [[218, "update-inits"]], "fit": [[224, "fit"]], "set_tmdd": [[198, "set-tmdd"]], "read_results": [[232, "read-results"]], "update_initial_individual_estimates": [[217, "update-initial-individual-estimates"]], "write_csv": [[220, "write-csv"]], "create_report": [[222, "create-report"]], "transform_blq": [[208, "transform-blq"]], "unfix_parameters_to": [[216, "unfix-parameters-to"]], "transform_etas_john_draper": [[210, "transform-etas-john-draper"]], "unfix_parameters": [[215, "unfix-parameters"]], "set_zero_order_input": [[204, "set-zero-order-input"]], "predict_outliers": [[228, "predict-outliers"]], "set_upper_bounds": [[200, "set-upper-bounds"]], "undrop_columns": [[214, "undrop-columns"]], "set_zero_order_elimination": [[203, "set-zero-order-elimination"]], "predict_influential_individuals": [[226, "predict-influential-individuals"]], "print_fit_summary": [[229, "print-fit-summary"]], "set_seq_zo_fo_absorption": [[196, "set-seq-zo-fo-absorption"]], "split_joint_distribution": [[207, "split-joint-distribution"]], "predict_influential_outliers": [[227, "predict-influential-outliers"]], "read_modelfit_results": [[231, "read-modelfit-results"]], "set_transit_compartments": [[199, "set-transit-compartments"]], "rank_models": [[230, "rank-models"]], "translate_nmtran_time": [[212, "translate-nmtran-time"]], "solve_ode_system": [[206, "solve-ode-system"]], "read_model_from_string": [[157, "read-model-from-string"]], "remove_iov": [[164, "remove-iov"]], "set_lower_bounds": [[188, "set-lower-bounds"]], "set_name": [[191, "set-name"]], "remove_bioavailability": [[158, "remove-bioavailability"]], "set_dvid": [[180, "set-dvid"]], "sample_parameters_uniformly": [[173, "sample-parameters-uniformly"]], "remove_iiv": [[163, "remove-iiv"]], "remove_unused_parameters_and_rvs": [[168, "remove-unused-parameters-and-rvs"]], "set_initial_estimates": [[187, "set-initial-estimates"]], "set_power_on_ruv": [[194, "set-power-on-ruv"]], "remove_peripheral_compartment": [[167, "remove-peripheral-compartment"]], "remove_loq_data": [[166, "remove-loq-data"]], "rename_symbols": [[169, "rename-symbols"]], "remove_estimation_step": [[162, "remove-estimation-step"]], "set_additive_error_model": [[174, "set-additive-error-model"]], "sample_parameters_from_covariance_matrix": [[172, "sample-parameters-from-covariance-matrix"]], "set_evaluation_step": [[182, "set-evaluation-step"]], "resample_data": [[170, "resample-data"]], "remove_covariate_effect": [[160, "remove-covariate-effect"]], "set_covariates": [[177, "set-covariates"]], "remove_covariance_step": [[159, "remove-covariance-step"]], "set_estimation_step": [[181, "set-estimation-step"]], "sample_individual_estimates": [[171, "sample-individual-estimates"]], "remove_lag_time": [[165, "remove-lag-time"]], "read_model": [[156, "read-model"]], "set_first_order_elimination": [[184, "set-first-order-elimination"]], "set_first_order_absorption": [[183, "set-first-order-absorption"]], "set_peripheral_compartments": [[193, "set-peripheral-compartments"]], "set_dtbs_error_model": [[179, "set-dtbs-error-model"]], "set_iiv_on_ruv": [[185, "set-iiv-on-ruv"]], "set_ode_solver": [[192, "set-ode-solver"]], "set_bolus_absorption": [[175, "set-bolus-absorption"]], "set_mixed_mm_fo_elimination": [[190, "set-mixed-mm-fo-elimination"]], "set_michaelis_menten_elimination": [[189, "set-michaelis-menten-elimination"]], "set_combined_error_model": [[176, "set-combined-error-model"]], "set_initial_condition": [[186, "set-initial-condition"]], "remove_error_model": [[161, "remove-error-model"]], "set_direct_effect": [[178, "set-direct-effect"]], "get_observation_expression": [[117, "get-observation-expression"]], "has_linear_odes_with_real_eigenvalues": [[134, "has-linear-odes-with-real-eigenvalues"]], "list_time_varying_covariates": [[145, "list-time-varying-covariates"]], "has_weighted_error_model": [[140, "has-weighted-error-model"]], "make_declarative": [[147, "make-declarative"]], "has_mixed_mm_fo_elimination": [[136, "has-mixed-mm-fo-elimination"]], "get_unit_of": [[126, "get-unit-of"]], "has_covariate_effect": [[131, "has-covariate-effect"]], "read_dataset_from_datainfo": [[155, "read-dataset-from-datainfo"]], "has_proportional_error_model": [[138, "has-proportional-error-model"]], "has_additive_error_model": [[129, "has-additive-error-model"]], "plot_individual_predictions": [[150, "plot-individual-predictions"]], "get_observations": [[118, "get-observations"]], "get_zero_order_inputs": [[127, "get-zero-order-inputs"]], "is_real": [[144, "is-real"]], "has_combined_error_model": [[130, "has-combined-error-model"]], "load_example_model": [[146, "load-example-model"]], "plot_transformed_eta_distributions": [[152, "plot-transformed-eta-distributions"]], "has_zero_order_absorption": [[141, "has-zero-order-absorption"]], "get_sigmas": [[124, "get-sigmas"]], "get_pd_parameters": [[120, "get-pd-parameters"]], "get_population_prediction_expression": [[122, "get-population-prediction-expression"]], "has_random_effect": [[139, "has-random-effect"]], "has_zero_order_elimination": [[142, "has-zero-order-elimination"]], "print_model_code": [[153, "print-model-code"]], "has_linear_odes": [[133, "has-linear-odes"]], "mu_reference_model": [[148, "mu-reference-model"]], "plot_iofv_vs_iofv": [[151, "plot-iofv-vs-iofv"]], "omit_data": [[149, "omit-data"]], "is_linearized": [[143, "is-linearized"]], "get_rv_parameters": [[123, "get-rv-parameters"]], "get_thetas": [[125, "get-thetas"]], "has_first_order_elimination": [[132, "has-first-order-elimination"]], "greekify_model": [[128, "greekify-model"]], "print_model_symbols": [[154, "print-model-symbols"]], "has_odes": [[137, "has-odes"]], "get_omegas": [[119, "get-omegas"]], "has_michaelis_menten_elimination": [[135, "has-michaelis-menten-elimination"]], "get_pk_parameters": [[121, "get-pk-parameters"]], "evaluate_population_prediction": [[87, "evaluate-population-prediction"]], "get_lag_times": [[110, "get-lag-times"]], "find_clearance_parameters": [[90, "find-clearance-parameters"]], "fix_parameters_to": [[94, "fix-parameters-to"]], "evaluate_weighted_residuals": [[88, "evaluate-weighted-residuals"]], "get_number_of_individuals": [[114, "get-number-of-individuals"]], "get_model_covariates": [[113, "get-model-covariates"]], "get_doseid": [[102, "get-doseid"]], "get_bioavailability": [[97, "get-bioavailability"]], "get_config_path": [[100, "get-config-path"]], "get_ids": [[106, "get-ids"]], "get_number_of_observations": [[115, "get-number-of-observations"]], "evaluate_individual_prediction": [[86, "evaluate-individual-prediction"]], "get_cmt": [[98, "get-cmt"]], "get_model_code": [[112, "get-model-code"]], "evaluate_epsilon_gradient": [[83, "evaluate-epsilon-gradient"]], "get_individual_parameters": [[107, "get-individual-parameters"]], "get_individual_prediction_expression": [[108, "get-individual-prediction-expression"]], "get_dv_symbol": [[104, "get-dv-symbol"]], "drop_columns": [[81, "drop-columns"]], "get_number_of_observations_per_individual": [[116, "get-number-of-observations-per-individual"]], "create_symbol": [[78, "create-symbol"]], "evaluate_expression": [[85, "evaluate-expression"]], "get_doses": [[103, "get-doses"]], "deidentify_data": [[79, "deidentify-data"]], "get_initial_conditions": [[109, "get-initial-conditions"]], "get_mdv": [[111, "get-mdv"]], "get_covariate_baselines": [[101, "get-covariate-baselines"]], "fix_parameters": [[93, "fix-parameters"]], "evaluate_eta_gradient": [[84, "evaluate-eta-gradient"]], "fix_or_unfix_parameters": [[92, "fix-or-unfix-parameters"]], "find_volume_parameters": [[91, "find-volume-parameters"]], "display_odes": [[80, "display-odes"]], "get_evid": [[105, "get-evid"]], "drop_dropped_columns": [[82, "drop-dropped-columns"]], "get_baselines": [[96, "get-baselines"]], "expand_additional_doses": [[89, "expand-additional-doses"]], "get_concentration_parameters_from_data": [[99, "get-concentration-parameters-from-data"]], "get_admid": [[95, "get-admid"]], "Simeval": [[307, "simeval"]], "The simeval results": [[307, "the-simeval-results"]], "Sampled Individual OFVs": [[307, "sampled-individual-ofvs"]], "Individual OFV summary": [[307, "individual-ofv-summary"]], "Individual prediction plot": [[307, "individual-prediction-plot"]], "QA": [[304, "qa"]], "The qa results": [[304, "the-qa-results"]], "Overview": [[304, "overview"]], "Structural bias": [[304, "structural-bias"]], "Fullblock": [[304, "fullblock"]], "Boxcox": [[304, "boxcox"]], "Tdist": [[304, "tdist"]], "Residual error": [[304, "residual-error"]], "Covariate effects": [[304, "covariate-effects"], [287, "covariate-effects"]], "Design principles": [[284, "design-principles"]], "Levels of the architecture": [[284, "levels-of-the-architecture"]], "The Heart, The Model Class": [[284, "the-heart-the-model-class"]], "pharmpy.Parameters": [[284, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[284, "pharmpy-randomvariables"]], "pharmpy.Statements": [[284, "pharmpy-statements"]], "The pharmpy.modeling module": [[284, "the-pharmpy-modeling-module"]], "Docstrings": [[284, "docstrings"]], "Dependencies": [[284, "dependencies"]], "ruvsearch": [[305, "ruvsearch"]], "Models": [[305, "models"]], "The RUVsearch results": [[305, "the-ruvsearch-results"]], "Contributors": [[280, "authors"]], "Development": [[280, "development"]], "Scientific input": [[280, "scientific-input"]], "Funding": [[280, "funding"]], "The Pharmpy command line interface": [[276, "the-pharmpy-command-line-interface"]], "pharmpy": [[276, "pharmpy"]], "pharmpy data": [[276, "pharmpy-data"]], "pharmpy data append": [[276, "pharmpy-data-append"]], "pharmpy data deidentify": [[276, "pharmpy-data-deidentify"]], "pharmpy data filter": [[276, "pharmpy-data-filter"]], "pharmpy data print": [[276, "pharmpy-data-print"]], "pharmpy data resample": [[276, "pharmpy-data-resample"]], "pharmpy data write": [[276, "pharmpy-data-write"]], "pharmpy info": [[276, "pharmpy-info"]], "pharmpy model": [[276, "pharmpy-model"]], "pharmpy model absorption_rate": [[276, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[276, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[276, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[276, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[276, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[276, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[276, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[276, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[276, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[276, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[276, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[276, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[276, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[276, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[276, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[276, "pharmpy-model-sample"]], "pharmpy model tdist": [[276, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[276, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[276, "pharmpy-model-update-inits"]], "pharmpy results": [[276, "pharmpy-results"]], "pharmpy results bootstrap": [[276, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[276, "pharmpy-results-cdd"]], "pharmpy results frem": [[276, "pharmpy-results-frem"]], "pharmpy results linearize": [[276, "pharmpy-results-linearize"]], "pharmpy results ofv": [[276, "pharmpy-results-ofv"]], "pharmpy results print": [[276, "pharmpy-results-print"]], "pharmpy results qa": [[276, "pharmpy-results-qa"]], "pharmpy results report": [[276, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[276, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[276, "pharmpy-results-scm"]], "pharmpy results simeval": [[276, "pharmpy-results-simeval"]], "pharmpy results summary": [[276, "pharmpy-results-summary"]], "pharmpy run": [[276, "pharmpy-run"]], "pharmpy run allometry": [[276, "pharmpy-run-allometry"]], "pharmpy run amd": [[276, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[276, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[276, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[276, "pharmpy-run-estmethod"]], "pharmpy run execute": [[276, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[276, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[276, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[276, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[276, "pharmpy-run-ruvsearch"]], "User guide": [[309, "user-guide"]], "Configuration": [[278, "configuration"]], "The configuration file": [[278, "the-configuration-file"]], "Available configurations": [[278, "available-configurations"]], "pharmpy.plugins.nonmem": [[278, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[278, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[278, "pharmpy-plugins-rxode"]], "Environment variables": [[278, "environment-variables"]], "Resmod": [[302, "resmod"]], "The resmod results": [[302, "the-resmod-results"]], "Resmod models": [[302, "resmod-models"]], "Pharmpy Community Code of Conduct": [[277, "pharmpy-community-code-of-conduct"]], "FREM": [[287, "frem"]], "The FREM postprocessing and results": [[287, "the-frem-postprocessing-and-results"]], "Parameter covariate coefficients": [[287, "parameter-covariate-coefficients"]], "Individual covariate effects": [[287, "individual-covariate-effects"]], "Unexplained variability": [[287, "unexplained-variability"]], "Parameter estimates": [[287, "parameter-estimates"], [295, "parameter-estimates"]], "OFV": [[287, "ofv"]], "Estimated covariate values": [[287, "estimated-covariate-values"]], "References": [[287, "references"], [273, "references"]], "Crossval": [[282, "crossval"]], "The crossval results": [[282, "the-crossval-results"]], "Crossvalidation OFVs": [[282, "crossvalidation-ofvs"]], "Plots in Pharmpy": [[299, "plots-in-pharmpy"]], "Setting themes": [[299, "setting-themes"]], "Changing axis of plots": [[299, "changing-axis-of-plots"]], "Tools": [[308, "tools"]], "Tools in Pharmpy": [[308, "tools-in-pharmpy"]], "Common options": [[308, "common-options"]], "Common features": [[308, "common-features"]], "Tool database": [[308, "tool-database"]], "Running directory": [[308, "running-directory"]], "Metadata": [[308, "metadata"]], "Datasets": [[308, "datasets"]], "Model feature language (MFL)": [[308, "model-feature-language-mfl"]], "Option types": [[308, "option-types"]], "Model features": [[308, "model-features"]], "Symbols": [[308, "symbols"]], "Describe intervals": [[308, "describe-intervals"]], "Redundant descriptions": [[308, "redundant-descriptions"]], "Examples": [[308, "examples"]], "Contribute": [[279, "contribute"]], "Set up the development environment": [[279, "set-up-the-development-environment"]], "Supported platforms": [[279, "supported-platforms"]], "Install Python": [[279, "install-python"]], "Install git": [[279, "install-git"]], "Fork and clone the code repository": [[279, "fork-and-clone-the-code-repository"]], "Install tox": [[279, "install-tox"]], "Install graphviz used for building the documentation": [[279, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[279, "using-the-development-environment"]], "Running tox": [[279, "running-tox"]], "Check code formatting": [[279, "check-code-formatting"]], "Run the unit tests": [[279, "run-the-unit-tests"]], "Build and test the documentation": [[279, "build-and-test-the-documentation"]], "Run the integration tests": [[279, "run-the-integration-tests"]], "Build a usable virtual environment": [[279, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[279, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[279, "releasing-pharmpy-and-documentation"]], "Version": [[279, "version"]], "Information for developers": [[279, "information-for-developers"]], "PsN with Pharmpy": [[303, "psn-with-pharmpy"]], "Tools connected to PsN": [[303, "tools-connected-to-psn"]], "Modelsearch": [[297, "modelsearch"]], "The search space": [[297, "the-search-space"]], "Algorithms": [[297, "algorithms"], [286, "algorithms"], [289, "algorithms"]], "Common behaviours between algorithms": [[297, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[297, "feature-combination-exclusions"]], "Exhaustive search": [[297, "exhaustive-search"]], "Exhaustive stepwise search": [[297, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[297, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[297, "adding-iiv-to-the-candidate-models-during-search"]], "Comparing and ranking candidates": [[297, "comparing-and-ranking-candidates"], [289, "comparing-and-ranking-candidates"], [291, "comparing-and-ranking-candidates"]], "The Modelsearch results": [[297, "the-modelsearch-results"]], "Modeling": [[296, "modeling"]], "Basic functions": [[296, "basic-functions"]], "Reading and writing models": [[296, "reading-and-writing-models"]], "Loading example models": [[296, "loading-example-models"]], "Converting models": [[296, "converting-models"]], "Create basic models": [[296, "create-basic-models"]], "Modeling transformations": [[296, "modeling-transformations"]], "Structural model": [[296, "structural-model"]], "Absorption rate": [[296, "absorption-rate"]], "Absorption delay": [[296, "absorption-delay"]], "Elimination": [[296, "elimination"]], "Parameter variability model": [[296, "parameter-variability-model"]], "Adding and removing parameter variability": [[296, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[296, "adding-and-removing-covariance"]], "Eta transformations": [[296, "eta-transformations"]], "Covariates and allometry": [[296, "covariates-and-allometry"]], "Population parameters": [[296, "population-parameters"]], "Error model": [[296, "error-model"]], "BLQ transformations": [[296, "blq-transformations"]], "Estimation steps": [[296, "estimation-steps"], [294, "estimation-steps"]], "Examining and modifying dataset": [[296, "examining-and-modifying-dataset"]], "Subjects": [[296, "subjects"]], "Observations": [[296, "observations"]], "Dosing": [[296, "dosing"]], "Extract dosing information": [[296, "extract-dosing-information"]], "Dose grouping": [[296, "dose-grouping"]], "Time after dose": [[296, "time-after-dose"]], "Concentration parameters": [[296, "concentration-parameters"]], "Getting started": [[288, "getting-started"]], "Installation": [[288, "installation"]], "A first example": [[288, "a-first-example"]], "Changelog": [[274, "changelog"]], "0.98.0 (2023-07-21)": [[274, "id1"]], "New features": [[274, "new-features"], [274, "id3"], [274, "id7"], [274, "id12"], [274, "id16"], [274, "id20"], [274, "id23"], [274, "id27"], [274, "id30"], [274, "id33"], [274, "id46"], [274, "id56"], [274, "id63"], [274, "id74"], [274, "id78"], [274, "id85"], [274, "id88"], [274, "id92"], [274, "id98"], [274, "id102"], [274, "id108"], [274, "id113"], [274, "id117"], [274, "id120"], [274, "id128"], [274, "id132"], [274, "id138"], [274, "id147"], [274, "id151"], [274, "id154"], [274, "id158"], [274, "id160"], [274, "id165"], [274, "id168"], [274, "id172"]], "Changes": [[274, "changes"], [274, "id4"], [274, "id6"], [274, "id9"], [274, "id13"], [274, "id17"], [274, "id24"], [274, "id28"], [274, "id31"], [274, "id34"], [274, "id36"], [274, "id38"], [274, "id41"], [274, "id44"], [274, "id47"], [274, "id49"], [274, "id52"], [274, "id57"], [274, "id60"], [274, "id64"], [274, "id67"], [274, "id70"], [274, "id75"], [274, "id79"], [274, "id82"], [274, "id86"], [274, "id89"], [274, "id93"], [274, "id99"], [274, "id103"], [274, "id114"], [274, "id118"], [274, "id123"], [274, "id129"], [274, "id139"], [274, "id144"], [274, "id148"], [274, "id155"], [274, "id161"], [274, "id166"], [274, "id169"], [274, "id173"]], "0.97.0 (2023-06-28)": [[274, "id2"]], "0.96.0 (2023-05-26)": [[274, "id5"]], "Bugfixes": [[274, "bugfixes"], [274, "id10"], [274, "id14"], [274, "id18"], [274, "id21"], [274, "id25"], [274, "id39"], [274, "id42"], [274, "id68"], [274, "id72"], [274, "id76"], [274, "id80"], [274, "id83"], [274, "id90"], [274, "id94"], [274, "id96"], [274, "id100"], [274, "id104"], [274, "id106"], [274, "id109"], [274, "id111"], [274, "id115"], [274, "id121"], [274, "id124"], [274, "id126"], [274, "id130"], [274, "id134"], [274, "id136"], [274, "id140"], [274, "id142"], [274, "id145"], [274, "id149"], [274, "id152"], [274, "id156"], [274, "id163"], [274, "id170"], [274, "id174"]], "0.95.0 (2023-05-22)": [[274, "id8"]], "0.94.0 (2023-04-26)": [[274, "id11"]], "0.93.0 (2023-04-19)": [[274, "id15"]], "0.92.0 (2023-04-05)": [[274, "id19"]], "0.91.0 (2023-03-03)": [[274, "id22"]], "0.90.0 (2023-02-24)": [[274, "id26"]], "0.89.0 (2023-01-26)": [[274, "id29"]], "0.88.0 (2022-12-21)": [[274, "id32"]], "0.87.0 (2022-12-14)": [[274, "id35"]], "0.86.0 (2022-11-30)": [[274, "id37"]], "0.85.0 (2022-11-18)": [[274, "id40"]], "0.84.1 (2022-11-13)": [[274, "id43"]], "Bug fixes": [[274, "bug-fixes"], [274, "id50"], [274, "id54"], [274, "id58"], [274, "id61"], [274, "id65"]], "0.84.0 (2022-11-09)": [[274, "id45"]], "0.83.0 (2022-11-01)": [[274, "id48"]], "0.82.0 (2022-10-24)": [[274, "id51"]], "0.81.1 (2022-10-24)": [[274, "id53"]], "0.81.0 (2022-10-21)": [[274, "id55"]], "0.80.0 (2022-10-19)": [[274, "id59"]], "0.79.0 (2022-10-16)": [[274, "id62"]], "0.78.0 (2022-09-20)": [[274, "id66"]], "0.77.0 (2022-09-08)": [[274, "id69"]], "0.76.1 (2022-09-06)": [[274, "id71"]], "0.76.0 (2022-09-05)": [[274, "id73"]], "0.75.0 (2022-08-10)": [[274, "id77"]], "0.74.0 (2022-07-18)": [[274, "id81"]], "0.73.0 (2022-06-21)": [[274, "id84"]], "0.72.0 (2022-06-08)": [[274, "id87"]], "0.71.0 (2022-05-24)": [[274, "id91"]], "0.70.1 (2022-05-17)": [[274, "id95"]], "0.70.0 (2022-05-13)": [[274, "id97"]], "0.69.0 (2022-04-29)": [[274, "id101"]], "0.68.0 (2022-04-27)": [[274, "id105"]], "0.67.0 (2022-04-25)": [[274, "id107"]], "0.66.0 (2022-04-20)": [[274, "id110"]], "0.65.0 (2022-04-14)": [[274, "id112"]], "0.64.0 (2022-04-12)": [[274, "id116"]], "0.63.0 (2022-04-07)": [[274, "id119"]], "0.62.0 (2022-04-04)": [[274, "id122"]], "New feature": [[274, "new-feature"]], "0.61.1 (2022-03-31)": [[274, "id125"]], "0.61.0 (2022-03-29)": [[274, "id127"]], "0.59.0 (2022-03-25)": [[274, "id131"]], "0.58.4 (2022-03-24)": [[274, "id133"]], "0.58.1 (2022-03-22)": [[274, "id135"]], "0.58.0 (2022-03-22)": [[274, "id137"]], "0.57.0 (2022-03-21)": [[274, "id141"]], "0.56.0 (2022-03-17)": [[274, "id143"]], "0.55.0 (2022-03-16)": [[274, "id146"]], "0.54.0 (2022-03-08)": [[274, "id150"]], "0.53.0 (2022-03-04)": [[274, "id153"]], "0.52.0 (2022-02-25)": [[274, "id157"]], "0.51.0 (2022-02-24)": [[274, "id159"]], "0.50.1 (2022-02-16)": [[274, "id162"]], "0.50.0 (2022-02-16)": [[274, "id164"]], "0.49.0 (2022-02-10)": [[274, "id167"]], "0.48.0 (2022-02-04)": [[274, "id171"]], "0.47.0 (2022-01-28)": [[274, "id175"]], "0.46.0 (2022-01-27)": [[274, "id176"]], "0.45.0 (2022-01-21)": [[274, "id177"]], "0.44.0 (2022-01-20)": [[274, "id178"]], "0.43.0 (2022-01-12)": [[274, "id179"]], "0.42.0 (2022-01-11)": [[274, "id180"]], "0.41.0 (2021-12-21)": [[274, "id181"]], "0.40.0 (2021-12-16)": [[274, "id182"]], "0.39.0 (2021-12-15)": [[274, "id183"]], "0.38.0 (2021-12-08)": [[274, "id184"]], "0.37.1 (2021-11-26)": [[274, "id185"]], "0.37.0 (2021-11-24)": [[274, "id186"]], "0.36.0 (2021-11-11)": [[274, "id187"]], "0.35.0 (2021-11-02)": [[274, "id188"]], "0.34.3 (2021-10-28)": [[274, "id189"]], "0.34.2 (2021-10-26)": [[274, "id190"]], "0.34.1 (2021-10-20)": [[274, "id191"]], "0.34.0 (2021-10-14)": [[274, "id192"]], "0.33.0 (2021-10-11)": [[274, "id193"]], "0.32.0 (2021-09-28)": [[274, "id194"]], "0.31.0 (2021-09-21)": [[274, "id195"]], "0.30.0 (2021-09-06)": [[274, "id196"]], "0.29.0 (2021-08-25)": [[274, "id197"]], "0.28.0 (2021-08-24)": [[274, "id198"]], "0.27.0 (2021-08-09)": [[274, "id199"]], "0.26.1 (2021-08-04)": [[274, "id200"]], "0.26.0 (2021-07-13)": [[274, "id201"]], "0.25.1 (2021-07-08)": [[274, "id202"]], "0.25.0 (2021-06-24)": [[274, "id203"]], "0.24.0 (2021-05-25)": [[274, "id204"]], "0.23.4 (2021-05-03)": [[274, "id205"]], "0.23.3 (2021-04-29)": [[274, "id206"]], "0.23.2 (2021-04-28)": [[274, "id207"]], "0.23.1 (2021-04-28)": [[274, "id208"]], "0.23.0 (2021-04-28)": [[274, "id209"]], "0.22.0 (2021-03-29)": [[274, "id210"]], "0.21.0 (2021-03-22)": [[274, "id211"]], "0.20.1 (2021-03-11)": [[274, "id212"]], "0.20.0 (2021-03-11)": [[274, "id213"]], "0.19.0 (2021-03-02)": [[274, "id214"]], "0.18.0 (2021-03-01)": [[274, "id215"]], "0.17.0 (2021-02-15)": [[274, "id216"]], "0.16.0 (2021-02-08)": [[274, "id217"]], "0.15.0 (2021-02-01)": [[274, "id218"]], "0.14.0 (2021-01-25)": [[274, "id219"]], "0.13.0 (2021-01-18)": [[274, "id220"]], "0.12.0 (2020-12-18)": [[274, "id221"]], "0.11.0 (2020-11-20)": [[274, "id222"]], "0.10.0 (2020-11-16)": [[274, "id223"]], "0.9.0 (2020-10-26)": [[274, "id224"]], "0.8.0 (2020-10-08)": [[274, "id225"]], "0.7.0 (2020-09-28)": [[274, "id226"]], "0.6.0 (2020-09-18)": [[274, "id227"]], "0.5.0 (2020-09-04)": [[274, "id228"]], "0.4.0 (2020-07-24)": [[274, "id229"]], "0.3.0 (2020-06-16)": [[274, "id230"]], "0.2.0 (2020-03-27)": [[274, "id231"]], "0.1.0 (2018-07-22)": [[274, "id232"]], "Pharmpy in R": [[310, "pharmpy-in-r"]], "Installing pharmr": [[310, "installing-pharmr"]], "Trouble shooting": [[310, "trouble-shooting"]], "Wrong Python version when using conda": [[310, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[310, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[310, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[310, "using-pharmr"]], "Gotchas": [[310, "gotchas"]], "List indices": [[310, "list-indices"]], "Model estimation and results": [[295, "model-estimation-and-results"]], "Fitting a model": [[295, "fitting-a-model"]], "Modelfit results": [[295, "modelfit-results"]], "Final OFV": [[295, "final-ofv"]], "Standard errors of parameter estimates": [[295, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[295, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[295, "correlation-matrix"]], "Precision Matrix": [[295, "precision-matrix"]], "Indiviudal OFV": [[295, "indiviudal-ofv"]], "Predictions": [[295, "predictions"]], "Residuals": [[295, "residuals"]], "Individual estimates": [[295, "individual-estimates"]], "Citation": [[275, "citation"]], "How to cite Pharmpy and pharmr": [[275, "how-to-cite-pharmpy-and-pharmr"]], "Linearize": [[293, "linearize"]], "The linearize results": [[293, "the-linearize-results"]], "OFVs": [[293, "ofvs"]], "Individual OFVs": [[293, "individual-ofvs"]], "Documentation for developers": [[285, "documentation-for-developers"]], "Welcome to Pharmpy": [[290, "welcome-to-pharmpy"]], "scm": [[306, "scm"]], "The scm results": [[306, "the-scm-results"]], "Steps": [[306, "steps"]], "OFV Summary": [[306, "ofv-summary"]], "Candidate Summary": [[306, "candidate-summary"]], "Estmethod": [[286, "estmethod"]], "Exhaustive": [[286, "exhaustive"]], "Exhaustive (with update)": [[286, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[286, "exhaustive-only-evaluation"]], "Methods": [[286, "methods"]], "Solvers": [[286, "solvers"]], "The Estmethod results": [[286, "the-estmethod-results"]], "Case deletion diagnostics": [[273, "case-deletion-diagnostics"]], "The cdd results": [[273, "the-cdd-results"]], "Case results": [[273, "case-results"]], "Cook score": [[273, "cook-score"]], "Jackknife cookscore": [[273, "jackknife-cookscore"]], "Covariance ratio": [[273, "covariance-ratio"]], "Delta OFV": [[273, "delta-ofv"]], "Skipped individuals": [[273, "skipped-individuals"]], "Case column": [[273, "case-column"]], "License": [[292, "license"]], "Logo": [[292, "logo"]], "Copyright": [[292, "copyright"]], "BSD 2-clause License": [[292, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[292, "gnu-lesser-general-public-license"]], "Using the NONMEM plugin": [[298, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[298, "names-of-parameters-and-random-variables"]], "Reading in a model": [[298, "reading-in-a-model"], [294, "reading-in-a-model"]], "New parameters and random variables": [[298, "new-parameters-and-random-variables"]], "Writing a model": [[298, "writing-a-model"], [294, "writing-a-model"]], "Project suggestions": [[301, "project-suggestions"]], "COVsearch": [[281, "covsearch"]], "Effects": [[281, "effects"]], "Wildcards": [[281, "wildcards"]], "Algorithm": [[281, "algorithm"], [291, "algorithm"]], "Brute force search for number of IIVs": [[289, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[289, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[289, "full-brute-force-search"]], "Adding IIV to the start model": [[289, "adding-iiv-to-the-start-model"]], "The IIVsearch results": [[289, "the-iivsearch-results"]], "Plugins": [[300, "plugins"]], "Overview of a plugin": [[300, "overview-of-a-plugin"]], "Datasets in Pharmpy": [[283, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[283, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[283, "update-the-dataset-of-a-model"]], "type": [[283, "type"]], "scale": [[283, "scale"]], "continuous": [[283, "continuous"]], "categories": [[283, "categories"]], "unit": [[283, "unit"]], "drop": [[283, "drop"]], "datatype": [[283, "datatype"]], "descriptor": [[283, "descriptor"]], "datainfo file": [[283, "datainfo-file"]], "Distribution of new IOVs": [[291, "distribution-of-new-iovs"]], "The Pharmpy model": [[294, "the-pharmpy-model"]], "Inspecting the model attributes": [[294, "inspecting-the-model-attributes"]], "Name and description": [[294, "name-and-description"]], "Random variables": [[294, "random-variables"]], "Dataset and datainfo": [[294, "dataset-and-datainfo"]], "Dependent variables": [[294, "dependent-variables"]], "Low level manipulations of the model object": [[294, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[294, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[294, "substituting-symbolic-random-variable-distribution-with-numeric"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "admid (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.admid"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_covs (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_covs"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "admid (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.admid"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[23, "pharmpy.model.ODESystem"]], "parameter (class in pharmpy.model)": [[24, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[25, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[26, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[27, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[27, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[28, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[28, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[29, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[29, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[32, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_bioavailability"]], "add_covariance_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_omegas"]], "get_pd_parameters() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.has_first_order_elimination"]], "has_linear_odes() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_odes"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_random_effect"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.remove_bioavailability"]], "remove_covariance_step() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[222, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[223, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[224, "pharmpy.tools.fit"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[225, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[226, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[227, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[228, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[229, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[230, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[231, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[232, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[233, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[234, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[235, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[236, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[237, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[238, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[239, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[240, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[241, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[242, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[243, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[244, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[245, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[246, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[247, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[248, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[249, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[250, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[251, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[252, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[253, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[253, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[254, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[255, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[255, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[255, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[255, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[256, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[256, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[256, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[256, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[256, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[256, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[256, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[257, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[257, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[258, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[258, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[259, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[259, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[259, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[259, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[259, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[260, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[261, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[261, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[261, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[261, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[261, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[261, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[261, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[262, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[263, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[264, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[265, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[266, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[267, "pharmpy.workflows.split_common_options"]], "module": [[268, "module-pharmpy.model"], [269, "module-pharmpy.modeling"], [270, "module-pharmpy.tools"], [271, "module-pharmpy.workflows"]], "pharmpy.model": [[268, "module-pharmpy.model"]], "pharmpy.modeling": [[269, "module-pharmpy.modeling"]], "pharmpy.tools": [[270, "module-pharmpy.tools"]], "pharmpy.workflows": [[271, "module-pharmpy.workflows"]], "--algorithm": [[276, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[276, "cmdoption-pharmpy-run-allometry-allometric_variable"], [276, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[276, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[276, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[276, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[276, "cmdoption-pharmpy-run-iivsearch-cutoff"], [276, "cmdoption-pharmpy-run-iovsearch-cutoff"], [276, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[276, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[276, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[276, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[276, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [276, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[276, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[276, "cmdoption-pharmpy-model-add_iov-eta_names"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[276, "cmdoption-pharmpy-model-add_iov-etas"], [276, "cmdoption-pharmpy-model-boxcox-etas"], [276, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [276, "cmdoption-pharmpy-model-john_draper-etas"], [276, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[276, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[276, "cmdoption-pharmpy-data-append-f"], [276, "cmdoption-pharmpy-data-deidentify-f"], [276, "cmdoption-pharmpy-data-filter-f"], [276, "cmdoption-pharmpy-data-write-f"], [276, "cmdoption-pharmpy-model-absorption_rate-f"], [276, "cmdoption-pharmpy-model-add_cov_effect-f"], [276, "cmdoption-pharmpy-model-add_iiv-f"], [276, "cmdoption-pharmpy-model-add_iov-f"], [276, "cmdoption-pharmpy-model-boxcox-f"], [276, "cmdoption-pharmpy-model-create_joint_distribution-f"], [276, "cmdoption-pharmpy-model-elimination_rate-f"], [276, "cmdoption-pharmpy-model-error-f"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [276, "cmdoption-pharmpy-model-john_draper-f"], [276, "cmdoption-pharmpy-model-peripheral_compartments-f"], [276, "cmdoption-pharmpy-model-power_on_ruv-f"], [276, "cmdoption-pharmpy-model-remove_iiv-f"], [276, "cmdoption-pharmpy-model-remove_iov-f"], [276, "cmdoption-pharmpy-model-tdist-f"], [276, "cmdoption-pharmpy-model-transit_compartments-f"], [276, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[276, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[276, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[276, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[276, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[276, "cmdoption-pharmpy-data-append-h"], [276, "cmdoption-pharmpy-data-deidentify-h"], [276, "cmdoption-pharmpy-data-filter-h"], [276, "cmdoption-pharmpy-data-h"], [276, "cmdoption-pharmpy-data-print-h"], [276, "cmdoption-pharmpy-data-resample-h"], [276, "cmdoption-pharmpy-data-write-h"], [276, "cmdoption-pharmpy-h"], [276, "cmdoption-pharmpy-info-h"], [276, "cmdoption-pharmpy-model-absorption_rate-h"], [276, "cmdoption-pharmpy-model-add_cov_effect-h"], [276, "cmdoption-pharmpy-model-add_iiv-h"], [276, "cmdoption-pharmpy-model-add_iov-h"], [276, "cmdoption-pharmpy-model-boxcox-h"], [276, "cmdoption-pharmpy-model-create_joint_distribution-h"], [276, "cmdoption-pharmpy-model-elimination_rate-h"], [276, "cmdoption-pharmpy-model-error-h"], [276, "cmdoption-pharmpy-model-h"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [276, "cmdoption-pharmpy-model-john_draper-h"], [276, "cmdoption-pharmpy-model-peripheral_compartments-h"], [276, "cmdoption-pharmpy-model-power_on_ruv-h"], [276, "cmdoption-pharmpy-model-print-h"], [276, "cmdoption-pharmpy-model-remove_iiv-h"], [276, "cmdoption-pharmpy-model-remove_iov-h"], [276, "cmdoption-pharmpy-model-sample-h"], [276, "cmdoption-pharmpy-model-tdist-h"], [276, "cmdoption-pharmpy-model-transit_compartments-h"], [276, "cmdoption-pharmpy-model-update_inits-h"], [276, "cmdoption-pharmpy-results-bootstrap-h"], [276, "cmdoption-pharmpy-results-cdd-h"], [276, "cmdoption-pharmpy-results-frem-h"], [276, "cmdoption-pharmpy-results-h"], [276, "cmdoption-pharmpy-results-linearize-h"], [276, "cmdoption-pharmpy-results-ofv-h"], [276, "cmdoption-pharmpy-results-print-h"], [276, "cmdoption-pharmpy-results-qa-h"], [276, "cmdoption-pharmpy-results-report-h"], [276, "cmdoption-pharmpy-results-ruvsearch-h"], [276, "cmdoption-pharmpy-results-scm-h"], [276, "cmdoption-pharmpy-results-simeval-h"], [276, "cmdoption-pharmpy-results-summary-h"], [276, "cmdoption-pharmpy-run-allometry-h"], [276, "cmdoption-pharmpy-run-amd-h"], [276, "cmdoption-pharmpy-run-bootstrap-h"], [276, "cmdoption-pharmpy-run-covsearch-h"], [276, "cmdoption-pharmpy-run-estmethod-h"], [276, "cmdoption-pharmpy-run-execute-h"], [276, "cmdoption-pharmpy-run-h"], [276, "cmdoption-pharmpy-run-iivsearch-h"], [276, "cmdoption-pharmpy-run-iovsearch-h"], [276, "cmdoption-pharmpy-run-modelsearch-h"], [276, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[276, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[276, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [276, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[276, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[276, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[276, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[276, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[276, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[276, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[276, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[276, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[276, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[276, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[276, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[276, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[276, "cmdoption-pharmpy-model-add_cov_effect-operation"], [276, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[276, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[276, "cmdoption-pharmpy-data-append-o"], [276, "cmdoption-pharmpy-data-deidentify-o"], [276, "cmdoption-pharmpy-data-filter-o"], [276, "cmdoption-pharmpy-data-write-o"], [276, "cmdoption-pharmpy-model-absorption_rate-o"], [276, "cmdoption-pharmpy-model-add_cov_effect-o"], [276, "cmdoption-pharmpy-model-add_iiv-o"], [276, "cmdoption-pharmpy-model-add_iov-o"], [276, "cmdoption-pharmpy-model-boxcox-o"], [276, "cmdoption-pharmpy-model-create_joint_distribution-o"], [276, "cmdoption-pharmpy-model-elimination_rate-o"], [276, "cmdoption-pharmpy-model-error-o"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [276, "cmdoption-pharmpy-model-john_draper-o"], [276, "cmdoption-pharmpy-model-peripheral_compartments-o"], [276, "cmdoption-pharmpy-model-power_on_ruv-o"], [276, "cmdoption-pharmpy-model-remove_iiv-o"], [276, "cmdoption-pharmpy-model-remove_iov-o"], [276, "cmdoption-pharmpy-model-tdist-o"], [276, "cmdoption-pharmpy-model-transit_compartments-o"], [276, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[276, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[276, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[276, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[276, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[276, "cmdoption-pharmpy-run-allometry-path"], [276, "cmdoption-pharmpy-run-amd-path"], [276, "cmdoption-pharmpy-run-covsearch-path"], [276, "cmdoption-pharmpy-run-estmethod-path"], [276, "cmdoption-pharmpy-run-iivsearch-path"], [276, "cmdoption-pharmpy-run-iovsearch-path"], [276, "cmdoption-pharmpy-run-modelsearch-path"], [276, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[276, "cmdoption-pharmpy-run-iivsearch-rank_type"], [276, "cmdoption-pharmpy-run-iovsearch-rank_type"], [276, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[276, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[276, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[276, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[276, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[276, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[276, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[276, "cmdoption-pharmpy-model-sample-samples"], [276, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[276, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[276, "cmdoption-pharmpy-data-resample-seed"], [276, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[276, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[276, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[276, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[276, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[276, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[276, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[276, "cmdoption-pharmpy-version"]], "-f": [[276, "cmdoption-pharmpy-data-append-f"], [276, "cmdoption-pharmpy-data-deidentify-f"], [276, "cmdoption-pharmpy-data-filter-f"], [276, "cmdoption-pharmpy-data-write-f"], [276, "cmdoption-pharmpy-model-absorption_rate-f"], [276, "cmdoption-pharmpy-model-add_cov_effect-f"], [276, "cmdoption-pharmpy-model-add_iiv-f"], [276, "cmdoption-pharmpy-model-add_iov-f"], [276, "cmdoption-pharmpy-model-boxcox-f"], [276, "cmdoption-pharmpy-model-create_joint_distribution-f"], [276, "cmdoption-pharmpy-model-elimination_rate-f"], [276, "cmdoption-pharmpy-model-error-f"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [276, "cmdoption-pharmpy-model-john_draper-f"], [276, "cmdoption-pharmpy-model-peripheral_compartments-f"], [276, "cmdoption-pharmpy-model-power_on_ruv-f"], [276, "cmdoption-pharmpy-model-remove_iiv-f"], [276, "cmdoption-pharmpy-model-remove_iov-f"], [276, "cmdoption-pharmpy-model-tdist-f"], [276, "cmdoption-pharmpy-model-transit_compartments-f"], [276, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[276, "cmdoption-pharmpy-data-append-h"], [276, "cmdoption-pharmpy-data-deidentify-h"], [276, "cmdoption-pharmpy-data-filter-h"], [276, "cmdoption-pharmpy-data-h"], [276, "cmdoption-pharmpy-data-print-h"], [276, "cmdoption-pharmpy-data-resample-h"], [276, "cmdoption-pharmpy-data-write-h"], [276, "cmdoption-pharmpy-h"], [276, "cmdoption-pharmpy-info-h"], [276, "cmdoption-pharmpy-model-absorption_rate-h"], [276, "cmdoption-pharmpy-model-add_cov_effect-h"], [276, "cmdoption-pharmpy-model-add_iiv-h"], [276, "cmdoption-pharmpy-model-add_iov-h"], [276, "cmdoption-pharmpy-model-boxcox-h"], [276, "cmdoption-pharmpy-model-create_joint_distribution-h"], [276, "cmdoption-pharmpy-model-elimination_rate-h"], [276, "cmdoption-pharmpy-model-error-h"], [276, "cmdoption-pharmpy-model-h"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [276, "cmdoption-pharmpy-model-john_draper-h"], [276, "cmdoption-pharmpy-model-peripheral_compartments-h"], [276, "cmdoption-pharmpy-model-power_on_ruv-h"], [276, "cmdoption-pharmpy-model-print-h"], [276, "cmdoption-pharmpy-model-remove_iiv-h"], [276, "cmdoption-pharmpy-model-remove_iov-h"], [276, "cmdoption-pharmpy-model-sample-h"], [276, "cmdoption-pharmpy-model-tdist-h"], [276, "cmdoption-pharmpy-model-transit_compartments-h"], [276, "cmdoption-pharmpy-model-update_inits-h"], [276, "cmdoption-pharmpy-results-bootstrap-h"], [276, "cmdoption-pharmpy-results-cdd-h"], [276, "cmdoption-pharmpy-results-frem-h"], [276, "cmdoption-pharmpy-results-h"], [276, "cmdoption-pharmpy-results-linearize-h"], [276, "cmdoption-pharmpy-results-ofv-h"], [276, "cmdoption-pharmpy-results-print-h"], [276, "cmdoption-pharmpy-results-qa-h"], [276, "cmdoption-pharmpy-results-report-h"], [276, "cmdoption-pharmpy-results-ruvsearch-h"], [276, "cmdoption-pharmpy-results-scm-h"], [276, "cmdoption-pharmpy-results-simeval-h"], [276, "cmdoption-pharmpy-results-summary-h"], [276, "cmdoption-pharmpy-run-allometry-h"], [276, "cmdoption-pharmpy-run-amd-h"], [276, "cmdoption-pharmpy-run-bootstrap-h"], [276, "cmdoption-pharmpy-run-covsearch-h"], [276, "cmdoption-pharmpy-run-estmethod-h"], [276, "cmdoption-pharmpy-run-execute-h"], [276, "cmdoption-pharmpy-run-h"], [276, "cmdoption-pharmpy-run-iivsearch-h"], [276, "cmdoption-pharmpy-run-iovsearch-h"], [276, "cmdoption-pharmpy-run-modelsearch-h"], [276, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[276, "cmdoption-pharmpy-data-append-o"], [276, "cmdoption-pharmpy-data-deidentify-o"], [276, "cmdoption-pharmpy-data-filter-o"], [276, "cmdoption-pharmpy-data-write-o"], [276, "cmdoption-pharmpy-model-absorption_rate-o"], [276, "cmdoption-pharmpy-model-add_cov_effect-o"], [276, "cmdoption-pharmpy-model-add_iiv-o"], [276, "cmdoption-pharmpy-model-add_iov-o"], [276, "cmdoption-pharmpy-model-boxcox-o"], [276, "cmdoption-pharmpy-model-create_joint_distribution-o"], [276, "cmdoption-pharmpy-model-elimination_rate-o"], [276, "cmdoption-pharmpy-model-error-o"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [276, "cmdoption-pharmpy-model-john_draper-o"], [276, "cmdoption-pharmpy-model-peripheral_compartments-o"], [276, "cmdoption-pharmpy-model-power_on_ruv-o"], [276, "cmdoption-pharmpy-model-remove_iiv-o"], [276, "cmdoption-pharmpy-model-remove_iov-o"], [276, "cmdoption-pharmpy-model-tdist-o"], [276, "cmdoption-pharmpy-model-transit_compartments-o"], [276, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[276, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [276, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [276, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[276, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[276, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[276, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[276, "cmdoption-pharmpy-data-append-arg-expression"], [276, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[276, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[276, "cmdoption-pharmpy-data-append-arg-file"], [276, "cmdoption-pharmpy-data-deidentify-arg-file"], [276, "cmdoption-pharmpy-data-filter-arg-file"], [276, "cmdoption-pharmpy-data-print-arg-file"], [276, "cmdoption-pharmpy-data-resample-arg-file"], [276, "cmdoption-pharmpy-data-write-arg-file"], [276, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [276, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [276, "cmdoption-pharmpy-model-add_iiv-arg-file"], [276, "cmdoption-pharmpy-model-add_iov-arg-file"], [276, "cmdoption-pharmpy-model-boxcox-arg-file"], [276, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [276, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [276, "cmdoption-pharmpy-model-error-arg-file"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [276, "cmdoption-pharmpy-model-john_draper-arg-file"], [276, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [276, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [276, "cmdoption-pharmpy-model-print-arg-file"], [276, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [276, "cmdoption-pharmpy-model-remove_iov-arg-file"], [276, "cmdoption-pharmpy-model-sample-arg-file"], [276, "cmdoption-pharmpy-model-tdist-arg-file"], [276, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [276, "cmdoption-pharmpy-model-update_inits-arg-file"], [276, "cmdoption-pharmpy-results-ofv-arg-file"], [276, "cmdoption-pharmpy-results-print-arg-file"], [276, "cmdoption-pharmpy-results-summary-arg-file"], [276, "cmdoption-pharmpy-run-allometry-arg-file"], [276, "cmdoption-pharmpy-run-bootstrap-arg-file"], [276, "cmdoption-pharmpy-run-covsearch-arg-file"], [276, "cmdoption-pharmpy-run-estmethod-arg-file"], [276, "cmdoption-pharmpy-run-execute-arg-file"], [276, "cmdoption-pharmpy-run-iivsearch-arg-file"], [276, "cmdoption-pharmpy-run-iovsearch-arg-file"], [276, "cmdoption-pharmpy-run-modelsearch-arg-file"], [276, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[276, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[276, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[276, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [276, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[276, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[276, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [276, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[276, "cmdoption-pharmpy-h"], [276, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[276, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[276, "cmdoption-pharmpy-data-append-arg-expression"], [276, "cmdoption-pharmpy-data-append-arg-file"], [276, "cmdoption-pharmpy-data-append-f"], [276, "cmdoption-pharmpy-data-append-h"], [276, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[276, "cmdoption-pharmpy-data-deidentify-arg-file"], [276, "cmdoption-pharmpy-data-deidentify-datecols"], [276, "cmdoption-pharmpy-data-deidentify-f"], [276, "cmdoption-pharmpy-data-deidentify-h"], [276, "cmdoption-pharmpy-data-deidentify-idcol"], [276, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[276, "cmdoption-pharmpy-data-filter-arg-expressions"], [276, "cmdoption-pharmpy-data-filter-arg-file"], [276, "cmdoption-pharmpy-data-filter-f"], [276, "cmdoption-pharmpy-data-filter-h"], [276, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[276, "cmdoption-pharmpy-data-print-arg-file"], [276, "cmdoption-pharmpy-data-print-columns"], [276, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[276, "cmdoption-pharmpy-data-resample-arg-file"], [276, "cmdoption-pharmpy-data-resample-group"], [276, "cmdoption-pharmpy-data-resample-h"], [276, "cmdoption-pharmpy-data-resample-replace"], [276, "cmdoption-pharmpy-data-resample-resamples"], [276, "cmdoption-pharmpy-data-resample-sample_size"], [276, "cmdoption-pharmpy-data-resample-seed"], [276, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[276, "cmdoption-pharmpy-data-write-arg-file"], [276, "cmdoption-pharmpy-data-write-f"], [276, "cmdoption-pharmpy-data-write-h"], [276, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[276, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[276, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[276, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [276, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [276, "cmdoption-pharmpy-model-absorption_rate-f"], [276, "cmdoption-pharmpy-model-absorption_rate-h"], [276, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[276, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [276, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [276, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [276, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [276, "cmdoption-pharmpy-model-add_cov_effect-f"], [276, "cmdoption-pharmpy-model-add_cov_effect-h"], [276, "cmdoption-pharmpy-model-add_cov_effect-o"], [276, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[276, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [276, "cmdoption-pharmpy-model-add_iiv-arg-file"], [276, "cmdoption-pharmpy-model-add_iiv-arg-param"], [276, "cmdoption-pharmpy-model-add_iiv-eta_name"], [276, "cmdoption-pharmpy-model-add_iiv-f"], [276, "cmdoption-pharmpy-model-add_iiv-h"], [276, "cmdoption-pharmpy-model-add_iiv-o"], [276, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[276, "cmdoption-pharmpy-model-add_iov-arg-file"], [276, "cmdoption-pharmpy-model-add_iov-arg-occ"], [276, "cmdoption-pharmpy-model-add_iov-eta_names"], [276, "cmdoption-pharmpy-model-add_iov-etas"], [276, "cmdoption-pharmpy-model-add_iov-f"], [276, "cmdoption-pharmpy-model-add_iov-h"], [276, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[276, "cmdoption-pharmpy-model-boxcox-arg-file"], [276, "cmdoption-pharmpy-model-boxcox-etas"], [276, "cmdoption-pharmpy-model-boxcox-f"], [276, "cmdoption-pharmpy-model-boxcox-h"], [276, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[276, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [276, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [276, "cmdoption-pharmpy-model-create_joint_distribution-f"], [276, "cmdoption-pharmpy-model-create_joint_distribution-h"], [276, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[276, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [276, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [276, "cmdoption-pharmpy-model-elimination_rate-f"], [276, "cmdoption-pharmpy-model-elimination_rate-h"], [276, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[276, "cmdoption-pharmpy-model-error-arg-error_type"], [276, "cmdoption-pharmpy-model-error-arg-file"], [276, "cmdoption-pharmpy-model-error-f"], [276, "cmdoption-pharmpy-model-error-h"], [276, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[276, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [276, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[276, "cmdoption-pharmpy-model-john_draper-arg-file"], [276, "cmdoption-pharmpy-model-john_draper-etas"], [276, "cmdoption-pharmpy-model-john_draper-f"], [276, "cmdoption-pharmpy-model-john_draper-h"], [276, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[276, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [276, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [276, "cmdoption-pharmpy-model-peripheral_compartments-f"], [276, "cmdoption-pharmpy-model-peripheral_compartments-h"], [276, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[276, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [276, "cmdoption-pharmpy-model-power_on_ruv-eps"], [276, "cmdoption-pharmpy-model-power_on_ruv-f"], [276, "cmdoption-pharmpy-model-power_on_ruv-h"], [276, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[276, "cmdoption-pharmpy-model-print-arg-file"], [276, "cmdoption-pharmpy-model-print-explicit-odes"], [276, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[276, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [276, "cmdoption-pharmpy-model-remove_iiv-f"], [276, "cmdoption-pharmpy-model-remove_iiv-h"], [276, "cmdoption-pharmpy-model-remove_iiv-o"], [276, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[276, "cmdoption-pharmpy-model-remove_iov-arg-file"], [276, "cmdoption-pharmpy-model-remove_iov-f"], [276, "cmdoption-pharmpy-model-remove_iov-h"], [276, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[276, "cmdoption-pharmpy-model-sample-arg-file"], [276, "cmdoption-pharmpy-model-sample-h"], [276, "cmdoption-pharmpy-model-sample-samples"], [276, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[276, "cmdoption-pharmpy-model-tdist-arg-file"], [276, "cmdoption-pharmpy-model-tdist-etas"], [276, "cmdoption-pharmpy-model-tdist-f"], [276, "cmdoption-pharmpy-model-tdist-h"], [276, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[276, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [276, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [276, "cmdoption-pharmpy-model-transit_compartments-f"], [276, "cmdoption-pharmpy-model-transit_compartments-h"], [276, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[276, "cmdoption-pharmpy-model-update_inits-arg-file"], [276, "cmdoption-pharmpy-model-update_inits-f"], [276, "cmdoption-pharmpy-model-update_inits-h"], [276, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[276, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[276, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [276, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[276, "cmdoption-pharmpy-results-cdd-arg-psn"], [276, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[276, "cmdoption-pharmpy-results-frem-arg-psn"], [276, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [276, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [276, "cmdoption-pharmpy-results-frem-h"], [276, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[276, "cmdoption-pharmpy-results-linearize-arg-psn"], [276, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[276, "cmdoption-pharmpy-results-ofv-arg-file"], [276, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[276, "cmdoption-pharmpy-results-print-arg-file"], [276, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[276, "cmdoption-pharmpy-results-qa-arg-psn"], [276, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[276, "cmdoption-pharmpy-results-report-arg-psn"], [276, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[276, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [276, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[276, "cmdoption-pharmpy-results-scm-arg-psn"], [276, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[276, "cmdoption-pharmpy-results-simeval-arg-psn"], [276, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[276, "cmdoption-pharmpy-results-summary-arg-file"], [276, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[276, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[276, "cmdoption-pharmpy-run-allometry-allometric_variable"], [276, "cmdoption-pharmpy-run-allometry-arg-file"], [276, "cmdoption-pharmpy-run-allometry-h"], [276, "cmdoption-pharmpy-run-allometry-initials"], [276, "cmdoption-pharmpy-run-allometry-lower_bounds"], [276, "cmdoption-pharmpy-run-allometry-non_fixed"], [276, "cmdoption-pharmpy-run-allometry-parameters"], [276, "cmdoption-pharmpy-run-allometry-path"], [276, "cmdoption-pharmpy-run-allometry-reference_value"], [276, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[276, "cmdoption-pharmpy-run-amd-allometric_variable"], [276, "cmdoption-pharmpy-run-amd-arg-input_path"], [276, "cmdoption-pharmpy-run-amd-cl_init"], [276, "cmdoption-pharmpy-run-amd-h"], [276, "cmdoption-pharmpy-run-amd-lloq_limit"], [276, "cmdoption-pharmpy-run-amd-lloq_method"], [276, "cmdoption-pharmpy-run-amd-mat_init"], [276, "cmdoption-pharmpy-run-amd-modeltype"], [276, "cmdoption-pharmpy-run-amd-occasion"], [276, "cmdoption-pharmpy-run-amd-order"], [276, "cmdoption-pharmpy-run-amd-path"], [276, "cmdoption-pharmpy-run-amd-resume"], [276, "cmdoption-pharmpy-run-amd-search_space"], [276, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[276, "cmdoption-pharmpy-run-bootstrap-arg-file"], [276, "cmdoption-pharmpy-run-bootstrap-h"], [276, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[276, "cmdoption-pharmpy-run-covsearch-algorithm"], [276, "cmdoption-pharmpy-run-covsearch-arg-file"], [276, "cmdoption-pharmpy-run-covsearch-effects"], [276, "cmdoption-pharmpy-run-covsearch-h"], [276, "cmdoption-pharmpy-run-covsearch-max_steps"], [276, "cmdoption-pharmpy-run-covsearch-p_backward"], [276, "cmdoption-pharmpy-run-covsearch-p_forward"], [276, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[276, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [276, "cmdoption-pharmpy-run-estmethod-arg-file"], [276, "cmdoption-pharmpy-run-estmethod-h"], [276, "cmdoption-pharmpy-run-estmethod-methods"], [276, "cmdoption-pharmpy-run-estmethod-path"], [276, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[276, "cmdoption-pharmpy-run-execute-arg-file"], [276, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[276, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [276, "cmdoption-pharmpy-run-iivsearch-arg-file"], [276, "cmdoption-pharmpy-run-iivsearch-cutoff"], [276, "cmdoption-pharmpy-run-iivsearch-h"], [276, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [276, "cmdoption-pharmpy-run-iivsearch-path"], [276, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[276, "cmdoption-pharmpy-run-iovsearch-arg-file"], [276, "cmdoption-pharmpy-run-iovsearch-column"], [276, "cmdoption-pharmpy-run-iovsearch-cutoff"], [276, "cmdoption-pharmpy-run-iovsearch-distribution"], [276, "cmdoption-pharmpy-run-iovsearch-h"], [276, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [276, "cmdoption-pharmpy-run-iovsearch-path"], [276, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[276, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [276, "cmdoption-pharmpy-run-modelsearch-arg-file"], [276, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [276, "cmdoption-pharmpy-run-modelsearch-cutoff"], [276, "cmdoption-pharmpy-run-modelsearch-h"], [276, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [276, "cmdoption-pharmpy-run-modelsearch-path"], [276, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[276, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [276, "cmdoption-pharmpy-run-ruvsearch-groups"], [276, "cmdoption-pharmpy-run-ruvsearch-h"], [276, "cmdoption-pharmpy-run-ruvsearch-p_value"], [276, "cmdoption-pharmpy-run-ruvsearch-path"], [276, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[276, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [276, "cmdoption-pharmpy-results-cdd-arg-psn"], [276, "cmdoption-pharmpy-results-frem-arg-psn"], [276, "cmdoption-pharmpy-results-linearize-arg-psn"], [276, "cmdoption-pharmpy-results-qa-arg-psn"], [276, "cmdoption-pharmpy-results-report-arg-psn"], [276, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [276, "cmdoption-pharmpy-results-scm-arg-psn"], [276, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[276, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [276, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})