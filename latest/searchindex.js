Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.ODESystem", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.Results", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_covariance_step", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_inf", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_inf", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_inf_from_corrse", "api/pharmpy.modeling.calculate_inf_from_cov", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_inf", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_covariance_step", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_bolus_absorption", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.ODESystem.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.Results.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_covariance_step.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_inf.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_inf.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_inf_from_corrse.rst", "api/pharmpy.modeling.calculate_inf_from_cov.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_inf.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_covariance_step.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_bolus_absorption.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "ODESystem", "Parameter", "Parameters", "RandomVariables", "Results", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_allometry", "add_covariance_step", "add_covariate_effect", "add_estimation_step", "add_iiv", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_inf", "calculate_cov_from_corrse", "calculate_cov_from_inf", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_inf_from_corrse", "calculate_inf_from_cov", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_se_from_cov", "calculate_se_from_inf", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_observation_expression", "get_observations", "get_omegas", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_elimination", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_proportional_error_model", "has_random_effect", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_covariance_step", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_bolus_absorption", "set_combined_error_model", "set_covariates", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_seq_zo_fo_absorption", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "NullModelDatabase", "NullToolDatabase", "Task", "ToolDatabase", "Workflow", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Reading modelfit results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 10, 15, 18, 24, 25, 26, 29, 31, 54, 55, 69, 74, 78, 79, 80, 81, 83, 84, 85, 86, 94, 101, 104, 110, 111, 112, 113, 117, 121, 127, 130, 131, 137, 155, 168, 170, 188, 199, 205, 211, 235, 240, 244, 248, 249, 250, 264, 265, 267, 268, 269, 270, 272, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 299, 300, 301], "section": [0, 269, 272, 283, 295, 299], "i": [0, 1, 2, 3, 6, 8, 18, 24, 25, 26, 27, 29, 31, 33, 35, 36, 37, 39, 40, 42, 43, 47, 49, 56, 57, 66, 68, 69, 70, 73, 74, 76, 78, 80, 81, 83, 84, 85, 92, 94, 97, 100, 101, 105, 109, 110, 111, 112, 123, 124, 125, 128, 129, 133, 138, 139, 143, 144, 157, 158, 160, 164, 165, 166, 168, 169, 172, 173, 174, 175, 176, 178, 179, 182, 183, 187, 188, 189, 190, 192, 195, 196, 197, 200, 202, 203, 204, 211, 213, 214, 218, 220, 222, 228, 229, 233, 234, 235, 236, 242, 244, 248, 249, 250, 254, 263, 264, 265, 267, 268, 269, 270, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 301], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 220, 244, 245, 246, 247, 248, 249, 250, 252, 265, 280, 283, 287, 291, 292, 296, 299], "The": [0, 2, 3, 6, 8, 9, 10, 18, 24, 25, 26, 29, 33, 35, 39, 41, 42, 57, 65, 73, 76, 80, 81, 82, 83, 84, 85, 103, 116, 121, 124, 125, 133, 134, 135, 150, 164, 168, 170, 179, 188, 197, 215, 225, 231, 232, 237, 240, 265, 268, 270, 272, 274, 279, 282, 283, 286, 289, 291, 292, 299, 300, 301], "inform": [0, 1, 2, 6, 8, 50, 51, 52, 53, 59, 60, 63, 64, 121, 265, 267, 272, 275, 277, 280, 281, 282, 283, 287, 288, 292, 296, 297, 299, 300], "intend": [0, 283, 299], "non": [0, 25, 68, 73, 82, 200, 265, 274, 275, 278, 283, 285, 292, 299], "hard": [0, 292], "find": [0, 8, 29, 47, 87, 88, 121, 227, 242, 265, 269, 281, 283, 300, 301], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 270, 272, 274, 277, 279, 280, 282, 283, 285, 286, 287, 288, 296], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 269, 271, 272, 273, 277, 278, 279, 280, 282, 283, 284, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 300], "develop": [0, 229, 265, 283, 291, 292, 299, 301], "remov": [0, 2, 9, 26, 29, 78, 110, 111, 112, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 179, 181, 193, 206, 208, 229, 264, 265, 267, 272, 275, 280, 282, 283, 289, 300], "row": [0, 1, 2, 25, 80, 81, 92, 95, 97, 165, 166, 241, 263, 265, 267, 272, 274, 278, 280, 282, 286, 288, 296, 297], "split": [0, 73, 200, 258, 265, 267, 287, 299], "drop": [0, 2, 6, 18, 78, 79, 207, 265, 288, 292, 297], "column": [0, 1, 2, 6, 8, 10, 18, 25, 31, 39, 45, 57, 76, 78, 79, 80, 81, 82, 86, 94, 95, 97, 101, 144, 145, 149, 164, 165, 171, 173, 190, 201, 205, 207, 218, 219, 220, 229, 234, 240, 241, 263, 265, 267, 272, 274, 278, 280, 282, 285, 286, 287, 288, 296, 297, 299], "error": [0, 2, 11, 19, 20, 24, 26, 29, 50, 51, 52, 53, 57, 59, 60, 62, 63, 64, 119, 124, 125, 133, 135, 148, 155, 168, 170, 187, 188, 190, 194, 201, 212, 222, 239, 242, 247, 263, 265, 272, 277, 280, 282, 285, 288, 289, 296, 297, 299, 300], "handl": [0, 3, 86, 199, 265, 274, 275, 278, 292], "valid": [0, 26, 100, 265, 283, 287], "some": [0, 8, 10, 62, 73, 155, 168, 201, 246, 263, 265, 267, 270, 272, 274, 283, 284, 285, 287, 288, 291, 292, 296, 299], "rule": [0, 66, 283], "These": [0, 270, 275, 278, 283, 284, 287, 291, 292, 299], "were": [0, 26, 29, 239, 263, 264, 265, 274, 277, 278, 283, 288, 299, 301], "test": [0, 2, 126, 139, 231, 232, 234, 236, 237, 265, 267, 271, 272, 277, 279, 280, 282, 286, 288, 292, 296], "7": [0, 1, 2, 35, 50, 52, 53, 58, 60, 63, 81, 92, 97, 112, 114, 220, 263, 264, 272, 274, 278, 280, 282, 283, 284, 285, 286, 288, 293, 295, 296, 297, 298], "4": [0, 1, 2, 6, 50, 52, 53, 58, 60, 63, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 112, 204, 220, 237, 242, 263, 264, 272, 273, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 293, 295, 296, 297, 298], "3": [0, 1, 2, 6, 29, 50, 51, 52, 53, 58, 59, 60, 63, 64, 67, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 99, 102, 112, 114, 148, 161, 165, 166, 167, 192, 201, 202, 203, 204, 218, 219, 220, 241, 263, 264, 272, 273, 274, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 293, 295, 296, 297, 298, 299, 301], "delimet": 0, "between": [0, 8, 9, 26, 73, 201, 240, 254, 263, 264, 265, 267, 277, 278, 282, 283, 289, 292, 295, 296, 300], "comma": [0, 267, 299], "space": [0, 65, 229, 236, 265, 267, 299], "tab": [0, 148, 265, 290], "befor": [0, 2, 29, 166, 167, 210, 265, 267, 284, 288], "after": [0, 6, 29, 110, 111, 112, 190, 227, 239, 242, 246, 264, 265, 267, 273, 278, 283, 284, 285, 288, 292, 293, 295, 297, 298, 301], "ar": [0, 2, 3, 4, 6, 8, 25, 26, 29, 36, 37, 39, 43, 57, 71, 73, 76, 95, 109, 124, 125, 133, 141, 157, 158, 162, 170, 174, 175, 187, 200, 201, 205, 211, 222, 231, 233, 235, 236, 244, 246, 263, 265, 267, 268, 270, 272, 274, 275, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 297, 299, 301], "give": [0, 25, 109, 143, 167, 244, 248, 249, 263, 265, 267, 278, 282, 283, 297], "sic": 0, "begin": [0, 278, 285, 287], "end": [0, 36, 47, 278, 283, 285, 287, 299], "insert": [0, 265], "each": [0, 2, 6, 8, 26, 33, 35, 56, 57, 58, 80, 81, 82, 83, 84, 85, 92, 97, 98, 112, 142, 145, 146, 164, 167, 178, 246, 263, 264, 267, 269, 272, 274, 275, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 295, 296, 297, 298, 299, 301], "can": [0, 1, 2, 6, 10, 18, 25, 26, 29, 49, 57, 65, 74, 82, 121, 164, 199, 227, 232, 235, 246, 249, 250, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 295, 296, 299, 300, 301], "onli": [0, 2, 3, 8, 10, 14, 26, 35, 54, 55, 66, 69, 78, 80, 81, 83, 84, 85, 100, 104, 113, 117, 124, 125, 133, 142, 164, 168, 170, 188, 199, 201, 210, 235, 242, 254, 265, 267, 268, 272, 282, 283, 285, 287, 288, 291, 299], "numer": [0, 6, 14, 30, 80, 81, 83, 84, 263, 265, 274, 285, 292], "e": [0, 6, 18, 26, 69, 75, 110, 111, 112, 143, 158, 172, 236, 263, 265, 270, 274, 277, 278, 280, 282, 283, 285, 287, 288, 289, 292, 296, 299], "other": [0, 7, 9, 18, 26, 29, 41, 70, 146, 235, 258, 263, 265, 268, 270, 275, 280, 283, 292], "charact": [0, 10, 274], "than": [0, 24, 25, 265, 280, 283, 288], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 26, 35, 222, 229, 244, 245, 248, 249, 257, 265, 267, 272, 283, 288, 292, 299], "except": [0, 11, 12, 19, 20, 21, 37, 57, 164, 265, 283], "ii": [0, 6], "datx": [0, 265], "fortran": 0, "short": [0, 270, 283], "form": [0, 23, 26, 164, 265, 283], "exponenti": [0, 35, 37, 43, 178, 267, 272, 278, 287], "notat": 0, "2": [0, 1, 2, 6, 18, 29, 33, 35, 36, 40, 42, 44, 46, 48, 50, 51, 52, 53, 58, 59, 60, 63, 64, 68, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 102, 112, 114, 148, 161, 165, 166, 167, 168, 170, 176, 180, 182, 183, 186, 188, 189, 192, 195, 203, 204, 220, 228, 240, 263, 264, 267, 270, 272, 273, 274, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 293, 295, 296, 297, 298, 299], "1": [0, 1, 2, 5, 6, 7, 8, 16, 17, 18, 22, 25, 26, 29, 33, 35, 36, 41, 42, 44, 50, 51, 52, 53, 58, 59, 60, 61, 63, 64, 69, 71, 76, 80, 81, 82, 83, 84, 85, 92, 95, 97, 98, 99, 100, 102, 112, 114, 120, 123, 141, 142, 143, 144, 148, 152, 161, 164, 165, 166, 167, 169, 175, 176, 177, 178, 182, 183, 186, 187, 189, 190, 192, 195, 196, 199, 201, 202, 203, 204, 211, 220, 228, 229, 230, 231, 236, 240, 263, 264, 267, 269, 270, 272, 273, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 299, 301], "mean": [0, 2, 13, 17, 18, 22, 57, 62, 71, 143, 165, 166, 229, 244, 248, 263, 264, 265, 267, 278, 280, 283, 285, 286, 287, 288, 292, 295, 298, 299], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 24, 25, 26, 29, 31, 57, 61, 62, 65, 76, 77, 82, 87, 88, 103, 109, 115, 116, 118, 119, 120, 121, 144, 145, 150, 164, 165, 166, 168, 170, 180, 181, 188, 190, 193, 226, 235, 237, 239, 242, 244, 248, 249, 254, 263, 264, 266, 267, 270, 271, 272, 274, 275, 280, 282, 283, 284, 285, 287, 288, 291, 292, 296, 297, 299], "d": [0, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 77, 245, 247, 258, 283], "instead": [0, 66, 82, 109, 244, 264, 265, 267, 274, 275, 277, 278, 283, 287, 292], "lone": 0, "an": [0, 4, 6, 8, 10, 15, 16, 18, 25, 26, 29, 32, 33, 38, 39, 46, 51, 53, 64, 65, 98, 101, 124, 125, 126, 128, 129, 132, 133, 135, 139, 141, 143, 154, 164, 168, 179, 203, 215, 218, 219, 220, 239, 240, 242, 245, 247, 265, 267, 269, 270, 272, 274, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 292, 295, 297, 298, 299, 301], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 42, 43, 44, 46, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 74, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 97, 98, 99, 105, 114, 115, 119, 120, 122, 123, 141, 142, 143, 148, 152, 153, 156, 161, 165, 166, 167, 170, 172, 174, 175, 178, 179, 180, 181, 187, 188, 190, 193, 200, 201, 202, 203, 206, 209, 211, 219, 220, 228, 229, 231, 237, 241, 242, 263, 264, 267, 270, 272, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 293, 295, 296, 297, 298, 299, 301], "dot": 0, "most": [0, 6, 35, 199, 267, 275, 283, 287, 295], "24": [0, 2, 58, 92, 97, 99, 112, 114, 220, 263, 264, 272, 274, 277, 280, 282, 284, 286, 288, 295, 296, 298], "long": [0, 265, 283, 292], "count": [0, 98, 241, 248, 265, 288], "delimit": 0, "wa": [0, 27, 211, 240, 263, 265, 271, 283, 284, 296, 297], "eaten": 0, "empti": [0, 18, 26, 239, 269, 287], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 26, 27, 29, 40, 47, 66, 73, 78, 89, 90, 91, 105, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 206, 208, 209, 210, 211, 265, 267, 268, 269, 274, 277, 280, 281, 282, 288, 289, 299, 300, 301], "As": [0, 26, 268, 287, 289, 299], "contain": [0, 2, 3, 26, 76, 82, 218, 219, 220, 263, 264, 267, 272, 273, 274, 275, 277, 280, 282, 283, 286, 287, 288, 293, 295, 296, 297, 298, 299], "drope": 0, "input": [0, 7, 8, 9, 10, 26, 29, 35, 37, 39, 63, 64, 74, 79, 122, 126, 134, 148, 152, 166, 178, 197, 229, 240, 251, 265, 267, 272, 274, 277, 280, 282, 285, 287, 288, 289, 292, 296], "ani": [0, 2, 6, 9, 18, 46, 57, 68, 162, 227, 232, 241, 251, 254, 270, 274, 280, 282, 283, 285, 287, 289, 292, 299, 301], "limit": [0, 2, 6, 67, 160, 187, 201, 229, 265, 267, 282, 283, 290], "length": [0, 82, 83, 84, 85, 98, 99, 114, 265, 274], "If": [0, 2, 10, 18, 29, 35, 47, 57, 72, 73, 74, 82, 94, 98, 100, 101, 157, 158, 164, 166, 178, 179, 187, 197, 200, 202, 203, 204, 205, 211, 222, 229, 233, 236, 242, 263, 267, 272, 274, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 299, 301], "ha": [0, 2, 8, 18, 26, 73, 82, 92, 97, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 263, 265, 267, 268, 270, 272, 274, 275, 277, 280, 282, 283, 285, 287, 288, 294, 296, 297, 299, 301], "more": [0, 2, 8, 25, 228, 231, 233, 234, 236, 237, 265, 267, 272, 277, 279, 281, 283, 285, 287, 288, 292, 295, 299, 300], "extra": [0, 265], "consid": [0, 2, 233, 234, 236, 265, 272, 275, 277, 280, 282, 283, 288, 296], "start": [0, 2, 8, 36, 46, 98, 144, 156, 164, 233, 265, 267, 270, 272, 274, 277, 278, 282, 283, 287, 288, 296, 297, 299, 301], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 254, 263, 265, 267, 268, 270, 272, 275, 277, 278, 279, 280, 282, 283, 285, 286, 288, 289, 290, 292, 296, 298, 299, 300, 301], "been": [0, 2, 6, 138, 268, 272, 274, 283, 285, 287, 299, 301], "provid": [0, 26, 166, 187, 267, 268, 271, 272, 274, 280, 282, 283, 287, 288, 301], "default": [0, 1, 2, 6, 7, 18, 24, 26, 31, 33, 35, 36, 37, 43, 47, 49, 56, 73, 74, 78, 100, 103, 105, 109, 116, 123, 124, 125, 133, 134, 157, 158, 160, 164, 165, 166, 168, 170, 174, 175, 178, 179, 187, 188, 190, 200, 202, 203, 204, 213, 214, 217, 222, 228, 233, 234, 236, 242, 244, 248, 249, 257, 262, 265, 267, 269, 272, 280, 282, 285, 287, 288, 289, 290, 296, 301], "where": [0, 2, 33, 42, 227, 263, 264, 265, 268, 269, 272, 274, 277, 278, 282, 283, 287, 288, 289, 292, 299, 301], "rexex": 0, "": [0, 10, 65, 152, 265, 267, 272, 274, 278, 283, 289, 293], "za": 0, "z": [0, 33], "either": [0, 2, 37, 76, 100, 229, 267, 280, 283, 285, 287, 299, 301], "surround": 0, "two": [0, 8, 9, 26, 29, 76, 146, 263, 265, 266, 267, 283, 292, 296, 299], "By": [0, 18, 26, 124, 125, 133, 282, 283, 285], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 26, 29, 47, 65, 144, 154, 165, 201, 215, 233, 234, 235, 236, 248, 263, 264, 265, 267, 272, 277, 280, 282, 283, 285, 286, 287, 288, 289, 290, 292, 296, 297, 299, 301], "interpret": [0, 265, 283], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 25, 26, 27, 29, 33, 39, 49, 57, 65, 73, 74, 76, 80, 81, 82, 83, 84, 85, 109, 123, 143, 144, 162, 164, 165, 166, 167, 168, 170, 176, 178, 185, 187, 188, 194, 201, 205, 210, 212, 213, 217, 218, 219, 220, 222, 228, 229, 231, 232, 233, 234, 235, 236, 237, 244, 245, 246, 248, 249, 250, 252, 257, 263, 264, 265, 267, 269, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 295, 296, 297, 299, 300], "chang": [0, 2, 9, 18, 25, 26, 36, 76, 169, 174, 176, 180, 181, 189, 193, 195, 209, 267, 270, 283, 285, 287, 288, 289, 296, 301], "howev": [0, 280, 283, 287, 289, 299, 301], "one": [0, 2, 6, 8, 9, 10, 14, 22, 24, 25, 26, 35, 69, 78, 82, 90, 124, 125, 133, 149, 164, 166, 173, 178, 194, 205, 207, 208, 212, 217, 235, 239, 241, 244, 248, 249, 252, 265, 267, 268, 270, 274, 275, 277, 278, 282, 283, 285, 287, 288, 289, 292, 299], "legal": [0, 283], "ones": [0, 272, 278], "9": [0, 2, 6, 42, 58, 67, 81, 84, 92, 95, 97, 112, 114, 211, 220, 263, 264, 272, 274, 279, 280, 282, 283, 284, 286, 287, 288, 295, 296, 297, 298, 301], "sinc": [0, 6, 179, 265, 275, 278, 280, 287, 288, 289, 292, 301], "number": [0, 2, 6, 8, 14, 22, 24, 39, 47, 57, 62, 68, 74, 75, 76, 110, 111, 112, 114, 144, 164, 165, 166, 167, 168, 178, 186, 192, 230, 231, 235, 237, 240, 241, 263, 265, 267, 272, 274, 283, 295, 296, 297, 299, 301], "valu": [0, 1, 6, 10, 18, 24, 25, 26, 33, 37, 43, 44, 57, 61, 62, 67, 68, 80, 81, 82, 83, 84, 85, 89, 91, 92, 95, 97, 115, 119, 120, 139, 164, 167, 190, 209, 222, 228, 231, 233, 234, 236, 237, 242, 262, 263, 265, 267, 270, 272, 274, 277, 284, 285, 287, 296, 297, 298], "met": [0, 283], "doubl": 0, "big": 0, "warn": [0, 2, 12, 239, 247, 265, 272, 277, 280, 282, 288, 301], "larger": [0, 283], "pad": 0, "filter": [0, 110, 111, 112, 265, 274], "so": [0, 24, 164, 246, 268, 270, 275, 283, 289, 295, 301], "characterscannot": 0, "neither": [0, 283], "perform": [0, 14, 69, 76, 267, 272, 283, 285, 288, 289], "order": [0, 8, 9, 26, 29, 122, 127, 131, 136, 137, 164, 176, 177, 183, 189, 195, 196, 197, 229, 265, 267, 274, 283, 285, 288, 292, 299], "given": [0, 2, 26, 36, 71, 75, 80, 81, 83, 84, 85, 90, 91, 116, 118, 126, 134, 139, 150, 157, 158, 165, 166, 167, 190, 198, 201, 208, 209, 216, 222, 244, 246, 248, 249, 265, 267, 270, 272, 274, 277, 278, 280, 282, 283, 288, 289, 295, 296], "critic": [0, 268], "case": [0, 2, 73, 86, 124, 125, 133, 164, 242, 265, 272, 279, 280, 282, 283, 285, 287, 288, 294, 300], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 26, 29, 93, 94, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 122, 140, 241, 265, 274, 278, 282, 283, 286, 292, 300, 301], "need": [0, 2, 18, 37, 69, 86, 121, 265, 267, 270, 271, 275, 278, 279, 283, 285, 287, 291, 292, 301], "becaus": [0, 8, 265, 283, 287], "later": [0, 279, 283], "comparison": [0, 288, 292], "It": [0, 18, 244, 268, 269, 270, 274, 275, 279, 280, 281, 283, 285, 286, 287, 290, 295, 299, 301], "possibl": [0, 2, 6, 26, 127, 130, 131, 137, 199, 233, 236, 265, 269, 270, 274, 280, 283, 286, 287, 288, 289, 290, 292, 295, 299, 301], "done": [0, 1, 69, 70, 76, 80, 81, 83, 84, 85, 164, 268, 285, 287, 288, 290, 296], "eq": [0, 8, 32, 287], "ne": 0, "text": [0, 18, 35, 285, 292], "otherwis": [0, 6, 18, 29, 33, 35, 37, 40, 69, 73, 94, 101, 123, 124, 125, 133, 135, 138, 141, 142, 143, 164, 176, 187, 188, 189, 190, 192, 195, 201, 268, 274, 283, 285, 292], "appropri": [0, 18, 268, 283], "letter": [0, 123], "alphanum": 0, "underscor": 0, "real": [0, 129, 139, 274, 275], "special": [0, 6, 205, 274, 275, 283], "digit": [0, 68, 265], "enclos": 0, "ok": [0, 275], "w": [0, 29, 69, 123, 141, 148, 149, 155, 168, 178, 188, 190, 194, 201, 212, 272, 283, 285, 287], "o": [0, 264, 266, 267, 271, 296], "With": [0, 299], "eqn": 0, "ge": 0, "etc": [0, 3, 265, 287, 289, 297, 299], "maximum": [0, 14, 35, 68, 231, 267, 272], "have": [0, 6, 8, 18, 26, 29, 35, 37, 76, 136, 205, 234, 241, 246, 248, 265, 267, 269, 270, 272, 274, 275, 277, 279, 280, 282, 283, 285, 287, 288, 289, 290, 292, 299, 301], "12": [0, 1, 2, 58, 92, 95, 97, 98, 99, 112, 220, 263, 264, 272, 274, 277, 278, 280, 282, 283, 284, 286, 288, 293, 295, 296, 297, 298], "must": [0, 24, 39, 73, 164, 178, 244, 264, 267, 283, 285, 287], "decreas": [0, 275], "within": [0, 164, 268, 283, 299], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 26, 29, 187, 263, 268, 270, 272, 275, 283, 289, 301], "affect": [0, 109, 265, 283, 289], "even": [0, 24, 75, 79, 92, 97, 269, 283, 289], "still": [0, 283, 289, 301], "cannot": [0, 8, 57, 73, 243, 265, 274, 283, 287, 299], "both": [0, 1, 2, 18, 39, 172, 241, 265, 268, 272, 274, 277, 280, 282, 283, 288, 296, 299], "reenter": 0, "think": 0, "risk": [0, 283], "being": [0, 6, 26, 41, 57, 167, 168, 170, 188, 264, 265, 269, 277, 278, 283, 289, 292, 297], "truncat": 0, "encod": [0, 194, 212, 265, 274, 290], "here": [0, 2, 109, 274, 275, 276, 280, 285, 287, 288, 292, 299, 300], "possibli": [0, 292], "partial": [0, 267, 271, 281, 292], "list": [0, 2, 6, 8, 10, 13, 14, 17, 25, 26, 29, 32, 33, 37, 39, 73, 76, 78, 79, 87, 88, 90, 91, 102, 103, 109, 116, 118, 140, 145, 157, 158, 164, 165, 171, 178, 187, 200, 202, 203, 204, 206, 207, 208, 209, 217, 222, 227, 228, 229, 232, 234, 235, 237, 239, 240, 241, 242, 253, 263, 264, 265, 267, 268, 270, 272, 274, 277, 282, 283, 285, 287, 295, 296, 297, 299], "decid": [0, 2, 134, 280, 282, 283, 288, 296], "whether": [0, 24, 33, 35, 37, 73, 126, 134, 164, 178, 218, 220, 229, 242, 245, 257, 265, 267, 280, 283, 287, 288, 299], "put": [0, 144, 164, 265, 275, 278], "up": [0, 268, 272, 301], "written": [0, 265, 283, 285, 289, 299], "scientif": [0, 275], "14": [0, 2, 58, 81, 92, 97, 112, 220, 263, 264, 272, 274, 280, 282, 283, 284, 286, 295, 297, 298], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 18, 98, 179, 263, 287], "describ": [0, 2, 26, 29, 57, 127, 130, 131, 136, 137, 263, 272, 274, 280, 282, 285], "output": [0, 8, 18, 241, 265, 267, 270, 283, 285, 299], "alwai": [0, 166, 265, 274, 288], "synonym": [0, 265], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 24, 25, 26, 30, 31, 32, 35, 37, 38, 39, 44, 47, 57, 68, 70, 73, 75, 76, 78, 83, 84, 85, 90, 93, 98, 99, 103, 106, 109, 112, 114, 116, 118, 123, 124, 125, 126, 133, 140, 141, 144, 146, 154, 157, 158, 163, 164, 168, 170, 171, 173, 178, 179, 184, 187, 188, 197, 200, 202, 203, 204, 207, 208, 222, 227, 228, 229, 234, 238, 239, 242, 244, 245, 246, 248, 249, 251, 252, 253, 254, 262, 264, 265, 267, 269, 272, 274, 280, 282, 283, 286, 287, 288, 291, 296, 297, 299, 300], "avail": [0, 1, 2, 6, 33, 40, 57, 121, 141, 176, 189, 192, 195, 201, 222, 229, 263, 267, 269, 272, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 292, 296, 298, 299, 301], "carri": [0, 283], "over": [0, 114, 144, 164, 190, 218, 219, 220, 263, 264, 278, 282, 299], "onc": [0, 142, 272, 289], "covari": [0, 6, 10, 17, 26, 34, 35, 50, 51, 52, 53, 57, 58, 59, 60, 62, 63, 64, 73, 97, 109, 126, 140, 148, 153, 154, 165, 166, 167, 171, 201, 231, 265, 267, 272, 274, 275, 282, 285, 292, 297, 299, 300], "final": [0, 2, 34, 153, 226, 265, 272, 277, 278, 280, 282, 283, 288, 289, 296, 297], "estim": [0, 1, 2, 14, 15, 18, 24, 25, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 56, 57, 58, 62, 67, 68, 71, 73, 82, 89, 90, 91, 146, 147, 148, 152, 153, 156, 161, 165, 166, 167, 168, 170, 174, 175, 176, 180, 182, 183, 187, 188, 189, 192, 194, 195, 196, 202, 203, 204, 208, 209, 210, 211, 212, 217, 228, 229, 232, 242, 263, 264, 265, 267, 272, 273, 275, 277, 280, 281, 282, 284, 288, 291, 292, 295, 296, 299, 300], "oppos": 0, "ext": [0, 265, 299], "per": [0, 6, 14, 25, 69, 110, 111, 112, 114, 165, 166, 190, 241], "est": [0, 34, 36, 46, 153, 156], "first": [0, 2, 18, 26, 35, 40, 75, 92, 97, 100, 124, 125, 127, 131, 133, 146, 168, 170, 174, 176, 177, 183, 188, 189, 192, 195, 265, 267, 272, 278, 280, 282, 283, 289, 292, 299, 301], "call": [0, 18, 241, 254, 265, 269, 270, 283, 289, 301], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 264, 265, 267, 272, 277, 280, 282, 288, 292, 293, 295, 296, 297, 299, 300], "theta": [0, 1, 29, 33, 35, 115, 119, 120, 148, 149, 152, 187, 194, 212, 265, 280, 285, 288, 289, 292, 296], "sigma": [0, 1, 115, 119, 120, 148, 149, 152, 168, 170, 188, 263, 278, 280, 285, 287, 288, 289], "omega": [0, 1, 22, 26, 58, 115, 119, 120, 148, 149, 152, 265, 267, 278, 280, 285, 287, 288, 289, 295, 296], "fix": [0, 1, 2, 24, 25, 33, 44, 49, 73, 89, 90, 91, 115, 119, 120, 172, 180, 181, 193, 200, 206, 208, 209, 228, 267, 280, 283, 285, 292, 299], "offdiagon": 0, "could": [0, 18, 265, 274, 283, 287, 291, 292], "part": [0, 18, 26, 75, 263, 265, 267, 270, 271, 283, 285, 289, 292, 299], "NO": [0, 283], "probabl": 0, "same": [0, 2, 8, 10, 18, 26, 29, 39, 47, 68, 69, 89, 90, 91, 98, 136, 178, 180, 208, 209, 213, 229, 234, 244, 246, 248, 264, 265, 267, 268, 272, 274, 277, 278, 282, 283, 285, 287, 288, 299, 301], "type": [0, 2, 6, 8, 10, 18, 28, 29, 35, 49, 71, 116, 145, 150, 191, 222, 229, 233, 234, 236, 262, 265, 267, 270, 272, 278, 279, 280, 282, 283, 285, 287, 288, 292], "now": [0, 265, 270, 287, 289], "investig": 0, "follow": [0, 2, 35, 143, 200, 263, 265, 267, 268, 270, 272, 274, 275, 277, 279, 280, 282, 283, 285, 287, 288, 289, 291, 299, 301], "like": [0, 18, 26, 283, 287, 289, 292, 299], "One": [0, 26, 144, 145, 251, 292, 301], "last": [0, 29, 175, 242], "left": [0, 4, 57, 285, 287, 291], "justifi": 0, "size": [0, 6, 13, 164, 265, 268, 287, 292], "13": [0, 1, 2, 58, 92, 95, 97, 98, 112, 220, 263, 264, 272, 274, 277, 280, 282, 283, 284, 286, 288, 293, 295, 297, 298], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 248, 249, 252, 262, 263, 264, 265, 266, 268, 269, 270, 272, 277, 278, 279, 281, 282, 283, 284, 286, 291, 292, 295, 297, 298, 300, 301], "n": [0, 6, 17, 22, 26, 42, 73, 76, 161, 166, 167, 186, 192, 200, 203, 235, 263, 264, 265, 267, 278, 280, 285, 287], "flatten": [0, 265], "triangular": 0, "correl": [0, 50, 51, 52, 53, 59, 60, 63, 64, 67, 73, 211, 265, 295], "abov": [0, 33, 35, 37, 67, 263, 264, 272, 278, 283, 301], "off": 0, "diagon": [0, 148, 265, 280, 285, 286, 288], "obj": [0, 18], "right": [0, 4, 8, 283, 285, 287, 301], "also": [0, 2, 26, 79, 164, 265, 269, 270, 272, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 292, 296, 299, 301], "22": [0, 2, 58, 80, 81, 83, 84, 92, 97, 112, 114, 220, 263, 264, 272, 274, 278, 282, 284, 286, 298], "integ": [0, 6, 123, 265, 267, 299], "5": [0, 1, 2, 29, 33, 50, 52, 53, 57, 58, 60, 63, 69, 81, 82, 91, 92, 95, 97, 99, 112, 114, 123, 141, 142, 143, 148, 201, 204, 209, 220, 240, 241, 263, 264, 272, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 293, 295, 297, 298], "expon": [0, 1, 33, 228, 267], "regular": [0, 10, 281], "take": [0, 2, 24, 26, 74, 265, 268, 274, 277, 280, 282, 283, 287, 288, 292], "19": [0, 2, 58, 81, 92, 97, 112, 220, 263, 264, 274, 280, 284, 286, 287, 295, 297, 298], "posit": [0, 26, 166, 167, 265, 267, 268, 275], "neg": [0, 299], "For": [0, 2, 8, 35, 37, 110, 111, 112, 143, 205, 228, 231, 233, 234, 236, 237, 263, 264, 267, 269, 270, 272, 277, 278, 279, 283, 285, 287, 288, 289, 292, 299, 301], "20": [0, 2, 58, 84, 92, 97, 112, 220, 263, 264, 272, 274, 283, 284, 286, 293, 295, 296, 297, 298], "In": [0, 73, 86, 268, 270, 272, 280, 282, 283, 285, 287, 292, 299, 301], "observ": [0, 6, 18, 40, 98, 110, 111, 112, 113, 114, 176, 189, 192, 195, 196, 240, 241, 263, 265, 278, 292, 295, 298, 300], "byte": 0, "evid": [0, 101, 265], "toward": [0, 98, 265], "token": [0, 299], "whitespac": 0, "parenthes": [0, 299], "multipl": [0, 4, 26, 29, 124, 125, 133, 239, 265, 272, 275, 285, 296, 297, 299, 300], "open": [0, 268, 270, 281, 283, 290], "keyword": [0, 267], "kept": [0, 86, 265, 267, 280], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 24, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 265, 267, 269, 270, 272, 274, 275, 277, 280, 282, 283, 285, 287, 288, 289, 290, 291, 292, 296, 301], "csv": [0, 2, 27, 152, 213, 243, 265, 267, 272, 274, 277, 280, 282, 287, 288, 296, 299], "wgt": [0, 2, 4, 6, 10, 29, 33, 35, 69, 78, 79, 92, 97, 109, 121, 123, 141, 142, 143, 148, 149, 154, 202, 203, 204, 207, 228, 274, 278, 285, 287, 289, 292, 295, 299], "23": [0, 2, 57, 58, 62, 74, 81, 92, 97, 112, 165, 166, 167, 220, 263, 264, 272, 274, 280, 282, 284, 286, 288, 297, 298], "titl": 0, "crash": [0, 265], "nmtran": [0, 6], "There": [0, 246, 277], "72": 0, "includ": [0, 2, 3, 17, 22, 26, 43, 145, 242, 264, 265, 268, 272, 280, 281, 282, 283, 287, 288, 295, 297, 299], "come": [0, 270, 283], "filenam": [0, 18, 244, 248, 249, 285], "repres": [0, 4, 6, 18, 24, 25, 26, 267, 272, 274, 275, 278, 283, 285, 287], "rel": [0, 14, 265, 278], "path": [0, 1, 2, 10, 18, 27, 47, 71, 96, 150, 151, 213, 214, 215, 216, 223, 224, 225, 227, 229, 243, 244, 245, 246, 248, 249, 250, 252, 257, 265, 267, 269, 272, 274, 277, 280, 282, 285, 287, 288, 296, 297, 299, 301], "work": [0, 265, 268, 270, 277, 283, 285, 292], "directori": [0, 216, 227, 244, 245, 246, 265, 267, 269, 270, 285, 287, 297], "when": [0, 14, 35, 69, 265, 268, 270, 274, 282, 283, 285, 287, 289, 295, 297, 299, 301], "invok": [0, 18], "nmfe": 0, "content": [0, 1, 2, 240, 241, 272, 274, 277, 280, 282, 283, 288, 296], "simpli": [0, 24, 270, 277, 289], "seen": [0, 1, 2, 272, 274, 277, 280, 282, 288, 296], "54": [0, 58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 288, 293, 295, 298], "doe": [0, 2, 47, 75, 96, 160, 201, 244, 245, 246, 249, 250, 265, 275, 277, 280, 282, 283, 288, 289, 295], "pk": [0, 2, 6, 38, 43, 71, 116, 148, 191, 201, 265, 267, 272, 280, 285, 288, 289, 299, 300], "pred": [0, 84, 148, 152, 265, 285, 286, 287, 295, 298], "simpl": [0, 1, 148, 199, 242, 285, 287, 289], "merg": [0, 265, 283], "placement": [0, 269], "place": [0, 2, 269, 283, 287], "seem": 0, "restrict": [0, 246, 283], "automat": [0, 14, 33, 229, 265, 270, 272, 279, 283, 296, 299], "creat": [0, 2, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 69, 71, 72, 74, 75, 94, 95, 101, 157, 178, 187, 215, 216, 227, 240, 241, 244, 245, 246, 247, 248, 254, 257, 263, 264, 265, 267, 269, 270, 273, 274, 277, 278, 280, 284, 285, 288, 292, 293, 295, 296, 297, 298, 299, 300], "continu": [0, 2, 6, 18, 35, 265, 268, 270, 272, 278, 283, 292, 299], "factor": [0, 292], "compil": [0, 283], "11138": 0, "445": [0, 280], "though": [0, 283], "outsid": [0, 265, 268, 283], "standard": [0, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 64, 212, 215, 263, 265, 275, 278, 283, 289, 292, 295, 296, 298], "gfortran": 0, "8": [0, 2, 6, 50, 51, 52, 53, 58, 59, 60, 63, 64, 92, 97, 99, 112, 114, 220, 263, 264, 272, 274, 280, 282, 283, 284, 285, 286, 287, 293, 295, 296, 297, 298, 301], "hh": 0, "j": [0, 201, 203, 264, 278], "nep": 0, "h": [0, 267], "second": [0, 146, 267, 289], "f": [0, 29, 69, 123, 141, 148, 149, 155, 168, 170, 178, 187, 188, 190, 201, 212, 263, 265, 267, 271, 283, 285, 287, 289], "respect": [0, 2, 265, 268, 272, 277, 278, 283, 287, 288, 289], "ep": [0, 29, 148, 265, 267, 285, 287, 289], "implicit": [0, 265], "kind": [0, 6, 8, 116, 283], "dpsize": 0, "main": [0, 267, 292, 301], "function": [0, 3, 10, 14, 26, 33, 35, 54, 55, 74, 79, 80, 81, 83, 84, 85, 89, 90, 91, 104, 113, 117, 127, 130, 131, 137, 168, 170, 180, 188, 199, 205, 208, 209, 211, 216, 222, 233, 236, 251, 263, 265, 267, 269, 270, 275, 280, 282, 283, 285, 287, 288, 289, 291, 292, 295, 296, 297, 299, 301], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 26, 30, 31, 39, 57, 75, 82, 103, 115, 118, 119, 121, 124, 125, 133, 134, 149, 167, 168, 170, 188, 228, 229, 265, 267, 272, 274, 275, 280, 286, 287, 292, 295, 300, 301], "doesn": [0, 29, 248, 265, 280], "t": [0, 6, 8, 29, 33, 77, 105, 182, 183, 196, 204, 242, 248, 251, 253, 264, 265, 267, 278, 280, 293, 295], "declar": [0, 2, 69, 142, 272, 299], "assign": [0, 6, 29, 69, 265, 267], "stop": 0, "entri": [0, 247], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 24, 25, 26, 29, 54, 55, 69, 75, 100, 104, 109, 113, 117, 121, 124, 125, 133, 142, 149, 163, 168, 170, 187, 188, 229, 265, 272, 275, 285, 287, 292], "separ": [0, 10, 73, 86, 143, 164, 200, 246, 265, 267, 270, 272, 274, 275, 278, 283, 287, 292, 299], "thnn": 0, "nn": [0, 278], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 24, 26, 265, 283, 287], "ad": [0, 9, 18, 35, 37, 42, 86, 233, 234, 236, 265, 267, 272, 282, 283, 289, 296, 297, 300], "x": [0, 1, 2, 25, 33, 69, 80, 81, 95, 165, 263, 272, 274, 278, 280, 282, 286, 287, 288, 290, 296, 297], "xxe": 0, "xx": 0, "string": [0, 6, 10, 26, 27, 29, 103, 109, 150, 151, 152, 265, 274, 288], "tool": [1, 2, 3, 14, 18, 46, 155, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 250, 252, 257, 262, 263, 265, 266, 267, 270, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 288, 291, 292, 296, 300, 301], "add": [1, 9, 14, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 69, 86, 105, 187, 188, 265, 267, 272, 274, 280, 283, 288, 289, 290, 299], "allometr": [1, 2, 33, 228, 265, 267, 299], "scale": [1, 2, 6, 18, 33, 56, 61, 65, 228, 265, 267, 278, 287, 290, 299], "pharmr": [1, 2, 3, 265, 270, 272, 275, 277, 279, 280, 281, 282, 288, 296, 300], "command": [1, 265, 270, 272, 277, 279, 280, 281, 282, 283, 287, 288, 296, 300], "line": [1, 69, 265, 272, 277, 279, 280, 281, 282, 283, 287, 288, 296, 300], "To": [1, 2, 267, 270, 272, 277, 279, 280, 282, 283, 287, 288, 290, 296, 299, 301], "initi": [1, 2, 15, 18, 24, 25, 33, 37, 39, 40, 42, 43, 44, 71, 73, 74, 82, 89, 90, 91, 105, 161, 168, 170, 176, 178, 179, 180, 182, 183, 187, 188, 189, 192, 195, 196, 202, 203, 204, 208, 209, 210, 211, 228, 229, 253, 265, 267, 272, 277, 278, 280, 282, 283, 288, 296, 300], "python": [1, 2, 264, 265, 267, 272, 274, 275, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 296, 299, 300], "r": [1, 2, 27, 264, 265, 272, 274, 275, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 296, 299, 300], "read_model": [1, 152, 265, 272, 274, 277, 280, 282, 285, 286, 287, 288, 296, 301], "read_modelfit_result": [1, 265, 272, 277, 280, 282, 288, 296], "run_allometri": [1, 265], "start_model": [1, 240, 272, 277, 280, 282, 288, 296, 299], "start_model_result": [1, 272, 277, 280, 282, 288, 296, 299], "re": [1, 2, 216, 224, 225, 226, 230, 231, 232, 236, 238, 245, 250, 252, 264, 272, 277, 280, 282, 285, 286, 287, 288, 296, 298, 299], "code": [1, 18, 20, 69, 108, 109, 121, 127, 130, 131, 137, 148, 152, 187, 188, 214, 265, 272, 277, 280, 281, 282, 283, 288, 289, 291, 292, 296, 300, 301], "redefin": [1, 272, 277, 280, 282, 288, 296], "accordingli": [1, 272, 277, 280, 282, 288, 289, 296], "descript": [1, 2, 6, 18, 30, 240, 241, 242, 262, 263, 265, 269, 272, 274, 277, 280, 282, 285, 288, 292, 296, 297], "modelfitresult": [1, 2, 21, 217, 218, 219, 220, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 242, 265, 272, 277, 280, 282, 288, 296], "allometric_vari": [1, 2, 33, 228, 229, 267], "wt": [1, 29, 33, 228, 231, 272, 297], "reference_valu": [1, 2, 33, 228, 267], "refer": [1, 31, 33, 69, 76, 136, 226, 228, 229, 242, 265, 267, 272, 283, 289, 300, 301], "70": [1, 2, 33, 92, 228, 274, 295], "appli": [1, 2, 18, 168, 170, 178, 187, 188, 202, 203, 204, 228, 265, 267, 268, 274, 278, 283, 288, 295, 299], "all": [1, 2, 4, 5, 6, 7, 8, 10, 13, 15, 16, 25, 26, 27, 28, 29, 30, 33, 37, 41, 43, 66, 69, 73, 76, 78, 86, 90, 91, 93, 95, 97, 99, 102, 103, 106, 115, 116, 119, 120, 122, 123, 127, 130, 131, 134, 137, 140, 145, 147, 149, 157, 158, 165, 166, 178, 181, 187, 193, 200, 202, 203, 204, 206, 207, 208, 209, 227, 228, 232, 233, 234, 236, 242, 244, 248, 249, 258, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 299, 301], "cl": [1, 2, 4, 8, 25, 29, 33, 35, 37, 39, 42, 57, 69, 75, 77, 87, 103, 116, 118, 123, 126, 134, 139, 141, 142, 143, 148, 149, 154, 157, 161, 169, 176, 177, 182, 183, 186, 189, 195, 199, 202, 203, 204, 228, 231, 272, 278, 280, 282, 285, 287, 289], "q": [1, 33, 42, 161, 228, 265], "v": [1, 8, 25, 29, 33, 57, 69, 77, 88, 103, 116, 121, 123, 141, 142, 143, 148, 149, 157, 169, 176, 177, 182, 183, 189, 195, 196, 199, 228, 231, 270, 272, 278, 282, 285, 287, 289, 298, 299], "75": [1, 2, 33, 228, 272, 277], "lower_bound": [1, 2, 33, 228, 267], "lower": [1, 2, 6, 24, 25, 33, 35, 44, 67, 89, 90, 91, 115, 119, 120, 160, 180, 181, 187, 193, 206, 209, 228, 229, 267, 275, 280, 285, 287], "bound": [1, 24, 25, 33, 44, 68, 167, 181, 193, 202, 203, 204, 206, 211, 228, 265, 267, 285], "upper_bound": [1, 2, 33, 228, 267], "upper": [1, 24, 25, 33, 35, 44, 89, 90, 91, 115, 119, 120, 160, 180, 181, 193, 206, 209, 228, 265, 267, 285, 287], "should": [1, 6, 14, 24, 33, 35, 37, 39, 44, 164, 178, 228, 233, 234, 236, 265, 267, 268, 269, 270, 272, 275, 278, 280, 282, 283, 284, 287, 288, 292, 296], "true": [1, 2, 6, 10, 15, 18, 25, 33, 34, 56, 66, 75, 78, 86, 89, 90, 91, 105, 109, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 153, 154, 166, 172, 174, 175, 178, 187, 188, 192, 207, 208, 209, 210, 214, 220, 228, 242, 243, 265, 272, 274, 277, 280, 282, 287, 288, 289, 290, 296, 297, 298, 301], "No": [1, 6, 249, 250, 283, 288], "select": [1, 2, 164, 202, 204, 241, 263, 265, 267, 272, 280, 282, 285, 288, 290, 296, 297, 299], "see": [1, 2, 6, 8, 18, 35, 37, 220, 228, 229, 231, 233, 234, 236, 237, 267, 268, 269, 270, 272, 274, 275, 277, 280, 282, 283, 284, 287, 288, 289, 292, 296, 299], "about": [1, 2, 6, 268, 272, 274, 277, 279, 280, 282, 283, 287, 288, 296, 299], "actual": [1, 2, 24, 143, 272, 277, 280, 282, 283, 288, 296], "minim": [1, 2, 265, 272, 277, 280, 282, 288, 296], "statu": [1, 2, 265, 272, 275, 277, 280, 282, 283, 288, 296], "time": [1, 2, 6, 7, 9, 10, 25, 29, 33, 39, 40, 69, 71, 78, 79, 92, 98, 99, 106, 114, 123, 140, 141, 142, 143, 144, 148, 149, 152, 159, 176, 179, 189, 190, 192, 195, 205, 229, 237, 265, 267, 272, 277, 278, 280, 282, 283, 285, 286, 288, 289, 292, 295, 296, 298, 299], "you": [1, 2, 270, 272, 277, 279, 280, 281, 282, 283, 287, 288, 289, 292, 296, 300, 301], "look": [1, 2, 29, 47, 103, 134, 272, 277, 280, 282, 288, 289, 296, 299], "summary_model": [1, 2, 265, 272, 277, 280, 282, 288, 296, 299], "tabl": [1, 2, 56, 148, 168, 241, 263, 264, 265, 270, 272, 273, 277, 278, 280, 282, 284, 285, 288, 293, 295, 296, 297, 298, 299], "gener": [1, 2, 6, 18, 57, 62, 70, 74, 144, 164, 165, 166, 167, 251, 253, 265, 267, 272, 274, 277, 278, 280, 281, 282, 288, 291, 292, 296, 299], "summarize_modelfit_result": [1, 2, 265, 272, 277, 280, 282, 288, 296], "minimization_success": [1, 2, 242, 272, 277, 280, 282, 288, 296], "errors_found": [1, 2, 272, 277, 280, 282, 288, 296], "pheno": [1, 8, 10, 15, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 77, 78, 79, 82, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 102, 103, 105, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 279, 285, 287, 289], "phenobarb": [1, 148, 242, 285, 287], "scaled_model": [1, 2], "warnings_found": [1, 2, 272, 277, 280, 282, 288, 296], "ofv": [1, 2, 49, 146, 218, 222, 233, 234, 236, 240, 241, 242, 265, 272, 277, 280, 282, 288, 295, 296], "aic": [1, 48, 222, 233, 234, 236, 265, 280, 282, 288, 296], "bic": [1, 2, 49, 222, 233, 234, 236, 265, 267, 272, 280, 282, 288, 296, 299], "730": [1, 263, 278, 280], "894727": [1, 263, 278], "740": [1, 82, 98, 263, 274], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 242, 272, 277, 280, 282, 288, 296], "estimation_runtim": [1, 2, 272, 277, 280, 282, 288, 296], "_estim": [1, 280, 288], "32": [1, 6, 58, 92, 97, 112, 220, 263, 264, 267, 272, 274, 277, 284, 286, 295, 298], "005818": [1, 278, 287], "121955": 1, "44555": [1, 278], "111053": [1, 278, 287], "201526": [1, 278, 287], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 278, 287], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 221, 240, 244, 245, 246, 247, 248, 249, 250, 252, 263, 265, 272, 277, 278, 280, 282, 288, 293, 296, 299], "predict": [1, 2, 14, 18, 83, 84, 104, 109, 117, 145, 218, 219, 220, 240, 265, 272, 273, 280, 282, 288, 295, 296], "influenti": [1, 2, 218, 219, 241, 265, 272, 280, 282, 288, 296], "individu": [1, 2, 6, 18, 38, 56, 57, 58, 62, 73, 83, 84, 103, 104, 110, 111, 112, 114, 117, 145, 146, 147, 157, 165, 166, 167, 210, 218, 219, 220, 240, 241, 265, 267, 272, 280, 282, 283, 288, 292, 295, 296, 300], "outlier": [1, 2, 219, 220, 241, 265, 272, 280, 282, 288, 296, 298], "summary_individuals_count": [1, 2, 272, 280, 282, 288, 296], "summarize_individuals_count_t": [1, 2, 265, 272, 280, 282, 288, 296], "parent_model": [1, 2, 18, 265, 272, 277, 280, 282, 288, 296], "inf_select": [1, 2, 241, 272, 280, 282, 288, 296], "inf_param": [1, 2, 241, 272, 280, 282, 288, 296], "out_ob": [1, 2, 241, 272, 280, 282, 288, 296], "out_ind": [1, 2, 241, 272, 280, 282, 288, 296], "inf_outli": [1, 2, 241, 272, 280, 282, 288, 296], "differ": [1, 2, 3, 18, 23, 26, 49, 240, 242, 263, 264, 265, 268, 272, 277, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 292, 295, 296, 297, 299, 301], "statist": [1, 6, 57, 62, 203, 272, 274, 278, 280, 282, 285, 287, 288, 296], "summary_individu": [1, 265, 272, 280, 282, 288, 296], "summarize_individu": [1, 241, 265, 272, 280, 282, 288, 296], "outlier_count": [1, 240, 272, 280, 282, 288, 296], "dofv_vs_par": [1, 240, 272, 280, 282, 288, 296], "id": [1, 5, 6, 10, 16, 58, 76, 78, 79, 92, 95, 97, 98, 99, 102, 112, 114, 148, 149, 152, 165, 220, 264, 265, 267, 272, 274, 278, 280, 282, 284, 285, 286, 287, 288, 289, 296, 298], "nan": [1, 2, 95, 211, 265, 272, 274, 277, 278, 280, 282, 288, 295, 296, 297], "742852": 1, "000000": [1, 2, 44, 50, 51, 52, 59, 263, 272, 278, 280, 282, 286, 288, 296], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 25, 39, 58, 73, 81, 92, 95, 97, 98, 112, 160, 179, 181, 193, 197, 201, 203, 220, 263, 264, 272, 274, 277, 278, 279, 280, 282, 283, 284, 286, 288, 293, 295, 296, 297, 298, 299], "092658": 1, "55": [1, 2, 6, 58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 288, 293, 295, 298], "6": [1, 2, 6, 58, 82, 92, 97, 112, 114, 220, 263, 264, 272, 274, 278, 280, 282, 283, 284, 286, 287, 288, 295, 296, 297, 298], "535711": 1, "175743": 1, "56": [1, 58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 298], "764710": 1, "576072": 1, "57": [1, 2, 58, 92, 97, 102, 112, 165, 220, 263, 264, 272, 274, 277, 278, 284, 286, 298], "975589": 1, "539779": 1, "58": [1, 2, 58, 92, 97, 102, 112, 114, 165, 220, 263, 264, 274, 278, 284, 286, 297, 298], "194798": 1, "775689": 1, "59": [1, 58, 92, 95, 97, 99, 102, 110, 112, 114, 165, 220, 263, 264, 272, 274, 277, 278, 284, 286, 288, 298], "11": [1, 2, 58, 80, 81, 83, 92, 95, 97, 98, 112, 220, 263, 264, 272, 274, 278, 279, 280, 282, 283, 284, 286, 287, 288, 293, 295, 297, 298, 299, 301], "175577": 1, "462889": 1, "predicted_dofv": [1, 240, 241, 272, 280, 282, 288, 296], "predicted_residu": [1, 240, 241, 272, 280, 282, 288, 296], "118": [1, 2, 165, 265, 278], "fulli": [2, 299], "best": [2, 265, 272, 280, 282, 283, 288, 296, 299], "dataset": [2, 10, 11, 12, 18, 45, 57, 66, 71, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 94, 95, 98, 101, 102, 107, 110, 111, 112, 114, 121, 136, 144, 150, 160, 164, 171, 201, 205, 213, 229, 234, 264, 265, 267, 270, 278, 281, 282, 285, 287, 298, 300], "combin": [2, 4, 73, 124, 125, 133, 135, 168, 170, 188, 200, 201, 235, 265, 267, 277, 278, 280, 283, 296, 299], "modelsearch": [2, 229, 236, 240, 265, 299], "ruvsearch": [2, 229, 237, 238, 265, 299], "covsearch": [2, 231, 265, 299], "run_amd": [2, 265], "dataset_path": [2, 71], "modeltyp": [2, 71, 229, 267], "pk_oral": [2, 229, 267], "search_spac": [2, 229, 236, 265, 267, 288, 299], "let": [2, 14, 18, 76, 265, 272, 278, 287, 289, 299], "categor": [2, 6, 35, 265, 272, 274, 278, 299], "sex": [2, 268, 272, 292, 299], "ag": [2, 6, 231, 272, 297, 299], "occas": [2, 39, 229, 234, 265, 267, 282, 287], "visi": [2, 282], "c": [2, 9, 203, 266, 271, 277, 278, 282, 283, 287, 289, 296], "specifi": [2, 6, 29, 37, 79, 89, 91, 150, 160, 168, 170, 186, 188, 209, 215, 232, 265, 267, 272, 277, 282, 283, 285, 287], "oral": [2, 71, 299], "drug": [2, 41, 191, 292], "iiv": [2, 17, 22, 26, 31, 37, 39, 43, 49, 73, 103, 134, 157, 178, 200, 229, 233, 234, 236, 265, 267, 272, 282, 299], "we": [2, 268, 270, 272, 278, 279, 281, 283, 287, 289, 292, 301], "our": [2, 268, 270, 271, 283, 292], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 61, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 86, 89, 90, 91, 95, 104, 113, 115, 117, 119, 120, 121, 123, 141, 142, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 257, 263, 265, 267, 269, 272, 274, 275, 277, 280, 282, 283, 285, 287, 288, 289, 292, 296, 299, 301], "build": [2, 229, 266, 267, 275, 287, 299], "pk_iv": [2, 229, 267], "cl_init": [2, 71, 229, 267], "popul": [2, 18, 29, 44, 82, 83, 84, 104, 117, 123, 211, 229, 265, 267, 297], "clearanc": [2, 33, 71, 87, 229, 265, 267, 272, 282, 289], "01": [2, 17, 26, 35, 71, 187, 211, 229, 231, 267, 272, 287, 295, 297], "vc_init": [2, 71, 229, 267], "central": [2, 7, 8, 9, 29, 41, 42, 69, 71, 123, 141, 161, 169, 176, 177, 179, 182, 183, 186, 189, 192, 195, 196, 197, 199, 229, 267, 270, 275, 285, 287], "compart": [2, 6, 8, 9, 32, 40, 41, 42, 93, 94, 106, 122, 159, 161, 179, 186, 192, 197, 229, 265, 267, 288, 299], "volum": [2, 33, 42, 71, 88, 229, 265, 267, 272, 282, 283], "mat_init": [2, 71, 229, 267], "absorpt": [2, 71, 116, 136, 169, 176, 189, 192, 195, 229, 236, 240, 265, 267, 280, 282, 288, 299], "mfl": [2, 229, 231, 240, 265, 267, 272, 288], "depend": [2, 6, 18, 29, 57, 73, 76, 124, 125, 133, 168, 170, 188, 265, 269, 274, 280, 289, 299, 300, 301], "lloq": [2, 6, 160, 201, 229, 265, 267], "quantif": [2, 6, 160, 201, 229, 267], "loq": [2, 160, 229, 267], "data": [2, 6, 18, 31, 80, 81, 82, 83, 84, 85, 97, 109, 148, 149, 152, 160, 168, 170, 172, 188, 201, 211, 229, 241, 263, 265, 274, 278, 282, 283, 285, 287, 289, 292, 299], "bodi": [2, 6, 10, 268, 274, 283, 292], "weight": [2, 6, 10, 85, 124, 125, 133, 135, 194, 212, 272, 274, 292, 296], "correspond": [2, 14, 18, 185, 264, 283, 285, 298, 299], "datainfo": [2, 18, 79, 150, 171, 213, 265, 299, 300], "file": [2, 10, 18, 27, 47, 72, 96, 148, 150, 151, 152, 213, 214, 215, 223, 224, 243, 244, 245, 246, 248, 249, 250, 252, 265, 267, 270, 272, 277, 279, 280, 282, 283, 285, 288, 289, 291, 292, 296, 299, 300], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 247, 252, 265, 269, 272, 274, 283, 285, 287], "model_typ": 2, "elimin": [2, 116, 127, 130, 131, 137, 177, 182, 183, 196, 265, 267, 288, 299], "vc": [2, 42, 161, 272, 280, 282], "mat": [2, 43, 264, 265, 266, 271, 272, 280, 282, 287, 289, 296], "proport": [2, 37, 124, 125, 133, 135, 164, 168, 170, 187, 188, 201, 265, 267], "step": [2, 15, 18, 34, 36, 46, 153, 156, 174, 175, 231, 242, 265, 267, 270, 272, 277, 279, 280, 282, 283, 288, 292, 296, 301], "foce": [2, 14, 15, 34, 36, 153, 174, 175, 265, 267, 277], "interact": [2, 14, 15, 34, 36, 148, 153, 174, 175, 265, 268, 277, 283, 285, 287, 292, 299, 301], "specif": [2, 14, 18, 25, 46, 79, 164, 216, 265, 267, 272, 274, 283, 285, 288, 292, 299], "support": [2, 8, 14, 29, 36, 37, 54, 55, 70, 71, 80, 81, 83, 84, 85, 104, 113, 117, 124, 125, 133, 169, 174, 175, 189, 201, 231, 254, 265, 267, 272, 274, 275, 277, 281, 283, 285, 287, 288, 289, 291, 292, 294, 299], "nonmem": [2, 14, 18, 69, 70, 79, 110, 111, 112, 185, 198, 235, 265, 266, 269, 270, 279, 281, 285, 286, 287, 292, 299, 300], "cmt": [2, 94, 265, 288], "rate": [2, 6, 8, 9, 16, 42, 136, 169, 176, 189, 192, 195, 265, 267, 299], "via": [2, 265, 267, 270, 279, 281, 285, 287, 289, 299, 301], "exclud": [2, 109, 240, 280, 282, 283, 288], "pleas": [2, 270, 279, 283, 299, 301], "featur": [2, 270, 272, 277, 280, 281, 282, 283, 296, 300], "languag": [2, 108, 148, 268, 272, 275, 283, 288], "how": [2, 3, 166, 229, 233, 236, 265, 267, 268, 270, 272, 274, 279, 280, 282, 283, 287, 288, 289, 297, 300], "defin": [2, 8, 62, 109, 121, 136, 143, 149, 265, 272, 275, 283, 285, 287, 298, 299], "zo": [2, 236, 240, 265, 267, 288, 299], "seq": [2, 267, 288, 299], "fo": [2, 14, 36, 174, 175, 265, 267, 277, 288, 292, 299], "mm": [2, 265, 267, 288, 299], "mix": [2, 39, 49, 131, 183, 222, 265, 275, 279, 282, 285, 288, 292, 299], "lagtim": [2, 169, 189, 288, 299], "transit": [2, 8, 186, 192, 265, 267, 288, 299], "peripher": [2, 8, 42, 161, 186, 236, 240, 265, 267, 288, 299], "cat": [2, 35, 272, 299], "iv": [2, 71, 229, 267, 299], "note": [2, 4, 6, 24, 69, 70, 95, 110, 111, 112, 242, 243, 244, 248, 249, 263, 274, 280, 282, 286, 287, 289, 297], "overriden": 2, "ignor": [2, 110, 111, 112, 148, 265, 267, 285, 287, 289], "soon": 2, "explicitli": [2, 267, 282, 283], "stai": [2, 26], "vice": 2, "versa": 2, "instanc": [2, 126, 154, 272, 299], "effect": [2, 35, 37, 49, 126, 134, 154, 157, 187, 222, 231, 265, 267, 275, 279, 283, 285, 292, 297, 299, 300], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 24, 25, 26, 27, 29, 30, 31, 33, 36, 37, 39, 44, 47, 49, 57, 62, 71, 73, 74, 76, 80, 81, 82, 83, 84, 85, 96, 100, 124, 125, 133, 139, 145, 150, 157, 158, 160, 164, 165, 166, 167, 168, 170, 178, 185, 187, 188, 200, 201, 202, 203, 204, 213, 217, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 248, 249, 253, 257, 265, 267, 274, 278, 280, 282, 287, 288, 299], "null": [2, 274, 280, 282, 288, 299, 301], "yield": [2, 144, 164], "workflow": [2, 3, 225, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 265, 279, 281, 283, 292, 299], "want": [2, 268, 270, 272, 280, 281, 282, 283, 287, 288, 289, 291], "desir": [2, 249, 250], "subset": [2, 68, 165], "algorithm": [2, 231, 232, 233, 236, 240, 265, 267, 292, 299], "six": 2, "below": [2, 6, 201, 269, 270, 277, 280, 282, 283, 288, 296], "detail": [2, 228, 231, 233, 234, 236, 237, 277, 283, 288, 295, 296, 299, 300], "regard": [2, 283, 288], "subhead": 2, "distribut": [2, 17, 22, 26, 39, 42, 57, 62, 73, 116, 143, 147, 161, 165, 166, 167, 200, 204, 234, 254, 263, 265, 267, 278, 283, 285, 288, 295, 299, 300], "term": [2, 168, 265, 280, 283, 287], "keep": [2, 14, 24, 164, 244, 265, 268, 275, 280, 283], "well": [2, 57, 272, 274, 277, 280, 282, 283, 287, 288, 295, 296, 299, 300], "iov": [2, 26, 39, 103, 134, 158, 234, 265, 267, 295, 299], "explain": [2, 272, 283, 292, 299], "ruv": [2, 178, 267], "power": [2, 35, 187, 267, 283, 292, 293, 295, 296], "vari": [2, 140, 190, 237, 265, 267, 296], "identifi": [2, 6, 31, 272, 274, 280, 283, 295, 299], "option": [2, 6, 14, 18, 26, 35, 37, 39, 46, 71, 73, 80, 81, 83, 84, 85, 164, 201, 222, 244, 248, 249, 258, 263, 265, 267, 272, 274, 280, 282, 283, 285, 288, 300, 301], "reduced_stepwis": [2, 240, 265, 288, 299], "iiv_strategi": [2, 233, 236, 265, 267, 280, 288, 299], "absorption_delai": [2, 236, 265, 288, 299], "rank_typ": [2, 222, 233, 234, 236, 267, 280, 282, 288, 299], "cutoff": [2, 190, 218, 219, 220, 222, 233, 234, 236, 265, 267, 280, 282, 288, 299], "brute_forc": [2, 233, 265, 280], "fullblock": [2, 233, 236, 265, 280, 288], "tri": [2, 267, 288], "list_of_paramet": [2, 37, 39, 234, 267, 282], "random": [2, 3, 13, 17, 18, 22, 26, 39, 49, 57, 62, 74, 76, 118, 121, 134, 165, 166, 167, 265, 267, 275, 278, 282, 295, 300, 301], "group": [2, 25, 31, 144, 145, 164, 237, 267, 281, 296], "p_valu": [2, 237, 267, 296], "05": [2, 42, 50, 51, 52, 53, 59, 60, 63, 64, 161, 231, 237, 263, 267, 272, 285, 286, 295, 296, 297], "skip": [2, 237, 267, 272, 296], "p_forward": [2, 231, 267, 272], "p_backward": [2, 231, 267, 272], "max_step": [2, 231, 267, 272], "scm": [2, 231, 265, 272, 292, 294], "forward": [2, 231, 265, 267, 272, 297], "backward": [2, 231, 242, 265, 267, 272, 297], "variou": [2, 69, 240, 241, 265, 267, 268, 270, 272, 275, 277, 280, 281, 282, 288, 292, 296], "access": [2, 272, 274, 277, 280, 282, 283, 285, 288, 289, 296, 299, 301], "json": [2, 10, 27, 224, 226, 243, 265, 267, 272, 274, 277, 280, 282, 287, 288, 296, 299], "format": [2, 70, 265, 267, 269, 272, 275, 277, 279, 280, 281, 282, 283, 285, 287, 288, 291, 296], "summary_tool": [2, 265, 272, 277, 280, 282, 288, 296], "candid": [2, 236, 265, 267, 272, 277, 296, 299], "compar": [2, 222, 263, 265, 272, 277, 292, 296, 299], "rank": [2, 222, 233, 234, 236, 265, 267, 272, 296], "selected_model": 2, "901": 2, "722667": 2, "iivsearch_run9": 2, "2272": 2, "503332": 2, "best_ruvsearch_2": [2, 296], "time_varying2": [2, 296], "iiv_on_ruv": [2, 265, 293, 295, 296], "2431": 2, "413432": 2, "iovsearch_run2": [2, 282], "2579": 2, "021315": 2, "2590": 2, "360161": 2, "covsearch_run6": [2, 272], "2593": 2, "888704": 2, "dofv": [2, 218, 219, 240, 263, 264, 265, 272, 293, 295, 296], "n_param": [2, 272, 282, 296], "d_param": [2, 272, 282, 296], "1370": 2, "780665": 2, "158": 2, "910100": 2, "147": [2, 6], "607883": 2, "338847": 2, "528542": 2, "modelsearch_run1": [2, 265], "base_model": [2, 222], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "best_ruvsearch_1": [2, 296], "iovsearch_run1": [2, 282], "iovsearch_run3": [2, 282], "iovsearch_run4": [2, 282], "iovsearch_run5": [2, 282], "iovsearch_run6": [2, 282], "iovsearch_run7": [2, 282], "iovsearch_run8": [2, 282], "iovsearch_run9": 2, "iovsearch_run10": 2, "covsearch_run1": [2, 272], "exp": [2, 29, 35, 37, 148, 202, 203, 204, 231, 272, 285, 287, 289], "covsearch_run2": [2, 272], "covsearch_run3": [2, 272], "covsearch_run4": [2, 272], "covsearch_run5": [2, 272], "fals": [2, 6, 13, 14, 17, 18, 22, 24, 25, 27, 31, 34, 35, 36, 44, 56, 66, 68, 75, 78, 86, 89, 90, 91, 105, 109, 115, 119, 120, 123, 124, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 139, 153, 154, 164, 166, 172, 180, 181, 187, 192, 193, 206, 208, 209, 210, 211, 213, 220, 229, 242, 243, 245, 257, 264, 272, 274, 277, 285, 287, 289, 290, 297, 298], "19029": 2, "146679": 2, "2091": 2, "335789": 2, "2278": 2, "645238": 2, "1623": 2, "449423": 2, "2187": 2, "714827": 2, "2155": 2, "309747": 2, "1562": 2, "182445": 2, "1544": 2, "578087": 2, "1927": 2, "724795": 2, "1419": 2, "684985": 2, "2260": 2, "091630": 2, "2256": 2, "222388": 2, "2253": 2, "280037": 2, "2421": 2, "414958": 2, "018856": 2, "816993": 2, "2555": 2, "387421": 2, "817090": 2, "387607": 2, "413326": 2, "2524": 2, "580897": 2, "2556": 2, "106887": 2, "2502": 2, "502532": 2, "2591": 2, "473342": 2, "816184": 2, "112946": 2, "565747": 2, "739920": 2, "63": [2, 92, 114, 274, 286, 293, 295], "30": [2, 58, 92, 97, 112, 220, 263, 264, 272, 274, 277, 280, 282, 283, 284, 286, 288, 293, 295, 298], "15": [2, 58, 81, 92, 97, 112, 220, 263, 264, 272, 274, 280, 282, 283, 284, 286, 287, 297, 298], "06": [2, 50, 52, 53, 60, 63, 263, 272, 280, 282, 285, 286, 295, 297, 299], "21": [2, 58, 80, 83, 92, 97, 112, 220, 263, 264, 272, 274, 277, 278, 284, 286, 293, 295, 298], "82": 2, "77": [2, 272], "27": [2, 58, 92, 97, 112, 114, 220, 263, 264, 272, 274, 280, 282, 284, 286, 288, 296, 298], "80": [2, 204, 272, 286, 287, 293, 295, 296], "02": [2, 272, 295, 297, 299], "37": [2, 58, 92, 97, 99, 112, 220, 263, 264, 272, 274, 284, 286, 298], "45": [2, 58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 298], "18": [2, 6, 58, 81, 92, 97, 112, 220, 263, 264, 272, 274, 280, 282, 284, 286, 293, 295, 298], "85": 2, "73": [2, 114, 274, 286, 296, 299], "31": [2, 58, 80, 83, 92, 97, 112, 114, 220, 263, 264, 272, 274, 284, 286, 293, 295, 298, 299], "17": [2, 58, 80, 81, 83, 84, 92, 95, 97, 112, 114, 220, 263, 264, 272, 274, 280, 282, 283, 284, 286, 287, 288, 293, 295, 298], "60": [2, 92, 272, 274, 283, 293], "28": [2, 58, 80, 83, 84, 92, 97, 112, 201, 220, 263, 264, 272, 274, 280, 283, 284, 286, 295, 298], "84": [2, 218, 219, 241, 280, 282, 288, 297], "39": [2, 58, 92, 97, 112, 220, 263, 264, 272, 274, 282, 284, 286, 295, 296, 297, 298], "98": [2, 263, 272, 278, 280], "38": [2, 58, 80, 83, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 298], "96": [2, 99, 204, 263, 272, 274, 287, 288], "52": [2, 58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 288, 297, 298], "33": [2, 58, 92, 97, 112, 114, 220, 263, 264, 272, 274, 284, 286, 288, 297, 298], "40": [2, 58, 92, 95, 97, 112, 114, 160, 220, 263, 264, 274, 277, 284, 286, 297, 298], "44": [2, 58, 92, 97, 112, 220, 263, 264, 274, 284, 286, 298], "26": [2, 58, 92, 97, 112, 220, 263, 264, 272, 274, 282, 284, 286, 295, 297, 298], "66": [2, 272, 293], "36": [2, 58, 62, 92, 97, 112, 220, 263, 264, 272, 274, 280, 282, 284, 286, 288, 295, 298], "25": [2, 58, 80, 83, 84, 92, 97, 99, 112, 220, 263, 264, 272, 274, 280, 284, 286, 288, 293, 295, 296, 298], "65": [2, 6, 272], "29": [2, 58, 80, 83, 84, 92, 97, 112, 201, 203, 220, 263, 264, 266, 272, 274, 280, 283, 284, 286, 295, 298], "64": [2, 6], "78": 2, "88": 2, "51": [2, 58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 298, 299], "47": [2, 58, 92, 97, 112, 114, 220, 263, 264, 274, 284, 286, 288, 293, 295, 298], "34": [2, 58, 84, 92, 97, 112, 114, 220, 263, 264, 272, 274, 284, 286, 293, 295, 298], "pop_cl_estim": [2, 272, 277, 282, 296], "pop_vc_estim": [2, 272, 277, 282, 296], "0100": 2, "100": [2, 25, 35, 36, 46, 165, 174, 204, 263, 265, 267, 272, 286, 287, 290, 297], "3711": 2, "125": 2, "228": 2, "5771": 2, "115": 2, "287": [2, 293], "8759": 2, "119": 2, "581": 2, "2667": 2, "105": [2, 272, 277, 296], "292": 2, "5775": 2, "127": [2, 6, 280], "060": 2, "1654": 2, "121": [2, 272, 280, 282, 288, 296], "364": 2, "9392": 2, "138": 2, "630": 2, "9500": 2, "923": 2, "9735": 2, "137": 2, "648": [2, 6, 263], "5006": 2, "116": 2, "034": 2, "6326": 2, "112": [2, 114, 272, 274, 280, 282, 286, 288, 293, 295, 296], "423": 2, "5612": 2, "416": 2, "5406": 2, "706": 2, "0598": 2, "151": [2, 80, 81, 83, 84, 85, 293], "9031": 2, "117": 2, "208": 2, "0793": 2, "438": 2, "439": [2, 280], "9253": 2, "887": [2, 265, 280, 282], "1390": 2, "114": 2, "800": [2, 263, 286], "9254": 2, "888": 2, "1388": 2, "9033": 2, "207": [2, 286], "9409": 2, "401": 2, "0197": 2, "635": 2, "1751": 2, "113": [2, 272, 280, 282, 288, 296], "681": 2, "2749": 2, "103": [2, 272, 280], "868": [2, 278, 280], "2141": 2, "935": 2, "5390": 2, "943": 2, "2723": 2, "795": 2, "2760": [2, 272], "837": 2, "2727": 2, "104": [2, 272, 277, 280, 282, 288], "085": 2, "2814": 2, "101": [2, 272], "532": 2, "pop_mat_estim": [2, 272, 277, 282, 296], "010000": 2, "000100": 2, "459155": 2, "260127": 2, "563136": 2, "355314": 2, "386862": 2, "284833": 2, "224547": 2, "206026": 2, "463798": 2, "479941": 2, "486550": 2, "483385": 2, "495219": 2, "493621": 2, "463074": 2, "463102": 2, "495548": 2, "474613": 2, "495482": 2, "474620": 2, "493613": 2, "460720": 2, "468861": 2, "491231": 2, "461770": 2, "461787": 2, "462003": 2, "466555": 2, "427683": 2, "460977": 2, "460855": 2, "omega_iov_1_estim": [2, 282], "omega_iov_2_estim": [2, 282], "000010": [2, 278], "027698": 2, "000001": [2, 50, 52, 53, 57, 60, 62, 63, 282, 285, 286, 288], "017913": 2, "109449": 2, "050657": 2, "110465": 2, "026922": 2, "026926": 2, "026951": 2, "026901": 2, "026857": 2, "026982": 2, "026914": 2, "omega_iov_2_3_estim": 2, "018497": 2, "018498": 2, "063509": 2, "046262": 2, "052580": 2, "017330": 2, "017318": 2, "017368": 2, "017319": 2, "017210": 2, "017372": 2, "017494": 2, "omega_iov_3_estim": [2, 282], "pop_clage_estim": [2, 272], "012352": 2, "012353": 2, "003156": 2, "003153": 2, "036852": 2, "043941": 2, "046134": 2, "011155": 2, "011139": 2, "004026": 2, "011192": 2, "011151": 2, "011028": 2, "011185": 2, "011372": 2, "pop_clsex_estim": [2, 272], "pop_matage_estim": [2, 272], "05079": 2, "016829": 2, "pop_matsex_estim": [2, 272], "pop_vcage_estim": [2, 272], "485722": 2, "002138": 2, "pop_vcsex_estim": [2, 272], "143849": 2, "dbic": [2, 265, 280, 282, 288], "059033": 2, "110": [2, 272, 280, 282, 288, 296], "464112": 2, "329": 2, "468146": 2, "642": [2, 293], "324437": 2, "695": [2, 265], "010496": 2, "712": 2, "614854": 2, "833": 2, "217496": 2, "439014": 2, "972689": 2, "493822": 2, "841931": 2, "134": 2, "736504": 2, "130": [2, 265], "443586": 2, "120": [2, 99, 274, 286], "402996": 2, "683715": 2, "393070": 2, "71": [2, 272, 296], "089100": 2, "886801": 2, "290565": 2, "177358": 2, "205585": 2, "113181": 2, "752785": 2, "summary_error": [2, 272, 277, 280, 282, 288], "summarize_error": [2, 265, 272, 277, 280, 282, 288], "categori": [2, 6, 18, 35, 39, 149, 239, 267, 272, 277, 280, 282, 287, 288, 299], "error_no": [2, 272, 277, 280, 282, 288], "2023": [2, 283], "03": [2, 272, 293, 295, 297], "402": 2, "messag": [2, 247, 265, 267, 272, 277, 280, 282, 288], "NEAR": [2, 282, 288], "ITS": [2, 14, 36, 174, 175, 265, 267, 282, 288], "boundari": [2, 265, 282, 288], "page": [3, 264, 266, 270, 277, 288, 289], "public": [3, 275], "modul": [3, 8, 265, 269, 285, 287, 291, 301], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 265, 274, 279, 283, 285, 287, 299], "relat": [3, 244, 248, 249, 265, 268, 297], "statement": [3, 4, 8, 18, 23, 33, 35, 37, 38, 39, 42, 43, 69, 123, 141, 142, 143, 155, 157, 161, 162, 168, 169, 170, 176, 177, 178, 182, 183, 186, 187, 188, 189, 190, 192, 195, 196, 199, 201, 202, 203, 204, 212, 265, 267, 272, 283, 287, 292, 300], "transform": [3, 18, 147, 168, 170, 172, 188, 201, 202, 203, 204, 265, 267, 279, 289, 295, 300], "manipul": [3, 25, 281, 285, 287, 289], "built": [3, 141, 267, 270, 281], "run": [3, 73, 145, 147, 216, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 248, 252, 263, 264, 265, 273, 279, 281, 283, 284, 286, 291, 292, 295, 297, 298, 300, 301], "packag": [3, 267, 275, 279, 281, 283, 290, 292, 301], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 26, 29, 37, 54, 55, 57, 82, 93, 104, 106, 113, 117, 121, 139, 168, 170, 179, 187, 188, 197, 198, 265, 267, 268, 283, 285, 287, 292, 298], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 268, 270, 281, 283, 285], "base": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 222, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 265, 272, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 295, 296, 297], "represent": [4, 253, 274, 279, 287, 289], "togeth": [4, 26, 169, 189, 270, 275, 278, 284, 296, 301], "sympi": [4, 6, 8, 17, 22, 26, 29, 33, 57, 82, 100, 113, 121, 122, 124, 125, 133, 139, 168, 170, 179, 188, 197, 275, 285, 292], "str": [4, 6, 7, 8, 10, 17, 22, 24, 26, 27, 29, 31, 33, 35, 36, 37, 38, 39, 44, 49, 57, 70, 71, 75, 76, 78, 82, 90, 96, 100, 103, 108, 116, 118, 121, 124, 125, 126, 133, 134, 139, 141, 144, 146, 147, 150, 151, 152, 154, 157, 158, 164, 168, 170, 173, 174, 178, 179, 184, 185, 187, 188, 190, 191, 197, 200, 201, 202, 203, 204, 207, 208, 213, 214, 216, 217, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 262, 265], "expr": [4, 9, 26, 29, 33, 113, 139, 179, 197, 198], "method": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 148, 152, 174, 175, 201, 229, 232, 244, 245, 246, 247, 248, 249, 250, 252, 264, 265, 267, 272, 275, 283, 285, 287, 292, 299, 301], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 26, 29, 268, 283, 292], "hand": [4, 8, 57], "side": [4, 8, 57, 172], "pop_cl": 4, "eta_cl": [4, 37, 39, 289], "rhs_symbol": [4, 8, 28], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 245, 247], "from_dict": [4, 5, 6, 7, 8, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 245, 247], "replac": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 30, 31, 47, 164, 173, 199, 265, 267, 274, 275, 287, 289], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 36, 174, 216, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 265], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 26, 28, 29, 285], "substitut": [4, 5, 7, 8, 16, 17, 22, 26, 28, 29, 283, 285, 287], "dict": [4, 5, 6, 10, 16, 17, 22, 25, 26, 29, 46, 61, 80, 81, 83, 84, 85, 89, 91, 93, 105, 106, 147, 163, 180, 181, 193, 209, 244, 245, 248, 249, 250, 252, 258, 274, 285], "old": [4, 29, 163, 265, 295], "new": [4, 6, 9, 10, 14, 17, 22, 24, 25, 26, 29, 30, 37, 39, 43, 44, 70, 74, 75, 86, 89, 90, 91, 163, 164, 168, 170, 178, 180, 184, 187, 188, 208, 209, 211, 254, 267, 268, 270, 274, 283, 288, 291, 295, 296, 299, 300], "pair": [4, 5, 8, 16, 17, 22, 26, 29, 35, 67, 240], "return": [4, 6, 8, 9, 10, 15, 18, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 254, 257, 258, 265, 283], "updat": [4, 9, 10, 18, 25, 29, 179, 197, 210, 211, 213, 265, 267, 270, 281, 283, 288, 289, 292, 296, 300, 301], "b": [4, 283, 288], "to_dict": [4, 5, 6, 7, 8, 14, 15, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 245, 247], "amount": [5, 6, 7, 8, 16, 105, 265, 274, 285], "admid": [5, 6, 7, 8, 16, 29, 42, 69, 123, 141, 161, 169, 176, 177, 182, 183, 186, 189, 192, 195, 196, 199, 285, 287], "dose": [5, 6, 7, 8, 9, 16, 40, 86, 93, 98, 99, 105, 109, 136, 159, 190, 265, 287, 300], "int": [5, 8, 16, 29, 33, 36, 41, 46, 57, 62, 68, 74, 98, 100, 110, 111, 124, 125, 133, 156, 164, 165, 166, 167, 168, 170, 174, 175, 186, 188, 192, 230, 231, 235, 237, 239], "administr": [5, 6, 16], "amt": [5, 7, 8, 10, 16, 29, 33, 42, 69, 78, 79, 92, 99, 105, 123, 141, 142, 143, 148, 149, 161, 169, 176, 177, 182, 183, 186, 189, 192, 195, 196, 199, 274, 285, 287, 289], "dictionari": [5, 10, 14, 16, 17, 22, 25, 26, 27, 30, 80, 81, 83, 84, 85, 93, 106, 164, 180, 181, 193, 244, 245, 248, 249, 250, 252, 258, 285], "unknown": [6, 139, 274], "unit": [6, 18, 121], "ratio": [6, 231, 237, 265, 267, 274, 296], "datatyp": [6, 18, 150], "float64": [6, 10, 56, 63, 64, 67, 82, 83, 84, 85, 99, 114, 274, 285, 286, 287], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29, 30, 31, 265], "colum": 6, "measur": [6, 268, 274, 283], "bool": [6, 18, 24, 27, 31, 33, 35, 44, 56, 66, 68, 75, 78, 86, 105, 109, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 164, 166, 178, 187, 188, 192, 210, 211, 213, 214, 228, 229, 242, 243, 245, 257], "discret": [6, 274, 282], "union": [6, 100, 124, 125, 133, 147, 168, 170, 179, 188, 197], "tupl": [6, 8, 26, 144, 164, 258], "label": [6, 265], "bar": [6, 278], "panda": [6, 10, 265, 275, 292], "dtype": [6, 10, 56, 61, 63, 64, 67, 68, 82, 83, 84, 85, 98, 99, 112, 114, 274, 285, 286, 287], "nomin": [6, 274], "ordin": [6, 274], "rang": [6, 27, 76, 299], "na": 6, "int8": 6, "sign": [6, 203, 283], "bit": 6, "128": 6, "int16": 6, "16": [6, 58, 81, 92, 97, 112, 188, 204, 220, 263, 264, 272, 274, 280, 282, 283, 284, 286, 287, 293, 295, 296, 297, 298], "768": 6, "767": 6, "int32": [6, 10, 274], "483": 6, "647": [6, 263, 280], "int64": [6, 112, 274], "223": [6, 273], "372": 6, "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 293], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 82, 98, 274, 286], "073": 6, "709": 6, "551": 6, "615": [6, 293], "float16": 6, "binari": [6, 283], "float": [6, 24, 33, 37, 43, 44, 48, 49, 67, 68, 71, 147, 160, 167, 187, 190, 201, 218, 219, 220, 222, 228, 229, 231, 233, 234, 236, 237, 265], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 79, 205, 265, 267, 285], "tran": [6, 79, 205, 265, 267, 285], "date": [6, 76, 79, 205, 265, 267, 283, 301], "common": [6, 35, 62, 258, 283, 287, 300], "birth": 6, "human": [6, 27, 292], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 274, 292], "concentr": [6, 95, 292], "substanc": 6, "blood": 6, "subject": [6, 14, 92, 102, 241, 283, 300], "uniqu": [6, 31, 47, 75, 164, 244, 254, 265, 267, 274, 299], "pd": [6, 15, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 76, 80, 81, 82, 83, 84, 85, 92, 94, 95, 97, 98, 99, 101, 107, 112, 114, 144, 145, 146, 147, 150, 164, 165, 166, 167, 210, 211, 218, 219, 220, 222, 239, 240, 241, 242, 247, 265, 274], "interv": [6, 274, 275], "ration": 6, "max": [6, 35, 182, 183, 263, 274], "datafram": [6, 15, 18, 25, 27, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 73, 76, 80, 81, 83, 84, 85, 92, 95, 97, 144, 145, 147, 150, 164, 165, 166, 167, 210, 218, 219, 220, 222, 239, 240, 241, 242, 247, 265, 274, 292], "idv": [6, 10, 190, 274, 295], "independ": [6, 8, 274, 283, 290, 295, 299], "dv": [6, 10, 29, 69, 78, 79, 92, 100, 114, 123, 124, 125, 133, 141, 145, 148, 149, 152, 168, 170, 182, 183, 188, 201, 265, 274, 285, 287, 289, 298], "dvid": [6, 18, 41, 100, 124, 125, 133, 168, 170, 173, 188, 285, 293, 295, 296], "infus": [6, 136, 189, 195, 265, 287], "addit": [6, 35, 37, 46, 75, 86, 124, 125, 133, 135, 168, 170, 188, 201, 265, 267, 272, 274, 277, 283, 295, 296, 299], "interdos": 6, "ss": 6, "steadi": [6, 265], "state": [6, 25, 35, 265, 283, 297], "event": [6, 101, 205, 265, 268, 283], "mdv": [6, 107, 265], "miss": [6, 92, 97, 265], "yet": [6, 299], "exactli": 6, "blq": [6, 201, 265], "unkown": 6, "hasn": 6, "custom": [6, 35, 37, 39, 178, 267, 283, 287, 292], "physic": [6, 121, 268, 274, 283], "recogn": [6, 185, 268, 283, 289], "without": [6, 9, 54, 55, 80, 81, 83, 84, 85, 104, 113, 117, 164, 246, 263, 265, 267, 270, 275, 283, 285], "static": [6, 10, 18], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 26, 27, 29, 32, 70, 123, 143, 192, 265, 267, 299], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 24, 26, 66, 67, 68, 100, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 265, 289, 299, 301], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 265, 267, 292], "properti": [6, 14, 17, 22, 24, 25, 30, 283, 285], "lag_tim": [7, 9, 265], "bioavail": [7, 9, 93, 265], "compartment": [7, 8, 265, 267, 285], "system": [7, 8, 9, 14, 23, 29, 32, 54, 55, 57, 77, 80, 81, 83, 84, 85, 104, 105, 113, 117, 128, 129, 132, 136, 179, 197, 199, 248, 265, 267, 269, 270, 281, 283, 285, 289, 300], "lag": [7, 9, 40, 106, 159, 265], "enter": [7, 283], "fraction": [7, 167, 263, 278], "bolu": [7, 8, 29, 42, 69, 123, 141, 161, 169, 176, 177, 182, 183, 186, 192, 196, 199, 265, 267, 285], "comp": [7, 8, 265], "a_centr": [7, 8, 29, 69, 77, 105, 123, 141, 179, 182, 183, 188, 196, 285], "depot": [7, 8, 9, 176, 189, 192, 265, 287, 299], "alag": [7, 265], "a_depot": [7, 8], "builder": [8, 9], "graph": [8, 253, 267, 270], "odesystem": [8, 29, 265], "od": [8, 14, 23, 29, 32, 43, 54, 55, 57, 80, 81, 83, 84, 85, 104, 105, 113, 117, 128, 129, 132, 136, 179, 185, 197, 199, 265, 267, 300], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 192, 299], "k21": [8, 299], "vector": [8, 17, 122, 165, 166, 167, 264, 278, 285], "load_example_model": [8, 10, 15, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 265, 279], "pprint": [8, 113], "ode_system": [8, 29, 42, 161, 169, 176, 177, 182, 183, 186, 189, 192, 195, 196, 199, 265, 285], "central_compart": 8, "outward": 8, "flow": [8, 9, 41, 42, 253, 283], "compartment_nam": 8, "compartmental_matrix": [8, 285], "matrix": [8, 17, 26, 50, 51, 52, 53, 57, 59, 60, 62, 63, 64, 67, 122, 165, 166, 167, 197, 264, 265, 267, 278, 285], "set_first_order_absorpt": [8, 43, 169, 189, 195, 265, 287], "dosing_compart": 8, "receiv": [8, 283], "equat": [8, 57, 77, 285], "peripheral_compart": 8, "perihper": 8, "zero_order_input": 8, "zero": [8, 9, 68, 122, 136, 137, 143, 179, 189, 195, 196, 197, 265, 282, 288, 290, 299], "set_zero_order_absorpt": [8, 169, 176, 189, 265, 287, 301], "atom": 8, "http": [8, 264, 274, 275, 278, 279, 283, 296], "doc": [8, 270], "org": [8, 264, 266, 274, 278, 283, 296], "latest": [8, 265, 275, 279], "core": [8, 279, 285, 287], "html": [8, 215, 275, 283, 287], "basic": [8, 27, 71, 72, 265, 274, 283, 289, 299, 300], "find_compart": [8, 9], "its": [8, 24, 29, 68, 76, 143, 211, 240, 265, 267, 269, 274, 275, 279, 281, 283, 285, 301], "found": [8, 25, 239, 263, 264, 265, 270, 273, 276, 278, 280, 282, 283, 285, 286, 288, 295, 296, 299, 300, 301], "find_depot": 8, "out": [8, 26, 66, 211, 265, 269, 283, 285, 291, 301], "find_transit_compart": 8, "chain": [8, 287], "singl": [8, 10, 24, 26, 200, 205, 217, 235, 239, 242, 244, 265, 267, 275, 278, 283, 287, 299], "distinguish": [8, 283], "get_bidirect": 8, "bidirect": 8, "interest": [8, 57, 268, 272, 283, 287, 292], "get_compartment_inflow": 8, "go": [8, 124, 125, 133, 235, 242, 265, 274, 283], "inflow": 8, "get_compartment_outflow": 8, "outflow": 8, "get_flow": 8, "destin": [8, 9, 213, 214, 244, 248, 249, 267], "ka": [8, 9, 38, 176, 189, 265, 282], "get_n_connect": 8, "connect": [8, 18, 244, 246, 265, 267, 274, 283, 292, 299, 300], "compartmentalsystem": [9, 265], "newli": [9, 26, 282], "move_dos": 9, "move": [9, 211, 265], "anoth": [9, 18, 29, 254, 287], "remove_compart": 9, "remove_flow": 9, "set_bioavail": 9, "set_dos": 9, "set_input": 9, "set_lag_tim": [9, 265], "force_absolute_path": 10, "sequenc": [10, 15, 25, 26, 29, 73], "metadata": [10, 244, 245, 248, 249, 250, 252, 265], "index": [10, 18, 25, 26, 27, 29, 36, 46, 57, 62, 67, 68, 99, 114, 156, 174, 175, 239, 242, 264, 265, 274, 278, 279, 285, 297, 301], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 76], "idv_column": 10, "apgr": [10, 29, 33, 35, 69, 78, 79, 92, 97, 109, 123, 126, 141, 142, 143, 148, 149, 207, 274, 278, 285, 287, 289, 295], "fa1": [10, 78, 79, 92, 148, 149, 274, 285, 287], "fa2": [10, 78, 79, 92, 148, 149, 274, 285], "example_model": 10, "dta": [10, 148, 285, 287, 289], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "correct": [10, 18, 265, 283, 287, 301], "read_json": 10, "read": [10, 150, 151, 152, 223, 224, 229, 243, 244, 245, 248, 249, 250, 252, 265, 269, 274, 279, 283, 291, 292, 294, 299, 300], "set_column": 10, "col": 10, "exist": [10, 29, 35, 46, 47, 72, 75, 96, 98, 244, 245, 246, 265, 267, 269, 274, 282, 299], "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 27, 274, 287], "recover": 12, "issu": [12, 21, 265, 270, 281, 301], "hashabl": 13, "level": [13, 17, 22, 26, 30, 31, 103, 134, 265, 267, 274, 281, 285, 287, 292, 297, 299], "variabilitylevel": 13, "parameter_nam": [13, 26, 90, 206, 208, 265, 287, 289], "definit": [13, 14, 18, 29, 58, 166, 167, 220, 265, 267, 272, 278, 283, 285, 299], "varianc": [13, 17, 22, 26, 56, 57, 62, 178, 211, 280, 285, 287, 299], "abstract": [13, 23, 28, 248, 252, 264, 266, 275, 281, 285], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 26], "name1": [13, 17, 22, 146], "name2": [13, 17, 22, 146], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 285, 287], "cov": [14, 15, 26, 34, 35, 36, 50, 57, 58, 60, 62, 63, 153, 166, 174, 175, 264, 265, 270, 277, 278, 287], "evalu": [14, 36, 80, 81, 82, 83, 84, 85, 174, 175, 242, 263, 265, 281, 292, 295, 298], "maximum_evalu": [14, 277], "laplac": [14, 36, 174, 175, 265, 267, 277], "isampl": [14, 36, 46, 174, 265, 277], "niter": [14, 36, 46, 174, 265, 277], "auto": [14, 15, 265, 277], "keep_every_nth_it": [14, 15, 265, 277], "residu": [14, 26, 85, 119, 219, 220, 240, 265, 296, 298, 299], "solver": [14, 185, 232, 265, 267, 299], "solver_rtol": 14, "solver_atol": 14, "tool_opt": [14, 15, 36, 46, 174, 299], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 35, 37, 70, 76, 249, 250, 267, 269, 270, 272, 275, 283, 285, 287, 291], "uncertainti": [14, 57, 58, 62, 165, 166, 167, 265, 267, 278, 286], "epsilon": [14, 26, 54, 55, 80, 81, 149, 178, 187, 194, 201, 212, 265, 267, 275], "calcul": [14, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 82, 95, 222, 263, 264, 265, 278, 280, 281, 282, 288, 300], "deriv": [14, 121, 265, 270, 272], "eta": [14, 26, 29, 37, 39, 54, 55, 56, 58, 73, 80, 81, 83, 143, 147, 148, 149, 152, 157, 158, 178, 200, 202, 203, 204, 265, 267, 275, 278, 280, 282, 285, 289, 295, 299, 300], "preserv": [14, 26, 283], "comput": [14, 270, 271, 272, 283], "sampl": [14, 26, 74, 164, 165, 166, 167, 278], "similar": [14, 263, 277, 283, 288, 296], "em": 14, "result": [14, 18, 26, 73, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 248, 249, 250, 252, 254, 257, 265, 268, 270, 281, 283, 289, 291, 292, 294, 300], "everi": [14, 274, 283], "nth": 14, "iter": [14, 15, 29, 57, 144, 164, 166, 265, 293, 296], "laplacian": 14, "solv": [14, 265], "advan": [14, 185, 265], "cvode": [14, 185, 267], "advan14": [14, 185, 267], "dgear": [14, 185, 267], "advan8": [14, 185, 267], "dverk": [14, 185, 267], "advan6": [14, 185, 267], "ida": [14, 185, 267], "advan15": [14, 185, 267], "lsoda": [14, 185, 267, 277], "advan13": [14, 185, 267, 287], "lsodi": [14, 185, 267, 277], "advan9": [14, 185, 267], "absolut": [14, 67, 265, 283], "toler": 14, "supported_method": [14, 277], "frozenset": 14, "bay": [14, 174, 175, 267], "imp": [14, 36, 174, 175, 232, 265, 267, 277], "impmap": [14, 36, 174, 175, 265, 267], "saem": [14, 36, 174, 175, 232, 265, 267], "supported_solv": [14, 277], "to_datafram": [15, 25, 247], "overview": [15, 247, 263, 267, 276, 297], "estimation_step": [15, 18, 34, 36, 46, 153, 156, 174, 175, 265], "doctest": [15, 270], "ellipsi": 15, "durat": [16, 189, 195], "mutual": [16, 282, 299], "exclus": [16, 283, 299], "d1": [16, 189, 195, 265], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 26, 39, 73, 200, 278, 282, 285, 300], "omega_cl": [17, 22, 26], "omega_v": [17, 26], "corr_cl_v": [17, 26], "omega_cl_v": [17, 26], "dist": [17, 22, 26, 265, 270], "iiv_cl": [17, 22, 26, 289], "iiv_v": [17, 26, 287], "itself": [17, 22, 283], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 26], "random_vari": [18, 73, 200, 285, 287, 301], "dependent_vari": [18, 265, 285], "observation_transform": [18, 265], "estimationstep": [18, 34, 36, 153, 174, 175, 265, 277], "modelfit_result": [18, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 80, 81, 82, 83, 84, 85, 165, 166, 167, 210, 211, 220, 228, 229, 230, 231, 232, 233, 234, 236, 237, 242, 265, 285, 286, 287], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 270, 285, 287, 289, 292], "map": [18, 32, 274], "discript": 18, "extens": [18, 244, 246, 274, 283, 285], "model_cod": [18, 265, 287], "modelfit": [18, 235, 242, 244, 248, 249, 263, 265, 267, 300], "parent": [18, 240, 241, 254, 277], "randomvari": [18, 265], "likelihood": [18, 48, 49, 231, 237, 267, 296], "2ll": [18, 48, 49, 265], "log": [18, 35, 37, 49, 143, 168, 170, 172, 188, 265, 274, 278, 287], "record": [18, 80, 81, 82, 83, 84, 85, 86, 144, 160, 265, 270, 289], "would": [18, 31, 143, 263, 272, 278, 283, 287, 289, 292], "create_model": 18, "factori": 18, "io": [18, 270, 275, 279], "implement": [18, 244, 246, 248, 249, 283, 285, 292, 299], "g": [18, 26, 69, 75, 158, 236, 265, 270, 274, 277, 278, 280, 282, 287, 288, 292, 296, 299], "nonmem7": 18, "has_same_dataset_a": 18, "update_sourc": [18, 265, 289], "dummypath": [18, 287], "write_fil": 18, "forc": [18, 26, 75, 166, 167, 210, 213, 214, 265, 267, 282, 283], "write": [18, 213, 214, 243, 265, 270, 272, 283, 291, 300], "necessari": [18, 270, 283], "msg": 20, "syntax": [20, 299], "normal": [22, 26, 31, 39, 61, 65, 143, 278, 282, 283], "init": [24, 25, 35, 44, 91, 180, 209, 211, 267, 278, 285], "inf": [24, 51, 53, 64, 285], "param": [24, 267], "tvcl": [24, 29, 33, 37, 39, 69, 82, 123, 141, 142, 143, 148, 149, 157, 263, 278, 285, 287, 289], "005": 24, "boolean": [24, 25, 86, 90, 91, 164, 172, 178, 208, 209, 218, 219, 220, 274], "constrain": [24, 275, 285], "unfix": [24, 89, 90, 91, 180, 206, 208, 209, 265], "back": [24, 65, 265], "previou": [24, 26, 29, 40, 73, 98, 123, 176, 189, 192, 195, 229, 241, 257, 265, 267, 283, 288, 300], "less": 24, "greater": 24, "altern": [24, 203, 270, 283, 287], "constructor": [24, 265], "collect": [25, 26, 278, 283, 287, 299], "usual": [25, 270], "wai": [25, 127, 130, 131, 137, 201, 270, 274, 277, 283, 285, 287, 299, 301], "displai": [25, 77, 168, 278, 283, 287], "summar": [25, 239, 241, 242, 278, 284], "par1": 25, "par2": 25, "y": [25, 29, 69, 100, 121, 123, 141, 148, 149, 152, 155, 168, 170, 178, 187, 188, 190, 201, 212, 285, 287, 289], "pset": 25, "fixed": [25, 89], "nonfix": 25, "set_fix": 25, "set_initial_estim": [25, 265], "eta_level": 26, "epsilon_level": 26, "act": [26, 173], "while": [26, 270, 287, 299, 301], "variabilityhierarchi": 26, "contin": 26, "hierarchi": [26, 30], "rv": [26, 73, 118, 162, 200, 285, 301], "normaldistribut": 26, "covariance_matrix": [26, 50, 57, 60, 62, 63, 166, 263, 265, 285, 286], "nrv": 26, "variance_paramet": 26, "rv1": 26, "rv2": 26, "get_rvs_with_same_dist": 26, "join": [26, 200, 265, 268, 287], "ind": 26, "fill": 26, "name_templ": 26, "param_nam": 26, "taken": [26, 86, 92, 97, 205, 244, 274, 278], "remain": [26, 268, 283], "templat": [26, 35, 37, 72, 269, 287], "overrid": [26, 265, 269, 299], "dist1": 26, "dist2": 26, "_": [26, 241, 264, 278], "unjoin": 26, "nearest_valid_paramet": 26, "parameter_valu": 26, "small": 26, "parameters_sdcorr": 26, "sd": [26, 56, 287, 295, 298], "corr": [26, 52, 59, 295], "assum": [26, 41, 244, 265, 278, 283, 289], "var": [26, 58, 278], "replace_with_sympy_rv": 26, "stat": [26, 29, 299], "std": [26, 287], "rng": [26, 57, 62, 74, 165, 166, 167], "jointnormaldistribut": 26, "validate_paramet": 26, "seri": [26, 52, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 82, 83, 84, 85, 94, 98, 99, 101, 107, 112, 114, 146, 147, 166, 167, 168, 203, 211, 265, 286], "current": [26, 36, 37, 54, 55, 69, 70, 80, 81, 83, 84, 85, 104, 113, 117, 136, 141, 169, 174, 175, 189, 199, 201, 205, 222, 231, 235, 248, 254, 264, 265, 267, 270, 272, 273, 278, 279, 281, 282, 283, 284, 285, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299], "matric": [26, 58, 167, 265, 275, 286], "semidefinit": [26, 265, 275], "use_cach": 26, "symengin": [26, 275, 292], "cach": 26, "__version__": 27, "95": [27, 57, 263, 278], "get_and_reset_index": 27, "attr": 27, "wrapper": [27, 265, 270, 275, 279, 301], "reset": [27, 205, 265], "facilit": 27, "multiindex": [27, 265], "to_csv": [27, 287], "save": [27, 243, 265, 287], "readabl": [27, 246, 248, 274, 283, 292], "print": [27, 66, 148, 149, 221, 265, 285, 287], "lzma": [27, 243], "serial": [27, 265, 274, 292], "compress": [27, 243], "unless": [27, 29, 283], "signific": [29, 68, 233, 234, 236, 265, 283, 297], "after_od": [29, 188], "s\u2081": [29, 33, 69, 123, 141, 142, 143, 149, 188, 285], "eps\u2081": [29, 69, 113, 123, 141, 149, 155, 168, 178, 187, 190, 201, 212, 285, 287], "ipr": [29, 69, 83, 123, 141, 148, 149, 187, 188, 265, 285, 286, 298], "ir": [29, 69, 123, 141, 148, 149, 188, 285], "iwr": [29, 69, 123, 141, 148, 149, 188, 285], "before_od": [29, 33, 35, 142, 143, 202, 203, 204], "btime": [29, 33, 69, 123, 141, 142, 143, 148, 149, 285], "tad": [29, 33, 45, 69, 123, 141, 142, 143, 148, 149, 265, 274, 285, 295], "ptvcl": [29, 33, 35, 44, 50, 51, 52, 53, 59, 60, 61, 63, 64, 67, 68, 69, 89, 90, 91, 120, 123, 141, 142, 143, 148, 149, 166, 167, 180, 181, 193, 198, 202, 203, 204, 206, 208, 209, 211, 285, 286], "tvv": [29, 33, 69, 123, 141, 142, 143, 148, 149, 157, 263, 278, 285, 287, 289], "ptvv": [29, 33, 44, 50, 51, 52, 53, 59, 60, 61, 63, 64, 67, 68, 69, 120, 123, 141, 142, 143, 148, 149, 166, 167, 208, 209, 211, 285, 286], "theta\u2083": [29, 33, 69, 123, 141, 142, 143, 149, 285], "eta\u2081": [29, 33, 69, 73, 113, 123, 141, 142, 143, 149, 200, 285, 287], "\u212f": [29, 33, 43, 69, 123, 141, 142, 143, 178, 285], "eta\u2082": [29, 33, 69, 73, 113, 123, 141, 142, 143, 149, 200, 285, 287], "whole": [29, 267, 274, 283, 299], "s1": [29, 134, 148, 285, 287, 289], "symbol_or_stat": 29, "direct_depend": 29, "direct": [29, 253, 272, 283, 297], "find_assign": [29, 37, 38, 39, 43, 155, 157, 168, 170, 178, 187, 190, 201, 212, 287], "find_assignment_index": 29, "full_express": [29, 35, 202, 203, 204], "expand": [29, 86], "full": [29, 73, 104, 113, 117, 191, 264, 265, 267, 278, 282, 283, 288, 295], "eta_1": [29, 35, 54, 56, 58, 73, 104, 118, 143, 165, 200, 202, 203, 204, 278, 285, 286, 287], "reassign": 29, "sypmpi": 29, "remove_symbol_definit": 29, "elsewher": 29, "longer": [29, 265], "make": [29, 69, 142, 155, 163, 164, 231, 265, 275, 282, 283, 285, 287, 288, 299, 301], "sure": [29, 163, 265, 283, 288, 301], "compartmen": 32, "func": [32, 251], "p": [33, 222, 231, 237, 263, 264, 265, 267, 272, 278, 287, 296, 297], "allometri": [33, 228, 229, 265, 299], "allo_cl": 33, "allo_v": 33, "set_estimation_step": [34, 36, 46, 153, 156, 175, 265, 301], "add_estimation_step": [34, 46, 153, 156, 174, 175, 265], "remove_estimation_step": [34, 36, 46, 153, 174, 175], "append_estimation_step_opt": [34, 36, 153, 156, 174, 175, 265], "remove_covariance_step": [34, 36, 46, 156, 174, 175, 265], "set_evaluation_step": [34, 36, 46, 153, 156, 174], "allow_nest": [35, 265], "linear": [35, 128, 129, 138, 263, 264, 265, 275, 285, 292, 294], "lin": 35, "coveff": [35, 75], "median": [35, 57, 62, 263, 265, 287, 292], "001": [35, 68, 211, 287, 297], "equal": [35, 39, 164, 178, 267, 270, 287], "minimum": [35, 275], "000": [35, 286], "frac": [35, 168, 170, 264, 285, 287, 298], "min": [35, 168, 170, 263, 274], "piecewis": [35, 265], "hockei": 35, "stick": 35, "piece_lin": 35, "theta1": [35, 287], "theta2": [35, 287], "pow": [35, 287], "mai": [35, 280, 282, 283, 287, 288, 299], "abbrevi": [35, 37, 265, 267, 270, 289], "multipli": [35, 37, 178, 263, 267, 287], "alreadi": [35, 72, 173, 179, 197, 265, 267, 270, 282, 283, 287], "pop_clapgr": 35, "idx": [36, 46, 156, 174, 175, 301], "argument": [36, 80, 81, 83, 84, 85, 174, 216, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 251, 265, 267, 287, 299, 301], "pass": [36, 74, 174, 216, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 254, 283], "opt": [36, 46, 174, 269], "1000": [36, 46, 82, 174, 278], "len": [36, 46, 156, 160], "add_covariance_step": [36, 46, 153, 156, 174, 175, 265], "initial_estim": [37, 43], "09": [37, 43, 170, 178, 188, 272, 280, 287, 288, 289, 293], "eta_nam": [37, 39, 178, 267, 287], "prop": [37, 287], "logit": 37, "user": [37, 96, 265, 275, 280, 282, 283, 285, 286, 287, 288, 289], "remove_iiv": [37, 39, 43, 158, 265, 287, 289], "add_pk_iiv": [37, 39, 157, 158, 265, 288], "add_iov": [37, 43, 157, 158, 265, 287], "remove_iov": [37, 39, 43, 157, 265, 287], "pop_ka": [38, 44], "occ": [39, 234, 267, 272, 282], "disjoint": [39, 282], "accept": [39, 110, 111, 112, 267, 283], "explicit": [39, 265, 267, 268, 282, 299], "copi": [39, 115, 119, 120, 265, 280, 282, 283, 299], "add_iiv": [39, 43, 157, 158, 265, 287, 289], "set_transit_compart": [40, 159, 265, 287], "remove_lag_tim": [40, 265, 287], "drug_dvid": 41, "metabolit": 41, "unidirect": 41, "parameter": 42, "qpn": 42, "vpn": 42, "volumn": 42, "mathsf": [42, 161], "qp1": [42, 161, 265, 287], "vp1": [42, 161, 287], "cdot": [42, 161, 278, 285, 287], "qp2": [42, 161, 265], "vp2": [42, 161], "peripheral1": [42, 161, 186], "v1": [42, 161, 186, 287], "v2": [42, 161, 186], "set_peripheral_compart": [42, 161, 265, 287], "remove_peripheral_compart": [42, 186, 265, 287], "Will": [43, 244, 245, 246], "pop_mat": [43, 287, 289], "eta_mat": 43, "004693": [44, 61, 120, 278, 285], "1000000": [44, 89, 90, 91, 120, 180, 181, 206, 209, 285, 287], "009160": [44, 120, 285], "theta_3": [44, 50, 51, 52, 53, 59, 60, 61, 63, 64, 67, 68, 120, 166, 167, 208, 209, 211, 285, 286], "100000": [44, 120, 277, 285, 287], "99": [44, 120, 148, 211, 263, 265, 272, 285], "ivcl": [44, 50, 51, 52, 53, 59, 60, 61, 63, 64, 67, 68, 73, 115, 148, 149, 166, 167, 200, 209, 211, 263, 278, 285, 286, 287, 289], "030963": [44, 115, 278, 285], "ivv": [44, 50, 51, 52, 53, 59, 60, 61, 63, 64, 67, 68, 73, 115, 148, 149, 166, 167, 200, 209, 211, 263, 278, 285, 286, 287], "031128": [44, 115, 148, 211, 278, 285, 287, 289], "sigma_1_1": [44, 50, 51, 52, 53, 59, 60, 61, 63, 64, 68, 119, 166, 167, 209, 211, 285, 286, 287], "013241": [44, 119, 148, 211, 278, 285, 286, 287], "append": [46, 265], "increas": [47, 270], "until": [47, 242, 283, 301], "do": [47, 166, 263, 265, 267, 278, 283, 287, 289, 296, 301], "noth": [47, 160, 283], "next": [47, 265, 283, 288, 289, 296], "run2": [47, 184, 287], "run3": 47, "n_estimated_paramet": [48, 49], "fit": [48, 49, 147, 201, 211, 221, 235, 240, 242, 248, 265, 283, 285, 296, 300, 301], "variat": 49, "n_random_paramet": 49, "n_individu": 49, "n_fixed_paramet": 49, "n_observ": 49, "n_individ": 49, "n_estimated_iiv_omega_paramet": 49, "611": 49, "7071686183284": 49, "616": [49, 265, 286], "536606983396": 49, "610": 49, "7412809453149": 49, "594": 49, "431131169692": 49, "411510e": [50, 53, 60, 63, 285, 286], "08": [50, 52, 53, 60, 63, 272, 285, 286], "010000e": [50, 53, 60, 63, 285, 286], "000002": [50, 52, 53, 60, 63, 285, 286], "538630e": [50, 52, 53, 60, 63, 285, 286], "07": [50, 51, 52, 53, 59, 60, 63, 64, 263, 272, 280, 282, 285, 286, 295, 297], "178090e": [50, 53, 60, 63, 285, 286], "233530e": [50, 53, 60, 63, 285, 286], "04": [50, 51, 52, 53, 59, 60, 63, 64, 263, 272, 282, 285, 286, 295, 297], "000804": [50, 52, 53, 60, 63, 272, 285, 286], "000050": [50, 52, 53, 60, 63, 263, 285, 286], "171840e": [50, 53, 60, 63, 285, 286], "461760e": [50, 53, 60, 63, 285, 286], "665010e": [50, 53, 60, 63, 285, 286], "040250e": [50, 53, 60, 63, 285, 286], "007016": [50, 52, 53, 60, 63, 285, 286], "000108": [50, 52, 53, 60, 63, 285, 286], "944800e": [50, 53, 60, 63, 285, 286], "932950e": [50, 53, 60, 63, 285, 286], "093430e": [50, 53, 60, 63, 285, 286], "981380e": [50, 52, 53, 60, 63, 285, 286], "000180": [50, 52, 53, 60, 63, 285, 286], "856650e": [50, 53, 60, 63, 285, 286], "867230e": [50, 53, 60, 63, 285, 286], "000039": [50, 52, 53, 60, 63, 285, 286], "000019": [50, 52, 53, 60, 63, 285, 286], "589820e": [50, 52, 53, 60, 63, 285, 286], "685650e": [50, 53, 60, 63, 285, 286], "000029": [50, 52, 53, 60, 63, 285, 286], "000005": [50, 52, 53, 60, 63, 285, 286], "195640e": [50, 53, 60, 63, 285, 286], "007099": [50, 51, 52, 59, 286], "094640": [50, 51, 52, 59, 286], "388059": [50, 51, 52, 59, 67], "097981": [50, 51, 52, 59, 286], "170820": [50, 51, 52, 59, 286], "356899": [50, 51, 52, 59, 67], "138062": [50, 51, 52, 59, 286], "356662": [50, 51, 52, 59, 67, 286], "238441": [50, 51, 52, 59], "096515": [50, 51, 52, 59], "062991": [50, 51, 52, 59, 286], "153616": [50, 51, 52, 59, 286], "185111": [50, 51, 52, 59, 286], "159170": [50, 51, 52, 59, 286], "027495": [50, 51, 52, 59, 286], "calculate_se_from_cov": [50, 51, 52, 53, 59, 60, 64, 265], "calculate_se_from_inf": [50, 51, 52, 53, 59, 60, 63, 265], "calculate_cov_from_inf": [50, 51, 52, 59, 60, 63, 64, 265], "calculate_cov_from_corrs": [50, 51, 53, 59, 60, 63, 64, 265], "calculate_inf_from_cov": [50, 51, 52, 53, 59, 63, 64, 265], "calculate_inf_from_corrs": [50, 51, 52, 53, 60, 63, 64, 265], "calculate_corr_from_inf": [50, 52, 53, 59, 60, 63, 64, 265], "information_matrix": [51, 53, 64, 286], "995567e": [51, 53, 60, 64], "22660": [51, 53, 59, 60, 64, 286], "028196": [51, 53, 60, 64], "16057": [51, 53, 59, 60, 64, 286], "855248": [51, 53, 60, 64], "203511": [51, 53, 59, 60, 64, 286], "614428": [51, 53, 60, 64], "39474": [51, 53, 59, 60, 64, 286], "250514": [51, 53, 60, 64], "820118": [51, 53, 60, 64], "299536": [51, 53, 60, 64], "266003e": [51, 53, 60, 64], "2129": [51, 53, 59, 60, 64, 286], "904642": [51, 53, 60, 64], "260": [51, 53, 59, 60, 64, 286], "176234": [51, 53, 60, 64], "375": [51, 53, 59, 60, 64, 286], "266233": [51, 53, 60, 64], "2800": [51, 53, 59, 60, 64, 286], "816246": [51, 53, 60, 64], "7718": [51, 53, 59, 60, 64, 286], "769557": [51, 53, 60, 64], "605786e": [51, 53, 60, 64], "187": [51, 53, 59, 60, 64, 286], "038903": [51, 53, 60, 64], "177": [51, 53, 59, 60, 64, 265, 286, 297], "207683": [51, 53, 60, 64], "205": [51, 53, 59, 60, 64, 286], "808480": [51, 53, 60, 64], "2225": [51, 53, 59, 60, 64, 286, 287], "150449": [51, 53, 60, 64], "035116e": [51, 53, 60, 64], "7527": [51, 53, 59, 60, 64, 286], "530027": [51, 53, 60, 64], "2462": [51, 53, 59, 60, 64, 286], "974821": [51, 53, 60, 64], "9977": [51, 53, 59, 60, 64, 286], "488860": [51, 53, 60, 64], "947425e": [51, 53, 60, 64], "22343": [51, 53, 59, 60, 64, 286], "198618": [51, 53, 60, 64], "9370": [51, 53, 59, 60, 64, 286], "758371": [51, 53, 60, 64], "201183e": [51, 53, 60, 64], "249847": [51, 53, 60, 64, 286], "177845": [51, 53, 60, 64], "calculate_corr_from_cov": [51, 52, 53, 59, 60, 63, 64, 265], "se": [52, 59, 271, 272, 285, 286], "correlation_matrix": [52, 59, 67, 286], "standard_error": [52, 59, 285, 286], "411512e": 52, "009998e": 52, "178111e": 52, "233518e": 52, "171834e": 52, "461762e": 52, "665011e": 52, "040245e": 52, "944801e": 52, "932957e": 52, "093431e": 52, "856651e": 52, "867245e": 52, "685661e": 52, "195664e": 52, "gradient": [54, 55, 80, 81, 265], "pheno_linear": [54, 55, 80, 81, 83, 84, 85, 104, 113, 117, 138, 141, 222], "d_eps1": [54, 113], "d_epseta1_1": [54, 113], "oeta1": [54, 104, 117], "d_epseta1_2": [54, 113], "eta_2": [54, 56, 58, 73, 104, 165, 200, 286, 287], "oeta2": [54, 104, 117], "calculate_eta_gradient_express": [54, 265], "d_eta1": [55, 104, 113, 117], "d_eta2": [55, 104, 113, 117], "calculate_epsilon_gradient_express": [55, 265], "parameter_estim": [56, 57, 58, 62, 68, 82, 84, 85, 147, 166, 167, 211, 263, 265, 285, 286, 287], "individual_estim": [56, 73, 80, 81, 83, 147, 165, 210, 265, 286, 287], "shrinkag": [56, 58, 300], "deviat": [56, 212, 263, 278, 284, 286, 295, 298], "pe": [56, 57, 58, 62, 82, 84, 166, 167, 287], "ie": [56, 165, 210, 287], "720481": 56, "240295": 56, "471305": 56, "128389": 56, "calculate_individual_shrinkag": [56, 265], "expr_or_expr": 57, "expect": [57, 62, 268, 283, 295], "arbitrari": [57, 62], "solut": [57, 199], "th": [57, 264, 278], "percentil": [57, 263, 278], "previous": [57, 62, 145, 147, 211, 265, 289], "seed": [57, 62, 74, 165, 167, 267], "create_rng": [57, 62, 165, 166, 167], "k": [57, 264, 265, 270, 272, 278], "stderr": [57, 62, 263, 299], "p5": [57, 62, 278], "004234": [57, 62], "001138": [57, 62], "004907": [57, 62], "001247": [57, 62], "p95": [57, 62, 278], "individual_estimates_covari": [58, 165, 265, 286], "ieta_shr": 58, "847789": 58, "256473": 58, "796643": 58, "210669": 58, "755025": 58, "226957": 58, "764541": 58, "216405": 58, "816192": 58, "203974": 58, "778108": 58, "210992": 58, "659420": 58, "236875": 58, "668551": 58, "240097": 58, "260056": 58, "200374": 58, "725190": 58, "226563": 58, "972110": 58, "421852": 58, "249640": 58, "254119": 58, "730294": 58, "364932": 58, "165785": 58, "194464": 58, "813399": 58, "313554": 58, "797328": 58, "213211": 58, "769059": 58, "278079": 58, "098506": 58, "176778": 58, "749022": 58, "235386": 58, "742181": 58, "222932": 58, "317956": 58, "264473": 58, "943950": 58, "232732": 58, "707183": 58, "259077": 58, "553787": 58, "247717": 58, "826349": 58, "114302": 58, "854777": 58, "341384": 58, "820829": 58, "263235": 58, "999942": 58, "319986": 58, "967084": 58, "432760": 58, "404773": 58, "325215": 58, "999980": 58, "318421": 58, "925283": 58, "167667": 58, "913706": 58, "242106": 58, "875554": 58, "249197": 58, "35": [58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 296, 298], "849135": 58, "294294": 58, "172206": [58, 298], "246422": 58, "747380": 58, "278340": 58, "187440": 58, "231249": 58, "237805": 58, "254485": 58, "999925": 58, "189793": 58, "41": [58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 295, 298], "941906": 58, "170998": 58, "42": [58, 62, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 288, 297, 298], "923801": 58, "244046": 58, "43": [58, 92, 97, 112, 220, 263, 264, 272, 274, 277, 284, 286, 297, 298], "999928": 58, "320403": 58, "237637": 58, "260453": 58, "869540": 58, "194503": 58, "46": [58, 92, 97, 112, 220, 263, 264, 274, 277, 284, 286, 298], "999949": 58, "319750": 58, "983782": 58, "393234": 58, "48": [58, 92, 97, 99, 112, 220, 263, 264, 272, 274, 284, 286, 296, 297, 298], "698267": 58, "169337": 58, "49": [58, 92, 97, 112, 220, 263, 264, 274, 284, 286, 298], "776674": 58, "214962": 58, "50": [58, 92, 97, 112, 220, 263, 264, 274, 284, 286, 288, 293, 295, 298], "688847": 58, "192608": 58, "822213": 58, "202534": 58, "511489": 58, "273601": 58, "53": [58, 92, 97, 112, 220, 263, 264, 272, 274, 284, 286, 293, 295, 298], "964757": 58, "223448": 58, "762153": 58, "181648": 58, "965657": 58, "435741": 58, "995278": 58, "354798": 58, "813382": 58, "263372": 58, "727295": 58, "232867": 58, "738777": 58, "224742": 58, "calculate_eta_shrinkag": [58, 265, 287], "995565e": 59, "041788": 59, "848052": 59, "410335": 59, "240358": 59, "820116": [59, 286], "179011": 59, "266004e": 59, "908225": 59, "176399": 59, "266263": 59, "818557": 59, "757955": 59, "605785e": 59, "038825": 59, "207512": 59, "808434": 59, "144772": 59, "035114e": 59, "518562": 59, "972906": 59, "457873": 59, "947424e": 59, "197906": 59, "736254": 59, "201162e": 59, "249846": 59, "006431": 59, "ucp": [61, 65], "ucpscal": [61, 65], "calculate_ucp_scal": [61, 265], "00916": [61, 148, 211, 278, 285, 287, 289], "0309626": [61, 148, 211, 285, 287, 289], "031127999999999996": 61, "013241000000000001": 61, "convers": [61, 265, 281], "pharmacokinet": [62, 201, 274], "pre": 62, "t_half_elim": 62, "173": 62, "337164": 62, "1769": 62, "493756": 62, "843398": 62, "149": [62, 282], "567842": 62, "1317": [62, 272], "474199": 62, "233070": 62, "k_e": 62, "calculate_individual_parameter_statist": [62, 265, 287], "000210": [63, 64, 285, 286], "026895": [63, 64, 285, 286], "083762": [63, 64, 285, 286], "013415": [63, 64, 285, 286], "007477": [63, 64, 285, 286], "002279": [63, 64, 285, 286], "unconstrain": 65, "calculate_parameters_from_ucp": [65, 265], "verbos": 66, "consist": [66, 272, 283, 299], "across": [66, 265, 283], "consol": 66, "els": [66, 265], "fail": [66, 265, 283, 292], "cor": [67, 270], "highli": 67, "high": [67, 274, 275, 292], "zero_limit": 68, "significant_digit": [68, 265], "close": [68, 211, 265, 278, 283, 284], "distanc": [68, 76, 298], "logic": 68, "cleanup": 69, "what": [69, 283, 289, 292], "inlin": 69, "clean": 69, "might": [69, 283, 287, 292, 299, 301], "certain": [69, 100, 144, 265, 282, 283, 287, 291, 299], "requir": [69, 265, 267, 272, 279, 283, 295], "to_format": 70, "inplac": 70, "nlmixr": [70, 235, 265, 270, 281], "rxode": [70, 265, 281], "underli": [70, 108, 148, 285], "converted_model": 70, "applic": [71, 243, 257, 283, 292, 299], "config": [72, 96, 265, 270, 290], "configur": [72, 265, 289, 300], "overwritten": [72, 244], "block": [73, 157, 187, 265, 267, 278, 280, 287, 288, 295, 299], "iiv_cl_iiv_v": [73, 200], "split_joint_distribut": [73, 265, 287], "through": [74, 267, 268, 269, 272, 283, 285, 299], "numpi": [74, 274, 275, 285], "standard_norm": 74, "5532605888887387": 74, "stem": 75, "force_numb": 75, "coveff1": 75, "temp": 75, "temp1": 75, "cl1": 75, "df": [76, 81, 241, 265, 274, 293, 295], "date_column": 76, "deidentifi": [76, 265], "year": [76, 265, 270, 283], "earliest": 76, "maintain": [76, 268, 270, 271, 281, 283, 291, 292], "leap": 76, "1901": 76, "1902": 76, "1903": 76, "1904": 76, "closest": 76, "preceed": 76, "ordinari": [77, 285], "differenti": [77, 285], "odedisplay": 77, "display": 77, "dt": 77, "column_nam": [78, 207], "mark": [78, 79, 86, 207, 267, 283], "drop_dropped_column": [78, 207, 265], "undrop_column": [78, 265], "undrop": [78, 207], "drop_column": [79, 207, 265], "them": [79, 164, 268, 280, 282, 283, 288, 289, 296, 299], "dy": 80, "deps_1": 80, "771084": [80, 83], "881859": [80, 83], "441728": [80, 83], "113050": [80, 83], "783055": [80, 83], "150": [80, 81, 83, 84, 85, 286], "375041": [80, 83], "833395": [80, 83], "152": [80, 81, 83, 84, 85], "876707": [80, 83], "153": [80, 81, 83, 84, 85, 273], "905095": [80, 83], "154": [80, 81, 83, 84, 85], "099690": [80, 83], "155": [80, 81, 83, 84, 85, 111, 114, 274, 286], "evaluate_eta_gradi": [80, 265], "deta_1": 81, "deta_2": 81, "159537": 81, "609116": 81, "325893": 81, "562289": 81, "104417": 81, "346161": 81, "452951": 81, "682310": 81, "838840": 81, "981836": 81, "424423": 81, "973013": 81, "497185": 81, "344797": 81, "198714": 81, "697161": 81, "987731": 81, "941806": 81, "817067": 81, "309945": 81, "evaluate_epsilon_gradi": [81, 265], "573770": 82, "739": [82, 98, 274], "165105": 82, "741": [82, 98, 263, 274], "742": [82, 98, 263, 274], "743": [82, 98, 274], "evaluate_population_predict": [83, 265], "529739": 84, "179910": [84, 284], "688648": 84, "798916": 84, "023225": 84, "459036": 84, "223295": 84, "217288": 84, "472888": 84, "226455": 84, "evaluate_individual_predict": [84, 265], "wre": [85, 265], "313859": 85, "675721": 85, "544240": 85, "921720": 85, "517677": 85, "223935": 85, "053334": 85, "007023": 85, "931252": 85, "778389": 85, "flag": [86, 265, 298, 299], "origin": [86, 213, 244, 248, 249, 263, 264, 268, 270, 278, 283, 298], "care": [86, 244], "00469307": [89, 90, 91, 148, 181, 193, 206, 211, 285, 287, 289], "fix_paramet": [89, 91, 208, 209, 287], "unfix_paramat": [89, 90, 91, 209], "fix_paramaters_to": [89, 209], "unfix_paramaters_to": [89, 90, 91, 180, 208], "fix_or_unfix_paramet": [90, 91, 208, 209], "fix_parameters_to": [90, 180, 208, 287], "baselin": [92, 97, 140, 265, 278], "present": [94, 101, 267, 274, 278, 283, 299], "extract": [94, 101, 265, 267, 281], "directli": [95, 244, 248, 249, 265, 267, 274, 275, 283, 285, 287, 292, 299], "cmax": [95, 265, 274], "tmax": [95, 265, 274], "cmin": [95, 265, 274], "tmin": [95, 265, 274], "doseid": [95, 98, 274], "589": [95, 99, 274], "get_baselin": [97, 265], "set_covari": 97, "period": [98, 274], "108": [99, 274, 286], "132": [99, 274, 286, 293], "144": [99, 274, 286, 297], "retriev": [102, 103, 110, 111, 116, 118, 226, 227, 244, 248, 249, 265, 285, 286, 287, 300], "get_pk_paramet": [103, 118, 265], "get_rv_paramet": [103, 116, 134, 265], "has_random_effect": [103, 118, 265], "opr": [104, 113, 117], "get_population_prediction_express": [104, 265], "epress": [104, 117], "condit": [105, 179, 265, 278, 283, 296], "item": [109, 269, 283], "activ": [110, 111, 112, 283], "get_number_of_observ": [110, 114, 265, 274], "get_number_of_observations_per_individu": [110, 111, 114, 265], "total": [111, 265, 274], "get_number_of_individu": [111, 112, 265, 274], "observation_count": 112, "accord": [113, 265, 283, 288, 299], "oeta\u2082": 113, "oeta\u2081": 113, "135": [114, 274, 286, 287, 293, 295], "131": [114, 274, 286], "146": [114, 272, 274, 282, 286], "get_theta": [115, 119, 265], "get_sigma": [115, 120, 265], "get_individual_paramet": [116, 118, 134, 265], "get_individual_prediction_express": [117, 265], "get_omega": [119, 120, 265], "structur": [120, 229, 246, 265, 267, 274, 282, 285, 287, 288, 299], "00": [120, 278, 285, 286, 293, 295, 297, 299], "olumn": 121, "milligram": [121, 274], "liter": [121, 274], "kilogram": [121, 274], "named_subscript": 123, "greek": 123, "subscript": 123, "cleanup_model": [123, 265], "\u03b8\u2081": 123, "\u03b8\u2082": 123, "\u03b8\u2083": 123, "\u03b7\u2081": 123, "\u03b7\u2082": 123, "\u03b5\u2081": 123, "mani": [124, 125, 133, 166, 265, 287], "has_proportional_error_model": [124, 125, 135, 265], "has_combined_error_model": [124, 133, 135, 265], "has_weighted_error_model": [124, 125, 133, 265], "has_additive_error_model": [125, 133, 135, 265], "reli": [127, 130, 131, 137, 283], "heurist": [127, 130, 131, 137], "abl": [127, 130, 131, 137, 265, 277, 279, 287, 291, 292], "detect": [127, 130, 131, 137, 265, 279, 285, 291, 301], "has_od": [128, 129, 265], "has_linear_odes_with_real_eigenvalu": [128, 132, 265], "eigenvalu": 129, "has_linear_od": [129, 132, 265], "micha": [130, 131, 182, 183, 267, 299], "menten": [130, 131, 182, 183, 267, 299], "set_michaelis_menten_elimin": [130, 177, 183, 196, 265, 287], "michali": 131, "set_mixed_mm_fo_elimin": [131, 287], "set_zero_order_elimin": [137, 177, 182, 183, 265, 287], "determin": [138, 139, 164, 280, 282, 283, 288], "model1": [138, 265], "model2": 138, "constraint": [139, 181, 193, 198, 206, 208, 265, 275, 292], "get_covariate_baselin": [140, 265], "load": 141, "statment": 142, "mu": [143, 278], "referenc": [143, 287], "theta_1": [143, 285], "mu_1": [143, 278], "\u03bc\u2081": 143, "\u03bc\u2082": 143, "dataset_or_model": [144, 164], "name_pattern": [144, 164], "omitted_": 144, "omiss": 144, "omit": [144, 267, 272, 287], "placehold": [144, 164], "plot": [145, 146, 147, 265, 278, 284, 292], "alt": [145, 146, 147, 263, 278, 284], "chart": [145, 146, 147, 263], "iofv1": 146, "iofv2": 146, "against": [146, 283], "iofv": [146, 241, 263, 265, 284, 286, 298], "scatterplot": 146, "problem": [148, 152, 265, 272, 277, 280, 282, 283, 284, 285, 287, 289], "subroutin": [148, 265, 283, 285, 287, 289], "advan1": [148, 285, 287, 289], "trans2": [148, 285, 287, 289], "IF": [148, 265, 283, 285], "gt": [148, 285], "lt": [148, 285], "uncondit": [148, 285], "cwre": [148, 240, 241, 285, 286, 295, 296], "npde": [148, 285], "noappend": [148, 285], "noprint": [148, 285], "onehead": [148, 285], "sigma\u2081": [149, 285, 287], "\u2081": [149, 285, 287], "home": [151, 265, 285], "run1": [151, 227], "mod": [151, 244, 246, 265, 267, 274, 285, 286, 287, 299], "read_model_from_databas": [151, 152, 265], "databas": [151, 152, 225, 244, 245, 246, 248, 249, 250, 252, 257, 262, 265], "read_model_from_str": [151, 265, 287], "err": [152, 287], "has_covariate_effect": [154, 265], "unrun": 155, "to_remov": [157, 158, 267], "eta_iov_1_1": [158, 287], "add_lag_tim": [159, 192, 265, 287], "uloq": 160, "736": 160, "add_peripheral_compart": [161, 186, 265, 287], "new_nam": [163, 184], "renam": [163, 265], "clash": [163, 244, 246], "occur": [163, 277, 280, 282, 283], "resampl": [164, 230], "stratifi": [164, 267], "sample_s": [164, 267], "resample_": 164, "randomli": [164, 167], "renumb": [164, 267], "upward": 164, "stratif": [164, 267], "valueerror": 164, "rais": [164, 211, 265], "strata": 164, "suppli": [164, 280, 282, 288, 295], "control": [164, 270, 282, 283, 285], "pattern": [164, 283], "samples_per_id": 165, "pool": [165, 280], "iec": 165, "127941": 165, "037273": 165, "065492": 165, "182851": 165, "263323": 165, "265849": 165, "295883": 165, "060346": 165, "012108": 165, "219967": 165, "034279": 165, "040988": 165, "187879": 165, "143184": 165, "088845": 165, "034655": 165, "187779": 165, "014214": 165, "019953": 165, "151151": 165, "sample_parameters_from_covariance_matrix": [165, 167, 265], "sample_parameters_uniformli": [165, 166, 265], "uniform": [165, 166, 167], "force_posdef_sampl": [166, 167, 267], "force_posdef_covmatrix": [166, 267], "never": [166, 288], "005069": 166, "974989": 166, "204629": 166, "024756": 166, "012088": 166, "012943": 166, "004690": 166, "958431": 166, "233231": 166, "038866": 166, "029000": 166, "012516": 166, "004902": 166, "950778": 166, "128388": 166, "019020": 166, "023866": 166, "013413": 166, "sample_individual_estim": [166, 167, 265], "estiat": [166, 167], "reject": 167, "004878": 167, "908216": 167, "149441": 167, "029179": 167, "025472": 167, "012947": 167, "004828": 167, "014444": 167, "149958": 167, "028853": 167, "027653": 167, "013348": 167, "004347": 167, "053837": 167, "165804": 167, "028465": 167, "026798": 167, "013727": 167, "data_tran": [168, 170, 188, 265, 287], "series_term": 168, "\u00b2": [168, 170], "epsilon_1": [168, 170, 188], "expans": [168, 287], "approxim": [168, 283], "\u03b5\u2090": [168, 170, 287], "set_proportional_error_model": [168, 170, 265, 287], "set_combined_error_model": [168, 188, 265, 287, 296], "epsilon_2": 170, "remove_error_model": [170, 188, 265, 287], "\u03b5\u209a": [170, 188, 287], "set_additive_error_model": [170, 188, 265, 287], "fix_to_log": 172, "dynam": [172, 254, 283], "lambda": [172, 202, 203, 293, 295], "zeta": [172, 293, 295], "emul": 172, "set_bolus_order_absorpt": [176, 189, 195], "list_of_ep": [178, 187], "same_eta": [178, 267], "chosen": [178, 265, 280, 287, 299], "eta_rv1": [178, 287], "set_power_on_ruv": [178, 265, 287, 296], "get_initial_condit": [179, 265], "set_upper_bound": [181, 206], "unconstrain_paramet": [181, 193, 208], "clmm": [182, 183, 196, 287], "km": [182, 183, 196, 265, 287], "set_first_order_elimin": [182, 183, 196, 265, 287], "prefer": [185, 283], "q2": 186, "q3": 186, "v3": 186, "peripheral2": 186, "lower_limit": 187, "zero_protect": [187, 188, 265], "autodetect": 187, "protect": [187, 188, 265, 283], "power\u2081": 187, "set_iiv_on_ruv": [187, 265, 287, 296], "225e": 188, "ipredadj": 188, "sequenti": [189, 265, 267, 288, 299], "quantil": [190, 263, 265], "time_vari": [190, 295, 296], "target": [191, 297], "mediat": 191, "disposit": 191, "tmdd": 191, "keep_depot": [192, 265], "transit1": [192, 287], "transit2": [192, 287], "k23": 192, "transit3": [192, 287], "k34": 192, "k40": 192, "set_lower_bound": [193, 206], "use_thetas_for_error_stdev": [194, 265, 287], "smallest": [196, 274], "get_zero_order_input": [197, 265], "simplifi": [198, 265, 266, 275, 292], "plugin": [198, 265, 269, 270, 275, 276, 279, 281, 300], "conf": [198, 269], "ab": [198, 203, 267, 287], "analyt": 199, "becom": [200, 265, 267, 292], "create_joint_distribut": [200, 265, 287], "m4": 201, "m1": [201, 265, 297], "m3": 201, "beal": 201, "sl": 201, "pharmacodyn": 201, "2001": 201, "oct": 201, "481": 201, "504": 201, "doi": [201, 203, 278, 296], "1023": 201, "1012299115260": 201, "erratum": 201, "2002": 201, "jun": 201, "309": 201, "pmid": 201, "11768292": 201, "cumd": 201, "cumdz": 201, "remove_loq_data": [201, 265], "list_of_eta": [202, 203, 204], "boxcox": [202, 265], "lambda1": [202, 203, 287], "transform_etas_tdist": [202, 203, 265, 287], "transform_etas_john_drap": [202, 204, 265, 287], "john": [203, 265, 267], "draper": [203, 265, 267], "spelect": 203, "1980": 203, "famili": [203, 283], "journal": [203, 296], "royal": 203, "societi": 203, "190": [203, 293], "197": 203, "2307": 203, "2986305": 203, "transform_etas_boxcox": [203, 204, 265, 287], "degre": [204, 295], "freedom": [204, 283, 295], "df1": [204, 287], "translat": [205, 265], "hour": [205, 274], "caution": 205, "account": 205, "unfix_paramet": [206, 265, 287], "had": [210, 283], "move_est_close_to_bound": 211, "00469555": 211, "984258": [211, 285, 286], "15892": 211, "0293508": [211, 285], "027906": [211, 285, 286], "sd_eps_1": [212, 287], "set_weighted_error_model": [212, 265, 287], "whose": [213, 283], "suffix": 213, "overwrit": [213, 214], "newdataset": 213, "report": [215, 265, 270, 281, 292], "recalcul": 216, "frem_dir1": 216, "read_result": [216, 226, 265, 299], "model_or_model": [217, 235], "run_tool": [217, 229, 240, 265], "machin": [218, 219, 220, 244, 248, 249, 274, 279, 283], "learn": [218, 219, 220, 279], "threshold": [218, 219, 220, 267, 272], "signal": [218, 219, 284], "raw": [218, 219, 220, 241, 263, 265, 274], "delta": [218, 263, 265, 284], "tell": [218, 220, 283], "predict_influential_outli": [218, 220, 265], "predict_outli": [218, 219, 265], "outlier_cutoff": 219, "influential_cutoff": 219, "singal": [219, 220], "influential_outli": 219, "predict_influential_individu": [219, 220, 265], "simev": [220, 265, 294], "281443": 220, "057392": 220, "119105": 220, "846849": 220, "600540": 220, "014008": 220, "750734": 220, "247175": 220, "117002": 220, "835389": 220, "529582": 220, "035670": 220, "292333": 220, "303278": 220, "565949": 220, "078192": 220, "291295": 220, "466421": 220, "402343": 220, "699996": 220, "567987": 220, "526776": 220, "303918": 220, "177588": 220, "272142": 220, "390000": 220, "775876": 220, "501528": 220, "700951": 220, "352599": 220, "294196": 220, "744014": 220, "215364": [220, 297], "208691": 220, "713130": 220, "300293": 220, "810736": 220, "459877": 220, "675125": 220, "563835": 220, "526945": 220, "449199": 220, "720714": 220, "792248": 220, "860923": 220, "731858": 220, "247131": 220, "894190": 220, "282737": 220, "153398": 220, "200546": 220, "902774": 220, "586427": 220, "183329": 220, "036930": 220, "639868": 220, "765279": 220, "209665": 220, "225693": 220, "errors_allow": [222, 265], "bic_typ": 222, "rounding_error": 222, "maxevals_exceed": 222, "lrt": 222, "denot": [222, 278, 287], "model_1": [222, 278], "model_2": [222, 278], "extern": [223, 270, 274, 275, 287, 291, 292], "create_result": [224, 265, 287], "resum": [225, 229, 257, 267, 299], "resmod_dir1": 225, "retrieve_model": [226, 244, 248, 249, 265, 299], "tooldatabas": [227, 245, 250, 254, 257], "modeldatabas": [227, 244, 246, 252], "tooldir_path": 227, "retrieve_final_model": [227, 265], "allometryresult": 228, "lloq_method": [229, 267], "lloq_limit": [229, 267], "amd": [229, 265, 299], "reult": 229, "search": [229, 231, 236, 265, 267, 272, 282, 292, 299], "transform_blq": [229, 265, 267], "runord": [229, 267], "compon": [229, 267, 275, 279, 283, 295], "run_iiv": [229, 265], "bootstrap": [230, 265, 294], "bootstrapresult": [230, 265], "500": 230, "try": [231, 267, 277, 292, 301], "mode": [231, 232, 233, 234, 236, 265, 278, 283], "covsearchresult": 231, "estmethod": [232, 265, 299], "exhaust": [232, 236, 265], "exhaustive_with_upd": [232, 277], "exhaustive_only_ev": [232, 265, 277], "estmethodresult": 232, "reduc": [232, 265, 277, 297], "no_add": [233, 236, 265, 280, 288], "iivsearch": [233, 265, 299], "brute_force_no_of_eta": [233, 280], "brute_force_block_structur": [233, 280], "strategi": [233, 236, 265, 280, 288], "add_diagon": [233, 236, 265, 280, 288], "iivsearchresult": 233, "iovsearch": [234, 265, 299], "iovsearchresult": 234, "modelsearchresult": 236, "bin": [237, 295, 301], "attempt": [237, 272, 283], "ruvsearchresult": 237, "arg": 238, "kei": [240, 248, 283, 296], "fit_result": 240, "mathrm": [241, 298], "veebar": 241, "least": [241, 283, 299], "outli": [241, 298], "criteria": [241, 265, 267, 272, 280, 282, 288, 296], "include_all_estimation_step": 242, "runtim": [242, 265, 277], "wasn": [242, 265], "estmat": 242, "586": [242, 284, 286], "276056": [242, 284], "again": [243, 287, 301], "Not": [243, 274, 283], "file_extens": [244, 246], "nontransactionalmodeldatabas": [244, 249], "local": [244, 245, 246, 248, 249, 250, 252, 270, 280, 283], "store": [244, 245, 246, 248, 249, 250, 252, 265, 289, 299], "modelnam": 244, "recommend": [244, 301], "localmodeldirectorydatabas": 244, "retrieve_fil": [244, 248, 249], "filesystem": [244, 248, 249], "model_nam": [244, 246, 248, 249, 278], "retrieve_local_fil": [244, 248, 249], "destination_path": [244, 248, 249], "retrieve_modelfit_result": [244, 248, 249], "store_local_fil": [244, 245, 248, 249, 250, 252], "new_filenam": [244, 248, 249], "store_metadata": [244, 245, 248, 249, 250, 252], "store_model": [244, 248, 249], "store_modelfit_result": [244, 248, 249], "toolnam": [245, 250, 252, 299], "exist_ok": 245, "read_metadata": [245, 250, 252], "source_path": [245, 250, 252], "store_result": [245, 250, 252], "transactionalmodeldatabas": 246, "subdirectori": [246, 299], "list_model": 246, "snapshot": [246, 248], "context": [246, 248, 283, 292], "transact": [246, 248, 283], "writabl": [246, 248], "timestamp": 247, "log_error": 247, "log_warn": 247, "abc": [248, 252], "baseclass": 248, "primari": 248, "center": 248, "around": [248, 268], "belong": 248, "dummi": [249, 250], "anyth": [249, 250, 270, 280, 283], "task_input": 251, "model_databas": 252, "task": [253, 287, 291, 292], "acycl": 253, "node": [253, 254], "edg": 253, "wf": 254, "unique_nam": 254, "db": 254, "dask": [254, 265, 292], "whatev": [254, 283], "alia": [255, 256], "localdirectorydatabas": [255, 262], "localdirectorytooldatabas": [256, 262, 299], "dispatch": [257, 262, 265, 299], "execut": [257, 265, 283], "executiondispatch": 257, "default_dispatch": 262, "local_dask": [262, 299], "default_model_databas": 262, "default_tool_databas": 262, "psn": [263, 264, 265, 267, 273, 278, 284, 293, 295, 297, 298, 299, 300], "parameter_statist": 263, "bia": [263, 265], "rse": [263, 286], "divid": [263, 267, 289], "005856": 263, "005820": 263, "000038": 263, "000487": 263, "083167": 263, "455435": 263, "443165": 263, "009885": 263, "099305": 263, "068231": 263, "141376": 263, "109797": 263, "030323": 263, "114986": 263, "813337": 263, "195880": 263, "195844": 263, "005646": 263, "046548": 263, "237634": 263, "015546": 263, "015112": 263, "000872": 263, "003434": 263, "220871": 263, "parameter_distribut": 263, "lowest": [263, 278], "highest": [263, 265, 278, 289], "interpol": 263, "fall": [263, 265], "x_0": 263, "x_1": 263, "np": [263, 274, 285], "004762": 263, "004767": [263, 272], "004805": 263, "004974": 263, "005120": 263, "211220": 263, "214364": 263, "242657": 263, "290449": 263, "307106": 263, "000011": 263, "012961": 263, "100104": 263, "100376": 263, "102825": 263, "116900": 263, "125456": 263, "007812": 263, "007857": 263, "008261": 263, "009741": 263, "011116": 263, "97": [263, 272], "006669": 263, "006685": 263, "007429": 263, "007593": 263, "007612": 263, "613679": 263, "646879": 263, "726604": 263, "730551": 263, "730990": 263, "338957": 263, "371005": 263, "536153": 263, "545316": 263, "546334": 263, "281203": 263, "300874": 263, "306057": 263, "306101": 263, "306106": 263, "021677": 263, "023708": 263, "025429": 263, "026581": 263, "026710": 263, "parameter_estimates_histogram": 263, "histogram": [263, 265], "repeatchart": 263, "005298": 263, "30730": 263, "074931": 263, "136423": 263, "011374": 263, "006048": 263, "38692": 263, "029844": 263, "189763": 263, "019143": 263, "005624": 263, "53224": 263, "118806": 263, "219550": 263, "019831": 263, "005771": [263, 272], "40115": 263, "034322": 263, "150905": 263, "012287": 263, "005933": 263, "42119": 263, "074050": 263, "171158": 263, "017394": 263, "005275": 263, "59087": 263, "289793": 263, "248009": 263, "016396": 263, "005847": 263, "44711": 263, "109860": 263, "206296": 263, "016346": 263, "005939": 263, "52688": 263, "040057": 263, "210552": 263, "013631": 263, "005998": 263, "41948": 263, "192046": 263, "175269": 263, "013485": 263, "005479": 263, "43956": 263, "109733": 263, "197253": 263, "011771": 263, "ofv_statist": 263, "bootstrap_bootdata_ofv": 263, "original_bootdata_ofv": 263, "sum": [263, 273], "bootstrap_origdata_ofv": 263, "boostrap": 263, "original_origdata_ofv": 263, "delta_bootdata": 263, "delta_origdata": 263, "722": 263, "220925": 263, "386171": 263, "134966": 263, "245796": 263, "929008": 263, "620085": 263, "523805": 263, "737": 263, "632473": 263, "951710": 263, "024871": 263, "110934": 263, "218525": 263, "629078": 263, "737746": 263, "ofv_distribut": 263, "parameter_distriut": 263, "601": 263, "007583": 263, "602": 263, "266529": 263, "613": 263, "597036": 263, "641": 263, "950291": 263, "621": 263, "273905": 263, "622": 263, "073513": 263, "629": 263, "269987": 263, "806391": 263, "915431": 263, "955989": 263, "731": 263, "321004": 263, "879050": 263, "021463": 263, "059207": 263, "398901": 263, "299364": 263, "020705": 263, "061262": 263, "426277": 263, "984323": 263, "879224": 263, "788": 263, "101562": 263, "803": 263, "869362": 263, "661": 263, "714778": 263, "121734": 263, "810": [263, 286], "417314": 263, "732": 263, "165644": 263, "757": 263, "877092": 263, "369737": 263, "671690": 263, "375800": 263, "162811": 263, "270917": 263, "982365": 263, "475010": 263, "828": 263, "178008": 263, "839": 263, "691272": 263, "840": [263, 293], "970524": 263, "836": 263, "395339": 263, "846": 263, "981350": 263, "848": 263, "157573": 263, "859": 263, "964343": 263, "893": [263, 280], "228440": 263, "896": [263, 278], "924451": 263, "443675": 263, "246668": 263, "558111": 263, "129": 263, "069616": 263, "162": 263, "333713": 263, "166": 263, "029724": 263, "ofv_plot": 263, "layerchart": [263, 284], "dofv_quantiles_plot": 263, "show": [263, 267, 278, 283, 295, 298], "metric": [263, 264, 286], "chi": 263, "squar": 263, "907310": 263, "911844": 263, "750": 263, "388987": 263, "670": 263, "684132": 263, "675": 263, "846450": 263, "738": 263, "099607": 263, "248779": 263, "734": 263, "876739": 263, "733": [263, 296], "182039": 263, "626": 263, "440820": 263, "637": 263, "427606": 263, "748": 263, "285576": 263, "239599": 263, "025253": 263, "519551": 263, "781": 263, "380852": 263, "793": 263, "303365": 263, "994494": 263, "754": 263, "666705": 263, "688168": 263, "664": 263, "288159": 263, "671": 263, "883942": 263, "255718": 263, "974215": 263, "332959": 263, "052283": 263, "689": 263, "940217": 263, "693": 263, "963948": 263, "735": 263, "763734": 263, "004534": 263, "494261": 263, "162318": 263, "204881": 263, "627961": 263, "287312": 263, "986786": 263, "390849": 263, "785654": 263, "624824": 263, "922512": 263, "099768": 263, "595783": 263, "360991": 263, "358744": 263, "157557": 263, "023731": 263, "869007": 263, "372000e": 263, "000015": 263, "000003": 263, "098000e": 263, "462220e": 263, "009862": 263, "002316": 263, "002320": 263, "320640e": 263, "531300e": 263, "013222": 263, "000146": 263, "961337e": 263, "572900e": 263, "002167": 263, "014550e": 263, "000033": 263, "000196": 263, "178980e": 263, "included_individu": 263, "case_result": [264, 265], "cook_scor": 264, "jackknife_cook_scor": 264, "delta_ofv": 264, "dofv_influenti": 264, "130159": 264, "121389": 264, "015207": 264, "348263": 264, "336159": 264, "144045": 264, "192433": 264, "181125": 264, "031030": 264, "163095": 264, "155901": 264, "026142": 264, "422651": 264, "404915": 264, "190732": 264, "374312": 264, "343311": 264, "097063": 264, "169869": 264, "163883": 264, "026223": 264, "263865": 264, "254943": 264, "058123": 264, "757098": 264, "673587": 264, "477910": 264, "150161": 264, "144191": 264, "023623": 264, "361646": 264, "352901": 264, "217902": 264, "255533": 264, "215005": 264, "035375": 264, "191848": 264, "187019": 264, "038199": 264, "376365": 264, "337975": 264, "096680": 264, "142806": 264, "137340": 264, "014709": 264, "193393": 264, "179744": 264, "031711": 264, "131746": 264, "122842": 264, "020637": 264, "176644": 264, "932149": 264, "036787": 264, "128197": 264, "120498": 264, "019030": 264, "141093": 264, "138101": 264, "029021": 264, "176582": 264, "153583": 264, "035291": 264, "104396": 264, "100064": 264, "015499": 264, "552071": 264, "501458": 264, "278595": 264, "242334": 264, "217068": 264, "047627": 264, "792099": 264, "715951": 264, "798775": 264, "135247": 264, "133493": 264, "021356": 264, "442779": 264, "424958": 264, "125763": 264, "132903": 264, "127188": 264, "010157": 264, "081122": 264, "076790": 264, "005443": 264, "183624": 264, "168501": 264, "027707": 264, "113959": 264, "111168": 264, "012363": 264, "532749": 264, "515747": 264, "325048": 264, "094133": 264, "091212": 264, "014747": 264, "447798": 264, "406737": 264, "194457": 264, "364978": 264, "352973": 264, "124295": 264, "270838": 264, "252922": 264, "063675": 264, "129553": 264, "121963": 264, "014043": 264, "254914": 264, "243250": 264, "064025": 264, "207529": 264, "194633": 264, "046887": 264, "239182": 264, "218112": 264, "044252": 264, "181986": 264, "173826": 264, "020285": 264, "604112": 264, "584208": 264, "604211": 264, "407717": 264, "369648": 264, "154161": 264, "215722": 264, "196744": 264, "043742": 264, "214167": 264, "200091": 264, "036238": 264, "094284": 264, "089002": 264, "007506": 264, "074174": 264, "072365": 264, "007535": 264, "743323": 264, "717468": 264, "654313": 264, "153971": 264, "147360": 264, "014502": 264, "284706": 264, "278460": 264, "072960": 264, "331587": 264, "309374": 264, "116933": 264, "447965": 264, "421612": 264, "129593": 264, "184872": 264, "175196": 264, "029896": 264, "430382": 264, "415446": 264, "141657": 264, "409307": 264, "369197": 264, "189729": 264, "084764": 264, "079718": 264, "007416": 264, "107600": 264, "103145": 264, "013947": 264, "154672": 264, "150761": 264, "028236": 264, "155632": 264, "150461": 264, "034848": 264, "covariance_ratio": 264, "skipped_individu": 264, "050505": 264, "963884": 264, "058896": 264, "087449": 264, "985403": 264, "029066": 264, "101636": 264, "086424": 264, "017369": 264, "094799": 264, "849310": 264, "121111": 264, "049151": 264, "096456": 264, "070088": 264, "040691": 264, "065881": 264, "606158": 264, "205007": 264, "099191": 264, "143483": 264, "050691": 264, "086007": 264, "156273": 264, "919336": 264, "056714": 264, "999221": 264, "029600": 264, "034017": 264, "108785": 264, "038495": 264, "954054": 264, "053618": 264, "096334": 264, "943556": 264, "125423": 264, "086167": 264, "145822": 264, "113939": 264, "114399": 264, "057664": 264, "788608": 264, "063991": 264, "115559": 264, "160549": 264, "034685": 264, "035618": 264, "714976": 264, "092664": 264, "089158": 264, "054565": 264, "002555": 264, "032356": 264, "003056": 264, "936719": 264, "122771": 264, "078285": 264, "096841": 264, "068821": 264, "sqrt": 264, "p_i": 264, "p_": 264, "orig": 264, "operatornam": [264, 278, 298], "sum_": 264, "overlin": [264, 278], "_j": 264, "_k": [264, 278], "det": 264, "Then": [264, 278], "ofv_": 264, "iofv_": 264, "iofv_k": 264, "ofv_k": 264, "case_column": 264, "rikard": [264, 266, 271, 292, 296], "nordgren": [264, 266, 271, 292, 296], "sebastian": [264, 266, 271], "ueckert": [264, 266, 271], "svetlana": 264, "freiberga": 264, "karlsson": [264, 266, 271, 278, 296], "faster": [264, 265, 292], "2018": [264, 283, 296], "abstr": [264, 266], "8683": 264, "www": [264, 266, 283], "meet": [264, 266, 268, 283, 292], "ofv_iter": 265, "parameter_estimates_iter": 265, "caus": [265, 283, 292], "model4": 265, "frem": [265, 285, 294, 295], "create_report": 265, "write_model": [265, 285, 287, 289], "did": [265, 297], "pars": [265, 281, 289, 291, 292, 299], "dadt": 265, "de": 265, "complex": [265, 270, 279], "set_zero_order_input": 265, "set_tmdd": 265, "generate_model_cod": [265, 285], "get_model_cod": 265, "advan7": 265, "didn": 265, "header": 265, "is_linear": 265, "plot_transformed_eta_distribut": 265, "create_config_templ": 265, "get_dv_symbol": 265, "set_initial_condit": 265, "abbr": [265, 287, 289], "create_basic_pk_model": 265, "add_metabolit": 265, "set_dvid": 265, "regress": 265, "defdos": [265, 287], "sometim": 265, "wrong": 265, "bad": 265, "1551": 265, "is_real": 265, "advan5": [265, 287], "copy_model": 265, "nlmixr2": 265, "display_od": 265, "rework": 265, "run_covsearch": [265, 272], "explicitodesystem": 265, "eval": 265, "successfulli": [265, 301], "round": [265, 274], "subtool": [265, 299], "proxi": [265, 283], "1314": 265, "1355": [265, 272], "1378": [265, 280], "typo": 265, "1377": 265, "1381": 265, "1064": [265, 280], "afd7707": 265, "1139": 265, "saddl": 265, "1394": 265, "too": [265, 283], "1117": 265, "timeout": 265, "loop": 265, "wait": 265, "lst": [265, 299], "much": [265, 292], "phi": [265, 270, 299], "correctli": 265, "ncomp": 265, "deidentify_data": 265, "cli": 265, "anonym": 265, "setter": 265, "multivari": 265, "1293": 265, "1302": [265, 272], "1303": [265, 288], "last20": 265, "run_modelsearch": [265, 288, 299], "run_iovsearch": [265, 282], "run_ruvsearch": [265, 296], "run_iivsearch": [265, 280], "nomem": 265, "rh": 265, "1180": 265, "1162": 265, "1032": 265, "add_covariate_effect": [265, 287], "1004": 265, "remove_covariate_effect": 265, "1181": 265, "9fd701521": 265, "best_model": 265, "final_model_nam": 265, "a7fbcbfe2": 265, "update_initial_individual_estim": 265, "modelsearch_candidate1": [265, 288, 299], "modifi": [265, 283, 290], "wors": 265, "calculate_b": [265, 280, 282, 288], "calculate_a": 265, "check_parameters_near_bound": 265, "check_high_correl": 265, "plot_iofv_vs_iofv": 265, "plot_individual_predict": 265, "evaluate_express": 265, "evaluate_weighted_residu": 265, "parameter_esimt": 265, "calculate_pk_parameters_statist": 265, "update_init": [265, 285, 287], "predict_": 265, "print_fit_summari": 265, "write_result": 265, "rank_model": 265, "speedup": 265, "297a64041": 265, "individual_ofv": [265, 286], "1101": 265, "57fc4fee8": 265, "fd417aaf": 265, "convert_model": 265, "d5458e36": 265, "keyerror": 265, "localmodeldirectori": 265, "filenotfounderror": 265, "1193bd39": 265, "unus": 265, "submodul": 265, "bb96a13c": 265, "update_paramet": 265, "0ca786c5": 265, "dd056da3": 265, "915bc9c7": 265, "get_config_path": [265, 269], "disabl": [265, 268], "82b32278": 265, "unwant": 265, "debug": 265, "1131a610": 265, "ebfafb45": 265, "1173": 265, "fb070ee1": 265, "1049": [265, 280], "pyreadr": 265, "easier": [265, 275, 285], "instal": [265, 267, 283, 300], "mac": [265, 270], "get_evid": 265, "get_cmt": 265, "resmod": [265, 294], "916": 265, "strict": [265, 283], "1055": 265, "attibut": 265, "1092": 265, "exlud": 265, "unreport": 265, "1076": 265, "988": 265, "1c65359": 265, "42fe72f": 265, "1001": 265, "lead": [265, 287], "uneven": 265, "branch": [265, 270], "stepwis": [265, 272, 297, 299], "694": 265, "properli": 265, "708": 265, "comment": [265, 289], "790": 265, "974": [265, 293], "produc": [265, 283], "1017": 265, "989": 265, "71f4cf23": 265, "dsl": 265, "932": 265, "973": 265, "cfc09bad": 265, "975": 265, "917": 265, "977": 265, "908": 265, "fd564168": 265, "088a046a": 265, "c76fa476": 265, "430f1d2e": 265, "make_declar": 265, "greekify_model": 265, "find_clearance_paramet": 265, "find_volume_paramet": 265, "vp": 265, "newer": 265, "820": [265, 286], "seprat": 265, "sporad": 265, "race": [265, 268], "lazi": 265, "duplic": 265, "745": 265, "1st": 265, "3rd": 265, "710": 265, "licens": 265, "advanx": 265, "add_time_after_dos": [265, 274], "intercompartment": 265, "defob": 265, "choos": [265, 280, 283, 288, 289, 290], "gl": 265, "solve_ode_system": 265, "meta": 265, "switch": [265, 292], "read_dataset_from_datainfo": 265, "addl": 265, "linalgerror": 265, "656": [265, 280], "tflite": [265, 279], "649": 265, "mdt": [265, 287], "654": 265, "expand_additional_dos": 265, "better": [265, 288, 296], "modelsyntaxerror": 265, "588": 265, "625": [265, 280], "578": 265, "vc1": 265, "577": 265, "success": [265, 268, 272, 277, 280, 282], "632": [265, 293], "636": 265, "590": 265, "gl_real": 265, "sampled_iofv": [265, 298], "version": [265, 267, 279, 283, 299], "subblock": 265, "check_dataset": 265, "tensorflow": 265, "modelbuild": 265, "add_mdt_iiv": 265, "three": [265, 275, 283, 289], "add_eta": [265, 295], "etas_as_fullblock": 265, "iiv_as_fullblock": 265, "add_mdt_eta": 265, "wip": 265, "don": 265, "528": 265, "457": 265, "translate_nmtran_tim": 265, "print_model_cod": [265, 279, 285], "has_michaelis_menten_elimin": 265, "has_zero_order_elimin": 265, "has_first_order_elimin": 265, "has_mixed_mm_fo_elimin": 265, "2c": 265, "1c": 265, "timevari": 265, "create_symbol": 265, "remove_unused_parameters_and_rv": 265, "mu_reference_model": 265, "simplify_express": 265, "bump_model_numb": 265, "get_doseid": [265, 274], "get_unit_of": 265, "get_concentration_parameters_from_data": [265, 274], "write_csv": 265, "resample_data": 265, "omit_data": 265, "get_observation_express": 265, "get_individu": 265, "get_dos": [265, 274], "list_time_varying_covari": 265, "estmeth": 265, "optim": [265, 275, 285, 292], "incorrect": 265, "add_allometri": 265, "insert_aft": 265, "modelstat": 265, "power_on_ruv": 265, "estimationmethod": 265, "guard": 265, "avoid": [265, 275, 283, 301], "cdd": 265, "bipp": [265, 267], "5000": 265, "shift": 265, "nest": 265, "due": [265, 296], "set_dtbs_error_model": [265, 287], "dure": [265, 301], "logger": 265, "parametr": 265, "broken": 265, "parallel": [265, 299], "print_model_symbol": 265, "get_observ": [265, 274], "parameter_sampl": 265, "api": [265, 275, 287, 291, 292, 300], "improv": [265, 295], "eta_shrinkag": 265, "summarize_model": 265, "window": [265, 270, 279, 283], "rstudio": [265, 292, 301], "zero_order_absorpt": 265, "first_order_absorpt": 265, "bolus_absorpt": 265, "set_bolus_absorpt": [265, 287], "seq_zo_fo_absorpt": 265, "set_seq_zo_fo_absorpt": [265, 287], "have_zero_order_absorpt": 265, "has_zero_order_absorpt": 265, "individual_shrinkag": 265, "individual_parameter_statist": 265, "pk_paramet": 265, "create_rv_block": 265, "split_rv_block": 265, "nind": 265, "nob": 265, "nobsi": 265, "remove_error": 265, "additive_error": 265, "proportional_error": 265, "combined_error": 265, "has_additive_error": 265, "has_proportional_error": 265, "has_combined_error": 265, "theta_as_stdev": 265, "set_dtbs_error": 265, "tdist": [265, 293], "john_drap": 265, "add_paramet": 265, "add_individual_paramet": [265, 287], "first_order_elimin": 265, "zero_order_elimin": 265, "michaelis_menten_elimin": 265, "mixed_mm_fo_elimin": 265, "revert": 265, "thread": [265, 268], "site": 265, "crossval": [265, 294], "qa": [265, 294], "plain": [265, 269, 270], "sdcorr": 265, "data_transform": [265, 287], "evalut": 265, "dependent_variable_symbol": 265, "releas": [265, 283, 301], "claus": 265, "interfac": [265, 275, 279, 281, 283, 285, 287, 292, 300, 301], "com": 265, "stdin": 265, "123": [265, 272, 280, 282, 286, 288, 296], "clearer": 265, "prioriti": [265, 289], "aggregatedmodelfitresult": 265, "priorit": [265, 289], "half": [265, 293, 295], "life": [265, 293, 295], "set_nam": 265, "parameter_init": 265, "base_parameter_chang": [265, 278], "parameter_vari": [265, 278, 295], "coeffici": 265, "frem_result": 265, "simevalresult": 265, "nonfixed_init": 265, "parameterset": 265, "migrat": 265, "github": [265, 270, 279, 281, 292, 301], "action": [265, 267, 268, 270, 283, 292], "columntyp": 265, "to_base_model": 265, "comined_mm_fo_elimin": 265, "absorption_r": 265, "pretti": 265, "qaresult": 265, "nmtranparseerror": 265, "error_model": 265, "pharmpyconfigpath": [265, 269], "environ": [265, 268, 300, 301], "linearizeresult": 265, "reset_indic": 265, "multiindic": 265, "functionsadd_lag_tim": 265, "yaml": 265, "view": [265, 283, 297], "assumpt": [265, 283], "0th": [265, 267], "parser": [265, 292], "individul": 265, "extend": [265, 283, 295, 297], "postprocess": [265, 294], "librari": [265, 279, 281, 283, 292, 301], "stella": [266, 271, 292], "belin": [266, 271, 292], "gunnar": [266, 271], "yngman": [266, 271, 278], "simon": [266, 271], "carter": [266, 271], "buatoi": [266, 271], "jo\u00e3o": [266, 271], "abrant": [266, 271], "andrew": [266, 271], "hooker": [266, 271], "assemblerr": 266, "novel": 266, "process": [266, 296], "2021": [266, 278], "9656": 266, "subcommand": 267, "top": [267, 274, 299], "often": [267, 270, 285, 297], "help": [267, 268, 272, 292, 299, 301], "verb": 267, "particular": [267, 268, 270, 274, 283, 284], "welcom": [267, 268, 270, 283], "usag": 267, "exit": 267, "program": [267, 268, 279, 283], "pheno_r": [267, 274, 285, 286], "prettyprint": 267, "output_fil": 267, "idcol": 267, "datecol": 267, "match": 267, "pager": 267, "stdout": [267, 299], "datasetsmultipl": 267, "1th": 267, "quot": 267, "comb": 267, "elimini": 267, "propot": 267, "error_typ": 267, "givenbi": 267, "cov_sampl": 267, "posdef": 267, "non_fix": 267, "input_path": 267, "particip": 268, "project": [268, 270, 281, 283, 301], "made": [268, 283, 285], "member": 268, "globe": 268, "divers": 268, "skill": [268, 292], "person": [268, 283], "experi": 268, "growth": 268, "everyon": [268, 270, 283], "guidelin": 268, "insid": [268, 283], "goal": 268, "inclus": [268, 283, 295], "grow": 268, "pledg": 268, "treat": [268, 270, 283], "peopl": 268, "harass": 268, "bulli": 268, "regardless": [268, 283, 285], "sexual": 268, "orient": 268, "gender": 268, "ident": 268, "appear": [268, 301], "nation": [268, 271], "ethnic": 268, "religion": 268, "imageri": 268, "sexist": 268, "racist": 268, "exclusionari": 268, "joke": 268, "acknowledg": [268, 283], "citat": 268, "request": [268, 270], "author": [268, 283], "own": [268, 269, 275, 283, 285], "cite": 268, "those": [268, 283, 287, 299], "realiz": 268, "varieti": 268, "opinion": 268, "background": 268, "serv": [268, 283, 292], "enrich": 268, "discuss": 268, "pro": 268, "con": 268, "technologi": 268, "proactiv": 268, "ensur": [268, 283], "heard": 268, "feel": [268, 292], "confid": 268, "freeli": 268, "question": 268, "answer": 268, "respectfulli": 268, "pai": 268, "attent": 268, "feedback": 268, "forum": 268, "especi": 268, "contribut": [268, 281, 283], "conscienti": 268, "percept": 268, "wider": 268, "respond": 268, "strive": 268, "behavior": 268, "encourag": [268, 270, 275, 281], "product": [268, 277, 283], "debat": 268, "disagr": 268, "entir": [268, 270, 283, 299], "silent": 268, "violat": [268, 283], "contact": [268, 283], "talk": 268, "privat": [268, 283], "situat": 268, "onlin": 268, "offlin": 268, "mail": [268, 283], "social": 268, "media": 268, "confer": 268, "associ": [268, 282, 283], "adapt": [268, 283, 292], "astropi": 268, "ini": 269, "default_nonmem_path": 269, "nmfe751": 269, "create_default_config": 269, "pharmpyconfigfil": 269, "your": [270, 279, 281, 283, 287, 289, 299, 301], "bug": 270, "appreci": 270, "suggest": [270, 281], "suitabl": [270, 292], "student": [270, 292], "commun": [270, 283], "aspir": 270, "conduct": [270, 288], "foster": 270, "linux": [270, 279], "maco": [270, 279], "ll": 270, "badg": 270, "pip": [270, 279], "python3": 270, "pip3": 270, "guid": 270, "former": 270, "ubuntu": 270, "apt": 270, "url": [270, 279], "render": [270, 283, 292], "On": [270, 292], "sudo": 270, "brew": 270, "unnecessari": [270, 283], "thing": [270, 283], "instruct": 270, "black": 270, "formatt": 270, "flake8": 270, "linter": 270, "isort": 270, "lint": 270, "reformat": 270, "py39": 270, "test_paramet": 270, "py": [270, 279], "test_get_theta": 270, "apart": 270, "suit": 270, "purpos": [270, 283], "test_modelsearch": 270, "test_summary_individu": 270, "pull": 270, "manag": 270, "contributor": [270, 283], "emploi": 270, "commit": [270, 283], "push": 270, "name_of_branch": 270, "deploy": 270, "setup": 270, "pypi": [270, 279], "trigger": [270, 285], "tag": 270, "changelog": 270, "bump": 270, "semant": 270, "bumpvers": 270, "cfg": 270, "sh": 270, "patch": 270, "minor": 270, "major": [270, 283], "copyright": 270, "coi": 270, "stream": [270, 285], "verbatim": [270, 283], "farmaci": 271, "uu": 271, "kajsa": 271, "harl": 271, "zhe": [271, 292], "huang": [271, 292], "aurelien": 271, "oom": 271, "johan": 271, "borg": 271, "piyanan": 271, "assawasuwannakit": 271, "xiaomei": 271, "chen": 271, "alzahra": 271, "hamdan": 271, "osama": 271, "qutishat": 271, "shijun": 271, "wang": 271, "tianwu": 271, "yang": 271, "warm": 271, "thank": 271, "sponsor": 271, "hoffman": 271, "la": 271, "roch": 271, "ltd": 271, "pharmetheu": 271, "uppsala": [271, 281], "univers": [271, 281], "enabl": [271, 283], "resourc": 271, "swedish": 271, "infrastructur": 271, "snic": 271, "uppmax": 271, "research": [271, 292], "council": 271, "inter": [272, 280], "five": 272, "sentenc": 272, "manual": [272, 274, 299], "rewritten": 272, "notic": [272, 283], "semicolon": 272, "mox2": [272, 277, 280, 282, 288, 299], "covsearch_run7": 272, "covsearch_run8": 272, "covsearch_run9": 272, "covsearch_run10": 272, "covsearch_run11": 272, "covsearch_run12": 272, "covsearch_run13": 272, "covsearch_run14": 272, "covsearch_run15": 272, "covsearch_run16": 272, "covsearch_run17": 272, "covsearch_run18": 272, "covsearch_run19": 272, "covsearch_run20": 272, "covsearch_run21": 272, "covsearch_run22": 272, "covsearch_run23": 272, "covsearch_run24": 272, "covsearch_run25": 272, "covsearch_run26": 272, "covsearch_run27": 272, "covsearch_run28": 272, "covsearch_run29": 272, "covsearch_run30": 272, "covsearch_run31": 272, "covsearch_run32": 272, "covsearch_run33": 272, "covsearch_run34": 272, "covsearch_run35": 272, "covsearch_run36": 272, "covsearch_run37": 272, "covsearch_run38": 272, "covsearch_run39": 272, "covsearch_run40": 272, "covsearch_run41": 272, "covsearch_run42": 272, "covsearch_run43": 272, "covsearch_run44": 272, "covsearch_run45": 272, "covsearch_run46": 272, "covsearch_run47": 272, "covsearch_run48": 272, "covsearch_run49": 272, "covsearch_run50": 272, "covsearch_run51": 272, "covsearch_run52": 272, "covsearch_run53": 272, "covsearch_run54": 272, "pvalu": [272, 297], "goal_pvalu": [272, 297], "is_backward": [272, 297], "047127e": 272, "710000e": 272, "568110e": 272, "494490e": 272, "498453e": 272, "459287e": 272, "280678e": 272, "923500e": 272, "003390e": 272, "984500e": 272, "372293e": 272, "176965e": 272, "207550e": 272, "626878e": 272, "564495e": 272, "539960e": 272, "762000e": 272, "823200e": 272, "417058e": 272, "759040e": 272, "469024e": 272, "811054e": 272, "642452e": 272, "840779e": 272, "261720e": 272, "651215e": 272, "954671e": 272, "163414e": 272, "926594e": 272, "491049e": 272, "423998e": 272, "706676e": 272, "374390e": 272, "054865e": 272, "105347e": 272, "300000e": 272, "029682e": 272, "641559e": 272, "748923e": 272, "363918e": 272, "203548e": 272, "052323e": 272, "567877e": 272, "507358e": 272, "510000e": 272, "1292": [272, 277, 280, 282, 288], "186761": [272, 277, 280, 282, 288], "742325": 272, "929085": 272, "315057": 272, "1346": 272, "501817": 272, "978215": 272, "1332": 272, "164976": 272, "062682": 272, "1312": 272, "249442": 272, "061671": 272, "248431": 272, "056538": 272, "1313": [272, 288], "243298": 272, "732689": 272, "919450": 272, "651626": 272, "1335": 272, "838386": 272, "814832": 272, "1334": 272, "001593": 272, "363759": 272, "550520": 272, "989077": 272, "175838": 272, "136326": 272, "323087": 272, "387950": 272, "1316": 272, "574711": 272, "961688": 272, "148448": 272, "743393": 272, "930153": 272, "617998": 272, "1340": 272, "804759": 272, "641996": 272, "1345": 272, "828756": 272, "288366": 272, "1357": 272, "475127": 272, "263168": 272, "1343": [272, 280], "449928": 272, "814686": 272, "1319": 272, "001446": 272, "181808": 272, "368568": 272, "957602": 272, "144362": 272, "567343": 272, "1347": 272, "754104": 272, "426389": 272, "613149": 272, "324567": 272, "1358": [272, 287], "511327": 272, "446030": 272, "632790": 272, "549224": 272, "1326": 272, "735985": 272, "997342": 272, "184102": 272, "617389": 272, "1351": 272, "804150": 272, "900404": 272, "1350": 272, "087164": 272, "566615": 272, "1391": 272, "753375": 272, "929659": 272, "1352": 272, "116420": 272, "990522": 272, "177283": 272, "217267": 272, "404028": 272, "62": [272, 293], "729333": 272, "1354": 272, "916093": 272, "379219": 272, "1393": 272, "565980": 272, "67": [272, 295, 297], "670588": 272, "1359": 272, "857348": 272, "016040": 272, "202801": 272, "926496": 272, "113256": 272, "139": 272, "462177": 272, "1431": 272, "648937": 272, "83": [272, 293, 295], "706655": 272, "1375": 272, "893415": 272, "798603": 272, "1367": 272, "985364": 272, "801019": 272, "1438": 272, "987780": 272, "92": 272, "443408": 272, "1384": 272, "630169": 272, "997461": 272, "1439": 272, "184221": 272, "322869": 272, "509630": 272, "925020": 272, "111781": 272, "142": 272, "814402": 272, "1435": 272, "001163": 272, "862830": 272, "049591": 272, "449696": 272, "636456": 272, "801017": 272, "987778": 272, "89": [272, 288], "86": 272, "1414": 272, "872375": 272, "93": [272, 277], "810457": 272, "76": 272, "630168": 272, "68": 272, "5328": [272, 277, 280, 282, 288], "2300": [272, 277, 280, 288], "433676": [272, 277, 280, 282, 288], "2632": 272, "2400": 272, "447194": 272, "8757": 272, "106": [272, 280, 293, 295, 296], "2690": 272, "429235": 272, "4824": 272, "0490": 272, "435646": 272, "1536": 272, "7690": 272, "430342": 272, "9763": 272, "102": 272, "8640": 272, "428158": 272, "9807": 272, "1030": 272, "505090": 272, "3823": 272, "4790": 272, "453248": 272, "3323": 272, "5279": 272, "434088": 272, "7087": 272, "109": [272, 288], "1750": 272, "459561": 272, "8501": 272, "4740": 272, "428178": 272, "4821": 272, "0270": 272, "435683": 272, "1635": 272, "5920": 272, "433194": 272, "0931": 272, "1120": 272, "435607": 272, "1216": 272, "2180": 272, "519385": 272, "3873": 272, "4580": 272, "453399": 272, "4279": 272, "6231": 272, "442192": 272, "9115": 272, "9240": 272, "466270": 272, "7337": 272, "9590": 272, "409478": 272, "3781": 272, "415011": 272, "1007": 272, "5110": 272, "446059": 272, "1211": 272, "8490": 272, "522201": 272, "2833": 272, "7400": 272, "430777": 272, "3688": 272, "9010": 272, "444906": 272, "9130": 272, "7450": 272, "468161": 272, "8124": 272, "7120": 272, "407766": 272, "3789": 272, "2080": 272, "416694": 272, "1985": 272, "6770": 272, "441794": 272, "2994": 272, "94": 272, "1796": 272, "587939": 272, "4692": 272, "3027": 272, "440385": 272, "0941": 272, "6170": 272, "463834": 272, "6693": 272, "2570": 272, "413923": 272, "3618": 272, "427491": 272, "2658": 272, "5620": 272, "521096": 272, "4546": 272, "9522": 272, "446657": 272, "0732": 272, "0130": 272, "454492": 272, "7145": 272, "9771": 272, "451302": 272, "3318": 272, "9710": 272, "477444": 272, "4944": 272, "3068": 272, "502124": 272, "0790": 272, "7890": 272, "462595": 272, "7389": 272, "8006": 272, "491811": 272, "6677": 272, "7770": 272, "477864": 272, "6488": 272, "0460": 272, "472418": 272, "9834": 272, "9929": 272, "474434": 272, "0359": 272, "2120": 272, "478021": 272, "0706": 272, "1991": 272, "474688": 272, "0336": 272, "8083": 272, "475373": 272, "0636": 272, "2525": 272, "473063": 272, "0292": 272, "8033": 272, "473542": 272, "0651": 272, "9375": 272, "483644": 272, "0661": 272, "5310": 272, "462817": 272, "0432": 272, "1300": [272, 282], "446808": 272, "7913": 272, "90": 272, "1894": 272, "489466": 272, "9838": 272, "9945": 272, "474441": 272, "0361": 272, "478038": 272, "ruv_prop_estim": [272, 277, 282, 296], "209972": [272, 277, 280, 282, 288], "197452": 272, "005338": 272, "192852": 272, "199549": 272, "193411": 272, "195608": 272, "192557": 272, "198783": 272, "191425": 272, "192934": 272, "192682": 272, "000659": 272, "199545": 272, "000303": 272, "193747": 272, "000956": 272, "197305": 272, "006150": 272, "194664": 272, "005918": 272, "198812": 272, "000334": 272, "192753": 272, "006503": 272, "194238": 272, "009567": 272, "189160": 272, "005291": 272, "195766": 272, "003125": 272, "195730": 272, "195098": 272, "006600": 272, "195843": 272, "001364": 272, "189330": 272, "003100": 272, "193116": 272, "008094": 272, "189540": 272, "006380": 272, "196038": 272, "002606": 272, "197429": 272, "000340": 272, "204599": 272, "002549": 272, "190442": 272, "000522": 272, "195705": 272, "005726": 272, "192398": 272, "002984": 272, "196915": 272, "000299": 272, "198387": 272, "001229": 272, "190453": 272, "000216": 272, "197082": 272, "005988": 272, "191512": 272, "002433": 272, "194217": 272, "000649": 272, "191075": 272, "001918": 272, "197129": 272, "005915": 272, "183751": 272, "001489": 272, "187999": 272, "001004": 272, "194026": 272, "005955": 272, "187663": 272, "002481": 272, "193344": 272, "009365": 272, "187822": 272, "002901": 272, "187730": 272, "187425": 272, "002946": 272, "184713": 272, "006622": 272, "187724": 272, "002919": 272, "187525": 272, "003050": 272, "192812": 272, "005142": 272, "183104": 272, "001493": 272, "187672": 272, "002483": 272, "193349": 272, "009366": 272, "pop_clwt_estim": 272, "382904": 272, "010536": 272, "387669": 272, "010497": 272, "396947": 272, "010523": 272, "385807": 272, "010703": 272, "554417": 272, "011851": 272, "519989": 272, "012179": 272, "808497": 272, "011109": 272, "737404": [272, 298], "007109": 272, "709206": 272, "000803": 272, "736659": 272, "000429": 272, "706752": 272, "000822": 272, "662625": 272, "002097": 272, "709124": 272, "000793": 272, "704774": 272, "427285": 272, "003711": 272, "779125": 272, "001087": 272, "007108": 272, "059279": 272, "517590": 272, "056724": 272, "520520": 272, "063392": 272, "057943": 272, "019268": 272, "348000": 272, "008419": 272, "040813": 272, "045624": 272, "023159": 272, "057041": 272, "059912": 272, "003577": 272, "495110": 272, "070972": 272, "033397": 272, "013863": 272, "012482": 272, "367050": 272, "020109": 272, "442940": 272, "030354": 272, "491875": 272, "038044": 272, "224276": 272, "001885": 272, "848782": 272, "017435": 272, "646840": 272, "585757": 272, "000169": 272, "367142": 272, "002221": 272, "737357": 272, "009685": 272, "033267": 272, "009238": 272, "267484": 272, "012667": 272, "165471": 272, "005033": 272, "094740": 272, "010833": 272, "065816": 272, "004749": 272, "096523": 272, "005557": 272, "098655": 272, "107862": 272, "012020": 272, "118838": 272, "005781": 272, "002862": 272, "222520": 272, "005160": 272, "361570": 272, "008017": 272, "030930": 272, "005034": 272, "094706": 272, "010829": 272, "065876": 272, "pop_matwt_estim": 272, "019706": 272, "014651": 272, "020136": 272, "014954": 272, "022336": 272, "011936": 272, "005508": 272, "002344": 272, "013967": 272, "034213": 272, "034044": 272, "009672": 272, "008593": 272, "017124": 272, "000315": 272, "022223": 272, "019316": 272, "009542": 272, "010323": 272, "008652": 272, "018053": 272, "019211": 272, "001906": 272, "014021": 272, "011399": 272, "003565": 272, "010903": 272, "014331": 272, "013699": 272, "015830": 272, "000202": [272, 298], "002078": 272, "009019": 272, "005773": 272, "012366": 272, "002607": 272, "002247": 272, "005768": 272, "011567": 272, "006160": 272, "014272": 272, "004566": 272, "010938": 272, "002378": 272, "007473": 272, "011606": 272, "010672": 272, "000456": 272, "009445": 272, "014649": 272, "012169": 272, "002248": 272, "pop_vcwt_estim": 272, "953372": 272, "013320": 272, "984897": 272, "012092": 272, "972469": 272, "011946": 272, "954734": 272, "010781": 272, "009540": 272, "009922": 272, "989687": 272, "009576": 272, "986758": 272, "869150": 272, "632058": 272, "008418": 272, "751771": 272, "007571": 272, "416489": 272, "013879": 272, "724866": 272, "008196": 272, "746265": 272, "007399": 272, "727224": 272, "008331": 272, "666572": 272, "010074": 272, "751144": 272, "008031": 272, "711725": 272, "008833": 272, "012851": 272, "967468": 272, "751794": 272, "007573": 272, "416464": 272, "013880": 272, "1403": [272, 280, 282, 288, 296], "1404": [272, 280, 282, 288, 296], "1405": [272, 280, 282, 288, 296], "1406": [272, 280, 282, 288, 296], "1407": [272, 280, 282, 288, 296], "757118": [272, 280, 282, 288], "659694": [272, 280, 282, 288], "302503": [272, 280, 282, 288], "464327": [272, 280, 282, 288], "034898": [272, 280, 282, 288], "482240": 272, "223632": 272, "357442": 272, "119299": 272, "565277": 272, "696443": 272, "062486": 272, "234841": 272, "088594": 272, "953572": 272, "857979": 272, "193305": 272, "003283": 272, "861988": 272, "188718": 272, "005806": 272, "962325": 272, "455479": 272, "289527": 272, "216857": 272, "4015": 272, "2022": [272, 277, 280, 282, 288, 299], "462": 272, "nhowev": [272, 277, 282], "reduced_ofv": [272, 297], "extended_ofv": [272, 297], "ofv_drop": [272, 297], "extended_st": [272, 297], "621435": 272, "246753": 272, "394001": 272, "645626": 272, "219363": 272, "001068": 272, "875674": 272, "899671": 272, "152040": 272, "126842": 272, "678359": 272, "045482": 272, "821275": 272, "431017": 272, "290062": 272, "366965": 272, "488428": 272, "591623": 272, "039740": 272, "659788": 272, "942802": 272, "017391": 272, "380435": 272, "441298": 272, "668043": 272, "180108": 272, "388697": 272, "680065": 272, "025518": 272, "935973": 272, "446136": 272, "690615": 272, "782563": 272, "002416": 272, "644805": 272, "554053": 272, "674591": 272, "072441": 272, "183059": 272, "134631": 272, "547765": 272, "311846": 272, "373764": 272, "196444": 272, "delta_df": [272, 297], "extended_signific": [272, 297], "covariate_effect": [272, 278, 295, 297], "ofv_summari": [272, 297], "candidate_summari": [272, 297], "n_test": [272, 297], "n_ok": [272, 297], "n_localmin": [272, 297], "n_fail": [272, 297], "stepinclud": [272, 297], "estimation_ofv": 273, "prediction_ofv": 273, "545": 273, "863847": 273, "186": 273, "192727": 273, "512": 273, "953185": 273, "694832": 273, "547": 273, "843632": 273, "184": [273, 293, 297], "022535": 273, "579": 273, "109635": 273, "596550": 273, "prediction_ofv_sum": 273, "747": 273, "506644594254": 273, "read_raw_dataset": 274, "arrai": [274, 285, 299], "get_id": 274, "largest": 274, "ser": 274, "di": 274, "role": 274, "identif": [274, 296], "mostli": [274, 275, 292], "steven": 274, "typologi": 274, "en": [274, 275, 278], "wikipedia": 274, "wiki": [274, 283], "level_of_measur": 274, "annot": 274, "kg": 274, "mg": 274, "l": 274, "low": [274, 285, 287], "understand": [274, 291], "accompani": [274, 283], "And": [274, 283, 299], "under": [275, 281, 283, 297, 301], "construct": [275, 291], "complet": 275, "four": 275, "distinct": 275, "layer": [275, 288, 290], "worklow": 275, "higher": [275, 281, 285, 287, 298], "coupl": 275, "mathemat": [275, 285, 292], "concid": 275, "live": 275, "namespac": 275, "mutablesequ": 275, "scalar": [275, 285], "element": [275, 286, 301], "concern": [275, 283], "expos": 275, "numpydoc": 275, "readthedoc": 275, "ecosystem": 275, "thu": [275, 280, 283, 285, 299], "wrap": 275, "share": [275, 283, 290], "leak": 275, "third": [275, 283], "parti": [275, 283], "break": 275, "run_estmethod": 277, "chapter": [277, 288], "few": 277, "cartesian": 277, "addition": [277, 288, 299], "9999": 277, "examin": [277, 279], "runtime_estim": 277, "estmethod_run2": 277, "2422": 277, "465718": 277, "81": [277, 280, 286], "estmethod_run1": 277, "2271": 277, "769243": 277, "run_typ": 277, "1299": [277, 282], "696027": 277, "2420": 277, "117263": 277, "145": 277, "2702": 277, "1840": 277, "3241": 277, "6578": 277, "iiv_cl_estim": [277, 282, 296], "iiv_vc_estim": [277, 282, 296], "481858": [277, 280, 282, 288], "593654": [277, 280, 282, 288], "439589": 277, "483291": 277, "598179": 277, "901289": 277, "419533": 277, "408292": 277, "iiv_mat_estim": [277, 282, 296], "000130": [277, 282, 288], "322572": 277, "197647": 277, "865979": 277, "105366": 277, "10000": 277, "787": 277, "WITH": [277, 280, 282, 283], "THE": [277, 280, 282, 283], "creation": 278, "model_3b": 278, "u": [278, 287], "eta_i": 278, "leq": 278, "n_": 278, "par": [278, 285], "eta_k": 278, "bmatrix": 278, "vdot": 278, "eta_": [278, 285, 287], "sim": [278, 285, 287, 298], "mathcal": [278, 285, 287], "mu_2": 278, "omega_": [278, 285, 287], "n1": 278, "n2": 278, "ddot": 278, "latter": 278, "partit": 278, "5th": 278, "630859": 278, "868770": 278, "176754": 278, "95th": 278, "925602": 278, "082310": 278, "244607": 278, "569077": 278, "600360": 278, "632538": 278, "532478": 278, "824355": 278, "138312": 278, "577861": 278, "761430": 278, "991915": 278, "003863": 278, "148763": 278, "297579": 278, "600771": 278, "631260": 278, "661025": 278, "315965": 278, "549669": 278, "811532": 278, "margin": 278, "ij": 278, "ijk": 278, "omega_k": 278, "sigma_1": 278, "sigma_2": 278, "sigma_i": 278, "turn": [278, 285], "percent": 278, "red": 278, "figur": 278, "vconcatchart": 278, "sigma_": [278, 285, 287], "020503": 278, "628814": 278, "009309": 278, "544459": 278, "026950": 278, "613127": 278, "050396": 278, "551581": 278, "individual_effect": 278, "913307": 278, "899565": 278, "923297": 278, "939015": 278, "926632": 278, "948404": 278, "933506": 278, "894967": 278, "970755": 278, "010192": 278, "973823": 278, "047109": 278, "992728": 278, "986142": 278, "999404": 278, "361911": 278, "322628": 278, "418737": 278, "894772": 278, "868658": 278, "917333": 278, "947797": 278, "923656": 278, "969732": 278, "771958": 278, "748072": 278, "790423": 278, "790120": 278, "768277": 278, "806911": 278, "percentu": 278, "unexplained_vari": 278, "sd_observ": 278, "sd_5th": 278, "sd_95th": 278, "469535": 278, "359934": 278, "547612": 278, "465490": 278, "352335": 278, "538174": 278, "165502": 278, "141580": 278, "190726": 278, "159149": 278, "134989": 278, "183613": 278, "420471": 278, "327104": 278, "490419": 278, "404440": 278, "306148": 278, "467046": 278, "143317": 278, "122348": 278, "166012": 278, "141826": 278, "120282": 278, "163610": 278, "percetil": 278, "025328": 278, "022571": 278, "020115": 278, "216681": 278, "188254": 278, "163572": 278, "027391": 278, "021634": 278, "020540": 278, "intermedi": 278, "model_4": [278, 285], "parameter_inits_and_estim": 278, "model_3": 278, "115195": 278, "007066": 278, "209016": 278, "125999": 278, "020191": 278, "224959": 278, "126000": 278, "007084": 278, "38635": 278, "220463": 278, "195326": 278, "176796": 278, "bsv_apgr": [278, 285], "010583": 278, "107027": 278, "000008": 278, "171529": 278, "404278": 278, "012042": 278, "115427": 278, "000032": 278, "208475": 278, "415588": 278, "000030": 278, "062712": 278, "117271": 278, "039930": 278, "446939": 278, "402075": 278, "bsv_wgt": [278, 285], "244579": 278, "244448": 278, "002173": 278, "002170": 278, "244080": 278, "007763": 278, "007760": 278, "249237": 278, "034610": 278, "015250": 278, "relative_chang": 278, "773218": 278, "095327": 278, "520526": 278, "271369": 278, "110618": 278, "974324": 278, "657803": 278, "852": 278, "803483": 278, "753": 278, "302743": 278, "themselv": 278, "ideal": 278, "estimated_covari": 278, "stdev": 278, "423728": 278, "237640": 278, "525424": 278, "704565": 278, "nyberg": 278, "hb": 278, "jonsson": 278, "mo": 278, "introduct": 278, "cpt": 278, "pharmacometr": [278, 281, 283, 299], "syst": 278, "pharmacol": 278, "1002": 278, "psp4": 278, "12741": 278, "plan": 279, "stabl": 279, "googl": [279, 292], "coral": 279, "repo": 279, "tflite_runtim": 279, "nonlinear": 279, "sever": [279, 295], "read_model_result": 280, "aspect": [280, 295, 299], "explor": [280, 292], "naiv": 280, "minima": 280, "\u03b4ofv": [280, 282, 288], "\u03b4aic": [280, 282, 288], "\u03b4bic": [280, 282, 288], "iivsearch_no_of_etas_candidate3": 280, "282024": 280, "iivsearch_no_of_etas_candidate2": 280, "217": 280, "691571": 280, "iivsearch_no_of_etas_candidate6": 280, "385": 280, "641987": 280, "iivsearch_no_of_etas_candidate1": 280, "631": 280, "871991": 280, "iivsearch_no_of_etas_candidate5": 280, "633": [280, 286], "419500": 280, "iivsearch_no_of_etas_candidate4": 280, "815": 280, "076729": 280, "iivsearch_no_of_etas_candidate7": 280, "834": 280, "249063": 280, "iivsearch_block_structure_candidate1": 280, "971960": 280, "1283": 280, "597406": 280, "1279": 280, "315382": 280, "1061": 280, "623812": 280, "673395": 280, "443392": 280, "645": 280, "895882": 280, "464": 280, "238653": 280, "066319": 280, "1365": 280, "569365": 280, "178325": 280, "1280": 280, "1278": [280, 288], "1070": 280, "204731": 280, "1058": 280, "897": 280, "963854": 280, "024311": 280, "644": 280, "650": 280, "186341": 280, "640": 280, "468": 280, "529112": 280, "458": 280, "437": 280, "440744": 280, "1364": 280, "1261": [280, 282], "189012": 280, "1259": [280, 288], "530267": [280, 288], "1039": 280, "215418": [280, 297], "641723": 280, "034998": 280, "620": 280, "864210": 280, "206982": 280, "417": 280, "411370": 280, "160972": 280, "5333": 280, "0366": 280, "1164": 280, "2929": 280, "8058": 280, "9055": 280, "2270": 280, "9424": 280, "1360": 280, "239": 280, "1090": 280, "234": 280, "6680": 280, "9380": 280, "6690": 280, "9880": 280, "433544": 280, "114210": 280, "347648": 280, "316164": 280, "310155": 280, "922906": 280, "434563": 280, "436279": 280, "481830": 280, "594777": 280, "396159": 280, "516927": 280, "593578": 280, "414690": 280, "247930": 280, "656304": 280, "00013": 280, "31998": 280, "08352": 280, "43473": 280, "209975": 280, "401593": 280, "574966": 280, "736398": 280, "750954": 280, "744891": 280, "810669": 280, "215885": 280, "iiv_cl_iiv_vc_estim": 280, "498114": 280, "965311": 280, "348227": 280, "596114": 280, "524856": 280, "831038": 280, "973037": 280, "826292": 280, "168816": 280, "275494": 280, "612863": 280, "081253": 280, "444919": 280, "093815": 280, "067016": 280, "554482": 280, "103963": 280, "060027": 280, "670815": 280, "108198": 280, "049148": 280, "371": 280, "post": [281, 296], "sens": 282, "brute": 282, "approach": 282, "nonzero": 282, "constant": 282, "540508": 282, "1265": 282, "694052": 282, "230772": 282, "384316": 282, "230394": 282, "383938": 282, "1262": 282, "153544": 282, "750000": 282, "403544": 282, "750400": 282, "403145": 282, "060114": 282, "093431": 282, "043077": 282, "1257": 282, "110467": 282, "782429": 282, "1115": 282, "911624": 282, "015062": 282, "707566": 282, "017679": 282, "017280": 282, "707992": 282, "707614": 282, "017728": 282, "1145": 282, "944840": 282, "230": 282, "1954": 282, "242": [282, 293, 295], "440613": 282, "665": 282, "439784": 282, "1951": 282, "241": 282, "1950": 282, "440611": 282, "1402": 282, "439785": 282, "439783": 282, "2313": 282, "438628": 282, "474140": 282, "586866": 282, "311861": 282, "472835": 282, "590422": 282, "320387": 282, "474125": 282, "586859": 282, "311859": 282, "474111": 282, "586860": 282, "311903": 282, "590425": 282, "320393": 282, "472840": 282, "590424": 282, "320395": 282, "572627": 282, "290631": 282, "194680": 282, "002735": 282, "195532": 282, "194676": 282, "194675": 282, "195531": 282, "197005": 282, "483460": 282, "000006": 282, "000000e": [282, 297], "241921": 282, "119820": 282, "001912": 282, "068405": 282, "121866": 282, "620420": 282, "271367": 282, "291396": 282, "230854": 282, "051358": 282, "936871": 282, "267222": 282, "042977": 282, "050766": 282, "059323": 282, "250083": 282, "291876": 282, "187631": 282, "020838": 282, "612880": 282, "660334": 282, "657": 282, "279": [282, 293], "adopt": 283, "wikimedia": 283, "bowl_of_hygieia_by_david": 283, "svg": 283, "cc": 283, "BY": 283, "sa": 283, "font": 283, "pt": 283, "san": 283, "relicens": 283, "lgpl": 283, "know": 283, "maintaint": 283, "softwar": [283, 292, 299], "redistribut": 283, "publish": 283, "foundat": 283, "hope": 283, "warranti": 283, "impli": 283, "merchant": 283, "FOR": 283, "modif": [283, 295], "permit": 283, "retain": 283, "disclaim": 283, "reproduc": 283, "materi": 283, "holder": 283, "AND": 283, "AS": 283, "OR": 283, "BUT": 283, "NOT": 283, "TO": 283, "OF": 283, "IN": 283, "shall": 283, "BE": 283, "liabl": 283, "indirect": 283, "incident": 283, "exemplari": 283, "consequenti": 283, "damag": 283, "procur": 283, "good": 283, "servic": 283, "loss": 283, "profit": 283, "busi": 283, "interrupt": 283, "ON": 283, "theori": [283, 285], "liabil": 283, "contract": 283, "tort": 283, "neglig": 283, "aris": 283, "advis": 283, "SUCH": 283, "june": 283, "2007": 283, "inc": 283, "fsf": 283, "preambl": 283, "copyleft": 283, "practic": 283, "design": [283, 285, 287, 292, 299], "awai": 283, "contrast": 283, "guarante": 283, "speak": 283, "price": 283, "charg": 283, "wish": [283, 287], "piec": 283, "prevent": 283, "deni": 283, "ask": [283, 301], "surrend": 283, "therefor": 283, "respons": 283, "grati": 283, "fee": 283, "recipi": 283, "gpl": 283, "assert": 283, "offer": [283, 287], "permiss": 283, "clearli": 283, "sake": 283, "erron": 283, "devic": 283, "although": 283, "manufactur": 283, "fundament": 283, "incompat": 283, "aim": [283, 295], "systemat": 283, "abus": 283, "area": [283, 292], "precis": 283, "unaccept": 283, "prohibit": 283, "substanti": 283, "domain": [283, 290, 299], "stand": 283, "readi": 283, "provis": 283, "futur": 283, "threaten": 283, "constantli": 283, "patent": 283, "danger": 283, "proprietari": 283, "assur": 283, "law": 283, "semiconductor": 283, "mask": 283, "license": 283, "address": 283, "organ": [283, 285], "fashion": 283, "exact": 283, "earlier": 283, "cover": [283, 288, 289, 291, 300], "unmodifi": 283, "propag": 283, "secondarili": 283, "infring": 283, "countri": 283, "convei": 283, "mere": 283, "network": 283, "transfer": 283, "extent": 283, "conveni": [283, 285], "promin": 283, "visibl": 283, "menu": 283, "criterion": 283, "offici": 283, "wide": 283, "among": 283, "essenti": 283, "kernel": 283, "script": [283, 299], "link": [283, 296], "subprogram": 283, "intim": 283, "regener": 283, "grant": 283, "irrevoc": 283, "affirm": 283, "unlimit": 283, "constitut": 283, "fair": 283, "equival": [283, 299], "sole": 283, "facil": 283, "compli": 283, "behalf": 283, "relationship": [283, 297], "circumst": 283, "sublicens": 283, "anti": 283, "circumvent": 283, "deem": 283, "technolog": 283, "fulfil": 283, "oblig": 283, "articl": 283, "wipo": 283, "treati": 283, "decemb": 283, "1996": 283, "waiv": 283, "forbid": 283, "exercis": 283, "intent": 283, "enforc": 283, "medium": [283, 292], "conspicu": 283, "intact": 283, "absenc": 283, "along": 283, "relev": [283, 289, 299], "anyon": 283, "who": [283, 289], "possess": 283, "invalid": 283, "natur": 283, "storag": 283, "aggreg": 283, "beyond": 283, "embodi": 283, "durabl": 283, "customarili": 283, "interchang": 283, "spare": 283, "reason": [283, 292], "cost": 283, "server": 283, "occasion": 283, "noncommerci": 283, "subsect": 283, "6b": 283, "further": 283, "clear": [283, 301], "sai": [283, 289], "host": 283, "satisfi": 283, "peer": 283, "transmiss": 283, "6d": 283, "portion": 283, "consum": 283, "tangibl": 283, "household": 283, "sold": 283, "incorpor": 283, "dwell": 283, "doubt": 283, "resolv": [283, 290], "favor": 283, "coverag": 283, "typic": [283, 299], "commerci": 283, "industri": 283, "procedur": 283, "suffic": 283, "interf": 283, "perpetu": 283, "character": 283, "But": 283, "nor": 283, "abil": 283, "rom": 283, "advers": 283, "protocol": 283, "publicli": 283, "password": 283, "unpack": 283, "supplement": 283, "govern": 283, "notwithstand": 283, "misrepresent": 283, "licensor": 283, "declin": 283, "trademark": 283, "trade": 283, "indemnif": 283, "contractu": 283, "impos": 283, "surviv": 283, "termin": 283, "expressli": 283, "void": 283, "paragraph": 283, "ceas": 283, "reinstat": 283, "provision": 283, "perman": 283, "notifi": 283, "prior": 283, "dai": 283, "cessat": 283, "moreov": 283, "cure": 283, "receipt": 283, "qualifi": 283, "ancillari": 283, "consequ": 283, "likewis": 283, "downstream": 283, "complianc": 283, "entiti": 283, "asset": 283, "subdivid": 283, "predecessor": 283, "plu": 283, "effort": 283, "royalti": 283, "litig": 283, "cross": 283, "claim": 283, "counterclaim": 283, "lawsuit": 283, "alleg": 283, "sell": 283, "sale": 283, "acquir": 283, "hereaft": 283, "manner": [283, 288], "worldwid": 283, "agreement": 283, "denomin": 283, "coven": 283, "sue": 283, "knowingli": 283, "readili": 283, "arrang": 283, "depriv": 283, "yourself": 283, "benefit": [283, 292], "knowledg": 283, "believ": 283, "pursuant": 283, "convey": 283, "discriminatori": 283, "scope": 283, "payment": 283, "primarili": 283, "march": 283, "constru": 283, "defens": 283, "court": 283, "contradict": 283, "excus": 283, "simultan": [283, 288], "pertin": 283, "agre": 283, "whom": 283, "refrain": 283, "affero": 283, "revis": 283, "Such": 283, "spirit": 283, "ever": 283, "THERE": 283, "qualiti": 283, "prove": 283, "defect": 283, "repair": 283, "WILL": 283, "inabl": 283, "BEING": 283, "inaccur": 283, "sustain": 283, "failur": [283, 292], "review": 283, "waiver": 283, "civil": 283, "greatest": 283, "achiev": 283, "attach": 283, "safest": 283, "pointer": 283, "brief": 283, "idea": [283, 292], "electron": 283, "paper": 283, "hypothet": 283, "Of": 283, "cours": 283, "gui": 283, "box": [283, 295], "employ": 283, "programm": 283, "school": 283, "philosophi": 283, "why": 283, "7b2feb6f20b626a559d3150f6638c111f20b5213": 283, "lin_evalu": 284, "lin_estim": 284, "268756": 284, "problemat": 284, "947354": 284, "939053": 284, "008301": 284, "970582": 284, "012053": 284, "041471": 284, "982345": 284, "979456": 284, "002889": 284, "457096": 284, "435700": 284, "021396": 284, "839445": 284, "838391": 284, "001054": 284, "257222": 284, "278016": 284, "020794": 284, "098344": 284, "077164": 284, "021179": 284, "538623": 284, "520111": 284, "018512": 284, "647972": 284, "673400": 284, "025427": 284, "394648": 284, "373180": 284, "021468": 284, "480163": 284, "505680": 284, "025517": 284, "650236": 284, "629298": 284, "020938": 284, "991406": [284, 286], "988587": 284, "002820": 284, "378873": 284, "372846": 284, "006028": 284, "739906": 284, "725640": 284, "014265": 284, "328801": 284, "326482": 284, "002319": 284, "113286": 284, "104515": 284, "008771": 284, "212076": 284, "325127": 284, "113051": 284, "334048": 284, "321306": 284, "012742": 284, "327782": 284, "306287": 284, "021495": 284, "821537": 284, "795371": 284, "026165": 284, "631283": 284, "620311": 284, "010972": 284, "861666": 284, "855927": 284, "005739": 284, "915260": 284, "913348": 284, "001913": 284, "988972": 284, "024483": 284, "035512": 284, "279274": 284, "269277": 284, "009997": 284, "733179": 284, "729199": 284, "003980": 284, "830055": 284, "827764": 284, "002290": 284, "851725": 284, "847176": 284, "004549": 284, "212098": 284, "192122": 284, "019976": 284, "774789": 284, "773559": 284, "001230": 284, "352292": 284, "351131": 284, "001162": 284, "172644": 284, "165200": 284, "007443": 284, "427375": 284, "420258": 284, "007117": 284, "381438": 284, "412378": 284, "030941": 284, "624011": 284, "614613": 284, "009397": 284, "970630": 284, "955216": 284, "015414": 284, "177025": 284, "002885": 284, "206543": 284, "180626": 284, "025916": 284, "955033": 284, "945036": 284, "982451": 284, "972114": 284, "010337": 284, "051495": 284, "098643": 284, "047147": 284, "424500": 284, "425925": 284, "001425": 284, "734347": 284, "702764": 284, "031583": 284, "018483": 284, "997957": 284, "020526": 284, "810285": [284, 286], "807205": 284, "003080": 284, "279257": 284, "276411": 284, "002846": 284, "168465": 284, "267932": 284, "099467": 284, "190512": 284, "178815": 284, "011697": 284, "749138": 284, "727859": 284, "021278": 284, "598562": 284, "616685": 284, "018123": 284, "237457": 284, "251607": 284, "014150": 284, "568928": 284, "581417": 284, "012489": 284, "800065": 284, "795239": 284, "004826": 284, "098027": 284, "103873": 284, "005846": 284, "586253": [284, 286], "582931": 284, "003323": 284, "663950": 284, "650298": 284, "013652": 284, "850995": 284, "833333": 284, "017662": 284, "605848": 284, "592551": 284, "013297": 284, "iofv_plot": 284, "At": 285, "heart": 285, "li": [285, 299], "subclass": 285, "principl": 285, "pharmi": 285, "transpar": 285, "mymodel": [285, 287], "inspect": 285, "sdtab1": 285, "parset": 285, "displaystyl": [285, 287], "eps_": [285, 287], "eta1": 285, "frem_model": 285, "omega\u2082": 285, "omega\u2083": 285, "omega\u2084": 285, "\u2082": 285, "eta\u2083": [285, 287], "\u2083": 285, "eta\u2084": [285, 287], "eps\u2082": 285, "epscov": 285, "bsv_": 285, "omega_2_1": 285, "omega_3_1": 285, "omega_4_1": 285, "omega_3_2": 285, "omega_4_2": 285, "omega_4_3": 285, "000286193": 285, "0676481": 285, "0256033": 285, "0235094": 285, "00161838": 285, "24458": 285, "omega_est": 285, "0393482": 285, "0168369": 285, "0442286": 285, "0426757": 285, "0259374": 285, "0654878": 285, "00168063": 285, "983027": 285, "240423": 285, "98305": 285, "choleski": 285, "198363807182661": 285, "0848788911603008": 285, "136868454493349": 285, "222967085720797": 285, "616745467855979": 285, "743597812371906": 285, "215138540674925": 285, "145697201390566": 285, "508675383095755": 285, "810424017694199": 285, "pure": 285, "astyp": 285, "numeric64": 285, "linalg": 285, "19836381": 285, "08487889": 285, "13686845": 285, "22296709": 285, "61674547": 285, "74359781": 285, "21513854": 285, "1456972": 285, "50867538": 285, "81042402": 285, "quit": 285, "flexibl": 285, "cumbersom": 285, "easili": 285, "a_": [285, 287], "unimport": 285, "004696": [285, 286], "158920": [285, 286], "029351": [285, 286], "theta_": 285, "s_": [285, 287], "testdata": 286, "2760562818805": 286, "parameter_estimates_sdcorr": 286, "171321": 286, "167051": 286, "115069": 286, "Or": 286, "standard_errors_sdcorr": 286, "039153": 286, "022378": 286, "009904": 286, "relative_standard_error": 286, "044731": 286, "027325": 286, "527072": 286, "457068": 286, "267918": 286, "172147": 286, "proper": 286, "388058": 286, "356900": 286, "238442": 286, "096516": 286, "invers": 286, "29955600": 286, "400": 286, "910": 286, "267": 286, "039": 286, "809": 286, "520": 286, "980": 286, "200": 286, "450": 286, "947352": 286, "970591": 286, "982342": 286, "457091": 286, "839437": 286, "257230": 286, "098338": 286, "538621": 286, "647969": 286, "394643": 286, "480164": 286, "650233": 286, "378880": 286, "739902": 286, "328800": 286, "113284": 286, "212096": 286, "334047": 286, "327778": 286, "821533": 286, "631281": 286, "861669": 286, "915261": 286, "988977": 286, "279273": 286, "733181": 286, "830053": 286, "851724": 286, "212095": 286, "774791": 286, "352283": 286, "172643": 286, "427376": 286, "381444": 286, "624014": 286, "970627": 286, "177028": 286, "206540": 286, "955029": 286, "982447": 286, "051499": 286, "424503": 286, "734342": 286, "018477": 286, "279258": 286, "168486": 286, "190508": 286, "749134": 286, "598565": 286, "237467": 286, "568934": 286, "800062": 286, "098025": 286, "663948": 286, "850993": 286, "605845": 286, "143": 286, "045": [286, 293], "971": 286, "881": 286, "575": 286, "080": 286, "063": 286, "427": 286, "668": 286, "543": 286, "662": 286, "478": 286, "667": 286, "253": 286, "495": 286, "918": 286, "67071": 286, "401100": 286, "35080": 286, "587770": 286, "36360": 286, "278800": 286, "19730": 286, "670700": 286, "21710": 286, "352600": 286, "86050": 286, "067200": 286, "35060": 286, "059269": 286, "72100": 286, "036754": 286, "10860": 286, "814140": 286, "28180": 286, "699410": 286, "eb": 286, "043861": 286, "005430": 286, "166321": 286, "131833": 286, "095934": 286, "130868": 286, "009154": 286, "017388": 286, "102019": 286, "283500": 286, "019417": 286, "099839": 286, "045946": 286, "059072": 286, "024270": 286, "189351": 286, "248536": 286, "091872": 286, "009545": 286, "012052": 286, "066151": 286, "293685": 286, "030236": 286, "074789": 286, "094502": 286, "147433": 286, "076820": 286, "105604": 286, "020051": 286, "066265": 286, "086035": 286, "023260": 286, "067138": 286, "030859": 286, "337255": 286, "035532": 286, "032579": 286, "028410": 286, "003589": 286, "080613": 286, "060233": 286, "052854": 286, "004469": 286, "057344": 286, "051992": 286, "212941": 286, "137510": 286, "004111": 286, "023282": 286, "302636": 286, "039069": 286, "119442": 286, "044956": 286, "263320": 286, "000776": 286, "083231": 286, "003150": 286, "012752": 286, "049654": 286, "080932": 286, "000555": 286, "099614": 286, "061864": 286, "332738": 286, "038156": 286, "067641": 286, "038017": 286, "184137": 286, "156617": 286, "208753": 286, "114558": 286, "053036": 286, "008405": 286, "026004": 286, "144920": 286, "081646": 286, "083320": 286, "015380": 286, "000392": 286, "078062": 286, "018966": 286, "112030": 286, "112715": 286, "383786": 286, "001730": 286, "167583": 286, "042068": 286, "066598": 286, "037600": 286, "000093": 286, "010662": 286, "009775": 286, "058306": 286, "229005": 286, "033958": 286, "008959": 286, "092312": 286, "050987": 286, "192569": 286, "002727": 286, "225657": 286, "115824": 286, "204269": 286, "054792": 286, "066334": 286, "123689": 286, "239678": 286, "047215": 286, "186615": 286, "000949": 286, "010812": 286, "015929": 286, "017213": 286, "005234": 286, "122552": 286, "076677": 286, "095696": 286, "024883": 286, "002999": 286, "007157": 286, "model_ref": 287, "easi": [287, 292], "pipelin": 287, "unfix_parameters_to": 287, "print_model_diff": 287, "ipython": 287, "pkmat": 287, "errori": 287, "pkcl": 287, "vd1": 287, "advan2": 287, "s2": 287, "vka": 287, "pkmdt": 287, "matd1": 287, "pop_mdt": 287, "trans1": 287, "transit4": 287, "s5": 287, "vk12": 287, "mdtk23": 287, "mdtk34": 287, "mdtk45": 287, "mdtk50": 287, "valag1": 287, "similarli": [287, 301], "tol": 287, "pkkm": 287, "desdadt": 287, "pop_clmm": 287, "067": 287, "pop_km": 287, "iiv_clmm": 287, "pkclmm": 287, "002346535": 287, "advan3": 287, "trans4": 287, "pkvp1": 287, "v1q": 287, "qp1v2": 287, "pop_qp1": 287, "050458": 287, "pop_vp1": 287, "onto": 287, "pkwgt_median": 287, "30000cl": 287, "clwgt": 287, "wgt_median": 287, "clwgtv": 287, "pop_clwgt": 287, "user_effect": 287, "30000wgt_std": 287, "704565cl": 287, "wgt_std": 287, "pketab1": 287, "etab1": 287, "etab2": 287, "lambda2": 287, "analog": 287, "pketat1": 287, "384": 287, "etat1": 287, "pketad1": 287, "etad1": 287, "eta_s1": 287, "iiv_s1": 287, "eta_v": 287, "eta_new": 287, "eta_3": 287, "iiv_": 287, "eta_iov_1_2": 287, "pkiov_1": 287, "0if": 287, "iov_1": 287, "eta_iov_1_1if": 287, "eta_iov_1_2etai1": 287, "etai1": 287, "00309626": 287, "omega_iov_1": 287, "eta_iov_2_1": 287, "eta_iov_2_2": 287, "eta_iov_1_2iov_2": 287, "iov_2": 287, "eta_iov_2_1if": 287, "eta_iov_2_2etai1": 287, "etai2": 287, "0031128": 287, "omega_iov_2": 287, "eta_4": 287, "pkdummyeta": 287, "dummyomega": 287, "leav": 287, "isn": 287, "runnabl": 287, "epsilon_a": 287, "approx": 287, "taylor": 287, "epsilon_": 287, "proportin": 287, "epsilon_p": 287, "sigma_prop": [287, 296], "sigma_add": [287, 296], "eps_1": 287, "iiv_ruv1": 287, "ruv1": 287, "someim": 287, "correspondng": 287, "11506954418958998": 287, "errorw": 287, "fy": 287, "model_block": 287, "445550": 287, "bootstrap_dir1": 287, "597341": 287, "039061": 287, "365446": 287, "019725": 287, "secondary_paramet": 287, "delai": [288, 299], "grammar": [288, 292], "exhaustive_stepwis": 288, "obtain": 288, "basi": 288, "subsequ": [288, 289, 299], "modelsearch_candidate2": [288, 299], "594608": 288, "1272": 288, "124874": 288, "modelsearch_candidate3": [288, 299], "558028": 288, "088295": 288, "modelsearch_candidate4": [288, 299], "956313": 288, "1270": 288, "486580": 288, "287000": 288, "1260": 288, "817266": 288, "362287": 288, "1327": 288, "153182": 288, "1325": 288, "551467": 288, "1307": 288, "301235": 288, "1295": 288, "1305": 288, "1289": 288, "2927": 288, "4334": 288, "7778": 288, "0058": 288, "1640": 288, "260324": 288, "7646": 288, "824443": 288, "5477": 288, "607839": 288, "1147": 288, "842498": 288, "470974": 288, "595276": 288, "526185": 288, "930160": 288, "495109": 288, "322680": 288, "470531": 288, "515250": 288, "312692": 288, "194221": 288, "202201": 288, "207885": 288, "232322": 288, "199750": 288, "205369": 288, "193439": 288, "pop_qp1_estim": 288, "pop_vp1_estim": 288, "pop_mdt_estim": 288, "155413": 288, "4192": 288, "6100": 288, "172730": 288, "3977": 288, "4562": 288, "158070": 288, "8042": 288, "8517": 288, "iiv_mdt_estim": 288, "156289": 288, "192020": 288, "092419": 288, "262429": 288, "720369": 288, "464263": 288, "127061": 288, "906722": 288, "053781": 288, "923055": 288, "795863": 288, "030658": 288, "661330": 288, "168680": 288, "833073": 288, "041529": 288, "205858": 288, "064930": 288, "609673": 288, "396329": 288, "928556": 288, "365": 288, "330": 288, "topic": 289, "scheme": 289, "theta_cl": 289, "mention": 289, "ve": 289, "despit": 289, "write_etas_in_abbr": 289, "altair": [290, 292], "vega": 290, "lite": 290, "ggplot": 290, "editor": 290, "clamp": 290, "vconcat": 290, "spec": 290, "inten": 291, "export": 291, "strictli": 291, "necessesari": 291, "detect_model": 291, "summer": 292, "master": 292, "thesi": 292, "internship": 292, "email": 292, "team": 292, "tox": 292, "pytest": 292, "sphinx": 292, "wise": 292, "known": 292, "trial": 292, "involv": 292, "outcom": 292, "350h": 292, "difficulti": 292, "mentor": 292, "scipi": 292, "focu": 292, "proof": 292, "concept": 292, "algebra": 292, "simul": [292, 298], "scratch": 292, "lark": 292, "earlei": 292, "lalr": 292, "stricter": 292, "175h": 292, "almost": 292, "compat": 292, "benefici": 292, "diff": 292, "potenti": 292, "eas": 292, "jupyt": 292, "holoview": 292, "bokeh": 292, "monitor": 292, "ongo": 292, "veri": 292, "happen": [292, 301], "converg": 292, "sort": [292, 299], "dashboard": 292, "complement": 292, "realtim": 292, "restart": [292, 301], "middl": 292, "worflow": 292, "cv": [293, 295], "772": [293, 295], "700": 293, "042": [293, 295], "sdeps_0": [293, 295], "t1": 293, "298": 293, "sdeps_t1": 293, "t2": 293, "886": 293, "sdeps_t2": 293, "t3": 293, "272": 293, "sdeps_t3": 293, "t4": 293, "716": 293, "sdeps_t4": 293, "t5": 293, "218": 293, "sdeps_t5": 293, "t6": 293, "928": 293, "sdeps_t6": 293, "t7": 293, "092": 293, "sdeps_t7": 293, "t8": 293, "914": 293, "sdeps_t8": 293, "t9": 293, "sdeps_t9": 293, "390": [293, 295], "159": [293, 295], "t0": [293, 295], "271": [293, 295], "sdeps_t0": [293, 295], "956": [293, 295], "717": 293, "014": 293, "983": 293, "884": 293, "017": 293, "955": 293, "958": 293, "969": 293, "933": 293, "022": 293, "819": 293, "007": 293, "755": 293, "982": 293, "387": 293, "th_0": 293, "257": 293, "867": 293, "th_t1": 293, "211": 293, "th_t2": 293, "277": 293, "761": 293, "th_t3": 293, "033": 293, "th_t4": 293, "367": 293, "th_t5": 293, "204": 293, "170": 293, "th_t6": 293, "078": 293, "th_t7": 293, "841": 293, "th_t8": 293, "th_t9": 293, "030": 293, "124": 293, "289": 293, "386": 293, "203": 293, "019": 293, "delta_pow": [293, 295], "037": [293, 295], "autocorrel": [293, 295], "dtb": [293, 295], "91": [293, 295], "idv_varying_ruv": 293, "idv_varying_ruv_cutoff0": 293, "idv_varying_ruv_cutoff1": 293, "idv_varying_ruv_cutoff2": 293, "idv_varying_ruv_cutoff3": 293, "idv_varying_ruv_cutoff4": 293, "idv_varying_ruv_cutoff5": 293, "idv_varying_ruv_cutoff6": 293, "idv_varying_ruv_cutoff7": 293, "idv_varying_ruv_cutoff8": 293, "idv_varying_combin": 293, "idv_varying_theta": 293, "sdep": 293, "delet": 294, "diagnost": 294, "impact": 295, "improement": 295, "592698": 295, "197887": 295, "007493": 295, "521171": 295, "et1apgr": 295, "487930": 295, "residual_error_model": 295, "910000": 295, "030000": 295, "diagnos": 295, "structural_bia": 295, "cpred": 295, "binmin": 295, "binmax": 295, "binid": 295, "258": 295, "strutur": 295, "mdel": 295, "fullblock_paramet": 295, "183463": 295, "171306": 295, "554610": 295, "154408": 295, "167053": 295, "cox": 295, "boxcox_paramet": 295, "shape": 295, "new_sd": 295, "old_sd": 295, "922083": 295, "182037": 295, "332800": 295, "166021": 295, "tdist_paramet": 295, "79": 295, "9997": 295, "168477": 295, "9986": 295, "166469": 295, "residual_error": 295, "additional_paramet": 295, "coeff": 295, "48793": 295, "033334": 295, "48218": 295, "052342": 295, "59034": 295, "008371": 295, "00887": 295, "003273": 295, "set_time_varying_error_model": 296, "ibrahim": 296, "quickli": [296, 299], "assess": 296, "inde": 296, "cwres_model": 296, "479721": 296, "385268": 296, "002792": 296, "time_varying1": 296, "117041": 296, "555154": 296, "time_varying3": 296, "336641": 296, "091207": 296, "065738": 296, "654562": 296, "046578": 296, "519115": 296, "612710": 296, "643741": 296, "027766": 296, "000367": 296, "967365": 296, "00123": 296, "0976": 296, "12252": 296, "14299": 296, "000337": 296, "05242": 296, "006105": 296, "10545": 296, "12659": 296, "15573": 296, "00054": 296, "04769": 296, "030825": 296, "mox3": 296, "2460": 296, "704469": 296, "957378": 296, "2473": 296, "661847": 296, "269102": 296, "2495": 296, "973571": 296, "2444": 296, "2455": 296, "2475": 296, "2423": 296, "757516": 296, "2435": 296, "047712": 296, "2453": 296, "068976": 296, "707": 296, "5434": 296, "531596": 296, "794": 296, "3091": 296, "528620": 296, "3094": 296, "532547": 296, "iiv_vc_iiv_cl_estim": 296, "077743": 296, "038888": 296, "076793": 296, "039924": 296, "071628": 296, "038470": 296, "072309": 296, "704770": 296, "093311": 296, "074889": 296, "707665": 296, "081095": 296, "075048": 296, "705429": 296, "044311": 296, "iiv_ruv1_estim": 296, "time_varying_estim": 296, "039675": 296, "040734": 296, "42509": 296, "215727": 296, "655144": 296, "708324": 296, "762729": 296, "236530": 296, "229762": 296, "715966": 296, "423148": 296, "419741": 296, "774540": 296, "164274": 296, "450202": 296, "195425": 296, "960585": 296, "090461": 296, "848498": 296, "052021": 296, "239462": 296, "065148": 296, "571348": 296, "244582": 296, "161981": 296, "509910": 296, "373696": 296, "084489": 296, "647643": 296, "344772": 296, "083776": 296, "259395": 296, "101415": 296, "024651": 296, "443542": 296, "124023": 296, "183089": 296, "977222": 296, "219": 296, "moustafa": 296, "m": 296, "maria": 296, "kjellsson": 296, "aap": 296, "1208": 296, "s12248": 296, "018": 296, "0240": 296, "pha": 297, "219210": 297, "90878": 297, "219167": 297, "36222": 297, "bmi": 297, "219171": 297, "47564": 297, "cycll": 297, "219203": 297, "94536": 297, "diag": 297, "219206": 297, "01527": 297, "disdur": 297, "219032": 297, "86056": 297, "215321": 297, "70954": 297, "215306": 297, "67698": 297, "phia": 297, "men": 297, "215407": 297, "40295": 297, "phib": 297, "georeg": 297, "215373": 297, "77800": 297, "216968": 297, "25989": 297, "slp": 297, "215359": 297, "18150": 297, "54656": 297, "140000e": 297, "43314": 297, "390000e": 297, "96342": 297, "319000e": 297, "89351": 297, "695800e": 297, "178": 297, "04822": 297, "290000e": 297, "03256": 297, "060000e": 297, "72597": 297, "10102": 297, "580000e": 297, "1661": 297, "58291": 297, "50452": 297, "phaag": 297, "phabmi": 297, "phacycl": 297, "phadiag": 297, "phadisdur": 297, "backward_scm_dir1": 297, "phawt": 297, "phiamen": 297, "phibgeoreg": 297, "phibmen": 297, "slpgeoreg": 297, "304": 297, "beween": 297, "slightli": 297, "215961": 297, "46277": 297, "3249": 297, "44601": 297, "215748": 297, "07194": 297, "213": 297, "39083": 297, "215570": 297, "57352": 297, "49842": 297, "215486": 297, "23440": 297, "33912": 297, "87007": 297, "36433": 297, "215357": 297, "74693": 297, "61": 297, "12314": 297, "215337": 297, "95044": 297, "79649": 297, "24090": 297, "215332": 297, "91461": 297, "23763": 297, "67861": 297, "00163": 297, "215450": 297, "74783": 297, "07085": 297, "215491": 297, "11568": 297, "43870": 297, "500000e": 297, "700000e": 297, "170000e": 297, "260000e": 297, "360000e": 297, "600000e": 297, "020000e": 297, "620000e": 297, "430000e": 297, "200000e": 297, "lbest": 297, "cpl": 297, "165042": 298, "215148": 298, "488686": 298, "885525": 298, "860736": 298, "853273": 298, "083424": 298, "993262": 298, "824880": 298, "080061": 298, "568383": 298, "533799": 298, "180960": 298, "905658": 298, "916884": 298, "276361": 298, "376218": 298, "322738": 298, "364078": 298, "313336": 298, "638247": 298, "489785": 298, "898802": 298, "546277": 298, "351839": 298, "542369": 298, "136159": 298, "968860": 298, "773450": 298, "058260": 298, "221459": 298, "873918": 298, "151210": 298, "210594": 298, "600450": 298, "775938": 298, "135159": 298, "899285": 298, "551158": 298, "639544": 298, "104682": 298, "793703": 298, "562788": 298, "230477": 298, "796073": 298, "185132": 298, "354616": 298, "330868": 298, "328937": 298, "479966": 298, "486179": 298, "720261": 298, "884839": 298, "438225": 298, "929665": 298, "432346": 298, "121901": 298, "436720": 298, "367480": 298, "924846": 298, "247238": 298, "694969": 298, "512627": 298, "341680": 298, "054791": 298, "024193": 298, "484284": 298, "387386": 298, "842566": 298, "759167": 298, "864669": 298, "548598": 298, "114753": 298, "853355": 298, "638560": 298, "317393": 298, "280139": 298, "424024": 298, "178961": 298, "695800": 298, "622712": 298, "331177": 298, "631655": 298, "413680": 298, "238692": 298, "541680": 298, "361556": 298, "371773": 298, "758919": 298, "704503": 298, "713778": 298, "316351": 298, "422555": 298, "966413": 298, "814952": 298, "026935": 298, "335429": 298, "937635": 298, "266944": 298, "878300": 298, "715708": 298, "009725": 298, "461262": 298, "462408": 298, "212573": 298, "868224": 298, "383043": 298, "459161": 298, "501489": 298, "179394": 298, "003027": 298, "933191": 298, "676905": 298, "260472": 298, "219194": 298, "218010": 298, "380865": 298, "585174": 298, "956306": 298, "398492": 298, "630512": 298, "051986": 298, "546036": 298, "726349": 298, "445912": 298, "191401": 298, "816485": 298, "767349": 298, "682987": 298, "099846": 298, "876780": 298, "553003": 298, "776532": 298, "822404": 298, "802797": 298, "991350": 298, "924166": 298, "846457": 298, "015416": 298, "565671": 298, "662582": 298, "326447": 298, "115117": 298, "207434": 298, "838099": 298, "341361": 298, "488859": 298, "782192": 298, "806515": 298, "434087": 298, "297823": 298, "086788": 298, "743671": 298, "574493": 298, "296737": 298, "599116": 298, "409142": 298, "516464": 298, "880881": 298, "994987": 298, "574667": 298, "831345": 298, "755737": 298, "793265": 298, "630846": 298, "072216": 298, "874349": 298, "901408": 298, "851982": 298, "912201": 298, "483346": 298, "711150": 298, "676572": 298, "693935": 298, "401748": 298, "069326": 298, "793645": 298, "800871": 298, "954047": 298, "905528": 298, "926835": 298, "077897": 298, "928532": 298, "748099": 298, "731336": 298, "186642": 298, "985533": 298, "819544": 298, "366585": 298, "247095": 298, "504667": 298, "773375": 298, "551558": 298, "843029": 298, "551208": 298, "765259": 298, "455400": 298, "762211": 298, "042324": 298, "187278": 298, "552114": 298, "257409": 298, "502366": 298, "056323": 298, "406685": 298, "802175": 298, "040276": 298, "360000": 298, "305631": 298, "370226": 298, "496993": 298, "639042": 298, "515088": 298, "716192": 298, "544260": 298, "597045": 298, "454421": 298, "977219": 298, "751915": 298, "676934": 298, "022410": 298, "400720": 298, "889492": 298, "641421": 298, "952586": 298, "597599": 298, "424237": 298, "974785": 298, "835458": 298, "853009": 298, "073683": 298, "087082": 298, "098997": 298, "886356": 298, "819836": 298, "374133": 298, "879430": 298, "151935": 298, "963905": 298, "712658": 298, "285544": 298, "415675": 298, "178975": 298, "567520": 298, "351619": 298, "044583": 298, "277992": 298, "396594": 298, "264764": 298, "999275": 298, "255630": 298, "360173": 298, "688954": 298, "358567": 298, "572606": 298, "899880": 298, "408061": 298, "414926": 298, "841335": 298, "496109": 298, "244786": 298, "473731": 298, "297200": 298, "907778": 298, "253768": 298, "222423": 298, "416676": 298, "864820": 298, "606428": 298, "362886": 298, "731451": 298, "206488": 298, "069317": 298, "862927": 298, "693535": 298, "988252": 298, "746436": 298, "911020": 298, "716822": 298, "965455": 298, "764024": 298, "517867": 298, "763155": 298, "453899": 298, "125029": 298, "500103": 298, "133073": 298, "346212": 298, "686115": 298, "783555": 298, "583418": 298, "585654": 298, "027851": 298, "462547": 298, "043157": 298, "972480": 298, "363551": 298, "960296": 298, "402983": 298, "036534": 298, "225458": 298, "723710": 298, "892175": 298, "587323": 298, "032512": 298, "378125": 298, "699366": 298, "408322": 298, "242420": 298, "950516": 298, "788249": 298, "269137": 298, "509957": 298, "159667": 298, "512603": 298, "884049": 298, "777419": 298, "448461": 298, "481351": 298, "625663": 298, "175264": 298, "601504": 298, "416254": 298, "541949": 298, "907322": 298, "194473": 298, "487277": 298, "418469": 298, "371639": 298, "344235": 298, "606033": 298, "550825": 298, "547459": 298, "675347": 298, "663661": 298, "308617": 298, "584165": 298, "875052": 298, "247584": 298, "271405": 298, "500411": 298, "631308": 298, "824837": 298, "432371": 298, "804622": 298, "876965": 298, "881148": 298, "758791": 298, "348849": 298, "323449": 298, "319025": 298, "885439": 298, "366355": 298, "230120": 298, "921633": 298, "995045": 298, "575351": 298, "027733": 298, "946876": 298, "482883": 298, "300884": 298, "654589": 298, "604188": 298, "005653": 298, "928279": 298, "370783": 298, "467337": 298, "098483": 298, "795252": 298, "957716": 298, "472019": 298, "706108": 298, "078494": 298, "664634": 298, "318875": 298, "916754": 298, "823449": 298, "527835": 298, "526828": 298, "136767": 298, "405150": 298, "615899": 298, "293600": 298, "488282": 298, "406903": 298, "818812": 298, "376893": 298, "736463": 298, "892761": 298, "446579": 298, "114640": 298, "061750": 298, "849137": 298, "615092": 298, "408347": 298, "925921": 298, "423537": 298, "018308": 298, "867625": 298, "962122": 298, "705806": 298, "664954": 298, "078385": 298, "086333": 298, "056381": 298, "282087": 298, "882876": 298, "603301": 298, "449888": 298, "678095": 298, "037941": 298, "748996": 298, "138213": 298, "166879": 298, "708577": 298, "272954": 298, "929655": 298, "567697": 298, "989005": 298, "421235": 298, "563473": 298, "388393": 298, "621329": 298, "480043": 298, "959843": 298, "277388": 298, "110075": 298, "300601": 298, "811596": 298, "366018": 298, "905147": 298, "570879": 298, "786560": 298, "961895": 298, "534496": 298, "351180": 298, "612812": 298, "231970": 298, "900845": 298, "806204": 298, "584818": 298, "988276": 298, "749003": 298, "998400": 298, "892200": 298, "725509": 298, "196823": 298, "225727": 298, "018880": 298, "212538": 298, "851698": 298, "348921": 298, "250063": 298, "140249": 298, "429352": 298, "382526": 298, "944073": 298, "659430": 298, "191840": 298, "857266": 298, "485191": 298, "775355": 298, "956378": 298, "002572": 298, "733704": 298, "794788": 298, "668763": 298, "151243": 298, "707700": 298, "382384": 298, "455902": 298, "931900": 298, "538437": 298, "498709": 298, "425364": 298, "376121": 298, "196475": 298, "497867": 298, "030662": 298, "372391": 298, "848184": 298, "565811": 298, "662370": 298, "826862": 298, "572217": 298, "630121": 298, "580405": 298, "119652": 298, "298009": 298, "035731": 298, "275622": 298, "134650": 298, "361844": 298, "957232": 298, "155311": 298, "266702": 298, "169391": 298, "361498": 298, "363698": 298, "868679": 298, "106708": 298, "024682": 298, "434510": 298, "982047": 298, "904024": 298, "575363": 298, "073635": 298, "169297": 298, "840067": 298, "253049": 298, "169888": 298, "856403": 298, "884553": 298, "497236": 298, "564632": 298, "118999": 298, "893425": 298, "765897": 298, "695028": 298, "509070": 298, "046265": 298, "586789": 298, "516160": 298, "324755": 298, "684344": 298, "249772": 298, "916145": 298, "394438": 298, "493584": 298, "659481": 298, "744242": 298, "119216": 298, "933397": 298, "936980": 298, "269584": 298, "448507": 298, "178177": 298, "605768": 298, "518105": 298, "477206": 298, "980420": 298, "132983": 298, "320820": 298, "408266": 298, "811144": 298, "105503": 298, "180204": 298, "337790": 298, "031564": 298, "850645": 298, "457112": 298, "195385": 298, "525306": 298, "052073": 298, "814145": 298, "016286": 298, "404922": 298, "435102": 298, "602344": 298, "846592": 298, "815026": 298, "589215": 298, "451814": 298, "243399": 298, "926077": 298, "923185": 298, "866250": 298, "933824": 298, "944302": 298, "824234": 298, "495039": 298, "087071": 298, "735586": 298, "903583": 298, "573838": 298, "611250": 298, "556035": 298, "501681": 298, "749030": 298, "860290": 298, "874004": 298, "372005": 298, "941132": 298, "153441": 298, "133006": 298, "357159": 298, "193338": 298, "054769": 298, "iofv_summari": 298, "orgin": 298, "ob": 298, "sampled_mean": 298, "sampled_stdev": 298, "residual_q1": 298, "743042": 298, "219056": 298, "682820": 298, "550173": 298, "035912": 298, "049484": 298, "184218": 298, "853744": 298, "006216": 298, "975298": 298, "041599": 298, "817153": 298, "833045": 298, "781196": 298, "154061": 298, "813525": 298, "398238": 298, "645044": 298, "535071": 298, "205425": 298, "092618": 298, "104527": 298, "106160": 298, "955250": 298, "058617": 298, "344659": 298, "355728": 298, "480441": 298, "205000": 298, "804075": 298, "093249": 298, "372011": 298, "653334": 298, "076303": 298, "579270": 298, "515891": 298, "726464": 298, "480796": 298, "226795": 298, "894556": 298, "321253": 298, "216333": 298, "282456": 298, "045968": 298, "751381": 298, "998817": 298, "568506": 298, "544129": 298, "725055": 298, "084491": 298, "216676": 298, "724839": 298, "269729": 298, "664468": 298, "086120": 298, "099508": 298, "844053": 298, "234199": 298, "780837": 298, "277342": 298, "322169": 298, "051428": 298, "923117": 298, "660772": 298, "466385": 298, "260479": 298, "909214": 298, "004430": 298, "115441": 298, "597439": 298, "671231": 298, "358037": 298, "499079": 298, "674971": 298, "086542": 298, "331370": 298, "633905": 298, "558617": 298, "085015": 298, "554653": 298, "936751": 298, "068515": 298, "800265": 298, "310055": 298, "124015": 298, "712276": 298, "729628": 298, "167439": 298, "715703": 298, "274087": 298, "019852": 298, "305414": 298, "613668": 298, "109257": 298, "443973": 298, "056317": 298, "238664": 298, "161298": 298, "229080": 298, "385458": 298, "248420": 298, "105258": 298, "155784": 298, "539027": 298, "615940": 298, "605320": 298, "132029": 298, "756164": 298, "869343": 298, "544161": 298, "814910": 298, "779158": 298, "268737": 298, "897306": 298, "707535": 298, "453306": 298, "105961": 298, "531367": 298, "507478": 298, "179203": 298, "964192": 298, "235433": 298, "534690": 298, "029698": 298, "870557": 298, "187065": 298, "049483": 298, "611648": 298, "535116": 298, "053927": 298, "077425": 298, "840121": 298, "621227": 298, "470444": 298, "449597": 298, "941064": 298, "849583": 298, "418397": 298, "769517": 298, "495183": 298, "074840": 298, "265168": 298, "489546": 298, "543569": 298, "924754": 298, "255799": 298, "423379": 298, "792450": 298, "651388": 298, "107140": 298, "103779": 298, "709601": 298, "655290": 298, "365991": 298, "222470": 298, "908651": 298, "744590": 298, "726324": 298, "426971": 298, "126409": 298, "743926": 298, "055593": 298, "673502": 298, "381335": 298, "618133": 298, "047349": 298, "322600": 298, "222872": 298, "042834": 298, "180077": 298, "430602": 298, "209284": 298, "495631": 298, "189252": 298, "623118": 298, "780755": 298, "405726": 298, "643222": 298, "836788": 298, "746180": 298, "378962": 298, "498420": 298, "745719": 298, "565835": 298, "016391": 298, "193803": 298, "882538": 298, "054206": 298, "416539": 298, "288743": 298, "598975": 298, "649295": 298, "743847": 298, "028856": 298, "860963": 298, "709391": 298, "906579": 298, "841825": 298, "571912": 298, "121771": 298, "219260": 298, "791821": 298, "756310": 298, "933335": 298, "360735": 298, "121911": 298, "657069": 298, "952413": 298, "311206": 298, "124618": 298, "229621": 298, "945504": 298, "493299": 298, "630288": 298, "415407": 298, "756085": 298, "131488": 298, "213636": 298, "050337": 298, "463633": 298, "980475": 298, "118333": 298, "749123": 298, "229958": 298, "025404": 298, "813878": 298, "738522": 298, "668408": 298, "112740": 298, "972107": 298, "235064": 298, "396011": 298, "934618": 298, "518106": 298, "392308": 298, "216396": 298, "339562": 298, "024801": 298, "793238": 298, "057118": 298, "556378": 298, "796045": 298, "776264": 298, "019010": 298, "430617": 298, "431370": 298, "731493": 298, "527208": 298, "010968": 298, "724711": 298, "959211": 298, "448445": 298, "131466": 298, "302385": 298, "264697": 298, "597597": 298, "779232": 298, "494133": 298, "292477": 298, "639161": 298, "067293": 298, "167700": 298, "637834": 298, "067793": 298, "249132": 298, "314731": 298, "969084": 298, "239401": 298, "359860": 298, "215238": 298, "477740": 298, "578842": 298, "053376": 298, "340902": 298, "021182": 298, "172446": 298, "684367": 298, "059050": 298, "515114": 298, "245427": 298, "197044": 298, "787564": 298, "106919": 298, "970391": 298, "379183": 298, "982728": 298, "807580": 298, "296212": 298, "639192": 298, "874018": 298, "032032": 298, "252364": 298, "047063": 298, "residual_q3": 298, "residual_outli": 298, "832458": 298, "136329": 298, "090316": 298, "021748": 298, "766581": 298, "001176": 298, "238974": 298, "071653": 298, "388881": 298, "584759": 298, "780298": 298, "680349": 298, "043355": 298, "691710": 298, "827298": 298, "317850": 298, "008777": 298, "291308": 298, "498512": 298, "312807": 298, "178997": 298, "306182": 298, "116610": 298, "468439": 298, "007865": 298, "384037": 298, "344744": 298, "151930": 298, "790639": 298, "416342": 298, "637759": 298, "153920": 298, "135334": 298, "038095": 298, "705065": 298, "359915": 298, "588440": 298, "151899": 298, "730945": 298, "514178": 298, "784304": 298, "977290": 298, "707253": 298, "982678": 298, "384237": 298, "576792": 298, "302778": 298, "342653": 298, "313826": 298, "775998": 298, "274818": 298, "191111": 298, "817604": 298, "421290": 298, "461701": 298, "940801": 298, "437023": 298, "207477": 298, "755739": 298, "individual_predictions_plot": 298, "trim": 299, "modelsearch_dir1": 299, "hash": 299, "mytab_mox1": 299, "subfold": 299, "temporari": 299, "finish": 299, "recreat": 299, "frame": 299, "programmat": 299, "pharmpy_vers": 299, "tool_nam": 299, "start_tim": 299, "22t14": 299, "312240": 299, "end_tim": 299, "592109": 299, "common_opt": 299, "tmp": 299, "tool_result": 299, "locat": 299, "concis": 299, "newlin": 299, "semi": 299, "colon": 299, "endpoint": 299, "wildcard": 299, "nodepot": 299, "autom": 299, "gotcha": 300, "cran": 301, "rapid": 301, "remot": 301, "install_github": 301, "ref": 301, "install_pharmpi": 301, "session": 301, "packagevers": 301, "print_pharmpy_vers": 301, "reticul": 301, "miniconda": 301, "py_discover_config": 301, "conda_cr": 301, "python_vers": 301, "virtual": 301, "libpython": 301, "lib": 301, "libpython3": 301, "global": 301, "mirror": 301, "pipe": 301, "magrittr": 301}, "objects": {"pharmpy": [[259, 0, 0, "-", "model"], [260, 0, 0, "-", "modeling"], [261, 0, 0, "-", "tools"], [262, 0, 0, "-", "workflows"], [267, 6, 1, "cmdoption-pharmpy-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-version", "--version"], [267, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "ODESystem"], [24, 1, 1, "", "Parameter"], [25, 1, 1, "", "Parameters"], [26, 1, 1, "", "RandomVariables"], [27, 1, 1, "", "Results"], [28, 1, 1, "", "Statement"], [29, 1, 1, "", "Statements"], [30, 1, 1, "", "VariabilityHierarchy"], [31, 1, 1, "", "VariabilityLevel"], [32, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "admid"], [5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "dose"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartment"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 3, 1, "", "peripheral_compartments"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 3, 1, "", "cov"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "solver"], [14, 3, 1, "", "solver_atol"], [14, 3, 1, "", "solver_rtol"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_solvers"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "admid"], [16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create_model"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "init"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "name"], [24, 2, 1, "", "replace"], [24, 3, 1, "", "symbol"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[25, 2, 1, "", "create"], [25, 3, 1, "", "fix"], [25, 3, 1, "", "fixed"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "inits"], [25, 3, 1, "", "lower"], [25, 3, 1, "", "names"], [25, 3, 1, "", "nonfixed"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "set_fix"], [25, 2, 1, "", "set_initial_estimates"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[26, 3, 1, "", "covariance_matrix"], [26, 2, 1, "", "create"], [26, 3, 1, "", "epsilon_levels"], [26, 3, 1, "", "epsilons"], [26, 3, 1, "", "eta_levels"], [26, 3, 1, "", "etas"], [26, 3, 1, "", "free_symbols"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_covariance"], [26, 2, 1, "", "get_rvs_with_same_dist"], [26, 3, 1, "", "iiv"], [26, 3, 1, "", "iov"], [26, 2, 1, "", "join"], [26, 3, 1, "", "names"], [26, 2, 1, "", "nearest_valid_parameters"], [26, 3, 1, "", "nrvs"], [26, 3, 1, "", "parameter_names"], [26, 2, 1, "", "parameters_sdcorr"], [26, 2, 1, "", "replace"], [26, 2, 1, "", "replace_with_sympy_rvs"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "subs"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "unjoin"], [26, 2, 1, "", "validate_parameters"], [26, 3, 1, "", "variance_parameters"]], "pharmpy.model.Results": [[27, 2, 1, "", "from_dict"], [27, 2, 1, "", "get_and_reset_index"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_json"]], "pharmpy.model.Statement": [[28, 3, 1, "", "free_symbols"], [28, 3, 1, "", "rhs_symbols"], [28, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[29, 3, 1, "", "after_odes"], [29, 3, 1, "", "before_odes"], [29, 2, 1, "", "dependencies"], [29, 2, 1, "", "direct_dependencies"], [29, 3, 1, "", "error"], [29, 2, 1, "", "find_assignment"], [29, 2, 1, "", "find_assignment_index"], [29, 3, 1, "", "free_symbols"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "full_expression"], [29, 3, 1, "", "ode_system"], [29, 2, 1, "", "reassign"], [29, 2, 1, "", "remove_symbol_definitions"], [29, 2, 1, "", "subs"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "levels"], [30, 3, 1, "", "names"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[31, 2, 1, "", "create"], [31, 2, 1, "", "from_dict"], [31, 3, 1, "", "group"], [31, 3, 1, "", "name"], [31, 3, 1, "", "reference"], [31, 2, 1, "", "replace"], [31, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_covariance_step"], [35, 5, 1, "", "add_covariate_effect"], [36, 5, 1, "", "add_estimation_step"], [37, 5, 1, "", "add_iiv"], [38, 5, 1, "", "add_individual_parameter"], [39, 5, 1, "", "add_iov"], [40, 5, 1, "", "add_lag_time"], [41, 5, 1, "", "add_metabolite"], [42, 5, 1, "", "add_peripheral_compartment"], [43, 5, 1, "", "add_pk_iiv"], [44, 5, 1, "", "add_population_parameter"], [45, 5, 1, "", "add_time_after_dose"], [46, 5, 1, "", "append_estimation_step_options"], [47, 5, 1, "", "bump_model_number"], [48, 5, 1, "", "calculate_aic"], [49, 5, 1, "", "calculate_bic"], [50, 5, 1, "", "calculate_corr_from_cov"], [51, 5, 1, "", "calculate_corr_from_inf"], [52, 5, 1, "", "calculate_cov_from_corrse"], [53, 5, 1, "", "calculate_cov_from_inf"], [54, 5, 1, "", "calculate_epsilon_gradient_expression"], [55, 5, 1, "", "calculate_eta_gradient_expression"], [56, 5, 1, "", "calculate_eta_shrinkage"], [57, 5, 1, "", "calculate_individual_parameter_statistics"], [58, 5, 1, "", "calculate_individual_shrinkage"], [59, 5, 1, "", "calculate_inf_from_corrse"], [60, 5, 1, "", "calculate_inf_from_cov"], [61, 5, 1, "", "calculate_parameters_from_ucp"], [62, 5, 1, "", "calculate_pk_parameters_statistics"], [63, 5, 1, "", "calculate_se_from_cov"], [64, 5, 1, "", "calculate_se_from_inf"], [65, 5, 1, "", "calculate_ucp_scale"], [66, 5, 1, "", "check_dataset"], [67, 5, 1, "", "check_high_correlations"], [68, 5, 1, "", "check_parameters_near_bounds"], [69, 5, 1, "", "cleanup_model"], [70, 5, 1, "", "convert_model"], [71, 5, 1, "", "create_basic_pk_model"], [72, 5, 1, "", "create_config_template"], [73, 5, 1, "", "create_joint_distribution"], [74, 5, 1, "", "create_rng"], [75, 5, 1, "", "create_symbol"], [76, 5, 1, "", "deidentify_data"], [77, 5, 1, "", "display_odes"], [78, 5, 1, "", "drop_columns"], [79, 5, 1, "", "drop_dropped_columns"], [80, 5, 1, "", "evaluate_epsilon_gradient"], [81, 5, 1, "", "evaluate_eta_gradient"], [82, 5, 1, "", "evaluate_expression"], [83, 5, 1, "", "evaluate_individual_prediction"], [84, 5, 1, "", "evaluate_population_prediction"], [85, 5, 1, "", "evaluate_weighted_residuals"], [86, 5, 1, "", "expand_additional_doses"], [87, 5, 1, "", "find_clearance_parameters"], [88, 5, 1, "", "find_volume_parameters"], [89, 5, 1, "", "fix_or_unfix_parameters"], [90, 5, 1, "", "fix_parameters"], [91, 5, 1, "", "fix_parameters_to"], [92, 5, 1, "", "get_baselines"], [93, 5, 1, "", "get_bioavailability"], [94, 5, 1, "", "get_cmt"], [95, 5, 1, "", "get_concentration_parameters_from_data"], [96, 5, 1, "", "get_config_path"], [97, 5, 1, "", "get_covariate_baselines"], [98, 5, 1, "", "get_doseid"], [99, 5, 1, "", "get_doses"], [100, 5, 1, "", "get_dv_symbol"], [101, 5, 1, "", "get_evid"], [102, 5, 1, "", "get_ids"], [103, 5, 1, "", "get_individual_parameters"], [104, 5, 1, "", "get_individual_prediction_expression"], [105, 5, 1, "", "get_initial_conditions"], [106, 5, 1, "", "get_lag_times"], [107, 5, 1, "", "get_mdv"], [108, 5, 1, "", "get_model_code"], [109, 5, 1, "", "get_model_covariates"], [110, 5, 1, "", "get_number_of_individuals"], [111, 5, 1, "", "get_number_of_observations"], [112, 5, 1, "", "get_number_of_observations_per_individual"], [113, 5, 1, "", "get_observation_expression"], [114, 5, 1, "", "get_observations"], [115, 5, 1, "", "get_omegas"], [116, 5, 1, "", "get_pk_parameters"], [117, 5, 1, "", "get_population_prediction_expression"], [118, 5, 1, "", "get_rv_parameters"], [119, 5, 1, "", "get_sigmas"], [120, 5, 1, "", "get_thetas"], [121, 5, 1, "", "get_unit_of"], [122, 5, 1, "", "get_zero_order_inputs"], [123, 5, 1, "", "greekify_model"], [124, 5, 1, "", "has_additive_error_model"], [125, 5, 1, "", "has_combined_error_model"], [126, 5, 1, "", "has_covariate_effect"], [127, 5, 1, "", "has_first_order_elimination"], [128, 5, 1, "", "has_linear_odes"], [129, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [130, 5, 1, "", "has_michaelis_menten_elimination"], [131, 5, 1, "", "has_mixed_mm_fo_elimination"], [132, 5, 1, "", "has_odes"], [133, 5, 1, "", "has_proportional_error_model"], [134, 5, 1, "", "has_random_effect"], [135, 5, 1, "", "has_weighted_error_model"], [136, 5, 1, "", "has_zero_order_absorption"], [137, 5, 1, "", "has_zero_order_elimination"], [138, 5, 1, "", "is_linearized"], [139, 5, 1, "", "is_real"], [140, 5, 1, "", "list_time_varying_covariates"], [141, 5, 1, "", "load_example_model"], [142, 5, 1, "", "make_declarative"], [143, 5, 1, "", "mu_reference_model"], [144, 5, 1, "", "omit_data"], [145, 5, 1, "", "plot_individual_predictions"], [146, 5, 1, "", "plot_iofv_vs_iofv"], [147, 5, 1, "", "plot_transformed_eta_distributions"], [148, 5, 1, "", "print_model_code"], [149, 5, 1, "", "print_model_symbols"], [150, 5, 1, "", "read_dataset_from_datainfo"], [151, 5, 1, "", "read_model"], [152, 5, 1, "", "read_model_from_string"], [153, 5, 1, "", "remove_covariance_step"], [154, 5, 1, "", "remove_covariate_effect"], [155, 5, 1, "", "remove_error_model"], [156, 5, 1, "", "remove_estimation_step"], [157, 5, 1, "", "remove_iiv"], [158, 5, 1, "", "remove_iov"], [159, 5, 1, "", "remove_lag_time"], [160, 5, 1, "", "remove_loq_data"], [161, 5, 1, "", "remove_peripheral_compartment"], [162, 5, 1, "", "remove_unused_parameters_and_rvs"], [163, 5, 1, "", "rename_symbols"], [164, 5, 1, "", "resample_data"], [165, 5, 1, "", "sample_individual_estimates"], [166, 5, 1, "", "sample_parameters_from_covariance_matrix"], [167, 5, 1, "", "sample_parameters_uniformly"], [168, 5, 1, "", "set_additive_error_model"], [169, 5, 1, "", "set_bolus_absorption"], [170, 5, 1, "", "set_combined_error_model"], [171, 5, 1, "", "set_covariates"], [172, 5, 1, "", "set_dtbs_error_model"], [173, 5, 1, "", "set_dvid"], [174, 5, 1, "", "set_estimation_step"], [175, 5, 1, "", "set_evaluation_step"], [176, 5, 1, "", "set_first_order_absorption"], [177, 5, 1, "", "set_first_order_elimination"], [178, 5, 1, "", "set_iiv_on_ruv"], [179, 5, 1, "", "set_initial_condition"], [180, 5, 1, "", "set_initial_estimates"], [181, 5, 1, "", "set_lower_bounds"], [182, 5, 1, "", "set_michaelis_menten_elimination"], [183, 5, 1, "", "set_mixed_mm_fo_elimination"], [184, 5, 1, "", "set_name"], [185, 5, 1, "", "set_ode_solver"], [186, 5, 1, "", "set_peripheral_compartments"], [187, 5, 1, "", "set_power_on_ruv"], [188, 5, 1, "", "set_proportional_error_model"], [189, 5, 1, "", "set_seq_zo_fo_absorption"], [190, 5, 1, "", "set_time_varying_error_model"], [191, 5, 1, "", "set_tmdd"], [192, 5, 1, "", "set_transit_compartments"], [193, 5, 1, "", "set_upper_bounds"], [194, 5, 1, "", "set_weighted_error_model"], [195, 5, 1, "", "set_zero_order_absorption"], [196, 5, 1, "", "set_zero_order_elimination"], [197, 5, 1, "", "set_zero_order_input"], [198, 5, 1, "", "simplify_expression"], [199, 5, 1, "", "solve_ode_system"], [200, 5, 1, "", "split_joint_distribution"], [201, 5, 1, "", "transform_blq"], [202, 5, 1, "", "transform_etas_boxcox"], [203, 5, 1, "", "transform_etas_john_draper"], [204, 5, 1, "", "transform_etas_tdist"], [205, 5, 1, "", "translate_nmtran_time"], [206, 5, 1, "", "unconstrain_parameters"], [207, 5, 1, "", "undrop_columns"], [208, 5, 1, "", "unfix_parameters"], [209, 5, 1, "", "unfix_parameters_to"], [210, 5, 1, "", "update_initial_individual_estimates"], [211, 5, 1, "", "update_inits"], [212, 5, 1, "", "use_thetas_for_error_stdev"], [213, 5, 1, "", "write_csv"], [214, 5, 1, "", "write_model"]], "pharmpy.tools": [[215, 5, 1, "", "create_report"], [216, 5, 1, "", "create_results"], [217, 5, 1, "", "fit"], [218, 5, 1, "", "predict_influential_individuals"], [219, 5, 1, "", "predict_influential_outliers"], [220, 5, 1, "", "predict_outliers"], [221, 5, 1, "", "print_fit_summary"], [222, 5, 1, "", "rank_models"], [223, 5, 1, "", "read_modelfit_results"], [224, 5, 1, "", "read_results"], [225, 5, 1, "", "resume_tool"], [226, 5, 1, "", "retrieve_final_model"], [227, 5, 1, "", "retrieve_models"], [228, 5, 1, "", "run_allometry"], [229, 5, 1, "", "run_amd"], [230, 5, 1, "", "run_bootstrap"], [231, 5, 1, "", "run_covsearch"], [232, 5, 1, "", "run_estmethod"], [233, 5, 1, "", "run_iivsearch"], [234, 5, 1, "", "run_iovsearch"], [235, 5, 1, "", "run_modelfit"], [236, 5, 1, "", "run_modelsearch"], [237, 5, 1, "", "run_ruvsearch"], [238, 5, 1, "", "run_tool"], [239, 5, 1, "", "summarize_errors"], [240, 5, 1, "", "summarize_individuals"], [241, 5, 1, "", "summarize_individuals_count_table"], [242, 5, 1, "", "summarize_modelfit_results"], [243, 5, 1, "", "write_results"]], "pharmpy.workflows": [[244, 1, 1, "", "LocalDirectoryDatabase"], [245, 1, 1, "", "LocalDirectoryToolDatabase"], [246, 1, 1, "", "LocalModelDirectoryDatabase"], [247, 1, 1, "", "Log"], [248, 1, 1, "", "ModelDatabase"], [249, 1, 1, "", "NullModelDatabase"], [250, 1, 1, "", "NullToolDatabase"], [251, 1, 1, "", "Task"], [252, 1, 1, "", "ToolDatabase"], [253, 1, 1, "", "Workflow"], [254, 5, 1, "", "call_workflow"], [255, 3, 1, "", "default_model_database"], [256, 3, 1, "", "default_tool_database"], [257, 5, 1, "", "execute_workflow"], [258, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[244, 2, 1, "", "retrieve_file"], [244, 2, 1, "", "retrieve_local_files"], [244, 2, 1, "", "retrieve_model"], [244, 2, 1, "", "retrieve_modelfit_results"], [244, 2, 1, "", "store_local_file"], [244, 2, 1, "", "store_metadata"], [244, 2, 1, "", "store_model"], [244, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[245, 2, 1, "", "from_dict"], [245, 2, 1, "", "read_metadata"], [245, 2, 1, "", "store_local_file"], [245, 2, 1, "", "store_metadata"], [245, 2, 1, "", "store_results"], [245, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[246, 2, 1, "", "list_models"], [246, 2, 1, "", "snapshot"], [246, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[247, 2, 1, "", "from_dict"], [247, 3, 1, "", "log"], [247, 2, 1, "", "log_error"], [247, 2, 1, "", "log_warning"], [247, 2, 1, "", "to_dataframe"], [247, 2, 1, "", "to_dict"]], "pharmpy.workflows.ModelDatabase": [[248, 2, 1, "", "retrieve_file"], [248, 2, 1, "", "retrieve_local_files"], [248, 2, 1, "", "retrieve_model"], [248, 2, 1, "", "retrieve_modelfit_results"], [248, 2, 1, "", "snapshot"], [248, 2, 1, "", "store_local_file"], [248, 2, 1, "", "store_metadata"], [248, 2, 1, "", "store_model"], [248, 2, 1, "", "store_modelfit_results"], [248, 2, 1, "", "transaction"]], "pharmpy.workflows.NullModelDatabase": [[249, 2, 1, "", "retrieve_file"], [249, 2, 1, "", "retrieve_local_files"], [249, 2, 1, "", "retrieve_model"], [249, 2, 1, "", "retrieve_modelfit_results"], [249, 2, 1, "", "store_local_file"], [249, 2, 1, "", "store_metadata"], [249, 2, 1, "", "store_model"], [249, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[250, 2, 1, "", "read_metadata"], [250, 2, 1, "", "store_local_file"], [250, 2, 1, "", "store_metadata"], [250, 2, 1, "", "store_results"]], "pharmpy.workflows.ToolDatabase": [[252, 3, 1, "", "model_database"], [252, 3, 1, "", "path"], [252, 2, 1, "", "read_metadata"], [252, 2, 1, "", "store_local_file"], [252, 2, 1, "", "store_metadata"], [252, 2, 1, "", "store_results"]], "pharmpy-data-append": [[267, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [267, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[267, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[267, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [267, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[267, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [267, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-resample": [[267, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [267, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [267, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [267, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [267, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [267, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [267, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[267, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[267, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[267, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[267, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[267, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[267, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[267, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [267, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[267, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[267, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [267, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[267, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[267, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [267, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [267, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[267, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[267, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [267, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [267, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [267, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [267, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[267, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[267, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[267, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[267, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [267, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [267, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [267, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[267, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[267, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[267, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[267, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[267, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[267, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[267, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[267, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[267, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[267, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[267, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[267, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [267, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [267, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [267, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [267, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [267, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [267, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [267, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [267, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [267, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [267, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [267, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[267, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [267, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[267, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[267, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [267, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [267, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [267, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[267, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[267, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [267, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[267, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[267, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [267, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [267, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[267, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [267, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 289], "dataset": [0, 274, 299], "overview": [0, 291, 295], "pars": 0, "translat": 0, "step": [0, 297], "nm": 0, "tran": 0, "comment": 0, "line": [0, 267], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 274, 287], "date": 0, "id": 0, "check": [0, 270], "tabl": 0, "file": [0, 269, 274, 287], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 270], "all": 0, "zero": [0, 287], "individu": [0, 263, 264, 278, 284, 286, 287, 298], "control": 0, "stream": 0, "gener": [0, 283], "option": [0, 262, 299], "problem": 0, "data": [0, 262, 267], "eta": [0, 287], "code": [0, 268, 270, 285, 287], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 27, 263, 264, 267, 272, 273, 277, 278, 280, 282, 284, 285, 286, 287, 288, 293, 295, 296, 297, 298, 299], "spars": 0, "matrix": [0, 263, 286], "allometri": [1, 2, 267], "run": [1, 2, 267, 270, 272, 277, 280, 282, 287, 288, 296, 299], "argument": [1, 2, 272, 277, 280, 282, 288, 296], "procedur": [1, 296], "The": [1, 263, 264, 267, 269, 273, 275, 277, 278, 280, 284, 285, 287, 288, 293, 295, 296, 297, 298], "automat": 2, "model": [2, 18, 259, 260, 267, 274, 275, 280, 285, 287, 288, 289, 293, 296, 299], "develop": [2, 270, 271, 276], "amd": [2, 267], "input": [2, 271], "search": [2, 280, 288], "space": [2, 288], "order": [2, 287], "subtool": 2, "structur": [2, 280, 295], "iivsearch": [2, 267, 280], "iovsearch": [2, 267, 282], "residu": [2, 286, 295], "covari": [2, 263, 264, 278, 280, 286, 287, 295], "api": 3, "refer": [3, 264, 278], "assign": 4, "bolu": [5, 287], "columninfo": [6, 274], "compart": [7, 287], "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 274], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 282, 287], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "odesystem": 23, "paramet": [24, 25, 263, 274, 275, 278, 285, 286, 287, 289], "randomvari": [26, 275], "statement": [28, 29, 275, 285], "variabilityhierarchi": 30, "variabilitylevel": 31, "to_compartmental_system": 32, "add_allometri": 33, "add_covariance_step": 34, "add_covariate_effect": 35, "add_estimation_step": 36, "add_iiv": [37, 267], "add_individual_paramet": 38, "add_iov": [39, 267], "add_lag_tim": 40, "add_metabolit": 41, "add_peripheral_compart": 42, "add_pk_iiv": 43, "add_population_paramet": 44, "add_time_after_dos": 45, "append_estimation_step_opt": 46, "bump_model_numb": 47, "calculate_a": 48, "calculate_b": 49, "calculate_corr_from_cov": 50, "calculate_corr_from_inf": 51, "calculate_cov_from_corrs": 52, "calculate_cov_from_inf": 53, "calculate_epsilon_gradient_express": 54, "calculate_eta_gradient_express": 55, "calculate_eta_shrinkag": 56, "calculate_individual_parameter_statist": 57, "calculate_individual_shrinkag": 58, "calculate_inf_from_corrs": 59, "calculate_inf_from_cov": 60, "calculate_parameters_from_ucp": 61, "calculate_pk_parameters_statist": 62, "calculate_se_from_cov": 63, "calculate_se_from_inf": 64, "calculate_ucp_scal": 65, "check_dataset": 66, "check_high_correl": 67, "check_parameters_near_bound": 68, "cleanup_model": 69, "convert_model": 70, "create_basic_pk_model": 71, "create_config_templ": 72, "create_joint_distribut": [73, 267], "create_rng": 74, "create_symbol": 75, "deidentify_data": 76, "display_od": 77, "drop_column": 78, "drop_dropped_column": 79, "evaluate_epsilon_gradi": 80, "evaluate_eta_gradi": 81, "evaluate_express": 82, "evaluate_individual_predict": 83, "evaluate_population_predict": 84, "evaluate_weighted_residu": 85, "expand_additional_dos": 86, "find_clearance_paramet": 87, "find_volume_paramet": 88, "fix_or_unfix_paramet": 89, "fix_paramet": 90, "fix_parameters_to": 91, "get_baselin": 92, "get_bioavail": 93, "get_cmt": 94, "get_concentration_parameters_from_data": 95, "get_config_path": 96, "get_covariate_baselin": 97, "get_doseid": 98, "get_dos": 99, "get_dv_symbol": 100, "get_evid": 101, "get_id": 102, "get_individual_paramet": 103, "get_individual_prediction_express": 104, "get_initial_condit": 105, "get_lag_tim": 106, "get_mdv": 107, "get_model_cod": 108, "get_model_covari": 109, "get_number_of_individu": 110, "get_number_of_observ": 111, "get_number_of_observations_per_individu": 112, "get_observation_express": 113, "get_observ": 114, "get_omega": 115, "get_pk_paramet": 116, "get_population_prediction_express": 117, "get_rv_paramet": 118, "get_sigma": 119, "get_theta": 120, "get_unit_of": 121, "get_zero_order_input": 122, "greekify_model": 123, "has_additive_error_model": 124, "has_combined_error_model": 125, "has_covariate_effect": 126, "has_first_order_elimin": 127, "has_linear_od": 128, "has_linear_odes_with_real_eigenvalu": 129, "has_michaelis_menten_elimin": 130, "has_mixed_mm_fo_elimin": 131, "has_od": 132, "has_proportional_error_model": 133, "has_random_effect": 134, "has_weighted_error_model": 135, "has_zero_order_absorpt": 136, "has_zero_order_elimin": 137, "is_linear": 138, "is_real": 139, "list_time_varying_covari": 140, "load_example_model": 141, "make_declar": 142, "mu_reference_model": 143, "omit_data": 144, "plot_individual_predict": 145, "plot_iofv_vs_iofv": 146, "plot_transformed_eta_distribut": 147, "print_model_cod": 148, "print_model_symbol": 149, "read_dataset_from_datainfo": 150, "read_model": 151, "read_model_from_str": 152, "remove_covariance_step": 153, "remove_covariate_effect": 154, "remove_error_model": 155, "remove_estimation_step": 156, "remove_iiv": [157, 267], "remove_iov": [158, 267], "remove_lag_tim": 159, "remove_loq_data": 160, "remove_peripheral_compart": 161, "remove_unused_parameters_and_rv": 162, "rename_symbol": 163, "resample_data": 164, "sample_individual_estim": 165, "sample_parameters_from_covariance_matrix": 166, "sample_parameters_uniformli": 167, "set_additive_error_model": 168, "set_bolus_absorpt": 169, "set_combined_error_model": 170, "set_covari": 171, "set_dtbs_error_model": 172, "set_dvid": 173, "set_estimation_step": 174, "set_evaluation_step": 175, "set_first_order_absorpt": 176, "set_first_order_elimin": 177, "set_iiv_on_ruv": 178, "set_initial_condit": 179, "set_initial_estim": 180, "set_lower_bound": 181, "set_michaelis_menten_elimin": 182, "set_mixed_mm_fo_elimin": 183, "set_nam": 184, "set_ode_solv": 185, "set_peripheral_compart": 186, "set_power_on_ruv": 187, "set_proportional_error_model": 188, "set_seq_zo_fo_absorpt": 189, "set_time_varying_error_model": 190, "set_tmdd": 191, "set_transit_compart": 192, "set_upper_bound": 193, "set_weighted_error_model": 194, "set_zero_order_absorpt": 195, "set_zero_order_elimin": 196, "set_zero_order_input": 197, "simplify_express": 198, "solve_ode_system": 199, "split_joint_distribut": 200, "transform_blq": 201, "transform_etas_boxcox": 202, "transform_etas_john_drap": 203, "transform_etas_tdist": 204, "translate_nmtran_tim": 205, "unconstrain_paramet": 206, "undrop_column": 207, "unfix_paramet": 208, "unfix_parameters_to": 209, "update_initial_individual_estim": 210, "update_init": [211, 267], "use_thetas_for_error_stdev": 212, "write_csv": 213, "write_model": 214, "create_report": 215, "create_result": 216, "fit": [217, 287], "predict_influential_individu": 218, "predict_influential_outli": 219, "predict_outli": 220, "print_fit_summari": 221, "rank_model": 222, "read_modelfit_result": 223, "read_result": 224, "resume_tool": 225, "retrieve_final_model": 226, "retrieve_model": 227, "run_allometri": 228, "run_amd": 229, "run_bootstrap": 230, "run_covsearch": 231, "run_estmethod": 232, "run_iivsearch": 233, "run_iovsearch": 234, "run_modelfit": 235, "run_modelsearch": 236, "run_ruvsearch": 237, "run_tool": 238, "summarize_error": 239, "summarize_individu": 240, "summarize_individuals_count_t": 241, "summarize_modelfit_result": 242, "write_result": 243, "localdirectorydatabas": 244, "localdirectorytooldatabas": 245, "localmodeldirectorydatabas": 246, "log": 247, "modeldatabas": 248, "nullmodeldatabas": 249, "nulltooldatabas": 250, "task": 251, "tooldatabas": 252, "workflow": [253, 262, 270], "call_workflow": 254, "default_model_databas": 255, "default_tool_databas": 256, "execute_workflow": 257, "split_common_opt": 258, "pharmpi": [259, 260, 261, 262, 266, 267, 268, 270, 274, 275, 281, 285, 290, 294, 299, 301], "packag": [259, 260, 261, 262], "function": [259, 260, 261, 262], "class": [259, 262, 275], "tool": [261, 294, 299], "modul": [262, 275], "bootstrap": [263, 267], "postprocess": [263, 278], "statist": 263, "ofv": [263, 264, 267, 273, 278, 284, 286, 297, 298], "includ": 263, "case": 264, "delet": 264, "diagnost": 264, "cdd": [264, 267], "cook": 264, "score": 264, "jackknif": 264, "cookscor": 264, "ratio": 264, "delta": 264, "skip": 264, "column": 264, "changelog": 265, "0": 265, "95": 265, "2023": 265, "05": 265, "22": 265, "chang": [265, 290], "bugfix": 265, "94": 265, "04": 265, "26": 265, "new": [265, 282, 287, 289], "featur": [265, 288, 299], "93": 265, "19": 265, "92": 265, "91": 265, "03": 265, "90": 265, "02": 265, "24": 265, "89": 265, "01": 265, "88": 265, "2022": 265, "12": 265, "21": 265, "87": 265, "14": 265, "86": 265, "11": 265, "30": 265, "85": 265, "18": 265, "84": 265, "1": 265, "13": 265, "bug": 265, "fix": [265, 287], "09": 265, "83": 265, "82": 265, "10": 265, "81": 265, "80": 265, "79": 265, "16": 265, "78": 265, "20": 265, "77": 265, "08": 265, "76": 265, "06": 265, "75": 265, "74": 265, "07": 265, "73": 265, "72": 265, "71": 265, "70": 265, "17": 265, "69": 265, "29": 265, "68": 265, "27": 265, "67": 265, "25": 265, "66": 265, "65": 265, "64": 265, "63": 265, "62": 265, "61": 265, "31": 265, "59": 265, "58": 265, "4": 265, "57": 265, "56": 265, "55": 265, "54": 265, "53": 265, "52": 265, "51": 265, "50": 265, "49": 265, "48": 265, "47": 265, "28": 265, "46": 265, "45": 265, "44": 265, "43": 265, "42": 265, "41": 265, "2021": 265, "40": 265, "39": 265, "15": 265, "38": 265, "37": 265, "36": 265, "35": 265, "34": 265, "3": 265, "2": [265, 283], "33": 265, "32": 265, "23": 265, "2020": 265, "9": 265, "8": 265, "7": 265, "6": 265, "5": 265, "2018": 265, "citat": 266, "how": 266, "cite": 266, "pharmr": [266, 301], "command": 267, "interfac": 267, "append": 267, "deidentifi": 267, "filter": 267, "print": 267, "resampl": 267, "write": [267, 285, 287, 289], "info": 267, "absorption_r": 267, "add_cov_effect": 267, "boxcox": [267, 287, 295], "elimination_r": 267, "error": [267, 286, 287, 295, 301], "iiv_on_ruv": 267, "john_drap": 267, "peripheral_compart": 267, "power_on_ruv": 267, "sampl": [267, 298], "tdist": [267, 295], "transit_compart": 267, "frem": [267, 278], "linear": [267, 284], "qa": [267, 295], "report": 267, "ruvsearch": [267, 296], "scm": [267, 297], "simev": [267, 298], "summari": [267, 297, 298], "covsearch": [267, 272], "estmethod": [267, 277], "execut": 267, "modelsearch": [267, 288], "commun": 268, "conduct": 268, "configur": 269, "environ": [269, 270], "variabl": [269, 278, 285, 289], "contribut": 270, "set": [270, 285, 287, 290], "up": 270, "support": 270, "platform": 270, "instal": [270, 279, 301], "python": [270, 301], "git": 270, "fork": 270, "clone": 270, "repositori": 270, "tox": 270, "graphviz": 270, "us": [270, 289, 301], "build": 270, "document": [270, 276], "unit": [270, 274], "test": 270, "integr": 270, "usabl": 270, "virtual": 270, "standard": [270, 286, 287], "releas": 270, "version": [270, 301], "inform": [270, 274, 286], "contributor": 271, "scientif": 271, "fund": 271, "effect": [272, 278, 287, 295], "wildcard": 272, "algorithm": [272, 277, 280, 282, 288], "crossval": 273, "crossvalid": 273, "retriev": 274, "from": [274, 287], "updat": [274, 277, 285, 287], "subject": 274, "observ": 274, "dose": 274, "extract": 274, "group": 274, "after": 274, "concentr": 274, "type": [274, 299], "scale": 274, "continu": 274, "categori": 274, "drop": 274, "datatyp": 274, "descriptor": 274, "design": 275, "principl": 275, "level": 275, "architectur": 275, "heart": 275, "docstr": 275, "depend": [275, 285], "exhaust": [277, 288], "onli": 277, "evalu": 277, "method": 277, "solver": 277, "coeffici": 278, "unexplain": 278, "estim": [278, 285, 286, 287], "valu": 278, "get": [279, 285, 287], "start": [279, 280], "A": 279, "first": [279, 287], "exampl": [279, 299], "brute": 280, "forc": 280, "number": [280, 287], "iiv": [280, 287, 288], "full": 280, "ad": [280, 287, 288], "compar": [280, 282, 288], "rank": [280, 282, 288], "candid": [280, 282, 288, 297], "welcom": 281, "iov": [282, 287], "licens": 283, "logo": 283, "copyright": 283, "bsd": 283, "claus": 283, "gnu": 283, "lesser": 283, "public": 283, "read": [285, 286, 287, 289], "name": [285, 289], "random": [285, 289], "modelfit": [285, 286], "initi": [285, 287], "final": 286, "rel": 286, "correl": 286, "indiviud": 286, "predict": [286, 298], "basic": 287, "sourc": 287, "string": 287, "unfix": 287, "add": 287, "pk": 287, "od": 287, "system": 287, "absorpt": 287, "rate": 287, "sequenti": 287, "delai": 287, "transit": 287, "lag": 287, "elimin": 287, "micha": 287, "menten": 287, "mix": 287, "peripher": 287, "remov": 287, "transform": 287, "approxim": 287, "t": 287, "john": 287, "draper": 287, "an": 287, "addit": 287, "proport": 287, "combin": [287, 288], "appli": 287, "ruv": 287, "power": 287, "deviat": 287, "epsilon": 287, "theta": 287, "weight": 287, "dtb": 287, "creat": 287, "joint": 287, "multipl": 287, "between": [287, 288, 301], "previou": 287, "psn": [287, 294], "shrinkag": 287, "calcul": 287, "common": [288, 299], "behaviour": 288, "exclus": 288, "stepwis": 288, "reduc": 288, "dure": 288, "plugin": [289, 291], "plot": [290, 298], "theme": 290, "axi": 290, "project": 292, "suggest": 292, "resmod": 293, "connect": 294, "bia": 295, "fullblock": 295, "databas": 299, "directori": 299, "metadata": 299, "languag": 299, "mfl": 299, "symbol": 299, "describ": 299, "interv": 299, "redund": 299, "descript": 299, "user": 300, "guid": 300, "r": 301, "troubl": 301, "shoot": 301, "wrong": 301, "import": 301, "mismatch": 301, "gotcha": 301, "list": 301, "indic": 301}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"calculate_aic": [[48, "calculate-aic"]], "calculate_eta_gradient_expression": [[55, "calculate-eta-gradient-expression"]], "calculate_se_from_cov": [[63, "calculate-se-from-cov"]], "add_pk_iiv": [[43, "add-pk-iiv"]], "convert_model": [[70, "convert-model"]], "add_peripheral_compartment": [[42, "add-peripheral-compartment"]], "create_config_template": [[72, "create-config-template"]], "add_individual_parameter": [[38, "add-individual-parameter"]], "calculate_individual_parameter_statistics": [[57, "calculate-individual-parameter-statistics"]], "calculate_pk_parameters_statistics": [[62, "calculate-pk-parameters-statistics"]], "calculate_individual_shrinkage": [[58, "calculate-individual-shrinkage"]], "calculate_cov_from_corrse": [[52, "calculate-cov-from-corrse"]], "check_dataset": [[66, "check-dataset"]], "calculate_eta_shrinkage": [[56, "calculate-eta-shrinkage"]], "append_estimation_step_options": [[46, "append-estimation-step-options"]], "bump_model_number": [[47, "bump-model-number"]], "calculate_parameters_from_ucp": [[61, "calculate-parameters-from-ucp"]], "create_basic_pk_model": [[71, "create-basic-pk-model"]], "create_symbol": [[75, "create-symbol"]], "calculate_bic": [[49, "calculate-bic"]], "add_metabolite": [[41, "add-metabolite"]], "add_time_after_dose": [[45, "add-time-after-dose"]], "calculate_corr_from_inf": [[51, "calculate-corr-from-inf"]], "calculate_inf_from_corrse": [[59, "calculate-inf-from-corrse"]], "calculate_se_from_inf": [[64, "calculate-se-from-inf"]], "check_parameters_near_bounds": [[68, "check-parameters-near-bounds"]], "calculate_corr_from_cov": [[50, "calculate-corr-from-cov"]], "add_population_parameter": [[44, "add-population-parameter"]], "add_iov": [[39, "add-iov"]], "add_lag_time": [[40, "add-lag-time"]], "check_high_correlations": [[67, "check-high-correlations"]], "calculate_ucp_scale": [[65, "calculate-ucp-scale"]], "calculate_cov_from_inf": [[53, "calculate-cov-from-inf"]], "create_joint_distribution": [[73, "create-joint-distribution"]], "create_rng": [[74, "create-rng"]], "cleanup_model": [[69, "cleanup-model"]], "calculate_inf_from_cov": [[60, "calculate-inf-from-cov"]], "calculate_epsilon_gradient_expression": [[54, "calculate-epsilon-gradient-expression"]], "ModelError": [[19, "modelerror"]], "Assignment": [[4, "assignment"]], "DatasetWarning": [[12, "datasetwarning"]], "ColumnInfo": [[6, "columninfo"], [274, "columninfo"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "add_estimation_step": [[36, "add-estimation-step"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "VariabilityLevel": [[31, "variabilitylevel"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Statements": [[29, "statements"]], "Model": [[18, "model"]], "add_allometry": [[33, "add-allometry"]], "EstimationSteps": [[15, "estimationsteps"]], "NormalDistribution": [[22, "normaldistribution"]], "VariabilityHierarchy": [[30, "variabilityhierarchy"]], "to_compartmental_system": [[32, "to-compartmental-system"]], "ODESystem": [[23, "odesystem"]], "add_covariate_effect": [[35, "add-covariate-effect"]], "Infusion": [[16, "infusion"]], "DataInfo": [[10, "datainfo"], [274, "datainfo"]], "EstimationStep": [[14, "estimationstep"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "API Reference": [[3, "api-reference"]], "DatasetError": [[11, "dataseterror"]], "Parameters": [[25, "parameters"], [287, "parameters"]], "Compartment": [[7, "compartment"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "add_iiv": [[37, "add-iiv"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [280, "running"], [282, "running"], [277, "running"], [288, "running"], [272, "running"], [296, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [280, "arguments"], [282, "arguments"], [277, "arguments"], [288, "arguments"], [272, "arguments"], [296, "arguments"]], "Procedure": [[1, "procedure"], [296, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "Distribution": [[13, "distribution"], [287, "distribution"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "RandomVariables": [[26, "randomvariables"]], "Parameter": [[24, "parameter"]], "add_covariance_step": [[34, "add-covariance-step"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "IIVsearch": [[2, "iivsearch"], [280, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [282, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Results": [[2, "results"], [27, "results"], [282, "results"], [299, "results"], [272, "results"]], "Bolus": [[5, "bolus"]], "Statement": [[28, "statement"]], "Bootstrap": [[263, "bootstrap"]], "The Bootstrap postprocessing and results": [[263, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[263, "parameter-statistics"]], "OFV statistics": [[263, "ofv-statistics"]], "Covariance matrix": [[263, "covariance-matrix"], [286, "covariance-matrix"]], "Included individuals": [[263, "included-individuals"]], "call_workflow": [[254, "call-workflow"]], "NullToolDatabase": [[250, "nulltooldatabase"]], "summarize_errors": [[239, "summarize-errors"]], "ToolDatabase": [[252, "tooldatabase"]], "execute_workflow": [[257, "execute-workflow"]], "run_covsearch": [[231, "run-covsearch"]], "pharmpy.model Package": [[259, "module-pharmpy.model"]], "Functions": [[259, "functions"], [261, "functions"], [260, "functions"], [262, "functions"]], "Classes": [[259, "classes"], [262, "classes"]], "LocalModelDirectoryDatabase": [[246, "localmodeldirectorydatabase"]], "ModelDatabase": [[248, "modeldatabase"]], "Task": [[251, "task"]], "run_modelfit": [[235, "run-modelfit"]], "pharmpy.tools Package": [[261, "module-pharmpy.tools"]], "summarize_individuals_count_table": [[241, "summarize-individuals-count-table"]], "Case deletion diagnostics": [[264, "case-deletion-diagnostics"]], "The cdd results": [[264, "the-cdd-results"]], "Case results": [[264, "case-results"]], "Cook score": [[264, "cook-score"]], "Jackknife cookscore": [[264, "jackknife-cookscore"]], "Covariance ratio": [[264, "covariance-ratio"]], "Delta OFV": [[264, "delta-ofv"]], "Skipped individuals": [[264, "skipped-individuals"]], "Case column": [[264, "case-column"]], "References": [[264, "references"], [278, "references"]], "run_modelsearch": [[236, "run-modelsearch"]], "run_iovsearch": [[234, "run-iovsearch"]], "summarize_individuals": [[240, "summarize-individuals"]], "NullModelDatabase": [[249, "nullmodeldatabase"]], "default_tool_database": [[256, "default-tool-database"]], "LocalDirectoryDatabase": [[244, "localdirectorydatabase"]], "pharmpy.modeling Package": [[260, "module-pharmpy.modeling"]], "run_iivsearch": [[233, "run-iivsearch"]], "Log": [[247, "log"]], "default_model_database": [[255, "default-model-database"]], "Changelog": [[265, "changelog"]], "0.95.0 (2023-05-22)": [[265, "id1"]], "Changes": [[265, "changes"], [265, "id3"], [265, "id7"], [265, "id14"], [265, "id18"], [265, "id21"], [265, "id24"], [265, "id26"], [265, "id28"], [265, "id31"], [265, "id34"], [265, "id37"], [265, "id39"], [265, "id42"], [265, "id47"], [265, "id50"], [265, "id54"], [265, "id57"], [265, "id60"], [265, "id65"], [265, "id69"], [265, "id72"], [265, "id76"], [265, "id79"], [265, "id83"], [265, "id89"], [265, "id93"], [265, "id104"], [265, "id108"], [265, "id113"], [265, "id119"], [265, "id129"], [265, "id134"], [265, "id138"], [265, "id145"], [265, "id151"], [265, "id156"], [265, "id159"], [265, "id163"]], "Bugfixes": [[265, "bugfixes"], [265, "id4"], [265, "id8"], [265, "id11"], [265, "id15"], [265, "id29"], [265, "id32"], [265, "id58"], [265, "id62"], [265, "id66"], [265, "id70"], [265, "id73"], [265, "id80"], [265, "id84"], [265, "id86"], [265, "id90"], [265, "id94"], [265, "id96"], [265, "id99"], [265, "id101"], [265, "id105"], [265, "id111"], [265, "id114"], [265, "id116"], [265, "id120"], [265, "id124"], [265, "id126"], [265, "id130"], [265, "id132"], [265, "id135"], [265, "id139"], [265, "id142"], [265, "id146"], [265, "id153"], [265, "id160"], [265, "id164"]], "0.94.0 (2023-04-26)": [[265, "id2"]], "New features": [[265, "new-features"], [265, "id6"], [265, "id10"], [265, "id13"], [265, "id17"], [265, "id20"], [265, "id23"], [265, "id36"], [265, "id46"], [265, "id53"], [265, "id64"], [265, "id68"], [265, "id75"], [265, "id78"], [265, "id82"], [265, "id88"], [265, "id92"], [265, "id98"], [265, "id103"], [265, "id107"], [265, "id110"], [265, "id118"], [265, "id122"], [265, "id128"], [265, "id137"], [265, "id141"], [265, "id144"], [265, "id148"], [265, "id150"], [265, "id155"], [265, "id158"], [265, "id162"]], "0.93.0 (2023-04-19)": [[265, "id5"]], "0.92.0 (2023-04-05)": [[265, "id9"]], "0.91.0 (2023-03-03)": [[265, "id12"]], "0.90.0 (2023-02-24)": [[265, "id16"]], "0.89.0 (2023-01-26)": [[265, "id19"]], "0.88.0 (2022-12-21)": [[265, "id22"]], "0.87.0 (2022-12-14)": [[265, "id25"]], "0.86.0 (2022-11-30)": [[265, "id27"]], "0.85.0 (2022-11-18)": [[265, "id30"]], "0.84.1 (2022-11-13)": [[265, "id33"]], "Bug fixes": [[265, "bug-fixes"], [265, "id40"], [265, "id44"], [265, "id48"], [265, "id51"], [265, "id55"]], "0.84.0 (2022-11-09)": [[265, "id35"]], "0.83.0 (2022-11-01)": [[265, "id38"]], "0.82.0 (2022-10-24)": [[265, "id41"]], "0.81.1 (2022-10-24)": [[265, "id43"]], "0.81.0 (2022-10-21)": [[265, "id45"]], "0.80.0 (2022-10-19)": [[265, "id49"]], "0.79.0 (2022-10-16)": [[265, "id52"]], "0.78.0 (2022-09-20)": [[265, "id56"]], "0.77.0 (2022-09-08)": [[265, "id59"]], "0.76.1 (2022-09-06)": [[265, "id61"]], "0.76.0 (2022-09-05)": [[265, "id63"]], "0.75.0 (2022-08-10)": [[265, "id67"]], "0.74.0 (2022-07-18)": [[265, "id71"]], "0.73.0 (2022-06-21)": [[265, "id74"]], "0.72.0 (2022-06-08)": [[265, "id77"]], "0.71.0 (2022-05-24)": [[265, "id81"]], "0.70.1 (2022-05-17)": [[265, "id85"]], "0.70.0 (2022-05-13)": [[265, "id87"]], "0.69.0 (2022-04-29)": [[265, "id91"]], "0.68.0 (2022-04-27)": [[265, "id95"]], "0.67.0 (2022-04-25)": [[265, "id97"]], "0.66.0 (2022-04-20)": [[265, "id100"]], "0.65.0 (2022-04-14)": [[265, "id102"]], "0.64.0 (2022-04-12)": [[265, "id106"]], "0.63.0 (2022-04-07)": [[265, "id109"]], "0.62.0 (2022-04-04)": [[265, "id112"]], "New feature": [[265, "new-feature"]], "0.61.1 (2022-03-31)": [[265, "id115"]], "0.61.0 (2022-03-29)": [[265, "id117"]], "0.59.0 (2022-03-25)": [[265, "id121"]], "0.58.4 (2022-03-24)": [[265, "id123"]], "0.58.1 (2022-03-22)": [[265, "id125"]], "0.58.0 (2022-03-22)": [[265, "id127"]], "0.57.0 (2022-03-21)": [[265, "id131"]], "0.56.0 (2022-03-17)": [[265, "id133"]], "0.55.0 (2022-03-16)": [[265, "id136"]], "0.54.0 (2022-03-08)": [[265, "id140"]], "0.53.0 (2022-03-04)": [[265, "id143"]], "0.52.0 (2022-02-25)": [[265, "id147"]], "0.51.0 (2022-02-24)": [[265, "id149"]], "0.50.1 (2022-02-16)": [[265, "id152"]], "0.50.0 (2022-02-16)": [[265, "id154"]], "0.49.0 (2022-02-10)": [[265, "id157"]], "0.48.0 (2022-02-04)": [[265, "id161"]], "0.47.0 (2022-01-28)": [[265, "id165"]], "0.46.0 (2022-01-27)": [[265, "id166"]], "0.45.0 (2022-01-21)": [[265, "id167"]], "0.44.0 (2022-01-20)": [[265, "id168"]], "0.43.0 (2022-01-12)": [[265, "id169"]], "0.42.0 (2022-01-11)": [[265, "id170"]], "0.41.0 (2021-12-21)": [[265, "id171"]], "0.40.0 (2021-12-16)": [[265, "id172"]], "0.39.0 (2021-12-15)": [[265, "id173"]], "0.38.0 (2021-12-08)": [[265, "id174"]], "0.37.1 (2021-11-26)": [[265, "id175"]], "0.37.0 (2021-11-24)": [[265, "id176"]], "0.36.0 (2021-11-11)": [[265, "id177"]], "0.35.0 (2021-11-02)": [[265, "id178"]], "0.34.3 (2021-10-28)": [[265, "id179"]], "0.34.2 (2021-10-26)": [[265, "id180"]], "0.34.1 (2021-10-20)": [[265, "id181"]], "0.34.0 (2021-10-14)": [[265, "id182"]], "0.33.0 (2021-10-11)": [[265, "id183"]], "0.32.0 (2021-09-28)": [[265, "id184"]], "0.31.0 (2021-09-21)": [[265, "id185"]], "0.30.0 (2021-09-06)": [[265, "id186"]], "0.29.0 (2021-08-25)": [[265, "id187"]], "0.28.0 (2021-08-24)": [[265, "id188"]], "0.27.0 (2021-08-09)": [[265, "id189"]], "0.26.1 (2021-08-04)": [[265, "id190"]], "0.26.0 (2021-07-13)": [[265, "id191"]], "0.25.1 (2021-07-08)": [[265, "id192"]], "0.25.0 (2021-06-24)": [[265, "id193"]], "0.24.0 (2021-05-25)": [[265, "id194"]], "0.23.4 (2021-05-03)": [[265, "id195"]], "0.23.3 (2021-04-29)": [[265, "id196"]], "0.23.2 (2021-04-28)": [[265, "id197"]], "0.23.1 (2021-04-28)": [[265, "id198"]], "0.23.0 (2021-04-28)": [[265, "id199"]], "0.22.0 (2021-03-29)": [[265, "id200"]], "0.21.0 (2021-03-22)": [[265, "id201"]], "0.20.1 (2021-03-11)": [[265, "id202"]], "0.20.0 (2021-03-11)": [[265, "id203"]], "0.19.0 (2021-03-02)": [[265, "id204"]], "0.18.0 (2021-03-01)": [[265, "id205"]], "0.17.0 (2021-02-15)": [[265, "id206"]], "0.16.0 (2021-02-08)": [[265, "id207"]], "0.15.0 (2021-02-01)": [[265, "id208"]], "0.14.0 (2021-01-25)": [[265, "id209"]], "0.13.0 (2021-01-18)": [[265, "id210"]], "0.12.0 (2020-12-18)": [[265, "id211"]], "0.11.0 (2020-11-20)": [[265, "id212"]], "0.10.0 (2020-11-16)": [[265, "id213"]], "0.9.0 (2020-10-26)": [[265, "id214"]], "0.8.0 (2020-10-08)": [[265, "id215"]], "0.7.0 (2020-09-28)": [[265, "id216"]], "0.6.0 (2020-09-18)": [[265, "id217"]], "0.5.0 (2020-09-04)": [[265, "id218"]], "0.4.0 (2020-07-24)": [[265, "id219"]], "0.3.0 (2020-06-16)": [[265, "id220"]], "0.2.0 (2020-03-27)": [[265, "id221"]], "0.1.0 (2018-07-22)": [[265, "id222"]], "run_allometry": [[228, "run-allometry"]], "run_ruvsearch": [[237, "run-ruvsearch"]], "run_tool": [[238, "run-tool"]], "LocalDirectoryToolDatabase": [[245, "localdirectorytooldatabase"]], "split_common_options": [[258, "split-common-options"]], "run_estmethod": [[232, "run-estmethod"]], "Workflow": [[253, "workflow"]], "run_bootstrap": [[230, "run-bootstrap"]], "summarize_modelfit_results": [[242, "summarize-modelfit-results"]], "run_amd": [[229, "run-amd"]], "write_results": [[243, "write-results"]], "pharmpy.workflows Package": [[262, "module-pharmpy.workflows"]], "Options for the data module": [[262, "id1"]], "split_joint_distribution": [[200, "split-joint-distribution"]], "unfix_parameters_to": [[209, "unfix-parameters-to"]], "set_weighted_error_model": [[194, "set-weighted-error-model"]], "unconstrain_parameters": [[206, "unconstrain-parameters"]], "simplify_expression": [[198, "simplify-expression"]], "transform_etas_tdist": [[204, "transform-etas-tdist"]], "set_tmdd": [[191, "set-tmdd"]], "unfix_parameters": [[208, "unfix-parameters"]], "transform_etas_boxcox": [[202, "transform-etas-boxcox"]], "translate_nmtran_time": [[205, "translate-nmtran-time"]], "set_transit_compartments": [[192, "set-transit-compartments"]], "predict_influential_individuals": [[218, "predict-influential-individuals"]], "set_zero_order_elimination": [[196, "set-zero-order-elimination"]], "resume_tool": [[225, "resume-tool"]], "predict_influential_outliers": [[219, "predict-influential-outliers"]], "retrieve_final_model": [[226, "retrieve-final-model"]], "write_csv": [[213, "write-csv"]], "transform_blq": [[201, "transform-blq"]], "rank_models": [[222, "rank-models"]], "solve_ode_system": [[199, "solve-ode-system"]], "read_modelfit_results": [[223, "read-modelfit-results"]], "create_report": [[215, "create-report"]], "read_results": [[224, "read-results"]], "update_initial_individual_estimates": [[210, "update-initial-individual-estimates"]], "fit": [[217, "fit"]], "set_zero_order_input": [[197, "set-zero-order-input"]], "retrieve_models": [[227, "retrieve-models"]], "set_time_varying_error_model": [[190, "set-time-varying-error-model"]], "write_model": [[214, "write-model"]], "use_thetas_for_error_stdev": [[212, "use-thetas-for-error-stdev"]], "create_results": [[216, "create-results"]], "print_fit_summary": [[221, "print-fit-summary"]], "set_zero_order_absorption": [[195, "set-zero-order-absorption"]], "update_inits": [[211, "update-inits"]], "set_upper_bounds": [[193, "set-upper-bounds"]], "transform_etas_john_draper": [[203, "transform-etas-john-draper"]], "predict_outliers": [[220, "predict-outliers"]], "undrop_columns": [[207, "undrop-columns"]], "sample_individual_estimates": [[165, "sample-individual-estimates"]], "set_first_order_elimination": [[177, "set-first-order-elimination"]], "set_additive_error_model": [[168, "set-additive-error-model"]], "remove_peripheral_compartment": [[161, "remove-peripheral-compartment"]], "remove_iiv": [[157, "remove-iiv"]], "set_combined_error_model": [[170, "set-combined-error-model"]], "set_michaelis_menten_elimination": [[182, "set-michaelis-menten-elimination"]], "set_first_order_absorption": [[176, "set-first-order-absorption"]], "remove_covariate_effect": [[154, "remove-covariate-effect"]], "set_iiv_on_ruv": [[178, "set-iiv-on-ruv"]], "set_seq_zo_fo_absorption": [[189, "set-seq-zo-fo-absorption"]], "remove_loq_data": [[160, "remove-loq-data"]], "set_initial_condition": [[179, "set-initial-condition"]], "set_dtbs_error_model": [[172, "set-dtbs-error-model"]], "sample_parameters_from_covariance_matrix": [[166, "sample-parameters-from-covariance-matrix"]], "set_mixed_mm_fo_elimination": [[183, "set-mixed-mm-fo-elimination"]], "resample_data": [[164, "resample-data"]], "read_model_from_string": [[152, "read-model-from-string"]], "sample_parameters_uniformly": [[167, "sample-parameters-uniformly"]], "set_initial_estimates": [[180, "set-initial-estimates"]], "set_power_on_ruv": [[187, "set-power-on-ruv"]], "remove_lag_time": [[159, "remove-lag-time"]], "set_lower_bounds": [[181, "set-lower-bounds"]], "set_estimation_step": [[174, "set-estimation-step"]], "remove_estimation_step": [[156, "remove-estimation-step"]], "set_name": [[184, "set-name"]], "remove_unused_parameters_and_rvs": [[162, "remove-unused-parameters-and-rvs"]], "set_ode_solver": [[185, "set-ode-solver"]], "set_evaluation_step": [[175, "set-evaluation-step"]], "remove_error_model": [[155, "remove-error-model"]], "remove_iov": [[158, "remove-iov"]], "rename_symbols": [[163, "rename-symbols"]], "set_covariates": [[171, "set-covariates"]], "set_dvid": [[173, "set-dvid"]], "set_proportional_error_model": [[188, "set-proportional-error-model"]], "remove_covariance_step": [[153, "remove-covariance-step"]], "set_bolus_absorption": [[169, "set-bolus-absorption"]], "set_peripheral_compartments": [[186, "set-peripheral-compartments"]], "get_sigmas": [[119, "get-sigmas"]], "has_covariate_effect": [[126, "has-covariate-effect"]], "has_zero_order_elimination": [[137, "has-zero-order-elimination"]], "read_dataset_from_datainfo": [[150, "read-dataset-from-datainfo"]], "plot_transformed_eta_distributions": [[147, "plot-transformed-eta-distributions"]], "has_michaelis_menten_elimination": [[130, "has-michaelis-menten-elimination"]], "get_rv_parameters": [[118, "get-rv-parameters"]], "omit_data": [[144, "omit-data"]], "print_model_code": [[148, "print-model-code"]], "has_additive_error_model": [[124, "has-additive-error-model"]], "has_linear_odes_with_real_eigenvalues": [[129, "has-linear-odes-with-real-eigenvalues"]], "greekify_model": [[123, "greekify-model"]], "get_unit_of": [[121, "get-unit-of"]], "load_example_model": [[141, "load-example-model"]], "get_population_prediction_expression": [[117, "get-population-prediction-expression"]], "list_time_varying_covariates": [[140, "list-time-varying-covariates"]], "make_declarative": [[142, "make-declarative"]], "get_omegas": [[115, "get-omegas"]], "get_pk_parameters": [[116, "get-pk-parameters"]], "has_proportional_error_model": [[133, "has-proportional-error-model"]], "has_mixed_mm_fo_elimination": [[131, "has-mixed-mm-fo-elimination"]], "plot_individual_predictions": [[145, "plot-individual-predictions"]], "has_random_effect": [[134, "has-random-effect"]], "plot_iofv_vs_iofv": [[146, "plot-iofv-vs-iofv"]], "is_linearized": [[138, "is-linearized"]], "mu_reference_model": [[143, "mu-reference-model"]], "get_zero_order_inputs": [[122, "get-zero-order-inputs"]], "has_zero_order_absorption": [[136, "has-zero-order-absorption"]], "get_thetas": [[120, "get-thetas"]], "has_odes": [[132, "has-odes"]], "has_weighted_error_model": [[135, "has-weighted-error-model"]], "has_first_order_elimination": [[127, "has-first-order-elimination"]], "has_linear_odes": [[128, "has-linear-odes"]], "has_combined_error_model": [[125, "has-combined-error-model"]], "is_real": [[139, "is-real"]], "print_model_symbols": [[149, "print-model-symbols"]], "get_observations": [[114, "get-observations"]], "read_model": [[151, "read-model"]], "drop_dropped_columns": [[79, "drop-dropped-columns"]], "get_dv_symbol": [[100, "get-dv-symbol"]], "get_number_of_observations_per_individual": [[112, "get-number-of-observations-per-individual"]], "evaluate_eta_gradient": [[81, "evaluate-eta-gradient"]], "evaluate_expression": [[82, "evaluate-expression"]], "get_doseid": [[98, "get-doseid"]], "get_model_code": [[108, "get-model-code"]], "get_number_of_individuals": [[110, "get-number-of-individuals"]], "get_doses": [[99, "get-doses"]], "get_initial_conditions": [[105, "get-initial-conditions"]], "fix_or_unfix_parameters": [[89, "fix-or-unfix-parameters"]], "evaluate_population_prediction": [[84, "evaluate-population-prediction"]], "get_number_of_observations": [[111, "get-number-of-observations"]], "find_clearance_parameters": [[87, "find-clearance-parameters"]], "get_observation_expression": [[113, "get-observation-expression"]], "get_config_path": [[96, "get-config-path"]], "get_baselines": [[92, "get-baselines"]], "get_covariate_baselines": [[97, "get-covariate-baselines"]], "get_mdv": [[107, "get-mdv"]], "get_evid": [[101, "get-evid"]], "get_model_covariates": [[109, "get-model-covariates"]], "expand_additional_doses": [[86, "expand-additional-doses"]], "evaluate_epsilon_gradient": [[80, "evaluate-epsilon-gradient"]], "get_concentration_parameters_from_data": [[95, "get-concentration-parameters-from-data"]], "get_individual_parameters": [[103, "get-individual-parameters"]], "find_volume_parameters": [[88, "find-volume-parameters"]], "get_individual_prediction_expression": [[104, "get-individual-prediction-expression"]], "get_ids": [[102, "get-ids"]], "get_bioavailability": [[93, "get-bioavailability"]], "deidentify_data": [[76, "deidentify-data"]], "evaluate_weighted_residuals": [[85, "evaluate-weighted-residuals"]], "fix_parameters_to": [[91, "fix-parameters-to"]], "fix_parameters": [[90, "fix-parameters"]], "get_lag_times": [[106, "get-lag-times"]], "display_odes": [[77, "display-odes"]], "drop_columns": [[78, "drop-columns"]], "get_cmt": [[94, "get-cmt"]], "evaluate_individual_prediction": [[83, "evaluate-individual-prediction"]], "Algorithms": [[280, "algorithms"], [277, "algorithms"], [288, "algorithms"]], "Brute force search for number of IIVs": [[280, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[280, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[280, "full-brute-force-search"]], "Adding IIV to the start model": [[280, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[280, "comparing-and-ranking-candidates"], [282, "comparing-and-ranking-candidates"], [288, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[280, "the-iivsearch-results"]], "Contribute": [[270, "contribute"]], "Set up the development environment": [[270, "set-up-the-development-environment"]], "Supported platforms": [[270, "supported-platforms"]], "Install Python": [[270, "install-python"]], "Install git": [[270, "install-git"]], "Fork and clone the code repository": [[270, "fork-and-clone-the-code-repository"]], "Install tox": [[270, "install-tox"]], "Install graphviz used for building the documentation": [[270, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[270, "using-the-development-environment"]], "Running tox": [[270, "running-tox"]], "Check code formatting": [[270, "check-code-formatting"]], "Run the unit tests": [[270, "run-the-unit-tests"]], "Build and test the documentation": [[270, "build-and-test-the-documentation"]], "Run the integration tests": [[270, "run-the-integration-tests"]], "Build a usable virtual environment": [[270, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[270, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[270, "releasing-pharmpy-and-documentation"]], "Version": [[270, "version"]], "Information for developers": [[270, "information-for-developers"]], "Pharmpy Community Code of Conduct": [[268, "pharmpy-community-code-of-conduct"]], "License": [[283, "license"]], "Logo": [[283, "logo"]], "Copyright": [[283, "copyright"]], "BSD 2-clause License": [[283, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[283, "gnu-lesser-general-public-license"]], "Pharmpy in R": [[301, "pharmpy-in-r"]], "Installing pharmr": [[301, "installing-pharmr"]], "Trouble shooting": [[301, "trouble-shooting"]], "Wrong Python version": [[301, "wrong-python-version"]], "Error importing Pharmpy": [[301, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[301, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[301, "using-pharmr"]], "Gotchas": [[301, "gotchas"]], "List indices": [[301, "list-indices"]], "Algorithm": [[282, "algorithm"], [272, "algorithm"]], "Distribution of new IOVs": [[282, "distribution-of-new-iovs"]], "Plugins": [[291, "plugins"]], "Overview of a plugin": [[291, "overview-of-a-plugin"]], "The Pharmpy command line interface": [[267, "the-pharmpy-command-line-interface"]], "pharmpy": [[267, "pharmpy"]], "pharmpy data": [[267, "pharmpy-data"]], "pharmpy data append": [[267, "pharmpy-data-append"]], "pharmpy data deidentify": [[267, "pharmpy-data-deidentify"]], "pharmpy data filter": [[267, "pharmpy-data-filter"]], "pharmpy data print": [[267, "pharmpy-data-print"]], "pharmpy data resample": [[267, "pharmpy-data-resample"]], "pharmpy data write": [[267, "pharmpy-data-write"]], "pharmpy info": [[267, "pharmpy-info"]], "pharmpy model": [[267, "pharmpy-model"]], "pharmpy model absorption_rate": [[267, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[267, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[267, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[267, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[267, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[267, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[267, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[267, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[267, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[267, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[267, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[267, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[267, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[267, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[267, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[267, "pharmpy-model-sample"]], "pharmpy model tdist": [[267, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[267, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[267, "pharmpy-model-update-inits"]], "pharmpy results": [[267, "pharmpy-results"]], "pharmpy results bootstrap": [[267, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[267, "pharmpy-results-cdd"]], "pharmpy results frem": [[267, "pharmpy-results-frem"]], "pharmpy results linearize": [[267, "pharmpy-results-linearize"]], "pharmpy results ofv": [[267, "pharmpy-results-ofv"]], "pharmpy results print": [[267, "pharmpy-results-print"]], "pharmpy results qa": [[267, "pharmpy-results-qa"]], "pharmpy results report": [[267, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[267, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[267, "pharmpy-results-scm"]], "pharmpy results simeval": [[267, "pharmpy-results-simeval"]], "pharmpy results summary": [[267, "pharmpy-results-summary"]], "pharmpy run": [[267, "pharmpy-run"]], "pharmpy run allometry": [[267, "pharmpy-run-allometry"]], "pharmpy run amd": [[267, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[267, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[267, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[267, "pharmpy-run-estmethod"]], "pharmpy run execute": [[267, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[267, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[267, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[267, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[267, "pharmpy-run-ruvsearch"]], "Estmethod": [[277, "estmethod"]], "Exhaustive": [[277, "exhaustive"]], "Exhaustive (with update)": [[277, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[277, "exhaustive-only-evaluation"]], "Methods": [[277, "methods"]], "Solvers": [[277, "solvers"]], "The Estmethod results": [[277, "the-estmethod-results"]], "Documentation for developers": [[276, "documentation-for-developers"]], "Using the NONMEM plugin": [[289, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[289, "names-of-parameters-and-random-variables"]], "Reading in a model": [[289, "reading-in-a-model"], [285, "reading-in-a-model"]], "New parameters and random variables": [[289, "new-parameters-and-random-variables"]], "Writing a model": [[289, "writing-a-model"], [285, "writing-a-model"]], "Configuration": [[269, "configuration"]], "The configuration file": [[269, "the-configuration-file"]], "Environment variables": [[269, "environment-variables"]], "Modelsearch": [[288, "modelsearch"]], "The search space": [[288, "the-search-space"]], "Common behaviours between algorithms": [[288, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[288, "feature-combination-exclusions"]], "Exhaustive search": [[288, "exhaustive-search"]], "Exhaustive stepwise search": [[288, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[288, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[288, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[288, "the-modelsearch-results"]], "scm": [[297, "scm"]], "The scm results": [[297, "the-scm-results"]], "Steps": [[297, "steps"]], "OFV Summary": [[297, "ofv-summary"]], "Candidate Summary": [[297, "candidate-summary"]], "Plots in Pharmpy": [[290, "plots-in-pharmpy"]], "Setting themes": [[290, "setting-themes"]], "Changing axis of plots": [[290, "changing-axis-of-plots"]], "FREM": [[278, "frem"]], "The FREM postprocessing and results": [[278, "the-frem-postprocessing-and-results"]], "Covariate effects": [[278, "covariate-effects"], [295, "covariate-effects"]], "Parameter covariate coefficients": [[278, "parameter-covariate-coefficients"]], "Individual covariate effects": [[278, "individual-covariate-effects"]], "Unexplained variability": [[278, "unexplained-variability"]], "Parameter estimates": [[278, "parameter-estimates"], [286, "parameter-estimates"]], "OFV": [[278, "ofv"]], "Estimated covariate values": [[278, "estimated-covariate-values"]], "Crossval": [[273, "crossval"]], "The crossval results": [[273, "the-crossval-results"]], "Crossvalidation OFVs": [[273, "crossvalidation-ofvs"]], "Reading modelfit results": [[286, "reading-modelfit-results"]], "Modelfit results": [[286, "modelfit-results"], [285, "modelfit-results"]], "Final OFV": [[286, "final-ofv"]], "Standard errors of parameter estimates": [[286, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[286, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[286, "correlation-matrix"]], "Information Matrix": [[286, "information-matrix"]], "Indiviudal OFV": [[286, "indiviudal-ofv"]], "Predictions": [[286, "predictions"]], "Residuals": [[286, "residuals"]], "Individual estimates": [[286, "individual-estimates"]], "Tools": [[299, "tools"]], "Tools in Pharmpy": [[299, "tools-in-pharmpy"]], "Common options": [[299, "common-options"]], "Common features": [[299, "common-features"]], "Tool database": [[299, "tool-database"]], "Running directory": [[299, "running-directory"]], "Metadata": [[299, "metadata"]], "Datasets": [[299, "datasets"]], "Model feature language (MFL)": [[299, "model-feature-language-mfl"]], "Option types": [[299, "option-types"]], "Model features": [[299, "model-features"]], "Symbols": [[299, "symbols"]], "Describe intervals": [[299, "describe-intervals"]], "Redundant descriptions": [[299, "redundant-descriptions"]], "Examples": [[299, "examples"]], "Getting started": [[279, "getting-started"]], "Installation": [[279, "installation"]], "A first example": [[279, "a-first-example"]], "The Pharmpy model": [[285, "the-pharmpy-model"]], "Model name": [[285, "model-name"]], "Getting the model code": [[285, "getting-the-model-code"], [287, "getting-the-model-code"]], "Model parameters": [[285, "model-parameters"]], "Parameter sets": [[285, "parameter-sets"]], "Random variables": [[285, "random-variables"]], "Model statements": [[285, "model-statements"]], "Dependent variables": [[285, "dependent-variables"]], "Updating initial estimates": [[285, "updating-initial-estimates"]], "COVsearch": [[272, "covsearch"]], "Effects": [[272, "effects"]], "Wildcards": [[272, "wildcards"]], "Project suggestions": [[292, "project-suggestions"]], "Datasets in Pharmpy": [[274, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[274, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[274, "update-the-dataset-of-a-model"]], "Subjects": [[274, "subjects"]], "Observations": [[274, "observations"]], "Dosing": [[274, "dosing"]], "Extract dosing information": [[274, "extract-dosing-information"]], "Dose grouping": [[274, "dose-grouping"]], "Time after dose": [[274, "time-after-dose"]], "Concentration parameters": [[274, "concentration-parameters"]], "type": [[274, "type"]], "scale": [[274, "scale"]], "continuous": [[274, "continuous"]], "categories": [[274, "categories"]], "unit": [[274, "unit"]], "drop": [[274, "drop"]], "datatype": [[274, "datatype"]], "descriptor": [[274, "descriptor"]], "datainfo file": [[274, "datainfo-file"]], "Contributors": [[271, "authors"]], "Development": [[271, "development"]], "Scientific input": [[271, "scientific-input"]], "Funding": [[271, "funding"]], "Linearize": [[284, "linearize"]], "The linearize results": [[284, "the-linearize-results"]], "OFVs": [[284, "ofvs"]], "Individual OFVs": [[284, "individual-ofvs"]], "ruvsearch": [[296, "ruvsearch"]], "Models": [[296, "models"]], "The RUVsearch results": [[296, "the-ruvsearch-results"]], "Modeling": [[287, "modeling"]], "Basic modeling": [[287, "basic-modeling"]], "Reading, writing and updating source models": [[287, "reading-writing-and-updating-source-models"]], "Read model from file": [[287, "read-model-from-file"]], "Read model from string": [[287, "read-model-from-string"]], "Write model to file": [[287, "write-model-to-file"]], "Fix and unfix parameters": [[287, "fix-and-unfix-parameters"]], "Add parameter": [[287, "add-parameter"]], "PK models and ODE systems": [[287, "pk-models-and-ode-systems"]], "Absorption rate": [[287, "absorption-rate"]], "Bolus absorption": [[287, "bolus-absorption"]], "Zero order": [[287, "zero-order"]], "First order": [[287, "first-order"]], "Sequential zero-order then first-order": [[287, "sequential-zero-order-then-first-order"]], "Absorption delay": [[287, "absorption-delay"]], "Transit compartments": [[287, "transit-compartments"]], "Lag time": [[287, "lag-time"]], "Elimination rate": [[287, "elimination-rate"]], "First-order elimination": [[287, "first-order-elimination"]], "Zero-order elimination": [[287, "zero-order-elimination"]], "Michaelis-Menten elimination": [[287, "michaelis-menten-elimination"]], "Mixed Michaelis-Menten + First-Order elimination": [[287, "mixed-michaelis-menten-first-order-elimination"]], "Add peripheral compartment": [[287, "add-peripheral-compartment"]], "Remove peripheral compartment": [[287, "remove-peripheral-compartment"]], "Set the number of peripheral compartments": [[287, "set-the-number-of-peripheral-compartments"]], "Adding covariate effects": [[287, "adding-covariate-effects"]], "Transformation of etas": [[287, "transformation-of-etas"]], "Boxcox": [[287, "boxcox"], [295, "boxcox"]], "Approximate t-distribution": [[287, "approximate-t-distribution"]], "John Draper": [[287, "john-draper"]], "Adding new etas": [[287, "adding-new-etas"]], "Adding IIVs": [[287, "adding-iivs"]], "Adding IOVs": [[287, "adding-iovs"]], "Removing etas": [[287, "removing-etas"]], "Remove IIVs": [[287, "remove-iivs"]], "Remove IOVs": [[287, "remove-iovs"]], "The error model": [[287, "the-error-model"]], "Removing the error model": [[287, "removing-the-error-model"]], "Setting an additive error model": [[287, "setting-an-additive-error-model"]], "Setting a proportional error model": [[287, "setting-a-proportional-error-model"]], "Setting a combined additive and proportional error model": [[287, "setting-a-combined-additive-and-proportional-error-model"]], "Applying IIV on RUVs": [[287, "applying-iiv-on-ruvs"]], "Power effects on RUVs": [[287, "power-effects-on-ruvs"]], "Estimate standard deviation of epsilons with thetas": [[287, "estimate-standard-deviation-of-epsilons-with-thetas"]], "Weighted error model": [[287, "weighted-error-model"]], "dTBS error model": [[287, "dtbs-error-model"]], "Creating joint distributions of multiple etas": [[287, "creating-joint-distributions-of-multiple-etas"]], "Remove covariance between etas": [[287, "remove-covariance-between-etas"]], "Update initial estimates from previous run": [[287, "update-initial-estimates-from-previous-run"]], "Fitting a model": [[287, "fitting-a-model"]], "Getting results from a PsN run": [[287, "getting-results-from-a-psn-run"]], "Eta shrinkage": [[287, "eta-shrinkage"]], "Individual parameter calculations": [[287, "individual-parameter-calculations"]], "QA": [[295, "qa"]], "The qa results": [[295, "the-qa-results"]], "Overview": [[295, "overview"]], "Structural bias": [[295, "structural-bias"]], "Fullblock": [[295, "fullblock"]], "Tdist": [[295, "tdist"]], "Residual error": [[295, "residual-error"]], "User guide": [[300, "user-guide"]], "Welcome to Pharmpy": [[281, "welcome-to-pharmpy"]], "Citation": [[266, "citation"]], "How to cite Pharmpy and pharmr": [[266, "how-to-cite-pharmpy-and-pharmr"]], "Design principles": [[275, "design-principles"]], "Levels of the architecture": [[275, "levels-of-the-architecture"]], "The Heart, The Model Class": [[275, "the-heart-the-model-class"]], "pharmpy.Parameters": [[275, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[275, "pharmpy-randomvariables"]], "pharmpy.Statements": [[275, "pharmpy-statements"]], "The pharmpy.modeling module": [[275, "the-pharmpy-modeling-module"]], "Docstrings": [[275, "docstrings"]], "Dependencies": [[275, "dependencies"]], "PsN with Pharmpy": [[294, "psn-with-pharmpy"]], "Tools connected to PsN": [[294, "tools-connected-to-psn"]], "Resmod": [[293, "resmod"]], "The resmod results": [[293, "the-resmod-results"]], "Resmod models": [[293, "resmod-models"]], "Simeval": [[298, "simeval"]], "The simeval results": [[298, "the-simeval-results"]], "Sampled Individual OFVs": [[298, "sampled-individual-ofvs"]], "Individual OFV summary": [[298, "individual-ofv-summary"]], "Individual prediction plot": [[298, "individual-prediction-plot"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "admid (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.admid"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "dose (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.dose"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartment"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "peripheral_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.peripheral_compartments"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "cov (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.cov"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "solver (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver"]], "solver_atol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_atol"]], "solver_rtol (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.solver_rtol"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_solvers (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_solvers"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "admid (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.admid"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.create_model"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "odesystem (class in pharmpy.model)": [[23, "pharmpy.model.ODESystem"]], "parameter (class in pharmpy.model)": [[24, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[24, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[24, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[24, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[25, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[25, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[25, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[25, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[26, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[26, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.subs"]], "to_dict() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[26, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[26, "pharmpy.model.RandomVariables.variance_parameters"]], "results (class in pharmpy.model)": [[27, "pharmpy.model.Results"]], "from_dict() (pharmpy.model.results class method)": [[27, "pharmpy.model.Results.from_dict"]], "get_and_reset_index() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.get_and_reset_index"]], "to_csv() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_csv"]], "to_dict() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_dict"]], "to_json() (pharmpy.model.results method)": [[27, "pharmpy.model.Results.to_json"]], "statement (class in pharmpy.model)": [[28, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[28, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[28, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[29, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[29, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[29, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[29, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[30, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[30, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[30, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[31, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[31, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[31, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[31, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[32, "pharmpy.model.to_compartmental_system"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_covariance_step() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_covariance_step"]], "add_covariate_effect() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_covariate_effect"]], "add_estimation_step() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_iiv"]], "add_individual_parameter() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_metabolite"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_inf() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.calculate_corr_from_inf"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_inf() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_cov_from_inf"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_inf_from_corrse() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_inf_from_corrse"]], "calculate_inf_from_cov() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_inf_from_cov"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_inf() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_se_from_inf"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.expand_additional_doses"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.fix_parameters_to"]], "get_baselines() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.get_covariate_baselines"]], "get_doseid() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_observation_expression() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_omegas"]], "get_pk_parameters() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.has_first_order_elimination"]], "has_linear_odes() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.has_odes"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.has_random_effect"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.list_time_varying_covariates"]], "load_example_model() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.omit_data"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.read_model_from_string"]], "remove_covariance_step() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.remove_covariance_step"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.remove_loq_data"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.rename_symbols"]], "resample_data() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.set_additive_error_model"]], "set_bolus_absorption() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.set_bolus_absorption"]], "set_combined_error_model() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.set_covariates"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.set_initial_estimates"]], "set_lower_bounds() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.set_proportional_error_model"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.unfix_parameters_to"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[215, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[216, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[217, "pharmpy.tools.fit"]], "predict_influential_individuals() (in module pharmpy.tools)": [[218, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[219, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[220, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[221, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[222, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[223, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[224, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[225, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[226, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[227, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[228, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[229, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[230, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[231, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[232, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[233, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[234, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[235, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[236, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[237, "pharmpy.tools.run_ruvsearch"]], "run_tool() (in module pharmpy.tools)": [[238, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[239, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[240, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[241, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[242, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[243, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[244, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[244, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[245, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[246, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[246, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[246, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[246, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[247, "pharmpy.workflows.Log"]], "from_dict() (pharmpy.workflows.log class method)": [[247, "pharmpy.workflows.Log.from_dict"]], "log (pharmpy.workflows.log attribute)": [[247, "pharmpy.workflows.Log.log"]], "log_error() (pharmpy.workflows.log method)": [[247, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[247, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[247, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[247, "pharmpy.workflows.Log.to_dict"]], "modeldatabase (class in pharmpy.workflows)": [[248, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[248, "pharmpy.workflows.ModelDatabase.transaction"]], "nullmodeldatabase (class in pharmpy.workflows)": [[249, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[249, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[250, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[250, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[250, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[250, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[250, "pharmpy.workflows.NullToolDatabase.store_results"]], "task (class in pharmpy.workflows)": [[251, "pharmpy.workflows.Task"]], "tooldatabase (class in pharmpy.workflows)": [[252, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[252, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[252, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[252, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[252, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[252, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[252, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[253, "pharmpy.workflows.Workflow"]], "call_workflow() (in module pharmpy.workflows)": [[254, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[255, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[256, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[257, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[258, "pharmpy.workflows.split_common_options"]], "module": [[259, "module-pharmpy.model"], [260, "module-pharmpy.modeling"], [261, "module-pharmpy.tools"], [262, "module-pharmpy.workflows"]], "pharmpy.model": [[259, "module-pharmpy.model"]], "pharmpy.modeling": [[260, "module-pharmpy.modeling"]], "pharmpy.tools": [[261, "module-pharmpy.tools"]], "pharmpy.workflows": [[262, "module-pharmpy.workflows"]], "--algorithm": [[267, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[267, "cmdoption-pharmpy-run-allometry-allometric_variable"], [267, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[267, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[267, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[267, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[267, "cmdoption-pharmpy-run-iivsearch-cutoff"], [267, "cmdoption-pharmpy-run-iovsearch-cutoff"], [267, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[267, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[267, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[267, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[267, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [267, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[267, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[267, "cmdoption-pharmpy-model-add_iov-eta_names"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[267, "cmdoption-pharmpy-model-add_iov-etas"], [267, "cmdoption-pharmpy-model-boxcox-etas"], [267, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [267, "cmdoption-pharmpy-model-john_draper-etas"], [267, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[267, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[267, "cmdoption-pharmpy-data-append-f"], [267, "cmdoption-pharmpy-data-deidentify-f"], [267, "cmdoption-pharmpy-data-filter-f"], [267, "cmdoption-pharmpy-data-write-f"], [267, "cmdoption-pharmpy-model-absorption_rate-f"], [267, "cmdoption-pharmpy-model-add_cov_effect-f"], [267, "cmdoption-pharmpy-model-add_iiv-f"], [267, "cmdoption-pharmpy-model-add_iov-f"], [267, "cmdoption-pharmpy-model-boxcox-f"], [267, "cmdoption-pharmpy-model-create_joint_distribution-f"], [267, "cmdoption-pharmpy-model-elimination_rate-f"], [267, "cmdoption-pharmpy-model-error-f"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [267, "cmdoption-pharmpy-model-john_draper-f"], [267, "cmdoption-pharmpy-model-peripheral_compartments-f"], [267, "cmdoption-pharmpy-model-power_on_ruv-f"], [267, "cmdoption-pharmpy-model-remove_iiv-f"], [267, "cmdoption-pharmpy-model-remove_iov-f"], [267, "cmdoption-pharmpy-model-tdist-f"], [267, "cmdoption-pharmpy-model-transit_compartments-f"], [267, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[267, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[267, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[267, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[267, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[267, "cmdoption-pharmpy-data-append-h"], [267, "cmdoption-pharmpy-data-deidentify-h"], [267, "cmdoption-pharmpy-data-filter-h"], [267, "cmdoption-pharmpy-data-h"], [267, "cmdoption-pharmpy-data-print-h"], [267, "cmdoption-pharmpy-data-resample-h"], [267, "cmdoption-pharmpy-data-write-h"], [267, "cmdoption-pharmpy-h"], [267, "cmdoption-pharmpy-info-h"], [267, "cmdoption-pharmpy-model-absorption_rate-h"], [267, "cmdoption-pharmpy-model-add_cov_effect-h"], [267, "cmdoption-pharmpy-model-add_iiv-h"], [267, "cmdoption-pharmpy-model-add_iov-h"], [267, "cmdoption-pharmpy-model-boxcox-h"], [267, "cmdoption-pharmpy-model-create_joint_distribution-h"], [267, "cmdoption-pharmpy-model-elimination_rate-h"], [267, "cmdoption-pharmpy-model-error-h"], [267, "cmdoption-pharmpy-model-h"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [267, "cmdoption-pharmpy-model-john_draper-h"], [267, "cmdoption-pharmpy-model-peripheral_compartments-h"], [267, "cmdoption-pharmpy-model-power_on_ruv-h"], [267, "cmdoption-pharmpy-model-print-h"], [267, "cmdoption-pharmpy-model-remove_iiv-h"], [267, "cmdoption-pharmpy-model-remove_iov-h"], [267, "cmdoption-pharmpy-model-sample-h"], [267, "cmdoption-pharmpy-model-tdist-h"], [267, "cmdoption-pharmpy-model-transit_compartments-h"], [267, "cmdoption-pharmpy-model-update_inits-h"], [267, "cmdoption-pharmpy-results-bootstrap-h"], [267, "cmdoption-pharmpy-results-cdd-h"], [267, "cmdoption-pharmpy-results-frem-h"], [267, "cmdoption-pharmpy-results-h"], [267, "cmdoption-pharmpy-results-linearize-h"], [267, "cmdoption-pharmpy-results-ofv-h"], [267, "cmdoption-pharmpy-results-print-h"], [267, "cmdoption-pharmpy-results-qa-h"], [267, "cmdoption-pharmpy-results-report-h"], [267, "cmdoption-pharmpy-results-ruvsearch-h"], [267, "cmdoption-pharmpy-results-scm-h"], [267, "cmdoption-pharmpy-results-simeval-h"], [267, "cmdoption-pharmpy-results-summary-h"], [267, "cmdoption-pharmpy-run-allometry-h"], [267, "cmdoption-pharmpy-run-amd-h"], [267, "cmdoption-pharmpy-run-bootstrap-h"], [267, "cmdoption-pharmpy-run-covsearch-h"], [267, "cmdoption-pharmpy-run-estmethod-h"], [267, "cmdoption-pharmpy-run-execute-h"], [267, "cmdoption-pharmpy-run-h"], [267, "cmdoption-pharmpy-run-iivsearch-h"], [267, "cmdoption-pharmpy-run-iovsearch-h"], [267, "cmdoption-pharmpy-run-modelsearch-h"], [267, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[267, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[267, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [267, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[267, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[267, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[267, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[267, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[267, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[267, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[267, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[267, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[267, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[267, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[267, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[267, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[267, "cmdoption-pharmpy-model-add_cov_effect-operation"], [267, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[267, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[267, "cmdoption-pharmpy-data-append-o"], [267, "cmdoption-pharmpy-data-deidentify-o"], [267, "cmdoption-pharmpy-data-filter-o"], [267, "cmdoption-pharmpy-data-write-o"], [267, "cmdoption-pharmpy-model-absorption_rate-o"], [267, "cmdoption-pharmpy-model-add_cov_effect-o"], [267, "cmdoption-pharmpy-model-add_iiv-o"], [267, "cmdoption-pharmpy-model-add_iov-o"], [267, "cmdoption-pharmpy-model-boxcox-o"], [267, "cmdoption-pharmpy-model-create_joint_distribution-o"], [267, "cmdoption-pharmpy-model-elimination_rate-o"], [267, "cmdoption-pharmpy-model-error-o"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [267, "cmdoption-pharmpy-model-john_draper-o"], [267, "cmdoption-pharmpy-model-peripheral_compartments-o"], [267, "cmdoption-pharmpy-model-power_on_ruv-o"], [267, "cmdoption-pharmpy-model-remove_iiv-o"], [267, "cmdoption-pharmpy-model-remove_iov-o"], [267, "cmdoption-pharmpy-model-tdist-o"], [267, "cmdoption-pharmpy-model-transit_compartments-o"], [267, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[267, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[267, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[267, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[267, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[267, "cmdoption-pharmpy-run-allometry-path"], [267, "cmdoption-pharmpy-run-amd-path"], [267, "cmdoption-pharmpy-run-covsearch-path"], [267, "cmdoption-pharmpy-run-estmethod-path"], [267, "cmdoption-pharmpy-run-iivsearch-path"], [267, "cmdoption-pharmpy-run-iovsearch-path"], [267, "cmdoption-pharmpy-run-modelsearch-path"], [267, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[267, "cmdoption-pharmpy-run-iivsearch-rank_type"], [267, "cmdoption-pharmpy-run-iovsearch-rank_type"], [267, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[267, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[267, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[267, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[267, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[267, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[267, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[267, "cmdoption-pharmpy-model-sample-samples"], [267, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[267, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[267, "cmdoption-pharmpy-data-resample-seed"], [267, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[267, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[267, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[267, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[267, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[267, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[267, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[267, "cmdoption-pharmpy-version"]], "-f": [[267, "cmdoption-pharmpy-data-append-f"], [267, "cmdoption-pharmpy-data-deidentify-f"], [267, "cmdoption-pharmpy-data-filter-f"], [267, "cmdoption-pharmpy-data-write-f"], [267, "cmdoption-pharmpy-model-absorption_rate-f"], [267, "cmdoption-pharmpy-model-add_cov_effect-f"], [267, "cmdoption-pharmpy-model-add_iiv-f"], [267, "cmdoption-pharmpy-model-add_iov-f"], [267, "cmdoption-pharmpy-model-boxcox-f"], [267, "cmdoption-pharmpy-model-create_joint_distribution-f"], [267, "cmdoption-pharmpy-model-elimination_rate-f"], [267, "cmdoption-pharmpy-model-error-f"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [267, "cmdoption-pharmpy-model-john_draper-f"], [267, "cmdoption-pharmpy-model-peripheral_compartments-f"], [267, "cmdoption-pharmpy-model-power_on_ruv-f"], [267, "cmdoption-pharmpy-model-remove_iiv-f"], [267, "cmdoption-pharmpy-model-remove_iov-f"], [267, "cmdoption-pharmpy-model-tdist-f"], [267, "cmdoption-pharmpy-model-transit_compartments-f"], [267, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[267, "cmdoption-pharmpy-data-append-h"], [267, "cmdoption-pharmpy-data-deidentify-h"], [267, "cmdoption-pharmpy-data-filter-h"], [267, "cmdoption-pharmpy-data-h"], [267, "cmdoption-pharmpy-data-print-h"], [267, "cmdoption-pharmpy-data-resample-h"], [267, "cmdoption-pharmpy-data-write-h"], [267, "cmdoption-pharmpy-h"], [267, "cmdoption-pharmpy-info-h"], [267, "cmdoption-pharmpy-model-absorption_rate-h"], [267, "cmdoption-pharmpy-model-add_cov_effect-h"], [267, "cmdoption-pharmpy-model-add_iiv-h"], [267, "cmdoption-pharmpy-model-add_iov-h"], [267, "cmdoption-pharmpy-model-boxcox-h"], [267, "cmdoption-pharmpy-model-create_joint_distribution-h"], [267, "cmdoption-pharmpy-model-elimination_rate-h"], [267, "cmdoption-pharmpy-model-error-h"], [267, "cmdoption-pharmpy-model-h"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [267, "cmdoption-pharmpy-model-john_draper-h"], [267, "cmdoption-pharmpy-model-peripheral_compartments-h"], [267, "cmdoption-pharmpy-model-power_on_ruv-h"], [267, "cmdoption-pharmpy-model-print-h"], [267, "cmdoption-pharmpy-model-remove_iiv-h"], [267, "cmdoption-pharmpy-model-remove_iov-h"], [267, "cmdoption-pharmpy-model-sample-h"], [267, "cmdoption-pharmpy-model-tdist-h"], [267, "cmdoption-pharmpy-model-transit_compartments-h"], [267, "cmdoption-pharmpy-model-update_inits-h"], [267, "cmdoption-pharmpy-results-bootstrap-h"], [267, "cmdoption-pharmpy-results-cdd-h"], [267, "cmdoption-pharmpy-results-frem-h"], [267, "cmdoption-pharmpy-results-h"], [267, "cmdoption-pharmpy-results-linearize-h"], [267, "cmdoption-pharmpy-results-ofv-h"], [267, "cmdoption-pharmpy-results-print-h"], [267, "cmdoption-pharmpy-results-qa-h"], [267, "cmdoption-pharmpy-results-report-h"], [267, "cmdoption-pharmpy-results-ruvsearch-h"], [267, "cmdoption-pharmpy-results-scm-h"], [267, "cmdoption-pharmpy-results-simeval-h"], [267, "cmdoption-pharmpy-results-summary-h"], [267, "cmdoption-pharmpy-run-allometry-h"], [267, "cmdoption-pharmpy-run-amd-h"], [267, "cmdoption-pharmpy-run-bootstrap-h"], [267, "cmdoption-pharmpy-run-covsearch-h"], [267, "cmdoption-pharmpy-run-estmethod-h"], [267, "cmdoption-pharmpy-run-execute-h"], [267, "cmdoption-pharmpy-run-h"], [267, "cmdoption-pharmpy-run-iivsearch-h"], [267, "cmdoption-pharmpy-run-iovsearch-h"], [267, "cmdoption-pharmpy-run-modelsearch-h"], [267, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[267, "cmdoption-pharmpy-data-append-o"], [267, "cmdoption-pharmpy-data-deidentify-o"], [267, "cmdoption-pharmpy-data-filter-o"], [267, "cmdoption-pharmpy-data-write-o"], [267, "cmdoption-pharmpy-model-absorption_rate-o"], [267, "cmdoption-pharmpy-model-add_cov_effect-o"], [267, "cmdoption-pharmpy-model-add_iiv-o"], [267, "cmdoption-pharmpy-model-add_iov-o"], [267, "cmdoption-pharmpy-model-boxcox-o"], [267, "cmdoption-pharmpy-model-create_joint_distribution-o"], [267, "cmdoption-pharmpy-model-elimination_rate-o"], [267, "cmdoption-pharmpy-model-error-o"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [267, "cmdoption-pharmpy-model-john_draper-o"], [267, "cmdoption-pharmpy-model-peripheral_compartments-o"], [267, "cmdoption-pharmpy-model-power_on_ruv-o"], [267, "cmdoption-pharmpy-model-remove_iiv-o"], [267, "cmdoption-pharmpy-model-remove_iov-o"], [267, "cmdoption-pharmpy-model-tdist-o"], [267, "cmdoption-pharmpy-model-transit_compartments-o"], [267, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[267, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [267, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [267, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "covariate": [[267, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[267, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[267, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[267, "cmdoption-pharmpy-data-append-arg-expression"], [267, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[267, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[267, "cmdoption-pharmpy-data-append-arg-file"], [267, "cmdoption-pharmpy-data-deidentify-arg-file"], [267, "cmdoption-pharmpy-data-filter-arg-file"], [267, "cmdoption-pharmpy-data-print-arg-file"], [267, "cmdoption-pharmpy-data-resample-arg-file"], [267, "cmdoption-pharmpy-data-write-arg-file"], [267, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [267, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [267, "cmdoption-pharmpy-model-add_iiv-arg-file"], [267, "cmdoption-pharmpy-model-add_iov-arg-file"], [267, "cmdoption-pharmpy-model-boxcox-arg-file"], [267, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [267, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [267, "cmdoption-pharmpy-model-error-arg-file"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [267, "cmdoption-pharmpy-model-john_draper-arg-file"], [267, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [267, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [267, "cmdoption-pharmpy-model-print-arg-file"], [267, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [267, "cmdoption-pharmpy-model-remove_iov-arg-file"], [267, "cmdoption-pharmpy-model-sample-arg-file"], [267, "cmdoption-pharmpy-model-tdist-arg-file"], [267, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [267, "cmdoption-pharmpy-model-update_inits-arg-file"], [267, "cmdoption-pharmpy-results-ofv-arg-file"], [267, "cmdoption-pharmpy-results-print-arg-file"], [267, "cmdoption-pharmpy-results-summary-arg-file"], [267, "cmdoption-pharmpy-run-allometry-arg-file"], [267, "cmdoption-pharmpy-run-bootstrap-arg-file"], [267, "cmdoption-pharmpy-run-covsearch-arg-file"], [267, "cmdoption-pharmpy-run-estmethod-arg-file"], [267, "cmdoption-pharmpy-run-execute-arg-file"], [267, "cmdoption-pharmpy-run-iivsearch-arg-file"], [267, "cmdoption-pharmpy-run-iovsearch-arg-file"], [267, "cmdoption-pharmpy-run-modelsearch-arg-file"], [267, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[267, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[267, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[267, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [267, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[267, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[267, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [267, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[267, "cmdoption-pharmpy-h"], [267, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[267, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[267, "cmdoption-pharmpy-data-append-arg-expression"], [267, "cmdoption-pharmpy-data-append-arg-file"], [267, "cmdoption-pharmpy-data-append-f"], [267, "cmdoption-pharmpy-data-append-h"], [267, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[267, "cmdoption-pharmpy-data-deidentify-arg-file"], [267, "cmdoption-pharmpy-data-deidentify-datecols"], [267, "cmdoption-pharmpy-data-deidentify-f"], [267, "cmdoption-pharmpy-data-deidentify-h"], [267, "cmdoption-pharmpy-data-deidentify-idcol"], [267, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[267, "cmdoption-pharmpy-data-filter-arg-expressions"], [267, "cmdoption-pharmpy-data-filter-arg-file"], [267, "cmdoption-pharmpy-data-filter-f"], [267, "cmdoption-pharmpy-data-filter-h"], [267, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[267, "cmdoption-pharmpy-data-print-arg-file"], [267, "cmdoption-pharmpy-data-print-columns"], [267, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-resample command line option": [[267, "cmdoption-pharmpy-data-resample-arg-file"], [267, "cmdoption-pharmpy-data-resample-group"], [267, "cmdoption-pharmpy-data-resample-h"], [267, "cmdoption-pharmpy-data-resample-replace"], [267, "cmdoption-pharmpy-data-resample-resamples"], [267, "cmdoption-pharmpy-data-resample-sample_size"], [267, "cmdoption-pharmpy-data-resample-seed"], [267, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[267, "cmdoption-pharmpy-data-write-arg-file"], [267, "cmdoption-pharmpy-data-write-f"], [267, "cmdoption-pharmpy-data-write-h"], [267, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[267, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[267, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[267, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [267, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [267, "cmdoption-pharmpy-model-absorption_rate-f"], [267, "cmdoption-pharmpy-model-absorption_rate-h"], [267, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[267, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [267, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [267, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [267, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [267, "cmdoption-pharmpy-model-add_cov_effect-f"], [267, "cmdoption-pharmpy-model-add_cov_effect-h"], [267, "cmdoption-pharmpy-model-add_cov_effect-o"], [267, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[267, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [267, "cmdoption-pharmpy-model-add_iiv-arg-file"], [267, "cmdoption-pharmpy-model-add_iiv-arg-param"], [267, "cmdoption-pharmpy-model-add_iiv-eta_name"], [267, "cmdoption-pharmpy-model-add_iiv-f"], [267, "cmdoption-pharmpy-model-add_iiv-h"], [267, "cmdoption-pharmpy-model-add_iiv-o"], [267, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[267, "cmdoption-pharmpy-model-add_iov-arg-file"], [267, "cmdoption-pharmpy-model-add_iov-arg-occ"], [267, "cmdoption-pharmpy-model-add_iov-eta_names"], [267, "cmdoption-pharmpy-model-add_iov-etas"], [267, "cmdoption-pharmpy-model-add_iov-f"], [267, "cmdoption-pharmpy-model-add_iov-h"], [267, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[267, "cmdoption-pharmpy-model-boxcox-arg-file"], [267, "cmdoption-pharmpy-model-boxcox-etas"], [267, "cmdoption-pharmpy-model-boxcox-f"], [267, "cmdoption-pharmpy-model-boxcox-h"], [267, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[267, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [267, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [267, "cmdoption-pharmpy-model-create_joint_distribution-f"], [267, "cmdoption-pharmpy-model-create_joint_distribution-h"], [267, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[267, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [267, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [267, "cmdoption-pharmpy-model-elimination_rate-f"], [267, "cmdoption-pharmpy-model-elimination_rate-h"], [267, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[267, "cmdoption-pharmpy-model-error-arg-error_type"], [267, "cmdoption-pharmpy-model-error-arg-file"], [267, "cmdoption-pharmpy-model-error-f"], [267, "cmdoption-pharmpy-model-error-h"], [267, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[267, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [267, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[267, "cmdoption-pharmpy-model-john_draper-arg-file"], [267, "cmdoption-pharmpy-model-john_draper-etas"], [267, "cmdoption-pharmpy-model-john_draper-f"], [267, "cmdoption-pharmpy-model-john_draper-h"], [267, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[267, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [267, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [267, "cmdoption-pharmpy-model-peripheral_compartments-f"], [267, "cmdoption-pharmpy-model-peripheral_compartments-h"], [267, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[267, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [267, "cmdoption-pharmpy-model-power_on_ruv-eps"], [267, "cmdoption-pharmpy-model-power_on_ruv-f"], [267, "cmdoption-pharmpy-model-power_on_ruv-h"], [267, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[267, "cmdoption-pharmpy-model-print-arg-file"], [267, "cmdoption-pharmpy-model-print-explicit-odes"], [267, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[267, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [267, "cmdoption-pharmpy-model-remove_iiv-f"], [267, "cmdoption-pharmpy-model-remove_iiv-h"], [267, "cmdoption-pharmpy-model-remove_iiv-o"], [267, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[267, "cmdoption-pharmpy-model-remove_iov-arg-file"], [267, "cmdoption-pharmpy-model-remove_iov-f"], [267, "cmdoption-pharmpy-model-remove_iov-h"], [267, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[267, "cmdoption-pharmpy-model-sample-arg-file"], [267, "cmdoption-pharmpy-model-sample-h"], [267, "cmdoption-pharmpy-model-sample-samples"], [267, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[267, "cmdoption-pharmpy-model-tdist-arg-file"], [267, "cmdoption-pharmpy-model-tdist-etas"], [267, "cmdoption-pharmpy-model-tdist-f"], [267, "cmdoption-pharmpy-model-tdist-h"], [267, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[267, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [267, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [267, "cmdoption-pharmpy-model-transit_compartments-f"], [267, "cmdoption-pharmpy-model-transit_compartments-h"], [267, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[267, "cmdoption-pharmpy-model-update_inits-arg-file"], [267, "cmdoption-pharmpy-model-update_inits-f"], [267, "cmdoption-pharmpy-model-update_inits-h"], [267, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[267, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[267, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [267, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[267, "cmdoption-pharmpy-results-cdd-arg-psn"], [267, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[267, "cmdoption-pharmpy-results-frem-arg-psn"], [267, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [267, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [267, "cmdoption-pharmpy-results-frem-h"], [267, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[267, "cmdoption-pharmpy-results-linearize-arg-psn"], [267, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[267, "cmdoption-pharmpy-results-ofv-arg-file"], [267, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[267, "cmdoption-pharmpy-results-print-arg-file"], [267, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[267, "cmdoption-pharmpy-results-qa-arg-psn"], [267, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[267, "cmdoption-pharmpy-results-report-arg-psn"], [267, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[267, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [267, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[267, "cmdoption-pharmpy-results-scm-arg-psn"], [267, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[267, "cmdoption-pharmpy-results-simeval-arg-psn"], [267, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[267, "cmdoption-pharmpy-results-summary-arg-file"], [267, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[267, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[267, "cmdoption-pharmpy-run-allometry-allometric_variable"], [267, "cmdoption-pharmpy-run-allometry-arg-file"], [267, "cmdoption-pharmpy-run-allometry-h"], [267, "cmdoption-pharmpy-run-allometry-initials"], [267, "cmdoption-pharmpy-run-allometry-lower_bounds"], [267, "cmdoption-pharmpy-run-allometry-non_fixed"], [267, "cmdoption-pharmpy-run-allometry-parameters"], [267, "cmdoption-pharmpy-run-allometry-path"], [267, "cmdoption-pharmpy-run-allometry-reference_value"], [267, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[267, "cmdoption-pharmpy-run-amd-allometric_variable"], [267, "cmdoption-pharmpy-run-amd-arg-input_path"], [267, "cmdoption-pharmpy-run-amd-cl_init"], [267, "cmdoption-pharmpy-run-amd-h"], [267, "cmdoption-pharmpy-run-amd-lloq_limit"], [267, "cmdoption-pharmpy-run-amd-lloq_method"], [267, "cmdoption-pharmpy-run-amd-mat_init"], [267, "cmdoption-pharmpy-run-amd-modeltype"], [267, "cmdoption-pharmpy-run-amd-occasion"], [267, "cmdoption-pharmpy-run-amd-order"], [267, "cmdoption-pharmpy-run-amd-path"], [267, "cmdoption-pharmpy-run-amd-resume"], [267, "cmdoption-pharmpy-run-amd-search_space"], [267, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[267, "cmdoption-pharmpy-run-bootstrap-arg-file"], [267, "cmdoption-pharmpy-run-bootstrap-h"], [267, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[267, "cmdoption-pharmpy-run-covsearch-algorithm"], [267, "cmdoption-pharmpy-run-covsearch-arg-file"], [267, "cmdoption-pharmpy-run-covsearch-effects"], [267, "cmdoption-pharmpy-run-covsearch-h"], [267, "cmdoption-pharmpy-run-covsearch-max_steps"], [267, "cmdoption-pharmpy-run-covsearch-p_backward"], [267, "cmdoption-pharmpy-run-covsearch-p_forward"], [267, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[267, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [267, "cmdoption-pharmpy-run-estmethod-arg-file"], [267, "cmdoption-pharmpy-run-estmethod-h"], [267, "cmdoption-pharmpy-run-estmethod-methods"], [267, "cmdoption-pharmpy-run-estmethod-path"], [267, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[267, "cmdoption-pharmpy-run-execute-arg-file"], [267, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[267, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [267, "cmdoption-pharmpy-run-iivsearch-arg-file"], [267, "cmdoption-pharmpy-run-iivsearch-cutoff"], [267, "cmdoption-pharmpy-run-iivsearch-h"], [267, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [267, "cmdoption-pharmpy-run-iivsearch-path"], [267, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[267, "cmdoption-pharmpy-run-iovsearch-arg-file"], [267, "cmdoption-pharmpy-run-iovsearch-column"], [267, "cmdoption-pharmpy-run-iovsearch-cutoff"], [267, "cmdoption-pharmpy-run-iovsearch-distribution"], [267, "cmdoption-pharmpy-run-iovsearch-h"], [267, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [267, "cmdoption-pharmpy-run-iovsearch-path"], [267, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[267, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [267, "cmdoption-pharmpy-run-modelsearch-arg-file"], [267, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [267, "cmdoption-pharmpy-run-modelsearch-cutoff"], [267, "cmdoption-pharmpy-run-modelsearch-h"], [267, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [267, "cmdoption-pharmpy-run-modelsearch-path"], [267, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[267, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [267, "cmdoption-pharmpy-run-ruvsearch-groups"], [267, "cmdoption-pharmpy-run-ruvsearch-h"], [267, "cmdoption-pharmpy-run-ruvsearch-p_value"], [267, "cmdoption-pharmpy-run-ruvsearch-path"], [267, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[267, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [267, "cmdoption-pharmpy-results-cdd-arg-psn"], [267, "cmdoption-pharmpy-results-frem-arg-psn"], [267, "cmdoption-pharmpy-results-linearize-arg-psn"], [267, "cmdoption-pharmpy-results-qa-arg-psn"], [267, "cmdoption-pharmpy-results-report-arg-psn"], [267, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [267, "cmdoption-pharmpy-results-scm-arg-psn"], [267, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[267, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [267, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})