Search.setIndex({"docnames": ["NONMEM", "allometry", "amd", "api", "api/pharmpy.model.Assignment", "api/pharmpy.model.Bolus", "api/pharmpy.model.ColumnInfo", "api/pharmpy.model.Compartment", "api/pharmpy.model.CompartmentalSystem", "api/pharmpy.model.CompartmentalSystemBuilder", "api/pharmpy.model.DataInfo", "api/pharmpy.model.DatasetError", "api/pharmpy.model.DatasetWarning", "api/pharmpy.model.Distribution", "api/pharmpy.model.EstimationStep", "api/pharmpy.model.EstimationSteps", "api/pharmpy.model.Infusion", "api/pharmpy.model.JointNormalDistribution", "api/pharmpy.model.Model", "api/pharmpy.model.ModelError", "api/pharmpy.model.ModelSyntaxError", "api/pharmpy.model.ModelfitResultsError", "api/pharmpy.model.NormalDistribution", "api/pharmpy.model.Parameter", "api/pharmpy.model.Parameters", "api/pharmpy.model.RandomVariables", "api/pharmpy.model.SimulationStep", "api/pharmpy.model.Statement", "api/pharmpy.model.Statements", "api/pharmpy.model.VariabilityHierarchy", "api/pharmpy.model.VariabilityLevel", "api/pharmpy.model.to_compartmental_system", "api/pharmpy.modeling.add_admid", "api/pharmpy.modeling.add_allometry", "api/pharmpy.modeling.add_bioavailability", "api/pharmpy.modeling.add_cmt", "api/pharmpy.modeling.add_covariate_effect", "api/pharmpy.modeling.add_effect_compartment", "api/pharmpy.modeling.add_estimation_step", "api/pharmpy.modeling.add_iiv", "api/pharmpy.modeling.add_indirect_effect", "api/pharmpy.modeling.add_individual_parameter", "api/pharmpy.modeling.add_iov", "api/pharmpy.modeling.add_lag_time", "api/pharmpy.modeling.add_metabolite", "api/pharmpy.modeling.add_parameter_uncertainty_step", "api/pharmpy.modeling.add_pd_iiv", "api/pharmpy.modeling.add_peripheral_compartment", "api/pharmpy.modeling.add_pk_iiv", "api/pharmpy.modeling.add_population_parameter", "api/pharmpy.modeling.add_time_after_dose", "api/pharmpy.modeling.append_estimation_step_options", "api/pharmpy.modeling.bump_model_number", "api/pharmpy.modeling.calculate_aic", "api/pharmpy.modeling.calculate_bic", "api/pharmpy.modeling.calculate_corr_from_cov", "api/pharmpy.modeling.calculate_corr_from_prec", "api/pharmpy.modeling.calculate_cov_from_corrse", "api/pharmpy.modeling.calculate_cov_from_prec", "api/pharmpy.modeling.calculate_epsilon_gradient_expression", "api/pharmpy.modeling.calculate_eta_gradient_expression", "api/pharmpy.modeling.calculate_eta_shrinkage", "api/pharmpy.modeling.calculate_individual_parameter_statistics", "api/pharmpy.modeling.calculate_individual_shrinkage", "api/pharmpy.modeling.calculate_parameters_from_ucp", "api/pharmpy.modeling.calculate_pk_parameters_statistics", "api/pharmpy.modeling.calculate_prec_from_corrse", "api/pharmpy.modeling.calculate_prec_from_cov", "api/pharmpy.modeling.calculate_se_from_cov", "api/pharmpy.modeling.calculate_se_from_prec", "api/pharmpy.modeling.calculate_ucp_scale", "api/pharmpy.modeling.check_dataset", "api/pharmpy.modeling.check_high_correlations", "api/pharmpy.modeling.check_parameters_near_bounds", "api/pharmpy.modeling.cleanup_model", "api/pharmpy.modeling.convert_model", "api/pharmpy.modeling.create_basic_pk_model", "api/pharmpy.modeling.create_config_template", "api/pharmpy.modeling.create_joint_distribution", "api/pharmpy.modeling.create_rng", "api/pharmpy.modeling.create_symbol", "api/pharmpy.modeling.deidentify_data", "api/pharmpy.modeling.display_odes", "api/pharmpy.modeling.drop_columns", "api/pharmpy.modeling.drop_dropped_columns", "api/pharmpy.modeling.evaluate_epsilon_gradient", "api/pharmpy.modeling.evaluate_eta_gradient", "api/pharmpy.modeling.evaluate_expression", "api/pharmpy.modeling.evaluate_individual_prediction", "api/pharmpy.modeling.evaluate_population_prediction", "api/pharmpy.modeling.evaluate_weighted_residuals", "api/pharmpy.modeling.expand_additional_doses", "api/pharmpy.modeling.filter_dataset", "api/pharmpy.modeling.find_clearance_parameters", "api/pharmpy.modeling.find_volume_parameters", "api/pharmpy.modeling.fix_or_unfix_parameters", "api/pharmpy.modeling.fix_parameters", "api/pharmpy.modeling.fix_parameters_to", "api/pharmpy.modeling.get_admid", "api/pharmpy.modeling.get_baselines", "api/pharmpy.modeling.get_bioavailability", "api/pharmpy.modeling.get_cmt", "api/pharmpy.modeling.get_concentration_parameters_from_data", "api/pharmpy.modeling.get_config_path", "api/pharmpy.modeling.get_covariate_baselines", "api/pharmpy.modeling.get_covariates", "api/pharmpy.modeling.get_doseid", "api/pharmpy.modeling.get_doses", "api/pharmpy.modeling.get_dv_symbol", "api/pharmpy.modeling.get_evid", "api/pharmpy.modeling.get_ids", "api/pharmpy.modeling.get_individual_parameters", "api/pharmpy.modeling.get_individual_prediction_expression", "api/pharmpy.modeling.get_initial_conditions", "api/pharmpy.modeling.get_lag_times", "api/pharmpy.modeling.get_mdv", "api/pharmpy.modeling.get_model_code", "api/pharmpy.modeling.get_model_covariates", "api/pharmpy.modeling.get_number_of_individuals", "api/pharmpy.modeling.get_number_of_observations", "api/pharmpy.modeling.get_number_of_observations_per_individual", "api/pharmpy.modeling.get_number_of_peripheral_compartments", "api/pharmpy.modeling.get_number_of_transit_compartments", "api/pharmpy.modeling.get_observation_expression", "api/pharmpy.modeling.get_observations", "api/pharmpy.modeling.get_omegas", "api/pharmpy.modeling.get_parameter_rv", "api/pharmpy.modeling.get_pd_parameters", "api/pharmpy.modeling.get_pk_parameters", "api/pharmpy.modeling.get_population_prediction_expression", "api/pharmpy.modeling.get_rv_parameters", "api/pharmpy.modeling.get_sigmas", "api/pharmpy.modeling.get_thetas", "api/pharmpy.modeling.get_unit_of", "api/pharmpy.modeling.get_zero_order_inputs", "api/pharmpy.modeling.greekify_model", "api/pharmpy.modeling.has_additive_error_model", "api/pharmpy.modeling.has_combined_error_model", "api/pharmpy.modeling.has_covariate_effect", "api/pharmpy.modeling.has_first_order_absorption", "api/pharmpy.modeling.has_first_order_elimination", "api/pharmpy.modeling.has_instantaneous_absorption", "api/pharmpy.modeling.has_linear_odes", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues", "api/pharmpy.modeling.has_michaelis_menten_elimination", "api/pharmpy.modeling.has_mixed_mm_fo_elimination", "api/pharmpy.modeling.has_odes", "api/pharmpy.modeling.has_presystemic_metabolite", "api/pharmpy.modeling.has_proportional_error_model", "api/pharmpy.modeling.has_random_effect", "api/pharmpy.modeling.has_seq_zo_fo_absorption", "api/pharmpy.modeling.has_weighted_error_model", "api/pharmpy.modeling.has_zero_order_absorption", "api/pharmpy.modeling.has_zero_order_elimination", "api/pharmpy.modeling.is_linearized", "api/pharmpy.modeling.is_real", "api/pharmpy.modeling.list_time_varying_covariates", "api/pharmpy.modeling.load_dataset", "api/pharmpy.modeling.load_example_model", "api/pharmpy.modeling.make_declarative", "api/pharmpy.modeling.mu_reference_model", "api/pharmpy.modeling.omit_data", "api/pharmpy.modeling.plot_cwres_vs_idv", "api/pharmpy.modeling.plot_dv_vs_ipred", "api/pharmpy.modeling.plot_individual_predictions", "api/pharmpy.modeling.plot_iofv_vs_iofv", "api/pharmpy.modeling.plot_transformed_eta_distributions", "api/pharmpy.modeling.print_model_code", "api/pharmpy.modeling.print_model_symbols", "api/pharmpy.modeling.read_dataset_from_datainfo", "api/pharmpy.modeling.read_model", "api/pharmpy.modeling.read_model_from_string", "api/pharmpy.modeling.remove_bioavailability", "api/pharmpy.modeling.remove_covariate_effect", "api/pharmpy.modeling.remove_error_model", "api/pharmpy.modeling.remove_estimation_step", "api/pharmpy.modeling.remove_iiv", "api/pharmpy.modeling.remove_iov", "api/pharmpy.modeling.remove_lag_time", "api/pharmpy.modeling.remove_loq_data", "api/pharmpy.modeling.remove_parameter_uncertainty_step", "api/pharmpy.modeling.remove_peripheral_compartment", "api/pharmpy.modeling.remove_unused_parameters_and_rvs", "api/pharmpy.modeling.rename_symbols", "api/pharmpy.modeling.replace_non_random_rvs", "api/pharmpy.modeling.resample_data", "api/pharmpy.modeling.sample_individual_estimates", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix", "api/pharmpy.modeling.sample_parameters_uniformly", "api/pharmpy.modeling.set_additive_error_model", "api/pharmpy.modeling.set_baseline_effect", "api/pharmpy.modeling.set_combined_error_model", "api/pharmpy.modeling.set_covariates", "api/pharmpy.modeling.set_direct_effect", "api/pharmpy.modeling.set_dtbs_error_model", "api/pharmpy.modeling.set_dvid", "api/pharmpy.modeling.set_estimation_step", "api/pharmpy.modeling.set_evaluation_step", "api/pharmpy.modeling.set_first_order_absorption", "api/pharmpy.modeling.set_first_order_elimination", "api/pharmpy.modeling.set_iiv_on_ruv", "api/pharmpy.modeling.set_initial_condition", "api/pharmpy.modeling.set_initial_estimates", "api/pharmpy.modeling.set_instantaneous_absorption", "api/pharmpy.modeling.set_lloq_data", "api/pharmpy.modeling.set_lower_bounds", "api/pharmpy.modeling.set_michaelis_menten_elimination", "api/pharmpy.modeling.set_mixed_mm_fo_elimination", "api/pharmpy.modeling.set_name", "api/pharmpy.modeling.set_ode_solver", "api/pharmpy.modeling.set_peripheral_compartments", "api/pharmpy.modeling.set_power_on_ruv", "api/pharmpy.modeling.set_proportional_error_model", "api/pharmpy.modeling.set_reference_values", "api/pharmpy.modeling.set_seq_zo_fo_absorption", "api/pharmpy.modeling.set_simulation", "api/pharmpy.modeling.set_time_varying_error_model", "api/pharmpy.modeling.set_tmdd", "api/pharmpy.modeling.set_transit_compartments", "api/pharmpy.modeling.set_upper_bounds", "api/pharmpy.modeling.set_weighted_error_model", "api/pharmpy.modeling.set_zero_order_absorption", "api/pharmpy.modeling.set_zero_order_elimination", "api/pharmpy.modeling.set_zero_order_input", "api/pharmpy.modeling.simplify_expression", "api/pharmpy.modeling.solve_ode_system", "api/pharmpy.modeling.split_joint_distribution", "api/pharmpy.modeling.transform_blq", "api/pharmpy.modeling.transform_etas_boxcox", "api/pharmpy.modeling.transform_etas_john_draper", "api/pharmpy.modeling.transform_etas_tdist", "api/pharmpy.modeling.translate_nmtran_time", "api/pharmpy.modeling.unconstrain_parameters", "api/pharmpy.modeling.undrop_columns", "api/pharmpy.modeling.unfix_parameters", "api/pharmpy.modeling.unfix_parameters_to", "api/pharmpy.modeling.unload_dataset", "api/pharmpy.modeling.update_initial_individual_estimates", "api/pharmpy.modeling.update_inits", "api/pharmpy.modeling.use_thetas_for_error_stdev", "api/pharmpy.modeling.write_csv", "api/pharmpy.modeling.write_model", "api/pharmpy.tools.create_report", "api/pharmpy.tools.create_results", "api/pharmpy.tools.fit", "api/pharmpy.tools.get_model_features", "api/pharmpy.tools.is_strictness_fulfilled", "api/pharmpy.tools.load_example_modelfit_results", "api/pharmpy.tools.predict_influential_individuals", "api/pharmpy.tools.predict_influential_outliers", "api/pharmpy.tools.predict_outliers", "api/pharmpy.tools.print_fit_summary", "api/pharmpy.tools.rank_models", "api/pharmpy.tools.read_modelfit_results", "api/pharmpy.tools.read_results", "api/pharmpy.tools.resume_tool", "api/pharmpy.tools.retrieve_final_model", "api/pharmpy.tools.retrieve_models", "api/pharmpy.tools.run_allometry", "api/pharmpy.tools.run_amd", "api/pharmpy.tools.run_bootstrap", "api/pharmpy.tools.run_covsearch", "api/pharmpy.tools.run_estmethod", "api/pharmpy.tools.run_iivsearch", "api/pharmpy.tools.run_iovsearch", "api/pharmpy.tools.run_modelfit", "api/pharmpy.tools.run_modelsearch", "api/pharmpy.tools.run_ruvsearch", "api/pharmpy.tools.run_structsearch", "api/pharmpy.tools.run_tool", "api/pharmpy.tools.summarize_errors", "api/pharmpy.tools.summarize_individuals", "api/pharmpy.tools.summarize_individuals_count_table", "api/pharmpy.tools.summarize_modelfit_results", "api/pharmpy.tools.write_results", "api/pharmpy.workflows.LocalDirectoryDatabase", "api/pharmpy.workflows.LocalDirectoryToolDatabase", "api/pharmpy.workflows.LocalModelDirectoryDatabase", "api/pharmpy.workflows.Log", "api/pharmpy.workflows.ModelDatabase", "api/pharmpy.workflows.ModelEntry", "api/pharmpy.workflows.ModelfitResults", "api/pharmpy.workflows.NullModelDatabase", "api/pharmpy.workflows.NullToolDatabase", "api/pharmpy.workflows.Results", "api/pharmpy.workflows.Task", "api/pharmpy.workflows.ToolDatabase", "api/pharmpy.workflows.Workflow", "api/pharmpy.workflows.WorkflowBuilder", "api/pharmpy.workflows.call_workflow", "api/pharmpy.workflows.default_model_database", "api/pharmpy.workflows.default_tool_database", "api/pharmpy.workflows.execute_workflow", "api/pharmpy.workflows.split_common_options", "api_model", "api_modeling", "api_tools", "api_workflows", "bootstrap", "cdd", "changelog", "citation", "cli", "code_of_conduct", "configuration", "contribute", "contributors", "covsearch", "crossval", "data", "design", "developers", "estmethod", "frem", "getting_started", "iivsearch", "index", "iovsearch", "license", "linearize", "model", "modelfit", "modeling", "modelsearch", "nonmem_plugin", "plots", "plugins", "projects", "psn_resmod", "psn_tools", "qa", "ruvsearch", "scm", "simeval", "structsearch", "tools", "user_guide", "using_r"], "filenames": ["NONMEM.rst", "allometry.rst", "amd.rst", "api.rst", "api/pharmpy.model.Assignment.rst", "api/pharmpy.model.Bolus.rst", "api/pharmpy.model.ColumnInfo.rst", "api/pharmpy.model.Compartment.rst", "api/pharmpy.model.CompartmentalSystem.rst", "api/pharmpy.model.CompartmentalSystemBuilder.rst", "api/pharmpy.model.DataInfo.rst", "api/pharmpy.model.DatasetError.rst", "api/pharmpy.model.DatasetWarning.rst", "api/pharmpy.model.Distribution.rst", "api/pharmpy.model.EstimationStep.rst", "api/pharmpy.model.EstimationSteps.rst", "api/pharmpy.model.Infusion.rst", "api/pharmpy.model.JointNormalDistribution.rst", "api/pharmpy.model.Model.rst", "api/pharmpy.model.ModelError.rst", "api/pharmpy.model.ModelSyntaxError.rst", "api/pharmpy.model.ModelfitResultsError.rst", "api/pharmpy.model.NormalDistribution.rst", "api/pharmpy.model.Parameter.rst", "api/pharmpy.model.Parameters.rst", "api/pharmpy.model.RandomVariables.rst", "api/pharmpy.model.SimulationStep.rst", "api/pharmpy.model.Statement.rst", "api/pharmpy.model.Statements.rst", "api/pharmpy.model.VariabilityHierarchy.rst", "api/pharmpy.model.VariabilityLevel.rst", "api/pharmpy.model.to_compartmental_system.rst", "api/pharmpy.modeling.add_admid.rst", "api/pharmpy.modeling.add_allometry.rst", "api/pharmpy.modeling.add_bioavailability.rst", "api/pharmpy.modeling.add_cmt.rst", "api/pharmpy.modeling.add_covariate_effect.rst", "api/pharmpy.modeling.add_effect_compartment.rst", "api/pharmpy.modeling.add_estimation_step.rst", "api/pharmpy.modeling.add_iiv.rst", "api/pharmpy.modeling.add_indirect_effect.rst", "api/pharmpy.modeling.add_individual_parameter.rst", "api/pharmpy.modeling.add_iov.rst", "api/pharmpy.modeling.add_lag_time.rst", "api/pharmpy.modeling.add_metabolite.rst", "api/pharmpy.modeling.add_parameter_uncertainty_step.rst", "api/pharmpy.modeling.add_pd_iiv.rst", "api/pharmpy.modeling.add_peripheral_compartment.rst", "api/pharmpy.modeling.add_pk_iiv.rst", "api/pharmpy.modeling.add_population_parameter.rst", "api/pharmpy.modeling.add_time_after_dose.rst", "api/pharmpy.modeling.append_estimation_step_options.rst", "api/pharmpy.modeling.bump_model_number.rst", "api/pharmpy.modeling.calculate_aic.rst", "api/pharmpy.modeling.calculate_bic.rst", "api/pharmpy.modeling.calculate_corr_from_cov.rst", "api/pharmpy.modeling.calculate_corr_from_prec.rst", "api/pharmpy.modeling.calculate_cov_from_corrse.rst", "api/pharmpy.modeling.calculate_cov_from_prec.rst", "api/pharmpy.modeling.calculate_epsilon_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_gradient_expression.rst", "api/pharmpy.modeling.calculate_eta_shrinkage.rst", "api/pharmpy.modeling.calculate_individual_parameter_statistics.rst", "api/pharmpy.modeling.calculate_individual_shrinkage.rst", "api/pharmpy.modeling.calculate_parameters_from_ucp.rst", "api/pharmpy.modeling.calculate_pk_parameters_statistics.rst", "api/pharmpy.modeling.calculate_prec_from_corrse.rst", "api/pharmpy.modeling.calculate_prec_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_cov.rst", "api/pharmpy.modeling.calculate_se_from_prec.rst", "api/pharmpy.modeling.calculate_ucp_scale.rst", "api/pharmpy.modeling.check_dataset.rst", "api/pharmpy.modeling.check_high_correlations.rst", "api/pharmpy.modeling.check_parameters_near_bounds.rst", "api/pharmpy.modeling.cleanup_model.rst", "api/pharmpy.modeling.convert_model.rst", "api/pharmpy.modeling.create_basic_pk_model.rst", "api/pharmpy.modeling.create_config_template.rst", "api/pharmpy.modeling.create_joint_distribution.rst", "api/pharmpy.modeling.create_rng.rst", "api/pharmpy.modeling.create_symbol.rst", "api/pharmpy.modeling.deidentify_data.rst", "api/pharmpy.modeling.display_odes.rst", "api/pharmpy.modeling.drop_columns.rst", "api/pharmpy.modeling.drop_dropped_columns.rst", "api/pharmpy.modeling.evaluate_epsilon_gradient.rst", "api/pharmpy.modeling.evaluate_eta_gradient.rst", "api/pharmpy.modeling.evaluate_expression.rst", "api/pharmpy.modeling.evaluate_individual_prediction.rst", "api/pharmpy.modeling.evaluate_population_prediction.rst", "api/pharmpy.modeling.evaluate_weighted_residuals.rst", "api/pharmpy.modeling.expand_additional_doses.rst", "api/pharmpy.modeling.filter_dataset.rst", "api/pharmpy.modeling.find_clearance_parameters.rst", "api/pharmpy.modeling.find_volume_parameters.rst", "api/pharmpy.modeling.fix_or_unfix_parameters.rst", "api/pharmpy.modeling.fix_parameters.rst", "api/pharmpy.modeling.fix_parameters_to.rst", "api/pharmpy.modeling.get_admid.rst", "api/pharmpy.modeling.get_baselines.rst", "api/pharmpy.modeling.get_bioavailability.rst", "api/pharmpy.modeling.get_cmt.rst", "api/pharmpy.modeling.get_concentration_parameters_from_data.rst", "api/pharmpy.modeling.get_config_path.rst", "api/pharmpy.modeling.get_covariate_baselines.rst", "api/pharmpy.modeling.get_covariates.rst", "api/pharmpy.modeling.get_doseid.rst", "api/pharmpy.modeling.get_doses.rst", "api/pharmpy.modeling.get_dv_symbol.rst", "api/pharmpy.modeling.get_evid.rst", "api/pharmpy.modeling.get_ids.rst", "api/pharmpy.modeling.get_individual_parameters.rst", "api/pharmpy.modeling.get_individual_prediction_expression.rst", "api/pharmpy.modeling.get_initial_conditions.rst", "api/pharmpy.modeling.get_lag_times.rst", "api/pharmpy.modeling.get_mdv.rst", "api/pharmpy.modeling.get_model_code.rst", "api/pharmpy.modeling.get_model_covariates.rst", "api/pharmpy.modeling.get_number_of_individuals.rst", "api/pharmpy.modeling.get_number_of_observations.rst", "api/pharmpy.modeling.get_number_of_observations_per_individual.rst", "api/pharmpy.modeling.get_number_of_peripheral_compartments.rst", "api/pharmpy.modeling.get_number_of_transit_compartments.rst", "api/pharmpy.modeling.get_observation_expression.rst", "api/pharmpy.modeling.get_observations.rst", "api/pharmpy.modeling.get_omegas.rst", "api/pharmpy.modeling.get_parameter_rv.rst", "api/pharmpy.modeling.get_pd_parameters.rst", "api/pharmpy.modeling.get_pk_parameters.rst", "api/pharmpy.modeling.get_population_prediction_expression.rst", "api/pharmpy.modeling.get_rv_parameters.rst", "api/pharmpy.modeling.get_sigmas.rst", "api/pharmpy.modeling.get_thetas.rst", "api/pharmpy.modeling.get_unit_of.rst", "api/pharmpy.modeling.get_zero_order_inputs.rst", "api/pharmpy.modeling.greekify_model.rst", "api/pharmpy.modeling.has_additive_error_model.rst", "api/pharmpy.modeling.has_combined_error_model.rst", "api/pharmpy.modeling.has_covariate_effect.rst", "api/pharmpy.modeling.has_first_order_absorption.rst", "api/pharmpy.modeling.has_first_order_elimination.rst", "api/pharmpy.modeling.has_instantaneous_absorption.rst", "api/pharmpy.modeling.has_linear_odes.rst", "api/pharmpy.modeling.has_linear_odes_with_real_eigenvalues.rst", "api/pharmpy.modeling.has_michaelis_menten_elimination.rst", "api/pharmpy.modeling.has_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.has_odes.rst", "api/pharmpy.modeling.has_presystemic_metabolite.rst", "api/pharmpy.modeling.has_proportional_error_model.rst", "api/pharmpy.modeling.has_random_effect.rst", "api/pharmpy.modeling.has_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.has_weighted_error_model.rst", "api/pharmpy.modeling.has_zero_order_absorption.rst", "api/pharmpy.modeling.has_zero_order_elimination.rst", "api/pharmpy.modeling.is_linearized.rst", "api/pharmpy.modeling.is_real.rst", "api/pharmpy.modeling.list_time_varying_covariates.rst", "api/pharmpy.modeling.load_dataset.rst", "api/pharmpy.modeling.load_example_model.rst", "api/pharmpy.modeling.make_declarative.rst", "api/pharmpy.modeling.mu_reference_model.rst", "api/pharmpy.modeling.omit_data.rst", "api/pharmpy.modeling.plot_cwres_vs_idv.rst", "api/pharmpy.modeling.plot_dv_vs_ipred.rst", "api/pharmpy.modeling.plot_individual_predictions.rst", "api/pharmpy.modeling.plot_iofv_vs_iofv.rst", "api/pharmpy.modeling.plot_transformed_eta_distributions.rst", "api/pharmpy.modeling.print_model_code.rst", "api/pharmpy.modeling.print_model_symbols.rst", "api/pharmpy.modeling.read_dataset_from_datainfo.rst", "api/pharmpy.modeling.read_model.rst", "api/pharmpy.modeling.read_model_from_string.rst", "api/pharmpy.modeling.remove_bioavailability.rst", "api/pharmpy.modeling.remove_covariate_effect.rst", "api/pharmpy.modeling.remove_error_model.rst", "api/pharmpy.modeling.remove_estimation_step.rst", "api/pharmpy.modeling.remove_iiv.rst", "api/pharmpy.modeling.remove_iov.rst", "api/pharmpy.modeling.remove_lag_time.rst", "api/pharmpy.modeling.remove_loq_data.rst", "api/pharmpy.modeling.remove_parameter_uncertainty_step.rst", "api/pharmpy.modeling.remove_peripheral_compartment.rst", "api/pharmpy.modeling.remove_unused_parameters_and_rvs.rst", "api/pharmpy.modeling.rename_symbols.rst", "api/pharmpy.modeling.replace_non_random_rvs.rst", "api/pharmpy.modeling.resample_data.rst", "api/pharmpy.modeling.sample_individual_estimates.rst", "api/pharmpy.modeling.sample_parameters_from_covariance_matrix.rst", "api/pharmpy.modeling.sample_parameters_uniformly.rst", "api/pharmpy.modeling.set_additive_error_model.rst", "api/pharmpy.modeling.set_baseline_effect.rst", "api/pharmpy.modeling.set_combined_error_model.rst", "api/pharmpy.modeling.set_covariates.rst", "api/pharmpy.modeling.set_direct_effect.rst", "api/pharmpy.modeling.set_dtbs_error_model.rst", "api/pharmpy.modeling.set_dvid.rst", "api/pharmpy.modeling.set_estimation_step.rst", "api/pharmpy.modeling.set_evaluation_step.rst", "api/pharmpy.modeling.set_first_order_absorption.rst", "api/pharmpy.modeling.set_first_order_elimination.rst", "api/pharmpy.modeling.set_iiv_on_ruv.rst", "api/pharmpy.modeling.set_initial_condition.rst", "api/pharmpy.modeling.set_initial_estimates.rst", "api/pharmpy.modeling.set_instantaneous_absorption.rst", "api/pharmpy.modeling.set_lloq_data.rst", "api/pharmpy.modeling.set_lower_bounds.rst", "api/pharmpy.modeling.set_michaelis_menten_elimination.rst", "api/pharmpy.modeling.set_mixed_mm_fo_elimination.rst", "api/pharmpy.modeling.set_name.rst", "api/pharmpy.modeling.set_ode_solver.rst", "api/pharmpy.modeling.set_peripheral_compartments.rst", "api/pharmpy.modeling.set_power_on_ruv.rst", "api/pharmpy.modeling.set_proportional_error_model.rst", "api/pharmpy.modeling.set_reference_values.rst", "api/pharmpy.modeling.set_seq_zo_fo_absorption.rst", "api/pharmpy.modeling.set_simulation.rst", "api/pharmpy.modeling.set_time_varying_error_model.rst", "api/pharmpy.modeling.set_tmdd.rst", "api/pharmpy.modeling.set_transit_compartments.rst", "api/pharmpy.modeling.set_upper_bounds.rst", "api/pharmpy.modeling.set_weighted_error_model.rst", "api/pharmpy.modeling.set_zero_order_absorption.rst", "api/pharmpy.modeling.set_zero_order_elimination.rst", "api/pharmpy.modeling.set_zero_order_input.rst", "api/pharmpy.modeling.simplify_expression.rst", "api/pharmpy.modeling.solve_ode_system.rst", "api/pharmpy.modeling.split_joint_distribution.rst", "api/pharmpy.modeling.transform_blq.rst", "api/pharmpy.modeling.transform_etas_boxcox.rst", "api/pharmpy.modeling.transform_etas_john_draper.rst", "api/pharmpy.modeling.transform_etas_tdist.rst", "api/pharmpy.modeling.translate_nmtran_time.rst", "api/pharmpy.modeling.unconstrain_parameters.rst", "api/pharmpy.modeling.undrop_columns.rst", "api/pharmpy.modeling.unfix_parameters.rst", "api/pharmpy.modeling.unfix_parameters_to.rst", "api/pharmpy.modeling.unload_dataset.rst", "api/pharmpy.modeling.update_initial_individual_estimates.rst", "api/pharmpy.modeling.update_inits.rst", "api/pharmpy.modeling.use_thetas_for_error_stdev.rst", "api/pharmpy.modeling.write_csv.rst", "api/pharmpy.modeling.write_model.rst", "api/pharmpy.tools.create_report.rst", "api/pharmpy.tools.create_results.rst", "api/pharmpy.tools.fit.rst", "api/pharmpy.tools.get_model_features.rst", "api/pharmpy.tools.is_strictness_fulfilled.rst", "api/pharmpy.tools.load_example_modelfit_results.rst", "api/pharmpy.tools.predict_influential_individuals.rst", "api/pharmpy.tools.predict_influential_outliers.rst", "api/pharmpy.tools.predict_outliers.rst", "api/pharmpy.tools.print_fit_summary.rst", "api/pharmpy.tools.rank_models.rst", "api/pharmpy.tools.read_modelfit_results.rst", "api/pharmpy.tools.read_results.rst", "api/pharmpy.tools.resume_tool.rst", "api/pharmpy.tools.retrieve_final_model.rst", "api/pharmpy.tools.retrieve_models.rst", "api/pharmpy.tools.run_allometry.rst", "api/pharmpy.tools.run_amd.rst", "api/pharmpy.tools.run_bootstrap.rst", "api/pharmpy.tools.run_covsearch.rst", "api/pharmpy.tools.run_estmethod.rst", "api/pharmpy.tools.run_iivsearch.rst", "api/pharmpy.tools.run_iovsearch.rst", "api/pharmpy.tools.run_modelfit.rst", "api/pharmpy.tools.run_modelsearch.rst", "api/pharmpy.tools.run_ruvsearch.rst", "api/pharmpy.tools.run_structsearch.rst", "api/pharmpy.tools.run_tool.rst", "api/pharmpy.tools.summarize_errors.rst", "api/pharmpy.tools.summarize_individuals.rst", "api/pharmpy.tools.summarize_individuals_count_table.rst", "api/pharmpy.tools.summarize_modelfit_results.rst", "api/pharmpy.tools.write_results.rst", "api/pharmpy.workflows.LocalDirectoryDatabase.rst", "api/pharmpy.workflows.LocalDirectoryToolDatabase.rst", "api/pharmpy.workflows.LocalModelDirectoryDatabase.rst", "api/pharmpy.workflows.Log.rst", "api/pharmpy.workflows.ModelDatabase.rst", "api/pharmpy.workflows.ModelEntry.rst", "api/pharmpy.workflows.ModelfitResults.rst", "api/pharmpy.workflows.NullModelDatabase.rst", "api/pharmpy.workflows.NullToolDatabase.rst", "api/pharmpy.workflows.Results.rst", "api/pharmpy.workflows.Task.rst", "api/pharmpy.workflows.ToolDatabase.rst", "api/pharmpy.workflows.Workflow.rst", "api/pharmpy.workflows.WorkflowBuilder.rst", "api/pharmpy.workflows.call_workflow.rst", "api/pharmpy.workflows.default_model_database.rst", "api/pharmpy.workflows.default_tool_database.rst", "api/pharmpy.workflows.execute_workflow.rst", "api/pharmpy.workflows.split_common_options.rst", "api_model.rst", "api_modeling.rst", "api_tools.rst", "api_workflows.rst", "bootstrap.rst", "cdd.rst", "changelog.rst", "citation.rst", "cli.rst", "code_of_conduct.rst", "configuration.rst", "contribute.rst", "contributors.rst", "covsearch.rst", "crossval.rst", "data.rst", "design.rst", "developers.rst", "estmethod.rst", "frem.rst", "getting_started.rst", "iivsearch.rst", "index.rst", "iovsearch.rst", "license.rst", "linearize.rst", "model.rst", "modelfit.rst", "modeling.rst", "modelsearch.rst", "nonmem_plugin.rst", "plots.rst", "plugins.rst", "projects.rst", "psn_resmod.rst", "psn_tools.rst", "qa.rst", "ruvsearch.rst", "scm.rst", "simeval.rst", "structsearch.rst", "tools.rst", "user_guide.rst", "using_r.rst"], "titles": ["NONMEM", "allometry", "Automatic Model Development (AMD)", "API Reference", "Assignment", "Bolus", "ColumnInfo", "Compartment", "CompartmentalSystem", "CompartmentalSystemBuilder", "DataInfo", "DatasetError", "DatasetWarning", "Distribution", "EstimationStep", "EstimationSteps", "Infusion", "JointNormalDistribution", "Model", "ModelError", "ModelSyntaxError", "ModelfitResultsError", "NormalDistribution", "Parameter", "Parameters", "RandomVariables", "SimulationStep", "Statement", "Statements", "VariabilityHierarchy", "VariabilityLevel", "to_compartmental_system", "add_admid", "add_allometry", "add_bioavailability", "add_cmt", "add_covariate_effect", "add_effect_compartment", "add_estimation_step", "add_iiv", "add_indirect_effect", "add_individual_parameter", "add_iov", "add_lag_time", "add_metabolite", "add_parameter_uncertainty_step", "add_pd_iiv", "add_peripheral_compartment", "add_pk_iiv", "add_population_parameter", "add_time_after_dose", "append_estimation_step_options", "bump_model_number", "calculate_aic", "calculate_bic", "calculate_corr_from_cov", "calculate_corr_from_prec", "calculate_cov_from_corrse", "calculate_cov_from_prec", "calculate_epsilon_gradient_expression", "calculate_eta_gradient_expression", "calculate_eta_shrinkage", "calculate_individual_parameter_statistics", "calculate_individual_shrinkage", "calculate_parameters_from_ucp", "calculate_pk_parameters_statistics", "calculate_prec_from_corrse", "calculate_prec_from_cov", "calculate_se_from_cov", "calculate_se_from_prec", "calculate_ucp_scale", "check_dataset", "check_high_correlations", "check_parameters_near_bounds", "cleanup_model", "convert_model", "create_basic_pk_model", "create_config_template", "create_joint_distribution", "create_rng", "create_symbol", "deidentify_data", "display_odes", "drop_columns", "drop_dropped_columns", "evaluate_epsilon_gradient", "evaluate_eta_gradient", "evaluate_expression", "evaluate_individual_prediction", "evaluate_population_prediction", "evaluate_weighted_residuals", "expand_additional_doses", "filter_dataset", "find_clearance_parameters", "find_volume_parameters", "fix_or_unfix_parameters", "fix_parameters", "fix_parameters_to", "get_admid", "get_baselines", "get_bioavailability", "get_cmt", "get_concentration_parameters_from_data", "get_config_path", "get_covariate_baselines", "get_covariates", "get_doseid", "get_doses", "get_dv_symbol", "get_evid", "get_ids", "get_individual_parameters", "get_individual_prediction_expression", "get_initial_conditions", "get_lag_times", "get_mdv", "get_model_code", "get_model_covariates", "get_number_of_individuals", "get_number_of_observations", "get_number_of_observations_per_individual", "get_number_of_peripheral_compartments", "get_number_of_transit_compartments", "get_observation_expression", "get_observations", "get_omegas", "get_parameter_rv", "get_pd_parameters", "get_pk_parameters", "get_population_prediction_expression", "get_rv_parameters", "get_sigmas", "get_thetas", "get_unit_of", "get_zero_order_inputs", "greekify_model", "has_additive_error_model", "has_combined_error_model", "has_covariate_effect", "has_first_order_absorption", "has_first_order_elimination", "has_instantaneous_absorption", "has_linear_odes", "has_linear_odes_with_real_eigenvalues", "has_michaelis_menten_elimination", "has_mixed_mm_fo_elimination", "has_odes", "has_presystemic_metabolite", "has_proportional_error_model", "has_random_effect", "has_seq_zo_fo_absorption", "has_weighted_error_model", "has_zero_order_absorption", "has_zero_order_elimination", "is_linearized", "is_real", "list_time_varying_covariates", "load_dataset", "load_example_model", "make_declarative", "mu_reference_model", "omit_data", "plot_cwres_vs_idv", "plot_dv_vs_ipred", "plot_individual_predictions", "plot_iofv_vs_iofv", "plot_transformed_eta_distributions", "print_model_code", "print_model_symbols", "read_dataset_from_datainfo", "read_model", "read_model_from_string", "remove_bioavailability", "remove_covariate_effect", "remove_error_model", "remove_estimation_step", "remove_iiv", "remove_iov", "remove_lag_time", "remove_loq_data", "remove_parameter_uncertainty_step", "remove_peripheral_compartment", "remove_unused_parameters_and_rvs", "rename_symbols", "replace_non_random_rvs", "resample_data", "sample_individual_estimates", "sample_parameters_from_covariance_matrix", "sample_parameters_uniformly", "set_additive_error_model", "set_baseline_effect", "set_combined_error_model", "set_covariates", "set_direct_effect", "set_dtbs_error_model", "set_dvid", "set_estimation_step", "set_evaluation_step", "set_first_order_absorption", "set_first_order_elimination", "set_iiv_on_ruv", "set_initial_condition", "set_initial_estimates", "set_instantaneous_absorption", "set_lloq_data", "set_lower_bounds", "set_michaelis_menten_elimination", "set_mixed_mm_fo_elimination", "set_name", "set_ode_solver", "set_peripheral_compartments", "set_power_on_ruv", "set_proportional_error_model", "set_reference_values", "set_seq_zo_fo_absorption", "set_simulation", "set_time_varying_error_model", "set_tmdd", "set_transit_compartments", "set_upper_bounds", "set_weighted_error_model", "set_zero_order_absorption", "set_zero_order_elimination", "set_zero_order_input", "simplify_expression", "solve_ode_system", "split_joint_distribution", "transform_blq", "transform_etas_boxcox", "transform_etas_john_draper", "transform_etas_tdist", "translate_nmtran_time", "unconstrain_parameters", "undrop_columns", "unfix_parameters", "unfix_parameters_to", "unload_dataset", "update_initial_individual_estimates", "update_inits", "use_thetas_for_error_stdev", "write_csv", "write_model", "create_report", "create_results", "fit", "get_model_features", "is_strictness_fulfilled", "load_example_modelfit_results", "predict_influential_individuals", "predict_influential_outliers", "predict_outliers", "print_fit_summary", "rank_models", "read_modelfit_results", "read_results", "resume_tool", "retrieve_final_model", "retrieve_models", "run_allometry", "run_amd", "run_bootstrap", "run_covsearch", "run_estmethod", "run_iivsearch", "run_iovsearch", "run_modelfit", "run_modelsearch", "run_ruvsearch", "run_structsearch", "run_tool", "summarize_errors", "summarize_individuals", "summarize_individuals_count_table", "summarize_modelfit_results", "write_results", "LocalDirectoryDatabase", "LocalDirectoryToolDatabase", "LocalModelDirectoryDatabase", "Log", "ModelDatabase", "ModelEntry", "ModelfitResults", "NullModelDatabase", "NullToolDatabase", "Results", "Task", "ToolDatabase", "Workflow", "WorkflowBuilder", "call_workflow", "default_model_database", "default_tool_database", "execute_workflow", "split_common_options", "pharmpy.model Package", "pharmpy.modeling Package", "pharmpy.tools Package", "pharmpy.workflows Package", "Bootstrap", "Case deletion diagnostics", "Changelog", "Citation", "The Pharmpy command line interface", "Pharmpy Community Code of Conduct", "Configuration", "Contribute", "Contributors", "COVsearch", "Crossval", "Datasets in Pharmpy", "Design principles", "Documentation for developers", "Estmethod", "FREM", "Getting started", "IIVsearch", "Welcome to Pharmpy", "IOVsearch", "License", "Linearize", "The Pharmpy model", "Model estimation and results", "Modeling", "Modelsearch", "Using the NONMEM plugin", "Plots in Pharmpy", "Plugins", "Project suggestions", "Resmod", "PsN with Pharmpy", "QA", "ruvsearch", "scm", "Simeval", "Structsearch", "Tools", "User guide", "Pharmpy in R"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 15, 18, 23, 24, 25, 28, 30, 35, 59, 60, 74, 79, 83, 84, 85, 86, 88, 89, 90, 91, 98, 101, 109, 112, 118, 119, 120, 123, 129, 133, 140, 144, 145, 153, 174, 184, 189, 191, 212, 225, 227, 231, 238, 265, 271, 275, 279, 281, 282, 283, 299, 300, 302, 303, 304, 305, 307, 309, 310, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 330, 331, 332, 334, 335, 336, 337], "section": [0, 304, 307, 318, 320, 330, 335], "i": [0, 1, 2, 6, 8, 9, 14, 18, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 52, 54, 61, 62, 71, 73, 74, 75, 78, 79, 81, 83, 85, 86, 88, 89, 90, 98, 99, 101, 104, 108, 109, 111, 113, 117, 118, 119, 120, 135, 136, 137, 142, 143, 148, 154, 155, 157, 160, 161, 176, 177, 181, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 200, 201, 203, 206, 207, 211, 212, 214, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 236, 238, 240, 241, 245, 246, 248, 250, 252, 258, 259, 263, 264, 265, 266, 267, 268, 273, 275, 279, 280, 282, 283, 284, 289, 298, 299, 300, 302, 303, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 337], "document": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 250, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 315, 318, 322, 326, 327, 331, 335], "The": [0, 2, 3, 6, 8, 9, 10, 14, 18, 23, 24, 25, 28, 33, 36, 40, 42, 44, 47, 62, 70, 78, 81, 85, 86, 87, 88, 89, 90, 105, 111, 128, 133, 136, 137, 148, 149, 151, 169, 185, 189, 191, 201, 204, 212, 223, 227, 242, 245, 255, 261, 262, 267, 268, 271, 281, 300, 303, 305, 306, 307, 309, 314, 317, 318, 321, 322, 324, 326, 327, 335, 336, 337], "inform": [0, 1, 2, 6, 8, 133, 227, 300, 302, 307, 309, 310, 312, 315, 316, 317, 318, 320, 323, 327, 331, 332, 334, 335, 336], "intend": [0, 318, 320, 335], "non": [0, 24, 73, 78, 87, 101, 226, 300, 309, 310, 313, 318, 320, 322, 327, 335], "hard": [0, 327], "find": [0, 8, 28, 52, 93, 94, 111, 133, 184, 257, 273, 300, 316, 318, 334, 336, 337], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 284, 305, 307, 309, 312, 314, 315, 317, 318, 320, 321, 322, 323, 331, 334], "pharmpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 300, 306, 307, 308, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 336], "develop": [0, 259, 300, 318, 326, 327, 335, 337], "remov": [0, 2, 9, 25, 28, 83, 118, 119, 120, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 201, 205, 219, 232, 234, 236, 259, 299, 300, 302, 307, 310, 315, 317, 318, 324], "row": [0, 1, 2, 24, 85, 86, 92, 99, 102, 104, 157, 186, 187, 213, 227, 272, 298, 300, 302, 307, 309, 313, 315, 317, 321, 322, 323, 331, 332, 334], "split": [0, 78, 226, 293, 300, 302, 320, 335], "drop": [0, 2, 6, 18, 83, 84, 233, 300, 327, 332], "column": [0, 1, 2, 6, 8, 10, 18, 24, 30, 32, 35, 42, 50, 62, 81, 83, 84, 85, 86, 87, 91, 98, 101, 102, 104, 109, 157, 161, 164, 168, 179, 185, 186, 192, 195, 204, 213, 216, 227, 231, 233, 248, 249, 250, 259, 264, 271, 272, 298, 300, 302, 307, 309, 313, 315, 317, 320, 321, 322, 323, 331, 332, 334, 335], "error": [0, 2, 11, 19, 20, 23, 25, 28, 55, 56, 57, 58, 62, 65, 66, 67, 68, 69, 131, 136, 137, 148, 151, 167, 174, 189, 191, 211, 212, 216, 220, 227, 239, 267, 270, 273, 278, 281, 298, 300, 307, 312, 315, 317, 323, 324, 331, 332, 334, 335], "handl": [0, 2, 3, 91, 225, 227, 300, 309, 310, 313, 327], "valid": [0, 25, 37, 40, 108, 193, 259, 300, 318], "some": [0, 2, 8, 10, 65, 78, 174, 184, 189, 227, 277, 298, 300, 302, 305, 307, 309, 318, 319, 322, 323, 326, 327, 331, 334, 335], "rule": [0, 71, 318], "These": [0, 305, 310, 313, 318, 319, 322, 326, 327, 334, 335], "were": [0, 25, 28, 270, 298, 299, 300, 309, 312, 313, 318, 321, 323, 335, 337], "test": [0, 2, 54, 138, 155, 261, 262, 264, 266, 267, 268, 300, 302, 306, 307, 312, 314, 315, 317, 321, 323, 327, 331, 334], "7": [0, 1, 2, 36, 55, 57, 58, 63, 67, 68, 86, 99, 104, 120, 124, 157, 213, 250, 298, 299, 307, 309, 313, 315, 317, 318, 319, 321, 322, 323, 328, 330, 331, 332, 333, 334], "4": [0, 1, 2, 6, 55, 57, 58, 63, 67, 68, 85, 86, 87, 88, 89, 90, 99, 102, 104, 106, 120, 157, 213, 230, 250, 267, 273, 298, 299, 307, 308, 309, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 328, 330, 331, 332, 333, 334, 335], "3": [0, 1, 2, 6, 28, 55, 56, 57, 58, 63, 66, 67, 68, 69, 72, 85, 86, 87, 88, 89, 90, 99, 102, 104, 106, 107, 110, 120, 124, 157, 167, 181, 186, 187, 188, 213, 218, 227, 228, 229, 230, 248, 249, 250, 267, 272, 298, 299, 307, 308, 309, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 328, 330, 331, 332, 333, 334, 335, 337], "delimet": 0, "between": [0, 8, 9, 25, 32, 78, 98, 227, 271, 281, 289, 298, 299, 300, 302, 312, 313, 317, 318, 324, 327, 330, 331], "comma": [0, 302, 335], "space": [0, 70, 259, 266, 268, 300, 302, 307, 335], "tab": [0, 167, 300, 322, 325], "befor": [0, 2, 28, 187, 188, 237, 300, 302, 307, 319], "after": [0, 6, 28, 118, 119, 120, 216, 257, 270, 273, 277, 299, 300, 302, 308, 309, 313, 318, 319, 320, 323, 327, 328, 330, 332, 333, 337], "ar": [0, 2, 3, 4, 6, 7, 8, 14, 24, 25, 28, 37, 38, 39, 40, 42, 48, 62, 76, 78, 81, 101, 102, 117, 136, 137, 148, 158, 176, 177, 179, 182, 184, 190, 191, 193, 196, 197, 211, 217, 226, 227, 231, 238, 246, 247, 252, 259, 261, 263, 265, 266, 275, 277, 280, 298, 300, 302, 303, 305, 307, 309, 310, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 332, 334, 335, 337], "give": [0, 24, 111, 117, 160, 188, 211, 275, 279, 282, 298, 300, 302, 313, 317, 318, 320, 332], "sic": 0, "begin": [0, 313, 320, 322], "end": [0, 38, 52, 313, 318, 320, 322, 335], "insert": [0, 288, 300], "each": [0, 2, 6, 8, 25, 33, 35, 36, 61, 62, 63, 85, 86, 87, 88, 89, 90, 99, 104, 106, 120, 159, 164, 165, 179, 185, 188, 198, 200, 211, 213, 277, 281, 298, 299, 302, 304, 307, 309, 310, 312, 313, 315, 317, 318, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 335, 337], "can": [0, 1, 2, 6, 10, 18, 24, 25, 28, 34, 35, 40, 54, 62, 70, 79, 87, 133, 185, 225, 227, 245, 257, 262, 265, 277, 280, 282, 283, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 330, 331, 334, 335, 336, 337], "onli": [0, 2, 3, 8, 10, 14, 25, 36, 59, 60, 71, 74, 83, 85, 86, 88, 89, 90, 92, 108, 111, 112, 123, 129, 136, 137, 148, 159, 185, 189, 191, 198, 200, 211, 212, 213, 216, 225, 227, 237, 265, 267, 268, 273, 280, 289, 300, 302, 303, 307, 317, 318, 320, 323, 326, 334, 335], "numer": [0, 6, 29, 85, 86, 88, 89, 298, 300, 309, 327, 335], "e": [0, 6, 14, 18, 25, 37, 39, 54, 74, 80, 118, 119, 120, 160, 177, 190, 193, 194, 266, 298, 300, 305, 309, 312, 313, 315, 317, 318, 320, 322, 323, 324, 327, 331, 334, 335], "other": [0, 7, 9, 18, 25, 28, 44, 75, 165, 265, 288, 293, 298, 300, 303, 305, 310, 315, 318, 327, 334], "charact": [0, 10, 309], "than": [0, 23, 24, 300, 315, 318, 323, 335], "ee": 0, "0123456789": 0, "allow": [0, 6, 14, 25, 36, 252, 259, 275, 276, 279, 282, 292, 300, 302, 307, 318, 320, 323, 327, 335], "except": [0, 11, 12, 19, 20, 21, 39, 62, 185, 227, 300, 318], "ii": [0, 6], "datx": [0, 300], "fortran": 0, "short": [0, 305, 318], "form": [0, 25, 185, 300, 318], "exponenti": [0, 36, 39, 48, 200, 302, 307, 313], "notat": 0, "2": [0, 1, 2, 6, 18, 28, 33, 36, 38, 43, 47, 49, 51, 53, 54, 55, 56, 57, 58, 63, 66, 67, 68, 69, 73, 85, 86, 87, 88, 89, 90, 99, 102, 104, 106, 110, 120, 124, 157, 167, 181, 186, 187, 188, 189, 191, 198, 202, 206, 207, 210, 212, 213, 214, 218, 221, 227, 229, 230, 250, 258, 267, 271, 298, 299, 302, 305, 307, 308, 309, 312, 313, 315, 317, 319, 320, 321, 322, 323, 324, 328, 330, 331, 332, 333, 334, 335], "1": [0, 1, 2, 5, 6, 7, 8, 14, 16, 17, 18, 22, 24, 25, 26, 28, 33, 34, 36, 37, 38, 39, 40, 44, 47, 49, 54, 55, 56, 57, 58, 63, 64, 66, 67, 68, 69, 74, 76, 81, 85, 86, 87, 88, 89, 90, 92, 99, 102, 104, 106, 107, 108, 110, 120, 124, 132, 135, 157, 158, 159, 160, 161, 167, 171, 181, 185, 186, 187, 188, 193, 197, 198, 199, 200, 203, 206, 207, 210, 211, 213, 214, 215, 216, 218, 221, 222, 225, 227, 228, 229, 230, 238, 250, 258, 259, 260, 261, 266, 267, 268, 271, 298, 299, 302, 304, 305, 307, 308, 309, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 330, 331, 332, 333, 334, 335, 337], "mean": [0, 2, 13, 17, 18, 22, 62, 65, 76, 160, 186, 187, 259, 275, 279, 298, 299, 300, 302, 313, 315, 318, 320, 321, 322, 323, 327, 330, 333, 334, 335], "2e": 0, "2e1": 0, "A": [0, 1, 2, 5, 8, 15, 17, 18, 23, 24, 25, 28, 30, 62, 64, 65, 70, 81, 82, 87, 93, 94, 111, 117, 125, 126, 127, 128, 130, 131, 132, 133, 161, 164, 169, 184, 185, 186, 187, 189, 191, 202, 205, 212, 216, 219, 245, 246, 256, 265, 267, 270, 273, 275, 279, 280, 281, 282, 289, 298, 299, 301, 302, 305, 306, 307, 309, 310, 315, 317, 318, 319, 320, 322, 323, 326, 327, 331, 332, 334, 335], "d": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 82, 276, 278, 284, 293, 318, 322], "instead": [0, 2, 9, 47, 71, 87, 117, 227, 275, 299, 300, 302, 309, 310, 312, 313, 318, 327], "lone": 0, "an": [0, 2, 4, 6, 8, 9, 10, 15, 16, 18, 24, 25, 28, 31, 32, 33, 35, 37, 40, 41, 42, 51, 54, 70, 98, 101, 106, 109, 136, 137, 138, 142, 143, 146, 148, 151, 155, 158, 160, 173, 185, 189, 193, 201, 227, 229, 242, 245, 247, 248, 249, 250, 270, 271, 273, 276, 278, 300, 302, 304, 305, 307, 309, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 327, 330, 332, 333, 334, 335, 337], "0": [0, 1, 2, 6, 7, 8, 15, 17, 18, 22, 23, 24, 25, 28, 33, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 51, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 78, 79, 85, 86, 87, 88, 89, 90, 95, 96, 97, 99, 102, 104, 106, 107, 113, 124, 125, 131, 132, 134, 135, 157, 158, 159, 160, 167, 171, 175, 179, 180, 181, 184, 186, 187, 188, 191, 193, 194, 196, 197, 200, 201, 202, 204, 205, 211, 212, 213, 215, 216, 219, 226, 227, 228, 229, 232, 235, 238, 247, 249, 250, 258, 259, 261, 263, 264, 266, 267, 268, 272, 273, 281, 284, 298, 299, 302, 305, 307, 309, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 330, 331, 332, 333, 334, 335, 337], "dot": 0, "most": [0, 6, 36, 225, 302, 310, 318, 330], "24": [0, 2, 63, 99, 104, 107, 120, 124, 157, 213, 250, 298, 299, 307, 309, 312, 315, 317, 319, 321, 322, 323, 330, 331, 333], "long": [0, 300, 318, 327], "count": [0, 106, 227, 272, 279, 300, 323], "delimit": 0, "wa": [0, 271, 281, 284, 298, 300, 306, 318, 319, 331, 332, 335], "eaten": 0, "empti": [0, 2, 18, 25, 270, 304], "blankok": 0, "set": [0, 2, 4, 5, 7, 8, 9, 10, 14, 16, 18, 25, 28, 32, 34, 35, 43, 47, 52, 54, 71, 78, 83, 95, 96, 97, 98, 113, 124, 181, 187, 189, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 232, 234, 235, 237, 238, 284, 300, 302, 303, 304, 309, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 334, 335, 337], "As": [0, 25, 303, 322, 323, 324, 335], "contain": [0, 2, 3, 25, 81, 87, 162, 163, 246, 248, 249, 250, 298, 299, 302, 307, 308, 309, 310, 312, 315, 317, 318, 320, 321, 323, 328, 330, 331, 332, 333, 334, 335], "drope": 0, "input": [0, 7, 8, 9, 10, 25, 28, 36, 37, 39, 42, 68, 69, 79, 84, 134, 138, 139, 149, 167, 171, 187, 200, 223, 245, 246, 259, 271, 285, 288, 300, 302, 307, 309, 312, 315, 317, 322, 323, 324, 327, 331, 334], "ani": [0, 2, 6, 9, 18, 51, 62, 73, 111, 182, 257, 262, 272, 285, 289, 305, 307, 309, 314, 315, 317, 318, 320, 321, 322, 324, 327, 335, 337], "limit": [0, 2, 6, 72, 179, 204, 211, 227, 259, 300, 302, 317, 318, 325], "length": [0, 87, 88, 89, 90, 106, 107, 124, 300, 322], "If": [0, 2, 8, 10, 18, 28, 34, 36, 44, 47, 52, 54, 62, 77, 78, 79, 87, 98, 101, 106, 108, 109, 147, 176, 177, 181, 185, 187, 198, 200, 201, 211, 223, 226, 227, 228, 229, 230, 231, 238, 252, 259, 263, 266, 273, 288, 298, 302, 305, 307, 309, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 327, 335, 337], "ha": [0, 2, 8, 18, 25, 40, 78, 87, 99, 104, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 298, 300, 302, 303, 305, 307, 309, 310, 312, 315, 317, 318, 320, 322, 323, 329, 331, 332, 334, 335, 337], "more": [0, 2, 8, 24, 227, 258, 261, 263, 264, 266, 267, 268, 300, 302, 307, 312, 314, 316, 318, 320, 322, 323, 327, 330, 334, 335, 336], "extra": [0, 18, 268, 300, 334], "consid": [0, 2, 101, 263, 264, 266, 300, 307, 310, 312, 315, 317, 318, 323, 331], "start": [0, 2, 8, 38, 51, 106, 161, 175, 185, 263, 268, 300, 302, 305, 307, 312, 313, 317, 318, 320, 321, 322, 323, 331, 332, 334, 335, 337], "regex": 0, "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 281, 282, 284, 289, 298, 300, 302, 303, 305, 307, 310, 312, 313, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 327, 331, 333, 334, 335, 336, 337], "been": [0, 2, 6, 154, 303, 307, 309, 318, 322, 335, 337], "provid": [0, 25, 187, 211, 302, 303, 306, 307, 309, 315, 317, 318, 323, 337], "default": [0, 1, 2, 6, 7, 9, 14, 18, 23, 25, 30, 33, 36, 38, 39, 40, 46, 48, 52, 54, 61, 78, 79, 83, 108, 111, 113, 117, 126, 128, 135, 136, 137, 148, 149, 176, 177, 185, 186, 187, 189, 191, 196, 197, 200, 201, 211, 212, 216, 226, 228, 229, 230, 240, 241, 244, 245, 252, 258, 263, 264, 266, 268, 273, 275, 279, 282, 292, 297, 300, 302, 304, 307, 315, 317, 320, 322, 323, 324, 325, 331, 334, 337], "where": [0, 2, 7, 33, 47, 227, 257, 298, 299, 300, 303, 304, 307, 309, 312, 313, 317, 318, 322, 323, 324, 327, 335, 337], "rexex": 0, "": [0, 8, 10, 14, 70, 105, 171, 300, 302, 307, 309, 313, 318, 324, 328], "za": 0, "z": [0, 33], "either": [0, 2, 39, 40, 81, 108, 259, 266, 302, 315, 318, 320, 322, 334, 335, 337], "surround": 0, "two": [0, 2, 8, 9, 25, 28, 81, 165, 298, 300, 301, 302, 318, 327, 331, 334, 335], "By": [0, 18, 25, 111, 136, 137, 148, 317, 318, 320], "blank": 0, "field": 0, "fdata": 0, "which": [0, 2, 9, 14, 25, 28, 52, 70, 161, 173, 186, 227, 242, 263, 264, 265, 266, 267, 279, 298, 299, 300, 302, 304, 307, 312, 315, 317, 318, 320, 321, 322, 323, 324, 325, 331, 332, 334, 335, 337], "interpret": [0, 300, 318, 337], "us": [0, 1, 2, 6, 8, 9, 10, 13, 14, 15, 18, 24, 25, 28, 32, 33, 42, 45, 54, 62, 70, 78, 79, 81, 85, 86, 87, 88, 89, 90, 98, 105, 111, 117, 124, 135, 160, 161, 182, 185, 186, 187, 188, 189, 191, 198, 200, 209, 211, 212, 220, 227, 231, 237, 239, 240, 244, 248, 249, 250, 252, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 275, 276, 277, 279, 282, 283, 284, 286, 288, 292, 298, 299, 300, 302, 304, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 330, 331, 332, 334, 335, 336], "chang": [0, 2, 9, 18, 24, 25, 38, 81, 196, 198, 202, 203, 205, 211, 214, 215, 219, 221, 227, 235, 302, 305, 318, 320, 322, 323, 324, 331, 337], "howev": [0, 8, 315, 318, 323, 324, 335, 337], "one": [0, 2, 6, 8, 9, 10, 14, 22, 23, 24, 25, 26, 36, 44, 74, 83, 87, 96, 136, 137, 148, 168, 185, 187, 195, 198, 200, 220, 227, 231, 233, 234, 239, 244, 265, 267, 270, 272, 275, 279, 281, 282, 286, 300, 302, 303, 305, 309, 310, 312, 313, 317, 318, 320, 322, 323, 324, 327, 334, 335], "legal": [0, 318], "ones": [0, 9, 111, 307, 313], "9": [0, 2, 6, 47, 63, 72, 86, 89, 99, 102, 104, 120, 124, 238, 250, 298, 299, 307, 309, 314, 315, 317, 318, 319, 321, 322, 323, 330, 331, 332, 333, 334, 337], "sinc": [0, 6, 201, 300, 309, 310, 313, 315, 322, 323, 324, 327, 337], "number": [0, 2, 6, 8, 14, 22, 23, 26, 35, 42, 52, 54, 62, 65, 73, 79, 80, 81, 118, 119, 120, 121, 122, 124, 161, 179, 185, 186, 187, 188, 189, 200, 210, 215, 218, 260, 261, 265, 267, 271, 272, 281, 298, 300, 302, 307, 309, 318, 322, 330, 331, 332, 334, 335, 337], "valu": [0, 1, 2, 6, 10, 18, 23, 24, 25, 33, 39, 46, 48, 49, 54, 62, 64, 65, 72, 73, 85, 86, 87, 88, 89, 90, 95, 97, 99, 102, 104, 105, 125, 131, 132, 155, 179, 184, 185, 188, 204, 213, 216, 227, 235, 252, 258, 261, 263, 264, 266, 267, 268, 273, 281, 297, 298, 300, 302, 305, 307, 309, 312, 319, 320, 322, 323, 331, 332, 333], "met": [0, 268, 318], "doubl": 0, "big": 0, "warn": [0, 2, 12, 245, 270, 278, 281, 300, 307, 312, 315, 317, 323, 334, 337], "larger": [0, 318, 335], "pad": 0, "filter": [0, 92, 118, 119, 120, 300, 309, 323, 334], "so": [0, 23, 92, 185, 277, 303, 305, 310, 318, 323, 324, 330, 337], "characterscannot": 0, "neither": [0, 318], "perform": [0, 14, 74, 81, 302, 307, 318, 320, 322, 323, 324, 334], "order": [0, 8, 9, 25, 28, 32, 134, 139, 140, 145, 150, 152, 153, 185, 198, 199, 207, 214, 221, 222, 223, 259, 300, 302, 309, 314, 318, 320, 321, 322, 323, 327, 335], "given": [0, 2, 9, 25, 38, 76, 80, 85, 86, 88, 89, 90, 96, 97, 126, 127, 128, 130, 138, 149, 155, 157, 169, 176, 177, 186, 187, 188, 216, 224, 227, 234, 235, 243, 245, 252, 275, 277, 279, 282, 288, 300, 302, 305, 307, 309, 312, 313, 315, 317, 318, 323, 324, 330, 331, 334], "critic": [0, 303], "case": [0, 2, 8, 35, 78, 91, 136, 137, 148, 185, 227, 273, 300, 307, 315, 317, 318, 320, 322, 323, 329, 334, 336], "illeg": 0, "get": [0, 4, 5, 6, 7, 8, 10, 16, 25, 28, 32, 35, 98, 100, 101, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 129, 131, 132, 134, 156, 272, 300, 309, 313, 317, 318, 320, 321, 327, 334, 337], "need": [0, 2, 18, 39, 74, 91, 133, 300, 302, 304, 305, 306, 310, 313, 314, 318, 320, 321, 323, 326, 334, 335, 337], "becaus": [0, 8, 300, 318], "later": [0, 314, 318], "comparison": [0, 323, 327, 334], "It": [0, 18, 275, 303, 304, 305, 309, 310, 314, 315, 316, 318, 320, 321, 322, 325, 330, 335, 337], "possibl": [0, 2, 6, 8, 25, 111, 140, 144, 145, 153, 225, 263, 266, 280, 300, 304, 305, 309, 315, 318, 320, 321, 322, 323, 324, 325, 327, 330, 334, 335, 337], "done": [0, 1, 74, 75, 81, 85, 86, 88, 89, 90, 185, 303, 307, 320, 323, 325, 331], "eq": [0, 8, 31, 322], "ne": 0, "text": [0, 18, 36, 37, 40, 193, 320, 322, 327], "otherwis": [0, 6, 28, 33, 34, 36, 39, 43, 74, 78, 98, 101, 109, 124, 135, 136, 137, 148, 151, 154, 158, 159, 160, 185, 198, 211, 212, 214, 216, 218, 221, 227, 281, 303, 307, 309, 318, 320, 322, 327, 334], "appropri": [0, 303, 318], "letter": [0, 135], "alphanum": 0, "underscor": 0, "real": [0, 143, 155, 309, 310], "special": [0, 6, 231, 305, 309, 310, 318], "digit": [0, 73, 300, 335], "enclos": 0, "ok": [0, 310], "w": [0, 28, 74, 135, 158, 167, 168, 174, 189, 200, 212, 216, 220, 227, 239, 307, 318, 320, 322], "o": [0, 299, 301, 302, 306, 331], "With": [0, 335], "eqn": 0, "ge": [0, 322], "etc": [0, 3, 300, 322, 324, 332, 335], "maximum": [0, 14, 36, 73, 227, 261, 302, 307, 335], "have": [0, 2, 6, 8, 18, 25, 28, 36, 39, 81, 105, 111, 139, 150, 152, 231, 264, 272, 277, 279, 300, 302, 304, 305, 306, 307, 309, 310, 312, 314, 315, 317, 318, 320, 321, 323, 324, 325, 327, 334, 335, 337], "12": [0, 1, 2, 63, 99, 102, 104, 106, 107, 120, 157, 213, 250, 298, 299, 307, 309, 312, 313, 315, 317, 318, 319, 321, 322, 323, 328, 330, 331, 332, 333, 334], "must": [0, 23, 42, 78, 185, 200, 275, 299, 302, 318, 320, 335], "decreas": [0, 310], "within": [0, 105, 185, 303, 318, 335], "dat1": 0, "dat2": 0, "dat3": 0, "thei": [0, 18, 25, 28, 211, 298, 303, 305, 307, 310, 318, 323, 324, 337], "affect": [0, 111, 117, 198, 211, 227, 300, 318, 324], "even": [0, 23, 80, 84, 99, 104, 111, 304, 318, 324], "still": [0, 318, 324, 337], "cannot": [0, 8, 62, 78, 245, 274, 300, 309, 318, 335], "both": [0, 1, 2, 8, 18, 42, 150, 194, 227, 272, 300, 303, 307, 309, 312, 315, 317, 318, 321, 323, 331, 334, 335], "reenter": 0, "think": 0, "risk": [0, 318], "being": [0, 6, 25, 35, 44, 62, 141, 147, 188, 189, 191, 212, 299, 300, 304, 312, 313, 318, 324, 327, 332, 334], "truncat": 0, "encod": [0, 220, 239, 300, 309, 325], "here": [0, 2, 117, 309, 310, 311, 314, 315, 321, 322, 323, 327, 335, 336], "possibli": [0, 327], "partial": [0, 302, 306, 327], "list": [0, 2, 6, 8, 10, 13, 14, 17, 24, 25, 28, 31, 33, 39, 42, 78, 81, 83, 84, 93, 94, 96, 97, 105, 110, 111, 117, 126, 127, 128, 130, 156, 164, 176, 177, 185, 186, 192, 200, 211, 226, 228, 229, 230, 232, 233, 234, 235, 244, 252, 257, 258, 259, 262, 263, 264, 265, 267, 270, 271, 272, 273, 281, 287, 288, 298, 299, 300, 302, 303, 305, 307, 309, 312, 317, 318, 320, 322, 330, 331, 332, 334, 335], "decid": [0, 2, 44, 149, 315, 317, 318, 323, 331], "whether": [0, 23, 33, 36, 39, 54, 78, 138, 147, 149, 185, 200, 246, 248, 250, 259, 273, 276, 292, 300, 302, 315, 318, 323, 335], "put": [0, 8, 161, 185, 300, 310, 313], "up": [0, 14, 303, 304, 307, 314, 321, 335, 337], "written": [0, 300, 318, 320, 322, 324, 335], "scientif": [0, 310], "14": [0, 2, 63, 86, 99, 104, 120, 250, 298, 299, 307, 315, 317, 318, 319, 321, 322, 330, 332, 333, 334], "mantissa": 0, "decim": 0, "trail": 0, "point": [0, 106, 201, 298, 322], "describ": [0, 2, 25, 28, 62, 139, 140, 141, 144, 145, 150, 152, 153, 298, 307, 309, 315, 317, 320, 334], "output": [0, 8, 18, 272, 288, 300, 302, 305, 318, 320, 322, 335], "alwai": [0, 184, 187, 300, 309, 322, 323, 334], "synonym": [0, 300], "name": [0, 1, 2, 6, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 24, 25, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 47, 49, 52, 62, 73, 75, 78, 80, 81, 83, 88, 89, 90, 96, 100, 105, 106, 107, 111, 114, 117, 120, 124, 126, 127, 128, 130, 135, 136, 137, 138, 148, 156, 158, 161, 165, 173, 176, 177, 179, 181, 183, 185, 189, 190, 191, 192, 193, 195, 200, 201, 204, 208, 211, 212, 213, 216, 223, 226, 228, 229, 230, 233, 234, 247, 252, 257, 258, 259, 264, 269, 270, 273, 275, 276, 277, 279, 281, 282, 285, 286, 287, 288, 289, 297, 299, 300, 302, 304, 307, 309, 315, 317, 318, 321, 322, 323, 326, 331, 332, 334, 335], "avail": [0, 1, 2, 6, 33, 43, 62, 133, 158, 198, 214, 218, 221, 227, 247, 252, 259, 298, 302, 307, 312, 313, 315, 317, 318, 320, 321, 322, 323, 324, 327, 331, 333, 334, 335, 336, 337], "carri": [0, 318], "over": [0, 124, 161, 185, 216, 248, 249, 250, 298, 299, 300, 313, 317, 335], "onc": [0, 159, 307, 324], "covari": [0, 6, 10, 14, 17, 25, 36, 55, 56, 57, 58, 62, 63, 65, 66, 67, 68, 69, 78, 104, 105, 117, 138, 156, 167, 173, 186, 187, 188, 192, 227, 261, 281, 300, 302, 307, 309, 310, 317, 327, 332, 335], "final": [0, 45, 180, 256, 281, 300, 307, 312, 313, 315, 317, 318, 322, 323, 324, 331, 332, 334, 335], "estim": [0, 1, 2, 3, 14, 15, 18, 23, 24, 33, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 51, 61, 62, 63, 65, 72, 73, 76, 78, 87, 95, 96, 97, 165, 166, 167, 171, 175, 180, 181, 186, 187, 188, 189, 191, 196, 197, 198, 202, 206, 207, 211, 212, 214, 218, 220, 221, 222, 227, 228, 229, 230, 234, 235, 237, 238, 239, 244, 247, 258, 259, 262, 268, 273, 281, 298, 299, 300, 302, 307, 308, 310, 315, 316, 317, 319, 323, 326, 327, 330, 331, 334, 335, 336], "oppos": 0, "ext": [0, 300, 335], "per": [0, 6, 14, 24, 74, 118, 119, 120, 124, 186, 187, 211, 216, 272], "est": [0, 38, 45, 51, 175, 180, 320, 322], "first": [0, 2, 7, 25, 34, 36, 43, 80, 99, 104, 108, 136, 137, 139, 140, 145, 148, 150, 165, 172, 189, 191, 196, 198, 199, 200, 207, 212, 214, 216, 218, 221, 227, 281, 300, 302, 307, 313, 315, 317, 318, 322, 323, 324, 327, 335, 337], "call": [0, 272, 289, 300, 304, 305, 318, 324, 337], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 299, 300, 302, 307, 312, 315, 317, 323, 327, 328, 330, 331, 332, 334, 335], "theta": [0, 1, 28, 33, 36, 39, 125, 131, 132, 167, 168, 171, 211, 220, 239, 300, 315, 322, 323, 324, 327, 331], "sigma": [0, 1, 125, 131, 132, 167, 168, 171, 189, 191, 212, 313, 315, 322, 323, 324], "omega": [0, 1, 22, 25, 63, 125, 131, 132, 167, 168, 171, 300, 302, 313, 315, 320, 322, 323, 324, 330, 331], "fix": [0, 1, 2, 23, 24, 33, 44, 49, 54, 78, 95, 96, 97, 125, 131, 132, 184, 194, 202, 205, 219, 226, 232, 234, 235, 258, 302, 315, 318, 320, 322, 327, 335], "offdiagon": 0, "could": [0, 18, 300, 309, 318, 322, 326, 327], "part": [0, 2, 18, 25, 80, 227, 298, 300, 302, 305, 306, 307, 318, 320, 323, 324, 327, 335], "NO": [0, 318], "probabl": [0, 227], "same": [0, 2, 8, 10, 18, 25, 28, 42, 52, 73, 74, 95, 96, 97, 106, 152, 200, 202, 211, 234, 235, 240, 259, 264, 275, 277, 279, 299, 300, 302, 303, 307, 309, 312, 313, 317, 318, 320, 322, 323, 334, 335, 337], "type": [0, 2, 6, 8, 10, 18, 27, 28, 35, 36, 54, 76, 101, 105, 126, 128, 164, 169, 217, 245, 252, 259, 263, 264, 266, 268, 297, 300, 302, 305, 307, 313, 314, 315, 317, 318, 320, 323, 327], "now": [0, 300, 305, 322, 324], "investig": 0, "follow": [0, 2, 14, 36, 39, 160, 226, 298, 300, 302, 303, 305, 306, 307, 309, 310, 312, 314, 315, 317, 318, 320, 322, 323, 324, 326, 334, 335, 337], "like": [0, 25, 309, 318, 324, 327, 335], "One": [0, 2, 25, 161, 164, 281, 285, 288, 302, 327, 337], "last": [0, 8, 28, 32, 98, 197, 273], "left": [0, 4, 62, 307, 320, 322, 323, 326], "justifi": 0, "size": [0, 6, 13, 185, 227, 300, 303, 327], "13": [0, 1, 2, 63, 99, 102, 104, 106, 120, 250, 298, 299, 307, 312, 315, 317, 318, 319, 321, 322, 323, 328, 330, 332, 333], "subject_id": 0, "model": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 286, 297, 298, 299, 300, 301, 303, 304, 305, 307, 312, 313, 314, 316, 317, 318, 319, 326, 327, 330, 332, 333, 336, 337], "n": [0, 6, 17, 22, 25, 26, 37, 40, 47, 78, 81, 181, 187, 188, 193, 210, 215, 218, 226, 229, 265, 298, 299, 300, 302, 313, 315, 320, 322, 335], "flatten": [0, 300], "triangular": 0, "correl": [0, 14, 55, 56, 57, 58, 66, 67, 68, 69, 72, 78, 238, 281, 300, 330], "abov": [0, 33, 36, 39, 72, 179, 227, 298, 299, 307, 313, 318, 322, 334, 337], "off": [0, 2, 323, 335], "diagon": [0, 167, 300, 315, 321, 322, 323], "obj": 0, "right": [0, 4, 8, 318, 320, 322, 337], "also": [0, 2, 25, 34, 84, 111, 185, 300, 304, 305, 307, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 327, 331, 334, 335, 337], "22": [0, 2, 63, 85, 86, 88, 89, 99, 104, 120, 124, 250, 298, 299, 307, 313, 317, 319, 321, 322, 333], "integ": [0, 6, 135, 300, 302, 335], "5": [0, 1, 2, 28, 33, 36, 55, 57, 58, 62, 63, 67, 68, 74, 86, 87, 97, 99, 102, 104, 107, 120, 124, 135, 157, 158, 159, 160, 167, 213, 227, 230, 235, 250, 271, 272, 298, 299, 307, 309, 313, 315, 317, 318, 319, 320, 321, 322, 323, 328, 330, 332, 333, 334], "expon": [0, 1, 33, 258, 302], "regular": [0, 10, 316], "take": [0, 2, 23, 25, 79, 246, 281, 300, 303, 309, 312, 315, 317, 318, 323, 327, 334], "19": [0, 63, 86, 99, 104, 120, 250, 298, 299, 315, 319, 321, 322, 330, 332, 333], "posit": [0, 25, 187, 188, 227, 300, 302, 303, 310, 335], "neg": [0, 335], "For": [0, 2, 8, 36, 39, 118, 119, 120, 160, 184, 213, 227, 231, 258, 261, 263, 264, 266, 267, 268, 298, 299, 302, 304, 305, 307, 312, 313, 314, 318, 320, 323, 324, 327, 334, 335, 337], "20": [0, 2, 63, 89, 99, 104, 120, 250, 298, 299, 307, 318, 319, 321, 322, 328, 330, 331, 332, 333], "In": [0, 2, 8, 35, 78, 91, 303, 305, 307, 314, 315, 317, 318, 320, 321, 322, 323, 327, 334, 335, 337], "observ": [0, 6, 14, 18, 43, 106, 118, 119, 120, 123, 124, 198, 214, 218, 221, 222, 227, 271, 272, 298, 300, 313, 327, 330, 333, 334], "byte": 0, "evid": [0, 109, 300], "toward": [0, 106, 300], "token": [0, 335], "whitespac": 0, "parenthes": [0, 335], "multipl": [0, 4, 8, 25, 28, 35, 54, 101, 136, 137, 148, 198, 270, 288, 300, 307, 310, 320, 322, 331, 332, 335], "open": [0, 303, 305, 316, 318, 325], "keyword": [0, 302], "kept": [0, 91, 124, 300, 302, 315], "exampl": [0, 1, 4, 5, 6, 7, 8, 9, 10, 16, 17, 22, 23, 24, 25, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 300, 302, 304, 305, 307, 309, 310, 312, 315, 317, 318, 320, 323, 324, 325, 326, 327, 331, 334, 337], "csv": [0, 2, 171, 240, 274, 284, 300, 302, 307, 309, 312, 315, 317, 322, 323, 331, 334, 335], "wgt": [0, 2, 4, 6, 10, 28, 33, 36, 74, 83, 84, 99, 104, 117, 133, 135, 157, 158, 159, 160, 167, 168, 173, 213, 228, 229, 230, 233, 258, 309, 313, 320, 322, 324, 327, 330, 335], "23": [0, 2, 62, 63, 65, 79, 86, 99, 104, 120, 186, 187, 188, 250, 298, 299, 307, 315, 317, 319, 321, 322, 323, 332, 333, 334], "titl": 0, "crash": [0, 300], "nmtran": [0, 6, 14], "There": [0, 277, 312, 322], "72": [0, 2], "includ": [0, 2, 3, 17, 22, 25, 48, 164, 227, 273, 299, 300, 303, 307, 315, 316, 317, 318, 321, 322, 323, 330, 332, 334, 335], "come": [0, 227, 305, 318], "filenam": [0, 18, 275, 279, 282, 287, 320], "repres": [0, 4, 6, 23, 24, 25, 34, 302, 307, 309, 310, 313, 318, 320, 334], "rel": [0, 281, 300, 313, 335], "path": [0, 1, 2, 10, 18, 52, 76, 103, 169, 170, 240, 241, 242, 243, 244, 253, 254, 255, 257, 259, 274, 275, 276, 277, 279, 282, 283, 284, 286, 287, 292, 300, 302, 304, 307, 309, 312, 314, 315, 317, 320, 321, 322, 323, 331, 332, 334, 335, 337], "work": [0, 281, 300, 303, 305, 312, 318, 320, 327], "directori": [0, 243, 244, 257, 275, 276, 277, 300, 302, 304, 305, 320, 332], "when": [0, 2, 14, 32, 36, 74, 98, 184, 300, 303, 305, 309, 317, 318, 320, 324, 330, 332, 334, 335], "invok": 0, "nmfe": 0, "content": [0, 1, 2, 271, 272, 307, 309, 312, 315, 317, 318, 323, 331, 334], "simpli": [0, 23, 305, 312, 324], "seen": [0, 1, 2, 307, 309, 312, 315, 317, 323, 331, 334], "54": [0, 63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 323, 328, 330, 333], "doe": [0, 2, 52, 80, 103, 179, 227, 275, 276, 277, 282, 283, 300, 310, 312, 315, 317, 318, 323, 324, 330], "pk": [0, 2, 6, 41, 48, 76, 111, 128, 167, 217, 227, 300, 302, 307, 315, 322, 323, 324, 334, 335], "pred": [0, 89, 167, 171, 300, 321, 322, 330, 333], "simpl": [0, 1, 167, 225, 273, 322, 324, 334], "merg": [0, 300, 305, 318], "placement": [0, 304], "place": [0, 2, 304, 318], "seem": 0, "restrict": [0, 277, 318], "automat": [0, 14, 33, 259, 300, 305, 307, 314, 318, 331, 335], "creat": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 32, 35, 44, 74, 76, 77, 79, 80, 98, 101, 102, 109, 124, 176, 190, 200, 211, 242, 243, 245, 257, 271, 272, 275, 276, 277, 278, 279, 280, 284, 285, 287, 289, 292, 298, 299, 300, 302, 304, 305, 307, 308, 309, 312, 313, 315, 319, 323, 327, 328, 330, 331, 332, 333, 334, 335, 336], "continu": [0, 2, 6, 18, 36, 300, 303, 305, 307, 313, 318, 327, 335], "factor": [0, 327], "compil": [0, 318], "11138": 0, "445": [0, 315], "though": [0, 318], "outsid": [0, 300, 303, 318, 334], "standard": [0, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 69, 239, 242, 281, 298, 300, 310, 313, 318, 322, 324, 327, 330, 331, 333, 335], "gfortran": 0, "8": [0, 2, 6, 55, 56, 57, 58, 63, 66, 67, 68, 69, 99, 104, 107, 120, 124, 157, 213, 250, 298, 299, 307, 309, 315, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334, 337], "hh": 0, "j": [0, 227, 229, 299, 313], "nep": 0, "h": [0, 302], "second": [0, 165, 302, 324], "f": [0, 28, 40, 74, 135, 158, 167, 168, 174, 189, 191, 200, 211, 212, 216, 227, 239, 298, 300, 302, 306, 318, 320, 322, 324], "respect": [0, 2, 300, 303, 307, 312, 313, 318, 322, 323, 324], "ep": [0, 28, 167, 300, 302, 322, 324], "implicit": [0, 300], "kind": [0, 6, 8, 128, 318], "dpsize": 0, "main": [0, 280, 302, 305, 327, 337], "function": [0, 3, 10, 14, 25, 33, 36, 37, 40, 59, 60, 79, 84, 85, 86, 88, 89, 90, 95, 96, 97, 112, 123, 129, 140, 144, 145, 153, 184, 189, 190, 191, 193, 202, 211, 212, 225, 231, 234, 235, 238, 243, 252, 263, 266, 281, 285, 298, 300, 302, 304, 305, 309, 310, 315, 317, 318, 320, 321, 323, 324, 326, 327, 330, 331, 332, 335, 336, 337], "fsub": 0, "variabl": [0, 1, 2, 3, 4, 6, 8, 13, 17, 18, 22, 25, 29, 30, 42, 62, 80, 87, 111, 125, 126, 130, 131, 133, 136, 137, 148, 149, 168, 184, 188, 189, 191, 200, 211, 212, 216, 258, 259, 281, 300, 302, 307, 309, 310, 315, 321, 327, 330, 336, 337], "doesn": [0, 28, 279, 300, 315], "t": [0, 6, 7, 8, 28, 33, 37, 74, 82, 113, 135, 158, 193, 206, 207, 212, 222, 230, 273, 279, 285, 287, 299, 300, 302, 313, 315, 320, 322, 328, 330], "declar": [0, 2, 74, 159, 307, 335], "assign": [0, 6, 28, 74, 300, 302, 320], "stop": 0, "entri": [0, 227, 275, 278, 279, 282], "symbol": [0, 4, 5, 7, 8, 9, 16, 17, 18, 22, 23, 24, 25, 28, 59, 60, 74, 80, 108, 111, 112, 117, 123, 129, 133, 136, 137, 148, 159, 168, 183, 189, 191, 200, 211, 212, 216, 259, 300, 307, 310, 322, 327], "separ": [0, 10, 78, 91, 160, 185, 226, 277, 280, 300, 302, 305, 307, 309, 310, 313, 318, 327, 335], "thnn": 0, "nn": [0, 313], "omaabb": 0, "sgaabb": 0, "aa": 0, "bb": 0, "indic": [0, 6, 23, 25, 44, 179, 204, 227, 246, 300, 318, 322, 334], "ad": [0, 2, 9, 18, 34, 36, 39, 47, 54, 91, 263, 264, 266, 288, 300, 302, 307, 317, 318, 324, 331, 332], "x": [0, 1, 2, 24, 33, 74, 85, 86, 102, 157, 186, 213, 298, 307, 309, 313, 315, 317, 321, 322, 323, 325, 331, 332, 334], "xxe": 0, "xx": 0, "string": [0, 6, 10, 18, 25, 28, 111, 117, 169, 170, 171, 245, 259, 266, 284, 300, 309, 322, 323, 334, 335], "tool": [1, 2, 3, 14, 18, 51, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 85, 86, 87, 88, 89, 90, 174, 186, 187, 188, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 283, 286, 292, 297, 298, 300, 301, 302, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 326, 327, 331, 334, 336, 337], "add": [1, 9, 14, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 74, 91, 113, 193, 211, 212, 288, 300, 302, 307, 315, 318, 322, 323, 324, 325, 335], "allometr": [1, 2, 33, 258, 300, 302, 335], "scale": [1, 2, 6, 18, 33, 61, 64, 70, 258, 281, 300, 302, 313, 325, 335], "pharmr": [1, 2, 3, 300, 305, 307, 310, 312, 314, 315, 316, 317, 323, 331, 334, 336], "command": [1, 300, 305, 307, 312, 314, 315, 316, 317, 318, 322, 323, 331, 336], "line": [1, 74, 300, 307, 312, 314, 315, 316, 317, 318, 322, 323, 331, 336], "To": [1, 2, 302, 304, 305, 307, 312, 314, 315, 317, 318, 321, 322, 323, 325, 331, 334, 335, 337], "initi": [1, 2, 15, 18, 23, 24, 33, 39, 42, 43, 46, 47, 48, 49, 76, 78, 79, 87, 95, 96, 97, 113, 181, 189, 191, 198, 200, 201, 202, 206, 207, 211, 212, 214, 218, 221, 222, 228, 229, 230, 234, 235, 237, 238, 258, 259, 268, 287, 300, 302, 307, 312, 313, 315, 317, 318, 320, 322, 323, 331, 334], "python": [1, 2, 299, 300, 302, 307, 309, 310, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 334, 335, 336], "r": [1, 2, 14, 40, 284, 299, 300, 304, 307, 309, 310, 312, 314, 315, 316, 317, 320, 321, 322, 323, 324, 331, 334, 335, 336], "read_model": [1, 171, 300, 307, 309, 312, 315, 317, 320, 322, 323, 331, 334, 337], "read_modelfit_result": [1, 300, 307, 312, 315, 317, 320, 321, 323, 331, 334], "run_allometri": [1, 300], "start_model": [1, 271, 307, 312, 315, 317, 323, 331, 334, 335], "start_model_result": [1, 307, 312, 315, 317, 323, 331, 334, 335], "re": [1, 2, 243, 246, 254, 255, 256, 260, 261, 269, 276, 283, 286, 299, 307, 312, 315, 317, 321, 323, 331, 333, 334, 335], "code": [1, 14, 18, 20, 74, 116, 117, 133, 140, 144, 145, 153, 167, 171, 211, 212, 241, 300, 306, 307, 312, 315, 316, 317, 318, 322, 323, 324, 326, 327, 331, 334, 337], "redefin": [1, 307, 312, 315, 317, 323, 331], "accordingli": [1, 307, 312, 315, 317, 323, 324, 331], "descript": [1, 2, 6, 18, 29, 271, 272, 273, 281, 297, 298, 300, 304, 307, 309, 312, 315, 317, 323, 331, 332, 334], "modelfitresult": [1, 2, 21, 244, 246, 247, 248, 249, 250, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 280, 300, 307, 312, 315, 317, 323, 331, 334], "allometric_vari": [1, 2, 33, 258, 259, 302], "wt": [1, 28, 33, 258, 261, 307, 332], "reference_valu": [1, 2, 33, 258, 302], "refer": [1, 30, 33, 74, 81, 152, 213, 256, 258, 259, 273, 300, 307, 318, 322, 324, 336, 337], "70": [1, 2, 33, 99, 258, 322, 330], "appli": [1, 2, 18, 34, 189, 191, 200, 211, 212, 228, 229, 230, 258, 300, 302, 303, 309, 313, 318, 322, 323, 330, 334, 335], "all": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 16, 18, 24, 25, 27, 28, 29, 33, 39, 44, 46, 48, 71, 74, 78, 81, 83, 91, 96, 97, 100, 102, 104, 105, 107, 110, 111, 114, 125, 128, 131, 132, 134, 135, 140, 144, 145, 149, 153, 156, 164, 166, 168, 176, 177, 184, 186, 187, 200, 205, 211, 213, 219, 226, 227, 228, 229, 230, 232, 233, 234, 235, 257, 258, 262, 263, 264, 266, 273, 275, 279, 281, 282, 284, 288, 293, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 315, 317, 318, 320, 321, 322, 323, 324, 326, 327, 328, 334, 335, 337], "cl": [1, 2, 4, 8, 24, 28, 33, 36, 39, 42, 47, 62, 74, 80, 82, 93, 111, 126, 128, 130, 135, 138, 149, 155, 158, 159, 160, 167, 168, 173, 176, 181, 198, 199, 203, 206, 207, 210, 214, 221, 225, 228, 229, 230, 258, 261, 307, 313, 315, 317, 320, 322, 324], "q": [1, 33, 47, 181, 258, 300, 322], "v": [1, 8, 24, 28, 33, 37, 62, 74, 82, 94, 111, 128, 133, 135, 158, 159, 160, 162, 163, 167, 168, 176, 193, 198, 199, 203, 206, 207, 214, 221, 222, 225, 258, 261, 305, 307, 313, 317, 320, 322, 324, 333, 335], "75": [1, 33, 258, 307, 312], "lower_bound": [1, 2, 33, 258, 302], "lower": [1, 2, 6, 23, 24, 33, 36, 49, 72, 95, 96, 97, 125, 131, 132, 179, 202, 204, 205, 211, 219, 232, 235, 258, 259, 302, 310, 315, 320, 322], "bound": [1, 23, 24, 33, 49, 73, 188, 205, 219, 228, 229, 230, 232, 238, 258, 275, 279, 282, 300, 302, 320], "upper_bound": [1, 2, 33, 258, 302], "upper": [1, 23, 24, 33, 36, 49, 95, 96, 97, 125, 131, 132, 179, 202, 205, 219, 232, 235, 258, 300, 302, 320, 322], "should": [1, 6, 23, 33, 36, 39, 42, 49, 124, 185, 200, 258, 263, 264, 266, 300, 302, 303, 304, 305, 307, 310, 313, 315, 317, 318, 319, 323, 327, 331, 334], "true": [1, 2, 6, 9, 10, 15, 18, 24, 33, 34, 40, 45, 54, 61, 71, 80, 83, 91, 95, 96, 97, 113, 117, 124, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 157, 173, 180, 187, 194, 196, 197, 200, 211, 212, 218, 233, 234, 235, 236, 237, 241, 246, 250, 258, 273, 274, 281, 300, 307, 309, 312, 315, 317, 320, 322, 323, 324, 325, 331, 332, 333, 334, 335, 337], "No": [1, 6, 227, 282, 283, 318, 323], "select": [1, 2, 185, 213, 228, 230, 272, 298, 300, 302, 307, 315, 317, 320, 323, 325, 331, 332, 334, 335], "see": [1, 2, 6, 8, 18, 36, 39, 227, 250, 258, 259, 261, 263, 264, 266, 267, 268, 302, 303, 304, 305, 307, 309, 310, 312, 315, 317, 318, 319, 320, 322, 323, 324, 327, 331, 334, 335], "about": [1, 2, 6, 303, 307, 309, 312, 314, 315, 317, 318, 322, 323, 331, 334, 335], "actual": [1, 2, 23, 160, 184, 307, 312, 315, 317, 318, 323, 331, 334], "minim": [1, 2, 300, 307, 312, 315, 317, 323, 331, 334, 335], "statu": [1, 2, 281, 300, 307, 310, 312, 315, 317, 318, 323, 331, 334], "time": [1, 2, 6, 7, 9, 10, 24, 28, 33, 42, 43, 74, 76, 83, 84, 99, 106, 107, 114, 124, 135, 156, 157, 158, 159, 160, 161, 167, 168, 171, 178, 198, 201, 213, 214, 216, 218, 221, 231, 259, 267, 300, 302, 307, 309, 312, 313, 315, 317, 318, 320, 321, 323, 324, 327, 330, 331, 333, 334, 335], "you": [1, 2, 304, 305, 307, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 331, 334, 335, 336, 337], "look": [1, 2, 28, 52, 111, 149, 307, 312, 315, 317, 323, 324, 331, 334, 335], "summary_model": [1, 2, 300, 307, 312, 315, 317, 323, 331, 334, 335], "tabl": [1, 2, 61, 167, 189, 227, 272, 281, 298, 299, 300, 305, 307, 308, 312, 313, 315, 317, 319, 322, 323, 328, 330, 331, 332, 333, 334, 335], "gener": [1, 2, 6, 32, 62, 65, 75, 79, 98, 161, 185, 186, 187, 188, 285, 287, 300, 302, 307, 309, 312, 313, 315, 316, 317, 322, 323, 326, 327, 331, 334, 335], "summarize_modelfit_result": [1, 2, 300, 307, 312, 315, 317, 323, 331, 334], "minimization_success": [1, 2, 246, 252, 259, 261, 263, 264, 266, 267, 268, 273, 281, 307, 312, 315, 317, 323, 331, 334, 335], "errors_found": [1, 2, 307, 312, 315, 317, 323, 331, 334], "pheno": [1, 8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 80, 82, 83, 84, 87, 93, 94, 95, 96, 97, 99, 102, 104, 106, 107, 108, 110, 111, 113, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 250, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 314, 320, 321, 322, 324], "phenobarb": [1, 167, 273, 322, 334], "scaled_model": [1, 2], "warnings_found": [1, 2, 307, 312, 315, 317, 323, 331, 334], "ofv": [1, 2, 54, 165, 248, 252, 263, 264, 266, 271, 272, 273, 281, 300, 307, 312, 315, 317, 323, 330, 331, 334], "aic": [1, 53, 252, 263, 264, 266, 300, 315, 317, 323, 331], "bic": [1, 2, 54, 252, 263, 264, 266, 300, 302, 307, 315, 317, 323, 331, 334, 335], "730": [1, 298, 313, 315, 319], "894727": [1, 313, 319], "740": [1, 87, 106, 157, 213, 309, 322], "752": 1, "248302": 1, "595": 1, "903528": 1, "605": 1, "617": 1, "257103": 1, "runtime_tot": [1, 2, 273, 281, 307, 312, 315, 317, 323, 331, 334], "estimation_runtim": [1, 2, 281, 307, 312, 315, 317, 323, 331, 334], "_estim": [1, 315, 323], "32": [1, 6, 63, 99, 104, 120, 250, 298, 299, 302, 307, 312, 319, 321, 322, 330, 333], "005818": [1, 313], "121955": 1, "44555": [1, 313], "111053": [1, 313], "201526": [1, 313], "78290": 1, "032606": 1, "029467": 1, "016418": [1, 313], "014030": 1, "summari": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 251, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 300, 307, 312, 313, 315, 317, 323, 328, 331, 334, 335], "predict": [1, 2, 14, 18, 88, 89, 112, 117, 129, 163, 164, 248, 249, 250, 271, 281, 300, 307, 308, 315, 317, 323, 330, 331, 334], "influenti": [1, 2, 248, 249, 272, 300, 307, 315, 317, 323, 331, 334], "individu": [1, 2, 6, 18, 41, 61, 62, 63, 65, 78, 88, 89, 111, 112, 118, 119, 120, 124, 129, 164, 165, 166, 176, 186, 187, 188, 237, 248, 249, 250, 271, 272, 281, 300, 302, 307, 315, 317, 318, 322, 323, 327, 330, 331, 334], "outlier": [1, 2, 249, 250, 272, 300, 307, 315, 317, 323, 331, 333, 334], "summary_individuals_count": [1, 2, 307, 315, 317, 323, 331, 334], "summarize_individuals_count_t": [1, 2, 300, 307, 315, 317, 323, 331, 334], "parent_model": [1, 2, 18, 300, 307, 312, 315, 317, 323, 331, 334], "inf_select": [1, 2, 272, 307, 315, 317, 323, 331, 334], "inf_param": [1, 2, 272, 307, 315, 317, 323, 331, 334], "out_ob": [1, 2, 272, 307, 315, 317, 323, 331, 334], "out_ind": [1, 2, 272, 307, 315, 317, 323, 331, 334], "inf_outli": [1, 2, 272, 307, 315, 317, 323, 331, 334], "differ": [1, 2, 3, 18, 25, 54, 271, 273, 280, 298, 299, 300, 303, 304, 307, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 334, 335, 337], "statist": [1, 6, 62, 65, 229, 307, 309, 313, 315, 317, 320, 323, 331, 334], "summary_individu": [1, 300, 307, 315, 317, 323, 331, 334], "summarize_individu": [1, 272, 300, 307, 315, 317, 323, 331, 334], "outlier_count": [1, 271, 307, 315, 317, 323, 331, 334], "dofv_vs_par": [1, 271, 307, 315, 317, 323, 331, 334], "id": [1, 2, 5, 6, 10, 16, 63, 81, 83, 84, 99, 102, 104, 106, 107, 110, 120, 124, 157, 167, 168, 171, 186, 213, 250, 299, 300, 302, 307, 309, 313, 315, 317, 319, 321, 322, 323, 324, 331, 333, 334], "nan": [1, 2, 102, 238, 298, 300, 307, 312, 313, 315, 317, 322, 323, 330, 331, 332, 334], "742852": 1, "000000": [1, 2, 49, 55, 56, 57, 66, 307, 313, 315, 317, 321, 323, 331, 334], "049275": 1, "042000": 1, "812738": 1, "10": [1, 2, 24, 42, 63, 78, 86, 99, 102, 104, 106, 120, 179, 201, 204, 205, 215, 219, 223, 227, 229, 250, 298, 299, 307, 309, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 328, 330, 331, 332, 333, 334, 335], "092658": 1, "55": [1, 6, 63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 323, 328, 330, 333, 334], "6": [1, 6, 63, 87, 99, 104, 120, 124, 157, 213, 250, 298, 299, 307, 309, 313, 315, 317, 318, 319, 321, 322, 323, 330, 331, 332, 333, 334], "535711": 1, "175743": 1, "56": [1, 63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 333], "764710": 1, "576072": 1, "57": [1, 63, 99, 104, 110, 120, 186, 250, 298, 299, 307, 312, 313, 319, 321, 322, 333], "975589": 1, "539779": 1, "58": [1, 63, 99, 104, 110, 120, 124, 186, 250, 298, 299, 313, 319, 321, 322, 332, 333], "194798": 1, "775689": 1, "59": [1, 63, 99, 102, 104, 107, 110, 118, 120, 124, 157, 186, 213, 250, 298, 299, 307, 309, 312, 313, 319, 321, 322, 323, 333], "11": [1, 2, 63, 85, 86, 88, 99, 102, 104, 106, 120, 250, 298, 299, 307, 313, 314, 315, 317, 318, 319, 321, 322, 323, 328, 330, 332, 333, 334, 335, 337], "175577": 1, "462889": 1, "predicted_dofv": [1, 271, 272, 307, 315, 317, 323, 331, 334], "predicted_residu": [1, 271, 272, 307, 315, 317, 323, 331, 334], "118": [1, 186, 300, 313], "fulli": [2, 335], "best": [2, 300, 307, 315, 317, 318, 323, 331, 334, 335], "dataset": [2, 10, 11, 12, 18, 32, 35, 50, 62, 71, 76, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 101, 102, 106, 109, 110, 115, 118, 119, 120, 124, 133, 152, 157, 161, 169, 179, 185, 192, 213, 227, 231, 236, 240, 259, 264, 299, 300, 302, 305, 313, 316, 317, 333, 334, 336], "combin": [2, 4, 78, 136, 137, 148, 151, 189, 191, 212, 226, 227, 265, 300, 302, 312, 313, 315, 318, 322, 331, 334, 335], "ruvsearch": [2, 259, 267, 269, 300, 335], "covsearch": [2, 261, 300, 335], "run_amd": [2, 300], "dataset_path": [2, 76, 322], "modeltyp": [2, 259, 302], "basic_pk": [2, 259, 302], "administr": [2, 5, 6, 16, 76, 98, 259, 268, 300, 302, 322, 334], "oral": [2, 7, 76, 198, 259, 268, 300, 302, 322, 334, 335], "search_spac": [2, 259, 266, 268, 300, 302, 323, 334, 335], "let": [2, 14, 18, 81, 300, 307, 313, 322, 324, 335], "categor": [2, 6, 36, 300, 307, 309, 313, 335], "sex": [2, 303, 307, 327, 335], "ag": [2, 6, 261, 307, 332, 335], "occas": [2, 42, 259, 264, 300, 302, 317, 322], "visi": [2, 317], "c": [2, 9, 37, 40, 193, 229, 301, 306, 312, 313, 317, 318, 322, 324, 331, 335], "specifi": [2, 6, 9, 28, 39, 47, 84, 95, 97, 169, 179, 181, 189, 191, 210, 211, 212, 227, 235, 242, 262, 300, 302, 304, 307, 312, 317, 318, 320, 321, 334, 335], "iiv": [2, 17, 22, 25, 30, 39, 42, 46, 48, 54, 78, 111, 126, 149, 176, 200, 226, 259, 263, 264, 266, 300, 302, 307, 317, 320, 322, 335], "we": [2, 303, 305, 307, 313, 314, 316, 318, 320, 322, 324, 327, 337], "our": [2, 303, 305, 306, 318, 327], "object": [2, 3, 4, 7, 9, 10, 14, 18, 19, 24, 25, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 64, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 91, 92, 95, 96, 97, 102, 112, 123, 125, 129, 131, 132, 133, 135, 158, 159, 160, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 292, 298, 300, 302, 304, 307, 309, 310, 312, 315, 317, 318, 322, 323, 324, 327, 331, 334, 335, 336, 337], "build": [2, 259, 301, 302, 310, 322, 335], "current": [2, 25, 38, 39, 59, 60, 74, 75, 85, 86, 88, 89, 90, 112, 123, 129, 139, 152, 158, 190, 196, 197, 198, 203, 214, 225, 227, 231, 245, 247, 261, 265, 268, 279, 281, 289, 299, 300, 302, 305, 307, 308, 313, 314, 316, 317, 318, 319, 320, 326, 327, 328, 330, 331, 332, 333, 334, 335], "pkpd": [2, 111, 259, 268, 300, 335], "drug_metabolit": [2, 259, 268, 334], "rout": [2, 259, 268, 334], "iv": [2, 76, 198, 259, 268, 300, 302, 334, 335], "ivor": [2, 76, 259, 268, 302, 334], "cl_init": [2, 76, 259, 302, 322], "popul": [2, 18, 28, 49, 87, 88, 89, 112, 129, 135, 238, 259, 281, 300, 302, 332], "clearanc": [2, 33, 76, 93, 259, 300, 302, 307, 317, 324], "01": [2, 17, 25, 36, 76, 211, 238, 259, 261, 302, 307, 322, 330, 332, 334], "vc_init": [2, 76, 259, 302, 322], "central": [2, 7, 8, 9, 28, 44, 47, 74, 76, 121, 135, 139, 141, 147, 158, 181, 198, 199, 201, 203, 206, 207, 210, 214, 218, 221, 222, 223, 225, 259, 302, 305, 310, 320, 322], "compart": [2, 6, 8, 9, 31, 34, 35, 37, 43, 44, 47, 100, 101, 114, 121, 122, 134, 139, 141, 172, 178, 181, 198, 201, 210, 218, 223, 259, 300, 302, 322, 323, 334, 335], "volum": [2, 33, 47, 76, 94, 259, 300, 302, 307, 317, 318], "mat_init": [2, 76, 259, 302, 322], "absorpt": [2, 76, 128, 139, 141, 150, 152, 198, 203, 214, 218, 221, 245, 259, 266, 271, 300, 302, 315, 317, 323, 334, 335], "b_init": [2, 259, 268, 334], "baselin": [2, 37, 40, 99, 104, 156, 190, 193, 259, 268, 300, 313, 334], "effect": [2, 36, 37, 39, 40, 54, 105, 111, 138, 149, 173, 176, 190, 193, 211, 252, 261, 300, 302, 310, 314, 318, 320, 322, 327, 332, 334, 335], "emax_init": [2, 259, 268, 334], "emax": [2, 37, 40, 46, 193, 334, 335], "ec50_init": [2, 259, 268, 334], "ec50": 2, "met_init": [2, 259, 268, 334], "equilibr": [2, 259, 334], "mfl": [2, 245, 259, 261, 271, 300, 302, 307, 323, 334], "depend": [2, 6, 18, 28, 32, 35, 62, 78, 81, 98, 101, 111, 136, 137, 148, 189, 191, 200, 211, 212, 216, 300, 304, 307, 309, 315, 324, 335, 337], "lloq_limit": [2, 259, 302], "quantif": [2, 6, 179, 204, 227, 259, 302], "lloq_method": [2, 259, 302], "method": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 38, 45, 167, 171, 196, 197, 227, 259, 262, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 299, 300, 302, 307, 310, 318, 320, 322, 327, 335, 337], "transform_blq": [2, 179, 204, 259, 300, 302, 322], "bodi": [2, 6, 10, 303, 309, 318, 327], "weight": [2, 6, 10, 90, 136, 137, 148, 151, 220, 239, 307, 309, 327, 331], "strict": [2, 246, 252, 259, 261, 263, 264, 266, 267, 268, 300, 307, 315, 317, 318, 323, 331, 334], "criteria": [2, 246, 252, 259, 272, 300, 302, 307, 315, 317, 323, 331, 334, 335], "rounding_error": [2, 246, 259, 261, 263, 264, 266, 267, 268, 281, 307, 315, 317, 323, 331, 334, 335], "sigdig": [2, 259, 261, 263, 264, 266, 267, 268, 307, 315, 317, 323, 331, 334, 335], "correspond": [2, 9, 14, 18, 209, 299, 318, 320, 333, 335], "datainfo": [2, 18, 32, 35, 84, 157, 169, 192, 240, 300, 335, 336], "file": [2, 10, 18, 52, 77, 103, 167, 169, 170, 171, 240, 241, 242, 253, 254, 274, 275, 276, 277, 279, 282, 283, 284, 286, 287, 300, 302, 305, 307, 312, 314, 315, 317, 318, 320, 321, 322, 323, 324, 326, 331, 334, 335, 336], "attribut": [2, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 278, 280, 281, 284, 285, 286, 287, 300, 304, 307, 309, 318, 321, 322, 323, 336], "elimin": [2, 128, 140, 144, 145, 153, 199, 206, 207, 222, 245, 300, 302, 323, 334, 335], "vc": [2, 47, 181, 307, 315, 317, 322], "mat": [2, 48, 299, 300, 301, 306, 307, 315, 317, 322, 324, 331], "proport": [2, 39, 136, 137, 148, 151, 185, 189, 191, 211, 212, 227, 300, 302, 322], "step": [2, 14, 15, 18, 26, 37, 38, 40, 45, 51, 175, 180, 193, 196, 197, 215, 261, 273, 280, 281, 300, 302, 305, 307, 312, 314, 315, 317, 318, 323, 327, 331, 334, 337], "foce": [2, 14, 15, 38, 45, 180, 196, 197, 300, 302, 312, 320, 322], "interact": [2, 14, 15, 38, 45, 167, 180, 196, 197, 300, 303, 312, 318, 320, 322, 327, 335, 337], "requir": [2, 74, 300, 302, 307, 314, 318, 330], "cmt": [2, 32, 35, 98, 101, 300], "dose": [2, 5, 6, 7, 8, 9, 16, 32, 34, 35, 43, 91, 98, 100, 101, 106, 107, 113, 117, 141, 152, 172, 178, 198, 213, 216, 300, 309], "creation": [2, 313, 323], "easili": [2, 320], "differenti": [2, 82, 320], "admid": [2, 5, 6, 7, 8, 9, 16, 28, 32, 35, 47, 74, 98, 101, 135, 158, 181, 198, 199, 203, 206, 207, 210, 214, 218, 221, 222, 225, 320, 322], "data": [2, 6, 18, 30, 85, 86, 87, 88, 89, 90, 104, 117, 167, 168, 171, 179, 189, 191, 194, 204, 212, 227, 259, 272, 298, 300, 309, 313, 317, 318, 320, 322, 324, 327, 334, 335], "well": [2, 62, 147, 227, 307, 312, 315, 317, 318, 322, 323, 330, 331, 334, 335, 336], "anoth": [2, 9, 18, 28, 139, 289, 322, 334], "assum": [2, 25, 39, 44, 275, 300, 313, 318, 324], "correct": [2, 10, 300, 318, 322, 334, 337], "connect": [2, 8, 18, 44, 105, 121, 211, 275, 277, 280, 288, 300, 302, 309, 318, 327, 334, 335, 336], "along": [2, 318], "wai": [2, 24, 39, 140, 144, 145, 153, 227, 300, 305, 309, 312, 318, 320, 335, 337], "specif": [2, 14, 18, 24, 51, 84, 185, 211, 243, 300, 302, 307, 309, 318, 320, 323, 327, 334, 335], "support": [2, 8, 14, 18, 28, 38, 39, 59, 60, 75, 76, 85, 86, 88, 89, 90, 112, 123, 129, 136, 137, 148, 196, 197, 198, 203, 214, 217, 227, 261, 267, 289, 300, 302, 307, 309, 310, 312, 316, 318, 320, 321, 322, 323, 324, 326, 329, 334, 335], "nonmem": [2, 18, 74, 75, 84, 118, 119, 120, 209, 265, 300, 301, 305, 314, 316, 320, 321, 322, 327, 335], "rate": [2, 6, 8, 9, 16, 40, 47, 152, 198, 203, 214, 218, 221, 300, 302, 335], "via": [2, 300, 302, 304, 305, 314, 316, 320, 322, 324, 335, 337], "exclud": [2, 117, 271, 315, 317, 318, 323, 335], "pleas": [2, 305, 314, 318, 320, 322, 334, 335, 337], "featur": [2, 245, 305, 307, 312, 315, 316, 317, 318, 331, 334, 336], "languag": [2, 116, 167, 245, 303, 307, 310, 318, 323, 334], "how": [2, 3, 14, 187, 259, 263, 266, 300, 302, 303, 305, 307, 309, 314, 315, 317, 318, 320, 322, 323, 324, 332, 336], "defin": [2, 8, 65, 117, 133, 139, 141, 150, 152, 160, 168, 227, 300, 307, 310, 318, 320, 333, 334, 335], "fo": [2, 14, 38, 196, 197, 300, 302, 312, 323, 327, 335], "zo": [2, 266, 271, 300, 302, 323, 335], "seq": [2, 302, 323, 335], "lagtim": [2, 203, 214, 245, 300, 323, 335], "ON": [2, 318, 323, 335], "transit": [2, 8, 122, 139, 210, 218, 245, 300, 302, 323, 335], "peripher": [2, 8, 47, 121, 181, 210, 245, 266, 271, 300, 302, 322, 323, 334, 335], "cat": [2, 36, 307, 335], "note": [2, 4, 6, 23, 35, 74, 75, 102, 111, 118, 119, 120, 211, 227, 273, 274, 275, 279, 282, 298, 309, 315, 317, 321, 322, 324, 332, 334], "overriden": 2, "ignor": [2, 9, 118, 119, 120, 167, 300, 302, 322, 324], "soon": 2, "explicitli": [2, 302, 317, 318], "stai": [2, 25], "vice": 2, "versa": 2, "instanc": [2, 138, 173, 307, 335], "none": [2, 6, 7, 8, 9, 10, 14, 15, 16, 18, 23, 24, 25, 26, 28, 29, 30, 33, 38, 39, 42, 45, 47, 49, 52, 62, 65, 76, 78, 79, 81, 85, 86, 87, 88, 89, 90, 103, 108, 111, 136, 137, 148, 155, 157, 164, 169, 176, 177, 179, 180, 181, 185, 186, 187, 188, 189, 191, 200, 204, 209, 211, 212, 215, 216, 226, 227, 228, 229, 230, 236, 240, 244, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 275, 276, 279, 280, 281, 282, 284, 287, 288, 292, 300, 302, 304, 309, 313, 315, 317, 320, 322, 323, 335], "null": [2, 309, 315, 317, 323, 335, 337], "yield": [2, 161, 184, 185], "workflow": [2, 3, 255, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 300, 314, 316, 318, 323, 327, 335], "want": [2, 303, 305, 307, 315, 316, 317, 318, 322, 323, 324, 326], "desir": [2, 282, 283], "subset": [2, 73, 186, 320, 334], "algorithm": [2, 261, 262, 263, 266, 271, 300, 302, 327, 335], "six": 2, "below": [2, 6, 179, 204, 227, 304, 305, 312, 315, 317, 318, 323, 331, 334], "detail": [2, 227, 258, 261, 263, 264, 266, 267, 268, 312, 318, 320, 323, 330, 331, 334, 335, 336], "regard": [2, 318, 323, 334], "subhead": 2, "distribut": [2, 17, 22, 25, 42, 47, 62, 65, 78, 128, 160, 166, 181, 184, 186, 187, 188, 226, 230, 264, 289, 298, 300, 302, 313, 318, 323, 330, 334, 335], "drug": [2, 8, 44, 147, 217, 300, 327, 335], "metabolit": [2, 8, 44, 147, 300, 335], "term": [2, 189, 300, 315, 318], "keep": [2, 14, 23, 179, 185, 263, 275, 300, 303, 310, 315, 318], "iov": [2, 25, 42, 111, 126, 149, 177, 264, 300, 302, 322, 330, 335], "explain": [2, 227, 307, 318, 327, 335], "ruv": [2, 200, 302], "power": [2, 36, 211, 227, 302, 318, 322, 327, 328, 330, 331], "vari": [2, 156, 216, 267, 300, 302, 331], "identifi": [2, 6, 30, 307, 309, 315, 318, 330, 335], "option": [2, 6, 9, 14, 18, 25, 36, 39, 42, 51, 54, 76, 78, 85, 86, 88, 89, 90, 111, 185, 227, 245, 252, 268, 275, 279, 280, 282, 293, 298, 300, 302, 307, 315, 317, 318, 320, 322, 323, 334, 336, 337], "reduced_stepwis": [2, 271, 300, 323, 335], "iiv_strategi": [2, 263, 266, 300, 302, 315, 323, 335], "absorption_delai": [2, 266, 300, 323, 335], "rank_typ": [2, 252, 263, 264, 266, 302, 315, 317, 323, 335], "mix": [2, 42, 54, 145, 207, 252, 300, 310, 314, 317, 320, 323, 327, 335], "cutoff": [2, 216, 248, 249, 250, 252, 263, 264, 266, 300, 302, 315, 317, 323, 335], "implement": [2, 14, 37, 190, 193, 275, 277, 279, 282, 318, 320, 327, 334, 335], "expect": [2, 14, 54, 62, 65, 303, 304, 318, 330], "pd": [2, 6, 15, 37, 40, 46, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 78, 81, 85, 86, 87, 88, 89, 90, 98, 99, 101, 102, 104, 106, 107, 109, 111, 115, 120, 124, 127, 161, 162, 163, 164, 165, 166, 169, 185, 186, 187, 188, 193, 237, 238, 248, 249, 250, 252, 270, 271, 272, 273, 278, 281, 300, 309, 334, 335], "brute_forc": [2, 263, 300, 315], "fullblock": [2, 263, 266, 300, 315, 323], "tri": [2, 302, 323], "list_of_paramet": [2, 39, 42, 264, 302, 317], "random": [2, 3, 13, 17, 18, 22, 25, 26, 42, 54, 62, 65, 79, 81, 111, 126, 130, 133, 149, 184, 186, 187, 188, 215, 300, 302, 310, 313, 317, 322, 330, 337], "group": [2, 24, 30, 161, 164, 185, 267, 302, 316, 331], "p_valu": [2, 267, 302, 331], "05": [2, 47, 55, 56, 57, 58, 66, 67, 68, 69, 181, 298, 302, 307, 321, 322, 330, 332], "skip": [2, 267, 302, 307, 331], "p_forward": [2, 261, 302, 307], "p_backward": [2, 261, 302, 307], "max_step": [2, 261, 302, 307], "scm": [2, 261, 300, 307, 327, 329], "forward": [2, 261, 300, 302, 307, 332], "backward": [2, 261, 273, 300, 302, 307, 332], "variou": [2, 74, 227, 271, 272, 281, 300, 302, 303, 305, 307, 310, 312, 315, 316, 317, 323, 327, 331, 334], "access": [2, 307, 309, 312, 315, 317, 318, 320, 322, 323, 324, 331, 334, 335, 337], "json": [2, 10, 254, 256, 274, 284, 300, 302, 307, 309, 312, 315, 317, 323, 331, 334, 335], "format": [2, 18, 75, 300, 302, 304, 307, 310, 312, 314, 315, 316, 317, 318, 320, 322, 323, 326, 331, 334], "summary_tool": [2, 300, 307, 312, 315, 317, 323, 331, 334], "candid": [2, 266, 300, 302, 307, 312, 331, 334, 335], "compar": [2, 252, 298, 300, 307, 312, 327, 331, 334, 335], "rank": [2, 252, 263, 264, 266, 300, 302, 307, 331, 334, 335], "selected_model": 2, "base": [2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 42, 98, 252, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 306, 307, 313, 315, 317, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 334], "inst": [2, 323, 335], "1556": 2, "878871": 2, "best_ruvsearch_1": [2, 331], "1756": 2, "429308": 2, "iovsearch_run1": [2, 317], "1819": 2, "700791": 2, "1818": 2, "049718": 2, "covsearch_run3": [2, 307], "exp": [2, 28, 36, 39, 167, 228, 229, 230, 261, 307, 322, 324], "1820": 2, "703712": 2, "dofv": [2, 248, 249, 271, 298, 299, 300, 307, 328, 330, 331], "n_param": [2, 307, 317, 331, 334], "d_param": [2, 307, 317, 331, 334], "199": 2, "550437": 2, "63": [2, 99, 124, 321, 322, 328, 330], "271484": 2, "651073": 2, "653994": 2, "base_model": [2, 252], "qp1": [2, 47, 181, 300, 322], "vp1": [2, 47, 181, 322], "iivsearch_run1": 2, "iivsearch_run2": 2, "iivsearch_run3": 2, "iivsearch_run4": 2, "iivsearch_run5": 2, "iivsearch_run6": 2, "iivsearch_run7": 2, "iivsearch_run8": 2, "iivsearch_run9": 2, "iivsearch_run10": 2, "iivsearch_run11": 2, "iivsearch_run12": 2, "iivsearch_run13": 2, "iivsearch_run14": 2, "iivsearch_run15": 2, "iivsearch_run16": 2, "iivsearch_run17": 2, "iivsearch_run18": 2, "iivsearch_run19": 2, "prop_error": [2, 322], "iovsearch_run2": [2, 317], "iovsearch_run3": [2, 317], "iovsearch_run4": [2, 317], "iovsearch_run5": [2, 317], "iovsearch_run6": [2, 317], "covsearch_run1": [2, 307], "covsearch_run2": [2, 307], "covsearch_run4": [2, 307], "fals": [2, 6, 9, 13, 14, 17, 18, 22, 23, 24, 30, 34, 36, 38, 40, 44, 49, 54, 61, 71, 73, 80, 83, 91, 95, 96, 97, 113, 117, 124, 125, 131, 132, 135, 136, 137, 138, 144, 145, 148, 149, 151, 152, 153, 154, 155, 173, 185, 187, 194, 202, 205, 211, 218, 219, 232, 234, 235, 237, 238, 240, 245, 246, 250, 259, 273, 274, 276, 281, 284, 292, 299, 307, 309, 312, 320, 322, 324, 325, 332, 333], "879288": 2, "1211": [2, 307], "089361": 2, "18": [2, 6, 63, 86, 99, 104, 120, 250, 298, 299, 307, 315, 317, 319, 321, 322, 328, 330, 333], "1452": 2, "643221": 2, "879287": 2, "17": [2, 63, 85, 86, 88, 89, 99, 102, 104, 120, 124, 157, 213, 250, 298, 299, 307, 309, 315, 317, 318, 319, 321, 322, 323, 328, 330, 333, 334], "879291": 2, "1141": 2, "328590": 2, "089360": 2, "15": [2, 63, 86, 99, 104, 120, 250, 298, 299, 307, 315, 317, 318, 319, 321, 322, 332, 333], "643216": 2, "879398": 2, "089417": 2, "643215": 2, "1549": 2, "085054": 2, "879290": 2, "085159": 2, "1762": 2, "173623": 2, "1809": 2, "825696": 2, "1758": 2, "944210": 2, "1803": 2, "746869": 2, "1694": 2, "621631": 2, "16": [2, 6, 63, 86, 99, 104, 120, 212, 230, 250, 298, 299, 307, 315, 317, 318, 319, 321, 322, 328, 330, 331, 332, 333, 334], "408446": 2, "189053": 2, "192655": 2, "pop_cl_estim": [2, 307, 312, 317, 331], "52": [2, 63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 323, 332, 333], "38": [2, 63, 85, 88, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 333], "26": [2, 63, 99, 104, 120, 250, 298, 299, 307, 317, 319, 321, 322, 330, 332, 333], "1745": 2, "79": [2, 330], "1957": 2, "27": [2, 63, 99, 104, 120, 124, 250, 298, 299, 307, 315, 317, 319, 321, 322, 323, 331, 333, 334], "2704": 2, "34": [2, 63, 89, 99, 104, 120, 124, 250, 298, 299, 307, 319, 321, 322, 328, 330, 333], "25": [2, 63, 85, 88, 89, 99, 104, 107, 120, 157, 250, 298, 299, 307, 309, 315, 319, 321, 322, 323, 328, 330, 331, 333], "9013": 2, "30": [2, 63, 99, 104, 120, 250, 298, 299, 307, 312, 315, 317, 318, 319, 321, 322, 323, 328, 330, 333], "1949": 2, "71": [2, 307, 331], "0804": 2, "02": [2, 307, 330, 332, 334, 335], "96": [2, 107, 230, 298, 307, 322, 323], "07": [2, 55, 56, 57, 58, 66, 67, 68, 69, 298, 307, 315, 317, 321, 330, 332], "9011": 2, "88": 2, "1948": 2, "39": [2, 63, 99, 104, 120, 250, 298, 299, 307, 317, 319, 321, 322, 330, 331, 332, 333], "65": [2, 6, 307], "81": [2, 312, 315, 321], "2696": 2, "61": [2, 332], "0104": 2, "87": 2, "31": [2, 63, 85, 88, 99, 104, 120, 124, 250, 298, 299, 307, 319, 321, 322, 328, 330, 333, 335], "97": [2, 298, 307], "49": [2, 63, 99, 104, 120, 250, 298, 299, 319, 321, 322, 333], "1966": 2, "77": [2, 307], "2524": 2, "9690": 2, "50": [2, 37, 40, 63, 99, 104, 120, 193, 250, 298, 299, 319, 321, 322, 323, 328, 330, 333, 334], "0467": 2, "1553": 2, "85": 2, "4521": 2, "95": [2, 62, 298, 313], "5759": 2, "4243": 2, "09": [2, 39, 46, 48, 191, 200, 212, 307, 315, 322, 323, 324, 328, 334], "3609": 2, "5790": 2, "74": 2, "4290": 2, "29": [2, 63, 85, 88, 89, 99, 104, 120, 227, 229, 250, 298, 299, 301, 307, 315, 318, 319, 321, 322, 330, 333, 334], "2453": [2, 331], "pop_cl_s": 2, "pop_cl_rs": 2, "pop_clage_rs": 2, "pop_clsex_estim": [2, 307], "pop_clsex_s": 2, "026461": 2, "pop_clsex_rs": 2, "pop_vcage_estim": [2, 307], "008529": 2, "pop_vcage_s": 2, "pop_vcage_rs": 2, "pop_vcsex_estim": [2, 307], "pop_vcsex_s": 2, "085225": 2, "pop_vcsex_rs": 2, "40": [2, 63, 99, 102, 104, 120, 124, 157, 179, 213, 250, 298, 299, 309, 312, 319, 321, 322, 332, 333], "dbic": [2, 300, 315, 317, 323, 334], "161841": 2, "161837": 2, "621938": 2, "202851": 2, "202856": 2, "074229": 2, "307": 2, "175736": 2, "315": 2, "756711": 2, "328": 2, "628089": 2, "372": [2, 6], "646103": 2, "376": 2, "936563": 2, "385": [2, 315], "517482": 2, "580918": 2, "077247": 2, "786787": 2, "786682": 2, "400105": 2, "105929": 2, "43": [2, 63, 99, 104, 120, 250, 298, 299, 307, 312, 319, 321, 322, 332, 333], "027102": 2, "453856": 2, "775557": 2, "807676": 2, "142937": 2, "358728": 2, "summary_error": [2, 307, 312, 315, 317, 323, 334], "summarize_error": [2, 300, 307, 312, 315, 317, 323, 334], "datafram": [2, 6, 15, 18, 24, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 78, 81, 85, 86, 88, 89, 90, 99, 102, 104, 161, 162, 163, 164, 166, 169, 185, 186, 187, 188, 237, 248, 249, 250, 252, 270, 271, 272, 273, 278, 281, 284, 300, 309, 327], "messag": [2, 278, 300, 302, 307, 312, 315, 317, 323, 334], "index": [2, 10, 18, 24, 25, 28, 38, 51, 62, 65, 72, 73, 107, 124, 175, 196, 197, 270, 273, 284, 299, 300, 313, 314, 320, 322, 332, 337], "categori": [2, 6, 18, 36, 42, 168, 270, 302, 307, 312, 315, 317, 323, 334, 335], "error_no": [2, 307, 312, 315, 317, 323, 334], "plot": [2, 162, 163, 164, 165, 166, 300, 313, 319, 327], "found": [2, 8, 24, 111, 270, 288, 298, 299, 300, 305, 308, 311, 313, 314, 315, 317, 318, 320, 321, 323, 330, 331, 335, 336, 337], "report": [2, 242, 300, 305, 316, 327], "panda": [2, 6, 10, 300, 309, 310, 327], "io": [2, 305, 310, 314], "style": 2, "styler": 2, "0x7fcb28bccf40": 2, "nbsp": 2, "rse": [2, 298, 321, 335], "pop_cl": [2, 4, 298, 322], "pop_vc": [2, 322], "116": 2, "1930": 2, "pop_qp1": [2, 322], "0001": 2, "pop_vp1": [2, 322], "0000": 2, "power1": 2, "6255": 2, "pop_vcag": 2, "0085": 2, "iiv_cl": [2, 17, 22, 25, 322, 324], "2298": 2, "iiv_cl_iiv_vc": [2, 322], "1802": 2, "iiv_vc": [2, 322], "3218": 2, "omega_iov_1": 2, "1347": [2, 307], "omega_iov_1_2": 2, "9914": 2, "omega_iov_2": 2, "0789": 2, "sigma1": 2, "4527": 2, "alt": [2, 162, 163, 164, 165, 166, 298, 313, 319], "layerchart": [2, 298, 319], "page": [3, 299, 301, 305, 312, 323, 324], "public": [3, 310], "modul": [3, 8, 300, 304, 309, 320, 322, 326, 337], "class": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 309, 314, 318, 320, 322, 335], "relat": [3, 275, 279, 280, 282, 300, 303, 332], "statement": [3, 4, 8, 18, 33, 34, 36, 37, 39, 41, 42, 46, 47, 48, 74, 135, 158, 159, 160, 174, 176, 181, 182, 189, 190, 191, 193, 198, 199, 200, 203, 206, 207, 210, 211, 212, 214, 216, 218, 221, 222, 225, 227, 228, 229, 230, 239, 246, 300, 302, 307, 318, 322, 327], "transform": [3, 18, 34, 166, 189, 191, 194, 212, 227, 228, 229, 230, 300, 302, 314, 323, 324, 330, 336], "manipul": [3, 24, 309, 316, 322, 324, 336], "built": [3, 158, 247, 302, 305, 316], "run": [3, 78, 164, 166, 179, 211, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 279, 286, 298, 299, 300, 308, 314, 316, 318, 319, 321, 326, 327, 330, 332, 333, 337], "packag": [3, 302, 310, 314, 316, 318, 325, 337], "express": [4, 5, 7, 8, 9, 10, 16, 17, 22, 25, 28, 39, 59, 60, 62, 87, 92, 100, 112, 114, 123, 129, 133, 155, 189, 191, 201, 204, 211, 212, 223, 224, 300, 302, 303, 318, 320, 327, 333], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 303, 305, 316, 318, 320], "represent": [4, 245, 287, 309, 314, 324], "togeth": [4, 25, 203, 214, 305, 310, 313, 319, 331, 337], "sympi": [4, 6, 8, 17, 22, 25, 28, 33, 62, 87, 108, 111, 123, 133, 134, 136, 137, 148, 155, 189, 191, 200, 201, 204, 211, 212, 216, 223, 310, 320, 327], "str": [4, 6, 7, 8, 10, 17, 18, 22, 23, 25, 28, 30, 33, 36, 37, 38, 39, 40, 41, 42, 45, 47, 49, 54, 62, 75, 76, 80, 81, 83, 87, 92, 96, 103, 108, 111, 116, 126, 127, 128, 130, 133, 136, 137, 138, 148, 149, 155, 158, 161, 165, 166, 169, 170, 171, 173, 176, 177, 179, 181, 185, 189, 190, 191, 193, 195, 196, 200, 201, 204, 208, 209, 211, 212, 216, 217, 223, 226, 227, 228, 229, 230, 233, 234, 240, 241, 243, 244, 245, 246, 247, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 297, 300], "expr": [4, 9, 25, 28, 33, 37, 40, 92, 123, 155, 190, 193, 201, 223, 224], "free_symbol": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28], "free": [4, 5, 6, 7, 8, 16, 17, 18, 22, 25, 28, 303, 318, 327], "hand": [4, 8, 62], "side": [4, 8, 62, 194], "eta_cl": [4, 39, 42, 322, 324], "rhs_symbol": [4, 8, 27], "classmethod": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 276, 278, 280, 284, 285, 287], "from_dict": [4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 276, 278, 284], "replac": [4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 35, 52, 184, 185, 195, 213, 225, 227, 285, 287, 288, 300, 302, 309, 310, 322, 324, 334], "kwarg": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 30, 38, 196, 243, 252, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 282, 283, 284, 285, 287, 300], "sub": [4, 5, 7, 8, 13, 16, 17, 22, 25, 27, 28, 320], "substitut": [4, 5, 7, 8, 16, 17, 22, 25, 27, 28, 318, 322], "dict": [4, 5, 6, 10, 16, 17, 22, 24, 25, 28, 51, 64, 85, 86, 88, 89, 90, 95, 97, 100, 113, 114, 166, 183, 202, 205, 213, 219, 235, 275, 276, 279, 282, 283, 286, 287, 293, 309, 320], "old": [4, 28, 183, 300, 330], "new": [4, 6, 9, 10, 14, 17, 22, 23, 24, 25, 26, 28, 29, 34, 39, 42, 46, 48, 49, 75, 79, 80, 91, 95, 96, 97, 124, 183, 184, 185, 189, 191, 200, 202, 204, 208, 211, 212, 234, 235, 238, 288, 289, 302, 303, 305, 307, 309, 318, 322, 323, 326, 330, 331, 335], "pair": [4, 5, 8, 16, 17, 22, 25, 28, 36, 72, 213, 271, 302], "return": [4, 6, 7, 8, 9, 10, 15, 18, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 282, 284, 287, 289, 292, 293, 300, 318, 322, 334], "updat": [4, 9, 10, 18, 24, 28, 201, 223, 237, 238, 240, 300, 302, 305, 316, 318, 322, 323, 324, 327, 331, 336, 337], "b": [4, 37, 40, 127, 190, 193, 318, 323, 335], "to_dict": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 276, 278, 284], "amount": [5, 6, 7, 8, 16, 37, 113, 300, 309, 320, 323], "int": [5, 8, 9, 16, 28, 33, 38, 44, 51, 54, 62, 65, 73, 79, 106, 108, 111, 118, 119, 121, 122, 136, 137, 148, 175, 179, 185, 186, 187, 188, 189, 191, 196, 197, 200, 210, 211, 212, 215, 216, 218, 260, 261, 265, 267, 270, 281], "amt": [5, 7, 8, 10, 16, 28, 33, 47, 74, 83, 84, 99, 107, 113, 135, 157, 158, 159, 160, 167, 168, 181, 198, 199, 203, 206, 207, 210, 213, 214, 218, 221, 222, 225, 309, 320, 322, 324], "dictionari": [5, 10, 14, 16, 17, 22, 24, 25, 29, 85, 86, 88, 89, 90, 100, 105, 114, 185, 202, 205, 219, 275, 276, 279, 282, 283, 284, 286, 287, 293, 320], "unknown": [6, 155, 309], "unit": [6, 18, 133], "ratio": [6, 261, 267, 300, 302, 309, 331], "datatyp": [6, 18, 169], "float64": [6, 10, 61, 68, 69, 72, 87, 88, 89, 90, 107, 124, 247, 309, 320, 321, 322], "descriptor": [6, 10, 18], "immut": [6, 10, 13, 15, 18, 23, 24, 25, 27, 28, 29, 30, 280, 284, 285, 287, 300, 322], "colum": 6, "measur": [6, 303, 309, 318], "bool": [6, 9, 18, 23, 30, 33, 34, 36, 40, 44, 49, 54, 61, 71, 73, 80, 83, 91, 113, 117, 124, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 185, 187, 200, 211, 212, 218, 237, 238, 240, 241, 246, 258, 259, 273, 274, 276, 281, 284, 292], "discret": [6, 309, 317], "union": [6, 108, 111, 136, 137, 148, 166, 189, 191, 200, 201, 211, 212, 216, 223], "tupl": [6, 7, 8, 25, 105, 161, 185, 285, 293], "label": [6, 300], "bar": [6, 313], "dtype": [6, 10, 61, 64, 68, 69, 72, 73, 87, 88, 89, 90, 106, 107, 120, 124, 247, 309, 321, 322], "nomin": [6, 309], "ordin": [6, 309], "rang": [6, 81, 284, 335], "na": [6, 227], "int8": 6, "sign": [6, 229, 318], "bit": 6, "128": 6, "127": [6, 315], "int16": 6, "768": 6, "767": 6, "int32": [6, 10, 309], "147": 6, "483": 6, "648": 6, "647": [6, 315], "int64": [6, 120, 322], "64": 6, "223": [6, 308], "036": 6, "854": 6, "775": 6, "808": 6, "807": 6, "uint8": 6, "unsign": 6, "256": [6, 328], "uint16": 6, "535": 6, "uint32": 6, "294": 6, "967": 6, "295": 6, "uint64": 6, "446": 6, "744": [6, 87, 106, 157, 213, 309, 321, 322], "073": 6, "709": 6, "551": 6, "615": [6, 328], "float16": 6, "binari": [6, 318], "float": [6, 23, 33, 39, 46, 48, 49, 53, 54, 72, 73, 76, 166, 179, 188, 204, 211, 216, 227, 248, 249, 250, 252, 258, 259, 261, 263, 264, 266, 267, 268, 281, 300], "10\u2074": 6, "ye": 6, "float32": 6, "10\u00b3\u2078": 6, "10\u00b3\u2070\u2078": 6, "float128": 6, "10\u2074\u2079\u00b3\u00b2": 6, "nm": [6, 84, 231, 300, 302, 320], "tran": [6, 84, 231, 300, 302, 320], "date": [6, 81, 84, 231, 300, 302, 318, 337], "common": [6, 36, 65, 293, 318, 336], "birth": 6, "human": [6, 284, 327], "lean": 6, "mass": 6, "fat": 6, "plasma": [6, 309, 327], "concentr": [6, 40, 102, 309, 327], "substanc": 6, "blood": 6, "subject": [6, 14, 99, 110, 272, 309, 318], "uniqu": [6, 30, 52, 80, 185, 275, 289, 300, 302, 322, 335], "interv": [6, 309, 310], "ration": 6, "max": [6, 36, 37, 40, 193, 206, 207, 298, 322, 334], "idv": [6, 10, 124, 162, 216, 309, 330], "independ": [6, 8, 309, 318, 320, 322, 325, 330, 335], "dv": [6, 10, 28, 74, 83, 84, 99, 108, 111, 124, 135, 136, 137, 148, 157, 158, 163, 164, 167, 168, 171, 189, 191, 200, 204, 206, 207, 211, 212, 213, 216, 227, 267, 300, 309, 320, 322, 324, 333], "dvid": [6, 18, 44, 92, 108, 111, 136, 137, 148, 189, 191, 195, 200, 211, 212, 216, 320, 328, 330, 331, 334], "infus": [6, 152, 214, 221, 300, 322], "addit": [6, 36, 39, 51, 54, 80, 91, 136, 137, 148, 151, 189, 191, 212, 227, 300, 302, 307, 309, 312, 318, 330, 331, 335], "interdos": 6, "ss": 6, "steadi": [6, 300, 334], "state": [6, 24, 36, 300, 318, 332, 334, 335], "event": [6, 32, 98, 109, 213, 231, 300, 303, 318], "mdv": [6, 115, 300], "miss": [6, 99, 104, 300], "yet": [6, 335], "exactli": 6, "lloq": [6, 179, 204, 227, 259, 300, 302, 322], "blq": [6, 179, 204, 227, 267, 300], "unkown": 6, "hasn": 6, "custom": [6, 36, 39, 42, 200, 302, 318, 327], "physic": [6, 133, 303, 309, 318], "recogn": [6, 209, 303, 318, 324], "without": [6, 9, 59, 60, 85, 86, 88, 89, 90, 112, 123, 129, 185, 277, 298, 300, 302, 305, 310, 318, 320], "static": [6, 10, 18, 285], "convert_datatype_to_pd_dtyp": 6, "convert": [6, 10, 15, 25, 28, 31, 75, 135, 160, 218, 284, 300, 302, 335], "convert_pd_dtype_to_datatyp": 6, "get_all_categori": 6, "is_categor": 6, "check": [6, 18, 23, 25, 71, 72, 73, 108, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 300, 320, 322, 324, 334, 335, 337], "is_numer": 6, "col1": 6, "col2": 6, "is_integ": 6, "integr": [6, 300, 302, 327], "properti": [6, 14, 17, 22, 23, 24, 26, 29, 318, 320], "lag_tim": [7, 9, 300], "bioavail": [7, 9, 34, 100, 172, 300, 335], "compartment": [7, 8, 31, 300, 302, 320], "system": [7, 8, 9, 28, 31, 59, 60, 62, 82, 85, 86, 88, 89, 90, 112, 113, 123, 129, 139, 141, 142, 143, 146, 147, 150, 152, 201, 223, 225, 279, 300, 302, 304, 305, 316, 318, 320, 324], "lag": [7, 9, 43, 114, 178, 300], "enter": [7, 318], "fraction": [7, 188, 298, 313], "bolu": [7, 8, 28, 47, 74, 135, 158, 181, 198, 199, 203, 206, 207, 210, 218, 222, 225, 300, 302, 320, 322], "comp": [7, 8, 300], "a_centr": [7, 8, 28, 37, 74, 82, 113, 135, 158, 193, 201, 206, 207, 212, 222, 320, 322], "depot": [7, 8, 9, 44, 139, 147, 198, 214, 218, 300, 322, 323, 335], "alag": [7, 300], "a_depot": [7, 8], "sorted_dos": 7, "locat": [7, 335], "builder": [8, 9, 287, 288], "graph": [8, 287, 302, 305, 334], "od": [8, 28, 31, 48, 59, 60, 62, 85, 86, 88, 89, 90, 112, 113, 123, 129, 139, 141, 142, 143, 146, 150, 152, 201, 209, 223, 225, 300, 302], "descib": 8, "compartmentalsystembuild": 8, "cb": [8, 9], "add_compart": [8, 9], "add_flow": [8, 9], "k12": [8, 218, 335], "k21": [8, 335], "vector": [8, 17, 134, 186, 187, 188, 299, 313, 320], "load_example_model": [8, 10, 15, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 59, 60, 61, 62, 63, 64, 65, 70, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 102, 104, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 250, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 300, 314, 321, 322], "pprint": [8, 123], "ode_system": [8, 28, 37, 47, 181, 198, 199, 203, 206, 207, 210, 214, 218, 221, 222, 225, 300, 320, 322], "central_compart": 8, "outward": 8, "flow": [8, 9, 44, 47, 139, 147, 287, 318, 323], "compartment_nam": 8, "compartmental_matrix": [8, 320], "matrix": [8, 14, 17, 25, 55, 56, 57, 58, 62, 65, 66, 67, 68, 69, 72, 134, 186, 187, 188, 223, 281, 299, 300, 302, 313, 320, 322, 335], "set_first_order_absorpt": [8, 48, 203, 214, 221, 300, 322], "dosing_compart": 8, "receiv": [8, 318], "equat": [8, 62, 82, 320, 322], "zero_order_input": 8, "zero": [8, 9, 73, 134, 150, 152, 153, 160, 201, 214, 221, 222, 223, 300, 317, 322, 323, 325, 335], "set_zero_order_absorpt": [8, 198, 203, 214, 300, 322, 337], "atom": 8, "http": [8, 299, 309, 310, 313, 314, 318, 331], "doc": [8, 305], "org": [8, 299, 301, 309, 313, 318, 331], "latest": [8, 300, 310, 314], "core": [8, 314, 320], "html": [8, 242, 310, 318], "basic": [8, 76, 77, 284, 300, 309, 318, 324, 335, 336], "find_compart": [8, 9, 37], "its": [8, 23, 28, 73, 81, 160, 271, 300, 302, 309, 310, 314, 316, 318, 320, 322, 334, 335, 337], "find_depot": 8, "out": [8, 25, 40, 71, 238, 300, 318, 320, 326, 337], "outflow": 8, "unidirect": [8, 44, 139], "find_peripheral_compart": 8, "perihper": 8, "associ": [8, 303, 317, 318], "find_transit_compart": 8, "chain": 8, "singl": [8, 10, 23, 25, 184, 226, 231, 244, 265, 270, 273, 275, 300, 302, 310, 313, 318, 334, 335], "distinguish": [8, 318], "get_bidirect": 8, "bidirect": 8, "interest": [8, 62, 303, 307, 318, 327], "get_compartment_inflow": 8, "go": [8, 136, 137, 148, 265, 273, 300, 309, 318, 322], "inflow": 8, "get_compartment_outflow": 8, "get_flow": 8, "destin": [8, 9, 240, 241, 275, 279, 282, 302], "ka": [8, 9, 41, 198, 214, 300, 317, 322], "get_n_connect": 8, "compartmentalsystem": [9, 28, 300, 320], "newli": [9, 25, 317], "move_dos": 9, "move": [9, 238, 300], "remove_compart": 9, "remove_flow": 9, "set_bioavail": [9, 172], "set_dos": 9, "previou": [9, 23, 25, 28, 43, 78, 106, 135, 198, 214, 218, 221, 259, 272, 292, 300, 302, 318, 323], "exist": [9, 10, 28, 35, 36, 51, 52, 77, 80, 103, 106, 227, 275, 276, 277, 300, 302, 304, 309, 317, 334, 335], "argument": [9, 38, 85, 86, 88, 89, 90, 111, 196, 243, 252, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 280, 285, 300, 302, 335, 337], "set_input": 9, "set_lag_tim": [9, 300], "force_absolute_path": 10, "sequenc": [10, 15, 24, 25, 28, 78], "metadata": [10, 275, 276, 279, 282, 283, 286, 300], "columninfo": 10, "regexp": 10, "descriptorix": 10, "dv_column": 10, "id_column": [10, 81], "idv_column": 10, "apgr": [10, 28, 33, 36, 74, 83, 84, 99, 104, 117, 135, 138, 157, 158, 159, 160, 167, 168, 213, 233, 309, 313, 320, 322, 324, 330], "fa1": [10, 83, 84, 99, 157, 167, 168, 213, 309, 322], "fa2": [10, 83, 84, 99, 157, 167, 168, 213, 309, 322], "example_model": 10, "dta": [10, 167, 322, 324], "typeix": 10, "from_json": 10, "get_dtype_dict": 10, "read_json": 10, "read": [10, 169, 170, 171, 253, 254, 259, 274, 275, 276, 279, 282, 283, 286, 300, 304, 309, 314, 318, 321, 326, 327, 329, 335, 336], "set_column": 10, "col": 10, "set_dv_column": 10, "set_id_column": 10, "set_idv_column": 10, "set_typ": 10, "broadcast": 10, "to_json": [10, 284, 309], "recover": 12, "issu": [12, 21, 300, 305, 316, 337], "hashabl": 13, "level": [13, 17, 22, 25, 29, 30, 111, 149, 227, 300, 302, 309, 316, 322, 327, 332, 335, 336], "variabilitylevel": 13, "parameter_nam": [13, 25, 96, 232, 234, 300, 324], "definit": [13, 14, 18, 26, 28, 63, 187, 188, 250, 300, 302, 307, 313, 318, 320, 335], "varianc": [13, 17, 22, 25, 61, 62, 65, 184, 200, 238, 315, 320, 335], "abstract": [13, 27, 279, 286, 299, 301, 310, 316, 320], "evalf": [13, 17, 22], "get_covari": [13, 17, 22, 25], "name1": [13, 17, 22, 165], "name2": [13, 17, 22, 165], "get_vari": [13, 17, 22], "latex_str": [13, 17, 22], "align": [13, 17, 22, 320, 322], "parameter_uncertainty_method": [14, 15, 38, 45, 180, 196, 197, 262, 320, 322], "evalu": [14, 38, 85, 86, 87, 88, 89, 90, 196, 197, 246, 262, 273, 281, 298, 300, 316, 320, 322, 327, 330, 333, 335], "maximum_evalu": [14, 312, 320, 322], "laplac": [14, 38, 196, 197, 300, 302, 312, 320, 322], "isampl": [14, 38, 51, 196, 300, 312, 320, 322], "niter": [14, 38, 51, 196, 300, 312, 320, 322], "auto": [14, 15, 300, 312, 320, 322], "keep_every_nth_it": [14, 15, 300, 312, 320, 322], "residu": [14, 25, 90, 131, 162, 249, 250, 271, 281, 300, 331, 333, 335], "solver": [14, 26, 209, 215, 262, 300, 302, 335], "solver_rtol": [14, 26, 215], "solver_atol": [14, 26, 215], "tool_opt": [14, 15, 26, 38, 51, 196, 215, 320, 322, 335], "eta_deriv": 14, "epsilon_deriv": 14, "oper": [14, 26, 36, 39, 75, 81, 105, 281, 282, 283, 302, 304, 305, 307, 310, 318, 320, 322, 326, 335], "epsilon": [14, 25, 59, 60, 85, 86, 168, 200, 211, 220, 227, 239, 300, 302, 310, 322], "calcul": [14, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 87, 102, 252, 298, 299, 300, 313, 315, 316, 317, 323], "deriv": [14, 26, 133, 300, 305, 307, 322, 334], "eta": [14, 25, 28, 39, 42, 59, 60, 61, 63, 78, 85, 86, 88, 160, 166, 167, 168, 171, 176, 177, 200, 226, 228, 229, 230, 281, 300, 302, 310, 313, 315, 317, 320, 324, 330, 335], "preserv": [14, 25, 318], "comput": [14, 305, 306, 307, 318, 334], "sampl": [14, 25, 79, 184, 185, 186, 187, 188, 313], "similar": [14, 298, 312, 318, 323, 331], "em": 14, "result": [14, 18, 25, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 78, 85, 86, 87, 88, 89, 90, 186, 187, 188, 237, 238, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 286, 289, 292, 300, 303, 305, 316, 318, 324, 326, 327, 329, 336], "everi": [14, 227, 309, 318], "nth": 14, "iter": [14, 15, 28, 62, 161, 185, 187, 267, 281, 300, 322, 328, 331], "laplacian": 14, "uncertainti": [14, 45, 62, 63, 65, 180, 186, 187, 188, 262, 300, 302, 313, 321], "sandwich": [14, 15, 45, 196, 197, 320], "cross": [14, 318], "product": [14, 40, 303, 312, 318, 334, 335], "gradient": [14, 59, 60, 85, 86, 281, 300, 335], "fim": 14, "design": [14, 306, 318, 320, 327, 335], "append": [14, 51, 300], "uncondit": [14, 167, 322], "regardless": [14, 211, 303, 318, 320], "termin": [14, 281, 318, 335], "print": [14, 71, 167, 168, 251, 284, 300, 322], "eigenvalu": [14, 143], "precond": 14, "precondit": 14, "cycl": 14, "supported_method": [14, 312], "frozenset": 14, "bay": [14, 196, 197, 302], "imp": [14, 38, 196, 197, 262, 300, 302, 312, 322], "impmap": [14, 38, 196, 197, 300, 302], "ITS": [14, 38, 196, 197, 300, 302, 317, 323, 334], "saem": [14, 38, 196, 197, 262, 300, 302], "supported_parameter_uncertainty_method": 14, "cpg": 14, "efim": 14, "ofim": 14, "to_datafram": [15, 24, 278], "overview": [15, 278, 298, 302, 311, 320, 332], "estimation_step": [15, 18, 38, 45, 51, 175, 180, 196, 197, 215, 300, 320, 322], "doctest": 15, "ellipsi": 15, "durat": [16, 214, 221, 322], "mutual": [16, 317, 335], "exclus": [16, 318, 335], "d1": [16, 214, 221, 300, 322], "r1": 16, "symbolc": 16, "dur": 16, "joint": [17, 25, 42, 78, 226, 313, 317, 322], "omega_cl": [17, 22, 25], "omega_v": [17, 25], "corr_cl_v": [17, 25], "omega_cl_v": [17, 25], "dist": [17, 22, 25, 300, 305, 320], "iiv_v": [17, 25], "itself": [17, 22, 318], "omega1": 17, "omega2": 17, "omega_new": [17, 22, 25], "random_vari": [18, 78, 226, 320, 322, 337], "dependent_vari": [18, 300, 320], "y": [18, 24, 28, 74, 108, 133, 135, 158, 167, 168, 171, 174, 189, 191, 200, 211, 212, 216, 227, 239, 320, 322, 324], "observation_transform": [18, 300], "estimationstep": [18, 38, 45, 180, 196, 197, 300, 312, 320], "modelfit_result": [18, 250, 273, 280, 300], "initial_individual_estim": 18, "filename_extens": 18, "value_typ": 18, "intern": [18, 300, 305, 320, 324, 327], "map": [18, 31, 309], "extens": [18, 275, 277, 309, 318, 320], "model_cod": [18, 300], "modelfit": [18, 247, 265, 273, 275, 279, 280, 281, 282, 298, 300, 302, 336], "parent": [18, 271, 272, 280, 289, 312, 334], "randomvari": [18, 300, 320], "likelihood": [18, 53, 54, 227, 261, 267, 302, 331], "2ll": [18, 53, 54, 300], "log": [18, 36, 37, 39, 54, 160, 189, 191, 193, 194, 212, 280, 281, 300, 309, 313], "record": [18, 85, 86, 87, 88, 89, 90, 91, 161, 179, 204, 281, 300, 305, 324], "would": [18, 30, 160, 298, 307, 313, 318, 322, 324, 327], "has_same_dataset_a": 18, "parse_model": 18, "pars": [18, 300, 316, 324, 326, 335], "parse_model_from_str": 18, "update_sourc": [18, 300, 324], "g": [18, 25, 74, 80, 177, 266, 300, 305, 309, 312, 313, 315, 317, 323, 327, 331, 335], "dummypath": [18, 322], "write_fil": 18, "forc": [18, 25, 80, 187, 188, 237, 240, 241, 300, 302, 317, 318], "write": [18, 240, 241, 274, 300, 305, 306, 307, 318, 326, 336], "extern": [18, 253, 305, 309, 310, 314, 326, 327], "msg": 20, "syntax": [20, 300, 335], "normal": [22, 25, 30, 42, 64, 70, 160, 184, 313, 317, 318], "init": [23, 24, 36, 49, 97, 202, 235, 238, 302, 313, 320], "inf": [23, 322], "param": [23, 302], "tvcl": [23, 28, 33, 39, 42, 74, 87, 135, 158, 159, 160, 167, 168, 176, 313, 320, 322, 324], "005": 23, "boolean": [23, 24, 91, 96, 97, 185, 194, 200, 234, 235, 248, 249, 250, 309, 335], "constrain": [23, 310, 320], "unfix": [23, 95, 96, 97, 202, 232, 234, 235, 300], "back": [23, 70, 300], "less": [23, 334], "greater": 23, "altern": [23, 229, 305, 318, 334], "constructor": [23, 300], "collect": [24, 25, 313, 318, 335], "usual": [24, 305], "displai": [24, 82, 189, 300, 313, 318], "summar": [24, 270, 272, 273, 313, 319], "par1": 24, "par2": 24, "pset": 24, "fixed": [24, 95], "nonfix": 24, "set_fix": 24, "set_initial_estim": [24, 300, 322], "100": [24, 36, 38, 51, 186, 196, 230, 298, 302, 307, 321, 322, 325, 332, 334], "eta_level": 25, "epsilon_level": 25, "act": [25, 195], "while": [25, 305, 322, 334, 335, 337], "variabilityhierarchi": 25, "contin": 25, "hierarchi": [25, 29], "rv": [25, 78, 130, 182, 226, 320, 337], "normaldistribut": [25, 320], "covariance_matrix": [25, 55, 62, 65, 67, 68, 187, 281, 298, 300, 321], "nrv": 25, "variance_paramet": 25, "rv1": 25, "rv2": 25, "get_rvs_with_same_dist": 25, "join": [25, 226, 300, 303], "ind": 25, "fill": 25, "name_templ": 25, "param_nam": 25, "cov": [25, 36, 55, 62, 63, 65, 67, 68, 187, 299, 300, 305, 312, 313, 322], "taken": [25, 91, 99, 104, 231, 275, 309, 313], "remain": [25, 92, 227, 303, 318], "templat": [25, 36, 39, 77, 304], "overrid": [25, 300, 304, 335], "dist1": 25, "dist2": 25, "_": [25, 272, 299, 313], "unjoin": 25, "nearest_valid_paramet": 25, "parameter_valu": 25, "small": 25, "parameters_sdcorr": 25, "sd": [25, 61, 322, 330, 333], "corr": [25, 57, 66, 330], "var": [25, 63, 313], "replace_with_sympy_rv": 25, "stat": [25, 28, 335], "std": [25, 322], "rng": [25, 62, 65, 79, 186, 187, 188], "jointnormaldistribut": [25, 320], "validate_paramet": 25, "seri": [25, 57, 61, 62, 63, 64, 65, 66, 68, 69, 72, 73, 87, 88, 89, 90, 98, 101, 106, 107, 109, 115, 120, 124, 165, 166, 187, 188, 189, 227, 229, 238, 281, 300, 321], "matric": [25, 63, 188, 300, 310, 321], "semidefinit": [25, 300, 310], "use_cach": 25, "symengin": [25, 310, 327], "cach": 25, "seed": [26, 62, 65, 79, 186, 188, 215, 302], "64206": [26, 215], "simul": [26, 215, 327, 333], "replic": [26, 215], "signific": [28, 73, 263, 264, 266, 300, 318, 332, 335], "after_od": [28, 212], "s\u2081": [28, 33, 74, 135, 158, 159, 160, 168, 212, 320], "eps\u2081": [28, 74, 123, 135, 158, 168, 174, 189, 200, 211, 216, 227, 239, 320], "ipr": [28, 74, 88, 135, 158, 163, 167, 168, 211, 212, 300, 320, 321, 322, 333], "ir": [28, 74, 135, 158, 167, 168, 212, 320, 322], "iwr": [28, 74, 135, 158, 167, 168, 212, 320, 322], "before_od": [28, 33, 36, 159, 160, 228, 229, 230], "btime": [28, 33, 74, 135, 158, 159, 160, 167, 168, 320, 322], "tad": [28, 33, 50, 74, 135, 158, 159, 160, 167, 168, 300, 320, 322, 330], "ptvcl": [28, 33, 36, 49, 55, 56, 57, 58, 64, 66, 67, 68, 69, 72, 73, 74, 95, 96, 97, 132, 135, 158, 159, 160, 167, 168, 187, 188, 202, 205, 219, 224, 228, 229, 230, 232, 234, 235, 238, 247, 320, 321, 322], "tvv": [28, 33, 74, 135, 158, 159, 160, 167, 168, 176, 313, 320, 322, 324], "ptvv": [28, 33, 49, 55, 56, 57, 58, 64, 66, 67, 68, 69, 72, 73, 74, 132, 135, 158, 159, 160, 167, 168, 187, 188, 234, 235, 238, 247, 320, 321, 322], "theta\u2083": [28, 33, 74, 135, 158, 159, 160, 168, 320], "eta\u2081": [28, 33, 74, 78, 123, 135, 158, 159, 160, 168, 226, 320], "\u212f": [28, 33, 46, 48, 74, 135, 158, 159, 160, 200, 320, 322], "eta\u2082": [28, 33, 74, 78, 123, 135, 158, 159, 160, 168, 226, 320], "whole": [28, 302, 309, 318, 335], "s1": [28, 149, 167, 322, 324], "symbol_or_stat": 28, "direct_depend": 28, "direct": [28, 287, 307, 318, 332, 334, 335], "find_assign": [28, 39, 41, 42, 46, 48, 174, 176, 189, 190, 191, 193, 200, 211, 216, 227, 239], "find_assignment_index": 28, "full_express": [28, 36, 228, 229, 230], "expand": [28, 91], "full": [28, 78, 112, 123, 129, 217, 299, 300, 302, 304, 313, 317, 318, 323, 330, 334], "eta_1": [28, 36, 59, 61, 63, 78, 112, 126, 130, 160, 186, 226, 228, 229, 230, 313, 320, 321, 322], "reassign": 28, "sypmpi": 28, "remove_symbol_definit": 28, "elsewher": 28, "longer": [28, 300], "make": [28, 74, 111, 159, 174, 183, 185, 261, 300, 305, 310, 317, 318, 320, 323, 335, 337], "sure": [28, 183, 300, 318, 337], "unless": [28, 284, 307, 318], "func": [31, 285], "presenc": [32, 35, 98, 101], "correctli": [32, 35, 98, 300], "get_admid": [32, 35], "get_cmt": [32, 35, 300, 322], "p": [33, 252, 261, 267, 298, 299, 300, 302, 307, 313, 322, 331, 332], "allometri": [33, 258, 259, 300, 335], "allo_cl": 33, "allo_v": 33, "add_paramet": [34, 300], "logit_transform": 34, "logit": [34, 39, 300], "remove_bioavail": [34, 300], "allow_nest": [36, 300], "linear": [36, 37, 40, 127, 142, 143, 154, 193, 298, 299, 300, 310, 320, 322, 327, 329, 334, 335], "lin": 36, "coveff": [36, 80], "median": [36, 62, 65, 298, 300, 322, 327], "001": [36, 73, 238, 261, 267, 300, 307, 322, 331, 332], "equal": [36, 42, 185, 200, 302, 305], "minimum": [36, 310], "000": [36, 321], "frac": [36, 37, 40, 189, 191, 193, 299, 320, 322, 333], "min": [36, 189, 191, 298, 322], "piecewis": [36, 300], "hockei": 36, "stick": 36, "piece_lin": 36, "theta1": [36, 322], "theta2": [36, 322], "pow": [36, 322], "mai": [36, 227, 315, 317, 318, 322, 323, 335], "abbrevi": [36, 39, 300, 302, 305, 324], "multipli": [36, 39, 200, 298, 302, 322], "alreadi": [36, 77, 195, 201, 223, 300, 302, 305, 307, 317, 318, 323], "pop_clapgr": 36, "cdot": [37, 39, 40, 47, 181, 193, 313, 320, 322], "slope": [37, 40, 127, 193], "bigg": [37, 193], "e_": [37, 40, 193], "ec_": [37, 40, 193], "biggl": [37, 193], "lbrace": [37, 193], "quad": [37, 193], "leq": [37, 193, 313], "atop": [37, 193], "els": [37, 71, 193, 227, 300, 322, 335], "sigmoid": [37, 40, 193], "bigl": [37, 193], "c_0": [37, 193], "loglin": [37, 193], "a_effect": 37, "ke0": 37, "idx": [38, 51, 175, 196, 197, 337], "pass": [38, 79, 196, 243, 252, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 289, 318], "opt": [38, 51, 196, 304], "1000": [38, 51, 87, 196, 313], "len": [38, 51, 175, 179], "set_estimation_step": [38, 45, 51, 175, 180, 197, 300, 322, 337], "remove_estimation_step": [38, 45, 51, 180, 196, 197, 322], "append_estimation_step_opt": [38, 45, 175, 180, 196, 197, 300, 322], "add_parameter_uncertainty_step": [38, 51, 175, 180, 196, 197, 322], "remove_parameter_uncertainty_step": [38, 45, 51, 175, 196, 197, 322], "set_evaluation_step": [38, 45, 51, 175, 180, 196, 322], "initial_estim": [39, 46, 48], "eta_nam": [39, 42, 200, 302], "prop": [39, 322], "rescal": 39, "re_log": 39, "user": [39, 103, 300, 309, 310, 315, 317, 318, 320, 321, 322, 323, 324, 334], "phi": [39, 300, 305, 322, 335], "remove_iiv": [39, 42, 46, 48, 177, 300, 322, 324], "add_pk_iiv": [39, 42, 176, 177, 300, 322, 323], "add_iov": [39, 46, 48, 176, 177, 300, 322], "remove_iov": [39, 42, 46, 48, 176, 300, 322], "prod": 40, "indirect": [40, 318, 334, 335], "turnov": 40, "c_c": 40, "impact": [40, 330], "degrad": [40, 334, 335], "respons": [40, 318], "dr": 40, "dt": [40, 82, 322], "k_": 40, "inhibit": 40, "stimul": 40, "r_0": 40, "pop_ka": [41, 49], "occ": [42, 264, 302, 307, 317], "disjoint": [42, 317], "accept": [42, 118, 119, 120, 302, 318], "explicit": [42, 300, 302, 303, 317, 335], "copi": [42, 125, 131, 132, 300, 315, 317, 318, 322, 335], "add_iiv": [42, 46, 48, 176, 177, 300, 322, 324], "set_transit_compart": [43, 178, 300, 322], "remove_lag_tim": [43, 300, 322], "drug_dvid": 44, "presystem": [44, 147, 300, 334], "directli": [44, 102, 141, 275, 279, 282, 300, 302, 310, 318, 320, 322, 327, 335], "present": [44, 98, 101, 109, 302, 307, 309, 313, 318, 323, 335], "wether": 44, "presystemet": 44, "add_estimation_step": [45, 51, 175, 180, 196, 197, 300, 322], "set_direct_effect": [46, 127, 300], "ec_50": [46, 259, 268], "ec\u2085\u2080": 46, "pop_ec_50": 46, "eta_ec_50": 46, "parameter": 47, "qpn": 47, "vpn": 47, "volumn": 47, "mathsf": [47, 181], "qp2": [47, 181, 300], "vp2": [47, 181], "peripheral1": [47, 181, 210, 322], "v1": [47, 181, 210, 322], "v2": [47, 181, 210, 322], "set_peripheral_compart": [47, 181, 300, 322], "remove_peripheral_compart": [47, 210, 300, 322], "Will": [48, 275, 276, 277], "pop_mat": [48, 322, 324], "eta_mat": [48, 322], "004693": [49, 64, 132, 313, 320], "009160": [49, 132, 320], "theta_3": [49, 55, 56, 57, 58, 64, 66, 67, 68, 69, 72, 73, 132, 187, 188, 234, 235, 238, 247, 320, 321, 322], "100000": [49, 132, 312, 320, 322], "99": [49, 132, 167, 238, 298, 307, 320, 322], "ivcl": [49, 55, 56, 57, 58, 64, 66, 67, 68, 69, 72, 73, 78, 125, 167, 168, 187, 188, 226, 235, 238, 247, 298, 313, 320, 321, 322, 324], "030963": [49, 125, 313, 320], "ivv": [49, 55, 56, 57, 58, 64, 66, 67, 68, 69, 72, 73, 78, 125, 167, 168, 187, 188, 226, 235, 238, 247, 298, 313, 320, 321, 322], "031128": [49, 125, 167, 238, 313, 320, 322, 324], "sigma_1_1": [49, 55, 56, 57, 58, 64, 66, 67, 68, 69, 73, 131, 187, 188, 235, 238, 247, 298, 320, 321, 322], "013241": [49, 131, 167, 238, 247, 313, 320, 321, 322], "increas": [52, 305], "until": [52, 273, 318, 337], "do": [52, 187, 298, 300, 302, 305, 313, 318, 324, 331, 335, 337], "noth": [52, 179, 227, 318], "next": [52, 300, 318, 322, 323, 324, 331], "run2": [52, 208, 322], "run3": [52, 322], "n_estimated_paramet": [53, 54], "fit": [53, 54, 166, 227, 251, 265, 271, 273, 279, 300, 318, 320, 322, 331, 336, 337], "multiple_test": 54, "mult_test_p": [54, 252], "mult_test_": 54, "variat": 54, "n_random_paramet": 54, "n_individu": 54, "n_fixed_paramet": 54, "n_observ": 54, "n_individ": 54, "n_estimated_iiv_omega_paramet": 54, "penalti": 54, "mbic": [54, 263, 266], "n_predictor": 54, "n_expected_model": 54, "mult_test": 54, "load_example_modelfit_result": [54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 85, 86, 87, 88, 89, 90, 186, 187, 188, 237, 238, 246, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 300], "611": 54, "7071686183284": 54, "616": [54, 300, 321], "536606983396": 54, "610": 54, "7412809453149": 54, "594": 54, "431131169692": 54, "411510e": [55, 58, 67, 68, 321], "08": [55, 57, 58, 67, 68, 307, 321], "010000e": [55, 58, 67, 68, 321], "000002": [55, 57, 58, 67, 68, 298, 321], "000001": [55, 57, 58, 62, 65, 67, 68, 298, 317, 321, 323], "538630e": [55, 57, 58, 67, 68, 321], "178090e": [55, 58, 67, 68, 321], "233530e": [55, 58, 67, 68, 321], "04": [55, 56, 57, 58, 66, 67, 68, 69, 298, 307, 317, 321, 330, 332, 334], "000804": [55, 57, 58, 67, 68, 307, 321], "000050": [55, 57, 58, 67, 68, 321], "171840e": [55, 58, 67, 68, 321], "461760e": [55, 58, 67, 68, 321], "665010e": [55, 58, 67, 68, 321], "06": [55, 57, 58, 67, 68, 298, 307, 315, 317, 321, 330, 332, 335], "040250e": [55, 58, 67, 68, 321], "007016": [55, 57, 58, 67, 68, 321], "000108": [55, 57, 58, 67, 68, 321], "944800e": [55, 58, 67, 68, 321], "932950e": [55, 58, 67, 68, 321], "093430e": [55, 58, 67, 68, 321], "981380e": [55, 57, 58, 67, 68, 321], "000180": [55, 57, 58, 67, 68, 321], "856650e": [55, 58, 67, 68, 321], "867230e": [55, 58, 67, 68, 321], "000039": [55, 57, 58, 67, 68, 321], "000019": [55, 57, 58, 67, 68, 321], "589820e": [55, 57, 58, 67, 68, 321], "685650e": [55, 58, 67, 68, 321], "000029": [55, 57, 58, 67, 68, 321], "000005": [55, 57, 58, 67, 68, 321], "195640e": [55, 58, 67, 68, 321], "007099": [55, 56, 57, 66, 321], "094640": [55, 56, 57, 66, 321], "388059": [55, 56, 57, 66, 72], "097981": [55, 56, 57, 66, 321], "170820": [55, 56, 57, 66, 321], "356899": [55, 56, 57, 66, 72], "138062": [55, 56, 57, 66, 321], "356662": [55, 56, 57, 66, 72, 321], "238441": [55, 56, 57, 66], "096515": [55, 56, 57, 66], "062991": [55, 56, 57, 66, 321], "153616": [55, 56, 57, 66, 321], "185111": [55, 56, 57, 66, 321], "159170": [55, 56, 57, 66, 321], "027495": [55, 56, 57, 66, 321], "calculate_se_from_cov": [55, 56, 57, 58, 66, 67, 69, 300], "calculate_se_from_prec": [55, 56, 57, 58, 66, 67, 68], "precis": [55, 56, 57, 58, 66, 67, 68, 69, 281, 300, 318], "calculate_cov_from_prec": [55, 56, 57, 66, 67, 68, 69], "calculate_cov_from_corrs": [55, 56, 58, 66, 67, 68, 69, 300], "calculate_prec_from_cov": [55, 56, 57, 58, 66, 68, 69], "calculate_prec_from_corrs": [55, 56, 57, 58, 67, 68, 69], "calculate_corr_from_prec": [55, 57, 58, 66, 67, 68, 69], "precision_matrix": [56, 58, 69, 281, 321], "prec": [56, 58, 69], "995567e": [56, 58, 67, 69], "22660": [56, 58, 66, 67, 69, 321], "028196": [56, 58, 67, 69], "16057": [56, 58, 66, 67, 69, 321], "855248": [56, 58, 67, 69], "203511": [56, 58, 66, 67, 69, 321], "614428": [56, 58, 67, 69], "39474": [56, 58, 66, 67, 69, 321], "250514": [56, 58, 67, 69], "820118": [56, 58, 67, 69], "299536": [56, 58, 67, 69], "266003e": [56, 58, 67, 69], "2129": [56, 58, 66, 67, 69, 321], "904642": [56, 58, 67, 69], "260": [56, 58, 66, 67, 69, 321], "176234": [56, 58, 67, 69], "375": [56, 58, 66, 67, 69, 321], "266233": [56, 58, 67, 69], "2800": [56, 58, 66, 67, 69, 321], "816246": [56, 58, 67, 69], "7718": [56, 58, 66, 67, 69, 321], "769557": [56, 58, 67, 69], "605786e": [56, 58, 67, 69], "187": [56, 58, 66, 67, 69, 321], "038903": [56, 58, 67, 69], "177": [56, 58, 66, 67, 69, 300, 321, 332], "207683": [56, 58, 67, 69], "205": [56, 58, 66, 67, 69, 321], "808480": [56, 58, 67, 69], "2225": [56, 58, 66, 67, 69, 321], "150449": [56, 58, 67, 69], "035116e": [56, 58, 67, 69], "7527": [56, 58, 66, 67, 69, 321], "530027": [56, 58, 67, 69], "2462": [56, 58, 66, 67, 69, 321], "974821": [56, 58, 67, 69], "9977": [56, 58, 66, 67, 69, 321], "488860": [56, 58, 67, 69], "947425e": [56, 58, 67, 69], "22343": [56, 58, 66, 67, 69, 321], "198618": [56, 58, 67, 69], "9370": [56, 58, 66, 67, 69, 321], "758371": [56, 58, 67, 69], "201183e": [56, 58, 67, 69], "249847": [56, 58, 67, 69, 321], "177845": [56, 58, 67, 69], "calculate_corr_from_cov": [56, 57, 58, 66, 67, 68, 69, 300], "se": [57, 66, 306, 307, 321], "correlation_matrix": [57, 66, 72, 281, 321], "standard_error": [57, 66, 281, 321], "411512e": 57, "009998e": 57, "178111e": 57, "233518e": 57, "171834e": 57, "461762e": 57, "665011e": 57, "040245e": 57, "944801e": 57, "932957e": 57, "093431e": 57, "856651e": 57, "867245e": 57, "685661e": 57, "195664e": 57, "pheno_linear": [59, 60, 85, 86, 88, 89, 90, 112, 123, 129, 154, 158, 247, 252], "d_eps1": [59, 123], "d_epseta1_1": [59, 123], "oeta1": [59, 112, 129], "d_epseta1_2": [59, 123], "eta_2": [59, 61, 63, 78, 112, 186, 226, 321, 322], "oeta2": [59, 112, 129], "calculate_eta_gradient_express": [59, 300], "d_eta1": [60, 112, 123, 129], "d_eta2": [60, 112, 123, 129], "calculate_epsilon_gradient_express": [60, 300], "parameter_estim": [61, 62, 63, 65, 73, 87, 89, 90, 166, 187, 188, 238, 247, 281, 298, 300, 320, 321], "individual_estim": [61, 78, 85, 86, 88, 166, 186, 237, 281, 300, 321], "shrinkag": [61, 63], "deviat": [61, 239, 281, 298, 313, 319, 321, 322, 330, 333], "pe": [61, 62, 63, 65, 87, 89, 187, 188], "ie": [61, 186, 237], "720481": 61, "240295": 61, "471305": 61, "128389": 61, "calculate_individual_shrinkag": [61, 300], "expr_or_expr": 62, "arbitrari": [62, 65], "solut": [62, 225], "th": [62, 299, 313], "percentil": [62, 298, 313], "previous": [62, 65, 164, 166, 300, 324], "create_rng": [62, 65, 186, 187, 188], "k": [62, 299, 300, 305, 307, 313], "stderr": [62, 65, 298, 335], "p5": [62, 65, 313], "004234": [62, 65], "001138": [62, 65], "004907": [62, 65], "001247": [62, 65], "p95": [62, 65, 313], "individual_estimates_covari": [63, 186, 281, 300, 321], "ieta_shr": 63, "847789": 63, "256473": 63, "796643": 63, "210669": 63, "755025": 63, "226957": 63, "764541": 63, "216405": 63, "816192": 63, "203974": 63, "778108": 63, "210992": 63, "659420": 63, "236875": 63, "668551": 63, "240097": 63, "260056": 63, "200374": 63, "725190": 63, "226563": 63, "972110": 63, "421852": 63, "249640": 63, "254119": 63, "730294": 63, "364932": 63, "165785": 63, "194464": 63, "813399": 63, "313554": 63, "797328": 63, "213211": 63, "769059": 63, "278079": 63, "098506": 63, "176778": 63, "749022": 63, "235386": 63, "742181": 63, "222932": 63, "21": [63, 85, 88, 99, 104, 120, 250, 298, 299, 307, 312, 313, 319, 321, 322, 328, 330, 333, 334], "317956": 63, "264473": 63, "943950": 63, "232732": 63, "707183": 63, "259077": 63, "553787": 63, "247717": 63, "826349": 63, "114302": 63, "854777": 63, "341384": 63, "820829": 63, "263235": 63, "28": [63, 85, 88, 89, 99, 104, 120, 227, 250, 298, 299, 307, 315, 318, 319, 321, 322, 330, 333, 334], "999942": 63, "319986": 63, "967084": 63, "432760": 63, "404773": 63, "325215": 63, "999980": 63, "318421": 63, "925283": 63, "167667": 63, "33": [63, 99, 104, 120, 124, 250, 299, 307, 319, 321, 322, 323, 332, 333], "913706": 63, "242106": 63, "875554": 63, "249197": 63, "35": [63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 331, 333], "849135": 63, "294294": 63, "36": [63, 65, 99, 104, 120, 250, 298, 299, 307, 315, 317, 319, 321, 322, 323, 330, 333], "172206": [63, 333], "246422": 63, "37": [63, 99, 104, 107, 120, 157, 213, 250, 299, 307, 309, 319, 321, 322, 333], "747380": 63, "278340": 63, "187440": 63, "231249": 63, "237805": 63, "254485": 63, "999925": 63, "189793": 63, "41": [63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 330, 333], "941906": 63, "170998": 63, "42": [63, 65, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 323, 332, 333], "923801": 63, "244046": 63, "999928": 63, "320403": 63, "44": [63, 99, 104, 120, 250, 298, 299, 319, 321, 322, 333], "237637": 63, "260453": 63, "45": [63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 333], "869540": 63, "194503": 63, "46": [63, 99, 104, 120, 250, 298, 299, 312, 319, 321, 322, 333], "999949": 63, "319750": 63, "47": [63, 99, 104, 120, 124, 250, 298, 299, 319, 321, 322, 323, 328, 330, 333], "983782": 63, "393234": 63, "48": [63, 99, 104, 107, 120, 250, 298, 299, 307, 319, 321, 322, 331, 332, 333], "698267": 63, "169337": 63, "776674": 63, "214962": 63, "688847": 63, "192608": 63, "51": [63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 333, 335], "822213": 63, "202534": 63, "511489": 63, "273601": 63, "53": [63, 99, 104, 120, 250, 298, 299, 307, 319, 321, 322, 328, 330, 333], "964757": 63, "223448": 63, "762153": 63, "181648": 63, "965657": 63, "435741": 63, "995278": 63, "354798": 63, "813382": 63, "263372": 63, "727295": 63, "232867": 63, "738777": 63, "224742": 63, "calculate_eta_shrinkag": [63, 300], "ucp": [64, 70], "ucpscal": [64, 70], "calculate_ucp_scal": [64, 300], "00916": [64, 167, 238, 313, 320, 322, 324], "0309626": [64, 167, 238, 320, 322, 324], "031127999999999996": 64, "013241000000000001": 64, "convers": [64, 300, 316, 334], "pharmacokinet": [65, 227, 322], "pre": [65, 147], "t_half_elim": 65, "173": 65, "337164": 65, "1769": 65, "493756": 65, "843398": 65, "149": [65, 317], "567842": 65, "1317": [65, 307], "474199": 65, "233070": 65, "k_e": 65, "calculate_individual_parameter_statist": [65, 300], "995565e": 66, "041788": 66, "848052": 66, "410335": 66, "240358": 66, "820116": [66, 321], "179011": 66, "266004e": 66, "908225": 66, "176399": 66, "266263": 66, "818557": 66, "757955": 66, "605785e": 66, "038825": 66, "207512": 66, "808434": 66, "144772": 66, "035114e": 66, "518562": 66, "972906": 66, "457873": 66, "947424e": 66, "197906": 66, "736254": 66, "201162e": 66, "249846": 66, "006431": 66, "000210": [68, 69, 321], "026895": [68, 69, 321], "083762": [68, 69, 321], "013415": [68, 69, 321], "007477": [68, 69, 321], "002279": [68, 69, 321], "unconstrain": 70, "calculate_parameters_from_ucp": [70, 300], "verbos": 71, "consist": [71, 307, 318, 335], "across": [71, 300, 318], "consol": 71, "fail": [71, 300, 318, 327], "cor": [72, 305], "highli": 72, "high": [72, 309, 310, 327], "absolut": [72, 300, 318], "zero_limit": 73, "significant_digit": [73, 281, 300], "close": [73, 238, 300, 313, 318, 319], "distanc": [73, 81, 333], "logic": [73, 323, 335], "cleanup": 74, "what": [74, 318, 324, 327], "inlin": 74, "clean": 74, "might": [74, 318, 327, 335, 337], "certain": [74, 108, 111, 161, 300, 304, 317, 318, 326, 335], "to_format": 75, "inplac": 75, "nlmixr": [75, 265, 300, 305, 321, 322], "rxode": [75, 300, 321], "underli": [75, 116, 167, 320], "converted_model": 75, "applic": [76, 274, 292, 318, 327, 335], "config": [77, 103, 300, 304, 305, 325], "configur": [77, 300, 314, 321, 324, 335, 336], "overwritten": [77, 275], "block": [78, 176, 211, 300, 302, 313, 315, 322, 323, 330, 335], "iiv_cl_iiv_v": [78, 226], "split_joint_distribut": [78, 300, 322], "through": [79, 302, 303, 304, 307, 318, 320, 322, 335], "numpi": [79, 309, 310, 320], "standard_norm": 79, "5532605888887387": 79, "stem": 80, "force_numb": 80, "coveff1": 80, "temp": 80, "temp1": 80, "cl1": 80, "df": [81, 86, 272, 300, 309, 328, 330], "date_column": 81, "deidentifi": [81, 300], "year": [81, 300, 305, 318], "earliest": 81, "maintain": [81, 303, 305, 306, 316, 318, 326, 327], "leap": 81, "1901": 81, "1902": 81, "1903": 81, "1904": 81, "closest": 81, "preceed": 81, "ordinari": [82, 320], "odedisplay": 82, "display": 82, "column_nam": [83, 233], "mark": [83, 84, 91, 233, 302, 318], "drop_dropped_column": [83, 233, 300, 322], "undrop_column": [83, 300, 322], "undrop": [83, 233], "drop_column": [84, 233, 300, 322], "them": [84, 184, 185, 303, 315, 317, 318, 323, 324, 331, 334, 335], "dy": 85, "deps_1": 85, "771084": [85, 88], "881859": [85, 88], "441728": [85, 88], "113050": [85, 88], "783055": [85, 88], "150": [85, 86, 88, 89, 90, 321], "375041": [85, 88], "151": [85, 86, 88, 89, 90, 328], "833395": [85, 88], "152": [85, 86, 88, 89, 90], "876707": [85, 88], "153": [85, 86, 88, 89, 90, 308], "905095": [85, 88], "154": [85, 86, 88, 89, 90], "099690": [85, 88], "155": [85, 86, 88, 89, 90, 119, 124, 321, 322], "evaluate_eta_gradi": [85, 300], "deta_1": 86, "deta_2": 86, "159537": 86, "609116": 86, "325893": 86, "562289": 86, "104417": 86, "346161": 86, "452951": 86, "682310": 86, "838840": 86, "981836": 86, "424423": 86, "973013": 86, "497185": 86, "344797": 86, "198714": 86, "697161": 86, "987731": 86, "941806": 86, "817067": 86, "309945": 86, "evaluate_epsilon_gradi": [86, 300], "573770": 87, "739": [87, 106, 157, 213, 309, 322], "165105": 87, "741": [87, 106, 157, 213, 309, 322], "742": [87, 106, 157, 213, 309, 322], "743": [87, 106, 157, 213, 309, 322], "evaluate_population_predict": [88, 300], "529739": 89, "179910": 89, "688648": 89, "798916": 89, "023225": 89, "459036": 89, "223295": 89, "217288": 89, "472888": 89, "226455": 89, "evaluate_individual_predict": [89, 300], "wre": [90, 300], "313859": 90, "675721": 90, "544240": 90, "921720": 90, "517677": 90, "223935": 90, "053334": 90, "007023": 90, "931252": 90, "778389": 90, "flag": [91, 300, 322, 333, 335], "origin": [91, 124, 240, 275, 279, 282, 298, 299, 300, 303, 305, 313, 318, 333], "care": [91, 275], "accord": [92, 123, 300, 318, 323, 334, 335], "queri": 92, "00469307": [95, 96, 97, 167, 205, 219, 232, 238, 320, 322, 324], "fix_paramet": [95, 97, 234, 235, 322], "unfix_paramat": [95, 96, 97, 235], "fix_paramaters_to": [95, 235], "unfix_paramaters_to": [95, 96, 97, 202, 234], "fix_or_unfix_paramet": [96, 97, 234, 235, 322], "fix_parameters_to": [96, 202, 234, 322], "extract": [98, 101, 105, 109, 245, 300, 302, 316, 320], "60": [99, 307, 318, 322, 328], "cmax": [102, 300, 322], "tmax": [102, 300, 322], "cmin": [102, 300, 322], "tmin": [102, 300, 322], "doseid": [102, 106, 322], "589": [102, 107, 322], "get_baselin": [104, 300, 322], "set_covari": [104, 322], "kei": [105, 271, 279, 318, 331], "period": [106, 322], "108": [107, 157, 213, 309, 321, 322], "120": [107, 157, 213, 309, 321, 322], "132": [107, 157, 213, 309, 321, 322, 328], "144": [107, 157, 213, 309, 321, 322, 332], "retriev": [110, 111, 118, 119, 126, 127, 128, 130, 256, 257, 275, 279, 282, 300, 320, 321, 322, 336], "those": [111, 303, 318, 322, 335], "often": [111, 302, 305, 320, 332], "get_pd_paramet": 111, "get_pk_paramet": [111, 126, 127, 130, 300], "get_rv_paramet": [111, 126, 128, 149, 300], "has_random_effect": [111, 126, 130, 300], "opr": [112, 123, 129], "get_population_prediction_express": [112, 300], "epress": [112, 129], "condit": [113, 201, 300, 313, 318, 331, 335], "item": [117, 304, 318], "activ": [118, 119, 120, 305, 318], "get_number_of_observ": [118, 124, 300, 322], "get_number_of_observations_per_individu": [118, 119, 124, 300, 322], "total": [119, 281, 300, 322, 334], "get_number_of_individu": [119, 120, 300, 322], "observation_count": 120, "oeta\u2082": 123, "oeta\u2081": 123, "keep_index": [124, 300], "112": [124, 307, 315, 317, 321, 322, 323, 328, 330, 331], "135": [124, 321, 322, 328, 330], "131": [124, 321, 322], "73": [124, 321, 322, 331, 335], "146": [124, 157, 213, 307, 309, 317, 321, 322], "get_theta": [125, 131, 300], "get_sigma": [125, 132, 300], "var_typ": 126, "get_individual_paramet": [126, 128, 130, 149, 300], "get_individual_prediction_express": [129, 300], "get_omega": [131, 132, 300], "structur": [132, 259, 277, 300, 302, 309, 317, 320, 323, 334, 335], "00": [132, 313, 320, 321, 322, 328, 330, 332, 334, 335], "olumn": 133, "milligram": [133, 309], "liter": [133, 309], "kilogram": [133, 309], "named_subscript": 135, "greek": 135, "subscript": 135, "cleanup_model": [135, 300], "\u03b8\u2081": 135, "\u03b8\u2082": 135, "\u03b8\u2083": 135, "\u03b7\u2081": 135, "\u03b7\u2082": 135, "\u03b5\u2081": 135, "mani": [136, 137, 148, 187, 300, 322], "has_proportional_error_model": [136, 137, 151, 300], "has_combined_error_model": [136, 148, 151, 300], "has_weighted_error_model": [136, 137, 148, 300], "has_additive_error_model": [137, 148, 151, 300], "reli": [140, 144, 145, 153, 318], "heurist": [140, 144, 145, 153], "abl": [140, 144, 145, 153, 300, 312, 314, 326, 327, 335], "detect": [140, 144, 145, 153, 300, 314, 320, 326, 337], "instantan": [141, 203, 335], "has_od": [142, 143, 300], "has_linear_odes_with_real_eigenvalu": [142, 146, 300], "has_linear_od": [143, 146, 300], "micha": [144, 145, 206, 207, 302, 334, 335], "menten": [144, 145, 206, 207, 302, 334, 335], "set_michaelis_menten_elimin": [144, 199, 207, 222, 300, 322], "michali": 145, "set_mixed_mm_fo_elimin": [145, 322], "add_metabolit": [147, 300], "sequenti": [150, 214, 300, 302, 323, 335], "dpharmpi": 150, "has_zero_order_absorpt": [150, 300], "has_first_order_absorpt": 150, "set_zero_order_elimin": [153, 199, 206, 207, 300, 322], "determin": [154, 155, 185, 245, 315, 317, 318, 323], "model1": [154, 300], "model2": 154, "constraint": [155, 205, 219, 224, 232, 234, 300, 310], "get_covariate_baselin": [156, 300, 322], "load": [157, 158, 247, 314], "unload_dataset": [157, 300], "statment": 159, "mu": [160, 313], "referenc": 160, "theta_1": [160, 320], "mu_1": [160, 313], "\u03bc\u2081": 160, "\u03bc\u2082": 160, "dataset_or_model": [161, 185], "name_pattern": [161, 185], "omitted_": 161, "omiss": 161, "omit": [161, 302, 307], "placehold": [161, 185], "cwre": [162, 167, 271, 272, 321, 322, 330, 331], "chart": [162, 163, 164, 165, 166, 298], "iofv1": 165, "iofv2": 165, "against": [165, 318], "iofv": [165, 272, 298, 300, 319, 321, 333], "scatterplot": 165, "problem": [167, 171, 300, 307, 312, 315, 317, 318, 319, 322, 324], "subroutin": [167, 300, 318, 322, 324], "advan1": [167, 322, 324], "trans2": [167, 322, 324], "IF": [167, 300, 318, 322], "gt": [167, 322], "lt": [167, 322], "npde": [167, 322], "noappend": [167, 322], "noprint": [167, 322], "onehead": [167, 322], "sigma\u2081": [168, 320], "\u2081": [168, 320], "home": [170, 300, 320], "run1": [170, 257, 322], "mod": [170, 275, 277, 300, 302, 309, 320, 321, 322, 335], "read_model_from_databas": [170, 171, 300], "databas": [170, 171, 255, 275, 276, 277, 279, 282, 283, 286, 292, 297, 300], "read_model_from_str": [170, 300, 322], "err": [171, 322], "has_covariate_effect": [173, 300], "unrun": 174, "to_remov": [176, 177, 302], "eta_iov_1_1": 177, "add_lag_tim": [178, 218, 300, 322], "uloq": 179, "alq": 179, "loq": [179, 259, 302], "consecut": [179, 227], "736": 179, "set_lloq_data": [179, 227, 300], "add_peripheral_compart": [181, 210, 300, 322], "new_nam": [183, 208], "renam": [183, 300], "clash": [183, 275, 277], "occur": [183, 211, 312, 315, 317, 318], "constant": [184, 190, 317, 334], "resampl": [185, 260], "stratifi": [185, 302], "sample_s": [185, 302], "resample_": 185, "randomli": [185, 188], "renumb": [185, 302], "upward": 185, "stratif": [185, 302], "valueerror": 185, "rais": [185, 238, 300], "strata": 185, "stratum": 185, "suppli": [185, 315, 317, 323, 330], "control": [185, 305, 317, 318, 320], "pattern": [185, 318], "samples_per_id": 186, "pool": [186, 315], "iec": 186, "127941": 186, "037273": 186, "065492": 186, "182851": 186, "263323": 186, "265849": 186, "295883": 186, "060346": 186, "012108": 186, "219967": 186, "034279": 186, "040988": 186, "187879": 186, "143184": 186, "088845": 186, "034655": 186, "187779": 186, "014214": 186, "019953": 186, "151151": 186, "sample_parameters_from_covariance_matrix": [186, 188, 300], "sample_parameters_uniformli": [186, 187, 300], "uniform": [186, 187, 188], "force_posdef_sampl": [187, 188, 302], "force_posdef_covmatrix": [187, 302], "never": [187, 323], "005069": 187, "974989": 187, "204629": 187, "024756": 187, "012088": 187, "012943": 187, "004690": 187, "958431": 187, "233231": 187, "038866": 187, "029000": 187, "012516": 187, "004902": [187, 298], "950778": 187, "128388": 187, "019020": 187, "023866": 187, "013413": 187, "sample_individual_estim": [187, 188, 300], "estiat": [187, 188], "reject": 188, "004878": 188, "908216": 188, "149441": 188, "029179": 188, "025472": 188, "012947": 188, "004828": 188, "014444": 188, "149958": 188, "028853": 188, "027653": 188, "013348": 188, "004347": 188, "053837": 188, "165804": 188, "028465": 188, "026798": 188, "013727": 188, "data_tran": [189, 191, 212, 300], "series_term": 189, "\u00b2": [189, 191], "epsilon_1": [189, 191, 212], "expans": 189, "approxim": [189, 318, 334], "\u03b5\u2090": [189, 191, 322], "set_proportional_error_model": [189, 191, 300, 322], "set_combined_error_model": [189, 212, 300, 322, 331], "const": 190, "epsilon_2": 191, "remove_error_model": [191, 212, 300, 322], "\u03b5\u209a": [191, 212, 322], "set_additive_error_model": [191, 212, 300, 322], "fix_to_log": 194, "dynam": [194, 289, 318], "lambda": [194, 228, 229, 328, 330], "zeta": [194, 328, 330], "emul": 194, "set_instantaneous_absorpt": [198, 214, 221], "list_of_ep": [200, 211], "same_eta": [200, 302], "chosen": [200, 300, 315, 322, 334, 335], "eta_rv1": 200, "set_power_on_ruv": [200, 300, 322, 331], "get_initial_condit": [201, 300], "remove_loq_data": [204, 227, 300, 322], "set_upper_bound": [205, 232, 322], "unconstrain_paramet": [205, 219, 234, 322], "clmm": [206, 207, 222, 322], "km": [206, 207, 222, 300, 322], "set_first_order_elimin": [206, 207, 222, 300, 322], "advan": [209, 300, 322], "cvode": [209, 302], "advan14": [209, 302], "dgear": [209, 302], "advan8": [209, 302], "dverk": [209, 302], "advan6": [209, 302], "ida": [209, 302], "advan15": [209, 302], "lsoda": [209, 302, 312], "advan13": [209, 302, 322], "lsodi": [209, 302, 312], "advan9": [209, 302], "prefer": [209, 318], "q2": 210, "q3": 210, "v3": 210, "peripheral2": 210, "lower_limit": 211, "zero_protect": [211, 212, 300], "said": 211, "autodetect": 211, "protect": [211, 212, 300, 318], "power\u2081": 211, "set_iiv_on_ruv": [211, 300, 322, 331], "225e": [212, 322], "ipredadj": [212, 322], "ref": [213, 337], "1234": 215, "simulationstep": 215, "quantil": [216, 298, 300], "time_vari": [216, 330, 331], "target": [217, 332, 334], "mediat": [217, 334], "disposit": [217, 334], "ib": [217, 334], "cr": [217, 334], "crib": 217, "qss": [217, 334], "wagner": [217, 334], "mmapp": [217, 334], "tmdd": [217, 259, 268, 300, 335], "keep_depot": [218, 300], "transit1": 218, "transit2": 218, "k23": 218, "transit3": 218, "k34": 218, "k40": 218, "set_lower_bound": [219, 232, 322], "use_thetas_for_error_stdev": [220, 300, 322], "smallest": [222, 322], "get_zero_order_input": [223, 300], "simplifi": [224, 300, 301, 310, 322, 327], "ab": [224, 229, 302, 322], "analyt": 225, "becom": [226, 300, 302, 327], "create_joint_distribut": [226, 300, 322], "m4": [227, 322], "m1": [227, 300, 332], "m3": [227, 322], "m5": [227, 300], "m6": [227, 300], "m7": [227, 300], "overridden": 227, "shown": 227, "discard": 227, "modifi": [227, 300, 309, 318, 325, 336], "beal": 227, "sl": 227, "pharmacodyn": 227, "2001": 227, "oct": 227, "481": 227, "504": 227, "doi": [227, 229, 313, 331], "1023": 227, "1012299115260": 227, "erratum": 227, "2002": 227, "jun": 227, "309": 227, "pmid": 227, "11768292": 227, "cumd": [227, 322], "cumdz": [227, 322], "list_of_eta": [228, 229, 230], "boxcox": [228, 300], "lambda1": [228, 229], "transform_etas_tdist": [228, 229, 300, 322], "transform_etas_john_drap": [228, 230, 300, 322], "john": [229, 300, 302], "draper": [229, 300, 302], "spelect": 229, "1980": 229, "famili": [229, 318], "journal": [229, 331], "royal": 229, "societi": 229, "190": [229, 328], "197": 229, "2307": 229, "2986305": 229, "transform_etas_boxcox": [229, 230, 300, 322], "degre": [230, 330], "freedom": [230, 318, 330], "80": [230, 307, 321, 328, 330, 331], "df1": 230, "translat": [231, 300], "hour": [231, 309], "caution": 231, "reset": [231, 284, 300], "account": 231, "unfix_paramet": [232, 300, 322], "unload": 236, "had": [237, 318, 322], "move_est_close_to_bound": 238, "00469555": 238, "984258": [238, 247, 321], "15892": 238, "0293508": [238, 320], "027906": [238, 247, 320, 321], "sd_eps_1": 239, "set_weighted_error_model": [239, 300, 322], "whose": [240, 318], "suffix": 240, "overwrit": [240, 241], "newdataset": 240, "recalcul": 243, "frem_dir1": 243, "read_result": [243, 256, 300, 335], "model_or_model": [244, 265], "run_tool": [244, 259, 271, 300], "supress_warn": 245, "choos": [245, 300, 315, 318, 323, 324, 325], "supress": 245, "fulfil": [246, 318, 335], "004696": [247, 321], "158920": [247, 321], "029351": [247, 321], "84": [248, 249, 272, 315, 317, 323, 332], "machin": [248, 249, 250, 275, 279, 282, 309, 314, 318], "learn": [248, 249, 250, 314], "threshold": [248, 249, 250, 302, 307], "signal": [248, 249, 319], "raw": [248, 249, 250, 272, 298, 300, 309], "delta": [248, 298, 300, 319], "tell": [248, 250, 318], "predict_influential_outli": [248, 250, 300], "predict_outli": [248, 249, 300], "outlier_cutoff": 249, "influential_cutoff": 249, "influential_outli": 249, "predict_influential_individu": [249, 250, 300], "simev": [250, 300, 329], "singal": 250, "281443": 250, "057392": 250, "119105": 250, "846849": 250, "600540": 250, "014008": 250, "750734": 250, "247175": 250, "117002": 250, "835389": 250, "529582": 250, "035670": 250, "292333": 250, "303278": 250, "565949": 250, "078192": 250, "291295": 250, "466421": 250, "402343": 250, "699996": 250, "567987": 250, "526776": 250, "303918": 250, "177588": 250, "272142": 250, "390000": 250, "775876": 250, "501528": 250, "700951": 250, "352599": 250, "294196": 250, "744014": 250, "215364": [250, 332], "208691": 250, "713130": 250, "300293": 250, "810736": 250, "459877": 250, "675125": 250, "563835": 250, "526945": 250, "449199": 250, "720714": 250, "792248": 250, "860923": 250, "731858": 250, "247131": 250, "894190": 250, "282737": 250, "153398": 250, "200546": 250, "902774": 250, "586427": 250, "183329": 250, "036930": 250, "639868": 250, "765279": 250, "209665": 250, "225693": 250, "bic_typ": 252, "lrt": 252, "denot": [252, 313, 322], "model_1": [252, 313], "model_2": [252, 313], "create_result": [254, 300], "resum": [255, 259, 292, 302, 335], "resmod_dir1": 255, "retrieve_model": [256, 275, 279, 282, 300, 335], "tooldatabas": [257, 276, 283, 289, 292], "modeldatabas": [257, 275, 277, 286], "tooldir_path": 257, "retrieve_final_model": [257, 300], "allometryresult": 258, "amd": [259, 300, 334, 335], "modelsearch": [259, 266, 271, 300, 334, 335], "reult": 259, "e_max": [259, 268], "search": [259, 261, 266, 268, 300, 302, 307, 317, 327, 335], "runord": [259, 302], "compon": [259, 302, 310, 314, 318, 320, 330], "run_iiv": [259, 300], "bootstrap": [260, 300, 329], "bootstrapresult": [260, 300], "500": 260, "try": [261, 302, 312, 327, 337], "criteri": [261, 263, 264, 266, 267, 268], "covsearchresult": 261, "estmethod": [262, 300, 335], "exhaust": [262, 266, 300], "exhaustive_with_upd": [262, 312], "exhaustive_only_ev": [262, 300, 312], "mode": [262, 300, 313, 318], "estmethodresult": 262, "reduc": [262, 300, 312, 332], "no_add": [263, 266, 300, 315, 323], "iivsearch": [263, 300, 335], "brute_force_no_of_eta": [263, 315], "brute_force_block_structur": [263, 315], "strategi": [263, 266, 300, 315, 323], "add_diagon": [263, 266, 300, 315, 323], "iivsearchresult": 263, "iovsearch": [264, 300, 335], "iovsearchresult": 264, "modelfeatur": 266, "modelsearchresult": 266, "max_it": [267, 300], "bin": [267, 330, 337], "attempt": [267, 307, 318], "assess": [267, 331], "ruvsearchresult": 267, "extra_model": [268, 334], "structsearch": [268, 300, 335], "structsearchresult": 268, "model_typ": 268, "arg": 269, "fit_result": 271, "mathrm": [272, 333], "veebar": 272, "least": [272, 318, 323, 334, 335], "outli": [272, 333], "include_all_estimation_step": 273, "runtim": [273, 281, 300, 312], "wasn": [273, 300], "estmat": 273, "586": [273, 321], "276056": 273, "lzma": [274, 284], "again": [274, 337], "compress": [274, 284], "Not": [274, 309, 318, 323], "save": [274, 284, 287, 300], "file_extens": [275, 277], "nontransactionalmodeldatabas": [275, 282], "local": [275, 276, 277, 279, 282, 283, 286, 305, 315, 318], "store": [275, 276, 277, 279, 282, 283, 286, 300, 324, 335], "modelnam": 275, "recommend": [275, 337], "localmodeldirectorydatabas": 275, "retrieve_fil": [275, 279, 282], "filesystem": [275, 279, 282], "model_nam": [275, 277, 279, 282, 313], "retrieve_local_fil": [275, 279, 282], "destination_path": [275, 279, 282], "retrieve_model_entri": [275, 279, 282], "modelentri": [275, 277, 279, 282], "retrieve_modelfit_result": [275, 279, 282], "store_local_fil": [275, 276, 279, 282, 283, 286], "new_filenam": [275, 279, 282], "store_metadata": [275, 276, 279, 282, 283, 286], "store_model": [275, 279, 282], "store_model_entri": [275, 279, 282], "model_entri": [275, 279, 282], "transact": [275, 277, 279, 282, 318], "store_modelfit_result": [275, 279, 282], "toolnam": [276, 283, 286, 335], "exist_ok": 276, "read_metadata": [276, 283, 286], "source_path": [276, 283, 286], "store_result": [276, 283, 286], "transactionalmodeldatabas": 277, "subdirectori": [277, 335], "list_model": 277, "snapshot": [277, 279], "readabl": [277, 279, 284, 309, 318, 327], "context": [277, 279, 318, 327], "model_or_model_entri": [277, 279], "writabl": [277, 279], "timestamp": 278, "log_error": 278, "log_warn": 278, "abc": [279, 286], "baseclass": 279, "primari": 279, "center": 279, "around": [279, 303], "belong": 279, "attach": [280, 318], "lof": 280, "attach_result": 280, "__version__": [281, 284], "104": [281, 284, 307, 312, 315, 317, 323], "ofv_iter": [281, 300], "parameter_estimates_sdcorr": [281, 321], "parameter_estimates_iter": [281, 300], "standard_errors_sdcorr": [281, 321], "relative_standard_error": [281, 321], "minimization_successful_iter": 281, "estimation_runtime_iter": 281, "individual_ofv": [281, 300, 321], "termination_caus": 281, "termination_cause_iter": 281, "function_evalu": 281, "function_evaluations_iter": 281, "significant_digits_iter": 281, "log_likelihood": 281, "covstep_success": 281, "gradients_iter": 281, "evaluation_ofv": 281, "classic": 281, "caus": [281, 300, 318, 327], "prematur": 281, "maxevals_exceed": [281, 335], "dummi": [282, 283], "anyth": [282, 283, 305, 315, 318], "get_and_reset_index": 284, "attr": 284, "wrapper": [284, 300, 305, 310, 314, 337], "facilit": 284, "multiindex": [284, 300], "to_csv": 284, "serial": [284, 300, 309, 327], "task_input": 285, "model_databas": 286, "workflowbas": [287, 288], "acycl": 287, "task": [287, 288, 300, 326, 327], "node": [287, 289], "edg": 287, "as_dask_dict": 287, "dask": [287, 289, 300, 327], "plot_dask": 287, "visual": 287, "add_task": 288, "predecessor": [288, 318], "insert_workflow": 288, "replace_task": 288, "new_task": 288, "wf": 289, "unique_nam": 289, "db": 289, "whatev": [289, 318], "alia": [290, 291], "localdirectorydatabas": [290, 297], "localdirectorytooldatabas": [291, 297, 335], "dispatch": [292, 297, 300, 335], "execut": [292, 300, 318], "executiondispatch": 292, "default_dispatch": 297, "local_dask": [297, 335], "default_model_databas": 297, "default_tool_databas": 297, "psn": [298, 299, 300, 302, 308, 313, 319, 328, 330, 332, 333, 335, 336], "parameter_statist": 298, "bia": [298, 300], "divid": [298, 302, 324], "005890": 298, "005891": 298, "000460": 298, "078170": 298, "pop_v": 298, "431004": 298, "422850": 298, "073015": 298, "051024": 298, "149260": 298, "124740": 298, "112645": 298, "754686": 298, "189801": 298, "185916": 298, "045563": 298, "240056": 298, "015470": 298, "015184": 298, "003553": 298, "229641": 298, "parameter_distribut": 298, "lowest": [298, 313], "highest": [298, 300, 313, 324], "interpol": 298, "fall": [298, 300], "x_0": 298, "x_1": 298, "np": [298, 309, 320], "004851": 298, "004857": 298, "005031": 298, "005149": 298, "277810": 298, "278405": 298, "283765": 298, "309488": 298, "326434": 298, "000011": 298, "000097": 298, "000869": 298, "006275": 298, "013558": 298, "079940": 298, "080472": 298, "085258": 298, "101225": 298, "119080": 298, "007645": 298, "007719": 298, "008382": 298, "009481": 298, "009956": 298, "006659": 298, "006846": 298, "007353": 298, "007460": 298, "007472": 298, "547333": 298, "582182": 298, "631219": 298, "644090": 298, "645520": 298, "353679": 298, "367954": 298, "416361": 298, "433175": 298, "435043": 298, "265224": 298, "282926": 298, "290666": 298, "291792": 298, "291917": 298, "021341": 298, "022691": 298, "025584": 298, "027052": 298, "027215": 298, "parameter_estimates_histogram": 298, "histogram": [298, 300], "repeatchart": 298, "006755": 298, "52531": 298, "108662": 298, "258316": 298, "011408": 298, "005424": 298, "43599": 298, "270899": 298, "156400": 298, "014023": 298, "006585": 298, "38641": 298, "226891": 298, "162075": 298, "010971": 298, "005757": 298, "47090": 298, "193243": 298, "019133": 298, "006875": 298, "50111": 298, "345382": 298, "176756": 298, "009135": 298, "005683": 298, "34027": 298, "163931": 298, "159868": 298, "010816": 298, "005795": 298, "34379": 298, "075865": 298, "194188": 298, "018041": 298, "006078": 298, "35172": 298, "040387": 298, "214176": 298, "015683": 298, "98": [298, 307, 313, 315], "005353": 298, "44898": 298, "155477": 298, "258743": 298, "020128": 298, "006247": 298, "49069": 298, "125491": 298, "219146": 298, "018971": 298, "ofv_statist": 298, "bootstrap_bootdata_ofv": 298, "original_bootdata_ofv": 298, "sum": [298, 308], "bootstrap_origdata_ofv": 298, "boostrap": 298, "original_origdata_ofv": 298, "delta_bootdata": 298, "delta_origdata": 298, "08165": 298, "729": 298, "644638": 298, "737749": 298, "ofv_distribut": 298, "parameter_distriut": 298, "593": 298, "389406": 298, "972104": 298, "599": 298, "216391": 298, "654": [298, 300], "548507": 298, "660": 298, "573965": 298, "795": 298, "776225": 298, "803": 298, "946508": 298, "816": 298, "836314": 298, "820": [298, 300, 321], "873796": 298, "821": 298, "322405": 298, "ofv_plot": 298, "dofv_quantiles_plot": 298, "show": [298, 302, 313, 318, 330, 333, 334], "metric": [298, 299, 321], "chi": 298, "squar": 298, "664": 298, "272157": 298, "749": 298, "459450": 298, "061103": 298, "725470": 298, "679": 298, "585721": 298, "702": 298, "481949": 298, "748": 298, "074871": 298, "710": [298, 300], "203812": 298, "787": [298, 312], "180418": 298, "771": 298, "202034": 298, "119974e": 298, "491440e": 298, "096413e": 298, "005331": 298, "000922": 298, "001519": 298, "460998e": 298, "365879e": 298, "012689": 298, "000981": 298, "760432e": 298, "331894e": 298, "002076": 298, "755294e": 298, "000035": 298, "000176": 298, "000078": 298, "262063e": 298, "included_individu": 298, "case_result": [299, 300], "cook_scor": 299, "jackknife_cook_scor": 299, "delta_ofv": 299, "dofv_influenti": 299, "130159": 299, "121389": 299, "015207": 299, "348263": 299, "336159": 299, "144045": 299, "192433": 299, "181125": 299, "031030": 299, "163095": 299, "155901": 299, "026142": 299, "422651": 299, "404915": 299, "190732": 299, "374312": 299, "343311": 299, "097063": 299, "169869": 299, "163883": 299, "026223": 299, "263865": 299, "254943": 299, "058123": 299, "757098": 299, "673587": 299, "477910": 299, "150161": 299, "144191": 299, "023623": 299, "361646": 299, "352901": 299, "217902": 299, "255533": 299, "215005": 299, "035375": 299, "191848": 299, "187019": 299, "038199": 299, "376365": 299, "337975": 299, "096680": 299, "142806": 299, "137340": 299, "014709": 299, "193393": 299, "179744": 299, "031711": 299, "131746": 299, "122842": 299, "020637": 299, "176644": 299, "932149": 299, "036787": 299, "128197": 299, "120498": 299, "019030": 299, "141093": 299, "138101": 299, "029021": 299, "176582": 299, "153583": 299, "035291": 299, "104396": 299, "100064": 299, "015499": 299, "552071": 299, "501458": 299, "278595": 299, "242334": 299, "217068": 299, "047627": 299, "792099": 299, "715951": 299, "798775": 299, "135247": 299, "133493": 299, "021356": 299, "442779": 299, "424958": 299, "125763": 299, "132903": 299, "127188": 299, "010157": 299, "081122": 299, "076790": 299, "005443": 299, "183624": 299, "168501": 299, "027707": 299, "113959": 299, "111168": 299, "012363": 299, "532749": 299, "515747": 299, "325048": 299, "094133": 299, "091212": 299, "014747": 299, "447798": 299, "406737": 299, "194457": 299, "364978": 299, "352973": 299, "124295": 299, "270838": 299, "252922": 299, "063675": 299, "129553": 299, "121963": 299, "014043": 299, "254914": 299, "243250": 299, "064025": 299, "207529": 299, "194633": 299, "046887": 299, "239182": 299, "218112": 299, "044252": 299, "181986": 299, "173826": 299, "020285": 299, "604112": 299, "584208": 299, "604211": 299, "407717": 299, "369648": 299, "154161": 299, "215722": 299, "196744": 299, "043742": 299, "214167": 299, "200091": 299, "036238": 299, "094284": 299, "089002": 299, "007506": 299, "074174": 299, "072365": 299, "007535": 299, "743323": 299, "717468": 299, "654313": 299, "153971": 299, "147360": 299, "014502": 299, "284706": 299, "278460": 299, "072960": 299, "331587": 299, "309374": 299, "116933": 299, "447965": 299, "421612": 299, "129593": 299, "184872": 299, "175196": 299, "029896": 299, "430382": 299, "415446": 299, "141657": 299, "409307": 299, "369197": 299, "189729": 299, "084764": 299, "079718": 299, "007416": 299, "107600": 299, "103145": 299, "013947": 299, "154672": 299, "150761": 299, "028236": 299, "155632": 299, "150461": 299, "034848": 299, "covariance_ratio": 299, "skipped_individu": 299, "050505": 299, "963884": 299, "058896": 299, "087449": 299, "985403": 299, "029066": 299, "101636": 299, "086424": 299, "017369": 299, "094799": 299, "849310": 299, "121111": 299, "049151": 299, "096456": 299, "070088": 299, "040691": 299, "065881": 299, "606158": 299, "205007": 299, "099191": 299, "143483": 299, "050691": 299, "086007": 299, "156273": 299, "919336": 299, "056714": 299, "999221": 299, "029600": 299, "034017": 299, "108785": 299, "038495": 299, "954054": 299, "053618": 299, "096334": 299, "943556": 299, "125423": 299, "086167": 299, "145822": 299, "113939": 299, "114399": 299, "057664": 299, "788608": 299, "063991": 299, "115559": 299, "160549": 299, "034685": 299, "035618": 299, "714976": 299, "092664": 299, "089158": 299, "054565": 299, "002555": 299, "032356": 299, "003056": 299, "936719": 299, "122771": 299, "078285": 299, "096841": 299, "068821": 299, "sqrt": [299, 322], "p_i": 299, "p_": 299, "orig": 299, "operatornam": [299, 313, 333], "sum_": 299, "overlin": [299, 313], "_j": 299, "_k": [299, 313], "det": 299, "Then": [299, 313, 322], "ofv_": 299, "iofv_": 299, "iofv_k": 299, "ofv_k": 299, "case_column": 299, "rikard": [299, 301, 306, 327, 331], "nordgren": [299, 301, 306, 327, 331], "sebastian": [299, 301, 306], "ueckert": [299, 301, 306], "svetlana": 299, "freiberga": 299, "karlsson": [299, 301, 306, 313, 331], "faster": [299, 300, 327], "2018": [299, 318, 331], "abstr": [299, 301], "8683": 299, "www": [299, 301, 318], "meet": [299, 301, 303, 318, 327], "replace_non_random_rv": 300, "get_observ": [300, 322], "is_strictness_fulfil": 300, "subtool": [300, 335], "properli": 300, "calculate_b": [300, 315, 317, 323], "incorrectli": 300, "final_model": 300, "plot_dv_vs_ipr": 300, "plot_cwres_vs_idv": 300, "add_indirect_effect": 300, "circul": 300, "version": [300, 302, 314, 318, 335], "filter_dataset": 300, "load_dataset": 300, "blqdv": 300, "better": [300, 323, 331], "usag": [300, 302], "set_reference_valu": 300, "create_basic_pk_model": [300, 322], "add_bioavail": 300, "autogener": 300, "typ": 300, "add_effect_compart": 300, "reorgan": 300, "saddl": 300, "llq": 300, "preced": 300, "reorder": 300, "model4": 300, "frem": [300, 320, 329, 330], "create_report": 300, "write_model": [300, 320, 322, 324], "did": [300, 332], "dadt": [300, 322], "de": [300, 322], "complex": [300, 305, 314, 334], "set_zero_order_input": 300, "set_tmdd": 300, "plugin": [300, 305, 310, 311, 316], "generate_model_cod": 300, "get_model_cod": 300, "advan7": 300, "didn": 300, "header": 300, "is_linear": 300, "plot_transformed_eta_distribut": 300, "create_config_templ": [300, 304], "get_dv_symbol": 300, "set_initial_condit": 300, "abbr": [300, 322, 324], "set_dvid": [300, 322], "regress": 300, "defdos": [300, 322], "sometim": 300, "wrong": 300, "bad": 300, "1551": 300, "is_real": 300, "advan5": 300, "copy_model": 300, "nlmixr2": [300, 316, 322], "display_od": 300, "rework": 300, "run_covsearch": [300, 307], "explicitodesystem": 300, "eval": 300, "successfulli": [300, 337], "round": [300, 309, 335], "proxi": [300, 318], "1314": 300, "1355": [300, 307], "1378": [300, 315], "typo": 300, "1377": 300, "1381": 300, "mm": [300, 302, 323, 335], "1064": [300, 315], "afd7707": 300, "1139": 300, "1394": 300, "too": [300, 318], "1117": 300, "timeout": 300, "loop": 300, "wait": 300, "lst": [300, 335], "much": 300, "ncomp": 300, "deidentify_data": [300, 322], "cli": 300, "anonym": 300, "setter": 300, "multivari": 300, "1293": 300, "1302": [300, 307], "1303": [300, 323], "last20": 300, "run_modelsearch": [300, 323, 335], "run_iovsearch": [300, 317], "run_ruvsearch": [300, 331], "run_iivsearch": [300, 315], "nomem": 300, "rh": 300, "1180": 300, "887": [300, 315, 317], "1162": 300, "1032": 300, "add_covariate_effect": [300, 322], "1004": 300, "remove_covariate_effect": [300, 322], "1181": 300, "9fd701521": 300, "best_model": 300, "final_model_nam": 300, "a7fbcbfe2": 300, "update_initial_individual_estim": 300, "modelsearch_candidate1": [300, 323, 335], "modelsearch_run1": 300, "wors": 300, "calculate_a": 300, "check_parameters_near_bound": 300, "check_high_correl": 300, "plot_iofv_vs_iofv": 300, "plot_individual_predict": 300, "evaluate_express": 300, "evaluate_weighted_residu": 300, "parameter_esimt": 300, "calculate_pk_parameters_statist": 300, "update_init": [300, 322], "predict_": 300, "print_fit_summari": 300, "write_result": 300, "rank_model": 300, "speedup": 300, "297a64041": 300, "1101": 300, "57fc4fee8": 300, "fd417aaf": 300, "convert_model": [300, 322], "d5458e36": 300, "keyerror": 300, "localmodeldirectori": 300, "filenotfounderror": 300, "1193bd39": 300, "unus": 300, "submodul": 300, "bb96a13c": 300, "update_paramet": 300, "0ca786c5": 300, "dd056da3": 300, "915bc9c7": 300, "get_config_path": [300, 304], "disabl": [300, 303, 304], "82b32278": 300, "unwant": 300, "debug": 300, "1131a610": 300, "ebfafb45": 300, "1173": 300, "fb070ee1": 300, "1049": [300, 315], "pyreadr": 300, "easier": [300, 310, 320], "instal": [300, 302, 304, 318, 336], "mac": [300, 305], "get_evid": [300, 322], "resmod": [300, 329], "916": 300, "errors_allow": 300, "1055": 300, "attibut": 300, "1092": 300, "exlud": 300, "unreport": 300, "1076": 300, "988": 300, "1c65359": 300, "42fe72f": 300, "1001": 300, "lead": 300, "uneven": 300, "branch": [300, 305], "stepwis": [300, 307, 332, 335], "694": 300, "708": 300, "comment": [300, 324], "790": 300, "974": [300, 328], "produc": [300, 318], "1017": 300, "989": 300, "71f4cf23": 300, "dsl": 300, "932": 300, "973": 300, "cfc09bad": 300, "975": 300, "917": 300, "977": 300, "908": 300, "fd564168": 300, "088a046a": 300, "c76fa476": 300, "430f1d2e": 300, "make_declar": 300, "greekify_model": 300, "find_clearance_paramet": 300, "find_volume_paramet": 300, "vp": 300, "newer": 300, "seprat": 300, "solv": 300, "sporad": 300, "race": [300, 303], "lazi": 300, "duplic": 300, "745": 300, "1st": 300, "3rd": 300, "licens": [300, 304], "advanx": 300, "add_time_after_dos": [300, 322], "intercompartment": 300, "695": 300, "defob": 300, "gl": 300, "solve_ode_system": 300, "meta": 300, "switch": [300, 327], "read_dataset_from_datainfo": [300, 322], "addl": 300, "linalgerror": 300, "656": [300, 315], "tflite": [300, 314], "649": 300, "mdt": [300, 322], "expand_additional_dos": [300, 322], "modelsyntaxerror": 300, "588": 300, "625": [300, 315], "578": 300, "vc1": 300, "577": 300, "success": [300, 303, 307, 312, 315, 317, 335], "632": [300, 328], "636": 300, "boundari": [300, 317, 323, 334, 335], "590": 300, "gl_real": 300, "sampled_iofv": [300, 333], "subblock": 300, "check_dataset": [300, 322], "tensorflow": 300, "modelbuild": 300, "add_mdt_iiv": 300, "three": [300, 310, 318, 324], "add_eta": [300, 330], "etas_as_fullblock": 300, "iiv_as_fullblock": 300, "add_mdt_eta": 300, "wip": 300, "don": 300, "130": 300, "calculate_se_from_inf": 300, "calculate_cov_from_inf": 300, "calculate_inf_from_cov": 300, "calculate_inf_from_corrs": 300, "calculate_corr_from_inf": 300, "528": 300, "457": 300, "translate_nmtran_tim": [300, 322], "print_model_cod": [300, 314, 322], "has_michaelis_menten_elimin": 300, "has_zero_order_elimin": 300, "has_first_order_elimin": 300, "has_mixed_mm_fo_elimin": 300, "2c": 300, "1c": 300, "timevari": 300, "create_symbol": 300, "remove_unused_parameters_and_rv": 300, "mu_reference_model": 300, "simplify_express": 300, "bump_model_numb": 300, "get_doseid": [300, 322], "get_unit_of": 300, "get_concentration_parameters_from_data": [300, 322], "write_csv": 300, "resample_data": 300, "omit_data": 300, "get_observation_express": 300, "get_individu": 300, "get_dos": [300, 322], "list_time_varying_covari": [300, 322], "estmeth": 300, "optim": [300, 310, 320, 327], "incorrect": 300, "add_allometri": [300, 322], "add_covariance_step": 300, "remove_covariance_step": 300, "insert_aft": 300, "modelstat": 300, "power_on_ruv": 300, "estimationmethod": 300, "guard": 300, "avoid": [300, 310, 318, 337], "cdd": 300, "bipp": [300, 302], "5000": 300, "shift": 300, "nest": 300, "due": [300, 331, 334, 335], "set_dtbs_error_model": [300, 322], "dure": [300, 305, 337], "logger": 300, "parametr": 300, "broken": 300, "parallel": [300, 335], "print_model_symbol": 300, "parameter_sampl": 300, "api": [300, 310, 322, 326, 327, 336], "improv": [300, 330], "eta_shrinkag": 300, "summarize_model": 300, "window": [300, 305, 314, 318], "rstudio": [300, 327, 337], "zero_order_absorpt": 300, "first_order_absorpt": 300, "bolus_absorpt": 300, "set_bolus_absorpt": [300, 322], "seq_zo_fo_absorpt": 300, "set_seq_zo_fo_absorpt": [300, 322], "have_zero_order_absorpt": 300, "individual_shrinkag": 300, "individual_parameter_statist": 300, "pk_paramet": 300, "create_rv_block": 300, "split_rv_block": 300, "nind": 300, "nob": 300, "nobsi": 300, "remove_error": 300, "additive_error": 300, "proportional_error": 300, "combined_error": 300, "has_additive_error": 300, "has_proportional_error": 300, "has_combined_error": 300, "theta_as_stdev": 300, "set_dtbs_error": 300, "tdist": [300, 328], "john_drap": 300, "iiv_on_ruv": [300, 328, 330, 331], "add_individual_paramet": 300, "first_order_elimin": 300, "zero_order_elimin": 300, "michaelis_menten_elimin": 300, "mixed_mm_fo_elimin": 300, "revert": 300, "thread": [300, 303], "site": 300, "crossval": [300, 329], "qa": [300, 329], "plain": [300, 304, 305], "sdcorr": 300, "data_transform": 300, "evalut": 300, "dependent_variable_symbol": 300, "releas": [300, 318, 337], "claus": 300, "interfac": [300, 310, 314, 316, 318, 320, 322, 327, 336, 337], "com": 300, "stdin": 300, "123": [300, 307, 315, 317, 321, 323, 331], "clearer": 300, "prioriti": [300, 324], "aggregatedmodelfitresult": 300, "priorit": [300, 324], "half": [300, 328, 330], "life": [300, 328, 330], "set_nam": 300, "parameter_init": 300, "base_parameter_chang": [300, 313], "parameter_vari": [300, 313, 330], "coeffici": 300, "frem_result": 300, "simevalresult": 300, "odesystem": 300, "nonfixed_init": 300, "parameterset": 300, "migrat": 300, "github": [300, 305, 314, 316, 327, 337], "action": [300, 302, 303, 305, 318, 327], "columntyp": 300, "to_base_model": 300, "comined_mm_fo_elimin": 300, "absorption_r": 300, "pretti": 300, "qaresult": 300, "nmtranparseerror": 300, "error_model": 300, "pharmpyconfigpath": [300, 304], "environ": [300, 303, 336, 337], "linearizeresult": 300, "reset_indic": 300, "multiindic": 300, "functionsadd_lag_tim": 300, "yaml": 300, "view": [300, 318, 332], "assumpt": [300, 318], "0th": [300, 302], "parser": 300, "individul": 300, "extend": [300, 318, 330, 332], "postprocess": [300, 329], "librari": [300, 314, 316, 318, 327, 337], "stella": [301, 306, 327], "belin": [301, 306, 327], "gunnar": [301, 306], "yngman": [301, 306, 313], "simon": [301, 306], "carter": [301, 306], "buatoi": [301, 306], "jo\u00e3o": [301, 306], "abrant": [301, 306], "andrew": [301, 306], "hooker": [301, 306], "assemblerr": 301, "novel": 301, "process": [301, 305, 331], "2021": [301, 313], "9656": 301, "subcommand": 302, "top": [302, 309, 335], "help": [302, 303, 307, 322, 327, 335, 337], "verb": 302, "particular": [302, 303, 305, 309, 318, 319], "welcom": [302, 303, 305, 318], "exit": 302, "program": [302, 303, 314, 318], "pheno_r": [302, 309, 320, 321, 322], "prettyprint": 302, "output_fil": 302, "idcol": 302, "datecol": 302, "match": 302, "pager": 302, "stdout": [302, 335], "colnam": 302, "datasetsmultipl": 302, "1th": 302, "quot": 302, "comb": 302, "elimini": 302, "propot": 302, "error_typ": 302, "givenbi": 302, "cov_sampl": 302, "posdef": 302, "non_fix": 302, "input_path": 302, "particip": 303, "project": [303, 305, 316, 318, 337], "made": [303, 318, 320], "member": 303, "globe": 303, "divers": 303, "skill": [303, 327], "person": [303, 318], "experi": 303, "growth": 303, "everyon": [303, 305, 318], "guidelin": 303, "insid": [303, 318, 334], "goal": 303, "inclus": [303, 318, 330], "grow": 303, "pledg": 303, "treat": [303, 305, 318], "peopl": 303, "harass": 303, "bulli": 303, "sexual": 303, "orient": 303, "gender": 303, "ident": 303, "appear": [303, 337], "nation": [303, 306], "ethnic": 303, "religion": 303, "imageri": 303, "sexist": 303, "racist": 303, "exclusionari": 303, "joke": 303, "acknowledg": [303, 318], "citat": 303, "request": [303, 305], "author": [303, 318], "own": [303, 304, 310, 318], "cite": 303, "realiz": 303, "varieti": 303, "opinion": 303, "background": 303, "serv": [303, 318, 327], "enrich": 303, "discuss": 303, "pro": 303, "con": 303, "technologi": 303, "proactiv": 303, "ensur": [303, 318, 334], "heard": 303, "feel": [303, 327], "confid": 303, "freeli": 303, "question": 303, "answer": 303, "respectfulli": 303, "pai": 303, "attent": 303, "feedback": 303, "forum": 303, "especi": 303, "contribut": [303, 306, 316, 318], "conscienti": 303, "percept": 303, "wider": 303, "respond": 303, "strive": 303, "behavior": 303, "encourag": [303, 305, 310, 316], "debat": 303, "disagr": 303, "entir": [303, 305, 318, 335], "silent": 303, "violat": [303, 318], "contact": [303, 318], "talk": 303, "privat": [303, 318], "situat": 303, "onlin": 303, "offlin": 303, "mail": [303, 318], "social": 303, "media": 303, "confer": 303, "adapt": [303, 318], "astropi": 303, "global": [304, 337], "nonmen": 304, "conf": 304, "ini": [304, 322], "default_nonmem_path": 304, "nmfe751": 304, "licfil": 304, "rpath": 304, "temporarili": 304, "pharmpyconfigfil": 304, "your": [305, 314, 316, 318, 324, 335, 337], "bug": 305, "appreci": 305, "suggest": [305, 316], "suitabl": [305, 327], "student": [305, 327], "commun": [305, 318], "aspir": 305, "conduct": [305, 323], "foster": 305, "linux": [305, 314], "maco": [305, 314], "ll": [305, 322], "badg": 305, "pip": [305, 314], "python3": 305, "pip3": 305, "guid": [305, 309, 320, 322], "former": 305, "ubuntu": 305, "apt": 305, "url": [305, 314], "render": [305, 318, 327], "On": [305, 327], "sudo": 305, "brew": 305, "unnecessari": [305, 318], "thing": [305, 318], "instruct": [305, 314, 321, 335], "black": 305, "formatt": 305, "flake8": 305, "linter": 305, "isort": 305, "lint": 305, "reformat": 305, "py39": 305, "test_paramet": 305, "py": [305, 314], "test_get_theta": 305, "apart": 305, "suit": 305, "purpos": [305, 318], "test_modelsearch": 305, "test_summary_individu": 305, "pull": 305, "manag": 305, "contributor": [305, 318], "emploi": 305, "commit": [305, 318], "push": 305, "name_of_branch": 305, "deploy": 305, "setup": 305, "pypi": [305, 314], "trigger": [305, 320], "tag": 305, "disturb": 305, "checkout": 305, "rebas": 305, "changelog": 305, "bump": 305, "good": [305, 318], "semant": 305, "bumpvers": 305, "cfg": 305, "sh": 305, "patch": 305, "minor": 305, "major": [305, 318], "copyright": 305, "necessari": [305, 318], "coi": 305, "stream": [305, 320], "verbatim": [305, 318], "farmaci": 306, "uu": 306, "kajsa": 306, "harl": 306, "zhe": [306, 327], "huang": [306, 327], "aurelien": 306, "oom": 306, "johan": 306, "borg": 306, "antonia": 306, "hufnagl": 306, "viktor": 306, "rogn\u00e5": 306, "piyanan": 306, "assawasuwannakit": 306, "xiaomei": 306, "chen": 306, "alzahra": 306, "hamdan": 306, "osama": 306, "qutishat": 306, "shijun": 306, "wang": 306, "tianwu": 306, "yang": 306, "keqi": 306, "shi": 306, "xuanlin": 306, "liu": 306, "samia": 306, "moham": 306, "yersultan": 306, "mirasbekov": 306, "warm": 306, "thank": 306, "sponsor": 306, "hoffman": 306, "la": 306, "roch": 306, "ltd": 306, "pharmetheu": 306, "uppsala": [306, 316], "univers": [306, 316], "enabl": [306, 318], "resourc": 306, "swedish": 306, "infrastructur": 306, "snic": 306, "uppmax": 306, "research": [306, 327], "council": 306, "inter": [307, 315, 322], "five": 307, "sentenc": 307, "manual": [307, 309, 335], "rewritten": 307, "notic": [307, 318], "semicolon": 307, "filtrat": [307, 323], "filtered_input_model": 307, "mox2": [307, 312, 315, 317, 323, 335], "covsearch_run5": 307, "covsearch_run6": 307, "covsearch_run7": 307, "covsearch_run8": 307, "covsearch_run9": 307, "covsearch_run10": 307, "covsearch_run11": 307, "covsearch_run12": 307, "covsearch_run13": 307, "covsearch_run14": 307, "covsearch_run15": 307, "covsearch_run16": 307, "covsearch_run17": 307, "covsearch_run18": 307, "covsearch_run19": 307, "covsearch_run20": 307, "covsearch_run21": 307, "covsearch_run22": 307, "covsearch_run23": 307, "covsearch_run24": 307, "covsearch_run25": 307, "covsearch_run26": 307, "covsearch_run27": 307, "covsearch_run28": 307, "covsearch_run29": 307, "covsearch_run30": 307, "covsearch_run31": 307, "covsearch_run32": 307, "covsearch_run33": 307, "covsearch_run34": 307, "covsearch_run35": 307, "covsearch_run36": 307, "covsearch_run37": 307, "covsearch_run38": 307, "covsearch_run39": 307, "covsearch_run40": 307, "covsearch_run41": 307, "covsearch_run42": 307, "covsearch_run43": 307, "covsearch_run44": 307, "covsearch_run45": 307, "covsearch_run46": 307, "covsearch_run47": 307, "covsearch_run48": 307, "covsearch_run49": 307, "covsearch_run50": 307, "covsearch_run51": 307, "covsearch_run52": 307, "covsearch_run53": 307, "covsearch_run54": 307, "pvalu": [307, 332], "goal_pvalu": [307, 332], "is_backward": [307, 332], "047127e": 307, "03": [307, 328, 330, 332], "710000e": 307, "568110e": 307, "494490e": 307, "498453e": 307, "459287e": 307, "280678e": 307, "923500e": 307, "003390e": 307, "984500e": 307, "372293e": 307, "176965e": 307, "207550e": 307, "626878e": 307, "564495e": 307, "539960e": 307, "762000e": 307, "823200e": 307, "417058e": 307, "759040e": 307, "469024e": 307, "811054e": 307, "642452e": 307, "840779e": 307, "261720e": 307, "651215e": 307, "954671e": 307, "163414e": 307, "926594e": 307, "491049e": 307, "423998e": 307, "706676e": 307, "374390e": 307, "054865e": 307, "105347e": 307, "300000e": 307, "029682e": 307, "641559e": 307, "748923e": 307, "363918e": 307, "203548e": 307, "052323e": 307, "567877e": 307, "507358e": 307, "510000e": 307, "1292": [307, 312, 315, 317, 323], "186761": [307, 312, 315, 317, 323], "742325": 307, "929085": 307, "315057": 307, "1346": 307, "501817": 307, "978215": 307, "1332": 307, "164976": 307, "062682": 307, "1312": 307, "249442": 307, "061671": 307, "248431": 307, "056538": 307, "1313": [307, 323], "243298": 307, "732689": 307, "919450": 307, "651626": 307, "1335": 307, "838386": 307, "814832": 307, "1334": 307, "001593": 307, "363759": 307, "550520": 307, "989077": 307, "175838": 307, "136326": 307, "323087": 307, "387950": 307, "1316": 307, "574711": 307, "961688": 307, "148448": 307, "743393": 307, "930153": 307, "617998": 307, "1340": 307, "804759": 307, "641996": 307, "1345": 307, "828756": 307, "288366": 307, "1357": 307, "475127": 307, "263168": 307, "1343": [307, 315], "449928": 307, "814686": 307, "1319": 307, "001446": 307, "181808": 307, "368568": 307, "957602": 307, "144362": 307, "567343": 307, "754104": 307, "426389": 307, "613149": 307, "66": [307, 328], "324567": 307, "1358": [307, 322], "511327": 307, "446030": 307, "632790": 307, "549224": 307, "1326": 307, "735985": 307, "997342": 307, "184102": 307, "617389": 307, "1351": 307, "804150": 307, "900404": 307, "1350": 307, "087164": 307, "566615": 307, "1391": 307, "753375": 307, "929659": 307, "1352": 307, "116420": 307, "990522": 307, "177283": 307, "217267": 307, "404028": 307, "62": [307, 328], "729333": 307, "1354": 307, "916093": 307, "101": 307, "379219": 307, "1393": 307, "565980": 307, "67": [307, 330, 332], "670588": 307, "1359": 307, "857348": 307, "016040": 307, "202801": 307, "926496": 307, "113256": 307, "139": 307, "462177": 307, "1431": 307, "648937": 307, "83": [307, 328, 330], "706655": 307, "1375": 307, "893415": 307, "798603": 307, "1367": 307, "985364": 307, "801019": 307, "1438": 307, "987780": 307, "92": 307, "443408": 307, "1384": 307, "630169": 307, "997461": 307, "1439": 307, "184221": 307, "322869": 307, "509630": 307, "925020": 307, "111781": 307, "142": 307, "814402": 307, "1435": 307, "001163": [307, 319], "862830": 307, "049591": 307, "449696": 307, "636456": 307, "801017": 307, "987778": 307, "89": [307, 323], "86": 307, "1414": 307, "872375": 307, "93": [307, 312], "810457": 307, "76": 307, "630168": 307, "68": 307, "pop_vc_estim": [307, 312, 317, 331], "pop_mat_estim": [307, 312, 317, 331], "5328": [307, 312, 315, 317, 323], "2300": [307, 312, 315, 323], "433676": [307, 312, 315, 317, 323], "2632": 307, "103": [307, 315], "2400": 307, "447194": 307, "8757": 307, "106": [307, 315, 328, 330, 331], "2690": 307, "429235": 307, "4824": 307, "0490": 307, "435646": 307, "1536": 307, "7690": 307, "430342": 307, "9763": 307, "102": 307, "8640": 307, "428158": 307, "9807": 307, "1030": 307, "505090": 307, "3823": 307, "4790": 307, "453248": 307, "3323": 307, "5279": 307, "434088": 307, "7087": 307, "109": [307, 323], "1750": 307, "459561": 307, "8501": 307, "4740": 307, "428178": 307, "4821": 307, "0270": 307, "435683": 307, "1635": 307, "5920": 307, "433194": 307, "0931": 307, "1120": 307, "435607": 307, "1216": 307, "2180": 307, "519385": 307, "3873": 307, "4580": 307, "453399": 307, "4279": 307, "6231": 307, "442192": 307, "9115": 307, "9240": 307, "466270": 307, "7337": 307, "9590": 307, "409478": 307, "3781": 307, "2760": 307, "415011": 307, "1007": 307, "5110": 307, "446059": 307, "8490": 307, "522201": 307, "2833": 307, "7400": 307, "430777": 307, "3688": 307, "9010": 307, "444906": 307, "9130": 307, "7450": 307, "468161": 307, "8124": 307, "7120": 307, "407766": 307, "3789": 307, "2080": 307, "416694": 307, "1985": 307, "6770": 307, "441794": 307, "2994": 307, "94": 307, "1796": 307, "587939": 307, "4692": 307, "3027": 307, "440385": 307, "0941": 307, "6170": 307, "463834": 307, "6693": 307, "2570": 307, "413923": 307, "3618": 307, "427491": 307, "2658": 307, "5620": 307, "521096": 307, "4546": 307, "9522": 307, "446657": 307, "0732": 307, "105": [307, 312, 331], "0130": 307, "454492": 307, "7145": 307, "9771": 307, "451302": 307, "3318": 307, "9710": 307, "477444": 307, "4944": 307, "3068": 307, "502124": 307, "0790": 307, "7890": 307, "462595": 307, "7389": 307, "8006": 307, "491811": 307, "6677": 307, "7770": 307, "477864": 307, "6488": 307, "0460": 307, "472418": 307, "9834": 307, "9929": 307, "474434": 307, "0359": 307, "2120": 307, "478021": 307, "0706": 307, "1991": 307, "474688": 307, "0336": 307, "8083": 307, "475373": 307, "0636": 307, "2525": 307, "473063": 307, "0292": 307, "8033": 307, "473542": 307, "0651": 307, "9375": 307, "483644": 307, "0661": 307, "5310": 307, "462817": 307, "0432": 307, "1300": [307, 317], "446808": 307, "7913": 307, "90": [307, 334], "1894": 307, "489466": 307, "9838": 307, "9945": 307, "474441": 307, "0361": 307, "478038": 307, "ruv_prop_estim": [307, 312, 317, 331], "pop_clage_estim": 307, "209972": [307, 312, 315, 317, 323], "197452": 307, "005338": 307, "192852": 307, "199549": 307, "193411": 307, "195608": 307, "192557": 307, "198783": 307, "191425": 307, "192934": 307, "192682": 307, "000659": 307, "199545": 307, "000303": 307, "193747": 307, "000956": 307, "197305": 307, "006150": 307, "194664": 307, "005918": 307, "198812": 307, "000334": 307, "192753": 307, "006503": 307, "194238": 307, "009567": 307, "189160": 307, "005291": 307, "195766": 307, "003125": 307, "195730": 307, "004767": 307, "195098": 307, "006600": 307, "195843": 307, "001364": 307, "189330": 307, "003100": 307, "193116": 307, "008094": 307, "189540": 307, "006380": 307, "196038": 307, "002606": 307, "197429": 307, "000340": 307, "204599": 307, "002549": 307, "190442": 307, "000522": 307, "195705": 307, "005726": 307, "192398": 307, "002984": 307, "196915": 307, "000299": 307, "198387": 307, "001229": 307, "190453": 307, "000216": 307, "197082": 307, "005988": 307, "191512": 307, "002433": 307, "194217": 307, "000649": 307, "191075": 307, "001918": 307, "197129": 307, "005915": 307, "183751": 307, "001489": 307, "187999": 307, "001004": 307, "194026": 307, "005955": 307, "187663": 307, "002481": 307, "193344": 307, "009365": 307, "187822": 307, "002901": 307, "187730": 307, "187425": 307, "002946": 307, "184713": 307, "006622": 307, "187724": 307, "002919": 307, "187525": 307, "003050": 307, "192812": 307, "005142": 307, "183104": 307, "001493": 307, "187672": 307, "002483": 307, "193349": 307, "009366": 307, "pop_clwt_estim": 307, "382904": 307, "010536": 307, "387669": 307, "010497": 307, "396947": 307, "010523": 307, "385807": 307, "010703": 307, "554417": 307, "011851": 307, "519989": 307, "012179": 307, "808497": 307, "011109": 307, "737404": [307, 333], "007109": 307, "709206": 307, "000803": 307, "736659": 307, "000429": 307, "706752": 307, "000822": 307, "662625": 307, "002097": 307, "709124": 307, "000793": 307, "704774": 307, "427285": 307, "003711": 307, "779125": 307, "001087": 307, "007108": 307, "pop_matage_estim": 307, "pop_matsex_estim": 307, "059279": 307, "517590": 307, "056724": 307, "520520": 307, "063392": 307, "057943": 307, "019268": 307, "348000": 307, "008419": 307, "040813": 307, "045624": 307, "023159": 307, "057041": 307, "059912": 307, "003577": 307, "495110": 307, "070972": 307, "033397": 307, "013863": 307, "012482": 307, "367050": 307, "020109": 307, "442940": 307, "030354": 307, "491875": 307, "038044": 307, "224276": 307, "001885": 307, "848782": 307, "017435": 307, "646840": 307, "585757": 307, "000169": 307, "367142": 307, "002221": 307, "737357": 307, "009685": 307, "033267": 307, "009238": 307, "267484": 307, "012667": 307, "165471": 307, "005033": 307, "094740": 307, "010833": 307, "065816": 307, "004749": 307, "096523": 307, "005557": 307, "098655": 307, "107862": 307, "012020": 307, "118838": 307, "005781": 307, "002862": 307, "222520": 307, "005160": 307, "361570": 307, "008017": 307, "030930": 307, "005034": 307, "094706": 307, "010829": 307, "065876": 307, "pop_matwt_estim": 307, "019706": 307, "014651": 307, "020136": 307, "014954": 307, "022336": 307, "011936": 307, "005508": 307, "002344": 307, "013967": 307, "034213": 307, "034044": 307, "009672": 307, "008593": 307, "017124": 307, "000315": 307, "022223": 307, "019316": 307, "009542": 307, "010323": 307, "008652": 307, "018053": 307, "019211": 307, "001906": 307, "014021": 307, "011399": 307, "003565": 307, "010903": 307, "014331": 307, "013699": 307, "015830": 307, "000202": [307, 333], "002078": 307, "009019": 307, "005773": 307, "012366": 307, "002607": 307, "002247": 307, "005768": 307, "011567": 307, "006160": 307, "014272": 307, "004566": 307, "010938": 307, "002378": 307, "007473": 307, "011606": 307, "010672": 307, "000456": 307, "009445": 307, "014649": 307, "012169": 307, "005771": 307, "002248": 307, "pop_vcwt_estim": 307, "953372": 307, "013320": 307, "984897": 307, "012092": 307, "972469": 307, "011946": 307, "954734": 307, "010781": 307, "009540": 307, "009922": 307, "989687": 307, "009576": 307, "986758": 307, "869150": 307, "632058": 307, "008418": 307, "751771": 307, "007571": 307, "416489": 307, "013879": 307, "724866": 307, "008196": 307, "746265": 307, "007399": 307, "727224": 307, "008331": 307, "666572": 307, "010074": 307, "751144": 307, "008031": 307, "711725": 307, "008833": 307, "012851": 307, "967468": 307, "751794": 307, "007573": 307, "416464": 307, "013880": 307, "110": [307, 315, 317, 323, 331], "113": [307, 315, 317, 323, 331], "121": [307, 315, 317, 323, 331], "1403": [307, 315, 317, 323, 331], "1404": [307, 315, 317, 323, 331], "1405": [307, 315, 317, 323, 331], "1406": [307, 315, 317, 323, 331], "1407": [307, 315, 317, 323, 331], "757118": [307, 315, 317, 323], "659694": [307, 315, 317, 323], "302503": [307, 315, 317, 323], "464327": [307, 315, 317, 323], "034898": [307, 315, 317, 323], "482240": 307, "223632": 307, "357442": 307, "119299": 307, "565277": 307, "696443": 307, "062486": 307, "234841": 307, "088594": 307, "953572": 307, "857979": 307, "193305": 307, "003283": 307, "861988": 307, "188718": 307, "005806": 307, "962325": 307, "455479": 307, "289527": 307, "216857": 307, "4015": 307, "2022": [307, 312, 315, 317, 323, 335], "462": 307, "nhowev": [307, 312, 317], "reduced_ofv": [307, 332], "extended_ofv": [307, 332], "ofv_drop": [307, 332], "extended_st": [307, 332], "621435": 307, "246753": 307, "394001": 307, "645626": 307, "219363": 307, "001068": 307, "875674": 307, "899671": 307, "152040": 307, "126842": 307, "678359": 307, "045482": 307, "821275": 307, "431017": 307, "290062": 307, "366965": 307, "488428": 307, "591623": 307, "039740": 307, "659788": 307, "942802": 307, "017391": 307, "380435": 307, "441298": 307, "668043": 307, "180108": 307, "388697": 307, "680065": 307, "025518": 307, "935973": 307, "446136": 307, "690615": 307, "782563": 307, "002416": 307, "644805": 307, "554053": 307, "674591": 307, "072441": 307, "183059": 307, "134631": 307, "547765": 307, "311846": 307, "373764": 307, "196444": 307, "delta_df": [307, 332], "extended_signific": [307, 332], "covariate_effect": [307, 313, 330, 332], "ofv_summari": [307, 332], "candidate_summari": [307, 332], "n_test": [307, 332], "n_ok": [307, 332], "n_localmin": [307, 332], "n_fail": [307, 332], "stepinclud": [307, 332], "estimation_ofv": 308, "prediction_ofv": 308, "545": 308, "863847": 308, "186": 308, "192727": 308, "512": 308, "953185": 308, "694832": 308, "547": 308, "843632": 308, "184": [308, 328, 332], "022535": 308, "579": 308, "109635": 308, "596550": 308, "prediction_ofv_sum": 308, "747": 308, "506644594254": 308, "read_raw_dataset": 309, "sever": [309, 314, 322, 330], "examin": [309, 312, 314, 323, 336], "di": 309, "role": 309, "identif": [309, 331], "mostli": [309, 310, 327], "steven": 309, "typologi": 309, "en": [309, 310, 313], "wikipedia": 309, "wiki": [309, 318], "level_of_measur": 309, "annot": 309, "kg": 309, "mg": 309, "l": 309, "low": [309, 322, 336], "understand": [309, 326], "accompani": [309, 318], "arrai": [309, 320, 322, 335], "And": [309, 318, 322, 335], "under": [310, 316, 318, 332, 337], "construct": [310, 326], "complet": 310, "four": 310, "distinct": 310, "layer": [310, 323, 325], "worklow": 310, "higher": [310, 316, 320, 322, 333], "coupl": 310, "mathemat": [310, 320, 327], "concid": 310, "live": 310, "namespac": 310, "mutablesequ": 310, "scalar": [310, 320], "element": [310, 321, 337], "concern": [310, 318], "expos": 310, "numpydoc": 310, "readthedoc": 310, "ecosystem": 310, "thu": [310, 315, 318, 320, 335], "wrap": 310, "share": [310, 318, 325], "leak": 310, "third": [310, 318], "parti": [310, 318], "break": 310, "run_estmethod": 312, "chapter": [312, 323], "few": 312, "cartesian": 312, "addition": [312, 323, 335], "9999": 312, "supported_solv": 312, "runtime_estim": 312, "estmethod_run2": 312, "2422": 312, "465718": 312, "estmethod_run1": 312, "2271": 312, "769243": 312, "run_typ": 312, "1299": [312, 317], "696027": 312, "2420": 312, "117263": 312, "145": 312, "2702": 312, "1840": 312, "3241": 312, "6578": 312, "iiv_cl_estim": [312, 317, 331], "iiv_vc_estim": [312, 317, 331], "481858": [312, 315, 317, 323], "593654": [312, 315, 317, 323], "439589": 312, "483291": 312, "598179": 312, "901289": 312, "419533": 312, "408292": 312, "iiv_mat_estim": [312, 317, 331], "000130": [312, 317, 323], "322572": 312, "197647": 312, "865979": 312, "105366": 312, "10000": 312, "WITH": [312, 315, 317, 318, 334], "THE": [312, 315, 317, 318, 334], "model_3b": 313, "u": [313, 322], "eta_i": 313, "n_": 313, "par": [313, 320], "eta_k": 313, "bmatrix": 313, "vdot": 313, "eta_": [313, 320, 322], "sim": [313, 320, 322, 333], "mathcal": [313, 320, 322], "mu_2": 313, "omega_": [313, 320], "n1": 313, "n2": 313, "ddot": 313, "latter": 313, "partit": 313, "5th": 313, "630859": 313, "868770": 313, "176754": 313, "95th": 313, "925602": 313, "082310": 313, "244607": 313, "569077": 313, "600360": 313, "632538": 313, "532478": 313, "824355": 313, "138312": 313, "577861": 313, "761430": 313, "991915": 313, "003863": 313, "148763": 313, "297579": 313, "600771": 313, "631260": 313, "661025": 313, "315965": 313, "549669": 313, "811532": 313, "margin": 313, "ij": 313, "ijk": 313, "omega_k": 313, "sigma_1": 313, "sigma_2": 313, "sigma_i": 313, "turn": [313, 320], "percent": 313, "red": 313, "figur": [313, 334], "vconcatchart": 313, "sigma_": [313, 320], "020503": 313, "628814": 313, "009309": 313, "544459": 313, "026950": 313, "613127": 313, "050396": 313, "551581": 313, "individual_effect": 313, "913307": 313, "899565": 313, "923297": 313, "939015": 313, "926632": 313, "948404": 313, "933506": 313, "894967": 313, "970755": 313, "010192": 313, "973823": 313, "047109": 313, "992728": 313, "986142": 313, "999404": 313, "361911": 313, "322628": 313, "418737": 313, "894772": 313, "868658": 313, "917333": 313, "947797": 313, "923656": 313, "969732": 313, "771958": 313, "748072": 313, "790423": 313, "790120": 313, "768277": 313, "806911": 313, "percentu": 313, "unexplained_vari": 313, "sd_observ": 313, "sd_5th": 313, "sd_95th": 313, "469535": 313, "359934": 313, "547612": 313, "465490": 313, "352335": 313, "538174": 313, "165502": 313, "141580": 313, "190726": 313, "159149": 313, "134989": 313, "183613": 313, "420471": 313, "327104": 313, "490419": 313, "404440": 313, "306148": 313, "467046": 313, "143317": 313, "122348": 313, "166012": 313, "141826": 313, "120282": 313, "163610": 313, "percetil": 313, "025328": 313, "022571": 313, "020115": 313, "216681": 313, "188254": 313, "163572": 313, "027391": 313, "021634": 313, "020540": 313, "intermedi": 313, "model_4": [313, 320], "parameter_inits_and_estim": 313, "model_3": 313, "115195": 313, "007066": 313, "209016": 313, "125999": 313, "020191": 313, "224959": 313, "126000": 313, "007084": 313, "38635": 313, "220463": 313, "195326": 313, "176796": 313, "bsv_apgr": [313, 320], "010583": 313, "107027": 313, "000008": 313, "171529": 313, "404278": 313, "000010": 313, "012042": 313, "115427": 313, "000032": 313, "208475": 313, "415588": 313, "000030": 313, "062712": 313, "117271": 313, "039930": 313, "446939": 313, "402075": 313, "bsv_wgt": [313, 320], "244579": 313, "244448": 313, "002173": 313, "002170": 313, "244080": 313, "007763": 313, "007760": 313, "249237": 313, "034610": 313, "015250": 313, "relative_chang": 313, "773218": 313, "095327": 313, "520526": 313, "271369": 313, "110618": 313, "896": 313, "974324": 313, "868": [313, 315], "657803": 313, "852": 313, "803483": 313, "753": 313, "302743": 313, "themselv": 313, "ideal": 313, "estimated_covari": 313, "stdev": 313, "423728": 313, "237640": 313, "525424": 313, "704565": [313, 322], "nyberg": 313, "hb": 313, "jonsson": 313, "mo": 313, "introduct": 313, "cpt": 313, "pharmacometr": [313, 316, 318, 335], "syst": 313, "pharmacol": 313, "1002": 313, "psp4": 313, "12741": 313, "plan": 314, "stabl": 314, "googl": [314, 327], "coral": 314, "repo": 314, "tflite_runtim": 314, "nonlinear": 314, "read_model_result": 315, "aspect": [315, 322, 330, 335], "explor": [315, 327], "naiv": 315, "minima": 315, "\u03b4ofv": [315, 317, 323], "\u03b4aic": [315, 317, 323], "\u03b4bic": [315, 317, 323], "iivsearch_no_of_etas_candidate3": 315, "282024": 315, "iivsearch_no_of_etas_candidate2": 315, "217": 315, "691571": 315, "iivsearch_no_of_etas_candidate6": 315, "641987": 315, "iivsearch_no_of_etas_candidate1": 315, "631": 315, "871991": 315, "iivsearch_no_of_etas_candidate5": 315, "633": [315, 321], "419500": 315, "iivsearch_no_of_etas_candidate4": 315, "815": 315, "076729": 315, "iivsearch_no_of_etas_candidate7": 315, "834": 315, "249063": 315, "iivsearch_block_structure_candidate1": 315, "971960": 315, "1283": 315, "597406": 315, "1279": 315, "315382": 315, "1061": 315, "623812": 315, "893": 315, "673395": 315, "443392": 315, "645": 315, "895882": 315, "464": 315, "238653": 315, "066319": 315, "1365": 315, "569365": 315, "178325": 315, "1280": 315, "1278": [315, 323], "1070": 315, "204731": 315, "1058": 315, "897": 315, "963854": 315, "024311": 315, "644": 315, "650": 315, "186341": 315, "640": 315, "468": 315, "529112": 315, "458": 315, "437": 315, "440744": 315, "1364": 315, "1261": [315, 317], "189012": 315, "1259": [315, 323], "530267": [315, 323], "1039": 315, "215418": [315, 332], "641723": 315, "034998": 315, "620": 315, "864210": 315, "439": 315, "206982": 315, "417": 315, "411370": 315, "160972": 315, "5333": 315, "0366": 315, "1164": 315, "2929": 315, "8058": 315, "9055": 315, "2270": 315, "9424": 315, "1360": 315, "239": 315, "1090": 315, "234": 315, "6680": 315, "9380": 315, "6690": 315, "9880": 315, "433544": 315, "114210": 315, "347648": 315, "316164": 315, "310155": 315, "922906": 315, "434563": 315, "436279": 315, "481830": 315, "594777": 315, "396159": 315, "516927": 315, "593578": 315, "414690": 315, "247930": 315, "656304": 315, "00013": 315, "31998": 315, "08352": 315, "43473": 315, "209975": 315, "401593": 315, "574966": 315, "736398": 315, "750954": 315, "744891": 315, "810669": 315, "215885": 315, "iiv_cl_iiv_vc_estim": 315, "498114": 315, "965311": 315, "348227": 315, "596114": 315, "524856": 315, "831038": 315, "973037": 315, "826292": 315, "168816": 315, "275494": 315, "612863": 315, "081253": 315, "444919": 315, "093815": 315, "067016": 315, "554482": 315, "103963": 315, "060027": 315, "670815": 315, "108198": 315, "049148": 315, "371": 315, "rxode2": [316, 322], "post": [316, 331], "sens": 317, "brute": 317, "approach": 317, "nonzero": 317, "iovsearch_run7": 317, "iovsearch_run8": 317, "540508": 317, "1265": 317, "694052": 317, "230772": 317, "384316": 317, "230394": 317, "383938": 317, "1262": 317, "153544": 317, "750000": 317, "403544": 317, "750400": 317, "403145": 317, "060114": 317, "093431": 317, "043077": 317, "1257": 317, "110467": 317, "782429": 317, "1115": 317, "911624": 317, "015062": 317, "707566": 317, "017679": 317, "017280": 317, "707992": 317, "707614": 317, "017728": 317, "1145": 317, "944840": 317, "230": 317, "1954": 317, "242": [317, 328, 330], "440613": 317, "665": 317, "439784": 317, "1951": 317, "241": 317, "1950": 317, "440611": 317, "1402": 317, "439785": 317, "439783": 317, "2313": 317, "438628": 317, "474140": 317, "586866": 317, "311861": 317, "472835": 317, "590422": 317, "320387": 317, "474125": 317, "586859": 317, "311859": 317, "474111": 317, "586860": 317, "311903": 317, "590425": 317, "320393": 317, "472840": 317, "590424": 317, "320395": 317, "572627": 317, "290631": 317, "omega_iov_1_estim": 317, "194680": 317, "002735": 317, "195532": 317, "194676": 317, "194675": 317, "195531": 317, "197005": 317, "483460": 317, "omega_iov_2_estim": 317, "omega_iov_3_estim": 317, "000006": 317, "000000e": [317, 332], "241921": 317, "119820": 317, "001912": 317, "068405": 317, "121866": 317, "620420": 317, "271367": 317, "291396": 317, "230854": 317, "051358": 317, "936871": 317, "267222": 317, "042977": 317, "050766": 317, "059323": 317, "250083": 317, "291876": 317, "187631": 317, "020838": 317, "612880": 317, "660334": 317, "657": 317, "279": [317, 328], "NEAR": [317, 323, 334], "adopt": 318, "wikimedia": 318, "bowl_of_hygieia_by_david": 318, "svg": 318, "cc": 318, "BY": 318, "sa": 318, "font": 318, "pt": 318, "san": 318, "relicens": 318, "lgpl": 318, "know": 318, "maintaint": 318, "2023": [318, 334], "softwar": [318, 320, 321, 322, 327, 335], "redistribut": 318, "publish": 318, "foundat": 318, "hope": 318, "warranti": 318, "impli": 318, "merchant": 318, "FOR": 318, "modif": [318, 330], "permit": 318, "retain": 318, "disclaim": 318, "reproduc": 318, "materi": 318, "holder": 318, "AND": 318, "AS": 318, "OR": 318, "BUT": 318, "NOT": 318, "TO": [318, 334], "OF": [318, 334], "IN": 318, "shall": 318, "BE": [318, 334], "liabl": 318, "incident": 318, "exemplari": 318, "consequenti": 318, "damag": 318, "procur": 318, "servic": 318, "loss": 318, "profit": 318, "busi": 318, "interrupt": 318, "theori": [318, 320], "liabil": 318, "contract": 318, "tort": 318, "neglig": 318, "aris": 318, "advis": 318, "SUCH": 318, "june": 318, "2007": 318, "inc": 318, "fsf": 318, "preambl": 318, "copyleft": 318, "practic": 318, "awai": 318, "contrast": 318, "guarante": 318, "speak": 318, "price": 318, "charg": 318, "wish": 318, "piec": 318, "prevent": 318, "deni": 318, "ask": [318, 337], "surrend": 318, "therefor": [318, 335], "grati": 318, "fee": 318, "recipi": 318, "gpl": 318, "assert": 318, "offer": [318, 322], "permiss": 318, "clearli": 318, "sake": 318, "erron": 318, "devic": 318, "although": 318, "manufactur": 318, "fundament": 318, "incompat": 318, "aim": [318, 330], "systemat": 318, "abus": 318, "area": [318, 327], "unaccept": 318, "prohibit": 318, "substanti": 318, "domain": [318, 325, 335], "stand": 318, "readi": 318, "provis": 318, "futur": 318, "threaten": 318, "constantli": 318, "patent": 318, "danger": 318, "proprietari": 318, "assur": 318, "law": 318, "semiconductor": 318, "mask": 318, "license": 318, "address": 318, "organ": [318, 320], "fashion": 318, "exact": 318, "earlier": 318, "cover": [318, 323, 324, 326, 334, 336], "unmodifi": 318, "propag": 318, "secondarili": 318, "infring": 318, "countri": 318, "convei": 318, "mere": 318, "network": 318, "transfer": 318, "extent": 318, "conveni": [318, 320], "promin": 318, "visibl": 318, "menu": 318, "criterion": [318, 335], "offici": 318, "wide": 318, "among": 318, "essenti": 318, "kernel": 318, "script": [318, 335], "link": [318, 331], "subprogram": 318, "intim": 318, "regener": 318, "grant": 318, "irrevoc": 318, "affirm": 318, "unlimit": 318, "constitut": 318, "fair": 318, "equival": [318, 335], "sole": 318, "facil": 318, "compli": 318, "behalf": 318, "relationship": [318, 332], "circumst": 318, "sublicens": 318, "anti": 318, "circumvent": 318, "deem": 318, "technolog": 318, "oblig": 318, "articl": 318, "wipo": 318, "treati": 318, "decemb": 318, "1996": 318, "waiv": 318, "forbid": 318, "exercis": 318, "intent": 318, "enforc": 318, "medium": [318, 327], "conspicu": 318, "intact": 318, "absenc": 318, "relev": [318, 324, 335], "anyon": 318, "who": [318, 324], "possess": 318, "invalid": 318, "natur": 318, "storag": 318, "aggreg": 318, "beyond": 318, "embodi": 318, "durabl": 318, "customarili": 318, "interchang": 318, "spare": 318, "reason": [318, 327, 334], "cost": 318, "server": 318, "occasion": 318, "noncommerci": 318, "subsect": 318, "6b": 318, "further": [318, 320], "clear": [318, 337], "sai": [318, 324], "host": 318, "satisfi": 318, "peer": 318, "transmiss": 318, "6d": 318, "portion": 318, "consum": 318, "tangibl": 318, "household": 318, "sold": 318, "incorpor": 318, "dwell": 318, "doubt": 318, "resolv": [318, 325], "favor": 318, "coverag": 318, "typic": [318, 335], "commerci": 318, "industri": 318, "procedur": [318, 334], "suffic": 318, "interf": 318, "perpetu": 318, "character": 318, "But": 318, "nor": 318, "abil": 318, "rom": 318, "advers": 318, "protocol": 318, "publicli": 318, "password": 318, "unpack": 318, "supplement": 318, "govern": 318, "notwithstand": 318, "misrepresent": 318, "licensor": 318, "declin": 318, "trademark": 318, "trade": 318, "indemnif": 318, "contractu": 318, "impos": 318, "surviv": 318, "expressli": 318, "void": 318, "paragraph": 318, "ceas": 318, "reinstat": 318, "provision": 318, "perman": 318, "notifi": 318, "prior": 318, "dai": 318, "cessat": 318, "moreov": 318, "cure": 318, "receipt": 318, "qualifi": 318, "ancillari": 318, "consequ": 318, "likewis": 318, "downstream": 318, "complianc": 318, "entiti": 318, "asset": 318, "subdivid": 318, "plu": 318, "effort": 318, "royalti": 318, "litig": 318, "claim": 318, "counterclaim": 318, "lawsuit": 318, "alleg": 318, "sell": 318, "sale": 318, "acquir": 318, "hereaft": 318, "manner": [318, 323], "worldwid": 318, "agreement": 318, "denomin": 318, "coven": 318, "sue": 318, "knowingli": 318, "readili": 318, "arrang": [318, 335], "depriv": 318, "yourself": 318, "benefit": [318, 327], "knowledg": 318, "believ": 318, "pursuant": 318, "convey": 318, "discriminatori": 318, "scope": [318, 334], "payment": 318, "primarili": 318, "march": 318, "constru": 318, "defens": 318, "court": 318, "contradict": 318, "excus": 318, "simultan": [318, 323], "pertin": 318, "agre": 318, "whom": 318, "refrain": 318, "affero": 318, "revis": 318, "Such": 318, "spirit": 318, "ever": 318, "THERE": 318, "qualiti": 318, "prove": 318, "defect": 318, "repair": 318, "WILL": 318, "inabl": 318, "BEING": 318, "inaccur": 318, "sustain": 318, "failur": [318, 327], "review": 318, "waiver": 318, "civil": 318, "greatest": 318, "achiev": 318, "safest": 318, "pointer": 318, "brief": 318, "idea": [318, 327], "electron": 318, "paper": 318, "hypothet": 318, "Of": 318, "cours": 318, "gui": 318, "box": [318, 330], "employ": 318, "programm": 318, "school": 318, "philosophi": 318, "why": 318, "7b2feb6f20b626a559d3150f6638c111f20b5213": 318, "lin_evalu": 319, "lin_estim": 319, "847272": 319, "problemat": 319, "742853": 319, "722681": 319, "020172": 319, "049270": 319, "072922": 319, "023652": 319, "042005": 319, "025071": 319, "016933": 319, "812731": 319, "767326": 319, "045405": 319, "092668": 319, "052741": 319, "039927": 319, "345523": 319, "466217": 319, "120694": 319, "092993": 319, "062696": 319, "030297": 319, "515740": 319, "483016": 319, "032724": 319, "320532": 319, "253131": 319, "067401": 319, "998789": 319, "959488": 319, "039301": 319, "216717": 319, "214554": 319, "002163": 319, "099921": 319, "125228": 319, "025306": 319, "321679": 319, "306275": 319, "015405": 319, "261241": 319, "333707": 319, "072466": 319, "671243": 319, "651480": 319, "019763": 319, "330720": 319, "297562": 319, "033158": 319, "936161": 319, "906483": 319, "029678": 319, "714069": 319, "871090": 319, "157021": 319, "019825": 319, "011817": 319, "008008": 319, "056142": 319, "013498": 319, "042644": 319, "248747": 319, "213924": 319, "034823": 319, "605213": 319, "571494": 319, "033719": 319, "815937": 319, "898911": 319, "082974": 319, "454128": 319, "483765": 319, "029637": 319, "964631": 319, "119373": 319, "154742": 319, "186715": 319, "170103": 319, "016612": 319, "077661": 319, "064019": 319, "013642": 319, "940635": 319, "941894": 319, "001260": 319, "074883": 319, "073446": 319, "001437": 319, "256369": 319, "245489": 319, "010881": 319, "103887": 319, "101956": 319, "001932": 319, "907728": 319, "900485": 319, "007243": 319, "743720": 319, "709980": 319, "033740": 319, "047324": 319, "021009": 319, "026315": 319, "430306": 319, "400894": 319, "029412": 319, "781609": 319, "798011": 319, "016402": 319, "378940": 319, "371430": 319, "007511": 319, "194729": 319, "237151": 319, "042422": 319, "599213": 319, "525654": 319, "073559": 319, "709166": 319, "667521": 319, "041645": 319, "219054": 319, "180075": 319, "038978": 319, "122738": 319, "296506": 319, "173768": 319, "229686": 319, "228531": 319, "001156": 319, "756406": 319, "734272": 319, "022134": 319, "979740": 319, "927830": 319, "051910": 319, "813988": 319, "812185": 319, "001803": 319, "234962": 319, "233799": 319, "389988": 319, "431669": 319, "041681": 319, "057167": 319, "047647": 319, "009521": 319, "429917": 319, "365265": 319, "064652": 319, "011212": 319, "105276": 319, "094064": 319, "302735": 319, "342891": 319, "040156": 319, "292516": 319, "307608": 319, "015092": 319, "067193": 319, "977095": 319, "090098": 319, "359971": 319, "357379": 319, "002592": 319, "340768": 319, "341140": 319, "000372": 319, "515376": 319, "511708": 319, "003668": 319, "970486": 319, "940640": 319, "029846": 319, "638461": 319, "592266": 319, "046195": 319, "iofv_plot": 319, "At": [320, 334], "heart": 320, "li": [320, 335], "subclass": 320, "principl": 320, "mymodel": [320, 322], "parset": 320, "displaystyl": [320, 322], "eps_": 320, "similarli": [320, 337], "theta_": 320, "s_": 320, "a_": [320, 322], "quit": 320, "flexibl": 320, "cumbersom": 320, "unimport": 320, "frem_path": 320, "frem_model": 320, "frem_model_result": 320, "omega\u2082": 320, "omega\u2083": 320, "omega\u2084": 320, "\u2082": 320, "eta\u2083": 320, "\u2083": 320, "eta\u2084": 320, "eps\u2082": 320, "epscov": 320, "bsv_": 320, "omega_2_1": 320, "omega_3_1": 320, "omega_4_1": 320, "omega_3_2": 320, "omega_4_2": 320, "omega_4_3": 320, "000286193": 320, "0676481": 320, "0256033": 320, "0235094": 320, "00161838": 320, "24458": 320, "omega_est": 320, "0393482": 320, "0168369": 320, "0442286": 320, "0426757": 320, "0259374": 320, "0654878": 320, "00168063": 320, "983027": 320, "240423": 320, "98305": 320, "choleski": 320, "198363807182661": 320, "0848788911603008": 320, "136868454493349": 320, "222967085720797": 320, "616745467855979": 320, "743597812371906": 320, "215138540674925": 320, "145697201390566": 320, "508675383095755": 320, "810424017694199": 320, "pure": 320, "astyp": 320, "numeric64": 320, "linalg": 320, "19836381": 320, "08487889": 320, "13686845": 320, "22296709": 320, "61674547": 320, "74359781": 320, "21513854": 320, "1456972": 320, "50867538": 320, "81042402": 320, "esim": 321, "testdata": 321, "2760562818805": 321, "171321": 321, "167051": 321, "115069": 321, "Or": 321, "039153": 321, "022378": 321, "009904": 321, "044731": 321, "027325": 321, "527072": 321, "457068": 321, "267918": 321, "172147": 321, "proper": 321, "388058": 321, "356900": 321, "238442": 321, "096516": 321, "invers": 321, "29955600": 321, "800": 321, "400": 321, "910": 321, "267": 321, "039": 321, "207": 321, "809": 321, "520": 321, "980": 321, "200": 321, "450": 321, "810": 321, "947352": 321, "970591": 321, "982342": 321, "457091": 321, "839437": 321, "257230": 321, "098338": 321, "538621": 321, "647969": 321, "394643": 321, "480164": 321, "650233": 321, "991406": 321, "378880": 321, "739902": 321, "328800": 321, "113284": 321, "212096": 321, "334047": 321, "327778": 321, "821533": 321, "631281": 321, "861669": 321, "915261": 321, "988977": 321, "279273": 321, "733181": 321, "830053": 321, "851724": 321, "212095": 321, "774791": 321, "352283": 321, "172643": 321, "427376": 321, "381444": 321, "624014": 321, "970627": 321, "177028": 321, "206540": 321, "955029": 321, "982447": 321, "051499": 321, "424503": 321, "734342": 321, "018477": 321, "810285": 321, "279258": 321, "168486": 321, "190508": 321, "749134": 321, "598565": 321, "237467": 321, "568934": 321, "800062": 321, "098025": 321, "586253": 321, "663948": 321, "850993": 321, "605845": 321, "143": 321, "045": [321, 328], "971": 321, "881": 321, "575": 321, "080": 321, "063": 321, "427": 321, "668": 321, "543": 321, "662": 321, "478": 321, "667": 321, "253": 321, "495": 321, "918": 321, "67071": 321, "401100": 321, "35080": 321, "587770": 321, "36360": 321, "278800": 321, "19730": 321, "670700": 321, "21710": 321, "352600": 321, "86050": 321, "067200": 321, "35060": 321, "059269": 321, "72100": 321, "036754": 321, "10860": 321, "814140": 321, "28180": 321, "699410": 321, "eb": 321, "043861": 321, "005430": 321, "166321": 321, "131833": 321, "095934": 321, "130868": 321, "009154": 321, "017388": 321, "102019": 321, "283500": 321, "019417": 321, "099839": 321, "045946": 321, "059072": 321, "024270": 321, "189351": 321, "248536": 321, "091872": 321, "009545": 321, "012052": 321, "066151": 321, "293685": 321, "030236": 321, "074789": 321, "094502": 321, "147433": 321, "076820": 321, "105604": 321, "020051": 321, "066265": 321, "086035": 321, "023260": 321, "067138": 321, "030859": 321, "337255": 321, "035532": 321, "032579": 321, "028410": 321, "003589": 321, "080613": 321, "060233": 321, "052854": 321, "004469": 321, "057344": 321, "051992": 321, "212941": 321, "137510": 321, "004111": 321, "023282": 321, "302636": 321, "039069": 321, "119442": 321, "044956": 321, "263320": 321, "000776": 321, "083231": 321, "003150": 321, "012752": 321, "049654": 321, "080932": 321, "000555": 321, "099614": 321, "061864": 321, "332738": 321, "038156": 321, "067641": 321, "038017": 321, "184137": 321, "156617": 321, "208753": 321, "114558": 321, "053036": 321, "008405": 321, "026004": 321, "144920": 321, "081646": 321, "083320": 321, "015380": 321, "000392": 321, "078062": 321, "018966": 321, "112030": 321, "112715": 321, "383786": 321, "001730": 321, "167583": 321, "042068": 321, "066598": 321, "037600": 321, "000093": 321, "010662": 321, "009775": 321, "058306": 321, "229005": 321, "033958": 321, "008959": 321, "092312": 321, "050987": 321, "192569": 321, "002727": 321, "225657": 321, "115824": 321, "204269": 321, "054792": 321, "066334": 321, "123689": 321, "239678": 321, "047215": 321, "186615": 321, "000949": 321, "010812": 321, "015929": 321, "017213": 321, "005234": 321, "122552": 321, "076677": 321, "095696": 321, "024883": 321, "002999": 321, "007157": 321, "inspect": [322, 336], "model_nlmixr": 322, "diff": [322, 327], "add_error": 322, "focei": 322, "model_start": 322, "eta_vc": 322, "pop_": 322, "225": 322, "epsilon_": 322, "\u03c3": 322, "iiv_mat": 322, "iiv_": 322, "advan2": 322, "THEN": 322, "22500000000000e": 322, "cond": 322, "maxev": 322, "99999": 322, "cipredi": 322, "mytab": 322, "tlag": 322, "alag1": 322, "pop_mdt": 322, "advan3": 322, "trans4": 322, "run4": 322, "tol": 322, "pop_clmm": 322, "pop_km": 322, "iiv_clmm": 322, "iiv_clmm_iiv_vc": 322, "iiv_cl_iiv_mat": 322, "iiv_vc_iiv_mat": 322, "0094868": 322, "onto": 322, "wgt_median": 322, "30000": 322, "clwgt": 322, "pop_clwgt": 322, "user_effect": 322, "wgt_std": 322, "add_population_paramet": 322, "unfix_parameters_to": 322, "\u03b5\u209a\u2081": 322, "p1": 322, "set_time_varying_error_model": [322, 331], "100000000000000": 322, "f_flag": 322, "f_": 322, "geq": 322, "get_id": 322, "get_mdv": 322, "largest": 322, "ser": 322, "delai": [323, 334, 335], "grammar": [323, 334], "leav": 323, "exhaustive_stepwis": 323, "obtain": 323, "basi": 323, "subsequ": [323, 324, 335], "modelsearch_candidate2": [323, 335], "594608": 323, "1272": 323, "124874": 323, "modelsearch_candidate3": [323, 335], "558028": 323, "088295": 323, "modelsearch_candidate4": [323, 335], "956313": 323, "1270": 323, "486580": 323, "287000": 323, "1260": 323, "817266": 323, "362287": 323, "1327": 323, "153182": 323, "1325": 323, "551467": 323, "1307": 323, "301235": 323, "1295": 323, "1305": 323, "1289": 323, "2927": 323, "4334": 323, "7778": 323, "0058": 323, "1640": 323, "260324": 323, "7646": 323, "824443": 323, "5477": 323, "607839": 323, "1147": 323, "842498": 323, "470974": 323, "595276": 323, "526185": 323, "930160": 323, "495109": 323, "322680": 323, "470531": 323, "515250": 323, "312692": 323, "194221": 323, "202201": 323, "207885": 323, "232322": 323, "199750": 323, "205369": 323, "193439": 323, "pop_qp1_estim": 323, "pop_vp1_estim": 323, "pop_mdt_estim": 323, "155413": 323, "4192": 323, "6100": 323, "172730": 323, "3977": 323, "4562": 323, "158070": 323, "8042": 323, "8517": 323, "iiv_mdt_estim": 323, "156289": 323, "192020": 323, "092419": 323, "262429": 323, "720369": 323, "464263": 323, "127061": 323, "906722": 323, "053781": 323, "923055": 323, "795863": 323, "030658": 323, "661330": 323, "168680": 323, "833073": 323, "041529": 323, "205858": 323, "064930": 323, "609673": 323, "396329": 323, "928556": 323, "365": 323, "330": 323, "topic": 324, "scheme": 324, "theta_cl": 324, "mention": 324, "ve": 324, "despit": 324, "write_etas_in_abbr": 324, "altair": [325, 327], "vega": 325, "lite": 325, "ggplot": 325, "editor": 325, "clamp": 325, "vconcat": 325, "spec": 325, "inten": 326, "export": 326, "strictli": 326, "necessesari": 326, "detect_model": 326, "summer": 327, "master": 327, "thesi": 327, "internship": 327, "email": 327, "team": 327, "tox": 327, "pytest": 327, "sphinx": 327, "wise": 327, "known": 327, "trial": 327, "involv": 327, "outcom": 327, "350h": 327, "difficulti": 327, "mentor": 327, "scipi": 327, "focu": 327, "proof": 327, "concept": 327, "algebra": 327, "scratch": 327, "almost": 327, "compat": 327, "benefici": 327, "175h": 327, "easi": 327, "potenti": 327, "eas": 327, "jupyt": 327, "holoview": 327, "bokeh": 327, "monitor": 327, "ongo": 327, "veri": 327, "happen": [327, 337], "converg": 327, "sort": [327, 335], "dashboard": 327, "complement": 327, "realtim": 327, "restart": [327, 337], "middl": 327, "worflow": 327, "cv": [328, 330], "772": [328, 330], "700": 328, "042": [328, 330], "sdeps_0": [328, 330], "t1": 328, "298": 328, "sdeps_t1": 328, "t2": 328, "886": 328, "sdeps_t2": 328, "t3": 328, "272": 328, "sdeps_t3": 328, "t4": 328, "716": 328, "sdeps_t4": 328, "t5": 328, "218": 328, "sdeps_t5": 328, "t6": 328, "928": 328, "sdeps_t6": 328, "t7": 328, "092": 328, "sdeps_t7": 328, "t8": 328, "914": 328, "sdeps_t8": 328, "t9": 328, "840": 328, "sdeps_t9": 328, "390": [328, 330], "159": [328, 330], "t0": [328, 330], "271": [328, 330], "sdeps_t0": [328, 330], "956": [328, 330], "717": 328, "014": 328, "983": 328, "884": 328, "017": 328, "955": 328, "958": 328, "969": 328, "933": 328, "022": 328, "819": 328, "007": 328, "755": 328, "982": 328, "642": 328, "387": 328, "th_0": 328, "257": 328, "867": 328, "th_t1": 328, "211": 328, "th_t2": 328, "277": 328, "761": 328, "th_t3": 328, "033": 328, "th_t4": 328, "367": 328, "th_t5": 328, "204": 328, "170": 328, "th_t6": 328, "078": 328, "th_t7": 328, "841": 328, "th_t8": 328, "th_t9": 328, "030": 328, "124": 328, "289": 328, "386": 328, "203": 328, "287": 328, "019": 328, "delta_pow": [328, 330], "037": [328, 330], "autocorrel": [328, 330], "dtb": [328, 330], "91": [328, 330], "idv_varying_ruv": 328, "idv_varying_ruv_cutoff0": 328, "idv_varying_ruv_cutoff1": 328, "idv_varying_ruv_cutoff2": 328, "idv_varying_ruv_cutoff3": 328, "idv_varying_ruv_cutoff4": 328, "idv_varying_ruv_cutoff5": 328, "idv_varying_ruv_cutoff6": 328, "idv_varying_ruv_cutoff7": 328, "idv_varying_ruv_cutoff8": 328, "idv_varying_combin": 328, "idv_varying_theta": 328, "sdep": 328, "delet": 329, "diagnost": 329, "improement": 330, "592698": 330, "197887": 330, "007493": 330, "521171": 330, "et1apgr": 330, "487930": 330, "residual_error_model": 330, "910000": 330, "030000": 330, "diagnos": 330, "structural_bia": 330, "cpred": 330, "binmin": 330, "binmax": 330, "binid": 330, "258": 330, "strutur": 330, "mdel": 330, "fullblock_paramet": 330, "183463": 330, "171306": 330, "554610": 330, "154408": 330, "167053": 330, "cox": 330, "boxcox_paramet": 330, "shape": 330, "new_sd": 330, "old_sd": 330, "922083": 330, "182037": 330, "332800": 330, "166021": 330, "tdist_paramet": 330, "9997": 330, "168477": 330, "9986": 330, "166469": 330, "residual_error": 330, "additional_paramet": 330, "coeff": 330, "48793": 330, "033334": 330, "48218": 330, "052342": 330, "59034": 330, "008371": 330, "00887": 330, "003273": 330, "ibrahim": 331, "quickli": [331, 335], "inde": 331, "cwres_model": 331, "479721": 331, "385268": 331, "002792": 331, "time_varying1": 331, "117041": 331, "time_varying2": 331, "555154": 331, "time_varying3": 331, "336641": 331, "091207": 331, "065738": 331, "654562": 331, "046578": 331, "519115": 331, "612710": 331, "643741": 331, "027766": 331, "sigma_add": 331, "000367": 331, "sigma_prop": 331, "967365": 331, "00123": 331, "0976": 331, "12252": 331, "14299": 331, "000337": 331, "05242": 331, "006105": 331, "10545": 331, "12659": 331, "15573": 331, "00054": 331, "04769": 331, "030825": 331, "mox3": 331, "best_ruvsearch_2": 331, "2460": 331, "704469": 331, "957378": 331, "2473": 331, "661847": 331, "269102": 331, "2495": 331, "973571": 331, "2444": 331, "2455": 331, "2475": 331, "2423": 331, "757516": 331, "2435": 331, "047712": 331, "068976": 331, "707": 331, "5434": 331, "531596": 331, "794": 331, "3091": 331, "528620": 331, "733": 331, "3094": 331, "532547": 331, "iiv_vc_iiv_cl_estim": 331, "077743": 331, "038888": 331, "076793": 331, "039924": 331, "071628": 331, "038470": 331, "072309": 331, "704770": 331, "093311": 331, "074889": 331, "707665": 331, "081095": 331, "075048": 331, "705429": 331, "044311": 331, "iiv_ruv1_estim": 331, "time_varying_estim": 331, "039675": 331, "040734": 331, "42509": 331, "215727": 331, "655144": 331, "708324": 331, "762729": 331, "236530": 331, "229762": 331, "715966": 331, "423148": 331, "419741": 331, "774540": 331, "164274": 331, "450202": 331, "195425": 331, "960585": 331, "090461": 331, "848498": 331, "052021": 331, "239462": 331, "065148": 331, "571348": 331, "244582": 331, "161981": 331, "509910": 331, "373696": 331, "084489": 331, "647643": 331, "344772": 331, "083776": 331, "259395": 331, "101415": 331, "024651": 331, "443542": 331, "124023": 331, "183089": 331, "977222": 331, "219": 331, "moustafa": 331, "m": 331, "maria": 331, "kjellsson": 331, "aap": 331, "1208": 331, "s12248": 331, "018": 331, "0240": 331, "pha": 332, "219210": 332, "90878": 332, "219167": 332, "36222": 332, "bmi": 332, "219171": 332, "47564": 332, "cycll": 332, "219203": 332, "94536": 332, "diag": 332, "219206": 332, "01527": 332, "disdur": 332, "219032": 332, "86056": 332, "215321": 332, "70954": 332, "215306": 332, "67698": 332, "phia": 332, "men": 332, "215407": 332, "40295": 332, "phib": 332, "georeg": 332, "215373": 332, "77800": 332, "216968": 332, "25989": 332, "slp": 332, "215359": 332, "18150": 332, "54656": 332, "140000e": 332, "43314": 332, "390000e": 332, "96342": 332, "319000e": 332, "89351": 332, "695800e": 332, "178": 332, "04822": 332, "290000e": 332, "03256": 332, "060000e": 332, "72597": 332, "10102": 332, "580000e": 332, "1661": 332, "58291": 332, "50452": 332, "phaag": 332, "phabmi": 332, "phacycl": 332, "phadiag": 332, "phadisdur": 332, "backward_scm_dir1": 332, "phawt": 332, "phiamen": 332, "phibgeoreg": 332, "phibmen": 332, "slpgeoreg": 332, "304": 332, "beween": 332, "slightli": 332, "215961": 332, "46277": 332, "3249": 332, "44601": 332, "215748": 332, "07194": 332, "213": 332, "39083": 332, "215570": 332, "57352": 332, "49842": 332, "215486": 332, "23440": 332, "33912": 332, "87007": 332, "36433": 332, "215357": 332, "74693": 332, "12314": 332, "215337": 332, "95044": 332, "79649": 332, "24090": 332, "215332": 332, "91461": 332, "23763": 332, "67861": 332, "00163": 332, "215450": 332, "74783": 332, "07085": 332, "215491": 332, "11568": 332, "43870": 332, "500000e": 332, "700000e": 332, "170000e": 332, "260000e": 332, "360000e": 332, "600000e": 332, "020000e": 332, "620000e": 332, "430000e": 332, "200000e": 332, "lbest": 332, "cpl": 332, "215148": 333, "853273": 333, "921633": 333, "230120": 333, "995045": 333, "575351": 333, "993262": 333, "533799": 333, "946876": 333, "027733": 333, "482883": 333, "300884": 333, "905658": 333, "322738": 333, "604188": 333, "654589": 333, "005653": 333, "928279": 333, "313336": 333, "546277": 333, "467337": 333, "370783": 333, "098483": 333, "795252": 333, "542369": 333, "058260": 333, "472019": 333, "957716": 333, "706108": 333, "078494": 333, "873918": 333, "775938": 333, "318875": 333, "664634": 333, "916754": 333, "823449": 333, "899285": 333, "793703": 333, "526828": 333, "527835": 333, "136767": 333, "405150": 333, "230477": 333, "330868": 333, "293600": 333, "615899": 333, "488282": 333, "406903": 333, "479966": 333, "438225": 333, "376893": 333, "818812": 333, "736463": 333, "892761": 333, "432346": 333, "924846": 333, "114640": 333, "446579": 333, "061750": 333, "849137": 333, "694969": 333, "024193": 333, "408347": 333, "615092": 333, "925921": 333, "423537": 333, "387386": 333, "548598": 333, "867625": 333, "018308": 333, "962122": 333, "705806": 333, "853355": 333, "424024": 333, "078385": 333, "664954": 333, "086333": 333, "056381": 333, "695800": 333, "413680": 333, "882876": 333, "282087": 333, "603301": 333, "449888": 333, "541680": 333, "704503": 333, "037941": 333, "678095": 333, "748996": 333, "138213": 333, "316351": 333, "026935": 333, "708577": 333, "166879": 333, "272954": 333, "929655": 333, "937635": 333, "009725": 333, "989005": 333, "567697": 333, "421235": 333, "563473": 333, "462408": 333, "459161": 333, "621329": 333, "388393": 333, "480043": 333, "959843": 333, "179394": 333, "260472": 333, "110075": 333, "277388": 333, "300601": 333, "811596": 333, "218010": 333, "398492": 333, "905147": 333, "366018": 333, "570879": 333, "786560": 333, "051986": 333, "191401": 333, "534496": 333, "961895": 333, "351180": 333, "612812": 333, "767349": 333, "553003": 333, "900845": 333, "231970": 333, "806204": 333, "584818": 333, "822404": 333, "846457": 333, "749003": 333, "988276": 333, "998400": 333, "892200": 333, "565671": 333, "207434": 333, "196823": 333, "725509": 333, "225727": 333, "018880": 333, "341361": 333, "434087": 333, "851698": 333, "212538": 333, "348921": 333, "250063": 333, "086788": 333, "599116": 333, "429352": 333, "140249": 333, "382526": 333, "944073": 333, "516464": 333, "831345": 333, "191840": 333, "659430": 333, "857266": 333, "485191": 333, "793265": 333, "901408": 333, "956378": 333, "775355": 333, "002572": 333, "733704": 333, "912201": 333, "693935": 333, "668763": 333, "794788": 333, "151243": 333, "707700": 333, "069326": 333, "905528": 333, "455902": 333, "382384": 333, "931900": 333, "538437": 333, "077897": 333, "186642": 333, "425364": 333, "498709": 333, "376121": 333, "196475": 333, "819544": 333, "773375": 333, "030662": 333, "497867": 333, "372391": 333, "848184": 333, "843029": 333, "762211": 333, "662370": 333, "565811": 333, "826862": 333, "572217": 333, "187278": 333, "056323": 333, "580405": 333, "630121": 333, "119652": 333, "298009": 333, "802175": 333, "370226": 333, "275622": 333, "035731": 333, "134650": 333, "361844": 333, "639042": 333, "597045": 333, "155311": 333, "957232": 333, "266702": 333, "169391": 333, "977219": 333, "400720": 333, "363698": 333, "361498": 333, "868679": 333, "106708": 333, "641421": 333, "974785": 333, "434510": 333, "024682": 333, "982047": 333, "904024": 333, "853009": 333, "886356": 333, "073635": 333, "575363": 333, "169297": 333, "840067": 333, "374133": 333, "712658": 333, "169888": 333, "253049": 333, "856403": 333, "884553": 333, "415675": 333, "044583": 333, "564632": 333, "497236": 333, "118999": 333, "893425": 333, "396594": 333, "360173": 333, "695028": 333, "765897": 333, "509070": 333, "046265": 333, "358567": 333, "414926": 333, "516160": 333, "586789": 333, "324755": 333, "684344": 333, "496109": 333, "907778": 333, "916145": 333, "249772": 333, "394438": 333, "493584": 333, "222423": 333, "362886": 333, "744242": 333, "659481": 333, "119216": 333, "933397": 333, "206488": 333, "988252": 333, "269584": 333, "936980": 333, "448507": 333, "178177": 333, "911020": 333, "517867": 333, "605768": 333, "518105": 333, "477206": 333, "453899": 333, "346212": 333, "132983": 333, "980420": 333, "320820": 333, "408266": 333, "783555": 333, "462547": 333, "105503": 333, "811144": 333, "180204": 333, "337790": 333, "972480": 333, "036534": 333, "850645": 333, "031564": 333, "457112": 333, "195385": 333, "723710": 333, "378125": 333, "052073": 333, "525306": 333, "814145": 333, "016286": 333, "408322": 333, "269137": 333, "435102": 333, "404922": 333, "602344": 333, "846592": 333, "159667": 333, "448461": 333, "589215": 333, "815026": 333, "451814": 333, "243399": 333, "625663": 333, "541949": 333, "923185": 333, "926077": 333, "866250": 333, "933824": 333, "907322": 333, "371639": 333, "824234": 333, "944302": 333, "495039": 333, "087071": 333, "606033": 333, "663661": 333, "903583": 333, "735586": 333, "573838": 333, "611250": 333, "584165": 333, "500411": 333, "501681": 333, "556035": 333, "749030": 333, "860290": 333, "824837": 333, "881148": 333, "372005": 333, "874004": 333, "941132": 333, "153441": 333, "348849": 333, "366355": 333, "357159": 333, "133006": 333, "193338": 333, "054769": 333, "885525": 333, "860736": 333, "165042": 333, "488686": 333, "080061": 333, "568383": 333, "083424": 333, "824880": 333, "276361": 333, "376218": 333, "180960": 333, "916884": 333, "489785": 333, "898802": 333, "364078": 333, "638247": 333, "968860": 333, "773450": 333, "351839": 333, "136159": 333, "210594": 333, "600450": 333, "221459": 333, "151210": 333, "639544": 333, "104682": 333, "135159": 333, "551158": 333, "185132": 333, "354616": 333, "562788": 333, "796073": 333, "720261": 333, "884839": 333, "328937": 333, "486179": 333, "436720": 333, "367480": 333, "929665": 333, "121901": 333, "341680": 333, "054791": 333, "247238": 333, "512627": 333, "759167": 333, "864669": 333, "484284": 333, "842566": 333, "317393": 333, "280139": 333, "114753": 333, "638560": 333, "331177": 333, "631655": 333, "178961": 333, "622712": 333, "371773": 333, "758919": 333, "238692": 333, "361556": 333, "966413": 333, "814952": 333, "713778": 333, "422555": 333, "878300": 333, "715708": 333, "335429": 333, "266944": 333, "868224": 333, "383043": 333, "461262": 333, "212573": 333, "933191": 333, "676905": 333, "501489": 333, "003027": 333, "585174": 333, "956306": 333, "219194": 333, "380865": 333, "726349": 333, "445912": 333, "630512": 333, "546036": 333, "099846": 333, "876780": 333, "816485": 333, "682987": 333, "991350": 333, "924166": 333, "776532": 333, "802797": 333, "326447": 333, "115117": 333, "015416": 333, "662582": 333, "782192": 333, "806515": 333, "838099": 333, "488859": 333, "574493": 333, "296737": 333, "297823": 333, "743671": 333, "994987": 333, "574667": 333, "409142": 333, "880881": 333, "072216": 333, "874349": 333, "755737": 333, "630846": 333, "711150": 333, "676572": 333, "851982": 333, "483346": 333, "800871": 333, "954047": 333, "401748": 333, "793645": 333, "748099": 333, "731336": 333, "926835": 333, "928532": 333, "247095": 333, "504667": 333, "985533": 333, "366585": 333, "765259": 333, "455400": 333, "551558": 333, "551208": 333, "257409": 333, "502366": 333, "042324": 333, "552114": 333, "360000": 333, "305631": 333, "406685": 333, "040276": 333, "716192": 333, "544260": 333, "496993": 333, "515088": 333, "676934": 333, "022410": 333, "454421": 333, "751915": 333, "597599": 333, "424237": 333, "889492": 333, "952586": 333, "087082": 333, "098997": 333, "835458": 333, "073683": 333, "151935": 333, "963905": 333, "819836": 333, "879430": 333, "567520": 333, "351619": 333, "285544": 333, "178975": 333, "999275": 333, "255630": 333, "277992": 333, "264764": 333, "899880": 333, "408061": 333, "688954": 333, "572606": 333, "473731": 333, "297200": 333, "841335": 333, "244786": 333, "864820": 333, "606428": 333, "253768": 333, "416676": 333, "862927": 333, "693535": 333, "731451": 333, "069317": 333, "965455": 333, "764024": 333, "746436": 333, "716822": 333, "500103": 333, "133073": 333, "763155": 333, "125029": 333, "585654": 333, "027851": 333, "686115": 333, "583418": 333, "960296": 333, "402983": 333, "043157": 333, "363551": 333, "587323": 333, "032512": 333, "225458": 333, "892175": 333, "950516": 333, "788249": 333, "699366": 333, "242420": 333, "884049": 333, "777419": 333, "509957": 333, "512603": 333, "601504": 333, "416254": 333, "481351": 333, "175264": 333, "487277": 333, "418469": 333, "194473": 333, "547459": 333, "675347": 333, "344235": 333, "550825": 333, "247584": 333, "271405": 333, "308617": 333, "875052": 333, "804622": 333, "876965": 333, "631308": 333, "432371": 333, "319025": 333, "885439": 333, "758791": 333, "323449": 333, "iofv_summari": 333, "orgin": 333, "ob": 333, "sampled_mean": 333, "sampled_stdev": 333, "residual_q1": 333, "743042": 333, "219056": 333, "682820": 333, "550173": 333, "035912": 333, "049484": 333, "184218": 333, "853744": 333, "006216": 333, "975298": 333, "041599": 333, "817153": 333, "833045": 333, "781196": 333, "154061": 333, "813525": 333, "398238": 333, "645044": 333, "535071": 333, "205425": 333, "092618": 333, "104527": 333, "106160": 333, "955250": 333, "058617": 333, "344659": 333, "355728": 333, "480441": 333, "205000": 333, "804075": 333, "093249": 333, "372011": 333, "653334": 333, "076303": 333, "579270": 333, "515891": 333, "726464": 333, "480796": 333, "226795": 333, "894556": 333, "321253": 333, "216333": 333, "282456": 333, "045968": 333, "751381": 333, "998817": 333, "568506": 333, "544129": 333, "725055": 333, "084491": 333, "216676": 333, "724839": 333, "269729": 333, "664468": 333, "086120": 333, "099508": 333, "844053": 333, "234199": 333, "780837": 333, "277342": 333, "322169": 333, "051428": 333, "923117": 333, "660772": 333, "466385": 333, "260479": 333, "909214": 333, "004430": 333, "115441": 333, "597439": 333, "671231": 333, "358037": 333, "499079": 333, "674971": 333, "086542": 333, "331370": 333, "633905": 333, "558617": 333, "085015": 333, "554653": 333, "936751": 333, "068515": 333, "800265": 333, "310055": 333, "124015": 333, "712276": 333, "729628": 333, "167439": 333, "715703": 333, "274087": 333, "019852": 333, "305414": 333, "613668": 333, "109257": 333, "443973": 333, "056317": 333, "238664": 333, "161298": 333, "229080": 333, "385458": 333, "248420": 333, "105258": 333, "155784": 333, "539027": 333, "615940": 333, "605320": 333, "132029": 333, "756164": 333, "869343": 333, "544161": 333, "814910": 333, "779158": 333, "268737": 333, "897306": 333, "707535": 333, "453306": 333, "105961": 333, "531367": 333, "507478": 333, "179203": 333, "964192": 333, "235433": 333, "534690": 333, "029698": 333, "870557": 333, "187065": 333, "049483": 333, "611648": 333, "535116": 333, "053927": 333, "077425": 333, "840121": 333, "621227": 333, "470444": 333, "449597": 333, "941064": 333, "849583": 333, "418397": 333, "769517": 333, "495183": 333, "074840": 333, "265168": 333, "489546": 333, "543569": 333, "924754": 333, "255799": 333, "423379": 333, "792450": 333, "651388": 333, "107140": 333, "103779": 333, "709601": 333, "655290": 333, "365991": 333, "222470": 333, "908651": 333, "744590": 333, "726324": 333, "426971": 333, "126409": 333, "743926": 333, "055593": 333, "673502": 333, "381335": 333, "618133": 333, "047349": 333, "322600": 333, "222872": 333, "042834": 333, "180077": 333, "430602": 333, "209284": 333, "495631": 333, "189252": 333, "623118": 333, "780755": 333, "405726": 333, "643222": 333, "836788": 333, "746180": 333, "378962": 333, "498420": 333, "745719": 333, "565835": 333, "016391": 333, "193803": 333, "882538": 333, "054206": 333, "416539": 333, "288743": 333, "598975": 333, "649295": 333, "743847": 333, "028856": 333, "860963": 333, "709391": 333, "906579": 333, "841825": 333, "571912": 333, "121771": 333, "219260": 333, "791821": 333, "756310": 333, "933335": 333, "360735": 333, "121911": 333, "657069": 333, "952413": 333, "311206": 333, "124618": 333, "229621": 333, "945504": 333, "493299": 333, "630288": 333, "415407": 333, "756085": 333, "131488": 333, "213636": 333, "050337": 333, "463633": 333, "980475": 333, "118333": 333, "749123": 333, "229958": 333, "025404": 333, "813878": 333, "738522": 333, "668408": 333, "112740": 333, "972107": 333, "235064": 333, "396011": 333, "934618": 333, "518106": 333, "392308": 333, "216396": 333, "339562": 333, "024801": 333, "793238": 333, "057118": 333, "556378": 333, "796045": 333, "776264": 333, "019010": 333, "430617": 333, "431370": 333, "731493": 333, "527208": 333, "010968": 333, "724711": 333, "959211": 333, "448445": 333, "131466": 333, "302385": 333, "264697": 333, "597597": 333, "779232": 333, "494133": 333, "292477": 333, "639161": 333, "067293": 333, "167700": 333, "637834": 333, "067793": 333, "249132": 333, "314731": 333, "969084": 333, "239401": 333, "359860": 333, "215238": 333, "477740": 333, "578842": 333, "053376": 333, "340902": 333, "021182": 333, "172446": 333, "684367": 333, "059050": 333, "515114": 333, "245427": 333, "197044": 333, "787564": 333, "106919": 333, "970391": 333, "379183": 333, "982728": 333, "807580": 333, "296212": 333, "639192": 333, "874018": 333, "032032": 333, "252364": 333, "047063": 333, "residual_q3": 333, "residual_outli": 333, "832458": 333, "136329": 333, "090316": 333, "021748": 333, "766581": 333, "001176": 333, "238974": 333, "071653": 333, "388881": 333, "584759": 333, "780298": 333, "680349": 333, "043355": 333, "691710": 333, "827298": 333, "317850": 333, "008777": 333, "291308": 333, "498512": 333, "312807": 333, "178997": 333, "306182": 333, "116610": 333, "468439": 333, "007865": 333, "384037": 333, "344744": 333, "151930": 333, "790639": 333, "416342": 333, "637759": 333, "153920": 333, "135334": 333, "038095": 333, "705065": 333, "359915": 333, "588440": 333, "151899": 333, "730945": 333, "514178": 333, "784304": 333, "977290": 333, "707253": 333, "982678": 333, "384237": 333, "576792": 333, "302778": 333, "342653": 333, "313826": 333, "775998": 333, "274818": 333, "191111": 333, "817604": 333, "421290": 333, "461701": 333, "940801": 333, "437023": 333, "207477": 333, "755739": 333, "individual_predictions_plot": 333, "run_structsearch": 334, "directeffect": [334, 335], "ec": 334, "rectangel": 334, "establish": 334, "speciefi": 334, "irrevers": 334, "bind": 334, "receptor": 334, "quasi": 334, "minu": 334, "moment": 334, "effectcomp": [334, 335], "comprtment": [334, 335], "indirecteffect": [334, 335], "structsearch_run2": 334, "effectcomp_linear": 334, "215004": 334, "745013": 334, "structsearch_run1": 334, "direct_emax": 334, "212603": 334, "747413": 334, "baseline_model": 334, "960017": 334, "structsearch_run3": 334, "effectcomp_emax": 334, "984380": 334, "944396": 334, "pheno_pd_filt": 334, "213077": 334, "872420": 334, "572221": 334, "569820": 334, "571979": 334, "tvcl_estim": 334, "tvv_estim": 334, "ivcl_estim": 334, "002739": 334, "44718": 334, "000003": 334, "sigma_1_1_estim": 334, "pop_b_estim": 334, "iiv_b_estim": 334, "006308": 334, "750050": 334, "000009": 334, "057501": 334, "094082": 334, "sigma_estim": 334, "pop_e_max_estim": 334, "338363": 334, "093417": 334, "144566": 334, "093266": 334, "093323": 334, "177469": 334, "pop_ec_50_estim": 334, "iiv_e_max_estim": 334, "35393": 334, "43433": 334, "pop_met_estim": 334, "pop_slope_estim": 334, "099993": 334, "47537": 334, "101217": 334, "iiv_slope_estim": 334, "337360": 334, "535060": 334, "328655": 334, "008705": 334, "243566": 334, "291495": 334, "355828": 334, "981532": 334, "213992": 334, "321069": 334, "330943": 334, "006418": 334, "241037": 334, "294024": 334, "779": 334, "nexce": 334, "trim": 335, "modelsearch_dir1": 335, "hash": 335, "mytab_mox1": 335, "subfold": 335, "temporari": 335, "finish": 335, "recreat": 335, "frame": 335, "programmat": 335, "pharmpy_vers": 335, "tool_nam": 335, "start_tim": 335, "22t14": 335, "312240": 335, "end_tim": 335, "592109": 335, "common_opt": 335, "tmp": 335, "tool_result": 335, "concis": 335, "newlin": 335, "semi": 335, "colon": 335, "endpoint": 335, "wildcard": 335, "nodepot": 335, "autom": 335, "pk_iiv": 335, "pd_iiv": 335, "sigidg": 335, "exceed": 335, "condition_numb": 335, "final_zero_gradi": 335, "estimate_near_boundari": 335, "gotcha": 336, "cran": 337, "rapid": 337, "remot": 337, "install_github": 337, "install_pharmpi": 337, "session": 337, "packagevers": 337, "print_pharmpy_vers": 337, "reticul": 337, "miniconda": 337, "py_discover_config": 337, "conda_cr": 337, "python_vers": 337, "virtual": 337, "libpython": 337, "lib": 337, "libpython3": 337, "mirror": 337, "pipe": 337, "magrittr": 337}, "objects": {"pharmpy": [[294, 0, 0, "-", "model"], [295, 0, 0, "-", "modeling"], [296, 0, 0, "-", "tools"], [297, 0, 0, "-", "workflows"], [302, 6, 1, "cmdoption-pharmpy-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-version", "--version"], [302, 6, 1, "cmdoption-pharmpy-h", "-h"]], "pharmpy.model": [[4, 1, 1, "", "Assignment"], [5, 1, 1, "", "Bolus"], [6, 1, 1, "", "ColumnInfo"], [7, 1, 1, "", "Compartment"], [8, 1, 1, "", "CompartmentalSystem"], [9, 1, 1, "", "CompartmentalSystemBuilder"], [10, 1, 1, "", "DataInfo"], [11, 4, 1, "", "DatasetError"], [12, 4, 1, "", "DatasetWarning"], [13, 1, 1, "", "Distribution"], [14, 1, 1, "", "EstimationStep"], [15, 1, 1, "", "EstimationSteps"], [16, 1, 1, "", "Infusion"], [17, 1, 1, "", "JointNormalDistribution"], [18, 1, 1, "", "Model"], [19, 4, 1, "", "ModelError"], [20, 4, 1, "", "ModelSyntaxError"], [21, 4, 1, "", "ModelfitResultsError"], [22, 1, 1, "", "NormalDistribution"], [23, 1, 1, "", "Parameter"], [24, 1, 1, "", "Parameters"], [25, 1, 1, "", "RandomVariables"], [26, 1, 1, "", "SimulationStep"], [27, 1, 1, "", "Statement"], [28, 1, 1, "", "Statements"], [29, 1, 1, "", "VariabilityHierarchy"], [30, 1, 1, "", "VariabilityLevel"], [31, 5, 1, "", "to_compartmental_system"]], "pharmpy.model.Assignment": [[4, 2, 1, "", "create"], [4, 3, 1, "", "expression"], [4, 3, 1, "", "free_symbols"], [4, 2, 1, "", "from_dict"], [4, 2, 1, "", "replace"], [4, 3, 1, "", "rhs_symbols"], [4, 2, 1, "", "subs"], [4, 3, 1, "", "symbol"], [4, 2, 1, "", "to_dict"]], "pharmpy.model.Bolus": [[5, 3, 1, "", "amount"], [5, 2, 1, "", "create"], [5, 3, 1, "", "free_symbols"], [5, 2, 1, "", "from_dict"], [5, 2, 1, "", "replace"], [5, 2, 1, "", "subs"], [5, 2, 1, "", "to_dict"]], "pharmpy.model.ColumnInfo": [[6, 3, 1, "", "categories"], [6, 3, 1, "", "continuous"], [6, 2, 1, "", "convert_datatype_to_pd_dtype"], [6, 2, 1, "", "convert_pd_dtype_to_datatype"], [6, 2, 1, "", "create"], [6, 3, 1, "", "datatype"], [6, 3, 1, "", "descriptor"], [6, 3, 1, "", "drop"], [6, 2, 1, "", "from_dict"], [6, 2, 1, "", "get_all_categories"], [6, 2, 1, "", "is_categorical"], [6, 2, 1, "", "is_integer"], [6, 2, 1, "", "is_numerical"], [6, 3, 1, "", "name"], [6, 2, 1, "", "replace"], [6, 3, 1, "", "scale"], [6, 2, 1, "", "to_dict"], [6, 3, 1, "", "type"], [6, 3, 1, "", "unit"]], "pharmpy.model.Compartment": [[7, 3, 1, "", "amount"], [7, 3, 1, "", "bioavailability"], [7, 2, 1, "", "create"], [7, 3, 1, "", "doses"], [7, 3, 1, "", "free_symbols"], [7, 2, 1, "", "from_dict"], [7, 3, 1, "", "input"], [7, 3, 1, "", "lag_time"], [7, 3, 1, "", "name"], [7, 2, 1, "", "replace"], [7, 2, 1, "", "sorted_doses"], [7, 2, 1, "", "subs"], [7, 2, 1, "", "to_dict"]], "pharmpy.model.CompartmentalSystem": [[8, 3, 1, "", "amounts"], [8, 2, 1, "", "atoms"], [8, 3, 1, "", "central_compartment"], [8, 3, 1, "", "compartment_names"], [8, 3, 1, "", "compartmental_matrix"], [8, 2, 1, "", "create"], [8, 3, 1, "", "dosing_compartments"], [8, 3, 1, "", "eqs"], [8, 2, 1, "", "find_compartment"], [8, 2, 1, "", "find_depot"], [8, 2, 1, "", "find_peripheral_compartments"], [8, 2, 1, "", "find_transit_compartments"], [8, 3, 1, "", "free_symbols"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "get_bidirectionals"], [8, 2, 1, "", "get_compartment_inflows"], [8, 2, 1, "", "get_compartment_outflows"], [8, 2, 1, "", "get_flow"], [8, 2, 1, "", "get_n_connected"], [8, 2, 1, "", "replace"], [8, 3, 1, "", "rhs_symbols"], [8, 2, 1, "", "subs"], [8, 3, 1, "", "t"], [8, 2, 1, "", "to_dict"], [8, 3, 1, "", "zero_order_inputs"]], "pharmpy.model.CompartmentalSystemBuilder": [[9, 2, 1, "", "add_compartment"], [9, 2, 1, "", "add_flow"], [9, 2, 1, "", "find_compartment"], [9, 2, 1, "", "move_dose"], [9, 2, 1, "", "remove_compartment"], [9, 2, 1, "", "remove_flow"], [9, 2, 1, "", "set_bioavailability"], [9, 2, 1, "", "set_dose"], [9, 2, 1, "", "set_input"], [9, 2, 1, "", "set_lag_time"]], "pharmpy.model.DataInfo": [[10, 2, 1, "", "create"], [10, 3, 1, "", "descriptorix"], [10, 3, 1, "", "dv_column"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_json"], [10, 2, 1, "", "get_dtype_dict"], [10, 3, 1, "", "id_column"], [10, 3, 1, "", "idv_column"], [10, 3, 1, "", "names"], [10, 3, 1, "", "path"], [10, 2, 1, "", "read_json"], [10, 2, 1, "", "replace"], [10, 3, 1, "", "separator"], [10, 2, 1, "", "set_column"], [10, 2, 1, "", "set_dv_column"], [10, 2, 1, "", "set_id_column"], [10, 2, 1, "", "set_idv_column"], [10, 2, 1, "", "set_types"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_json"], [10, 3, 1, "", "typeix"], [10, 3, 1, "", "types"]], "pharmpy.model.Distribution": [[13, 2, 1, "", "evalf"], [13, 3, 1, "", "free_symbols"], [13, 2, 1, "", "get_covariance"], [13, 2, 1, "", "get_variance"], [13, 2, 1, "", "latex_string"], [13, 3, 1, "", "level"], [13, 3, 1, "", "mean"], [13, 3, 1, "", "names"], [13, 3, 1, "", "parameter_names"], [13, 2, 1, "", "replace"], [13, 2, 1, "", "subs"], [13, 2, 1, "", "to_dict"], [13, 3, 1, "", "variance"]], "pharmpy.model.EstimationStep": [[14, 3, 1, "", "auto"], [14, 2, 1, "", "create"], [14, 3, 1, "", "epsilon_derivatives"], [14, 3, 1, "", "eta_derivatives"], [14, 3, 1, "", "evaluation"], [14, 2, 1, "", "from_dict"], [14, 3, 1, "", "interaction"], [14, 3, 1, "", "isample"], [14, 3, 1, "", "keep_every_nth_iter"], [14, 3, 1, "", "laplace"], [14, 3, 1, "", "maximum_evaluations"], [14, 3, 1, "", "method"], [14, 3, 1, "", "niter"], [14, 3, 1, "", "parameter_uncertainty_method"], [14, 3, 1, "", "predictions"], [14, 2, 1, "", "replace"], [14, 3, 1, "", "residuals"], [14, 3, 1, "", "supported_methods"], [14, 3, 1, "", "supported_parameter_uncertainty_methods"], [14, 2, 1, "", "to_dict"], [14, 3, 1, "", "tool_options"]], "pharmpy.model.EstimationSteps": [[15, 2, 1, "", "create"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "replace"], [15, 2, 1, "", "to_dataframe"], [15, 2, 1, "", "to_dict"]], "pharmpy.model.Infusion": [[16, 3, 1, "", "amount"], [16, 2, 1, "", "create"], [16, 3, 1, "", "duration"], [16, 3, 1, "", "free_symbols"], [16, 2, 1, "", "from_dict"], [16, 3, 1, "", "rate"], [16, 2, 1, "", "replace"], [16, 2, 1, "", "subs"], [16, 2, 1, "", "to_dict"]], "pharmpy.model.JointNormalDistribution": [[17, 2, 1, "", "create"], [17, 2, 1, "", "evalf"], [17, 3, 1, "", "free_symbols"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "get_covariance"], [17, 2, 1, "", "get_variance"], [17, 2, 1, "", "latex_string"], [17, 3, 1, "", "level"], [17, 3, 1, "", "mean"], [17, 3, 1, "", "names"], [17, 2, 1, "", "replace"], [17, 2, 1, "", "subs"], [17, 2, 1, "", "to_dict"], [17, 3, 1, "", "variance"]], "pharmpy.model.Model": [[18, 2, 1, "", "create"], [18, 3, 1, "", "datainfo"], [18, 3, 1, "", "dataset"], [18, 3, 1, "", "dependent_variables"], [18, 3, 1, "", "description"], [18, 3, 1, "", "estimation_steps"], [18, 3, 1, "", "filename_extension"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "has_same_dataset_as"], [18, 3, 1, "", "initial_individual_estimates"], [18, 3, 1, "", "internals"], [18, 3, 1, "", "model_code"], [18, 3, 1, "", "modelfit_results"], [18, 3, 1, "", "name"], [18, 3, 1, "", "observation_transformation"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "parent_model"], [18, 2, 1, "", "parse_model"], [18, 2, 1, "", "parse_model_from_string"], [18, 3, 1, "", "random_variables"], [18, 2, 1, "", "replace"], [18, 3, 1, "", "statements"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "update_source"], [18, 3, 1, "", "value_type"], [18, 2, 1, "", "write_files"]], "pharmpy.model.NormalDistribution": [[22, 2, 1, "", "create"], [22, 2, 1, "", "evalf"], [22, 3, 1, "", "free_symbols"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "get_covariance"], [22, 2, 1, "", "get_variance"], [22, 2, 1, "", "latex_string"], [22, 3, 1, "", "level"], [22, 3, 1, "", "mean"], [22, 3, 1, "", "names"], [22, 2, 1, "", "replace"], [22, 2, 1, "", "subs"], [22, 2, 1, "", "to_dict"], [22, 3, 1, "", "variance"]], "pharmpy.model.Parameter": [[23, 2, 1, "", "create"], [23, 3, 1, "", "fix"], [23, 2, 1, "", "from_dict"], [23, 3, 1, "", "init"], [23, 3, 1, "", "lower"], [23, 3, 1, "", "name"], [23, 2, 1, "", "replace"], [23, 3, 1, "", "symbol"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "upper"]], "pharmpy.model.Parameters": [[24, 2, 1, "", "create"], [24, 3, 1, "", "fix"], [24, 3, 1, "", "fixed"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "inits"], [24, 3, 1, "", "lower"], [24, 3, 1, "", "names"], [24, 3, 1, "", "nonfixed"], [24, 2, 1, "", "replace"], [24, 2, 1, "", "set_fix"], [24, 2, 1, "", "set_initial_estimates"], [24, 3, 1, "", "symbols"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "upper"]], "pharmpy.model.RandomVariables": [[25, 3, 1, "", "covariance_matrix"], [25, 2, 1, "", "create"], [25, 3, 1, "", "epsilon_levels"], [25, 3, 1, "", "epsilons"], [25, 3, 1, "", "eta_levels"], [25, 3, 1, "", "etas"], [25, 3, 1, "", "free_symbols"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_covariance"], [25, 2, 1, "", "get_rvs_with_same_dist"], [25, 3, 1, "", "iiv"], [25, 3, 1, "", "iov"], [25, 2, 1, "", "join"], [25, 3, 1, "", "names"], [25, 2, 1, "", "nearest_valid_parameters"], [25, 3, 1, "", "nrvs"], [25, 3, 1, "", "parameter_names"], [25, 2, 1, "", "parameters_sdcorr"], [25, 2, 1, "", "replace"], [25, 2, 1, "", "replace_with_sympy_rvs"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "subs"], [25, 3, 1, "", "symbols"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "unjoin"], [25, 2, 1, "", "validate_parameters"], [25, 3, 1, "", "variance_parameters"]], "pharmpy.model.SimulationStep": [[26, 2, 1, "", "create"], [26, 2, 1, "", "from_dict"], [26, 3, 1, "", "n"], [26, 2, 1, "", "replace"], [26, 3, 1, "", "seed"], [26, 2, 1, "", "to_dict"]], "pharmpy.model.Statement": [[27, 3, 1, "", "free_symbols"], [27, 3, 1, "", "rhs_symbols"], [27, 2, 1, "", "subs"]], "pharmpy.model.Statements": [[28, 3, 1, "", "after_odes"], [28, 3, 1, "", "before_odes"], [28, 2, 1, "", "dependencies"], [28, 2, 1, "", "direct_dependencies"], [28, 3, 1, "", "error"], [28, 2, 1, "", "find_assignment"], [28, 2, 1, "", "find_assignment_index"], [28, 3, 1, "", "free_symbols"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "full_expression"], [28, 3, 1, "", "ode_system"], [28, 2, 1, "", "reassign"], [28, 2, 1, "", "remove_symbol_definitions"], [28, 2, 1, "", "subs"], [28, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityHierarchy": [[29, 2, 1, "", "create"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "levels"], [29, 3, 1, "", "names"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "to_dict"]], "pharmpy.model.VariabilityLevel": [[30, 2, 1, "", "create"], [30, 2, 1, "", "from_dict"], [30, 3, 1, "", "group"], [30, 3, 1, "", "name"], [30, 3, 1, "", "reference"], [30, 2, 1, "", "replace"], [30, 2, 1, "", "to_dict"]], "pharmpy.modeling": [[32, 5, 1, "", "add_admid"], [33, 5, 1, "", "add_allometry"], [34, 5, 1, "", "add_bioavailability"], [35, 5, 1, "", "add_cmt"], [36, 5, 1, "", "add_covariate_effect"], [37, 5, 1, "", "add_effect_compartment"], [38, 5, 1, "", "add_estimation_step"], [39, 5, 1, "", "add_iiv"], [40, 5, 1, "", "add_indirect_effect"], [41, 5, 1, "", "add_individual_parameter"], [42, 5, 1, "", "add_iov"], [43, 5, 1, "", "add_lag_time"], [44, 5, 1, "", "add_metabolite"], [45, 5, 1, "", "add_parameter_uncertainty_step"], [46, 5, 1, "", "add_pd_iiv"], [47, 5, 1, "", "add_peripheral_compartment"], [48, 5, 1, "", "add_pk_iiv"], [49, 5, 1, "", "add_population_parameter"], [50, 5, 1, "", "add_time_after_dose"], [51, 5, 1, "", "append_estimation_step_options"], [52, 5, 1, "", "bump_model_number"], [53, 5, 1, "", "calculate_aic"], [54, 5, 1, "", "calculate_bic"], [55, 5, 1, "", "calculate_corr_from_cov"], [56, 5, 1, "", "calculate_corr_from_prec"], [57, 5, 1, "", "calculate_cov_from_corrse"], [58, 5, 1, "", "calculate_cov_from_prec"], [59, 5, 1, "", "calculate_epsilon_gradient_expression"], [60, 5, 1, "", "calculate_eta_gradient_expression"], [61, 5, 1, "", "calculate_eta_shrinkage"], [62, 5, 1, "", "calculate_individual_parameter_statistics"], [63, 5, 1, "", "calculate_individual_shrinkage"], [64, 5, 1, "", "calculate_parameters_from_ucp"], [65, 5, 1, "", "calculate_pk_parameters_statistics"], [66, 5, 1, "", "calculate_prec_from_corrse"], [67, 5, 1, "", "calculate_prec_from_cov"], [68, 5, 1, "", "calculate_se_from_cov"], [69, 5, 1, "", "calculate_se_from_prec"], [70, 5, 1, "", "calculate_ucp_scale"], [71, 5, 1, "", "check_dataset"], [72, 5, 1, "", "check_high_correlations"], [73, 5, 1, "", "check_parameters_near_bounds"], [74, 5, 1, "", "cleanup_model"], [75, 5, 1, "", "convert_model"], [76, 5, 1, "", "create_basic_pk_model"], [77, 5, 1, "", "create_config_template"], [78, 5, 1, "", "create_joint_distribution"], [79, 5, 1, "", "create_rng"], [80, 5, 1, "", "create_symbol"], [81, 5, 1, "", "deidentify_data"], [82, 5, 1, "", "display_odes"], [83, 5, 1, "", "drop_columns"], [84, 5, 1, "", "drop_dropped_columns"], [85, 5, 1, "", "evaluate_epsilon_gradient"], [86, 5, 1, "", "evaluate_eta_gradient"], [87, 5, 1, "", "evaluate_expression"], [88, 5, 1, "", "evaluate_individual_prediction"], [89, 5, 1, "", "evaluate_population_prediction"], [90, 5, 1, "", "evaluate_weighted_residuals"], [91, 5, 1, "", "expand_additional_doses"], [92, 5, 1, "", "filter_dataset"], [93, 5, 1, "", "find_clearance_parameters"], [94, 5, 1, "", "find_volume_parameters"], [95, 5, 1, "", "fix_or_unfix_parameters"], [96, 5, 1, "", "fix_parameters"], [97, 5, 1, "", "fix_parameters_to"], [98, 5, 1, "", "get_admid"], [99, 5, 1, "", "get_baselines"], [100, 5, 1, "", "get_bioavailability"], [101, 5, 1, "", "get_cmt"], [102, 5, 1, "", "get_concentration_parameters_from_data"], [103, 5, 1, "", "get_config_path"], [104, 5, 1, "", "get_covariate_baselines"], [105, 5, 1, "", "get_covariates"], [106, 5, 1, "", "get_doseid"], [107, 5, 1, "", "get_doses"], [108, 5, 1, "", "get_dv_symbol"], [109, 5, 1, "", "get_evid"], [110, 5, 1, "", "get_ids"], [111, 5, 1, "", "get_individual_parameters"], [112, 5, 1, "", "get_individual_prediction_expression"], [113, 5, 1, "", "get_initial_conditions"], [114, 5, 1, "", "get_lag_times"], [115, 5, 1, "", "get_mdv"], [116, 5, 1, "", "get_model_code"], [117, 5, 1, "", "get_model_covariates"], [118, 5, 1, "", "get_number_of_individuals"], [119, 5, 1, "", "get_number_of_observations"], [120, 5, 1, "", "get_number_of_observations_per_individual"], [121, 5, 1, "", "get_number_of_peripheral_compartments"], [122, 5, 1, "", "get_number_of_transit_compartments"], [123, 5, 1, "", "get_observation_expression"], [124, 5, 1, "", "get_observations"], [125, 5, 1, "", "get_omegas"], [126, 5, 1, "", "get_parameter_rv"], [127, 5, 1, "", "get_pd_parameters"], [128, 5, 1, "", "get_pk_parameters"], [129, 5, 1, "", "get_population_prediction_expression"], [130, 5, 1, "", "get_rv_parameters"], [131, 5, 1, "", "get_sigmas"], [132, 5, 1, "", "get_thetas"], [133, 5, 1, "", "get_unit_of"], [134, 5, 1, "", "get_zero_order_inputs"], [135, 5, 1, "", "greekify_model"], [136, 5, 1, "", "has_additive_error_model"], [137, 5, 1, "", "has_combined_error_model"], [138, 5, 1, "", "has_covariate_effect"], [139, 5, 1, "", "has_first_order_absorption"], [140, 5, 1, "", "has_first_order_elimination"], [141, 5, 1, "", "has_instantaneous_absorption"], [142, 5, 1, "", "has_linear_odes"], [143, 5, 1, "", "has_linear_odes_with_real_eigenvalues"], [144, 5, 1, "", "has_michaelis_menten_elimination"], [145, 5, 1, "", "has_mixed_mm_fo_elimination"], [146, 5, 1, "", "has_odes"], [147, 5, 1, "", "has_presystemic_metabolite"], [148, 5, 1, "", "has_proportional_error_model"], [149, 5, 1, "", "has_random_effect"], [150, 5, 1, "", "has_seq_zo_fo_absorption"], [151, 5, 1, "", "has_weighted_error_model"], [152, 5, 1, "", "has_zero_order_absorption"], [153, 5, 1, "", "has_zero_order_elimination"], [154, 5, 1, "", "is_linearized"], [155, 5, 1, "", "is_real"], [156, 5, 1, "", "list_time_varying_covariates"], [157, 5, 1, "", "load_dataset"], [158, 5, 1, "", "load_example_model"], [159, 5, 1, "", "make_declarative"], [160, 5, 1, "", "mu_reference_model"], [161, 5, 1, "", "omit_data"], [162, 5, 1, "", "plot_cwres_vs_idv"], [163, 5, 1, "", "plot_dv_vs_ipred"], [164, 5, 1, "", "plot_individual_predictions"], [165, 5, 1, "", "plot_iofv_vs_iofv"], [166, 5, 1, "", "plot_transformed_eta_distributions"], [167, 5, 1, "", "print_model_code"], [168, 5, 1, "", "print_model_symbols"], [169, 5, 1, "", "read_dataset_from_datainfo"], [170, 5, 1, "", "read_model"], [171, 5, 1, "", "read_model_from_string"], [172, 5, 1, "", "remove_bioavailability"], [173, 5, 1, "", "remove_covariate_effect"], [174, 5, 1, "", "remove_error_model"], [175, 5, 1, "", "remove_estimation_step"], [176, 5, 1, "", "remove_iiv"], [177, 5, 1, "", "remove_iov"], [178, 5, 1, "", "remove_lag_time"], [179, 5, 1, "", "remove_loq_data"], [180, 5, 1, "", "remove_parameter_uncertainty_step"], [181, 5, 1, "", "remove_peripheral_compartment"], [182, 5, 1, "", "remove_unused_parameters_and_rvs"], [183, 5, 1, "", "rename_symbols"], [184, 5, 1, "", "replace_non_random_rvs"], [185, 5, 1, "", "resample_data"], [186, 5, 1, "", "sample_individual_estimates"], [187, 5, 1, "", "sample_parameters_from_covariance_matrix"], [188, 5, 1, "", "sample_parameters_uniformly"], [189, 5, 1, "", "set_additive_error_model"], [190, 5, 1, "", "set_baseline_effect"], [191, 5, 1, "", "set_combined_error_model"], [192, 5, 1, "", "set_covariates"], [193, 5, 1, "", "set_direct_effect"], [194, 5, 1, "", "set_dtbs_error_model"], [195, 5, 1, "", "set_dvid"], [196, 5, 1, "", "set_estimation_step"], [197, 5, 1, "", "set_evaluation_step"], [198, 5, 1, "", "set_first_order_absorption"], [199, 5, 1, "", "set_first_order_elimination"], [200, 5, 1, "", "set_iiv_on_ruv"], [201, 5, 1, "", "set_initial_condition"], [202, 5, 1, "", "set_initial_estimates"], [203, 5, 1, "", "set_instantaneous_absorption"], [204, 5, 1, "", "set_lloq_data"], [205, 5, 1, "", "set_lower_bounds"], [206, 5, 1, "", "set_michaelis_menten_elimination"], [207, 5, 1, "", "set_mixed_mm_fo_elimination"], [208, 5, 1, "", "set_name"], [209, 5, 1, "", "set_ode_solver"], [210, 5, 1, "", "set_peripheral_compartments"], [211, 5, 1, "", "set_power_on_ruv"], [212, 5, 1, "", "set_proportional_error_model"], [213, 5, 1, "", "set_reference_values"], [214, 5, 1, "", "set_seq_zo_fo_absorption"], [215, 5, 1, "", "set_simulation"], [216, 5, 1, "", "set_time_varying_error_model"], [217, 5, 1, "", "set_tmdd"], [218, 5, 1, "", "set_transit_compartments"], [219, 5, 1, "", "set_upper_bounds"], [220, 5, 1, "", "set_weighted_error_model"], [221, 5, 1, "", "set_zero_order_absorption"], [222, 5, 1, "", "set_zero_order_elimination"], [223, 5, 1, "", "set_zero_order_input"], [224, 5, 1, "", "simplify_expression"], [225, 5, 1, "", "solve_ode_system"], [226, 5, 1, "", "split_joint_distribution"], [227, 5, 1, "", "transform_blq"], [228, 5, 1, "", "transform_etas_boxcox"], [229, 5, 1, "", "transform_etas_john_draper"], [230, 5, 1, "", "transform_etas_tdist"], [231, 5, 1, "", "translate_nmtran_time"], [232, 5, 1, "", "unconstrain_parameters"], [233, 5, 1, "", "undrop_columns"], [234, 5, 1, "", "unfix_parameters"], [235, 5, 1, "", "unfix_parameters_to"], [236, 5, 1, "", "unload_dataset"], [237, 5, 1, "", "update_initial_individual_estimates"], [238, 5, 1, "", "update_inits"], [239, 5, 1, "", "use_thetas_for_error_stdev"], [240, 5, 1, "", "write_csv"], [241, 5, 1, "", "write_model"]], "pharmpy.tools": [[242, 5, 1, "", "create_report"], [243, 5, 1, "", "create_results"], [244, 5, 1, "", "fit"], [245, 5, 1, "", "get_model_features"], [246, 5, 1, "", "is_strictness_fulfilled"], [247, 5, 1, "", "load_example_modelfit_results"], [248, 5, 1, "", "predict_influential_individuals"], [249, 5, 1, "", "predict_influential_outliers"], [250, 5, 1, "", "predict_outliers"], [251, 5, 1, "", "print_fit_summary"], [252, 5, 1, "", "rank_models"], [253, 5, 1, "", "read_modelfit_results"], [254, 5, 1, "", "read_results"], [255, 5, 1, "", "resume_tool"], [256, 5, 1, "", "retrieve_final_model"], [257, 5, 1, "", "retrieve_models"], [258, 5, 1, "", "run_allometry"], [259, 5, 1, "", "run_amd"], [260, 5, 1, "", "run_bootstrap"], [261, 5, 1, "", "run_covsearch"], [262, 5, 1, "", "run_estmethod"], [263, 5, 1, "", "run_iivsearch"], [264, 5, 1, "", "run_iovsearch"], [265, 5, 1, "", "run_modelfit"], [266, 5, 1, "", "run_modelsearch"], [267, 5, 1, "", "run_ruvsearch"], [268, 5, 1, "", "run_structsearch"], [269, 5, 1, "", "run_tool"], [270, 5, 1, "", "summarize_errors"], [271, 5, 1, "", "summarize_individuals"], [272, 5, 1, "", "summarize_individuals_count_table"], [273, 5, 1, "", "summarize_modelfit_results"], [274, 5, 1, "", "write_results"]], "pharmpy.workflows": [[275, 1, 1, "", "LocalDirectoryDatabase"], [276, 1, 1, "", "LocalDirectoryToolDatabase"], [277, 1, 1, "", "LocalModelDirectoryDatabase"], [278, 1, 1, "", "Log"], [279, 1, 1, "", "ModelDatabase"], [280, 1, 1, "", "ModelEntry"], [281, 1, 1, "", "ModelfitResults"], [282, 1, 1, "", "NullModelDatabase"], [283, 1, 1, "", "NullToolDatabase"], [284, 1, 1, "", "Results"], [285, 1, 1, "", "Task"], [286, 1, 1, "", "ToolDatabase"], [287, 1, 1, "", "Workflow"], [288, 1, 1, "", "WorkflowBuilder"], [289, 5, 1, "", "call_workflow"], [290, 3, 1, "", "default_model_database"], [291, 3, 1, "", "default_tool_database"], [292, 5, 1, "", "execute_workflow"], [293, 5, 1, "", "split_common_options"]], "pharmpy.workflows.LocalDirectoryDatabase": [[275, 2, 1, "", "retrieve_file"], [275, 2, 1, "", "retrieve_local_files"], [275, 2, 1, "", "retrieve_model"], [275, 2, 1, "", "retrieve_model_entry"], [275, 2, 1, "", "retrieve_modelfit_results"], [275, 2, 1, "", "store_local_file"], [275, 2, 1, "", "store_metadata"], [275, 2, 1, "", "store_model"], [275, 2, 1, "", "store_model_entry"], [275, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.LocalDirectoryToolDatabase": [[276, 2, 1, "", "from_dict"], [276, 2, 1, "", "read_metadata"], [276, 2, 1, "", "store_local_file"], [276, 2, 1, "", "store_metadata"], [276, 2, 1, "", "store_results"], [276, 2, 1, "", "to_dict"]], "pharmpy.workflows.LocalModelDirectoryDatabase": [[277, 2, 1, "", "list_models"], [277, 2, 1, "", "snapshot"], [277, 2, 1, "", "transaction"]], "pharmpy.workflows.Log": [[278, 3, 1, "", "errors"], [278, 2, 1, "", "from_dict"], [278, 2, 1, "", "log_error"], [278, 2, 1, "", "log_warning"], [278, 2, 1, "", "to_dataframe"], [278, 2, 1, "", "to_dict"], [278, 3, 1, "", "warnings"]], "pharmpy.workflows.ModelDatabase": [[279, 2, 1, "", "retrieve_file"], [279, 2, 1, "", "retrieve_local_files"], [279, 2, 1, "", "retrieve_model"], [279, 2, 1, "", "retrieve_model_entry"], [279, 2, 1, "", "retrieve_modelfit_results"], [279, 2, 1, "", "snapshot"], [279, 2, 1, "", "store_local_file"], [279, 2, 1, "", "store_metadata"], [279, 2, 1, "", "store_model"], [279, 2, 1, "", "store_model_entry"], [279, 2, 1, "", "store_modelfit_results"], [279, 2, 1, "", "transaction"]], "pharmpy.workflows.ModelEntry": [[280, 2, 1, "", "attach_results"], [280, 2, 1, "", "create"], [280, 3, 1, "", "log"], [280, 3, 1, "", "model"], [280, 3, 1, "", "modelfit_results"], [280, 3, 1, "", "parent"]], "pharmpy.workflows.ModelfitResults": [[281, 3, 1, "", "correlation_matrix"], [281, 3, 1, "", "covariance_matrix"], [281, 3, 1, "", "covstep_successful"], [281, 3, 1, "", "description"], [281, 3, 1, "", "estimation_runtime"], [281, 3, 1, "", "estimation_runtime_iterations"], [281, 3, 1, "", "evaluation"], [281, 3, 1, "", "function_evaluations"], [281, 3, 1, "", "function_evaluations_iterations"], [281, 3, 1, "", "gradients"], [281, 3, 1, "", "gradients_iterations"], [281, 3, 1, "", "individual_estimates"], [281, 3, 1, "", "individual_estimates_covariance"], [281, 3, 1, "", "individual_ofv"], [281, 3, 1, "", "log"], [281, 3, 1, "", "log_likelihood"], [281, 3, 1, "", "minimization_successful"], [281, 3, 1, "", "minimization_successful_iterations"], [281, 3, 1, "", "name"], [281, 3, 1, "", "ofv"], [281, 3, 1, "", "ofv_iterations"], [281, 3, 1, "", "parameter_estimates"], [281, 3, 1, "", "parameter_estimates_iterations"], [281, 3, 1, "", "parameter_estimates_sdcorr"], [281, 3, 1, "", "precision_matrix"], [281, 3, 1, "", "predictions"], [281, 3, 1, "", "relative_standard_errors"], [281, 3, 1, "", "residuals"], [281, 3, 1, "", "runtime_total"], [281, 3, 1, "", "significant_digits"], [281, 3, 1, "", "significant_digits_iterations"], [281, 3, 1, "", "standard_errors"], [281, 3, 1, "", "standard_errors_sdcorr"], [281, 3, 1, "", "termination_cause"], [281, 3, 1, "", "termination_cause_iterations"], [281, 3, 1, "", "warnings"]], "pharmpy.workflows.NullModelDatabase": [[282, 2, 1, "", "retrieve_file"], [282, 2, 1, "", "retrieve_local_files"], [282, 2, 1, "", "retrieve_model"], [282, 2, 1, "", "retrieve_model_entry"], [282, 2, 1, "", "retrieve_modelfit_results"], [282, 2, 1, "", "store_local_file"], [282, 2, 1, "", "store_metadata"], [282, 2, 1, "", "store_model"], [282, 2, 1, "", "store_model_entry"], [282, 2, 1, "", "store_modelfit_results"]], "pharmpy.workflows.NullToolDatabase": [[283, 2, 1, "", "read_metadata"], [283, 2, 1, "", "store_local_file"], [283, 2, 1, "", "store_metadata"], [283, 2, 1, "", "store_results"]], "pharmpy.workflows.Results": [[284, 2, 1, "", "from_dict"], [284, 2, 1, "", "get_and_reset_index"], [284, 2, 1, "", "to_csv"], [284, 2, 1, "", "to_dict"], [284, 2, 1, "", "to_json"]], "pharmpy.workflows.Task": [[285, 2, 1, "", "create"], [285, 3, 1, "", "function"], [285, 3, 1, "", "name"], [285, 2, 1, "", "replace"], [285, 3, 1, "", "task_input"]], "pharmpy.workflows.ToolDatabase": [[286, 3, 1, "", "model_database"], [286, 3, 1, "", "path"], [286, 2, 1, "", "read_metadata"], [286, 2, 1, "", "store_local_file"], [286, 2, 1, "", "store_metadata"], [286, 2, 1, "", "store_results"]], "pharmpy.workflows.Workflow": [[287, 2, 1, "", "as_dask_dict"], [287, 2, 1, "", "create"], [287, 3, 1, "", "name"], [287, 2, 1, "", "plot_dask"], [287, 2, 1, "", "replace"]], "pharmpy.workflows.WorkflowBuilder": [[288, 2, 1, "", "add_task"], [288, 2, 1, "", "insert_workflow"], [288, 2, 1, "", "replace_task"]], "pharmpy-data-append": [[302, 6, 1, "cmdoption-pharmpy-data-append-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-data-append-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-append-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-data-append-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-data-append-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-append-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-data-append-arg-expression", "expression"], [302, 6, 1, "cmdoption-pharmpy-data-append-arg-file", "file"]], "pharmpy-data-deidentify": [[302, 6, 1, "cmdoption-pharmpy-data-deidentify-datecols", "--datecols"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-idcol", "--idcol"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-data-deidentify-arg-file", "file"]], "pharmpy-data-filter": [[302, 6, 1, "cmdoption-pharmpy-data-filter-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-data-filter-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-filter-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-data-filter-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-data-filter-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-filter-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-data-filter-arg-expressions", "expressions"], [302, 6, 1, "cmdoption-pharmpy-data-filter-arg-file", "file"]], "pharmpy-data-print": [[302, 6, 1, "cmdoption-pharmpy-data-print-columns", "--columns"], [302, 6, 1, "cmdoption-pharmpy-data-print-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-print-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-print-arg-file", "file"]], "pharmpy-data-reference": [[302, 6, 1, "cmdoption-pharmpy-data-reference-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-data-reference-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-reference-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-data-reference-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-data-reference-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-reference-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-data-reference-arg-colname", "colname"], [302, 6, 1, "cmdoption-pharmpy-data-reference-arg-file", "file"]], "pharmpy-data-resample": [[302, 6, 1, "cmdoption-pharmpy-data-resample-group", "--group"], [302, 6, 1, "cmdoption-pharmpy-data-resample-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-resample-replace", "--replace"], [302, 6, 1, "cmdoption-pharmpy-data-resample-resamples", "--resamples"], [302, 6, 1, "cmdoption-pharmpy-data-resample-sample_size", "--sample_size"], [302, 6, 1, "cmdoption-pharmpy-data-resample-seed", "--seed"], [302, 6, 1, "cmdoption-pharmpy-data-resample-stratify", "--stratify"], [302, 6, 1, "cmdoption-pharmpy-data-resample-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-resample-arg-file", "file"]], "pharmpy-data-write": [[302, 6, 1, "cmdoption-pharmpy-data-write-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-data-write-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-write-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-data-write-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-data-write-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-data-write-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-data-write-arg-file", "file"]], "pharmpy-data": [[302, 6, 1, "cmdoption-pharmpy-data-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-data-h", "-h"]], "pharmpy-info": [[302, 6, 1, "cmdoption-pharmpy-info-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-info-h", "-h"]], "pharmpy-model-absorption_rate": [[302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-absorption_rate-arg-rate", "rate"]], "pharmpy-model-add_cov_effect": [[302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-operation", "--operation"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate", "covariate"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-effect", "effect"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-add_cov_effect-arg-param", "param"]], "pharmpy-model-add_iiv": [[302, 6, 1, "cmdoption-pharmpy-model-add_iiv-eta_name", "--eta_name"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-operation", "--operation"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-expression", "expression"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-add_iiv-arg-param", "param"]], "pharmpy-model-add_iov": [[302, 6, 1, "cmdoption-pharmpy-model-add_iov-eta_names", "--eta_names"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-etas", "--etas"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-add_iov-arg-occ", "occ"]], "pharmpy-model-boxcox": [[302, 6, 1, "cmdoption-pharmpy-model-boxcox-etas", "--etas"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-boxcox-arg-file", "file"]], "pharmpy-model-create_joint_distribution": [[302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-etas", "--etas"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-create_joint_distribution-arg-file", "file"]], "pharmpy-model-elimination_rate": [[302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-elimination_rate-arg-rate", "rate"]], "pharmpy-model-error": [[302, 6, 1, "cmdoption-pharmpy-model-error-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-error-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-error-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-error-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-error-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-error-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-error-arg-error_type", "error_type"], [302, 6, 1, "cmdoption-pharmpy-model-error-arg-file", "file"]], "pharmpy-model-iiv_on_ruv": [[302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eps", "--eps"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names", "--eta_names"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta", "--same_eta"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file", "file"]], "pharmpy-model-john_draper": [[302, 6, 1, "cmdoption-pharmpy-model-john_draper-etas", "--etas"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-john_draper-arg-file", "file"]], "pharmpy-model-peripheral_compartments": [[302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-peripheral_compartments-arg-n", "n"]], "pharmpy-model-power_on_ruv": [[302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-eps", "--eps"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-power_on_ruv-arg-file", "file"]], "pharmpy-model-print": [[302, 6, 1, "cmdoption-pharmpy-model-print-explicit-odes", "--explicit-odes"], [302, 6, 1, "cmdoption-pharmpy-model-print-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-print-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-print-arg-file", "file"]], "pharmpy-model-remove_iiv": [[302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-to_remove", "--to_remove"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iiv-arg-file", "file"]], "pharmpy-model-remove_iov": [[302, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iov-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iov-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iov-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-remove_iov-arg-file", "file"]], "pharmpy-model-sample": [[302, 6, 1, "cmdoption-pharmpy-model-sample-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-sample-samples", "--samples"], [302, 6, 1, "cmdoption-pharmpy-model-sample-seed", "--seed"], [302, 6, 1, "cmdoption-pharmpy-model-sample-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-sample-arg-file", "file"]], "pharmpy-model-tdist": [[302, 6, 1, "cmdoption-pharmpy-model-tdist-etas", "--etas"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-tdist-arg-file", "file"]], "pharmpy-model-transit_compartments": [[302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-model-transit_compartments-arg-n", "n"]], "pharmpy-model-update_inits": [[302, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "--force"], [302, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "--output_file"], [302, 6, 1, "cmdoption-pharmpy-model-update_inits-f", "-f"], [302, 6, 1, "cmdoption-pharmpy-model-update_inits-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-model-update_inits-o", "-o"], [302, 6, 1, "cmdoption-pharmpy-model-update_inits-arg-file", "file"]], "pharmpy-model": [[302, 6, 1, "cmdoption-pharmpy-model-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-model-h", "-h"]], "pharmpy-results-bootstrap": [[302, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-bootstrap-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-bootstrap-arg-psn", "psn"]], "pharmpy-results-cdd": [[302, 6, 1, "cmdoption-pharmpy-results-cdd-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-cdd-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-cdd-arg-psn", "psn"]], "pharmpy-results-frem": [[302, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix", "--force_posdef_covmatrix"], [302, 6, 1, "cmdoption-pharmpy-results-frem-force_posdef_samples", "--force_posdef_samples"], [302, 6, 1, "cmdoption-pharmpy-results-frem-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-frem-method", "--method"], [302, 6, 1, "cmdoption-pharmpy-results-frem-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-frem-arg-psn", "psn"]], "pharmpy-results-linearize": [[302, 6, 1, "cmdoption-pharmpy-results-linearize-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-linearize-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-linearize-arg-psn", "psn"]], "pharmpy-results-ofv": [[302, 6, 1, "cmdoption-pharmpy-results-ofv-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-ofv-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-ofv-arg-file", "file"]], "pharmpy-results-print": [[302, 6, 1, "cmdoption-pharmpy-results-print-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-print-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-print-arg-file", "file"]], "pharmpy-results-qa": [[302, 6, 1, "cmdoption-pharmpy-results-qa-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-qa-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-qa-arg-psn", "psn"]], "pharmpy-results-report": [[302, 6, 1, "cmdoption-pharmpy-results-report-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-report-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-report-arg-psn", "psn"]], "pharmpy-results-ruvsearch": [[302, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-ruvsearch-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-ruvsearch-arg-psn", "psn"]], "pharmpy-results-scm": [[302, 6, 1, "cmdoption-pharmpy-results-scm-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-scm-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-scm-arg-psn", "psn"]], "pharmpy-results-simeval": [[302, 6, 1, "cmdoption-pharmpy-results-simeval-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-simeval-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-simeval-arg-psn", "psn"]], "pharmpy-results-summary": [[302, 6, 1, "cmdoption-pharmpy-results-summary-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-summary-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-results-summary-arg-file", "file"]], "pharmpy-results": [[302, 6, 1, "cmdoption-pharmpy-results-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-results-h", "-h"]], "pharmpy-run-allometry": [[302, 6, 1, "cmdoption-pharmpy-run-allometry-allometric_variable", "--allometric_variable"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-initials", "--initials"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-lower_bounds", "--lower_bounds"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-non_fixed", "--non_fixed"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-parameters", "--parameters"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-reference_value", "--reference_value"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-upper_bounds", "--upper_bounds"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-allometry-arg-file", "file"]], "pharmpy-run-amd": [[302, 6, 1, "cmdoption-pharmpy-run-amd-administration", "--administration"], [302, 6, 1, "cmdoption-pharmpy-run-amd-allometric_variable", "--allometric_variable"], [302, 6, 1, "cmdoption-pharmpy-run-amd-cl_init", "--cl_init"], [302, 6, 1, "cmdoption-pharmpy-run-amd-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-amd-lloq_limit", "--lloq_limit"], [302, 6, 1, "cmdoption-pharmpy-run-amd-lloq_method", "--lloq_method"], [302, 6, 1, "cmdoption-pharmpy-run-amd-mat_init", "--mat_init"], [302, 6, 1, "cmdoption-pharmpy-run-amd-modeltype", "--modeltype"], [302, 6, 1, "cmdoption-pharmpy-run-amd-occasion", "--occasion"], [302, 6, 1, "cmdoption-pharmpy-run-amd-order", "--order"], [302, 6, 1, "cmdoption-pharmpy-run-amd-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-amd-resume", "--resume"], [302, 6, 1, "cmdoption-pharmpy-run-amd-search_space", "--search_space"], [302, 6, 1, "cmdoption-pharmpy-run-amd-vc_init", "--vc_init"], [302, 6, 1, "cmdoption-pharmpy-run-amd-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-amd-arg-input_path", "input_path"]], "pharmpy-run-bootstrap": [[302, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-bootstrap-samples", "--samples"], [302, 6, 1, "cmdoption-pharmpy-run-bootstrap-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-bootstrap-arg-file", "file"]], "pharmpy-run-covsearch": [[302, 6, 1, "cmdoption-pharmpy-run-covsearch-algorithm", "--algorithm"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-effects", "--effects"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-max_steps", "--max_steps"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-p_backward", "--p_backward"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-p_forward", "--p_forward"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-covsearch-arg-file", "file"]], "pharmpy-run-estmethod": [[302, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-estmethod-methods", "--methods"], [302, 6, 1, "cmdoption-pharmpy-run-estmethod-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-estmethod-solvers", "--solvers"], [302, 6, 1, "cmdoption-pharmpy-run-estmethod-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-algorithm", "algorithm"], [302, 6, 1, "cmdoption-pharmpy-run-estmethod-arg-file", "file"]], "pharmpy-run-execute": [[302, 6, 1, "cmdoption-pharmpy-run-execute-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-execute-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-execute-arg-file", "file"]], "pharmpy-run-iivsearch": [[302, 6, 1, "cmdoption-pharmpy-run-iivsearch-cutoff", "--cutoff"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-iiv_strategy", "--iiv_strategy"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-rank_type", "--rank_type"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-algorithm", "algorithm"], [302, 6, 1, "cmdoption-pharmpy-run-iivsearch-arg-file", "file"]], "pharmpy-run-iovsearch": [[302, 6, 1, "cmdoption-pharmpy-run-iovsearch-column", "--column"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-cutoff", "--cutoff"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-distribution", "--distribution"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-list_of_parameters", "--list_of_parameters"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-rank_type", "--rank_type"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-iovsearch-arg-file", "file"]], "pharmpy-run-modelsearch": [[302, 6, 1, "cmdoption-pharmpy-run-modelsearch-cutoff", "--cutoff"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-iiv_strategy", "--iiv_strategy"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-rank_type", "--rank_type"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-algorithm", "algorithm"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-file", "file"], [302, 6, 1, "cmdoption-pharmpy-run-modelsearch-arg-mfl", "mfl"]], "pharmpy-run-ruvsearch": [[302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-groups", "--groups"], [302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-p_value", "--p_value"], [302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-path", "--path"], [302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-skip", "--skip"], [302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-h", "-h"], [302, 6, 1, "cmdoption-pharmpy-run-ruvsearch-arg-file", "file"]], "pharmpy-run": [[302, 6, 1, "cmdoption-pharmpy-run-h", "--help"], [302, 6, 1, "cmdoption-pharmpy-run-h", "-h"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["std", "cmdoption", "program option"]}, "titleterms": {"nonmem": [0, 304, 324], "dataset": [0, 309, 320, 322, 335], "overview": [0, 326, 330], "pars": 0, "translat": 0, "step": [0, 320, 322, 332], "nm": 0, "tran": 0, "comment": 0, "line": [0, 302], "ignor": 0, "c": 0, "null": 0, "item": 0, "accept": 0, "time": [0, 322], "date": 0, "id": 0, "check": [0, 305], "tabl": 0, "file": [0, 304, 309], "header": 0, "cov": 0, "cor": 0, "coi": 0, "phi": 0, "format": [0, 305], "all": 0, "zero": 0, "individu": [0, 298, 299, 313, 319, 321, 333], "control": 0, "stream": 0, "gener": [0, 318], "option": [0, 297, 335], "problem": 0, "data": [0, 297, 302], "eta": [0, 322], "code": [0, 303, 305], "record": 0, "deriv": 0, "abbrevi": 0, "verbatim": 0, "result": [0, 1, 2, 284, 298, 299, 302, 307, 308, 312, 313, 315, 317, 319, 321, 323, 328, 330, 331, 332, 333, 334, 335], "spars": 0, "matrix": [0, 298, 321], "allometri": [1, 2, 302, 322], "run": [1, 2, 302, 305, 307, 312, 315, 317, 323, 331, 334, 335], "argument": [1, 2, 307, 312, 315, 317, 323, 331, 334], "procedur": [1, 331], "The": [1, 298, 299, 302, 304, 308, 310, 312, 313, 315, 319, 320, 323, 328, 330, 331, 332, 333, 334], "automat": 2, "model": [2, 18, 294, 295, 302, 309, 310, 315, 320, 321, 322, 323, 324, 328, 331, 334, 335], "develop": [2, 305, 306, 311], "amd": [2, 302], "input": [2, 306], "search": [2, 315, 323, 334], "space": [2, 323, 334], "order": 2, "subtool": 2, "structur": [2, 315, 322, 330], "modelsearch": [2, 302, 323], "structsearch": [2, 334], "iivsearch": [2, 302, 315], "iovsearch": [2, 302, 317], "residu": [2, 321, 330], "covari": [2, 298, 299, 313, 315, 321, 322, 330], "final": [2, 321], "api": 3, "refer": [3, 299, 302, 313], "assign": 4, "bolu": 5, "columninfo": [6, 309], "compart": 7, "compartmentalsystem": 8, "compartmentalsystembuild": 9, "datainfo": [10, 309, 320], "dataseterror": 11, "datasetwarn": 12, "distribut": [13, 317, 320, 322], "estimationstep": [14, 15], "infus": 16, "jointnormaldistribut": 17, "modelerror": 19, "modelsyntaxerror": 20, "modelfitresultserror": 21, "normaldistribut": 22, "paramet": [23, 24, 298, 310, 313, 320, 321, 322, 324], "randomvari": [25, 310], "simulationstep": 26, "statement": [27, 28, 310, 320], "variabilityhierarchi": 29, "variabilitylevel": 30, "to_compartmental_system": 31, "add_admid": 32, "add_allometri": 33, "add_bioavail": 34, "add_cmt": 35, "add_covariate_effect": 36, "add_effect_compart": 37, "add_estimation_step": 38, "add_iiv": [39, 302], "add_indirect_effect": 40, "add_individual_paramet": 41, "add_iov": [42, 302], "add_lag_tim": 43, "add_metabolit": 44, "add_parameter_uncertainty_step": 45, "add_pd_iiv": 46, "add_peripheral_compart": 47, "add_pk_iiv": 48, "add_population_paramet": 49, "add_time_after_dos": 50, "append_estimation_step_opt": 51, "bump_model_numb": 52, "calculate_a": 53, "calculate_b": 54, "calculate_corr_from_cov": 55, "calculate_corr_from_prec": 56, "calculate_cov_from_corrs": 57, "calculate_cov_from_prec": 58, "calculate_epsilon_gradient_express": 59, "calculate_eta_gradient_express": 60, "calculate_eta_shrinkag": 61, "calculate_individual_parameter_statist": 62, "calculate_individual_shrinkag": 63, "calculate_parameters_from_ucp": 64, "calculate_pk_parameters_statist": 65, "calculate_prec_from_corrs": 66, "calculate_prec_from_cov": 67, "calculate_se_from_cov": 68, "calculate_se_from_prec": 69, "calculate_ucp_scal": 70, "check_dataset": 71, "check_high_correl": 72, "check_parameters_near_bound": 73, "cleanup_model": 74, "convert_model": 75, "create_basic_pk_model": 76, "create_config_templ": 77, "create_joint_distribut": [78, 302], "create_rng": 79, "create_symbol": 80, "deidentify_data": 81, "display_od": 82, "drop_column": 83, "drop_dropped_column": 84, "evaluate_epsilon_gradi": 85, "evaluate_eta_gradi": 86, "evaluate_express": 87, "evaluate_individual_predict": 88, "evaluate_population_predict": 89, "evaluate_weighted_residu": 90, "expand_additional_dos": 91, "filter_dataset": 92, "find_clearance_paramet": 93, "find_volume_paramet": 94, "fix_or_unfix_paramet": 95, "fix_paramet": 96, "fix_parameters_to": 97, "get_admid": 98, "get_baselin": 99, "get_bioavail": 100, "get_cmt": 101, "get_concentration_parameters_from_data": 102, "get_config_path": 103, "get_covariate_baselin": 104, "get_covari": 105, "get_doseid": 106, "get_dos": 107, "get_dv_symbol": 108, "get_evid": 109, "get_id": 110, "get_individual_paramet": 111, "get_individual_prediction_express": 112, "get_initial_condit": 113, "get_lag_tim": 114, "get_mdv": 115, "get_model_cod": 116, "get_model_covari": 117, "get_number_of_individu": 118, "get_number_of_observ": 119, "get_number_of_observations_per_individu": 120, "get_number_of_peripheral_compart": 121, "get_number_of_transit_compart": 122, "get_observation_express": 123, "get_observ": 124, "get_omega": 125, "get_parameter_rv": 126, "get_pd_paramet": 127, "get_pk_paramet": 128, "get_population_prediction_express": 129, "get_rv_paramet": 130, "get_sigma": 131, "get_theta": 132, "get_unit_of": 133, "get_zero_order_input": 134, "greekify_model": 135, "has_additive_error_model": 136, "has_combined_error_model": 137, "has_covariate_effect": 138, "has_first_order_absorpt": 139, "has_first_order_elimin": 140, "has_instantaneous_absorpt": 141, "has_linear_od": 142, "has_linear_odes_with_real_eigenvalu": 143, "has_michaelis_menten_elimin": 144, "has_mixed_mm_fo_elimin": 145, "has_od": 146, "has_presystemic_metabolit": 147, "has_proportional_error_model": 148, "has_random_effect": 149, "has_seq_zo_fo_absorpt": 150, "has_weighted_error_model": 151, "has_zero_order_absorpt": 152, "has_zero_order_elimin": 153, "is_linear": 154, "is_real": 155, "list_time_varying_covari": 156, "load_dataset": 157, "load_example_model": 158, "make_declar": 159, "mu_reference_model": 160, "omit_data": 161, "plot_cwres_vs_idv": 162, "plot_dv_vs_ipr": 163, "plot_individual_predict": 164, "plot_iofv_vs_iofv": 165, "plot_transformed_eta_distribut": 166, "print_model_cod": 167, "print_model_symbol": 168, "read_dataset_from_datainfo": 169, "read_model": 170, "read_model_from_str": 171, "remove_bioavail": 172, "remove_covariate_effect": 173, "remove_error_model": 174, "remove_estimation_step": 175, "remove_iiv": [176, 302], "remove_iov": [177, 302], "remove_lag_tim": 178, "remove_loq_data": 179, "remove_parameter_uncertainty_step": 180, "remove_peripheral_compart": 181, "remove_unused_parameters_and_rv": 182, "rename_symbol": 183, "replace_non_random_rv": 184, "resample_data": 185, "sample_individual_estim": 186, "sample_parameters_from_covariance_matrix": 187, "sample_parameters_uniformli": 188, "set_additive_error_model": 189, "set_baseline_effect": 190, "set_combined_error_model": 191, "set_covari": 192, "set_direct_effect": 193, "set_dtbs_error_model": 194, "set_dvid": 195, "set_estimation_step": 196, "set_evaluation_step": 197, "set_first_order_absorpt": 198, "set_first_order_elimin": 199, "set_iiv_on_ruv": 200, "set_initial_condit": 201, "set_initial_estim": 202, "set_instantaneous_absorpt": 203, "set_lloq_data": 204, "set_lower_bound": 205, "set_michaelis_menten_elimin": 206, "set_mixed_mm_fo_elimin": 207, "set_nam": 208, "set_ode_solv": 209, "set_peripheral_compart": 210, "set_power_on_ruv": 211, "set_proportional_error_model": 212, "set_reference_valu": 213, "set_seq_zo_fo_absorpt": 214, "set_simul": 215, "set_time_varying_error_model": 216, "set_tmdd": 217, "set_transit_compart": 218, "set_upper_bound": 219, "set_weighted_error_model": 220, "set_zero_order_absorpt": 221, "set_zero_order_elimin": 222, "set_zero_order_input": 223, "simplify_express": 224, "solve_ode_system": 225, "split_joint_distribut": 226, "transform_blq": 227, "transform_etas_boxcox": 228, "transform_etas_john_drap": 229, "transform_etas_tdist": 230, "translate_nmtran_tim": 231, "unconstrain_paramet": 232, "undrop_column": 233, "unfix_paramet": 234, "unfix_parameters_to": 235, "unload_dataset": 236, "update_initial_individual_estim": 237, "update_init": [238, 302], "use_thetas_for_error_stdev": 239, "write_csv": 240, "write_model": 241, "create_report": 242, "create_result": 243, "fit": [244, 321], "get_model_featur": 245, "is_strictness_fulfil": 246, "load_example_modelfit_result": 247, "predict_influential_individu": 248, "predict_influential_outli": 249, "predict_outli": 250, "print_fit_summari": 251, "rank_model": 252, "read_modelfit_result": 253, "read_result": 254, "resume_tool": 255, "retrieve_final_model": 256, "retrieve_model": 257, "run_allometri": 258, "run_amd": 259, "run_bootstrap": 260, "run_covsearch": 261, "run_estmethod": 262, "run_iivsearch": 263, "run_iovsearch": 264, "run_modelfit": 265, "run_modelsearch": 266, "run_ruvsearch": 267, "run_structsearch": 268, "run_tool": 269, "summarize_error": 270, "summarize_individu": 271, "summarize_individuals_count_t": 272, "summarize_modelfit_result": 273, "write_result": 274, "localdirectorydatabas": 275, "localdirectorytooldatabas": 276, "localmodeldirectorydatabas": 277, "log": 278, "modeldatabas": 279, "modelentri": 280, "modelfitresult": 281, "nullmodeldatabas": 282, "nulltooldatabas": 283, "task": 285, "tooldatabas": 286, "workflow": [287, 297, 305], "workflowbuild": 288, "call_workflow": 289, "default_model_databas": 290, "default_tool_databas": 291, "execute_workflow": 292, "split_common_opt": 293, "pharmpi": [294, 295, 296, 297, 301, 302, 303, 304, 305, 309, 310, 316, 320, 325, 329, 335, 337], "packag": [294, 295, 296, 297], "function": [294, 295, 296, 297, 322], "class": [294, 297, 310], "tool": [296, 329, 335], "modul": [297, 310], "bootstrap": [298, 302], "postprocess": [298, 313], "statist": 298, "ofv": [298, 299, 302, 308, 313, 319, 321, 332, 333], "includ": 298, "case": 299, "delet": 299, "diagnost": 299, "cdd": [299, 302], "cook": 299, "score": 299, "jackknif": 299, "cookscor": 299, "ratio": 299, "delta": 299, "skip": 299, "column": 299, "changelog": 300, "0": 300, "104": 300, "2023": 300, "11": 300, "06": 300, "new": [300, 317, 324], "featur": [300, 323, 335], "bugfix": 300, "103": 300, "10": 300, "12": 300, "chang": [300, 325], "102": 300, "09": 300, "28": 300, "101": 300, "01": 300, "100": 300, "08": 300, "25": 300, "99": 300, "23": 300, "98": 300, "07": 300, "21": 300, "97": 300, "96": 300, "05": 300, "26": 300, "95": 300, "22": 300, "94": 300, "04": 300, "93": 300, "19": 300, "92": 300, "91": 300, "03": 300, "90": 300, "02": 300, "24": 300, "89": 300, "88": 300, "2022": 300, "87": 300, "14": 300, "86": 300, "30": 300, "85": 300, "18": 300, "84": 300, "1": 300, "13": 300, "bug": 300, "fix": 300, "83": 300, "82": 300, "81": 300, "80": 300, "79": 300, "16": 300, "78": 300, "20": 300, "77": 300, "76": 300, "75": 300, "74": 300, "73": 300, "72": 300, "71": 300, "70": 300, "17": 300, "69": 300, "29": 300, "68": 300, "27": 300, "67": 300, "66": 300, "65": 300, "64": 300, "63": 300, "62": 300, "61": 300, "31": 300, "59": 300, "58": 300, "4": 300, "57": 300, "56": 300, "55": 300, "54": 300, "53": 300, "52": 300, "51": 300, "50": 300, "49": 300, "48": 300, "47": 300, "46": 300, "45": 300, "44": 300, "43": 300, "42": 300, "41": 300, "2021": 300, "40": 300, "39": 300, "15": 300, "38": 300, "37": 300, "36": 300, "35": 300, "34": 300, "3": 300, "2": [300, 318], "33": 300, "32": 300, "2020": 300, "9": 300, "8": 300, "7": 300, "6": 300, "5": 300, "2018": 300, "citat": 301, "how": 301, "cite": 301, "pharmr": [301, 337], "command": 302, "interfac": 302, "append": 302, "deidentifi": 302, "filter": 302, "print": 302, "resampl": 302, "write": [302, 320, 322, 324], "info": 302, "absorption_r": 302, "add_cov_effect": 302, "boxcox": [302, 330], "elimination_r": 302, "error": [302, 321, 322, 330, 337], "iiv_on_ruv": 302, "john_drap": 302, "peripheral_compart": 302, "power_on_ruv": 302, "sampl": [302, 333], "tdist": [302, 330], "transit_compart": 302, "frem": [302, 313], "linear": [302, 319], "qa": [302, 330], "report": 302, "ruvsearch": [302, 331], "scm": [302, 332], "simev": [302, 333], "summari": [302, 332, 333], "covsearch": [302, 307], "estmethod": [302, 312], "execut": 302, "commun": 303, "conduct": 303, "configur": 304, "avail": 304, "plugin": [304, 324, 326], "nlmixr": 304, "rxode": 304, "environ": [304, 305], "variabl": [304, 313, 320, 322, 324], "contribut": 305, "set": [305, 325], "up": 305, "support": 305, "platform": 305, "instal": [305, 314, 337], "python": [305, 337], "git": 305, "fork": 305, "clone": 305, "repositori": 305, "tox": 305, "graphviz": 305, "us": [305, 324, 337], "build": 305, "document": [305, 311], "unit": [305, 309], "test": 305, "integr": 305, "usabl": 305, "virtual": 305, "standard": [305, 321], "releas": 305, "version": [305, 337], "inform": [305, 322], "contributor": 306, "scientif": 306, "fund": 306, "effect": [307, 313, 330], "wildcard": 307, "algorithm": [307, 312, 315, 317, 323], "crossval": 308, "crossvalid": 308, "retriev": 309, "from": 309, "updat": [309, 312], "type": [309, 334, 335], "scale": 309, "continu": 309, "categori": 309, "drop": 309, "datatyp": 309, "descriptor": 309, "design": 310, "principl": 310, "level": [310, 320], "architectur": 310, "heart": 310, "docstr": 310, "depend": [310, 320], "exhaust": [312, 323], "onli": 312, "evalu": 312, "estim": [312, 313, 320, 321, 322], "method": 312, "solver": 312, "coeffici": 313, "unexplain": 313, "valu": 313, "get": 314, "start": [314, 315], "A": 314, "first": 314, "exampl": [314, 322, 335], "brute": 315, "forc": 315, "number": 315, "iiv": [315, 323], "full": 315, "ad": [315, 320, 322, 323], "compar": [315, 317, 323], "rank": [315, 317, 323], "candid": [315, 317, 323, 332], "welcom": 316, "iov": 317, "licens": 318, "logo": 318, "copyright": 318, "bsd": 318, "claus": 318, "gnu": 318, "lesser": 318, "public": 318, "read": [320, 322, 324], "inspect": 320, "attribut": 320, "name": [320, 324], "descript": [320, 335], "random": [320, 324], "low": 320, "manipul": 320, "object": 320, "creat": [320, 322], "substitut": 320, "symbol": [320, 335], "numer": 320, "modelfit": 321, "rel": 321, "correl": 321, "precis": 321, "indiviud": 321, "predict": [321, 333], "basic": 322, "load": 322, "convert": 322, "transform": 322, "absorpt": 322, "rate": 322, "delai": 322, "elimin": 322, "remov": 322, "popul": 322, "blq": 322, "examin": 322, "modifi": 322, "subject": 322, "observ": 322, "dose": 322, "extract": 322, "group": 322, "after": 322, "concentr": 322, "common": [323, 335], "behaviour": 323, "between": [323, 337], "combin": 323, "exclus": 323, "stepwis": 323, "reduc": 323, "dure": 323, "plot": [325, 333], "theme": 325, "axi": 325, "project": 327, "suggest": 327, "resmod": 328, "psn": 329, "connect": 329, "bia": 330, "fullblock": 330, "pkpd": 334, "drug": 334, "metabolit": 334, "tmdd": 334, "databas": 335, "directori": 335, "metadata": 335, "languag": 335, "mfl": 335, "describ": 335, "interv": 335, "redund": 335, "strict": 335, "user": 336, "guid": 336, "r": 337, "troubl": 337, "shoot": 337, "wrong": 337, "when": 337, "conda": 337, "import": 337, "mismatch": 337, "gotcha": 337, "list": 337, "indic": 337}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"get_individual_parameters": [[111, "get-individual-parameters"]], "get_ids": [[110, "get-ids"]], "fix_parameters_to": [[97, "fix-parameters-to"]], "get_initial_conditions": [[113, "get-initial-conditions"]], "get_evid": [[109, "get-evid"]], "get_bioavailability": [[100, "get-bioavailability"]], "evaluate_weighted_residuals": [[90, "evaluate-weighted-residuals"]], "get_doseid": [[106, "get-doseid"]], "get_concentration_parameters_from_data": [[102, "get-concentration-parameters-from-data"]], "expand_additional_doses": [[91, "expand-additional-doses"]], "evaluate_individual_prediction": [[88, "evaluate-individual-prediction"]], "get_covariates": [[105, "get-covariates"]], "get_doses": [[107, "get-doses"]], "get_mdv": [[115, "get-mdv"]], "evaluate_expression": [[87, "evaluate-expression"]], "get_covariate_baselines": [[104, "get-covariate-baselines"]], "fix_parameters": [[96, "fix-parameters"]], "find_volume_parameters": [[94, "find-volume-parameters"]], "get_lag_times": [[114, "get-lag-times"]], "get_baselines": [[99, "get-baselines"]], "get_dv_symbol": [[108, "get-dv-symbol"]], "get_admid": [[98, "get-admid"]], "get_individual_prediction_expression": [[112, "get-individual-prediction-expression"]], "find_clearance_parameters": [[93, "find-clearance-parameters"]], "get_config_path": [[103, "get-config-path"]], "filter_dataset": [[92, "filter-dataset"]], "evaluate_population_prediction": [[89, "evaluate-population-prediction"]], "get_cmt": [[101, "get-cmt"]], "fix_or_unfix_parameters": [[95, "fix-or-unfix-parameters"]], "check_parameters_near_bounds": [[73, "check-parameters-near-bounds"]], "create_symbol": [[80, "create-symbol"]], "deidentify_data": [[81, "deidentify-data"]], "calculate_pk_parameters_statistics": [[65, "calculate-pk-parameters-statistics"]], "calculate_eta_shrinkage": [[61, "calculate-eta-shrinkage"]], "create_basic_pk_model": [[76, "create-basic-pk-model"]], "check_dataset": [[71, "check-dataset"]], "convert_model": [[75, "convert-model"]], "calculate_ucp_scale": [[70, "calculate-ucp-scale"]], "create_joint_distribution": [[78, "create-joint-distribution"]], "cleanup_model": [[74, "cleanup-model"]], "evaluate_eta_gradient": [[86, "evaluate-eta-gradient"]], "display_odes": [[82, "display-odes"]], "calculate_parameters_from_ucp": [[64, "calculate-parameters-from-ucp"]], "calculate_eta_gradient_expression": [[60, "calculate-eta-gradient-expression"]], "calculate_epsilon_gradient_expression": [[59, "calculate-epsilon-gradient-expression"]], "drop_columns": [[83, "drop-columns"]], "calculate_individual_parameter_statistics": [[62, "calculate-individual-parameter-statistics"]], "calculate_se_from_prec": [[69, "calculate-se-from-prec"]], "calculate_individual_shrinkage": [[63, "calculate-individual-shrinkage"]], "calculate_cov_from_prec": [[58, "calculate-cov-from-prec"]], "create_rng": [[79, "create-rng"]], "check_high_correlations": [[72, "check-high-correlations"]], "drop_dropped_columns": [[84, "drop-dropped-columns"]], "calculate_se_from_cov": [[68, "calculate-se-from-cov"]], "evaluate_epsilon_gradient": [[85, "evaluate-epsilon-gradient"]], "calculate_prec_from_corrse": [[66, "calculate-prec-from-corrse"]], "calculate_prec_from_cov": [[67, "calculate-prec-from-cov"]], "create_config_template": [[77, "create-config-template"]], "bump_model_number": [[52, "bump-model-number"]], "to_compartmental_system": [[31, "to-compartmental-system"]], "add_covariate_effect": [[36, "add-covariate-effect"]], "VariabilityHierarchy": [[29, "variabilityhierarchy"]], "add_individual_parameter": [[41, "add-individual-parameter"]], "add_effect_compartment": [[37, "add-effect-compartment"]], "add_metabolite": [[44, "add-metabolite"]], "add_admid": [[32, "add-admid"]], "add_iov": [[42, "add-iov"]], "calculate_aic": [[53, "calculate-aic"]], "calculate_corr_from_prec": [[56, "calculate-corr-from-prec"]], "add_estimation_step": [[38, "add-estimation-step"]], "add_time_after_dose": [[50, "add-time-after-dose"]], "add_parameter_uncertainty_step": [[45, "add-parameter-uncertainty-step"]], "add_lag_time": [[43, "add-lag-time"]], "add_peripheral_compartment": [[47, "add-peripheral-compartment"]], "append_estimation_step_options": [[51, "append-estimation-step-options"]], "calculate_cov_from_corrse": [[57, "calculate-cov-from-corrse"]], "add_cmt": [[35, "add-cmt"]], "calculate_bic": [[54, "calculate-bic"]], "add_population_parameter": [[49, "add-population-parameter"]], "add_pk_iiv": [[48, "add-pk-iiv"]], "add_bioavailability": [[34, "add-bioavailability"]], "add_allometry": [[33, "add-allometry"]], "add_indirect_effect": [[40, "add-indirect-effect"]], "calculate_corr_from_cov": [[55, "calculate-corr-from-cov"]], "add_pd_iiv": [[46, "add-pd-iiv"]], "VariabilityLevel": [[30, "variabilitylevel"]], "add_iiv": [[39, "add-iiv"]], "run_covsearch": [[261, "run-covsearch"]], "call_workflow": [[289, "call-workflow"]], "write_results": [[274, "write-results"]], "summarize_modelfit_results": [[273, "summarize-modelfit-results"]], "WorkflowBuilder": [[288, "workflowbuilder"]], "run_estmethod": [[262, "run-estmethod"]], "run_tool": [[269, "run-tool"]], "LocalDirectoryToolDatabase": [[276, "localdirectorytooldatabase"]], "LocalDirectoryDatabase": [[275, "localdirectorydatabase"]], "Log": [[278, "log"]], "LocalModelDirectoryDatabase": [[277, "localmodeldirectorydatabase"]], "ModelDatabase": [[279, "modeldatabase"]], "summarize_individuals": [[271, "summarize-individuals"]], "ModelfitResults": [[281, "modelfitresults"]], "run_ruvsearch": [[267, "run-ruvsearch"]], "run_iivsearch": [[263, "run-iivsearch"]], "ToolDatabase": [[286, "tooldatabase"]], "Results": [[284, "results"], [2, "results"], [307, "results"], [317, "results"], [335, "results"]], "run_structsearch": [[268, "run-structsearch"]], "Workflow": [[287, "workflow"]], "run_modelsearch": [[266, "run-modelsearch"]], "summarize_individuals_count_table": [[272, "summarize-individuals-count-table"]], "NullModelDatabase": [[282, "nullmodeldatabase"]], "run_modelfit": [[265, "run-modelfit"]], "summarize_errors": [[270, "summarize-errors"]], "NullToolDatabase": [[283, "nulltooldatabase"]], "Task": [[285, "task"]], "ModelEntry": [[280, "modelentry"]], "run_iovsearch": [[264, "run-iovsearch"]], "read_results": [[254, "read-results"]], "rank_models": [[252, "rank-models"]], "use_thetas_for_error_stdev": [[239, "use-thetas-for-error-stdev"]], "run_amd": [[259, "run-amd"]], "is_strictness_fulfilled": [[246, "is-strictness-fulfilled"]], "update_initial_individual_estimates": [[237, "update-initial-individual-estimates"]], "unfix_parameters": [[234, "unfix-parameters"]], "fit": [[244, "fit"]], "retrieve_final_model": [[256, "retrieve-final-model"]], "predict_outliers": [[250, "predict-outliers"]], "retrieve_models": [[257, "retrieve-models"]], "undrop_columns": [[233, "undrop-columns"]], "create_results": [[243, "create-results"]], "load_example_modelfit_results": [[247, "load-example-modelfit-results"]], "predict_influential_outliers": [[249, "predict-influential-outliers"]], "unconstrain_parameters": [[232, "unconstrain-parameters"]], "get_model_features": [[245, "get-model-features"]], "update_inits": [[238, "update-inits"]], "print_fit_summary": [[251, "print-fit-summary"]], "run_allometry": [[258, "run-allometry"]], "write_model": [[241, "write-model"]], "resume_tool": [[255, "resume-tool"]], "create_report": [[242, "create-report"]], "write_csv": [[240, "write-csv"]], "run_bootstrap": [[260, "run-bootstrap"]], "predict_influential_individuals": [[248, "predict-influential-individuals"]], "unfix_parameters_to": [[235, "unfix-parameters-to"]], "read_modelfit_results": [[253, "read-modelfit-results"]], "unload_dataset": [[236, "unload-dataset"]], "set_seq_zo_fo_absorption": [[214, "set-seq-zo-fo-absorption"]], "set_instantaneous_absorption": [[203, "set-instantaneous-absorption"]], "set_ode_solver": [[209, "set-ode-solver"]], "set_michaelis_menten_elimination": [[206, "set-michaelis-menten-elimination"]], "set_zero_order_absorption": [[221, "set-zero-order-absorption"]], "set_power_on_ruv": [[211, "set-power-on-ruv"]], "set_proportional_error_model": [[212, "set-proportional-error-model"]], "set_name": [[208, "set-name"]], "set_lloq_data": [[204, "set-lloq-data"]], "set_zero_order_elimination": [[222, "set-zero-order-elimination"]], "set_lower_bounds": [[205, "set-lower-bounds"]], "transform_etas_john_draper": [[229, "transform-etas-john-draper"]], "transform_etas_boxcox": [[228, "transform-etas-boxcox"]], "set_mixed_mm_fo_elimination": [[207, "set-mixed-mm-fo-elimination"]], "set_zero_order_input": [[223, "set-zero-order-input"]], "set_simulation": [[215, "set-simulation"]], "set_upper_bounds": [[219, "set-upper-bounds"]], "transform_blq": [[227, "transform-blq"]], "translate_nmtran_time": [[231, "translate-nmtran-time"]], "set_weighted_error_model": [[220, "set-weighted-error-model"]], "split_joint_distribution": [[226, "split-joint-distribution"]], "set_reference_values": [[213, "set-reference-values"]], "set_time_varying_error_model": [[216, "set-time-varying-error-model"]], "solve_ode_system": [[225, "solve-ode-system"]], "transform_etas_tdist": [[230, "transform-etas-tdist"]], "set_tmdd": [[217, "set-tmdd"]], "set_peripheral_compartments": [[210, "set-peripheral-compartments"]], "set_transit_compartments": [[218, "set-transit-compartments"]], "simplify_expression": [[224, "simplify-expression"]], "remove_estimation_step": [[175, "remove-estimation-step"]], "set_initial_condition": [[201, "set-initial-condition"]], "remove_error_model": [[174, "remove-error-model"]], "set_additive_error_model": [[189, "set-additive-error-model"]], "set_baseline_effect": [[190, "set-baseline-effect"]], "sample_parameters_from_covariance_matrix": [[187, "sample-parameters-from-covariance-matrix"]], "set_dtbs_error_model": [[194, "set-dtbs-error-model"]], "remove_unused_parameters_and_rvs": [[182, "remove-unused-parameters-and-rvs"]], "set_combined_error_model": [[191, "set-combined-error-model"]], "set_iiv_on_ruv": [[200, "set-iiv-on-ruv"]], "rename_symbols": [[183, "rename-symbols"]], "set_estimation_step": [[196, "set-estimation-step"]], "remove_iov": [[177, "remove-iov"]], "remove_loq_data": [[179, "remove-loq-data"]], "replace_non_random_rvs": [[184, "replace-non-random-rvs"]], "sample_parameters_uniformly": [[188, "sample-parameters-uniformly"]], "remove_lag_time": [[178, "remove-lag-time"]], "remove_parameter_uncertainty_step": [[180, "remove-parameter-uncertainty-step"]], "set_dvid": [[195, "set-dvid"]], "set_evaluation_step": [[197, "set-evaluation-step"]], "sample_individual_estimates": [[186, "sample-individual-estimates"]], "remove_iiv": [[176, "remove-iiv"]], "set_direct_effect": [[193, "set-direct-effect"]], "resample_data": [[185, "resample-data"]], "remove_peripheral_compartment": [[181, "remove-peripheral-compartment"]], "set_covariates": [[192, "set-covariates"]], "set_first_order_absorption": [[198, "set-first-order-absorption"]], "set_first_order_elimination": [[199, "set-first-order-elimination"]], "set_initial_estimates": [[202, "set-initial-estimates"]], "omit_data": [[161, "omit-data"]], "has_zero_order_elimination": [[153, "has-zero-order-elimination"]], "has_odes": [[146, "has-odes"]], "plot_dv_vs_ipred": [[163, "plot-dv-vs-ipred"]], "plot_transformed_eta_distributions": [[166, "plot-transformed-eta-distributions"]], "has_presystemic_metabolite": [[147, "has-presystemic-metabolite"]], "is_real": [[155, "is-real"]], "has_seq_zo_fo_absorption": [[150, "has-seq-zo-fo-absorption"]], "has_mixed_mm_fo_elimination": [[145, "has-mixed-mm-fo-elimination"]], "has_random_effect": [[149, "has-random-effect"]], "print_model_code": [[167, "print-model-code"]], "read_dataset_from_datainfo": [[169, "read-dataset-from-datainfo"]], "plot_iofv_vs_iofv": [[165, "plot-iofv-vs-iofv"]], "mu_reference_model": [[160, "mu-reference-model"]], "has_proportional_error_model": [[148, "has-proportional-error-model"]], "print_model_symbols": [[168, "print-model-symbols"]], "remove_bioavailability": [[172, "remove-bioavailability"]], "read_model_from_string": [[171, "read-model-from-string"]], "plot_cwres_vs_idv": [[162, "plot-cwres-vs-idv"]], "remove_covariate_effect": [[173, "remove-covariate-effect"]], "plot_individual_predictions": [[164, "plot-individual-predictions"]], "load_example_model": [[158, "load-example-model"]], "make_declarative": [[159, "make-declarative"]], "has_zero_order_absorption": [[152, "has-zero-order-absorption"]], "read_model": [[170, "read-model"]], "is_linearized": [[154, "is-linearized"]], "load_dataset": [[157, "load-dataset"]], "has_weighted_error_model": [[151, "has-weighted-error-model"]], "list_time_varying_covariates": [[156, "list-time-varying-covariates"]], "get_omegas": [[125, "get-omegas"]], "get_parameter_rv": [[126, "get-parameter-rv"]], "has_linear_odes_with_real_eigenvalues": [[143, "has-linear-odes-with-real-eigenvalues"]], "has_michaelis_menten_elimination": [[144, "has-michaelis-menten-elimination"]], "get_number_of_transit_compartments": [[122, "get-number-of-transit-compartments"]], "greekify_model": [[135, "greekify-model"]], "get_sigmas": [[131, "get-sigmas"]], "has_additive_error_model": [[136, "has-additive-error-model"]], "get_number_of_peripheral_compartments": [[121, "get-number-of-peripheral-compartments"]], "get_number_of_observations_per_individual": [[120, "get-number-of-observations-per-individual"]], "get_model_covariates": [[117, "get-model-covariates"]], "get_number_of_observations": [[119, "get-number-of-observations"]], "get_observations": [[124, "get-observations"]], "get_unit_of": [[133, "get-unit-of"]], "get_pk_parameters": [[128, "get-pk-parameters"]], "get_rv_parameters": [[130, "get-rv-parameters"]], "has_instantaneous_absorption": [[141, "has-instantaneous-absorption"]], "get_zero_order_inputs": [[134, "get-zero-order-inputs"]], "has_first_order_elimination": [[140, "has-first-order-elimination"]], "get_number_of_individuals": [[118, "get-number-of-individuals"]], "get_thetas": [[132, "get-thetas"]], "has_linear_odes": [[142, "has-linear-odes"]], "get_population_prediction_expression": [[129, "get-population-prediction-expression"]], "get_model_code": [[116, "get-model-code"]], "get_pd_parameters": [[127, "get-pd-parameters"]], "has_first_order_absorption": [[139, "has-first-order-absorption"]], "has_covariate_effect": [[138, "has-covariate-effect"]], "get_observation_expression": [[123, "get-observation-expression"]], "has_combined_error_model": [[137, "has-combined-error-model"]], "CompartmentalSystemBuilder": [[9, "compartmentalsystembuilder"]], "allometry": [[1, "allometry"]], "Running": [[1, "running"], [2, "running"], [307, "running"], [315, "running"], [317, "running"], [312, "running"], [334, "running"], [323, "running"], [331, "running"]], "Arguments": [[1, "arguments"], [2, "arguments"], [307, "arguments"], [315, "arguments"], [317, "arguments"], [312, "arguments"], [334, "arguments"], [323, "arguments"], [331, "arguments"]], "Procedure": [[1, "procedure"], [331, "procedure"]], "The allometry results": [[1, "the-allometry-results"]], "EstimationStep": [[14, "estimationstep"]], "RandomVariables": [[25, "randomvariables"]], "Automatic Model Development (AMD)": [[2, "automatic-model-development-amd"]], "Input": [[2, "input"]], "Search space": [[2, "search-space"]], "Order of subtools": [[2, "order-of-subtools"]], "Structural": [[2, "structural"]], "Modelsearch": [[2, "modelsearch"], [323, "modelsearch"]], "Structsearch": [[2, "structsearch"], [334, "structsearch"]], "IIVsearch": [[2, "iivsearch"], [315, "iivsearch"]], "IOVsearch": [[2, "iovsearch"], [317, "iovsearch"]], "Residual": [[2, "residual"]], "Allometry": [[2, "allometry"]], "Covariates": [[2, "covariates"]], "Final model": [[2, "final-model"]], "ModelSyntaxError": [[20, "modelsyntaxerror"]], "ModelfitResultsError": [[21, "modelfitresultserror"]], "DatasetError": [[11, "dataseterror"]], "EstimationSteps": [[15, "estimationsteps"]], "Parameter": [[23, "parameter"]], "Bolus": [[5, "bolus"]], "DatasetWarning": [[12, "datasetwarning"]], "ColumnInfo": [[6, "columninfo"], [309, "columninfo"]], "API Reference": [[3, "api-reference"]], "Statements": [[28, "statements"], [320, "statements"]], "ModelError": [[19, "modelerror"]], "DataInfo": [[10, "datainfo"], [309, "datainfo"]], "SimulationStep": [[26, "simulationstep"]], "CompartmentalSystem": [[8, "compartmentalsystem"]], "Compartment": [[7, "compartment"]], "Infusion": [[16, "infusion"]], "NONMEM": [[0, "nonmem"]], "Dataset": [[0, "dataset"]], "Overview of parsing and translation steps": [[0, "overview-of-parsing-and-translation-steps"]], "NM-TRAN dataset parsing": [[0, "nm-tran-dataset-parsing"]], "Comment lines (IGNORE=c)": [[0, "comment-lines-ignore-c"]], "NULL items in datasets": [[0, "null-items-in-datasets"]], "IGNORE/ACCEPT": [[0, "ignore-accept"]], "TIME": [[0, "time"]], "DATE": [[0, "date"]], "ID checking": [[0, "id-checking"]], "table files": [[0, "table-files"]], "Header": [[0, "header"]], "cov, cor and coi files": [[0, "cov-cor-and-coi-files"]], "phi files": [[0, "phi-files"]], "File format": [[0, "file-format"]], "All zero individuals": [[0, "all-zero-individuals"]], "control stream": [[0, "control-stream"]], "general": [[0, "general"]], "options parsing": [[0, "options-parsing"]], "$PROBLEM": [[0, "problem"]], "$DATA": [[0, "data"]], "$ETAS": [[0, "etas"]], "Code records": [[0, "code-records"]], "Code lines": [[0, "code-lines"]], "Derivatives": [[0, "derivatives"]], "Abbreviated and verbatim code": [[0, "abbreviated-and-verbatim-code"]], "Results file format": [[0, "results-file-format"]], "Sparse matrix format": [[0, "sparse-matrix-format"]], "Statement": [[27, "statement"]], "JointNormalDistribution": [[17, "jointnormaldistribution"]], "Model": [[18, "model"]], "NormalDistribution": [[22, "normaldistribution"]], "Parameters": [[24, "parameters"], [320, "parameters"]], "Assignment": [[4, "assignment"]], "Distribution": [[13, "distribution"], [322, "distribution"]], "execute_workflow": [[292, "execute-workflow"]], "The Pharmpy command line interface": [[302, "the-pharmpy-command-line-interface"]], "pharmpy": [[302, "pharmpy"]], "pharmpy data": [[302, "pharmpy-data"]], "pharmpy data append": [[302, "pharmpy-data-append"]], "pharmpy data deidentify": [[302, "pharmpy-data-deidentify"]], "pharmpy data filter": [[302, "pharmpy-data-filter"]], "pharmpy data print": [[302, "pharmpy-data-print"]], "pharmpy data reference": [[302, "pharmpy-data-reference"]], "pharmpy data resample": [[302, "pharmpy-data-resample"]], "pharmpy data write": [[302, "pharmpy-data-write"]], "pharmpy info": [[302, "pharmpy-info"]], "pharmpy model": [[302, "pharmpy-model"]], "pharmpy model absorption_rate": [[302, "pharmpy-model-absorption-rate"]], "pharmpy model add_cov_effect": [[302, "pharmpy-model-add-cov-effect"]], "pharmpy model add_iiv": [[302, "pharmpy-model-add-iiv"]], "pharmpy model add_iov": [[302, "pharmpy-model-add-iov"]], "pharmpy model boxcox": [[302, "pharmpy-model-boxcox"]], "pharmpy model create_joint_distribution": [[302, "pharmpy-model-create-joint-distribution"]], "pharmpy model elimination_rate": [[302, "pharmpy-model-elimination-rate"]], "pharmpy model error": [[302, "pharmpy-model-error"]], "pharmpy model iiv_on_ruv": [[302, "pharmpy-model-iiv-on-ruv"]], "pharmpy model john_draper": [[302, "pharmpy-model-john-draper"]], "pharmpy model peripheral_compartments": [[302, "pharmpy-model-peripheral-compartments"]], "pharmpy model power_on_ruv": [[302, "pharmpy-model-power-on-ruv"]], "pharmpy model print": [[302, "pharmpy-model-print"]], "pharmpy model remove_iiv": [[302, "pharmpy-model-remove-iiv"]], "pharmpy model remove_iov": [[302, "pharmpy-model-remove-iov"]], "pharmpy model sample": [[302, "pharmpy-model-sample"]], "pharmpy model tdist": [[302, "pharmpy-model-tdist"]], "pharmpy model transit_compartments": [[302, "pharmpy-model-transit-compartments"]], "pharmpy model update_inits": [[302, "pharmpy-model-update-inits"]], "pharmpy results": [[302, "pharmpy-results"]], "pharmpy results bootstrap": [[302, "pharmpy-results-bootstrap"]], "pharmpy results cdd": [[302, "pharmpy-results-cdd"]], "pharmpy results frem": [[302, "pharmpy-results-frem"]], "pharmpy results linearize": [[302, "pharmpy-results-linearize"]], "pharmpy results ofv": [[302, "pharmpy-results-ofv"]], "pharmpy results print": [[302, "pharmpy-results-print"]], "pharmpy results qa": [[302, "pharmpy-results-qa"]], "pharmpy results report": [[302, "pharmpy-results-report"]], "pharmpy results ruvsearch": [[302, "pharmpy-results-ruvsearch"]], "pharmpy results scm": [[302, "pharmpy-results-scm"]], "pharmpy results simeval": [[302, "pharmpy-results-simeval"]], "pharmpy results summary": [[302, "pharmpy-results-summary"]], "pharmpy run": [[302, "pharmpy-run"]], "pharmpy run allometry": [[302, "pharmpy-run-allometry"]], "pharmpy run amd": [[302, "pharmpy-run-amd"]], "pharmpy run bootstrap": [[302, "pharmpy-run-bootstrap"]], "pharmpy run covsearch": [[302, "pharmpy-run-covsearch"]], "pharmpy run estmethod": [[302, "pharmpy-run-estmethod"]], "pharmpy run execute": [[302, "pharmpy-run-execute"]], "pharmpy run iivsearch": [[302, "pharmpy-run-iivsearch"]], "pharmpy run iovsearch": [[302, "pharmpy-run-iovsearch"]], "pharmpy run modelsearch": [[302, "pharmpy-run-modelsearch"]], "pharmpy run ruvsearch": [[302, "pharmpy-run-ruvsearch"]], "Contribute": [[305, "contribute"]], "Set up the development environment": [[305, "set-up-the-development-environment"]], "Supported platforms": [[305, "supported-platforms"]], "Install Python": [[305, "install-python"]], "Install git": [[305, "install-git"]], "Fork and clone the code repository": [[305, "fork-and-clone-the-code-repository"]], "Install tox": [[305, "install-tox"]], "Install graphviz used for building the documentation": [[305, "install-graphviz-used-for-building-the-documentation"]], "Using the development environment": [[305, "using-the-development-environment"]], "Running tox": [[305, "running-tox"]], "Check code formatting": [[305, "check-code-formatting"]], "Run the unit tests": [[305, "run-the-unit-tests"]], "Build and test the documentation": [[305, "build-and-test-the-documentation"]], "Run the integration tests": [[305, "run-the-integration-tests"]], "Build a usable virtual environment": [[305, "build-a-usable-virtual-environment"]], "Standard workflow for contributing": [[305, "standard-workflow-for-contributing"]], "Releasing Pharmpy and documentation": [[305, "releasing-pharmpy-and-documentation"]], "Version": [[305, "version"]], "Information for developers": [[305, "information-for-developers"]], "Welcome to Pharmpy": [[316, "welcome-to-pharmpy"]], "Contributors": [[306, "authors"]], "Development": [[306, "development"]], "Scientific input": [[306, "scientific-input"]], "Funding": [[306, "funding"]], "FREM": [[313, "frem"]], "The FREM postprocessing and results": [[313, "the-frem-postprocessing-and-results"]], "Covariate effects": [[313, "covariate-effects"], [330, "covariate-effects"]], "Parameter covariate coefficients": [[313, "parameter-covariate-coefficients"]], "Individual covariate effects": [[313, "individual-covariate-effects"]], "Unexplained variability": [[313, "unexplained-variability"]], "Parameter estimates": [[313, "parameter-estimates"], [321, "parameter-estimates"]], "OFV": [[313, "ofv"]], "Estimated covariate values": [[313, "estimated-covariate-values"]], "References": [[313, "references"], [299, "references"]], "COVsearch": [[307, "covsearch"]], "Effects": [[307, "effects"]], "Wildcards": [[307, "wildcards"]], "Algorithm": [[307, "algorithm"], [317, "algorithm"]], "Bootstrap": [[298, "bootstrap"]], "The Bootstrap postprocessing and results": [[298, "the-bootstrap-postprocessing-and-results"]], "Parameter statistics": [[298, "parameter-statistics"]], "OFV statistics": [[298, "ofv-statistics"]], "Covariance matrix": [[298, "covariance-matrix"], [321, "covariance-matrix"]], "Included individuals": [[298, "included-individuals"]], "default_model_database": [[290, "default-model-database"]], "Algorithms": [[315, "algorithms"], [312, "algorithms"], [323, "algorithms"]], "Brute force search for number of IIVs": [[315, "brute-force-search-for-number-of-iivs"]], "Brute force search for covariance structure": [[315, "brute-force-search-for-covariance-structure"]], "Full brute force search": [[315, "full-brute-force-search"]], "Adding IIV to the start model": [[315, "adding-iiv-to-the-start-model"]], "Comparing and ranking candidates": [[315, "comparing-and-ranking-candidates"], [317, "comparing-and-ranking-candidates"], [323, "comparing-and-ranking-candidates"]], "The IIVsearch results": [[315, "the-iivsearch-results"]], "Configuration": [[304, "configuration"]], "The configuration file": [[304, "the-configuration-file"]], "Available configurations": [[304, "available-configurations"]], "pharmpy.plugins.nonmem": [[304, "pharmpy-plugins-nonmem"]], "pharmpy.plugins.nlmixr": [[304, "pharmpy-plugins-nlmixr"]], "pharmpy.plugins.rxode": [[304, "pharmpy-plugins-rxode"]], "Environment variables": [[304, "environment-variables"]], "Design principles": [[310, "design-principles"]], "Levels of the architecture": [[310, "levels-of-the-architecture"]], "The Heart, The Model Class": [[310, "the-heart-the-model-class"]], "pharmpy.Parameters": [[310, "pharmpy-parameters"]], "pharmpy.RandomVariables": [[310, "pharmpy-randomvariables"]], "pharmpy.Statements": [[310, "pharmpy-statements"]], "The pharmpy.modeling module": [[310, "the-pharmpy-modeling-module"]], "Docstrings": [[310, "docstrings"]], "Dependencies": [[310, "dependencies"]], "Getting started": [[314, "getting-started"]], "Installation": [[314, "installation"]], "A first example": [[314, "a-first-example"]], "Citation": [[301, "citation"]], "How to cite Pharmpy and pharmr": [[301, "how-to-cite-pharmpy-and-pharmr"]], "Case deletion diagnostics": [[299, "case-deletion-diagnostics"]], "The cdd results": [[299, "the-cdd-results"]], "Case results": [[299, "case-results"]], "Cook score": [[299, "cook-score"]], "Jackknife cookscore": [[299, "jackknife-cookscore"]], "Covariance ratio": [[299, "covariance-ratio"]], "Delta OFV": [[299, "delta-ofv"]], "Skipped individuals": [[299, "skipped-individuals"]], "Case column": [[299, "case-column"]], "Distribution of new IOVs": [[317, "distribution-of-new-iovs"]], "pharmpy.modeling Package": [[295, "module-pharmpy.modeling"]], "Functions": [[295, "functions"], [296, "functions"], [294, "functions"], [297, "functions"]], "License": [[318, "license"]], "Logo": [[318, "logo"]], "Copyright": [[318, "copyright"]], "BSD 2-clause License": [[318, "bsd-2-clause-license"]], "GNU Lesser General Public License": [[318, "gnu-lesser-general-public-license"]], "Estmethod": [[312, "estmethod"]], "Exhaustive": [[312, "exhaustive"]], "Exhaustive (with update)": [[312, "exhaustive-with-update"]], "Exhaustive (only evaluation)": [[312, "exhaustive-only-evaluation"]], "Estimation methods": [[312, "estimation-methods"]], "Solvers": [[312, "solvers"]], "The Estmethod results": [[312, "the-estmethod-results"]], "pharmpy.tools Package": [[296, "module-pharmpy.tools"]], "pharmpy.model Package": [[294, "module-pharmpy.model"]], "Classes": [[294, "classes"], [297, "classes"]], "Datasets in Pharmpy": [[309, "datasets-in-pharmpy"]], "Retrieving the dataset from a model": [[309, "retrieving-the-dataset-from-a-model"]], "Update the dataset of a model": [[309, "update-the-dataset-of-a-model"]], "type": [[309, "type"]], "scale": [[309, "scale"]], "continuous": [[309, "continuous"]], "categories": [[309, "categories"]], "unit": [[309, "unit"]], "drop": [[309, "drop"]], "datatype": [[309, "datatype"]], "descriptor": [[309, "descriptor"]], "datainfo file": [[309, "datainfo-file"]], "Documentation for developers": [[311, "documentation-for-developers"]], "Pharmpy Community Code of Conduct": [[303, "pharmpy-community-code-of-conduct"]], "Crossval": [[308, "crossval"]], "The crossval results": [[308, "the-crossval-results"]], "Crossvalidation OFVs": [[308, "crossvalidation-ofvs"]], "pharmpy.workflows Package": [[297, "module-pharmpy.workflows"]], "Options for the data module": [[297, "id1"]], "Changelog": [[300, "changelog"]], "0.104.0 (2023-11-06)": [[300, "id1"]], "New features": [[300, "new-features"], [300, "id5"], [300, "id9"], [300, "id11"], [300, "id14"], [300, "id18"], [300, "id21"], [300, "id25"], [300, "id31"], [300, "id35"], [300, "id39"], [300, "id42"], [300, "id46"], [300, "id49"], [300, "id52"], [300, "id65"], [300, "id75"], [300, "id82"], [300, "id93"], [300, "id97"], [300, "id104"], [300, "id107"], [300, "id111"], [300, "id117"], [300, "id121"], [300, "id127"], [300, "id132"], [300, "id136"], [300, "id139"], [300, "id147"], [300, "id151"], [300, "id157"], [300, "id166"], [300, "id170"], [300, "id173"], [300, "id177"], [300, "id179"], [300, "id184"], [300, "id187"], [300, "id191"]], "Bugfixes": [[300, "bugfixes"], [300, "id3"], [300, "id7"], [300, "id16"], [300, "id26"], [300, "id29"], [300, "id33"], [300, "id37"], [300, "id40"], [300, "id44"], [300, "id58"], [300, "id61"], [300, "id87"], [300, "id91"], [300, "id95"], [300, "id99"], [300, "id102"], [300, "id109"], [300, "id113"], [300, "id115"], [300, "id119"], [300, "id123"], [300, "id125"], [300, "id128"], [300, "id130"], [300, "id134"], [300, "id140"], [300, "id143"], [300, "id145"], [300, "id149"], [300, "id153"], [300, "id155"], [300, "id159"], [300, "id161"], [300, "id164"], [300, "id168"], [300, "id171"], [300, "id175"], [300, "id182"], [300, "id189"], [300, "id193"]], "0.103.0 (2023-10-12)": [[300, "id2"]], "Changes": [[300, "changes"], [300, "id6"], [300, "id12"], [300, "id15"], [300, "id19"], [300, "id22"], [300, "id24"], [300, "id28"], [300, "id32"], [300, "id36"], [300, "id43"], [300, "id47"], [300, "id50"], [300, "id53"], [300, "id55"], [300, "id57"], [300, "id60"], [300, "id63"], [300, "id66"], [300, "id68"], [300, "id71"], [300, "id76"], [300, "id79"], [300, "id83"], [300, "id86"], [300, "id89"], [300, "id94"], [300, "id98"], [300, "id101"], [300, "id105"], [300, "id108"], [300, "id112"], [300, "id118"], [300, "id122"], [300, "id133"], [300, "id137"], [300, "id142"], [300, "id148"], [300, "id158"], [300, "id163"], [300, "id167"], [300, "id174"], [300, "id180"], [300, "id185"], [300, "id188"], [300, "id192"]], "0.102.0 (2023-09-28)": [[300, "id4"]], "0.101.0 (2023-09-01)": [[300, "id8"]], "0.100.0 (2023-08-25)": [[300, "id10"]], "0.99.0 (2023-08-23)": [[300, "id13"]], "0.98.0 (2023-07-21)": [[300, "id17"]], "0.97.0 (2023-06-28)": [[300, "id20"]], "0.96.0 (2023-05-26)": [[300, "id23"]], "0.95.0 (2023-05-22)": [[300, "id27"]], "0.94.0 (2023-04-26)": [[300, "id30"]], "0.93.0 (2023-04-19)": [[300, "id34"]], "0.92.0 (2023-04-05)": [[300, "id38"]], "0.91.0 (2023-03-03)": [[300, "id41"]], "0.90.0 (2023-02-24)": [[300, "id45"]], "0.89.0 (2023-01-26)": [[300, "id48"]], "0.88.0 (2022-12-21)": [[300, "id51"]], "0.87.0 (2022-12-14)": [[300, "id54"]], "0.86.0 (2022-11-30)": [[300, "id56"]], "0.85.0 (2022-11-18)": [[300, "id59"]], "0.84.1 (2022-11-13)": [[300, "id62"]], "Bug fixes": [[300, "bug-fixes"], [300, "id69"], [300, "id73"], [300, "id77"], [300, "id80"], [300, "id84"]], "0.84.0 (2022-11-09)": [[300, "id64"]], "0.83.0 (2022-11-01)": [[300, "id67"]], "0.82.0 (2022-10-24)": [[300, "id70"]], "0.81.1 (2022-10-24)": [[300, "id72"]], "0.81.0 (2022-10-21)": [[300, "id74"]], "0.80.0 (2022-10-19)": [[300, "id78"]], "0.79.0 (2022-10-16)": [[300, "id81"]], "0.78.0 (2022-09-20)": [[300, "id85"]], "0.77.0 (2022-09-08)": [[300, "id88"]], "0.76.1 (2022-09-06)": [[300, "id90"]], "0.76.0 (2022-09-05)": [[300, "id92"]], "0.75.0 (2022-08-10)": [[300, "id96"]], "0.74.0 (2022-07-18)": [[300, "id100"]], "0.73.0 (2022-06-21)": [[300, "id103"]], "0.72.0 (2022-06-08)": [[300, "id106"]], "0.71.0 (2022-05-24)": [[300, "id110"]], "0.70.1 (2022-05-17)": [[300, "id114"]], "0.70.0 (2022-05-13)": [[300, "id116"]], "0.69.0 (2022-04-29)": [[300, "id120"]], "0.68.0 (2022-04-27)": [[300, "id124"]], "0.67.0 (2022-04-25)": [[300, "id126"]], "0.66.0 (2022-04-20)": [[300, "id129"]], "0.65.0 (2022-04-14)": [[300, "id131"]], "0.64.0 (2022-04-12)": [[300, "id135"]], "0.63.0 (2022-04-07)": [[300, "id138"]], "0.62.0 (2022-04-04)": [[300, "id141"]], "New feature": [[300, "new-feature"]], "0.61.1 (2022-03-31)": [[300, "id144"]], "0.61.0 (2022-03-29)": [[300, "id146"]], "0.59.0 (2022-03-25)": [[300, "id150"]], "0.58.4 (2022-03-24)": [[300, "id152"]], "0.58.1 (2022-03-22)": [[300, "id154"]], "0.58.0 (2022-03-22)": [[300, "id156"]], "0.57.0 (2022-03-21)": [[300, "id160"]], "0.56.0 (2022-03-17)": [[300, "id162"]], "0.55.0 (2022-03-16)": [[300, "id165"]], "0.54.0 (2022-03-08)": [[300, "id169"]], "0.53.0 (2022-03-04)": [[300, "id172"]], "0.52.0 (2022-02-25)": [[300, "id176"]], "0.51.0 (2022-02-24)": [[300, "id178"]], "0.50.1 (2022-02-16)": [[300, "id181"]], "0.50.0 (2022-02-16)": [[300, "id183"]], "0.49.0 (2022-02-10)": [[300, "id186"]], "0.48.0 (2022-02-04)": [[300, "id190"]], "0.47.0 (2022-01-28)": [[300, "id194"]], "0.46.0 (2022-01-27)": [[300, "id195"]], "0.45.0 (2022-01-21)": [[300, "id196"]], "0.44.0 (2022-01-20)": [[300, "id197"]], "0.43.0 (2022-01-12)": [[300, "id198"]], "0.42.0 (2022-01-11)": [[300, "id199"]], "0.41.0 (2021-12-21)": [[300, "id200"]], "0.40.0 (2021-12-16)": [[300, "id201"]], "0.39.0 (2021-12-15)": [[300, "id202"]], "0.38.0 (2021-12-08)": [[300, "id203"]], "0.37.1 (2021-11-26)": [[300, "id204"]], "0.37.0 (2021-11-24)": [[300, "id205"]], "0.36.0 (2021-11-11)": [[300, "id206"]], "0.35.0 (2021-11-02)": [[300, "id207"]], "0.34.3 (2021-10-28)": [[300, "id208"]], "0.34.2 (2021-10-26)": [[300, "id209"]], "0.34.1 (2021-10-20)": [[300, "id210"]], "0.34.0 (2021-10-14)": [[300, "id211"]], "0.33.0 (2021-10-11)": [[300, "id212"]], "0.32.0 (2021-09-28)": [[300, "id213"]], "0.31.0 (2021-09-21)": [[300, "id214"]], "0.30.0 (2021-09-06)": [[300, "id215"]], "0.29.0 (2021-08-25)": [[300, "id216"]], "0.28.0 (2021-08-24)": [[300, "id217"]], "0.27.0 (2021-08-09)": [[300, "id218"]], "0.26.1 (2021-08-04)": [[300, "id219"]], "0.26.0 (2021-07-13)": [[300, "id220"]], "0.25.1 (2021-07-08)": [[300, "id221"]], "0.25.0 (2021-06-24)": [[300, "id222"]], "0.24.0 (2021-05-25)": [[300, "id223"]], "0.23.4 (2021-05-03)": [[300, "id224"]], "0.23.3 (2021-04-29)": [[300, "id225"]], "0.23.2 (2021-04-28)": [[300, "id226"]], "0.23.1 (2021-04-28)": [[300, "id227"]], "0.23.0 (2021-04-28)": [[300, "id228"]], "0.22.0 (2021-03-29)": [[300, "id229"]], "0.21.0 (2021-03-22)": [[300, "id230"]], "0.20.1 (2021-03-11)": [[300, "id231"]], "0.20.0 (2021-03-11)": [[300, "id232"]], "0.19.0 (2021-03-02)": [[300, "id233"]], "0.18.0 (2021-03-01)": [[300, "id234"]], "0.17.0 (2021-02-15)": [[300, "id235"]], "0.16.0 (2021-02-08)": [[300, "id236"]], "0.15.0 (2021-02-01)": [[300, "id237"]], "0.14.0 (2021-01-25)": [[300, "id238"]], "0.13.0 (2021-01-18)": [[300, "id239"]], "0.12.0 (2020-12-18)": [[300, "id240"]], "0.11.0 (2020-11-20)": [[300, "id241"]], "0.10.0 (2020-11-16)": [[300, "id242"]], "0.9.0 (2020-10-26)": [[300, "id243"]], "0.8.0 (2020-10-08)": [[300, "id244"]], "0.7.0 (2020-09-28)": [[300, "id245"]], "0.6.0 (2020-09-18)": [[300, "id246"]], "0.5.0 (2020-09-04)": [[300, "id247"]], "0.4.0 (2020-07-24)": [[300, "id248"]], "0.3.0 (2020-06-16)": [[300, "id249"]], "0.2.0 (2020-03-27)": [[300, "id250"]], "0.1.0 (2018-07-22)": [[300, "id251"]], "split_common_options": [[293, "split-common-options"]], "default_tool_database": [[291, "default-tool-database"]], "User guide": [[336, "user-guide"]], "Tools": [[335, "tools"]], "Tools in Pharmpy": [[335, "tools-in-pharmpy"]], "Common options": [[335, "common-options"]], "Common features": [[335, "common-features"]], "Tool database": [[335, "tool-database"]], "Running directory": [[335, "running-directory"]], "Metadata": [[335, "metadata"]], "Datasets": [[335, "datasets"]], "Model feature language (MFL)": [[335, "model-feature-language-mfl"]], "Option types": [[335, "option-types"]], "Model features": [[335, "model-features"]], "Symbols": [[335, "symbols"]], "Describe intervals": [[335, "describe-intervals"]], "Redundant descriptions": [[335, "redundant-descriptions"]], "Examples": [[335, "examples"], [335, "id3"]], "Strictness": [[335, "strictness"]], "The model types": [[334, "the-model-types"]], "PKPD models": [[334, "pkpd-models"]], "Drug metabolite": [[334, "drug-metabolite"]], "TMDD models": [[334, "tmdd-models"]], "The search space": [[334, "the-search-space"], [323, "the-search-space"]], "PKPD": [[334, "pkpd"]], "The Structsearch results": [[334, "the-structsearch-results"]], "Common behaviours between algorithms": [[323, "common-behaviours-between-algorithms"]], "Feature combination exclusions": [[323, "feature-combination-exclusions"]], "Exhaustive search": [[323, "exhaustive-search"]], "Exhaustive stepwise search": [[323, "exhaustive-stepwise-search"]], "Reduced stepwise search": [[323, "reduced-stepwise-search"]], "Adding IIV to the candidate models during search": [[323, "adding-iiv-to-the-candidate-models-during-search"]], "The Modelsearch results": [[323, "the-modelsearch-results"]], "PsN with Pharmpy": [[329, "psn-with-pharmpy"]], "Tools connected to PsN": [[329, "tools-connected-to-psn"]], "Plots in Pharmpy": [[325, "plots-in-pharmpy"]], "Setting themes": [[325, "setting-themes"]], "Changing axis of plots": [[325, "changing-axis-of-plots"]], "QA": [[330, "qa"]], "The qa results": [[330, "the-qa-results"]], "Overview": [[330, "overview"]], "Structural bias": [[330, "structural-bias"]], "Fullblock": [[330, "fullblock"]], "Boxcox": [[330, "boxcox"]], "Tdist": [[330, "tdist"]], "Residual error": [[330, "residual-error"]], "ruvsearch": [[331, "ruvsearch"]], "Models": [[331, "models"]], "The RUVsearch results": [[331, "the-ruvsearch-results"]], "Pharmpy in R": [[337, "pharmpy-in-r"]], "Installing pharmr": [[337, "installing-pharmr"]], "Trouble shooting": [[337, "trouble-shooting"]], "Wrong Python version when using conda": [[337, "wrong-python-version-when-using-conda"]], "Error importing Pharmpy": [[337, "error-importing-pharmpy"]], "Mismatch of versions between Pharmpy and pharmr": [[337, "mismatch-of-versions-between-pharmpy-and-pharmr"]], "Using pharmr": [[337, "using-pharmr"]], "Gotchas": [[337, "gotchas"]], "List indices": [[337, "list-indices"]], "Model estimation and results": [[321, "model-estimation-and-results"]], "Fitting a model": [[321, "fitting-a-model"]], "Modelfit results": [[321, "modelfit-results"]], "Final OFV": [[321, "final-ofv"]], "Standard errors of parameter estimates": [[321, "standard-errors-of-parameter-estimates"]], "Relative standard errors of parameter estimates": [[321, "relative-standard-errors-of-parameter-estimates"]], "Correlation Matrix": [[321, "correlation-matrix"]], "Precision Matrix": [[321, "precision-matrix"]], "Indiviudal OFV": [[321, "indiviudal-ofv"]], "Predictions": [[321, "predictions"]], "Residuals": [[321, "residuals"]], "Individual estimates": [[321, "individual-estimates"]], "Modeling": [[322, "modeling"]], "Basic functions": [[322, "basic-functions"]], "Reading and writing models": [[322, "reading-and-writing-models"]], "Loading example models": [[322, "loading-example-models"]], "Converting models": [[322, "converting-models"]], "Create basic models": [[322, "create-basic-models"]], "Modeling transformations": [[322, "modeling-transformations"]], "Structural model": [[322, "structural-model"]], "Absorption rate": [[322, "absorption-rate"]], "Absorption delay": [[322, "absorption-delay"]], "Elimination": [[322, "elimination"]], "Parameter variability model": [[322, "parameter-variability-model"]], "Adding and removing parameter variability": [[322, "adding-and-removing-parameter-variability"]], "Adding and removing covariance": [[322, "adding-and-removing-covariance"]], "Eta transformations": [[322, "eta-transformations"]], "Covariates and allometry": [[322, "covariates-and-allometry"]], "Population parameters": [[322, "population-parameters"]], "Error model": [[322, "error-model"]], "BLQ transformations": [[322, "blq-transformations"]], "Estimation steps": [[322, "estimation-steps"], [320, "estimation-steps"]], "Examining and modifying dataset": [[322, "examining-and-modifying-dataset"]], "Subjects": [[322, "subjects"]], "Observations": [[322, "observations"]], "Dosing": [[322, "dosing"]], "Extract dosing information": [[322, "extract-dosing-information"]], "Dose grouping": [[322, "dose-grouping"]], "Time after dose": [[322, "time-after-dose"]], "Concentration parameters": [[322, "concentration-parameters"]], "Project suggestions": [[327, "project-suggestions"]], "Plugins": [[326, "plugins"]], "Overview of a plugin": [[326, "overview-of-a-plugin"]], "Simeval": [[333, "simeval"]], "The simeval results": [[333, "the-simeval-results"]], "Sampled Individual OFVs": [[333, "sampled-individual-ofvs"]], "Individual OFV summary": [[333, "individual-ofv-summary"]], "Individual prediction plot": [[333, "individual-prediction-plot"]], "scm": [[332, "scm"]], "The scm results": [[332, "the-scm-results"]], "Steps": [[332, "steps"]], "OFV Summary": [[332, "ofv-summary"]], "Candidate Summary": [[332, "candidate-summary"]], "Resmod": [[328, "resmod"]], "The resmod results": [[328, "the-resmod-results"]], "Resmod models": [[328, "resmod-models"]], "The Pharmpy model": [[320, "the-pharmpy-model"]], "Reading in a model": [[320, "reading-in-a-model"], [324, "reading-in-a-model"]], "Writing a model": [[320, "writing-a-model"], [324, "writing-a-model"]], "Inspecting the model attributes": [[320, "inspecting-the-model-attributes"]], "Name and description": [[320, "name-and-description"]], "Random variables": [[320, "random-variables"]], "Dataset and datainfo": [[320, "dataset-and-datainfo"]], "Dependent variables": [[320, "dependent-variables"]], "Low level manipulations of the model object": [[320, "low-level-manipulations-of-the-model-object"]], "Creating and adding parameters": [[320, "creating-and-adding-parameters"]], "Substituting symbolic random variable distribution with numeric": [[320, "substituting-symbolic-random-variable-distribution-with-numeric"]], "Using the NONMEM plugin": [[324, "using-the-nonmem-plugin"]], "Names of parameters and random variables": [[324, "names-of-parameters-and-random-variables"]], "New parameters and random variables": [[324, "new-parameters-and-random-variables"]], "Linearize": [[319, "linearize"]], "The linearize results": [[319, "the-linearize-results"]], "OFVs": [[319, "ofvs"]], "Individual OFVs": [[319, "individual-ofvs"]]}, "indexentries": {"assignment (class in pharmpy.model)": [[4, "pharmpy.model.Assignment"]], "create() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.create"]], "expression (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.expression"]], "free_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.free_symbols"]], "from_dict() (pharmpy.model.assignment class method)": [[4, "pharmpy.model.Assignment.from_dict"]], "replace() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.replace"]], "rhs_symbols (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.rhs_symbols"]], "subs() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.subs"]], "symbol (pharmpy.model.assignment attribute)": [[4, "pharmpy.model.Assignment.symbol"]], "to_dict() (pharmpy.model.assignment method)": [[4, "pharmpy.model.Assignment.to_dict"]], "bolus (class in pharmpy.model)": [[5, "pharmpy.model.Bolus"]], "amount (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.amount"]], "create() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.create"]], "free_symbols (pharmpy.model.bolus attribute)": [[5, "pharmpy.model.Bolus.free_symbols"]], "from_dict() (pharmpy.model.bolus class method)": [[5, "pharmpy.model.Bolus.from_dict"]], "replace() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.replace"]], "subs() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.subs"]], "to_dict() (pharmpy.model.bolus method)": [[5, "pharmpy.model.Bolus.to_dict"]], "columninfo (class in pharmpy.model)": [[6, "pharmpy.model.ColumnInfo"]], "categories (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.categories"]], "continuous (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.continuous"]], "convert_datatype_to_pd_dtype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_datatype_to_pd_dtype"]], "convert_pd_dtype_to_datatype() (pharmpy.model.columninfo static method)": [[6, "pharmpy.model.ColumnInfo.convert_pd_dtype_to_datatype"]], "create() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.create"]], "datatype (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.datatype"]], "descriptor (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.descriptor"]], "drop (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.drop"]], "from_dict() (pharmpy.model.columninfo class method)": [[6, "pharmpy.model.ColumnInfo.from_dict"]], "get_all_categories() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.get_all_categories"]], "is_categorical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_categorical"]], "is_integer() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_integer"]], "is_numerical() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.is_numerical"]], "name (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.name"]], "replace() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.replace"]], "scale (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.scale"]], "to_dict() (pharmpy.model.columninfo method)": [[6, "pharmpy.model.ColumnInfo.to_dict"]], "type (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.type"]], "unit (pharmpy.model.columninfo attribute)": [[6, "pharmpy.model.ColumnInfo.unit"]], "compartment (class in pharmpy.model)": [[7, "pharmpy.model.Compartment"]], "amount (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.amount"]], "bioavailability (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.bioavailability"]], "create() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.create"]], "doses (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.doses"]], "free_symbols (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.free_symbols"]], "from_dict() (pharmpy.model.compartment class method)": [[7, "pharmpy.model.Compartment.from_dict"]], "input (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.input"]], "lag_time (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.lag_time"]], "name (pharmpy.model.compartment attribute)": [[7, "pharmpy.model.Compartment.name"]], "replace() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.replace"]], "sorted_doses() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.sorted_doses"]], "subs() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.subs"]], "to_dict() (pharmpy.model.compartment method)": [[7, "pharmpy.model.Compartment.to_dict"]], "compartmentalsystem (class in pharmpy.model)": [[8, "pharmpy.model.CompartmentalSystem"]], "amounts (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.amounts"]], "atoms() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.atoms"]], "central_compartment (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.central_compartment"]], "compartment_names (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartment_names"]], "compartmental_matrix (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.compartmental_matrix"]], "create() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.create"]], "dosing_compartments (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.dosing_compartments"]], "eqs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.eqs"]], "find_compartment() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_compartment"]], "find_depot() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_depot"]], "find_peripheral_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_peripheral_compartments"]], "find_transit_compartments() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.find_transit_compartments"]], "free_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.free_symbols"]], "from_dict() (pharmpy.model.compartmentalsystem class method)": [[8, "pharmpy.model.CompartmentalSystem.from_dict"]], "get_bidirectionals() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_bidirectionals"]], "get_compartment_inflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_inflows"]], "get_compartment_outflows() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_compartment_outflows"]], "get_flow() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_flow"]], "get_n_connected() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.get_n_connected"]], "replace() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.replace"]], "rhs_symbols (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.rhs_symbols"]], "subs() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.subs"]], "t (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.t"]], "to_dict() (pharmpy.model.compartmentalsystem method)": [[8, "pharmpy.model.CompartmentalSystem.to_dict"]], "zero_order_inputs (pharmpy.model.compartmentalsystem attribute)": [[8, "pharmpy.model.CompartmentalSystem.zero_order_inputs"]], "compartmentalsystembuilder (class in pharmpy.model)": [[9, "pharmpy.model.CompartmentalSystemBuilder"]], "add_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_compartment"]], "add_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.add_flow"]], "find_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.find_compartment"]], "move_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.move_dose"]], "remove_compartment() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_compartment"]], "remove_flow() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.remove_flow"]], "set_bioavailability() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_bioavailability"]], "set_dose() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_dose"]], "set_input() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_input"]], "set_lag_time() (pharmpy.model.compartmentalsystembuilder method)": [[9, "pharmpy.model.CompartmentalSystemBuilder.set_lag_time"]], "datainfo (class in pharmpy.model)": [[10, "pharmpy.model.DataInfo"]], "create() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.create"]], "descriptorix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.descriptorix"]], "dv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.dv_column"]], "from_dict() (pharmpy.model.datainfo class method)": [[10, "pharmpy.model.DataInfo.from_dict"]], "from_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.from_json"]], "get_dtype_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.get_dtype_dict"]], "id_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.id_column"]], "idv_column (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.idv_column"]], "names (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.names"]], "path (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.path"]], "read_json() (pharmpy.model.datainfo static method)": [[10, "pharmpy.model.DataInfo.read_json"]], "replace() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.replace"]], "separator (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.separator"]], "set_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_column"]], "set_dv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_dv_column"]], "set_id_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_id_column"]], "set_idv_column() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_idv_column"]], "set_types() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.set_types"]], "to_dict() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_dict"]], "to_json() (pharmpy.model.datainfo method)": [[10, "pharmpy.model.DataInfo.to_json"]], "typeix (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.typeix"]], "types (pharmpy.model.datainfo attribute)": [[10, "pharmpy.model.DataInfo.types"]], "dataseterror": [[11, "pharmpy.model.DatasetError"]], "datasetwarning": [[12, "pharmpy.model.DatasetWarning"]], "distribution (class in pharmpy.model)": [[13, "pharmpy.model.Distribution"]], "evalf() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.evalf"]], "free_symbols (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.free_symbols"]], "get_covariance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_covariance"]], "get_variance() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.get_variance"]], "latex_string() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.latex_string"]], "level (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.level"]], "mean (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.mean"]], "names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.names"]], "parameter_names (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.parameter_names"]], "replace() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.replace"]], "subs() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.subs"]], "to_dict() (pharmpy.model.distribution method)": [[13, "pharmpy.model.Distribution.to_dict"]], "variance (pharmpy.model.distribution attribute)": [[13, "pharmpy.model.Distribution.variance"]], "estimationstep (class in pharmpy.model)": [[14, "pharmpy.model.EstimationStep"]], "auto (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.auto"]], "create() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.create"]], "epsilon_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.epsilon_derivatives"]], "eta_derivatives (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.eta_derivatives"]], "evaluation (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.evaluation"]], "from_dict() (pharmpy.model.estimationstep class method)": [[14, "pharmpy.model.EstimationStep.from_dict"]], "interaction (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.interaction"]], "isample (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.isample"]], "keep_every_nth_iter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.keep_every_nth_iter"]], "laplace (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.laplace"]], "maximum_evaluations (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.maximum_evaluations"]], "method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.method"]], "niter (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.niter"]], "parameter_uncertainty_method (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.parameter_uncertainty_method"]], "predictions (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.predictions"]], "replace() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.replace"]], "residuals (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.residuals"]], "supported_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_methods"]], "supported_parameter_uncertainty_methods (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.supported_parameter_uncertainty_methods"]], "to_dict() (pharmpy.model.estimationstep method)": [[14, "pharmpy.model.EstimationStep.to_dict"]], "tool_options (pharmpy.model.estimationstep attribute)": [[14, "pharmpy.model.EstimationStep.tool_options"]], "estimationsteps (class in pharmpy.model)": [[15, "pharmpy.model.EstimationSteps"]], "create() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.create"]], "from_dict() (pharmpy.model.estimationsteps class method)": [[15, "pharmpy.model.EstimationSteps.from_dict"]], "replace() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.replace"]], "to_dataframe() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dataframe"]], "to_dict() (pharmpy.model.estimationsteps method)": [[15, "pharmpy.model.EstimationSteps.to_dict"]], "infusion (class in pharmpy.model)": [[16, "pharmpy.model.Infusion"]], "amount (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.amount"]], "create() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.create"]], "duration (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.duration"]], "free_symbols (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.free_symbols"]], "from_dict() (pharmpy.model.infusion class method)": [[16, "pharmpy.model.Infusion.from_dict"]], "rate (pharmpy.model.infusion attribute)": [[16, "pharmpy.model.Infusion.rate"]], "replace() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.replace"]], "subs() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.subs"]], "to_dict() (pharmpy.model.infusion method)": [[16, "pharmpy.model.Infusion.to_dict"]], "jointnormaldistribution (class in pharmpy.model)": [[17, "pharmpy.model.JointNormalDistribution"]], "create() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.create"]], "evalf() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.evalf"]], "free_symbols (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.jointnormaldistribution class method)": [[17, "pharmpy.model.JointNormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.get_variance"]], "latex_string() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.latex_string"]], "level (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.level"]], "mean (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.mean"]], "names (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.names"]], "replace() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.replace"]], "subs() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.subs"]], "to_dict() (pharmpy.model.jointnormaldistribution method)": [[17, "pharmpy.model.JointNormalDistribution.to_dict"]], "variance (pharmpy.model.jointnormaldistribution attribute)": [[17, "pharmpy.model.JointNormalDistribution.variance"]], "model (class in pharmpy.model)": [[18, "pharmpy.model.Model"]], "create() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.create"]], "datainfo (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.datainfo"]], "dataset (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dataset"]], "dependent_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.dependent_variables"]], "description (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.description"]], "estimation_steps (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.estimation_steps"]], "filename_extension (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.filename_extension"]], "from_dict() (pharmpy.model.model class method)": [[18, "pharmpy.model.Model.from_dict"]], "has_same_dataset_as() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.has_same_dataset_as"]], "initial_individual_estimates (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.initial_individual_estimates"]], "internals (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.internals"]], "model_code (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.model_code"]], "modelfit_results (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.modelfit_results"]], "name (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.name"]], "observation_transformation (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.observation_transformation"]], "parameters (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parameters"]], "parent_model (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.parent_model"]], "parse_model() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model"]], "parse_model_from_string() (pharmpy.model.model static method)": [[18, "pharmpy.model.Model.parse_model_from_string"]], "random_variables (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.random_variables"]], "replace() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.replace"]], "statements (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.statements"]], "to_dict() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.to_dict"]], "update_source() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.update_source"]], "value_type (pharmpy.model.model attribute)": [[18, "pharmpy.model.Model.value_type"]], "write_files() (pharmpy.model.model method)": [[18, "pharmpy.model.Model.write_files"]], "modelerror": [[19, "pharmpy.model.ModelError"]], "modelsyntaxerror": [[20, "pharmpy.model.ModelSyntaxError"]], "modelfitresultserror": [[21, "pharmpy.model.ModelfitResultsError"]], "normaldistribution (class in pharmpy.model)": [[22, "pharmpy.model.NormalDistribution"]], "create() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.create"]], "evalf() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.evalf"]], "free_symbols (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.free_symbols"]], "from_dict() (pharmpy.model.normaldistribution class method)": [[22, "pharmpy.model.NormalDistribution.from_dict"]], "get_covariance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_covariance"]], "get_variance() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.get_variance"]], "latex_string() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.latex_string"]], "level (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.level"]], "mean (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.mean"]], "names (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.names"]], "replace() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.replace"]], "subs() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.subs"]], "to_dict() (pharmpy.model.normaldistribution method)": [[22, "pharmpy.model.NormalDistribution.to_dict"]], "variance (pharmpy.model.normaldistribution attribute)": [[22, "pharmpy.model.NormalDistribution.variance"]], "parameter (class in pharmpy.model)": [[23, "pharmpy.model.Parameter"]], "create() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.create"]], "fix (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.fix"]], "from_dict() (pharmpy.model.parameter class method)": [[23, "pharmpy.model.Parameter.from_dict"]], "init (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.init"]], "lower (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.lower"]], "name (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.name"]], "replace() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.replace"]], "symbol (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.symbol"]], "to_dict() (pharmpy.model.parameter method)": [[23, "pharmpy.model.Parameter.to_dict"]], "upper (pharmpy.model.parameter attribute)": [[23, "pharmpy.model.Parameter.upper"]], "parameters (class in pharmpy.model)": [[24, "pharmpy.model.Parameters"]], "create() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.create"]], "fix (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fix"]], "fixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.fixed"]], "from_dict() (pharmpy.model.parameters class method)": [[24, "pharmpy.model.Parameters.from_dict"]], "inits (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.inits"]], "lower (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.lower"]], "names (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.names"]], "nonfixed (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.nonfixed"]], "replace() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.replace"]], "set_fix() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_fix"]], "set_initial_estimates() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.set_initial_estimates"]], "symbols (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.symbols"]], "to_dataframe() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dataframe"]], "to_dict() (pharmpy.model.parameters method)": [[24, "pharmpy.model.Parameters.to_dict"]], "upper (pharmpy.model.parameters attribute)": [[24, "pharmpy.model.Parameters.upper"]], "randomvariables (class in pharmpy.model)": [[25, "pharmpy.model.RandomVariables"]], "covariance_matrix (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.covariance_matrix"]], "create() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.create"]], "epsilon_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilon_levels"]], "epsilons (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.epsilons"]], "eta_levels (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.eta_levels"]], "etas (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.etas"]], "free_symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.free_symbols"]], "from_dict() (pharmpy.model.randomvariables class method)": [[25, "pharmpy.model.RandomVariables.from_dict"]], "get_covariance() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_covariance"]], "get_rvs_with_same_dist() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.get_rvs_with_same_dist"]], "iiv (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iiv"]], "iov (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.iov"]], "join() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.join"]], "names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.names"]], "nearest_valid_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.nearest_valid_parameters"]], "nrvs (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.nrvs"]], "parameter_names (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.parameter_names"]], "parameters_sdcorr() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.parameters_sdcorr"]], "replace() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace"]], "replace_with_sympy_rvs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.replace_with_sympy_rvs"]], "sample() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.sample"]], "subs() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.subs"]], "symbols (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.symbols"]], "to_dict() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.to_dict"]], "unjoin() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.unjoin"]], "validate_parameters() (pharmpy.model.randomvariables method)": [[25, "pharmpy.model.RandomVariables.validate_parameters"]], "variance_parameters (pharmpy.model.randomvariables attribute)": [[25, "pharmpy.model.RandomVariables.variance_parameters"]], "simulationstep (class in pharmpy.model)": [[26, "pharmpy.model.SimulationStep"]], "create() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.create"]], "from_dict() (pharmpy.model.simulationstep class method)": [[26, "pharmpy.model.SimulationStep.from_dict"]], "n (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.n"]], "replace() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.replace"]], "seed (pharmpy.model.simulationstep attribute)": [[26, "pharmpy.model.SimulationStep.seed"]], "to_dict() (pharmpy.model.simulationstep method)": [[26, "pharmpy.model.SimulationStep.to_dict"]], "statement (class in pharmpy.model)": [[27, "pharmpy.model.Statement"]], "free_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.free_symbols"]], "rhs_symbols (pharmpy.model.statement attribute)": [[27, "pharmpy.model.Statement.rhs_symbols"]], "subs() (pharmpy.model.statement method)": [[27, "pharmpy.model.Statement.subs"]], "statements (class in pharmpy.model)": [[28, "pharmpy.model.Statements"]], "after_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.after_odes"]], "before_odes (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.before_odes"]], "dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.dependencies"]], "direct_dependencies() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.direct_dependencies"]], "error (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.error"]], "find_assignment() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment"]], "find_assignment_index() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.find_assignment_index"]], "free_symbols (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.free_symbols"]], "from_dict() (pharmpy.model.statements class method)": [[28, "pharmpy.model.Statements.from_dict"]], "full_expression() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.full_expression"]], "ode_system (pharmpy.model.statements attribute)": [[28, "pharmpy.model.Statements.ode_system"]], "reassign() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.reassign"]], "remove_symbol_definitions() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.remove_symbol_definitions"]], "subs() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.subs"]], "to_dict() (pharmpy.model.statements method)": [[28, "pharmpy.model.Statements.to_dict"]], "variabilityhierarchy (class in pharmpy.model)": [[29, "pharmpy.model.VariabilityHierarchy"]], "create() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.create"]], "from_dict() (pharmpy.model.variabilityhierarchy class method)": [[29, "pharmpy.model.VariabilityHierarchy.from_dict"]], "levels (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.levels"]], "names (pharmpy.model.variabilityhierarchy attribute)": [[29, "pharmpy.model.VariabilityHierarchy.names"]], "replace() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.replace"]], "to_dict() (pharmpy.model.variabilityhierarchy method)": [[29, "pharmpy.model.VariabilityHierarchy.to_dict"]], "variabilitylevel (class in pharmpy.model)": [[30, "pharmpy.model.VariabilityLevel"]], "create() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.create"]], "from_dict() (pharmpy.model.variabilitylevel class method)": [[30, "pharmpy.model.VariabilityLevel.from_dict"]], "group (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.group"]], "name (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.name"]], "reference (pharmpy.model.variabilitylevel attribute)": [[30, "pharmpy.model.VariabilityLevel.reference"]], "replace() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.replace"]], "to_dict() (pharmpy.model.variabilitylevel method)": [[30, "pharmpy.model.VariabilityLevel.to_dict"]], "to_compartmental_system() (in module pharmpy.model)": [[31, "pharmpy.model.to_compartmental_system"]], "add_admid() (in module pharmpy.modeling)": [[32, "pharmpy.modeling.add_admid"]], "add_allometry() (in module pharmpy.modeling)": [[33, "pharmpy.modeling.add_allometry"]], "add_bioavailability() (in module pharmpy.modeling)": [[34, "pharmpy.modeling.add_bioavailability"]], "add_cmt() (in module pharmpy.modeling)": [[35, "pharmpy.modeling.add_cmt"]], "add_covariate_effect() (in module pharmpy.modeling)": [[36, "pharmpy.modeling.add_covariate_effect"]], "add_effect_compartment() (in module pharmpy.modeling)": [[37, "pharmpy.modeling.add_effect_compartment"]], "add_estimation_step() (in module pharmpy.modeling)": [[38, "pharmpy.modeling.add_estimation_step"]], "add_iiv() (in module pharmpy.modeling)": [[39, "pharmpy.modeling.add_iiv"]], "add_indirect_effect() (in module pharmpy.modeling)": [[40, "pharmpy.modeling.add_indirect_effect"]], "add_individual_parameter() (in module pharmpy.modeling)": [[41, "pharmpy.modeling.add_individual_parameter"]], "add_iov() (in module pharmpy.modeling)": [[42, "pharmpy.modeling.add_iov"]], "add_lag_time() (in module pharmpy.modeling)": [[43, "pharmpy.modeling.add_lag_time"]], "add_metabolite() (in module pharmpy.modeling)": [[44, "pharmpy.modeling.add_metabolite"]], "add_parameter_uncertainty_step() (in module pharmpy.modeling)": [[45, "pharmpy.modeling.add_parameter_uncertainty_step"]], "add_pd_iiv() (in module pharmpy.modeling)": [[46, "pharmpy.modeling.add_pd_iiv"]], "add_peripheral_compartment() (in module pharmpy.modeling)": [[47, "pharmpy.modeling.add_peripheral_compartment"]], "add_pk_iiv() (in module pharmpy.modeling)": [[48, "pharmpy.modeling.add_pk_iiv"]], "add_population_parameter() (in module pharmpy.modeling)": [[49, "pharmpy.modeling.add_population_parameter"]], "add_time_after_dose() (in module pharmpy.modeling)": [[50, "pharmpy.modeling.add_time_after_dose"]], "append_estimation_step_options() (in module pharmpy.modeling)": [[51, "pharmpy.modeling.append_estimation_step_options"]], "bump_model_number() (in module pharmpy.modeling)": [[52, "pharmpy.modeling.bump_model_number"]], "calculate_aic() (in module pharmpy.modeling)": [[53, "pharmpy.modeling.calculate_aic"]], "calculate_bic() (in module pharmpy.modeling)": [[54, "pharmpy.modeling.calculate_bic"]], "calculate_corr_from_cov() (in module pharmpy.modeling)": [[55, "pharmpy.modeling.calculate_corr_from_cov"]], "calculate_corr_from_prec() (in module pharmpy.modeling)": [[56, "pharmpy.modeling.calculate_corr_from_prec"]], "calculate_cov_from_corrse() (in module pharmpy.modeling)": [[57, "pharmpy.modeling.calculate_cov_from_corrse"]], "calculate_cov_from_prec() (in module pharmpy.modeling)": [[58, "pharmpy.modeling.calculate_cov_from_prec"]], "calculate_epsilon_gradient_expression() (in module pharmpy.modeling)": [[59, "pharmpy.modeling.calculate_epsilon_gradient_expression"]], "calculate_eta_gradient_expression() (in module pharmpy.modeling)": [[60, "pharmpy.modeling.calculate_eta_gradient_expression"]], "calculate_eta_shrinkage() (in module pharmpy.modeling)": [[61, "pharmpy.modeling.calculate_eta_shrinkage"]], "calculate_individual_parameter_statistics() (in module pharmpy.modeling)": [[62, "pharmpy.modeling.calculate_individual_parameter_statistics"]], "calculate_individual_shrinkage() (in module pharmpy.modeling)": [[63, "pharmpy.modeling.calculate_individual_shrinkage"]], "calculate_parameters_from_ucp() (in module pharmpy.modeling)": [[64, "pharmpy.modeling.calculate_parameters_from_ucp"]], "calculate_pk_parameters_statistics() (in module pharmpy.modeling)": [[65, "pharmpy.modeling.calculate_pk_parameters_statistics"]], "calculate_prec_from_corrse() (in module pharmpy.modeling)": [[66, "pharmpy.modeling.calculate_prec_from_corrse"]], "calculate_prec_from_cov() (in module pharmpy.modeling)": [[67, "pharmpy.modeling.calculate_prec_from_cov"]], "calculate_se_from_cov() (in module pharmpy.modeling)": [[68, "pharmpy.modeling.calculate_se_from_cov"]], "calculate_se_from_prec() (in module pharmpy.modeling)": [[69, "pharmpy.modeling.calculate_se_from_prec"]], "calculate_ucp_scale() (in module pharmpy.modeling)": [[70, "pharmpy.modeling.calculate_ucp_scale"]], "check_dataset() (in module pharmpy.modeling)": [[71, "pharmpy.modeling.check_dataset"]], "check_high_correlations() (in module pharmpy.modeling)": [[72, "pharmpy.modeling.check_high_correlations"]], "check_parameters_near_bounds() (in module pharmpy.modeling)": [[73, "pharmpy.modeling.check_parameters_near_bounds"]], "cleanup_model() (in module pharmpy.modeling)": [[74, "pharmpy.modeling.cleanup_model"]], "convert_model() (in module pharmpy.modeling)": [[75, "pharmpy.modeling.convert_model"]], "create_basic_pk_model() (in module pharmpy.modeling)": [[76, "pharmpy.modeling.create_basic_pk_model"]], "create_config_template() (in module pharmpy.modeling)": [[77, "pharmpy.modeling.create_config_template"]], "create_joint_distribution() (in module pharmpy.modeling)": [[78, "pharmpy.modeling.create_joint_distribution"]], "create_rng() (in module pharmpy.modeling)": [[79, "pharmpy.modeling.create_rng"]], "create_symbol() (in module pharmpy.modeling)": [[80, "pharmpy.modeling.create_symbol"]], "deidentify_data() (in module pharmpy.modeling)": [[81, "pharmpy.modeling.deidentify_data"]], "display_odes() (in module pharmpy.modeling)": [[82, "pharmpy.modeling.display_odes"]], "drop_columns() (in module pharmpy.modeling)": [[83, "pharmpy.modeling.drop_columns"]], "drop_dropped_columns() (in module pharmpy.modeling)": [[84, "pharmpy.modeling.drop_dropped_columns"]], "evaluate_epsilon_gradient() (in module pharmpy.modeling)": [[85, "pharmpy.modeling.evaluate_epsilon_gradient"]], "evaluate_eta_gradient() (in module pharmpy.modeling)": [[86, "pharmpy.modeling.evaluate_eta_gradient"]], "evaluate_expression() (in module pharmpy.modeling)": [[87, "pharmpy.modeling.evaluate_expression"]], "evaluate_individual_prediction() (in module pharmpy.modeling)": [[88, "pharmpy.modeling.evaluate_individual_prediction"]], "evaluate_population_prediction() (in module pharmpy.modeling)": [[89, "pharmpy.modeling.evaluate_population_prediction"]], "evaluate_weighted_residuals() (in module pharmpy.modeling)": [[90, "pharmpy.modeling.evaluate_weighted_residuals"]], "expand_additional_doses() (in module pharmpy.modeling)": [[91, "pharmpy.modeling.expand_additional_doses"]], "filter_dataset() (in module pharmpy.modeling)": [[92, "pharmpy.modeling.filter_dataset"]], "find_clearance_parameters() (in module pharmpy.modeling)": [[93, "pharmpy.modeling.find_clearance_parameters"]], "find_volume_parameters() (in module pharmpy.modeling)": [[94, "pharmpy.modeling.find_volume_parameters"]], "fix_or_unfix_parameters() (in module pharmpy.modeling)": [[95, "pharmpy.modeling.fix_or_unfix_parameters"]], "fix_parameters() (in module pharmpy.modeling)": [[96, "pharmpy.modeling.fix_parameters"]], "fix_parameters_to() (in module pharmpy.modeling)": [[97, "pharmpy.modeling.fix_parameters_to"]], "get_admid() (in module pharmpy.modeling)": [[98, "pharmpy.modeling.get_admid"]], "get_baselines() (in module pharmpy.modeling)": [[99, "pharmpy.modeling.get_baselines"]], "get_bioavailability() (in module pharmpy.modeling)": [[100, "pharmpy.modeling.get_bioavailability"]], "get_cmt() (in module pharmpy.modeling)": [[101, "pharmpy.modeling.get_cmt"]], "get_concentration_parameters_from_data() (in module pharmpy.modeling)": [[102, "pharmpy.modeling.get_concentration_parameters_from_data"]], "get_config_path() (in module pharmpy.modeling)": [[103, "pharmpy.modeling.get_config_path"]], "get_covariate_baselines() (in module pharmpy.modeling)": [[104, "pharmpy.modeling.get_covariate_baselines"]], "get_covariates() (in module pharmpy.modeling)": [[105, "pharmpy.modeling.get_covariates"]], "get_doseid() (in module pharmpy.modeling)": [[106, "pharmpy.modeling.get_doseid"]], "get_doses() (in module pharmpy.modeling)": [[107, "pharmpy.modeling.get_doses"]], "get_dv_symbol() (in module pharmpy.modeling)": [[108, "pharmpy.modeling.get_dv_symbol"]], "get_evid() (in module pharmpy.modeling)": [[109, "pharmpy.modeling.get_evid"]], "get_ids() (in module pharmpy.modeling)": [[110, "pharmpy.modeling.get_ids"]], "get_individual_parameters() (in module pharmpy.modeling)": [[111, "pharmpy.modeling.get_individual_parameters"]], "get_individual_prediction_expression() (in module pharmpy.modeling)": [[112, "pharmpy.modeling.get_individual_prediction_expression"]], "get_initial_conditions() (in module pharmpy.modeling)": [[113, "pharmpy.modeling.get_initial_conditions"]], "get_lag_times() (in module pharmpy.modeling)": [[114, "pharmpy.modeling.get_lag_times"]], "get_mdv() (in module pharmpy.modeling)": [[115, "pharmpy.modeling.get_mdv"]], "get_model_code() (in module pharmpy.modeling)": [[116, "pharmpy.modeling.get_model_code"]], "get_model_covariates() (in module pharmpy.modeling)": [[117, "pharmpy.modeling.get_model_covariates"]], "get_number_of_individuals() (in module pharmpy.modeling)": [[118, "pharmpy.modeling.get_number_of_individuals"]], "get_number_of_observations() (in module pharmpy.modeling)": [[119, "pharmpy.modeling.get_number_of_observations"]], "get_number_of_observations_per_individual() (in module pharmpy.modeling)": [[120, "pharmpy.modeling.get_number_of_observations_per_individual"]], "get_number_of_peripheral_compartments() (in module pharmpy.modeling)": [[121, "pharmpy.modeling.get_number_of_peripheral_compartments"]], "get_number_of_transit_compartments() (in module pharmpy.modeling)": [[122, "pharmpy.modeling.get_number_of_transit_compartments"]], "get_observation_expression() (in module pharmpy.modeling)": [[123, "pharmpy.modeling.get_observation_expression"]], "get_observations() (in module pharmpy.modeling)": [[124, "pharmpy.modeling.get_observations"]], "get_omegas() (in module pharmpy.modeling)": [[125, "pharmpy.modeling.get_omegas"]], "get_parameter_rv() (in module pharmpy.modeling)": [[126, "pharmpy.modeling.get_parameter_rv"]], "get_pd_parameters() (in module pharmpy.modeling)": [[127, "pharmpy.modeling.get_pd_parameters"]], "get_pk_parameters() (in module pharmpy.modeling)": [[128, "pharmpy.modeling.get_pk_parameters"]], "get_population_prediction_expression() (in module pharmpy.modeling)": [[129, "pharmpy.modeling.get_population_prediction_expression"]], "get_rv_parameters() (in module pharmpy.modeling)": [[130, "pharmpy.modeling.get_rv_parameters"]], "get_sigmas() (in module pharmpy.modeling)": [[131, "pharmpy.modeling.get_sigmas"]], "get_thetas() (in module pharmpy.modeling)": [[132, "pharmpy.modeling.get_thetas"]], "get_unit_of() (in module pharmpy.modeling)": [[133, "pharmpy.modeling.get_unit_of"]], "get_zero_order_inputs() (in module pharmpy.modeling)": [[134, "pharmpy.modeling.get_zero_order_inputs"]], "greekify_model() (in module pharmpy.modeling)": [[135, "pharmpy.modeling.greekify_model"]], "has_additive_error_model() (in module pharmpy.modeling)": [[136, "pharmpy.modeling.has_additive_error_model"]], "has_combined_error_model() (in module pharmpy.modeling)": [[137, "pharmpy.modeling.has_combined_error_model"]], "has_covariate_effect() (in module pharmpy.modeling)": [[138, "pharmpy.modeling.has_covariate_effect"]], "has_first_order_absorption() (in module pharmpy.modeling)": [[139, "pharmpy.modeling.has_first_order_absorption"]], "has_first_order_elimination() (in module pharmpy.modeling)": [[140, "pharmpy.modeling.has_first_order_elimination"]], "has_instantaneous_absorption() (in module pharmpy.modeling)": [[141, "pharmpy.modeling.has_instantaneous_absorption"]], "has_linear_odes() (in module pharmpy.modeling)": [[142, "pharmpy.modeling.has_linear_odes"]], "has_linear_odes_with_real_eigenvalues() (in module pharmpy.modeling)": [[143, "pharmpy.modeling.has_linear_odes_with_real_eigenvalues"]], "has_michaelis_menten_elimination() (in module pharmpy.modeling)": [[144, "pharmpy.modeling.has_michaelis_menten_elimination"]], "has_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[145, "pharmpy.modeling.has_mixed_mm_fo_elimination"]], "has_odes() (in module pharmpy.modeling)": [[146, "pharmpy.modeling.has_odes"]], "has_presystemic_metabolite() (in module pharmpy.modeling)": [[147, "pharmpy.modeling.has_presystemic_metabolite"]], "has_proportional_error_model() (in module pharmpy.modeling)": [[148, "pharmpy.modeling.has_proportional_error_model"]], "has_random_effect() (in module pharmpy.modeling)": [[149, "pharmpy.modeling.has_random_effect"]], "has_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[150, "pharmpy.modeling.has_seq_zo_fo_absorption"]], "has_weighted_error_model() (in module pharmpy.modeling)": [[151, "pharmpy.modeling.has_weighted_error_model"]], "has_zero_order_absorption() (in module pharmpy.modeling)": [[152, "pharmpy.modeling.has_zero_order_absorption"]], "has_zero_order_elimination() (in module pharmpy.modeling)": [[153, "pharmpy.modeling.has_zero_order_elimination"]], "is_linearized() (in module pharmpy.modeling)": [[154, "pharmpy.modeling.is_linearized"]], "is_real() (in module pharmpy.modeling)": [[155, "pharmpy.modeling.is_real"]], "list_time_varying_covariates() (in module pharmpy.modeling)": [[156, "pharmpy.modeling.list_time_varying_covariates"]], "load_dataset() (in module pharmpy.modeling)": [[157, "pharmpy.modeling.load_dataset"]], "load_example_model() (in module pharmpy.modeling)": [[158, "pharmpy.modeling.load_example_model"]], "make_declarative() (in module pharmpy.modeling)": [[159, "pharmpy.modeling.make_declarative"]], "mu_reference_model() (in module pharmpy.modeling)": [[160, "pharmpy.modeling.mu_reference_model"]], "omit_data() (in module pharmpy.modeling)": [[161, "pharmpy.modeling.omit_data"]], "plot_cwres_vs_idv() (in module pharmpy.modeling)": [[162, "pharmpy.modeling.plot_cwres_vs_idv"]], "plot_dv_vs_ipred() (in module pharmpy.modeling)": [[163, "pharmpy.modeling.plot_dv_vs_ipred"]], "plot_individual_predictions() (in module pharmpy.modeling)": [[164, "pharmpy.modeling.plot_individual_predictions"]], "plot_iofv_vs_iofv() (in module pharmpy.modeling)": [[165, "pharmpy.modeling.plot_iofv_vs_iofv"]], "plot_transformed_eta_distributions() (in module pharmpy.modeling)": [[166, "pharmpy.modeling.plot_transformed_eta_distributions"]], "print_model_code() (in module pharmpy.modeling)": [[167, "pharmpy.modeling.print_model_code"]], "print_model_symbols() (in module pharmpy.modeling)": [[168, "pharmpy.modeling.print_model_symbols"]], "read_dataset_from_datainfo() (in module pharmpy.modeling)": [[169, "pharmpy.modeling.read_dataset_from_datainfo"]], "read_model() (in module pharmpy.modeling)": [[170, "pharmpy.modeling.read_model"]], "read_model_from_string() (in module pharmpy.modeling)": [[171, "pharmpy.modeling.read_model_from_string"]], "remove_bioavailability() (in module pharmpy.modeling)": [[172, "pharmpy.modeling.remove_bioavailability"]], "remove_covariate_effect() (in module pharmpy.modeling)": [[173, "pharmpy.modeling.remove_covariate_effect"]], "remove_error_model() (in module pharmpy.modeling)": [[174, "pharmpy.modeling.remove_error_model"]], "remove_estimation_step() (in module pharmpy.modeling)": [[175, "pharmpy.modeling.remove_estimation_step"]], "remove_iiv() (in module pharmpy.modeling)": [[176, "pharmpy.modeling.remove_iiv"]], "remove_iov() (in module pharmpy.modeling)": [[177, "pharmpy.modeling.remove_iov"]], "remove_lag_time() (in module pharmpy.modeling)": [[178, "pharmpy.modeling.remove_lag_time"]], "remove_loq_data() (in module pharmpy.modeling)": [[179, "pharmpy.modeling.remove_loq_data"]], "remove_parameter_uncertainty_step() (in module pharmpy.modeling)": [[180, "pharmpy.modeling.remove_parameter_uncertainty_step"]], "remove_peripheral_compartment() (in module pharmpy.modeling)": [[181, "pharmpy.modeling.remove_peripheral_compartment"]], "remove_unused_parameters_and_rvs() (in module pharmpy.modeling)": [[182, "pharmpy.modeling.remove_unused_parameters_and_rvs"]], "rename_symbols() (in module pharmpy.modeling)": [[183, "pharmpy.modeling.rename_symbols"]], "replace_non_random_rvs() (in module pharmpy.modeling)": [[184, "pharmpy.modeling.replace_non_random_rvs"]], "resample_data() (in module pharmpy.modeling)": [[185, "pharmpy.modeling.resample_data"]], "sample_individual_estimates() (in module pharmpy.modeling)": [[186, "pharmpy.modeling.sample_individual_estimates"]], "sample_parameters_from_covariance_matrix() (in module pharmpy.modeling)": [[187, "pharmpy.modeling.sample_parameters_from_covariance_matrix"]], "sample_parameters_uniformly() (in module pharmpy.modeling)": [[188, "pharmpy.modeling.sample_parameters_uniformly"]], "set_additive_error_model() (in module pharmpy.modeling)": [[189, "pharmpy.modeling.set_additive_error_model"]], "set_baseline_effect() (in module pharmpy.modeling)": [[190, "pharmpy.modeling.set_baseline_effect"]], "set_combined_error_model() (in module pharmpy.modeling)": [[191, "pharmpy.modeling.set_combined_error_model"]], "set_covariates() (in module pharmpy.modeling)": [[192, "pharmpy.modeling.set_covariates"]], "set_direct_effect() (in module pharmpy.modeling)": [[193, "pharmpy.modeling.set_direct_effect"]], "set_dtbs_error_model() (in module pharmpy.modeling)": [[194, "pharmpy.modeling.set_dtbs_error_model"]], "set_dvid() (in module pharmpy.modeling)": [[195, "pharmpy.modeling.set_dvid"]], "set_estimation_step() (in module pharmpy.modeling)": [[196, "pharmpy.modeling.set_estimation_step"]], "set_evaluation_step() (in module pharmpy.modeling)": [[197, "pharmpy.modeling.set_evaluation_step"]], "set_first_order_absorption() (in module pharmpy.modeling)": [[198, "pharmpy.modeling.set_first_order_absorption"]], "set_first_order_elimination() (in module pharmpy.modeling)": [[199, "pharmpy.modeling.set_first_order_elimination"]], "set_iiv_on_ruv() (in module pharmpy.modeling)": [[200, "pharmpy.modeling.set_iiv_on_ruv"]], "set_initial_condition() (in module pharmpy.modeling)": [[201, "pharmpy.modeling.set_initial_condition"]], "set_initial_estimates() (in module pharmpy.modeling)": [[202, "pharmpy.modeling.set_initial_estimates"]], "set_instantaneous_absorption() (in module pharmpy.modeling)": [[203, "pharmpy.modeling.set_instantaneous_absorption"]], "set_lloq_data() (in module pharmpy.modeling)": [[204, "pharmpy.modeling.set_lloq_data"]], "set_lower_bounds() (in module pharmpy.modeling)": [[205, "pharmpy.modeling.set_lower_bounds"]], "set_michaelis_menten_elimination() (in module pharmpy.modeling)": [[206, "pharmpy.modeling.set_michaelis_menten_elimination"]], "set_mixed_mm_fo_elimination() (in module pharmpy.modeling)": [[207, "pharmpy.modeling.set_mixed_mm_fo_elimination"]], "set_name() (in module pharmpy.modeling)": [[208, "pharmpy.modeling.set_name"]], "set_ode_solver() (in module pharmpy.modeling)": [[209, "pharmpy.modeling.set_ode_solver"]], "set_peripheral_compartments() (in module pharmpy.modeling)": [[210, "pharmpy.modeling.set_peripheral_compartments"]], "set_power_on_ruv() (in module pharmpy.modeling)": [[211, "pharmpy.modeling.set_power_on_ruv"]], "set_proportional_error_model() (in module pharmpy.modeling)": [[212, "pharmpy.modeling.set_proportional_error_model"]], "set_reference_values() (in module pharmpy.modeling)": [[213, "pharmpy.modeling.set_reference_values"]], "set_seq_zo_fo_absorption() (in module pharmpy.modeling)": [[214, "pharmpy.modeling.set_seq_zo_fo_absorption"]], "set_simulation() (in module pharmpy.modeling)": [[215, "pharmpy.modeling.set_simulation"]], "set_time_varying_error_model() (in module pharmpy.modeling)": [[216, "pharmpy.modeling.set_time_varying_error_model"]], "set_tmdd() (in module pharmpy.modeling)": [[217, "pharmpy.modeling.set_tmdd"]], "set_transit_compartments() (in module pharmpy.modeling)": [[218, "pharmpy.modeling.set_transit_compartments"]], "set_upper_bounds() (in module pharmpy.modeling)": [[219, "pharmpy.modeling.set_upper_bounds"]], "set_weighted_error_model() (in module pharmpy.modeling)": [[220, "pharmpy.modeling.set_weighted_error_model"]], "set_zero_order_absorption() (in module pharmpy.modeling)": [[221, "pharmpy.modeling.set_zero_order_absorption"]], "set_zero_order_elimination() (in module pharmpy.modeling)": [[222, "pharmpy.modeling.set_zero_order_elimination"]], "set_zero_order_input() (in module pharmpy.modeling)": [[223, "pharmpy.modeling.set_zero_order_input"]], "simplify_expression() (in module pharmpy.modeling)": [[224, "pharmpy.modeling.simplify_expression"]], "solve_ode_system() (in module pharmpy.modeling)": [[225, "pharmpy.modeling.solve_ode_system"]], "split_joint_distribution() (in module pharmpy.modeling)": [[226, "pharmpy.modeling.split_joint_distribution"]], "transform_blq() (in module pharmpy.modeling)": [[227, "pharmpy.modeling.transform_blq"]], "transform_etas_boxcox() (in module pharmpy.modeling)": [[228, "pharmpy.modeling.transform_etas_boxcox"]], "transform_etas_john_draper() (in module pharmpy.modeling)": [[229, "pharmpy.modeling.transform_etas_john_draper"]], "transform_etas_tdist() (in module pharmpy.modeling)": [[230, "pharmpy.modeling.transform_etas_tdist"]], "translate_nmtran_time() (in module pharmpy.modeling)": [[231, "pharmpy.modeling.translate_nmtran_time"]], "unconstrain_parameters() (in module pharmpy.modeling)": [[232, "pharmpy.modeling.unconstrain_parameters"]], "undrop_columns() (in module pharmpy.modeling)": [[233, "pharmpy.modeling.undrop_columns"]], "unfix_parameters() (in module pharmpy.modeling)": [[234, "pharmpy.modeling.unfix_parameters"]], "unfix_parameters_to() (in module pharmpy.modeling)": [[235, "pharmpy.modeling.unfix_parameters_to"]], "unload_dataset() (in module pharmpy.modeling)": [[236, "pharmpy.modeling.unload_dataset"]], "update_initial_individual_estimates() (in module pharmpy.modeling)": [[237, "pharmpy.modeling.update_initial_individual_estimates"]], "update_inits() (in module pharmpy.modeling)": [[238, "pharmpy.modeling.update_inits"]], "use_thetas_for_error_stdev() (in module pharmpy.modeling)": [[239, "pharmpy.modeling.use_thetas_for_error_stdev"]], "write_csv() (in module pharmpy.modeling)": [[240, "pharmpy.modeling.write_csv"]], "write_model() (in module pharmpy.modeling)": [[241, "pharmpy.modeling.write_model"]], "create_report() (in module pharmpy.tools)": [[242, "pharmpy.tools.create_report"]], "create_results() (in module pharmpy.tools)": [[243, "pharmpy.tools.create_results"]], "fit() (in module pharmpy.tools)": [[244, "pharmpy.tools.fit"]], "get_model_features() (in module pharmpy.tools)": [[245, "pharmpy.tools.get_model_features"]], "is_strictness_fulfilled() (in module pharmpy.tools)": [[246, "pharmpy.tools.is_strictness_fulfilled"]], "load_example_modelfit_results() (in module pharmpy.tools)": [[247, "pharmpy.tools.load_example_modelfit_results"]], "predict_influential_individuals() (in module pharmpy.tools)": [[248, "pharmpy.tools.predict_influential_individuals"]], "predict_influential_outliers() (in module pharmpy.tools)": [[249, "pharmpy.tools.predict_influential_outliers"]], "predict_outliers() (in module pharmpy.tools)": [[250, "pharmpy.tools.predict_outliers"]], "print_fit_summary() (in module pharmpy.tools)": [[251, "pharmpy.tools.print_fit_summary"]], "rank_models() (in module pharmpy.tools)": [[252, "pharmpy.tools.rank_models"]], "read_modelfit_results() (in module pharmpy.tools)": [[253, "pharmpy.tools.read_modelfit_results"]], "read_results() (in module pharmpy.tools)": [[254, "pharmpy.tools.read_results"]], "resume_tool() (in module pharmpy.tools)": [[255, "pharmpy.tools.resume_tool"]], "retrieve_final_model() (in module pharmpy.tools)": [[256, "pharmpy.tools.retrieve_final_model"]], "retrieve_models() (in module pharmpy.tools)": [[257, "pharmpy.tools.retrieve_models"]], "run_allometry() (in module pharmpy.tools)": [[258, "pharmpy.tools.run_allometry"]], "run_amd() (in module pharmpy.tools)": [[259, "pharmpy.tools.run_amd"]], "run_bootstrap() (in module pharmpy.tools)": [[260, "pharmpy.tools.run_bootstrap"]], "run_covsearch() (in module pharmpy.tools)": [[261, "pharmpy.tools.run_covsearch"]], "run_estmethod() (in module pharmpy.tools)": [[262, "pharmpy.tools.run_estmethod"]], "run_iivsearch() (in module pharmpy.tools)": [[263, "pharmpy.tools.run_iivsearch"]], "run_iovsearch() (in module pharmpy.tools)": [[264, "pharmpy.tools.run_iovsearch"]], "run_modelfit() (in module pharmpy.tools)": [[265, "pharmpy.tools.run_modelfit"]], "run_modelsearch() (in module pharmpy.tools)": [[266, "pharmpy.tools.run_modelsearch"]], "run_ruvsearch() (in module pharmpy.tools)": [[267, "pharmpy.tools.run_ruvsearch"]], "run_structsearch() (in module pharmpy.tools)": [[268, "pharmpy.tools.run_structsearch"]], "run_tool() (in module pharmpy.tools)": [[269, "pharmpy.tools.run_tool"]], "summarize_errors() (in module pharmpy.tools)": [[270, "pharmpy.tools.summarize_errors"]], "summarize_individuals() (in module pharmpy.tools)": [[271, "pharmpy.tools.summarize_individuals"]], "summarize_individuals_count_table() (in module pharmpy.tools)": [[272, "pharmpy.tools.summarize_individuals_count_table"]], "summarize_modelfit_results() (in module pharmpy.tools)": [[273, "pharmpy.tools.summarize_modelfit_results"]], "write_results() (in module pharmpy.tools)": [[274, "pharmpy.tools.write_results"]], "localdirectorydatabase (class in pharmpy.workflows)": [[275, "pharmpy.workflows.LocalDirectoryDatabase"]], "retrieve_file() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.store_metadata"]], "store_model() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.localdirectorydatabase method)": [[275, "pharmpy.workflows.LocalDirectoryDatabase.store_modelfit_results"]], "localdirectorytooldatabase (class in pharmpy.workflows)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase"]], "from_dict() (pharmpy.workflows.localdirectorytooldatabase class method)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase.from_dict"]], "read_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.localdirectorytooldatabase method)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.localdirectorytooldatabase method)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.localdirectorytooldatabase method)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase.store_results"]], "to_dict() (pharmpy.workflows.localdirectorytooldatabase method)": [[276, "pharmpy.workflows.LocalDirectoryToolDatabase.to_dict"]], "localmodeldirectorydatabase (class in pharmpy.workflows)": [[277, "pharmpy.workflows.LocalModelDirectoryDatabase"]], "list_models() (pharmpy.workflows.localmodeldirectorydatabase method)": [[277, "pharmpy.workflows.LocalModelDirectoryDatabase.list_models"]], "snapshot() (pharmpy.workflows.localmodeldirectorydatabase method)": [[277, "pharmpy.workflows.LocalModelDirectoryDatabase.snapshot"]], "transaction() (pharmpy.workflows.localmodeldirectorydatabase method)": [[277, "pharmpy.workflows.LocalModelDirectoryDatabase.transaction"]], "log (class in pharmpy.workflows)": [[278, "pharmpy.workflows.Log"]], "errors (pharmpy.workflows.log attribute)": [[278, "pharmpy.workflows.Log.errors"]], "from_dict() (pharmpy.workflows.log class method)": [[278, "pharmpy.workflows.Log.from_dict"]], "log_error() (pharmpy.workflows.log method)": [[278, "pharmpy.workflows.Log.log_error"]], "log_warning() (pharmpy.workflows.log method)": [[278, "pharmpy.workflows.Log.log_warning"]], "to_dataframe() (pharmpy.workflows.log method)": [[278, "pharmpy.workflows.Log.to_dataframe"]], "to_dict() (pharmpy.workflows.log method)": [[278, "pharmpy.workflows.Log.to_dict"]], "warnings (pharmpy.workflows.log attribute)": [[278, "pharmpy.workflows.Log.warnings"]], "modeldatabase (class in pharmpy.workflows)": [[279, "pharmpy.workflows.ModelDatabase"]], "retrieve_file() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.retrieve_modelfit_results"]], "snapshot() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.snapshot"]], "store_local_file() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.store_modelfit_results"]], "transaction() (pharmpy.workflows.modeldatabase method)": [[279, "pharmpy.workflows.ModelDatabase.transaction"]], "modelentry (class in pharmpy.workflows)": [[280, "pharmpy.workflows.ModelEntry"]], "attach_results() (pharmpy.workflows.modelentry method)": [[280, "pharmpy.workflows.ModelEntry.attach_results"]], "create() (pharmpy.workflows.modelentry class method)": [[280, "pharmpy.workflows.ModelEntry.create"]], "log (pharmpy.workflows.modelentry attribute)": [[280, "pharmpy.workflows.ModelEntry.log"]], "model (pharmpy.workflows.modelentry attribute)": [[280, "pharmpy.workflows.ModelEntry.model"]], "modelfit_results (pharmpy.workflows.modelentry attribute)": [[280, "pharmpy.workflows.ModelEntry.modelfit_results"]], "parent (pharmpy.workflows.modelentry attribute)": [[280, "pharmpy.workflows.ModelEntry.parent"]], "modelfitresults (class in pharmpy.workflows)": [[281, "pharmpy.workflows.ModelfitResults"]], "correlation_matrix (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.correlation_matrix"]], "covariance_matrix (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.covariance_matrix"]], "covstep_successful (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.covstep_successful"]], "description (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.description"]], "estimation_runtime (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.estimation_runtime"]], "estimation_runtime_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.estimation_runtime_iterations"]], "evaluation (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.evaluation"]], "function_evaluations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.function_evaluations"]], "function_evaluations_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.function_evaluations_iterations"]], "gradients (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.gradients"]], "gradients_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.gradients_iterations"]], "individual_estimates (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.individual_estimates"]], "individual_estimates_covariance (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.individual_estimates_covariance"]], "individual_ofv (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.individual_ofv"]], "log (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.log"]], "log_likelihood (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.log_likelihood"]], "minimization_successful (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.minimization_successful"]], "minimization_successful_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.minimization_successful_iterations"]], "name (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.name"]], "ofv (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.ofv"]], "ofv_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.ofv_iterations"]], "parameter_estimates (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.parameter_estimates"]], "parameter_estimates_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.parameter_estimates_iterations"]], "parameter_estimates_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.parameter_estimates_sdcorr"]], "precision_matrix (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.precision_matrix"]], "predictions (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.predictions"]], "relative_standard_errors (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.relative_standard_errors"]], "residuals (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.residuals"]], "runtime_total (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.runtime_total"]], "significant_digits (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.significant_digits"]], "significant_digits_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.significant_digits_iterations"]], "standard_errors (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.standard_errors"]], "standard_errors_sdcorr (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.standard_errors_sdcorr"]], "termination_cause (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.termination_cause"]], "termination_cause_iterations (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.termination_cause_iterations"]], "warnings (pharmpy.workflows.modelfitresults attribute)": [[281, "pharmpy.workflows.ModelfitResults.warnings"]], "nullmodeldatabase (class in pharmpy.workflows)": [[282, "pharmpy.workflows.NullModelDatabase"]], "retrieve_file() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.retrieve_file"]], "retrieve_local_files() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.retrieve_local_files"]], "retrieve_model() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.retrieve_model"]], "retrieve_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.retrieve_model_entry"]], "retrieve_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.retrieve_modelfit_results"]], "store_local_file() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.store_metadata"]], "store_model() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.store_model"]], "store_model_entry() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.store_model_entry"]], "store_modelfit_results() (pharmpy.workflows.nullmodeldatabase method)": [[282, "pharmpy.workflows.NullModelDatabase.store_modelfit_results"]], "nulltooldatabase (class in pharmpy.workflows)": [[283, "pharmpy.workflows.NullToolDatabase"]], "read_metadata() (pharmpy.workflows.nulltooldatabase method)": [[283, "pharmpy.workflows.NullToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.nulltooldatabase method)": [[283, "pharmpy.workflows.NullToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.nulltooldatabase method)": [[283, "pharmpy.workflows.NullToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.nulltooldatabase method)": [[283, "pharmpy.workflows.NullToolDatabase.store_results"]], "results (class in pharmpy.workflows)": [[284, "pharmpy.workflows.Results"]], "from_dict() (pharmpy.workflows.results class method)": [[284, "pharmpy.workflows.Results.from_dict"]], "get_and_reset_index() (pharmpy.workflows.results method)": [[284, "pharmpy.workflows.Results.get_and_reset_index"]], "to_csv() (pharmpy.workflows.results method)": [[284, "pharmpy.workflows.Results.to_csv"]], "to_dict() (pharmpy.workflows.results method)": [[284, "pharmpy.workflows.Results.to_dict"]], "to_json() (pharmpy.workflows.results method)": [[284, "pharmpy.workflows.Results.to_json"]], "task (class in pharmpy.workflows)": [[285, "pharmpy.workflows.Task"]], "create() (pharmpy.workflows.task class method)": [[285, "pharmpy.workflows.Task.create"]], "function (pharmpy.workflows.task attribute)": [[285, "pharmpy.workflows.Task.function"]], "name (pharmpy.workflows.task attribute)": [[285, "pharmpy.workflows.Task.name"]], "replace() (pharmpy.workflows.task method)": [[285, "pharmpy.workflows.Task.replace"]], "task_input (pharmpy.workflows.task attribute)": [[285, "pharmpy.workflows.Task.task_input"]], "tooldatabase (class in pharmpy.workflows)": [[286, "pharmpy.workflows.ToolDatabase"]], "model_database (pharmpy.workflows.tooldatabase attribute)": [[286, "pharmpy.workflows.ToolDatabase.model_database"]], "path (pharmpy.workflows.tooldatabase attribute)": [[286, "pharmpy.workflows.ToolDatabase.path"]], "read_metadata() (pharmpy.workflows.tooldatabase method)": [[286, "pharmpy.workflows.ToolDatabase.read_metadata"]], "store_local_file() (pharmpy.workflows.tooldatabase method)": [[286, "pharmpy.workflows.ToolDatabase.store_local_file"]], "store_metadata() (pharmpy.workflows.tooldatabase method)": [[286, "pharmpy.workflows.ToolDatabase.store_metadata"]], "store_results() (pharmpy.workflows.tooldatabase method)": [[286, "pharmpy.workflows.ToolDatabase.store_results"]], "workflow (class in pharmpy.workflows)": [[287, "pharmpy.workflows.Workflow"]], "as_dask_dict() (pharmpy.workflows.workflow method)": [[287, "pharmpy.workflows.Workflow.as_dask_dict"]], "create() (pharmpy.workflows.workflow class method)": [[287, "pharmpy.workflows.Workflow.create"]], "name (pharmpy.workflows.workflow attribute)": [[287, "pharmpy.workflows.Workflow.name"]], "plot_dask() (pharmpy.workflows.workflow method)": [[287, "pharmpy.workflows.Workflow.plot_dask"]], "replace() (pharmpy.workflows.workflow method)": [[287, "pharmpy.workflows.Workflow.replace"]], "workflowbuilder (class in pharmpy.workflows)": [[288, "pharmpy.workflows.WorkflowBuilder"]], "add_task() (pharmpy.workflows.workflowbuilder method)": [[288, "pharmpy.workflows.WorkflowBuilder.add_task"]], "insert_workflow() (pharmpy.workflows.workflowbuilder method)": [[288, "pharmpy.workflows.WorkflowBuilder.insert_workflow"]], "replace_task() (pharmpy.workflows.workflowbuilder method)": [[288, "pharmpy.workflows.WorkflowBuilder.replace_task"]], "call_workflow() (in module pharmpy.workflows)": [[289, "pharmpy.workflows.call_workflow"]], "default_model_database (in module pharmpy.workflows)": [[290, "pharmpy.workflows.default_model_database"]], "default_tool_database (in module pharmpy.workflows)": [[291, "pharmpy.workflows.default_tool_database"]], "execute_workflow() (in module pharmpy.workflows)": [[292, "pharmpy.workflows.execute_workflow"]], "split_common_options() (in module pharmpy.workflows)": [[293, "pharmpy.workflows.split_common_options"]], "module": [[294, "module-pharmpy.model"], [295, "module-pharmpy.modeling"], [296, "module-pharmpy.tools"], [297, "module-pharmpy.workflows"]], "pharmpy.model": [[294, "module-pharmpy.model"]], "pharmpy.modeling": [[295, "module-pharmpy.modeling"]], "pharmpy.tools": [[296, "module-pharmpy.tools"]], "pharmpy.workflows": [[297, "module-pharmpy.workflows"]], "--administration": [[302, "cmdoption-pharmpy-run-amd-administration"]], "--algorithm": [[302, "cmdoption-pharmpy-run-covsearch-algorithm"]], "--allometric_variable": [[302, "cmdoption-pharmpy-run-allometry-allometric_variable"], [302, "cmdoption-pharmpy-run-amd-allometric_variable"]], "--cl_init": [[302, "cmdoption-pharmpy-run-amd-cl_init"]], "--column": [[302, "cmdoption-pharmpy-run-iovsearch-column"]], "--columns": [[302, "cmdoption-pharmpy-data-print-columns"]], "--cutoff": [[302, "cmdoption-pharmpy-run-iivsearch-cutoff"], [302, "cmdoption-pharmpy-run-iovsearch-cutoff"], [302, "cmdoption-pharmpy-run-modelsearch-cutoff"]], "--datecols": [[302, "cmdoption-pharmpy-data-deidentify-datecols"]], "--distribution": [[302, "cmdoption-pharmpy-run-iovsearch-distribution"]], "--effects": [[302, "cmdoption-pharmpy-run-covsearch-effects"]], "--eps": [[302, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [302, "cmdoption-pharmpy-model-power_on_ruv-eps"]], "--eta_name": [[302, "cmdoption-pharmpy-model-add_iiv-eta_name"]], "--eta_names": [[302, "cmdoption-pharmpy-model-add_iov-eta_names"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"]], "--etas": [[302, "cmdoption-pharmpy-model-add_iov-etas"], [302, "cmdoption-pharmpy-model-boxcox-etas"], [302, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [302, "cmdoption-pharmpy-model-john_draper-etas"], [302, "cmdoption-pharmpy-model-tdist-etas"]], "--explicit-odes": [[302, "cmdoption-pharmpy-model-print-explicit-odes"]], "--force": [[302, "cmdoption-pharmpy-data-append-f"], [302, "cmdoption-pharmpy-data-deidentify-f"], [302, "cmdoption-pharmpy-data-filter-f"], [302, "cmdoption-pharmpy-data-reference-f"], [302, "cmdoption-pharmpy-data-write-f"], [302, "cmdoption-pharmpy-model-absorption_rate-f"], [302, "cmdoption-pharmpy-model-add_cov_effect-f"], [302, "cmdoption-pharmpy-model-add_iiv-f"], [302, "cmdoption-pharmpy-model-add_iov-f"], [302, "cmdoption-pharmpy-model-boxcox-f"], [302, "cmdoption-pharmpy-model-create_joint_distribution-f"], [302, "cmdoption-pharmpy-model-elimination_rate-f"], [302, "cmdoption-pharmpy-model-error-f"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [302, "cmdoption-pharmpy-model-john_draper-f"], [302, "cmdoption-pharmpy-model-peripheral_compartments-f"], [302, "cmdoption-pharmpy-model-power_on_ruv-f"], [302, "cmdoption-pharmpy-model-remove_iiv-f"], [302, "cmdoption-pharmpy-model-remove_iov-f"], [302, "cmdoption-pharmpy-model-tdist-f"], [302, "cmdoption-pharmpy-model-transit_compartments-f"], [302, "cmdoption-pharmpy-model-update_inits-f"]], "--force_posdef_covmatrix": [[302, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"]], "--force_posdef_samples": [[302, "cmdoption-pharmpy-results-frem-force_posdef_samples"]], "--group": [[302, "cmdoption-pharmpy-data-resample-group"]], "--groups": [[302, "cmdoption-pharmpy-run-ruvsearch-groups"]], "--help": [[302, "cmdoption-pharmpy-data-append-h"], [302, "cmdoption-pharmpy-data-deidentify-h"], [302, "cmdoption-pharmpy-data-filter-h"], [302, "cmdoption-pharmpy-data-h"], [302, "cmdoption-pharmpy-data-print-h"], [302, "cmdoption-pharmpy-data-reference-h"], [302, "cmdoption-pharmpy-data-resample-h"], [302, "cmdoption-pharmpy-data-write-h"], [302, "cmdoption-pharmpy-h"], [302, "cmdoption-pharmpy-info-h"], [302, "cmdoption-pharmpy-model-absorption_rate-h"], [302, "cmdoption-pharmpy-model-add_cov_effect-h"], [302, "cmdoption-pharmpy-model-add_iiv-h"], [302, "cmdoption-pharmpy-model-add_iov-h"], [302, "cmdoption-pharmpy-model-boxcox-h"], [302, "cmdoption-pharmpy-model-create_joint_distribution-h"], [302, "cmdoption-pharmpy-model-elimination_rate-h"], [302, "cmdoption-pharmpy-model-error-h"], [302, "cmdoption-pharmpy-model-h"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [302, "cmdoption-pharmpy-model-john_draper-h"], [302, "cmdoption-pharmpy-model-peripheral_compartments-h"], [302, "cmdoption-pharmpy-model-power_on_ruv-h"], [302, "cmdoption-pharmpy-model-print-h"], [302, "cmdoption-pharmpy-model-remove_iiv-h"], [302, "cmdoption-pharmpy-model-remove_iov-h"], [302, "cmdoption-pharmpy-model-sample-h"], [302, "cmdoption-pharmpy-model-tdist-h"], [302, "cmdoption-pharmpy-model-transit_compartments-h"], [302, "cmdoption-pharmpy-model-update_inits-h"], [302, "cmdoption-pharmpy-results-bootstrap-h"], [302, "cmdoption-pharmpy-results-cdd-h"], [302, "cmdoption-pharmpy-results-frem-h"], [302, "cmdoption-pharmpy-results-h"], [302, "cmdoption-pharmpy-results-linearize-h"], [302, "cmdoption-pharmpy-results-ofv-h"], [302, "cmdoption-pharmpy-results-print-h"], [302, "cmdoption-pharmpy-results-qa-h"], [302, "cmdoption-pharmpy-results-report-h"], [302, "cmdoption-pharmpy-results-ruvsearch-h"], [302, "cmdoption-pharmpy-results-scm-h"], [302, "cmdoption-pharmpy-results-simeval-h"], [302, "cmdoption-pharmpy-results-summary-h"], [302, "cmdoption-pharmpy-run-allometry-h"], [302, "cmdoption-pharmpy-run-amd-h"], [302, "cmdoption-pharmpy-run-bootstrap-h"], [302, "cmdoption-pharmpy-run-covsearch-h"], [302, "cmdoption-pharmpy-run-estmethod-h"], [302, "cmdoption-pharmpy-run-execute-h"], [302, "cmdoption-pharmpy-run-h"], [302, "cmdoption-pharmpy-run-iivsearch-h"], [302, "cmdoption-pharmpy-run-iovsearch-h"], [302, "cmdoption-pharmpy-run-modelsearch-h"], [302, "cmdoption-pharmpy-run-ruvsearch-h"]], "--idcol": [[302, "cmdoption-pharmpy-data-deidentify-idcol"]], "--iiv_strategy": [[302, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [302, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"]], "--initials": [[302, "cmdoption-pharmpy-run-allometry-initials"]], "--list_of_parameters": [[302, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"]], "--lloq_limit": [[302, "cmdoption-pharmpy-run-amd-lloq_limit"]], "--lloq_method": [[302, "cmdoption-pharmpy-run-amd-lloq_method"]], "--lower_bounds": [[302, "cmdoption-pharmpy-run-allometry-lower_bounds"]], "--mat_init": [[302, "cmdoption-pharmpy-run-amd-mat_init"]], "--max_steps": [[302, "cmdoption-pharmpy-run-covsearch-max_steps"]], "--method": [[302, "cmdoption-pharmpy-results-frem-method"]], "--methods": [[302, "cmdoption-pharmpy-run-estmethod-methods"]], "--modeltype": [[302, "cmdoption-pharmpy-run-amd-modeltype"]], "--non_fixed": [[302, "cmdoption-pharmpy-run-allometry-non_fixed"]], "--occasion": [[302, "cmdoption-pharmpy-run-amd-occasion"]], "--operation": [[302, "cmdoption-pharmpy-model-add_cov_effect-operation"], [302, "cmdoption-pharmpy-model-add_iiv-operation"]], "--order": [[302, "cmdoption-pharmpy-run-amd-order"]], "--output_file": [[302, "cmdoption-pharmpy-data-append-o"], [302, "cmdoption-pharmpy-data-deidentify-o"], [302, "cmdoption-pharmpy-data-filter-o"], [302, "cmdoption-pharmpy-data-reference-o"], [302, "cmdoption-pharmpy-data-write-o"], [302, "cmdoption-pharmpy-model-absorption_rate-o"], [302, "cmdoption-pharmpy-model-add_cov_effect-o"], [302, "cmdoption-pharmpy-model-add_iiv-o"], [302, "cmdoption-pharmpy-model-add_iov-o"], [302, "cmdoption-pharmpy-model-boxcox-o"], [302, "cmdoption-pharmpy-model-create_joint_distribution-o"], [302, "cmdoption-pharmpy-model-elimination_rate-o"], [302, "cmdoption-pharmpy-model-error-o"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [302, "cmdoption-pharmpy-model-john_draper-o"], [302, "cmdoption-pharmpy-model-peripheral_compartments-o"], [302, "cmdoption-pharmpy-model-power_on_ruv-o"], [302, "cmdoption-pharmpy-model-remove_iiv-o"], [302, "cmdoption-pharmpy-model-remove_iov-o"], [302, "cmdoption-pharmpy-model-tdist-o"], [302, "cmdoption-pharmpy-model-transit_compartments-o"], [302, "cmdoption-pharmpy-model-update_inits-o"]], "--p_backward": [[302, "cmdoption-pharmpy-run-covsearch-p_backward"]], "--p_forward": [[302, "cmdoption-pharmpy-run-covsearch-p_forward"]], "--p_value": [[302, "cmdoption-pharmpy-run-ruvsearch-p_value"]], "--parameters": [[302, "cmdoption-pharmpy-run-allometry-parameters"]], "--path": [[302, "cmdoption-pharmpy-run-allometry-path"], [302, "cmdoption-pharmpy-run-amd-path"], [302, "cmdoption-pharmpy-run-covsearch-path"], [302, "cmdoption-pharmpy-run-estmethod-path"], [302, "cmdoption-pharmpy-run-iivsearch-path"], [302, "cmdoption-pharmpy-run-iovsearch-path"], [302, "cmdoption-pharmpy-run-modelsearch-path"], [302, "cmdoption-pharmpy-run-ruvsearch-path"]], "--rank_type": [[302, "cmdoption-pharmpy-run-iivsearch-rank_type"], [302, "cmdoption-pharmpy-run-iovsearch-rank_type"], [302, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "--reference_value": [[302, "cmdoption-pharmpy-run-allometry-reference_value"]], "--replace": [[302, "cmdoption-pharmpy-data-resample-replace"]], "--resamples": [[302, "cmdoption-pharmpy-data-resample-resamples"]], "--resume": [[302, "cmdoption-pharmpy-run-amd-resume"]], "--same_eta": [[302, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "--sample_size": [[302, "cmdoption-pharmpy-data-resample-sample_size"]], "--samples": [[302, "cmdoption-pharmpy-model-sample-samples"], [302, "cmdoption-pharmpy-run-bootstrap-samples"]], "--search_space": [[302, "cmdoption-pharmpy-run-amd-search_space"]], "--seed": [[302, "cmdoption-pharmpy-data-resample-seed"], [302, "cmdoption-pharmpy-model-sample-seed"]], "--skip": [[302, "cmdoption-pharmpy-run-ruvsearch-skip"]], "--solvers": [[302, "cmdoption-pharmpy-run-estmethod-solvers"]], "--stratify": [[302, "cmdoption-pharmpy-data-resample-stratify"]], "--to_remove": [[302, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "--upper_bounds": [[302, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "--vc_init": [[302, "cmdoption-pharmpy-run-amd-vc_init"]], "--version": [[302, "cmdoption-pharmpy-version"]], "-f": [[302, "cmdoption-pharmpy-data-append-f"], [302, "cmdoption-pharmpy-data-deidentify-f"], [302, "cmdoption-pharmpy-data-filter-f"], [302, "cmdoption-pharmpy-data-reference-f"], [302, "cmdoption-pharmpy-data-write-f"], [302, "cmdoption-pharmpy-model-absorption_rate-f"], [302, "cmdoption-pharmpy-model-add_cov_effect-f"], [302, "cmdoption-pharmpy-model-add_iiv-f"], [302, "cmdoption-pharmpy-model-add_iov-f"], [302, "cmdoption-pharmpy-model-boxcox-f"], [302, "cmdoption-pharmpy-model-create_joint_distribution-f"], [302, "cmdoption-pharmpy-model-elimination_rate-f"], [302, "cmdoption-pharmpy-model-error-f"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [302, "cmdoption-pharmpy-model-john_draper-f"], [302, "cmdoption-pharmpy-model-peripheral_compartments-f"], [302, "cmdoption-pharmpy-model-power_on_ruv-f"], [302, "cmdoption-pharmpy-model-remove_iiv-f"], [302, "cmdoption-pharmpy-model-remove_iov-f"], [302, "cmdoption-pharmpy-model-tdist-f"], [302, "cmdoption-pharmpy-model-transit_compartments-f"], [302, "cmdoption-pharmpy-model-update_inits-f"]], "-h": [[302, "cmdoption-pharmpy-data-append-h"], [302, "cmdoption-pharmpy-data-deidentify-h"], [302, "cmdoption-pharmpy-data-filter-h"], [302, "cmdoption-pharmpy-data-h"], [302, "cmdoption-pharmpy-data-print-h"], [302, "cmdoption-pharmpy-data-reference-h"], [302, "cmdoption-pharmpy-data-resample-h"], [302, "cmdoption-pharmpy-data-write-h"], [302, "cmdoption-pharmpy-h"], [302, "cmdoption-pharmpy-info-h"], [302, "cmdoption-pharmpy-model-absorption_rate-h"], [302, "cmdoption-pharmpy-model-add_cov_effect-h"], [302, "cmdoption-pharmpy-model-add_iiv-h"], [302, "cmdoption-pharmpy-model-add_iov-h"], [302, "cmdoption-pharmpy-model-boxcox-h"], [302, "cmdoption-pharmpy-model-create_joint_distribution-h"], [302, "cmdoption-pharmpy-model-elimination_rate-h"], [302, "cmdoption-pharmpy-model-error-h"], [302, "cmdoption-pharmpy-model-h"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [302, "cmdoption-pharmpy-model-john_draper-h"], [302, "cmdoption-pharmpy-model-peripheral_compartments-h"], [302, "cmdoption-pharmpy-model-power_on_ruv-h"], [302, "cmdoption-pharmpy-model-print-h"], [302, "cmdoption-pharmpy-model-remove_iiv-h"], [302, "cmdoption-pharmpy-model-remove_iov-h"], [302, "cmdoption-pharmpy-model-sample-h"], [302, "cmdoption-pharmpy-model-tdist-h"], [302, "cmdoption-pharmpy-model-transit_compartments-h"], [302, "cmdoption-pharmpy-model-update_inits-h"], [302, "cmdoption-pharmpy-results-bootstrap-h"], [302, "cmdoption-pharmpy-results-cdd-h"], [302, "cmdoption-pharmpy-results-frem-h"], [302, "cmdoption-pharmpy-results-h"], [302, "cmdoption-pharmpy-results-linearize-h"], [302, "cmdoption-pharmpy-results-ofv-h"], [302, "cmdoption-pharmpy-results-print-h"], [302, "cmdoption-pharmpy-results-qa-h"], [302, "cmdoption-pharmpy-results-report-h"], [302, "cmdoption-pharmpy-results-ruvsearch-h"], [302, "cmdoption-pharmpy-results-scm-h"], [302, "cmdoption-pharmpy-results-simeval-h"], [302, "cmdoption-pharmpy-results-summary-h"], [302, "cmdoption-pharmpy-run-allometry-h"], [302, "cmdoption-pharmpy-run-amd-h"], [302, "cmdoption-pharmpy-run-bootstrap-h"], [302, "cmdoption-pharmpy-run-covsearch-h"], [302, "cmdoption-pharmpy-run-estmethod-h"], [302, "cmdoption-pharmpy-run-execute-h"], [302, "cmdoption-pharmpy-run-h"], [302, "cmdoption-pharmpy-run-iivsearch-h"], [302, "cmdoption-pharmpy-run-iovsearch-h"], [302, "cmdoption-pharmpy-run-modelsearch-h"], [302, "cmdoption-pharmpy-run-ruvsearch-h"]], "-o": [[302, "cmdoption-pharmpy-data-append-o"], [302, "cmdoption-pharmpy-data-deidentify-o"], [302, "cmdoption-pharmpy-data-filter-o"], [302, "cmdoption-pharmpy-data-reference-o"], [302, "cmdoption-pharmpy-data-write-o"], [302, "cmdoption-pharmpy-model-absorption_rate-o"], [302, "cmdoption-pharmpy-model-add_cov_effect-o"], [302, "cmdoption-pharmpy-model-add_iiv-o"], [302, "cmdoption-pharmpy-model-add_iov-o"], [302, "cmdoption-pharmpy-model-boxcox-o"], [302, "cmdoption-pharmpy-model-create_joint_distribution-o"], [302, "cmdoption-pharmpy-model-elimination_rate-o"], [302, "cmdoption-pharmpy-model-error-o"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [302, "cmdoption-pharmpy-model-john_draper-o"], [302, "cmdoption-pharmpy-model-peripheral_compartments-o"], [302, "cmdoption-pharmpy-model-power_on_ruv-o"], [302, "cmdoption-pharmpy-model-remove_iiv-o"], [302, "cmdoption-pharmpy-model-remove_iov-o"], [302, "cmdoption-pharmpy-model-tdist-o"], [302, "cmdoption-pharmpy-model-transit_compartments-o"], [302, "cmdoption-pharmpy-model-update_inits-o"]], "algorithm": [[302, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [302, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [302, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"]], "colname": [[302, "cmdoption-pharmpy-data-reference-arg-colname"]], "covariate": [[302, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"]], "effect": [[302, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"]], "error_type": [[302, "cmdoption-pharmpy-model-error-arg-error_type"]], "expression": [[302, "cmdoption-pharmpy-data-append-arg-expression"], [302, "cmdoption-pharmpy-model-add_iiv-arg-expression"]], "expressions": [[302, "cmdoption-pharmpy-data-filter-arg-expressions"]], "file": [[302, "cmdoption-pharmpy-data-append-arg-file"], [302, "cmdoption-pharmpy-data-deidentify-arg-file"], [302, "cmdoption-pharmpy-data-filter-arg-file"], [302, "cmdoption-pharmpy-data-print-arg-file"], [302, "cmdoption-pharmpy-data-reference-arg-file"], [302, "cmdoption-pharmpy-data-resample-arg-file"], [302, "cmdoption-pharmpy-data-write-arg-file"], [302, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [302, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [302, "cmdoption-pharmpy-model-add_iiv-arg-file"], [302, "cmdoption-pharmpy-model-add_iov-arg-file"], [302, "cmdoption-pharmpy-model-boxcox-arg-file"], [302, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [302, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [302, "cmdoption-pharmpy-model-error-arg-file"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [302, "cmdoption-pharmpy-model-john_draper-arg-file"], [302, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [302, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [302, "cmdoption-pharmpy-model-print-arg-file"], [302, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [302, "cmdoption-pharmpy-model-remove_iov-arg-file"], [302, "cmdoption-pharmpy-model-sample-arg-file"], [302, "cmdoption-pharmpy-model-tdist-arg-file"], [302, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [302, "cmdoption-pharmpy-model-update_inits-arg-file"], [302, "cmdoption-pharmpy-results-ofv-arg-file"], [302, "cmdoption-pharmpy-results-print-arg-file"], [302, "cmdoption-pharmpy-results-summary-arg-file"], [302, "cmdoption-pharmpy-run-allometry-arg-file"], [302, "cmdoption-pharmpy-run-bootstrap-arg-file"], [302, "cmdoption-pharmpy-run-covsearch-arg-file"], [302, "cmdoption-pharmpy-run-estmethod-arg-file"], [302, "cmdoption-pharmpy-run-execute-arg-file"], [302, "cmdoption-pharmpy-run-iivsearch-arg-file"], [302, "cmdoption-pharmpy-run-iovsearch-arg-file"], [302, "cmdoption-pharmpy-run-modelsearch-arg-file"], [302, "cmdoption-pharmpy-run-ruvsearch-arg-file"]], "input_path": [[302, "cmdoption-pharmpy-run-amd-arg-input_path"]], "mfl": [[302, "cmdoption-pharmpy-run-modelsearch-arg-mfl"]], "n": [[302, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [302, "cmdoption-pharmpy-model-transit_compartments-arg-n"]], "occ": [[302, "cmdoption-pharmpy-model-add_iov-arg-occ"]], "param": [[302, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [302, "cmdoption-pharmpy-model-add_iiv-arg-param"]], "pharmpy command line option": [[302, "cmdoption-pharmpy-h"], [302, "cmdoption-pharmpy-version"]], "pharmpy-data command line option": [[302, "cmdoption-pharmpy-data-h"]], "pharmpy-data-append command line option": [[302, "cmdoption-pharmpy-data-append-arg-expression"], [302, "cmdoption-pharmpy-data-append-arg-file"], [302, "cmdoption-pharmpy-data-append-f"], [302, "cmdoption-pharmpy-data-append-h"], [302, "cmdoption-pharmpy-data-append-o"]], "pharmpy-data-deidentify command line option": [[302, "cmdoption-pharmpy-data-deidentify-arg-file"], [302, "cmdoption-pharmpy-data-deidentify-datecols"], [302, "cmdoption-pharmpy-data-deidentify-f"], [302, "cmdoption-pharmpy-data-deidentify-h"], [302, "cmdoption-pharmpy-data-deidentify-idcol"], [302, "cmdoption-pharmpy-data-deidentify-o"]], "pharmpy-data-filter command line option": [[302, "cmdoption-pharmpy-data-filter-arg-expressions"], [302, "cmdoption-pharmpy-data-filter-arg-file"], [302, "cmdoption-pharmpy-data-filter-f"], [302, "cmdoption-pharmpy-data-filter-h"], [302, "cmdoption-pharmpy-data-filter-o"]], "pharmpy-data-print command line option": [[302, "cmdoption-pharmpy-data-print-arg-file"], [302, "cmdoption-pharmpy-data-print-columns"], [302, "cmdoption-pharmpy-data-print-h"]], "pharmpy-data-reference command line option": [[302, "cmdoption-pharmpy-data-reference-arg-colname"], [302, "cmdoption-pharmpy-data-reference-arg-file"], [302, "cmdoption-pharmpy-data-reference-f"], [302, "cmdoption-pharmpy-data-reference-h"], [302, "cmdoption-pharmpy-data-reference-o"]], "pharmpy-data-resample command line option": [[302, "cmdoption-pharmpy-data-resample-arg-file"], [302, "cmdoption-pharmpy-data-resample-group"], [302, "cmdoption-pharmpy-data-resample-h"], [302, "cmdoption-pharmpy-data-resample-replace"], [302, "cmdoption-pharmpy-data-resample-resamples"], [302, "cmdoption-pharmpy-data-resample-sample_size"], [302, "cmdoption-pharmpy-data-resample-seed"], [302, "cmdoption-pharmpy-data-resample-stratify"]], "pharmpy-data-write command line option": [[302, "cmdoption-pharmpy-data-write-arg-file"], [302, "cmdoption-pharmpy-data-write-f"], [302, "cmdoption-pharmpy-data-write-h"], [302, "cmdoption-pharmpy-data-write-o"]], "pharmpy-info command line option": [[302, "cmdoption-pharmpy-info-h"]], "pharmpy-model command line option": [[302, "cmdoption-pharmpy-model-h"]], "pharmpy-model-absorption_rate command line option": [[302, "cmdoption-pharmpy-model-absorption_rate-arg-file"], [302, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [302, "cmdoption-pharmpy-model-absorption_rate-f"], [302, "cmdoption-pharmpy-model-absorption_rate-h"], [302, "cmdoption-pharmpy-model-absorption_rate-o"]], "pharmpy-model-add_cov_effect command line option": [[302, "cmdoption-pharmpy-model-add_cov_effect-arg-covariate"], [302, "cmdoption-pharmpy-model-add_cov_effect-arg-effect"], [302, "cmdoption-pharmpy-model-add_cov_effect-arg-file"], [302, "cmdoption-pharmpy-model-add_cov_effect-arg-param"], [302, "cmdoption-pharmpy-model-add_cov_effect-f"], [302, "cmdoption-pharmpy-model-add_cov_effect-h"], [302, "cmdoption-pharmpy-model-add_cov_effect-o"], [302, "cmdoption-pharmpy-model-add_cov_effect-operation"]], "pharmpy-model-add_iiv command line option": [[302, "cmdoption-pharmpy-model-add_iiv-arg-expression"], [302, "cmdoption-pharmpy-model-add_iiv-arg-file"], [302, "cmdoption-pharmpy-model-add_iiv-arg-param"], [302, "cmdoption-pharmpy-model-add_iiv-eta_name"], [302, "cmdoption-pharmpy-model-add_iiv-f"], [302, "cmdoption-pharmpy-model-add_iiv-h"], [302, "cmdoption-pharmpy-model-add_iiv-o"], [302, "cmdoption-pharmpy-model-add_iiv-operation"]], "pharmpy-model-add_iov command line option": [[302, "cmdoption-pharmpy-model-add_iov-arg-file"], [302, "cmdoption-pharmpy-model-add_iov-arg-occ"], [302, "cmdoption-pharmpy-model-add_iov-eta_names"], [302, "cmdoption-pharmpy-model-add_iov-etas"], [302, "cmdoption-pharmpy-model-add_iov-f"], [302, "cmdoption-pharmpy-model-add_iov-h"], [302, "cmdoption-pharmpy-model-add_iov-o"]], "pharmpy-model-boxcox command line option": [[302, "cmdoption-pharmpy-model-boxcox-arg-file"], [302, "cmdoption-pharmpy-model-boxcox-etas"], [302, "cmdoption-pharmpy-model-boxcox-f"], [302, "cmdoption-pharmpy-model-boxcox-h"], [302, "cmdoption-pharmpy-model-boxcox-o"]], "pharmpy-model-create_joint_distribution command line option": [[302, "cmdoption-pharmpy-model-create_joint_distribution-arg-file"], [302, "cmdoption-pharmpy-model-create_joint_distribution-etas"], [302, "cmdoption-pharmpy-model-create_joint_distribution-f"], [302, "cmdoption-pharmpy-model-create_joint_distribution-h"], [302, "cmdoption-pharmpy-model-create_joint_distribution-o"]], "pharmpy-model-elimination_rate command line option": [[302, "cmdoption-pharmpy-model-elimination_rate-arg-file"], [302, "cmdoption-pharmpy-model-elimination_rate-arg-rate"], [302, "cmdoption-pharmpy-model-elimination_rate-f"], [302, "cmdoption-pharmpy-model-elimination_rate-h"], [302, "cmdoption-pharmpy-model-elimination_rate-o"]], "pharmpy-model-error command line option": [[302, "cmdoption-pharmpy-model-error-arg-error_type"], [302, "cmdoption-pharmpy-model-error-arg-file"], [302, "cmdoption-pharmpy-model-error-f"], [302, "cmdoption-pharmpy-model-error-h"], [302, "cmdoption-pharmpy-model-error-o"]], "pharmpy-model-iiv_on_ruv command line option": [[302, "cmdoption-pharmpy-model-iiv_on_ruv-arg-file"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-eps"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-eta_names"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-f"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-h"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-o"], [302, "cmdoption-pharmpy-model-iiv_on_ruv-same_eta"]], "pharmpy-model-john_draper command line option": [[302, "cmdoption-pharmpy-model-john_draper-arg-file"], [302, "cmdoption-pharmpy-model-john_draper-etas"], [302, "cmdoption-pharmpy-model-john_draper-f"], [302, "cmdoption-pharmpy-model-john_draper-h"], [302, "cmdoption-pharmpy-model-john_draper-o"]], "pharmpy-model-peripheral_compartments command line option": [[302, "cmdoption-pharmpy-model-peripheral_compartments-arg-file"], [302, "cmdoption-pharmpy-model-peripheral_compartments-arg-n"], [302, "cmdoption-pharmpy-model-peripheral_compartments-f"], [302, "cmdoption-pharmpy-model-peripheral_compartments-h"], [302, "cmdoption-pharmpy-model-peripheral_compartments-o"]], "pharmpy-model-power_on_ruv command line option": [[302, "cmdoption-pharmpy-model-power_on_ruv-arg-file"], [302, "cmdoption-pharmpy-model-power_on_ruv-eps"], [302, "cmdoption-pharmpy-model-power_on_ruv-f"], [302, "cmdoption-pharmpy-model-power_on_ruv-h"], [302, "cmdoption-pharmpy-model-power_on_ruv-o"]], "pharmpy-model-print command line option": [[302, "cmdoption-pharmpy-model-print-arg-file"], [302, "cmdoption-pharmpy-model-print-explicit-odes"], [302, "cmdoption-pharmpy-model-print-h"]], "pharmpy-model-remove_iiv command line option": [[302, "cmdoption-pharmpy-model-remove_iiv-arg-file"], [302, "cmdoption-pharmpy-model-remove_iiv-f"], [302, "cmdoption-pharmpy-model-remove_iiv-h"], [302, "cmdoption-pharmpy-model-remove_iiv-o"], [302, "cmdoption-pharmpy-model-remove_iiv-to_remove"]], "pharmpy-model-remove_iov command line option": [[302, "cmdoption-pharmpy-model-remove_iov-arg-file"], [302, "cmdoption-pharmpy-model-remove_iov-f"], [302, "cmdoption-pharmpy-model-remove_iov-h"], [302, "cmdoption-pharmpy-model-remove_iov-o"]], "pharmpy-model-sample command line option": [[302, "cmdoption-pharmpy-model-sample-arg-file"], [302, "cmdoption-pharmpy-model-sample-h"], [302, "cmdoption-pharmpy-model-sample-samples"], [302, "cmdoption-pharmpy-model-sample-seed"]], "pharmpy-model-tdist command line option": [[302, "cmdoption-pharmpy-model-tdist-arg-file"], [302, "cmdoption-pharmpy-model-tdist-etas"], [302, "cmdoption-pharmpy-model-tdist-f"], [302, "cmdoption-pharmpy-model-tdist-h"], [302, "cmdoption-pharmpy-model-tdist-o"]], "pharmpy-model-transit_compartments command line option": [[302, "cmdoption-pharmpy-model-transit_compartments-arg-file"], [302, "cmdoption-pharmpy-model-transit_compartments-arg-n"], [302, "cmdoption-pharmpy-model-transit_compartments-f"], [302, "cmdoption-pharmpy-model-transit_compartments-h"], [302, "cmdoption-pharmpy-model-transit_compartments-o"]], "pharmpy-model-update_inits command line option": [[302, "cmdoption-pharmpy-model-update_inits-arg-file"], [302, "cmdoption-pharmpy-model-update_inits-f"], [302, "cmdoption-pharmpy-model-update_inits-h"], [302, "cmdoption-pharmpy-model-update_inits-o"]], "pharmpy-results command line option": [[302, "cmdoption-pharmpy-results-h"]], "pharmpy-results-bootstrap command line option": [[302, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [302, "cmdoption-pharmpy-results-bootstrap-h"]], "pharmpy-results-cdd command line option": [[302, "cmdoption-pharmpy-results-cdd-arg-psn"], [302, "cmdoption-pharmpy-results-cdd-h"]], "pharmpy-results-frem command line option": [[302, "cmdoption-pharmpy-results-frem-arg-psn"], [302, "cmdoption-pharmpy-results-frem-force_posdef_covmatrix"], [302, "cmdoption-pharmpy-results-frem-force_posdef_samples"], [302, "cmdoption-pharmpy-results-frem-h"], [302, "cmdoption-pharmpy-results-frem-method"]], "pharmpy-results-linearize command line option": [[302, "cmdoption-pharmpy-results-linearize-arg-psn"], [302, "cmdoption-pharmpy-results-linearize-h"]], "pharmpy-results-ofv command line option": [[302, "cmdoption-pharmpy-results-ofv-arg-file"], [302, "cmdoption-pharmpy-results-ofv-h"]], "pharmpy-results-print command line option": [[302, "cmdoption-pharmpy-results-print-arg-file"], [302, "cmdoption-pharmpy-results-print-h"]], "pharmpy-results-qa command line option": [[302, "cmdoption-pharmpy-results-qa-arg-psn"], [302, "cmdoption-pharmpy-results-qa-h"]], "pharmpy-results-report command line option": [[302, "cmdoption-pharmpy-results-report-arg-psn"], [302, "cmdoption-pharmpy-results-report-h"]], "pharmpy-results-ruvsearch command line option": [[302, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [302, "cmdoption-pharmpy-results-ruvsearch-h"]], "pharmpy-results-scm command line option": [[302, "cmdoption-pharmpy-results-scm-arg-psn"], [302, "cmdoption-pharmpy-results-scm-h"]], "pharmpy-results-simeval command line option": [[302, "cmdoption-pharmpy-results-simeval-arg-psn"], [302, "cmdoption-pharmpy-results-simeval-h"]], "pharmpy-results-summary command line option": [[302, "cmdoption-pharmpy-results-summary-arg-file"], [302, "cmdoption-pharmpy-results-summary-h"]], "pharmpy-run command line option": [[302, "cmdoption-pharmpy-run-h"]], "pharmpy-run-allometry command line option": [[302, "cmdoption-pharmpy-run-allometry-allometric_variable"], [302, "cmdoption-pharmpy-run-allometry-arg-file"], [302, "cmdoption-pharmpy-run-allometry-h"], [302, "cmdoption-pharmpy-run-allometry-initials"], [302, "cmdoption-pharmpy-run-allometry-lower_bounds"], [302, "cmdoption-pharmpy-run-allometry-non_fixed"], [302, "cmdoption-pharmpy-run-allometry-parameters"], [302, "cmdoption-pharmpy-run-allometry-path"], [302, "cmdoption-pharmpy-run-allometry-reference_value"], [302, "cmdoption-pharmpy-run-allometry-upper_bounds"]], "pharmpy-run-amd command line option": [[302, "cmdoption-pharmpy-run-amd-administration"], [302, "cmdoption-pharmpy-run-amd-allometric_variable"], [302, "cmdoption-pharmpy-run-amd-arg-input_path"], [302, "cmdoption-pharmpy-run-amd-cl_init"], [302, "cmdoption-pharmpy-run-amd-h"], [302, "cmdoption-pharmpy-run-amd-lloq_limit"], [302, "cmdoption-pharmpy-run-amd-lloq_method"], [302, "cmdoption-pharmpy-run-amd-mat_init"], [302, "cmdoption-pharmpy-run-amd-modeltype"], [302, "cmdoption-pharmpy-run-amd-occasion"], [302, "cmdoption-pharmpy-run-amd-order"], [302, "cmdoption-pharmpy-run-amd-path"], [302, "cmdoption-pharmpy-run-amd-resume"], [302, "cmdoption-pharmpy-run-amd-search_space"], [302, "cmdoption-pharmpy-run-amd-vc_init"]], "pharmpy-run-bootstrap command line option": [[302, "cmdoption-pharmpy-run-bootstrap-arg-file"], [302, "cmdoption-pharmpy-run-bootstrap-h"], [302, "cmdoption-pharmpy-run-bootstrap-samples"]], "pharmpy-run-covsearch command line option": [[302, "cmdoption-pharmpy-run-covsearch-algorithm"], [302, "cmdoption-pharmpy-run-covsearch-arg-file"], [302, "cmdoption-pharmpy-run-covsearch-effects"], [302, "cmdoption-pharmpy-run-covsearch-h"], [302, "cmdoption-pharmpy-run-covsearch-max_steps"], [302, "cmdoption-pharmpy-run-covsearch-p_backward"], [302, "cmdoption-pharmpy-run-covsearch-p_forward"], [302, "cmdoption-pharmpy-run-covsearch-path"]], "pharmpy-run-estmethod command line option": [[302, "cmdoption-pharmpy-run-estmethod-arg-algorithm"], [302, "cmdoption-pharmpy-run-estmethod-arg-file"], [302, "cmdoption-pharmpy-run-estmethod-h"], [302, "cmdoption-pharmpy-run-estmethod-methods"], [302, "cmdoption-pharmpy-run-estmethod-path"], [302, "cmdoption-pharmpy-run-estmethod-solvers"]], "pharmpy-run-execute command line option": [[302, "cmdoption-pharmpy-run-execute-arg-file"], [302, "cmdoption-pharmpy-run-execute-h"]], "pharmpy-run-iivsearch command line option": [[302, "cmdoption-pharmpy-run-iivsearch-arg-algorithm"], [302, "cmdoption-pharmpy-run-iivsearch-arg-file"], [302, "cmdoption-pharmpy-run-iivsearch-cutoff"], [302, "cmdoption-pharmpy-run-iivsearch-h"], [302, "cmdoption-pharmpy-run-iivsearch-iiv_strategy"], [302, "cmdoption-pharmpy-run-iivsearch-path"], [302, "cmdoption-pharmpy-run-iivsearch-rank_type"]], "pharmpy-run-iovsearch command line option": [[302, "cmdoption-pharmpy-run-iovsearch-arg-file"], [302, "cmdoption-pharmpy-run-iovsearch-column"], [302, "cmdoption-pharmpy-run-iovsearch-cutoff"], [302, "cmdoption-pharmpy-run-iovsearch-distribution"], [302, "cmdoption-pharmpy-run-iovsearch-h"], [302, "cmdoption-pharmpy-run-iovsearch-list_of_parameters"], [302, "cmdoption-pharmpy-run-iovsearch-path"], [302, "cmdoption-pharmpy-run-iovsearch-rank_type"]], "pharmpy-run-modelsearch command line option": [[302, "cmdoption-pharmpy-run-modelsearch-arg-algorithm"], [302, "cmdoption-pharmpy-run-modelsearch-arg-file"], [302, "cmdoption-pharmpy-run-modelsearch-arg-mfl"], [302, "cmdoption-pharmpy-run-modelsearch-cutoff"], [302, "cmdoption-pharmpy-run-modelsearch-h"], [302, "cmdoption-pharmpy-run-modelsearch-iiv_strategy"], [302, "cmdoption-pharmpy-run-modelsearch-path"], [302, "cmdoption-pharmpy-run-modelsearch-rank_type"]], "pharmpy-run-ruvsearch command line option": [[302, "cmdoption-pharmpy-run-ruvsearch-arg-file"], [302, "cmdoption-pharmpy-run-ruvsearch-groups"], [302, "cmdoption-pharmpy-run-ruvsearch-h"], [302, "cmdoption-pharmpy-run-ruvsearch-p_value"], [302, "cmdoption-pharmpy-run-ruvsearch-path"], [302, "cmdoption-pharmpy-run-ruvsearch-skip"]], "psn": [[302, "cmdoption-pharmpy-results-bootstrap-arg-psn"], [302, "cmdoption-pharmpy-results-cdd-arg-psn"], [302, "cmdoption-pharmpy-results-frem-arg-psn"], [302, "cmdoption-pharmpy-results-linearize-arg-psn"], [302, "cmdoption-pharmpy-results-qa-arg-psn"], [302, "cmdoption-pharmpy-results-report-arg-psn"], [302, "cmdoption-pharmpy-results-ruvsearch-arg-psn"], [302, "cmdoption-pharmpy-results-scm-arg-psn"], [302, "cmdoption-pharmpy-results-simeval-arg-psn"]], "rate": [[302, "cmdoption-pharmpy-model-absorption_rate-arg-rate"], [302, "cmdoption-pharmpy-model-elimination_rate-arg-rate"]]}})